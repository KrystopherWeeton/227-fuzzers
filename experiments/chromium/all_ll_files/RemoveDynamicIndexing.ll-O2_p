; ModuleID = '../../third_party/angle/src/compiler/translator/tree_ops/RemoveDynamicIndexing.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/tree_ops/RemoveDynamicIndexing.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sh::ImmutableString" = type { i8*, i64 }
%"struct.sh::StaticType::Helpers::StaticMangledName" = type { [4 x i8] }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector.22" = type opaque
%"class.sh::TInterfaceBlock" = type { %"class.sh::TSymbol.base", %"class.sh::TFieldListCollection", i32, i32 }
%"class.sh::TSymbol.base" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8 }>
%"class.sh::TSymbolUniqueId" = type { i32 }
%"class.sh::TFieldListCollection" = type { %"class.sh::TVector.23"*, i64, i32, %"class.std::__1::basic_string.24" }
%"class.sh::TVector.23" = type opaque
%"class.std::__1::basic_string.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon.27 }
%union.anon.27 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TStructure" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TFieldListCollection", i8, [7 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.sh::TCompiler" = type { %"class.sh::TShHandleBase", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.8", %"class.std::__1::vector.8", %"class.std::__1::vector.8", %"struct.sh::ValidateASTOptions", %"class.angle::BitSetT", i8, i8, i32, i32, i32, %"class.sh::CallDAG", %"class.std::__1::vector.59", %struct.ShBuiltInResources, %"class.std::__1::basic_string", %"class.sh::TSymbolTable", %"class.std::__1::map.90", %"class.sh::ArrayBoundsClamper", %"class.sh::BuiltInFunctionEmulator", i32, %"class.sh::TInfoSink", %"class.sh::TDiagnostics", i8*, i8, i8, i8, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::map.124", %struct.TPragma, i64 }
%"class.sh::TShHandleBase" = type { i32 (...)**, %"class.angle::PoolAllocator" }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.3" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.117", i8, i8, %"class.std::__1::vector.1", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::vector.117" = type { %"class.std::__1::__vector_base.118" }
%"class.std::__1::__vector_base.118" = type { i32*, i32*, %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { i32* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.sh::ShaderVariable"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.15" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.1" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.sh::InterfaceBlock"* }
%"struct.sh::ValidateASTOptions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.angle::BitSetT" = type { i32 }
%"class.sh::CallDAG" = type { %"class.std::__1::vector.20", %"class.std::__1::map" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.sh::CallDAG::Record"*, %"struct.sh::CallDAG::Record"*, %"class.std::__1::__compressed_pair.46" }
%"struct.sh::CallDAG::Record" = type { %"class.sh::TIntermFunctionDefinition"*, %"class.std::__1::vector.39" }
%"class.sh::TIntermFunctionDefinition" = type { %"class.sh::TIntermNode", %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermNode" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.sh::TIntermFunctionPrototype" = type { %"class.sh::TIntermTyped", %"class.sh::TFunction"* }
%"class.sh::TIntermTyped" = type { %"class.sh::TIntermNode" }
%"class.sh::TFunction" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TVector"*, %"class.sh::TVariable"**, i64, %"class.sh::TType"*, %"class.sh::ImmutableString", i8, i8, i8, i8, [4 x i8] }>
%"class.sh::TVector" = type opaque
%"class.sh::TVariable" = type { %"class.sh::TSymbol.base", %"class.sh::TType"*, %"class.sh::TConstantUnion"* }
%"class.sh::TConstantUnion" = type { %union.anon.30, i32 }
%union.anon.30 = type { i32 }
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"class.sh::TIntermBlock" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.31", i8, [7 x i8] }>
%"class.sh::TIntermAggregateBase" = type { i32 (...)** }
%"class.sh::TVector.31" = type { %"class.std::__1::vector.32" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"**, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.sh::TIntermNode"** }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { i32*, i32*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i32* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.sh::CallDAG::Record"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { i64 }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"struct.sh::TCompiler::FunctionMetadata"*, %"struct.sh::TCompiler::FunctionMetadata"*, %"class.std::__1::__compressed_pair.61" }
%"struct.sh::TCompiler::FunctionMetadata" = type { i8 }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.sh::TCompiler::FunctionMetadata"* }
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array", %"struct.std::__1::array", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [3 x i32] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TSymbolTable" = type { %"class.sh::TSymbolTableBase", %"class.std::__1::vector.66", %"class.std::__1::vector.73", i8, i32, i32, i32, %struct.ShBuiltInResources, %"class.std::__1::map.81", %"class.sh::TVariable"* }
%"class.sh::TSymbolTableBase" = type { %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"* }
%"class.sh::TSymbol" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8, i8 }>
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.std::__1::unique_ptr.75"*, %"class.std::__1::unique_ptr.75"*, %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::unique_ptr.75" = type opaque
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.std::__1::unique_ptr.75"* }
%"class.std::__1::map.81" = type { %"class.std::__1::__tree.82" }
%"class.std::__1::__tree.82" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::map.90" = type { %"class.std::__1::__tree.91" }
%"class.std::__1::__tree.91" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.sh::ArrayBoundsClamper" = type <{ i32, i8, [3 x i8] }>
%"class.sh::BuiltInFunctionEmulator" = type { %"class.std::__1::map.101", %"class.std::__1::map", %"class.std::__1::vector.39", %"class.std::__1::vector.110" }
%"class.std::__1::map.101" = type { %"class.std::__1::__tree.102" }
%"class.std::__1::__tree.102" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { i8* (i32)**, i8* (i32)**, %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { i8* (i32)** }
%"class.sh::TInfoSink" = type { %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase" }
%"class.sh::TInfoSinkBase" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.117" }
%"class.sh::TDiagnostics" = type { %"class.angle::pp::Diagnostics", %"class.sh::TInfoSinkBase"*, i32, i32 }
%"class.angle::pp::Diagnostics" = type { i32 (...)** }
%"class.std::__1::map.124" = type { %"class.std::__1::__tree.125" }
%"class.std::__1::__tree.125" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%struct.TPragma = type { i8, i8, i8, %"struct.TPragma::STDGL" }
%"struct.TPragma::STDGL" = type { i8 }
%"class.sh::PerformanceDiagnostics" = type { %"class.sh::TDiagnostics"* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.sh::TIntermBinary"*)* }
%"class.sh::TIntermBinary" = type <{ %"class.sh::TIntermOperator.base", [7 x i8], %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i8, [7 x i8] }>
%"class.sh::TIntermOperator.base" = type <{ %"class.sh::TIntermExpression", i8 }>
%"class.sh::TIntermExpression" = type { %"class.sh::TIntermTyped", %"class.sh::TType" }
%"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser" = type { %"class.sh::TLValueTrackingTraverser.base", %"class.std::__1::map.165", %"class.std::__1::map.165", i8, i8, %"class.std::__1::function", %"class.sh::PerformanceDiagnostics"* }
%"class.sh::TLValueTrackingTraverser.base" = type <{ %"class.sh::TIntermTraverser", i8, i8 }>
%"class.sh::TIntermTraverser" = type { i32 (...)**, i8, i8, i8, i32, i32, i8, %"class.std::__1::vector.137", %"class.sh::TSymbolTable"*, %"class.std::__1::vector.144", %"class.std::__1::vector.151", %"class.sh::TVector.31", %"class.std::__1::vector.158" }
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"class.std::__1::__compressed_pair.139" }
%"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry" = type { %"class.sh::TIntermAggregateBase"*, %"class.sh::TIntermNode"*, %"class.sh::TVector.31" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* }
%"class.std::__1::vector.144" = type { %"class.std::__1::__vector_base.145" }
%"class.std::__1::__vector_base.145" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"class.std::__1::__compressed_pair.146" }
%"struct.sh::TIntermTraverser::NodeInsertMultipleEntry" = type { %"class.sh::TIntermBlock"*, i64, %"class.sh::TVector.31", %"class.sh::TVector.31" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"* }
%"class.std::__1::vector.151" = type { %"class.std::__1::__vector_base.152" }
%"class.std::__1::__vector_base.152" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"class.std::__1::__compressed_pair.153" }
%"struct.sh::TIntermTraverser::NodeUpdateEntry" = type <{ %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"* }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"struct.sh::TIntermTraverser::ParentBlock"*, %"struct.sh::TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.160" }
%"struct.sh::TIntermTraverser::ParentBlock" = type { %"class.sh::TIntermBlock"*, i64 }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.sh::TIntermTraverser::ParentBlock"* }
%"class.std::__1::map.165" = type { %"class.std::__1::__tree.166" }
%"class.std::__1::__tree.166" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.sh::TLValueTrackingTraverser" = type <{ %"class.sh::TIntermTraverser", i8, i8, [6 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.sh::TType", %"class.sh::TFunction"* }
%"class.sh::TIntermSymbol" = type { %"class.sh::TIntermTyped", %"class.sh::TVariable"* }
%"class.sh::TIntermConstantUnion" = type { %"class.sh::TIntermExpression", %"class.sh::TConstantUnion"* }
%"class.sh::TIntermSwizzle" = type <{ %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TVector.176", i8, [7 x i8] }>
%"class.sh::TVector.176" = type { %"class.std::__1::vector.177" }
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { i32*, i32*, %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.sh::TIntermDeclaration" = type { %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.31" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.sh::TIntermAggregate" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.31", i8, i8, %"class.sh::TFunction"* }
%"class.sh::TIntermUnary" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermTyped"*, i8, %"class.sh::TFunction"* }
%"class.sh::TIntermTernary" = type { %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermIfElse" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermSwitch" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermCase" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"* }
%"class.sh::TIntermGlobalQualifierDeclaration" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermSymbol"*, i8, [7 x i8] }>
%"class.sh::TIntermLoop" = type { %"class.sh::TIntermNode", i32, %"class.sh::TIntermNode"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermBranch" = type { %"class.sh::TIntermNode", i8, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermPreprocessorDirective" = type { %"class.sh::TIntermNode", i32, %"class.sh::ImmutableString" }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>

$_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE = comdat any

$_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE = comdat any

$_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE = comdat any

$_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE = comdat any

$_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE = comdat any

$_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE = comdat any

$_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE = comdat any

$_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE = comdat any

$_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE = comdat any

$_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE = comdat any

$_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE = comdat any

$_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE = comdat any

$_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE = comdat any

$_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE = comdat any

$_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE = comdat any

$_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE = comdat any

$_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE = comdat any

$_ZN2sh13TInfoSinkBaselsIiEERS0_RKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISI_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

@_ZTVN2sh12_GLOBAL__N_130RemoveDynamicIndexingTraverserE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"*)* @_ZN2sh12_GLOBAL__N_130RemoveDynamicIndexingTraverserD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"*)* @_ZN2sh12_GLOBAL__N_130RemoveDynamicIndexingTraverserD0Ev to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh12_GLOBAL__N_130RemoveDynamicIndexingTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TLValueTrackingTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh24TLValueTrackingTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TLValueTrackingTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh24TLValueTrackingTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TLValueTrackingTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh24TLValueTrackingTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8
@.str = private unnamed_addr constant [83 x i8] c"Performance: dynamic indexing of vectors and matrices is emulated and can be slow.\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@_ZN2sh12_GLOBAL__N_19kBaseNameE = internal constant %"class.sh::ImmutableString" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i64 4 }, align 8
@_ZN2sh12_GLOBAL__N_110kIndexNameE = internal constant %"class.sh::ImmutableString" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i64 5 }, align 8
@_ZN2sh12_GLOBAL__N_110kValueNameE = internal constant %"class.sh::ImmutableString" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i64 5 }, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"dyn_index_\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"write_\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"mat\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"ivec\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"bvec\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"uvec\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"vec\00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.10 = private unnamed_addr constant [5 x i8] c"base\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@_ZN2sh10StaticType7HelpersL20kMangledNameInstanceILNS_10TBasicTypeE3ELNS_10TPrecisionE3ELNS_10TQualifierE14ELh1ELh1EEE = internal constant %"struct.sh::StaticType::Helpers::StaticMangledName" { [4 x i8] c"00D\00" }, align 1
@_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE3ELNS_10TPrecisionE3ELNS_10TQualifierE14ELh1ELh1EEE = internal global { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* } { i32 3, i32 3, i32 14, i8 0, i8 0, %"struct.sh::TMemoryQualifier" zeroinitializer, { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 } { i32 -1, i32 0, i32 0, i32 0, %"struct.sh::WorkGroupSize" { [3 x i32] [i32 -1, i32 -1, i32 -1] }, i32 -1, i32 -1, i32 0, i32 -1, i8 0, i8 0, i32 0, i32 0, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 -1, i8 0 }, i8 1, i8 1, %"class.sh::TSpan" zeroinitializer, %"class.sh::TVector.22"* null, %"class.sh::TInterfaceBlock"* null, %"class.sh::TStructure"* null, i8 0, i64 0, i8* getelementptr inbounds (%"struct.sh::StaticType::Helpers::StaticMangledName", %"struct.sh::StaticType::Helpers::StaticMangledName"* @_ZN2sh10StaticType7HelpersL20kMangledNameInstanceILNS_10TBasicTypeE3ELNS_10TPrecisionE3ELNS_10TQualifierE14ELh1ELh1EEE, i32 0, i32 0, i32 0) }, align 8
@_ZN2sh10StaticType7HelpersL20kMangledNameInstanceILNS_10TBasicTypeE0ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE = internal constant %"struct.sh::StaticType::Helpers::StaticMangledName" { [4 x i8] c"00A\00" }, align 1
@_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE0ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE = internal global { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* } { i32 0, i32 0, i32 1, i8 0, i8 0, %"struct.sh::TMemoryQualifier" zeroinitializer, { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 } { i32 -1, i32 0, i32 0, i32 0, %"struct.sh::WorkGroupSize" { [3 x i32] [i32 -1, i32 -1, i32 -1] }, i32 -1, i32 -1, i32 0, i32 -1, i8 0, i8 0, i32 0, i32 0, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 -1, i8 0 }, i8 1, i8 1, %"class.sh::TSpan" zeroinitializer, %"class.sh::TVector.22"* null, %"class.sh::TInterfaceBlock"* null, %"class.sh::TStructure"* null, i8 0, i64 0, i8* getelementptr inbounds (%"struct.sh::StaticType::Helpers::StaticMangledName", %"struct.sh::StaticType::Helpers::StaticMangledName"* @_ZN2sh10StaticType7HelpersL20kMangledNameInstanceILNS_10TBasicTypeE0ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE, i32 0, i32 0, i32 0) }, align 8
@.str.15 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@_ZTVN2sh12TIntermBlockE = external unnamed_addr constant { [31 x i8*], [6 x i8*] }, align 8
@_ZTVN2sh20TIntermConstantUnionE = external unnamed_addr constant { [34 x i8*] }, align 8
@_ZTVN2sh11TIntermCaseE = external unnamed_addr constant { [29 x i8*] }, align 8
@_ZTVN2sh13TIntermBranchE = external unnamed_addr constant { [29 x i8*] }, align 8
@_ZTVN2sh25TIntermFunctionDefinitionE = external unnamed_addr constant { [29 x i8*] }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2sh44RemoveDynamicIndexingOfNonSSBOVectorOrMatrixEPNS4_9TCompilerEPNS4_11TIntermNodeEPNS4_12TSymbolTableEPNS4_22PerformanceDiagnosticsEE3$_0FbPNS4_13TIntermBinaryEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2sh37RemoveDynamicIndexingOfSwizzledVectorEPNS4_9TCompilerEPNS4_11TIntermNodeEPNS4_12TSymbolTableEPNS4_22PerformanceDiagnosticsEE3$_1FbPNS4_13TIntermBinaryEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@switch.table._ZN2sh12_GLOBAL__N_120GetIndexFunctionNameERKNS_5TTypeEb = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh44RemoveDynamicIndexingOfNonSSBOVectorOrMatrixEPNS_9TCompilerEPNS_11TIntermNodeEPNS_12TSymbolTableEPNS_22PerformanceDiagnosticsE(%"class.sh::TCompiler"*, %"class.sh::TIntermNode"*, %"class.sh::TSymbolTable"*, %"class.sh::PerformanceDiagnostics"*) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::function", align 8
  %6 = bitcast %"class.std::__1::function"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 2
  %9 = bitcast %"class.std::__1::function"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.sh::TIntermBinary"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN2sh13TIntermBinaryEEE11__call_implINS0_20__default_alloc_funcIZNS2_44RemoveDynamicIndexingOfNonSSBOVectorOrMatrixEPNS2_9TCompilerEPNS2_11TIntermNodeEPNS2_12TSymbolTableEPNS2_22PerformanceDiagnosticsEE3$_0S5_EEEEbPKNS0_16__policy_storageES4_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.sh::TIntermBinary"*)** %7, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2sh44RemoveDynamicIndexingOfNonSSBOVectorOrMatrixEPNS4_9TCompilerEPNS4_11TIntermNodeEPNS4_12TSymbolTableEPNS4_22PerformanceDiagnosticsEE3$_0FbPNS4_13TIntermBinaryEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %8, align 8
  %10 = call fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_123RemoveDynamicIndexingIfEONSt3__18functionIFbPNS_13TIntermBinaryEEEEPNS_9TCompilerEPNS_11TIntermNodeEPNS_12TSymbolTableEPNS_22PerformanceDiagnosticsE(%"class.std::__1::function"* nonnull dereferenceable(32) %5, %"class.sh::TCompiler"* %0, %"class.sh::TIntermNode"* %1, %"class.sh::TSymbolTable"* %2, %"class.sh::PerformanceDiagnostics"* %3)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #8
  ret i1 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_123RemoveDynamicIndexingIfEONSt3__18functionIFbPNS_13TIntermBinaryEEEEPNS_9TCompilerEPNS_11TIntermNodeEPNS_12TSymbolTableEPNS_22PerformanceDiagnosticsE(%"class.std::__1::function"* nocapture readonly dereferenceable(32), %"class.sh::TCompiler"*, %"class.sh::TIntermNode"*, %"class.sh::TSymbolTable"*, %"class.sh::PerformanceDiagnostics"*) unnamed_addr #0 {
  %6 = alloca %"class.sh::TVector.31", align 8
  %7 = alloca %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", align 8
  %8 = bitcast %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 256, i1 false)
  %9 = bitcast %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7 to %"class.sh::TLValueTrackingTraverser"*
  call void @_ZN2sh24TLValueTrackingTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TLValueTrackingTraverser"* nonnull %9, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* %3) #8
  %10 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_130RemoveDynamicIndexingTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %13 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_node_base"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"** %13, align 8
  %15 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %17 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node_base"** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"** %17, align 8
  %19 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 3
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 4
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 5
  %22 = bitcast %"class.std::__1::function"* %21 to i8*
  %23 = bitcast %"class.std::__1::function"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false) #8
  %24 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 5, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::__function::__policy_invoker"* %25 to i64*
  %27 = bitcast %"struct.std::__1::__function::__policy_invoker"* %24 to i64*
  %28 = load i64, i64* %26, align 8
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 5, i32 0, i32 2
  %30 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 2
  %31 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %30, align 8
  store %"struct.std::__1::__function::__policy"* %31, %"struct.std::__1::__function::__policy"** %29, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %31, i64 0, i32 0
  %33 = load i8* (i8*)*, i8* (i8*)** %32, align 8
  %34 = icmp eq i8* (i8*)* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %5
  %36 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = call i8* %33(i8* %37) #8
  %39 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %21, i64 0, i32 0, i32 0, i32 0
  store i8* %38, i8** %39, align 8
  br label %40

40:                                               ; preds = %5, %35
  %41 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 6
  store %"class.sh::PerformanceDiagnostics"* %4, %"class.sh::PerformanceDiagnostics"** %41, align 8
  %42 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 0, i32 0
  %43 = bitcast %"class.sh::TIntermNode"* %2 to void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)***
  br label %44

44:                                               ; preds = %49, %40
  store i8 0, i8* %19, align 8
  store i8 0, i8* %20, align 1
  %45 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)**, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*** %43, align 8
  %46 = getelementptr inbounds void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %45, i64 2
  %47 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %46, align 8
  call void %47(%"class.sh::TIntermNode"* %2, %"class.sh::TIntermTraverser"* nonnull %42) #8
  %48 = call zeroext i1 @_ZN2sh16TIntermTraverser10updateTreeEPNS_9TCompilerEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"* nonnull %42, %"class.sh::TCompiler"* %1, %"class.sh::TIntermNode"* %2) #8
  br i1 %48, label %49, label %606

49:                                               ; preds = %44
  %50 = load i8, i8* %19, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %44

52:                                               ; preds = %49
  %53 = bitcast %"class.sh::TIntermNode"* %2 to %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)***
  %54 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*** %53, align 8
  %55 = getelementptr inbounds %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %54, i64 8
  %56 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %55, align 8
  %57 = call %"class.sh::TIntermBlock"* %56(%"class.sh::TIntermNode"* %2) #8
  %58 = bitcast %"class.sh::TVector.31"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #8
  %59 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %6, i64 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %6, i64 0, i32 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #8
  %62 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %62, %12
  br i1 %63, label %68, label %64

64:                                               ; preds = %52
  %65 = bitcast %"class.sh::TIntermNode"*** %60 to i64*
  %66 = bitcast %"class.sh::TVector.31"* %6 to i64*
  %67 = bitcast %"class.sh::TIntermNode"*** %61 to i64*
  br label %76

68:                                               ; preds = %332, %52
  %69 = phi %"class.sh::TIntermNode"** [ null, %52 ], [ %304, %332 ]
  %70 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %17, align 8
  %71 = icmp eq %"class.std::__1::__tree_end_node"* %70, %16
  br i1 %71, label %337, label %72

72:                                               ; preds = %68
  %73 = bitcast %"class.sh::TIntermNode"*** %60 to i64*
  %74 = bitcast %"class.sh::TVector.31"* %6 to i64*
  %75 = bitcast %"class.sh::TIntermNode"*** %61 to i64*
  br label %345

76:                                               ; preds = %335, %64
  %77 = phi %"class.sh::TIntermNode"** [ null, %64 ], [ %336, %335 ]
  %78 = phi %"class.sh::TIntermNode"** [ null, %64 ], [ %304, %335 ]
  %79 = phi %"class.std::__1::__tree_end_node"* [ %62, %64 ], [ %333, %335 ]
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 4
  %81 = bitcast %"class.std::__1::__tree_end_node"* %80 to %"class.sh::TType"*
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 27
  %83 = bitcast %"class.std::__1::__tree_end_node"* %82 to %"class.sh::TFunction"**
  %84 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %83, align 8
  %85 = call fastcc %"class.sh::TIntermFunctionDefinition"* @_ZN2sh12_GLOBAL__N_126GetIndexFunctionDefinitionERKNS_5TTypeEbRKNS_9TFunctionEPNS_12TSymbolTableE(%"class.sh::TType"* dereferenceable(184) %81, i1 zeroext false, %"class.sh::TFunction"* dereferenceable(80) %84) #8
  %86 = ptrtoint %"class.sh::TIntermFunctionDefinition"* %85 to i64
  %87 = icmp ult %"class.sh::TIntermNode"** %78, %77
  %88 = ptrtoint %"class.sh::TIntermNode"** %77 to i64
  br i1 %87, label %89, label %93

89:                                               ; preds = %76
  %90 = bitcast %"class.sh::TIntermNode"** %78 to i64*
  store i64 %86, i64* %90, align 8
  %91 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %78, i64 1
  %92 = ptrtoint %"class.sh::TIntermNode"** %91 to i64
  store i64 %92, i64* %65, align 8
  br label %303

93:                                               ; preds = %76
  %94 = ptrtoint %"class.sh::TIntermNode"** %78 to i64
  %95 = load i64, i64* %66, align 8
  %96 = sub i64 %94, %95
  %97 = ashr exact i64 %96, 3
  %98 = add nsw i64 %97, 1
  %99 = icmp ugt i64 %98, 2305843009213693951
  br i1 %99, label %100, label %102

100:                                              ; preds = %93
  %101 = bitcast %"class.sh::TVector.31"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %101) #9
  unreachable

102:                                              ; preds = %93
  %103 = sub i64 %88, %95
  %104 = ashr exact i64 %103, 3
  %105 = icmp ult i64 %104, 1152921504606846975
  br i1 %105, label %106, label %111

106:                                              ; preds = %102
  %107 = ashr exact i64 %103, 2
  %108 = icmp ult i64 %107, %98
  %109 = select i1 %108, i64 %98, i64 %107
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %117, label %111

111:                                              ; preds = %106, %102
  %112 = phi i64 [ %109, %106 ], [ 2305843009213693951, %102 ]
  %113 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %114 = shl i64 %112, 3
  %115 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %113, i64 %114) #8
  %116 = bitcast i8* %115 to %"class.sh::TIntermNode"**
  br label %117

117:                                              ; preds = %111, %106
  %118 = phi i64 [ %112, %111 ], [ 0, %106 ]
  %119 = phi %"class.sh::TIntermNode"** [ %116, %111 ], [ null, %106 ]
  %120 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %119, i64 %97
  %121 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %119, i64 %118
  %122 = ptrtoint %"class.sh::TIntermNode"** %121 to i64
  %123 = bitcast %"class.sh::TIntermNode"** %120 to i64*
  store i64 %86, i64* %123, align 8
  %124 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %120, i64 1
  %125 = ptrtoint %"class.sh::TIntermNode"** %124 to i64
  %126 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %59, align 8
  %127 = ptrtoint %"class.sh::TIntermNode"** %126 to i64
  %128 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %60, align 8
  %129 = icmp eq %"class.sh::TIntermNode"** %128, %126
  br i1 %129, label %300, label %130

130:                                              ; preds = %117
  %131 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %128, i64 -1
  %132 = ptrtoint %"class.sh::TIntermNode"** %131 to i64
  %133 = sub i64 %132, %127
  %134 = lshr i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = icmp ult i64 %135, 4
  br i1 %136, label %230, label %137

137:                                              ; preds = %130
  %138 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %119, i64 -1
  %139 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %128, i64 -1
  %140 = ptrtoint %"class.sh::TIntermNode"** %139 to i64
  %141 = sub i64 %140, %127
  %142 = lshr i64 %141, 3
  %143 = sub nsw i64 %97, %142
  %144 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %138, i64 %143
  %145 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %128, i64 -1
  %146 = sub nsw i64 0, %142
  %147 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %145, i64 %146
  %148 = icmp ult %"class.sh::TIntermNode"** %144, %128
  %149 = icmp ult %"class.sh::TIntermNode"** %147, %120
  %150 = and i1 %148, %149
  br i1 %150, label %230, label %151

151:                                              ; preds = %137
  %152 = and i64 %135, 4611686018427387900
  %153 = sub nsw i64 0, %152
  %154 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %120, i64 %153
  %155 = sub nsw i64 0, %152
  %156 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %128, i64 %155
  %157 = add nsw i64 %152, -4
  %158 = lshr exact i64 %157, 2
  %159 = add nuw nsw i64 %158, 1
  %160 = and i64 %159, 1
  %161 = icmp eq i64 %157, 0
  br i1 %161, label %206, label %162

162:                                              ; preds = %151
  %163 = sub nuw nsw i64 %159, %160
  %164 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %120, i64 -1
  %165 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %128, i64 -1
  %166 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %120, i64 -1
  %167 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %128, i64 -1
  br label %168

168:                                              ; preds = %168, %162
  %169 = phi i64 [ 0, %162 ], [ %203, %168 ]
  %170 = phi i64 [ %163, %162 ], [ %204, %168 ]
  %171 = sub i64 0, %169
  %172 = sub i64 0, %169
  %173 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %164, i64 %171
  %174 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %165, i64 %172
  %175 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %174, i64 -1
  %176 = bitcast %"class.sh::TIntermNode"** %175 to <2 x i64>*
  %177 = load <2 x i64>, <2 x i64>* %176, align 8, !alias.scope !3
  %178 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %174, i64 -2
  %179 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %178, i64 -1
  %180 = bitcast %"class.sh::TIntermNode"** %179 to <2 x i64>*
  %181 = load <2 x i64>, <2 x i64>* %180, align 8, !alias.scope !3
  %182 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %173, i64 -1
  %183 = bitcast %"class.sh::TIntermNode"** %182 to <2 x i64>*
  store <2 x i64> %177, <2 x i64>* %183, align 8, !alias.scope !6, !noalias !3
  %184 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %173, i64 -2
  %185 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %184, i64 -1
  %186 = bitcast %"class.sh::TIntermNode"** %185 to <2 x i64>*
  store <2 x i64> %181, <2 x i64>* %186, align 8, !alias.scope !6, !noalias !3
  %187 = sub nuw nsw i64 -4, %169
  %188 = sub nuw nsw i64 -4, %169
  %189 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %166, i64 %187
  %190 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %167, i64 %188
  %191 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %190, i64 -1
  %192 = bitcast %"class.sh::TIntermNode"** %191 to <2 x i64>*
  %193 = load <2 x i64>, <2 x i64>* %192, align 8, !alias.scope !3
  %194 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %190, i64 -2
  %195 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %194, i64 -1
  %196 = bitcast %"class.sh::TIntermNode"** %195 to <2 x i64>*
  %197 = load <2 x i64>, <2 x i64>* %196, align 8, !alias.scope !3
  %198 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %189, i64 -1
  %199 = bitcast %"class.sh::TIntermNode"** %198 to <2 x i64>*
  store <2 x i64> %193, <2 x i64>* %199, align 8, !alias.scope !6, !noalias !3
  %200 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %189, i64 -2
  %201 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %200, i64 -1
  %202 = bitcast %"class.sh::TIntermNode"** %201 to <2 x i64>*
  store <2 x i64> %197, <2 x i64>* %202, align 8, !alias.scope !6, !noalias !3
  %203 = add i64 %169, 8
  %204 = add i64 %170, -2
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %168, !llvm.loop !8

206:                                              ; preds = %168, %151
  %207 = phi i64 [ 0, %151 ], [ %203, %168 ]
  %208 = icmp eq i64 %160, 0
  br i1 %208, label %228, label %209

209:                                              ; preds = %206
  %210 = sub i64 0, %207
  %211 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %120, i64 -1
  %212 = sub i64 0, %207
  %213 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %128, i64 -1
  %214 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %211, i64 %210
  %215 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %213, i64 %212
  %216 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %215, i64 -1
  %217 = bitcast %"class.sh::TIntermNode"** %216 to <2 x i64>*
  %218 = load <2 x i64>, <2 x i64>* %217, align 8, !alias.scope !3
  %219 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %215, i64 -2
  %220 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %219, i64 -1
  %221 = bitcast %"class.sh::TIntermNode"** %220 to <2 x i64>*
  %222 = load <2 x i64>, <2 x i64>* %221, align 8, !alias.scope !3
  %223 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %214, i64 -1
  %224 = bitcast %"class.sh::TIntermNode"** %223 to <2 x i64>*
  store <2 x i64> %218, <2 x i64>* %224, align 8, !alias.scope !6, !noalias !3
  %225 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %214, i64 -2
  %226 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %225, i64 -1
  %227 = bitcast %"class.sh::TIntermNode"** %226 to <2 x i64>*
  store <2 x i64> %222, <2 x i64>* %227, align 8, !alias.scope !6, !noalias !3
  br label %228

228:                                              ; preds = %206, %209
  %229 = icmp eq i64 %135, %152
  br i1 %229, label %300, label %230

230:                                              ; preds = %228, %137, %130
  %231 = phi %"class.sh::TIntermNode"** [ %120, %137 ], [ %120, %130 ], [ %154, %228 ]
  %232 = phi %"class.sh::TIntermNode"** [ %128, %137 ], [ %128, %130 ], [ %156, %228 ]
  %233 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %232, i64 -1
  %234 = ptrtoint %"class.sh::TIntermNode"** %233 to i64
  %235 = sub i64 %234, %127
  %236 = lshr i64 %235, 3
  %237 = add nuw nsw i64 %236, 1
  %238 = and i64 %237, 7
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %251, label %240

240:                                              ; preds = %230, %240
  %241 = phi %"class.sh::TIntermNode"** [ %244, %240 ], [ %231, %230 ]
  %242 = phi %"class.sh::TIntermNode"** [ %245, %240 ], [ %232, %230 ]
  %243 = phi i64 [ %249, %240 ], [ %238, %230 ]
  %244 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %241, i64 -1
  %245 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %242, i64 -1
  %246 = bitcast %"class.sh::TIntermNode"** %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"class.sh::TIntermNode"** %244 to i64*
  store i64 %247, i64* %248, align 8
  %249 = add i64 %243, -1
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %240, !llvm.loop !10

251:                                              ; preds = %240, %230
  %252 = phi %"class.sh::TIntermNode"** [ undef, %230 ], [ %244, %240 ]
  %253 = phi %"class.sh::TIntermNode"** [ %231, %230 ], [ %244, %240 ]
  %254 = phi %"class.sh::TIntermNode"** [ %232, %230 ], [ %245, %240 ]
  %255 = icmp ult i64 %235, 56
  br i1 %255, label %300, label %256

256:                                              ; preds = %251, %256
  %257 = phi %"class.sh::TIntermNode"** [ %294, %256 ], [ %253, %251 ]
  %258 = phi %"class.sh::TIntermNode"** [ %295, %256 ], [ %254, %251 ]
  %259 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %257, i64 -1
  %260 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %258, i64 -1
  %261 = bitcast %"class.sh::TIntermNode"** %260 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = bitcast %"class.sh::TIntermNode"** %259 to i64*
  store i64 %262, i64* %263, align 8
  %264 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %257, i64 -2
  %265 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %258, i64 -2
  %266 = bitcast %"class.sh::TIntermNode"** %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"class.sh::TIntermNode"** %264 to i64*
  store i64 %267, i64* %268, align 8
  %269 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %257, i64 -3
  %270 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %258, i64 -3
  %271 = bitcast %"class.sh::TIntermNode"** %270 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = bitcast %"class.sh::TIntermNode"** %269 to i64*
  store i64 %272, i64* %273, align 8
  %274 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %257, i64 -4
  %275 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %258, i64 -4
  %276 = bitcast %"class.sh::TIntermNode"** %275 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = bitcast %"class.sh::TIntermNode"** %274 to i64*
  store i64 %277, i64* %278, align 8
  %279 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %257, i64 -5
  %280 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %258, i64 -5
  %281 = bitcast %"class.sh::TIntermNode"** %280 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast %"class.sh::TIntermNode"** %279 to i64*
  store i64 %282, i64* %283, align 8
  %284 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %257, i64 -6
  %285 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %258, i64 -6
  %286 = bitcast %"class.sh::TIntermNode"** %285 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = bitcast %"class.sh::TIntermNode"** %284 to i64*
  store i64 %287, i64* %288, align 8
  %289 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %257, i64 -7
  %290 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %258, i64 -7
  %291 = bitcast %"class.sh::TIntermNode"** %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = bitcast %"class.sh::TIntermNode"** %289 to i64*
  store i64 %292, i64* %293, align 8
  %294 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %257, i64 -8
  %295 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %258, i64 -8
  %296 = bitcast %"class.sh::TIntermNode"** %295 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = bitcast %"class.sh::TIntermNode"** %294 to i64*
  store i64 %297, i64* %298, align 8
  %299 = icmp eq %"class.sh::TIntermNode"** %295, %126
  br i1 %299, label %300, label %256, !llvm.loop !12

300:                                              ; preds = %251, %256, %228, %117
  %301 = phi %"class.sh::TIntermNode"** [ %120, %117 ], [ %154, %228 ], [ %252, %251 ], [ %294, %256 ]
  %302 = ptrtoint %"class.sh::TIntermNode"** %301 to i64
  store i64 %302, i64* %66, align 8
  store i64 %125, i64* %65, align 8
  store i64 %122, i64* %67, align 8
  br label %303

303:                                              ; preds = %300, %89
  %304 = phi %"class.sh::TIntermNode"** [ %91, %89 ], [ %124, %300 ]
  %305 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 1, i32 0
  %306 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %305, align 8
  %307 = icmp eq %"class.std::__1::__tree_node_base"* %306, null
  br i1 %307, label %308, label %316

308:                                              ; preds = %303
  %309 = bitcast %"class.std::__1::__tree_end_node"* %79 to %"class.std::__1::__tree_node_base"*
  %310 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 2
  %311 = bitcast %"class.std::__1::__tree_end_node"* %310 to %"class.std::__1::__tree_end_node"**
  %312 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %311, align 8
  %313 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %312, i64 0, i32 0
  %314 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %313, align 8
  %315 = icmp eq %"class.std::__1::__tree_node_base"* %314, %309
  br i1 %315, label %332, label %323

316:                                              ; preds = %303, %316
  %317 = phi %"class.std::__1::__tree_node_base"* [ %319, %316 ], [ %306, %303 ]
  %318 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %317, i64 0, i32 0, i32 0
  %319 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %318, align 8
  %320 = icmp eq %"class.std::__1::__tree_node_base"* %319, null
  br i1 %320, label %321, label %316

321:                                              ; preds = %316
  %322 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %317, i64 0, i32 0
  br label %332

323:                                              ; preds = %308, %323
  %324 = phi %"class.std::__1::__tree_end_node"** [ %327, %323 ], [ %311, %308 ]
  %325 = bitcast %"class.std::__1::__tree_end_node"** %324 to %"class.std::__1::__tree_node_base"**
  %326 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %325, align 8
  %327 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %326, i64 0, i32 2
  %328 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %328, i64 0, i32 0
  %330 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %329, align 8
  %331 = icmp eq %"class.std::__1::__tree_node_base"* %330, %326
  br i1 %331, label %332, label %323

332:                                              ; preds = %323, %321, %308
  %333 = phi %"class.std::__1::__tree_end_node"* [ %322, %321 ], [ %312, %308 ], [ %328, %323 ]
  %334 = icmp eq %"class.std::__1::__tree_end_node"* %333, %12
  br i1 %334, label %68, label %335

335:                                              ; preds = %332
  %336 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %61, align 8
  br label %76

337:                                              ; preds = %601, %68
  %338 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %57, i64 0, i32 1
  %339 = call zeroext i1 @_ZN2sh20TIntermAggregateBase16insertChildNodesEmRKNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TIntermAggregateBase"* %338, i64 0, %"class.sh::TVector.31"* nonnull dereferenceable(24) %6) #8
  %340 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %59, align 8
  %341 = icmp eq %"class.sh::TIntermNode"** %340, null
  br i1 %341, label %604, label %342

342:                                              ; preds = %337
  %343 = ptrtoint %"class.sh::TIntermNode"** %340 to i64
  %344 = bitcast %"class.sh::TIntermNode"*** %60 to i64*
  store i64 %343, i64* %344, align 8
  br label %604

345:                                              ; preds = %601, %72
  %346 = phi %"class.sh::TIntermNode"** [ %69, %72 ], [ %573, %601 ]
  %347 = phi %"class.std::__1::__tree_end_node"* [ %70, %72 ], [ %602, %601 ]
  %348 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %347, i64 4
  %349 = bitcast %"class.std::__1::__tree_end_node"* %348 to %"class.sh::TType"*
  %350 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %347, i64 27
  %351 = bitcast %"class.std::__1::__tree_end_node"* %350 to %"class.sh::TFunction"**
  %352 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %351, align 8
  %353 = call fastcc %"class.sh::TIntermFunctionDefinition"* @_ZN2sh12_GLOBAL__N_126GetIndexFunctionDefinitionERKNS_5TTypeEbRKNS_9TFunctionEPNS_12TSymbolTableE(%"class.sh::TType"* dereferenceable(184) %349, i1 zeroext true, %"class.sh::TFunction"* dereferenceable(80) %352) #8
  %354 = ptrtoint %"class.sh::TIntermFunctionDefinition"* %353 to i64
  %355 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %61, align 8
  %356 = icmp ult %"class.sh::TIntermNode"** %346, %355
  %357 = ptrtoint %"class.sh::TIntermNode"** %355 to i64
  br i1 %356, label %358, label %362

358:                                              ; preds = %345
  %359 = bitcast %"class.sh::TIntermNode"** %346 to i64*
  store i64 %354, i64* %359, align 8
  %360 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %346, i64 1
  %361 = ptrtoint %"class.sh::TIntermNode"** %360 to i64
  store i64 %361, i64* %73, align 8
  br label %572

362:                                              ; preds = %345
  %363 = ptrtoint %"class.sh::TIntermNode"** %346 to i64
  %364 = load i64, i64* %74, align 8
  %365 = sub i64 %363, %364
  %366 = ashr exact i64 %365, 3
  %367 = add nsw i64 %366, 1
  %368 = icmp ugt i64 %367, 2305843009213693951
  br i1 %368, label %369, label %371

369:                                              ; preds = %362
  %370 = bitcast %"class.sh::TVector.31"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %370) #9
  unreachable

371:                                              ; preds = %362
  %372 = sub i64 %357, %364
  %373 = ashr exact i64 %372, 3
  %374 = icmp ult i64 %373, 1152921504606846975
  br i1 %374, label %375, label %380

375:                                              ; preds = %371
  %376 = ashr exact i64 %372, 2
  %377 = icmp ult i64 %376, %367
  %378 = select i1 %377, i64 %367, i64 %376
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %386, label %380

380:                                              ; preds = %375, %371
  %381 = phi i64 [ %378, %375 ], [ 2305843009213693951, %371 ]
  %382 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %383 = shl i64 %381, 3
  %384 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %382, i64 %383) #8
  %385 = bitcast i8* %384 to %"class.sh::TIntermNode"**
  br label %386

386:                                              ; preds = %380, %375
  %387 = phi i64 [ %381, %380 ], [ 0, %375 ]
  %388 = phi %"class.sh::TIntermNode"** [ %385, %380 ], [ null, %375 ]
  %389 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %388, i64 %366
  %390 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %388, i64 %387
  %391 = ptrtoint %"class.sh::TIntermNode"** %390 to i64
  %392 = bitcast %"class.sh::TIntermNode"** %389 to i64*
  store i64 %354, i64* %392, align 8
  %393 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %389, i64 1
  %394 = ptrtoint %"class.sh::TIntermNode"** %393 to i64
  %395 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %59, align 8
  %396 = ptrtoint %"class.sh::TIntermNode"** %395 to i64
  %397 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %60, align 8
  %398 = icmp eq %"class.sh::TIntermNode"** %397, %395
  br i1 %398, label %569, label %399

399:                                              ; preds = %386
  %400 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %397, i64 -1
  %401 = ptrtoint %"class.sh::TIntermNode"** %400 to i64
  %402 = sub i64 %401, %396
  %403 = lshr i64 %402, 3
  %404 = add nuw nsw i64 %403, 1
  %405 = icmp ult i64 %404, 4
  br i1 %405, label %499, label %406

406:                                              ; preds = %399
  %407 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %388, i64 -1
  %408 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %397, i64 -1
  %409 = ptrtoint %"class.sh::TIntermNode"** %408 to i64
  %410 = sub i64 %409, %396
  %411 = lshr i64 %410, 3
  %412 = sub nsw i64 %366, %411
  %413 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %407, i64 %412
  %414 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %397, i64 -1
  %415 = sub nsw i64 0, %411
  %416 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %414, i64 %415
  %417 = icmp ult %"class.sh::TIntermNode"** %413, %397
  %418 = icmp ult %"class.sh::TIntermNode"** %416, %389
  %419 = and i1 %417, %418
  br i1 %419, label %499, label %420

420:                                              ; preds = %406
  %421 = and i64 %404, 4611686018427387900
  %422 = sub nsw i64 0, %421
  %423 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %389, i64 %422
  %424 = sub nsw i64 0, %421
  %425 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %397, i64 %424
  %426 = add nsw i64 %421, -4
  %427 = lshr exact i64 %426, 2
  %428 = add nuw nsw i64 %427, 1
  %429 = and i64 %428, 1
  %430 = icmp eq i64 %426, 0
  br i1 %430, label %475, label %431

431:                                              ; preds = %420
  %432 = sub nuw nsw i64 %428, %429
  %433 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %389, i64 -1
  %434 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %397, i64 -1
  %435 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %389, i64 -1
  %436 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %397, i64 -1
  br label %437

437:                                              ; preds = %437, %431
  %438 = phi i64 [ 0, %431 ], [ %472, %437 ]
  %439 = phi i64 [ %432, %431 ], [ %473, %437 ]
  %440 = sub i64 0, %438
  %441 = sub i64 0, %438
  %442 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %433, i64 %440
  %443 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %434, i64 %441
  %444 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %443, i64 -1
  %445 = bitcast %"class.sh::TIntermNode"** %444 to <2 x i64>*
  %446 = load <2 x i64>, <2 x i64>* %445, align 8, !alias.scope !13
  %447 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %443, i64 -2
  %448 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %447, i64 -1
  %449 = bitcast %"class.sh::TIntermNode"** %448 to <2 x i64>*
  %450 = load <2 x i64>, <2 x i64>* %449, align 8, !alias.scope !13
  %451 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %442, i64 -1
  %452 = bitcast %"class.sh::TIntermNode"** %451 to <2 x i64>*
  store <2 x i64> %446, <2 x i64>* %452, align 8, !alias.scope !16, !noalias !13
  %453 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %442, i64 -2
  %454 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %453, i64 -1
  %455 = bitcast %"class.sh::TIntermNode"** %454 to <2 x i64>*
  store <2 x i64> %450, <2 x i64>* %455, align 8, !alias.scope !16, !noalias !13
  %456 = sub nuw nsw i64 -4, %438
  %457 = sub nuw nsw i64 -4, %438
  %458 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %435, i64 %456
  %459 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %436, i64 %457
  %460 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %459, i64 -1
  %461 = bitcast %"class.sh::TIntermNode"** %460 to <2 x i64>*
  %462 = load <2 x i64>, <2 x i64>* %461, align 8, !alias.scope !13
  %463 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %459, i64 -2
  %464 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %463, i64 -1
  %465 = bitcast %"class.sh::TIntermNode"** %464 to <2 x i64>*
  %466 = load <2 x i64>, <2 x i64>* %465, align 8, !alias.scope !13
  %467 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %458, i64 -1
  %468 = bitcast %"class.sh::TIntermNode"** %467 to <2 x i64>*
  store <2 x i64> %462, <2 x i64>* %468, align 8, !alias.scope !16, !noalias !13
  %469 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %458, i64 -2
  %470 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %469, i64 -1
  %471 = bitcast %"class.sh::TIntermNode"** %470 to <2 x i64>*
  store <2 x i64> %466, <2 x i64>* %471, align 8, !alias.scope !16, !noalias !13
  %472 = add i64 %438, 8
  %473 = add i64 %439, -2
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %437, !llvm.loop !18

475:                                              ; preds = %437, %420
  %476 = phi i64 [ 0, %420 ], [ %472, %437 ]
  %477 = icmp eq i64 %429, 0
  br i1 %477, label %497, label %478

478:                                              ; preds = %475
  %479 = sub i64 0, %476
  %480 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %389, i64 -1
  %481 = sub i64 0, %476
  %482 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %397, i64 -1
  %483 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %480, i64 %479
  %484 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %482, i64 %481
  %485 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %484, i64 -1
  %486 = bitcast %"class.sh::TIntermNode"** %485 to <2 x i64>*
  %487 = load <2 x i64>, <2 x i64>* %486, align 8, !alias.scope !13
  %488 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %484, i64 -2
  %489 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %488, i64 -1
  %490 = bitcast %"class.sh::TIntermNode"** %489 to <2 x i64>*
  %491 = load <2 x i64>, <2 x i64>* %490, align 8, !alias.scope !13
  %492 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %483, i64 -1
  %493 = bitcast %"class.sh::TIntermNode"** %492 to <2 x i64>*
  store <2 x i64> %487, <2 x i64>* %493, align 8, !alias.scope !16, !noalias !13
  %494 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %483, i64 -2
  %495 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %494, i64 -1
  %496 = bitcast %"class.sh::TIntermNode"** %495 to <2 x i64>*
  store <2 x i64> %491, <2 x i64>* %496, align 8, !alias.scope !16, !noalias !13
  br label %497

497:                                              ; preds = %475, %478
  %498 = icmp eq i64 %404, %421
  br i1 %498, label %569, label %499

499:                                              ; preds = %497, %406, %399
  %500 = phi %"class.sh::TIntermNode"** [ %389, %406 ], [ %389, %399 ], [ %423, %497 ]
  %501 = phi %"class.sh::TIntermNode"** [ %397, %406 ], [ %397, %399 ], [ %425, %497 ]
  %502 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %501, i64 -1
  %503 = ptrtoint %"class.sh::TIntermNode"** %502 to i64
  %504 = sub i64 %503, %396
  %505 = lshr i64 %504, 3
  %506 = add nuw nsw i64 %505, 1
  %507 = and i64 %506, 7
  %508 = icmp eq i64 %507, 0
  br i1 %508, label %520, label %509

509:                                              ; preds = %499, %509
  %510 = phi %"class.sh::TIntermNode"** [ %513, %509 ], [ %500, %499 ]
  %511 = phi %"class.sh::TIntermNode"** [ %514, %509 ], [ %501, %499 ]
  %512 = phi i64 [ %518, %509 ], [ %507, %499 ]
  %513 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %510, i64 -1
  %514 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %511, i64 -1
  %515 = bitcast %"class.sh::TIntermNode"** %514 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = bitcast %"class.sh::TIntermNode"** %513 to i64*
  store i64 %516, i64* %517, align 8
  %518 = add i64 %512, -1
  %519 = icmp eq i64 %518, 0
  br i1 %519, label %520, label %509, !llvm.loop !19

520:                                              ; preds = %509, %499
  %521 = phi %"class.sh::TIntermNode"** [ undef, %499 ], [ %513, %509 ]
  %522 = phi %"class.sh::TIntermNode"** [ %500, %499 ], [ %513, %509 ]
  %523 = phi %"class.sh::TIntermNode"** [ %501, %499 ], [ %514, %509 ]
  %524 = icmp ult i64 %504, 56
  br i1 %524, label %569, label %525

525:                                              ; preds = %520, %525
  %526 = phi %"class.sh::TIntermNode"** [ %563, %525 ], [ %522, %520 ]
  %527 = phi %"class.sh::TIntermNode"** [ %564, %525 ], [ %523, %520 ]
  %528 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %526, i64 -1
  %529 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %527, i64 -1
  %530 = bitcast %"class.sh::TIntermNode"** %529 to i64*
  %531 = load i64, i64* %530, align 8
  %532 = bitcast %"class.sh::TIntermNode"** %528 to i64*
  store i64 %531, i64* %532, align 8
  %533 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %526, i64 -2
  %534 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %527, i64 -2
  %535 = bitcast %"class.sh::TIntermNode"** %534 to i64*
  %536 = load i64, i64* %535, align 8
  %537 = bitcast %"class.sh::TIntermNode"** %533 to i64*
  store i64 %536, i64* %537, align 8
  %538 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %526, i64 -3
  %539 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %527, i64 -3
  %540 = bitcast %"class.sh::TIntermNode"** %539 to i64*
  %541 = load i64, i64* %540, align 8
  %542 = bitcast %"class.sh::TIntermNode"** %538 to i64*
  store i64 %541, i64* %542, align 8
  %543 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %526, i64 -4
  %544 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %527, i64 -4
  %545 = bitcast %"class.sh::TIntermNode"** %544 to i64*
  %546 = load i64, i64* %545, align 8
  %547 = bitcast %"class.sh::TIntermNode"** %543 to i64*
  store i64 %546, i64* %547, align 8
  %548 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %526, i64 -5
  %549 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %527, i64 -5
  %550 = bitcast %"class.sh::TIntermNode"** %549 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = bitcast %"class.sh::TIntermNode"** %548 to i64*
  store i64 %551, i64* %552, align 8
  %553 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %526, i64 -6
  %554 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %527, i64 -6
  %555 = bitcast %"class.sh::TIntermNode"** %554 to i64*
  %556 = load i64, i64* %555, align 8
  %557 = bitcast %"class.sh::TIntermNode"** %553 to i64*
  store i64 %556, i64* %557, align 8
  %558 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %526, i64 -7
  %559 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %527, i64 -7
  %560 = bitcast %"class.sh::TIntermNode"** %559 to i64*
  %561 = load i64, i64* %560, align 8
  %562 = bitcast %"class.sh::TIntermNode"** %558 to i64*
  store i64 %561, i64* %562, align 8
  %563 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %526, i64 -8
  %564 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %527, i64 -8
  %565 = bitcast %"class.sh::TIntermNode"** %564 to i64*
  %566 = load i64, i64* %565, align 8
  %567 = bitcast %"class.sh::TIntermNode"** %563 to i64*
  store i64 %566, i64* %567, align 8
  %568 = icmp eq %"class.sh::TIntermNode"** %564, %395
  br i1 %568, label %569, label %525, !llvm.loop !20

569:                                              ; preds = %520, %525, %497, %386
  %570 = phi %"class.sh::TIntermNode"** [ %389, %386 ], [ %423, %497 ], [ %521, %520 ], [ %563, %525 ]
  %571 = ptrtoint %"class.sh::TIntermNode"** %570 to i64
  store i64 %571, i64* %74, align 8
  store i64 %394, i64* %73, align 8
  store i64 %391, i64* %75, align 8
  br label %572

572:                                              ; preds = %569, %358
  %573 = phi %"class.sh::TIntermNode"** [ %360, %358 ], [ %393, %569 ]
  %574 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %347, i64 1, i32 0
  %575 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %574, align 8
  %576 = icmp eq %"class.std::__1::__tree_node_base"* %575, null
  br i1 %576, label %577, label %585

577:                                              ; preds = %572
  %578 = bitcast %"class.std::__1::__tree_end_node"* %347 to %"class.std::__1::__tree_node_base"*
  %579 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %347, i64 2
  %580 = bitcast %"class.std::__1::__tree_end_node"* %579 to %"class.std::__1::__tree_end_node"**
  %581 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %580, align 8
  %582 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %581, i64 0, i32 0
  %583 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %582, align 8
  %584 = icmp eq %"class.std::__1::__tree_node_base"* %583, %578
  br i1 %584, label %601, label %592

585:                                              ; preds = %572, %585
  %586 = phi %"class.std::__1::__tree_node_base"* [ %588, %585 ], [ %575, %572 ]
  %587 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %586, i64 0, i32 0, i32 0
  %588 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %587, align 8
  %589 = icmp eq %"class.std::__1::__tree_node_base"* %588, null
  br i1 %589, label %590, label %585

590:                                              ; preds = %585
  %591 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %586, i64 0, i32 0
  br label %601

592:                                              ; preds = %577, %592
  %593 = phi %"class.std::__1::__tree_end_node"** [ %596, %592 ], [ %580, %577 ]
  %594 = bitcast %"class.std::__1::__tree_end_node"** %593 to %"class.std::__1::__tree_node_base"**
  %595 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %594, align 8
  %596 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %595, i64 0, i32 2
  %597 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %596, align 8
  %598 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %597, i64 0, i32 0
  %599 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %598, align 8
  %600 = icmp eq %"class.std::__1::__tree_node_base"* %599, %595
  br i1 %600, label %601, label %592

601:                                              ; preds = %592, %590, %577
  %602 = phi %"class.std::__1::__tree_end_node"* [ %591, %590 ], [ %581, %577 ], [ %597, %592 ]
  %603 = icmp eq %"class.std::__1::__tree_end_node"* %602, %16
  br i1 %603, label %337, label %345

604:                                              ; preds = %337, %342
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #8
  %605 = call zeroext i1 @_ZN2sh9TCompiler11validateASTEPNS_11TIntermNodeE(%"class.sh::TCompiler"* %1, %"class.sh::TIntermNode"* %2) #8
  br label %606

606:                                              ; preds = %44, %604
  %607 = phi i1 [ %605, %604 ], [ false, %44 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_130RemoveDynamicIndexingTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %608 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %29, align 8
  %609 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %608, i64 0, i32 1
  %610 = load void (i8*)*, void (i8*)** %609, align 8
  %611 = icmp eq void (i8*)* %610, null
  br i1 %611, label %615, label %612

612:                                              ; preds = %606
  %613 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %614 = load i8*, i8** %613, align 8
  call void %610(i8* %614) #8
  br label %615

615:                                              ; preds = %606, %612
  %616 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 2, i32 0
  %617 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node"**
  %618 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %617, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.166"* %616, %"class.std::__1::__tree_node"* %618) #8
  %619 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %7, i64 0, i32 1, i32 0
  %620 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node"**
  %621 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %620, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.166"* %619, %"class.std::__1::__tree_node"* %621) #8
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %42) #8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %8) #8
  ret i1 %607
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh37RemoveDynamicIndexingOfSwizzledVectorEPNS_9TCompilerEPNS_11TIntermNodeEPNS_12TSymbolTableEPNS_22PerformanceDiagnosticsE(%"class.sh::TCompiler"*, %"class.sh::TIntermNode"*, %"class.sh::TSymbolTable"*, %"class.sh::PerformanceDiagnostics"*) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::function", align 8
  %6 = bitcast %"class.std::__1::function"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 2
  %9 = bitcast %"class.std::__1::function"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.sh::TIntermBinary"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN2sh13TIntermBinaryEEE11__call_implINS0_20__default_alloc_funcIZNS2_37RemoveDynamicIndexingOfSwizzledVectorEPNS2_9TCompilerEPNS2_11TIntermNodeEPNS2_12TSymbolTableEPNS2_22PerformanceDiagnosticsEE3$_1S5_EEEEbPKNS0_16__policy_storageES4_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.sh::TIntermBinary"*)** %7, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2sh37RemoveDynamicIndexingOfSwizzledVectorEPNS4_9TCompilerEPNS4_11TIntermNodeEPNS4_12TSymbolTableEPNS4_22PerformanceDiagnosticsEE3$_1FbPNS4_13TIntermBinaryEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %8, align 8
  %10 = call fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_123RemoveDynamicIndexingIfEONSt3__18functionIFbPNS_13TIntermBinaryEEEEPNS_9TCompilerEPNS_11TIntermNodeEPNS_12TSymbolTableEPNS_22PerformanceDiagnosticsE(%"class.std::__1::function"* nonnull dereferenceable(32) %5, %"class.sh::TCompiler"* %0, %"class.sh::TIntermNode"* %1, %"class.sh::TSymbolTable"* %2, %"class.sh::PerformanceDiagnostics"* %3)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #8
  ret i1 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN2sh16TIntermTraverser10updateTreeEPNS_9TCompilerEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"*, %"class.sh::TCompiler"*, %"class.sh::TIntermNode"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2sh9TCompiler11validateASTEPNS_11TIntermNodeE(%"class.sh::TCompiler"*, %"class.sh::TIntermNode"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_130RemoveDynamicIndexingTraverserD2Ev(%"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_130RemoveDynamicIndexingTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 5, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 2, i32 0
  %13 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node"**
  %15 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.166"* %12, %"class.std::__1::__tree_node"* %15) #8
  %16 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.166"* %16, %"class.std::__1::__tree_node"* %19) #8
  %20 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %20) #8
  ret void
}

declare void @_ZN2sh24TLValueTrackingTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TLValueTrackingTraverser"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.sh::TSymbolTable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_130RemoveDynamicIndexingTraverserD0Ev(%"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_130RemoveDynamicIndexingTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 5, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 2, i32 0
  %13 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node"**
  %15 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.166"* %12, %"class.std::__1::__tree_node"* %15) #8
  %16 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.166"* %16, %"class.std::__1::__tree_node"* %19) #8
  %20 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %20) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermSymbol"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_130RemoveDynamicIndexingTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE(%"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"*, i32, %"class.sh::TIntermBinary"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.sh::TVector.31", align 8
  %5 = alloca %"class.sh::TType", align 8
  %6 = alloca %"class.sh::TVector.31", align 8
  %7 = alloca %"class.sh::TVector.31", align 8
  %8 = alloca %"class.sh::TVector.31", align 8
  %9 = alloca %"class.sh::TType", align 8
  %10 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %11 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %12 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %13 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %14 = alloca %"class.sh::TVector.31", align 8
  %15 = alloca %"class.sh::TIntermDeclaration"*, align 8
  %16 = alloca %"class.sh::ImmutableString", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.sh::ImmutableString", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.sh::TVector.31", align 8
  %21 = alloca %"class.sh::TVector.31", align 8
  %22 = alloca %"class.sh::TIntermDeclaration"*, align 8
  %23 = alloca %"class.sh::TIntermDeclaration"*, align 8
  %24 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 3
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %3025

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 1
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 45
  br i1 %30, label %31, label %3022

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 4
  %33 = load i8, i8* %32, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %50, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.sh::TIntermDeclaration"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.sh::TIntermDeclaration"* null, %"class.sh::TIntermDeclaration"** %15, align 8
  %37 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 0, i32 0, i32 8
  %39 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %38, align 8
  %40 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 3
  %41 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %40, align 8
  %42 = call %"class.sh::TVariable"* @_ZN2sh19DeclareTempVariableEPNS_12TSymbolTableEPNS_12TIntermTypedENS_10TQualifierEPPNS_18TIntermDeclarationE(%"class.sh::TSymbolTable"* %39, %"class.sh::TIntermTyped"* %41, i32 0, %"class.sh::TIntermDeclaration"** nonnull %15) #8
  %43 = bitcast %"class.sh::TIntermDeclaration"** %15 to %"class.sh::TIntermNode"**
  %44 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %43, align 8
  call void @_ZN2sh16TIntermTraverser28insertStatementInParentBlockEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"* %37, %"class.sh::TIntermNode"* %44) #8
  store i8 1, i8* %24, align 8
  %45 = call %"class.sh::TIntermSymbol"* @_ZN2sh20CreateTempSymbolNodeEPKNS_9TVariableE(%"class.sh::TVariable"* %42) #8
  %46 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %40, align 8
  %48 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %47, i64 0, i32 0
  %49 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %45, i64 0, i32 0, i32 0
  call void @_ZN2sh16TIntermTraverser26queueReplacementWithParentEPNS_11TIntermNodeES2_S2_NS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %37, %"class.sh::TIntermNode"* %46, %"class.sh::TIntermNode"* %48, %"class.sh::TIntermNode"* %49, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %3022

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %52 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.sh::TIntermBinary"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.sh::TIntermBinary"*)** %51, align 8
  %53 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 5, i32 0, i32 0
  %54 = tail call zeroext i1 %52(%"union.std::__1::__function::__policy_storage"* %53, %"class.sh::TIntermBinary"* %2) #8
  br i1 %54, label %55, label %3022

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 6
  %57 = load %"class.sh::PerformanceDiagnostics"*, %"class.sh::PerformanceDiagnostics"** %56, align 8
  %58 = icmp eq %"class.sh::PerformanceDiagnostics"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  tail call void @_ZN2sh22PerformanceDiagnostics7warningERKNS_10TSourceLocEPKcS5_(%"class.sh::PerformanceDiagnostics"* nonnull %57, %"struct.sh::TSourceLoc"* dereferenceable(16) %60, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 0, i32 1
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %69

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 0, i32 2
  %67 = load i8, i8* %66, align 1, !range !2
  %68 = icmp ne i8 %67, 0
  br label %69

69:                                               ; preds = %61, %65
  %70 = phi i1 [ true, %61 ], [ %68, %65 ]
  %71 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 2
  %72 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %71, align 8
  %73 = bitcast %"class.sh::TIntermTyped"* %72 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %74 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %74, i64 31
  %76 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %75, align 8
  %77 = tail call dereferenceable(184) %"class.sh::TType"* %76(%"class.sh::TIntermTyped"* %72) #8
  %78 = bitcast %"class.sh::ImmutableString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #8
  %79 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %16, i64 0, i32 0
  %80 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %16, i64 0, i32 1
  %81 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %82 = bitcast %"class.sh::ImmutableString"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #8
  call fastcc void @_ZN2sh12_GLOBAL__N_120GetIndexFunctionNameERKNS_5TTypeEb(%"class.std::__1::basic_string"* nonnull sret %17, %"class.sh::TType"* dereferenceable(184) %77, i1 zeroext false)
  %83 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = zext i8 %85 to i64
  %92 = select i1 %86, i8* %88, i8* %81
  %93 = select i1 %86, i64 %90, i64 %91
  %94 = add i64 %93, 1
  %95 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %96 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %95, i64 %94) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %92, i64 %94, i1 false) #8
  store i8* %96, i8** %79, align 8
  %97 = load i8, i8* %84, align 1
  %98 = icmp slt i8 %97, 0
  %99 = load i64, i64* %89, align 8
  %100 = zext i8 %97 to i64
  %101 = select i1 %98, i64 %99, i64 %100
  store i64 %101, i64* %80, align 8
  br i1 %98, label %102, label %104

102:                                              ; preds = %69
  %103 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %103) #10
  br label %104

104:                                              ; preds = %69, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #8
  %105 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 1
  %106 = getelementptr inbounds %"class.std::__1::map.165", %"class.std::__1::map.165"* %105, i64 0, i32 0
  %107 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.166"* %106, %"class.sh::TType"* dereferenceable(184) %77) #8
  %108 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %109 = icmp eq %"class.std::__1::__tree_end_node"* %107, %108
  br i1 %109, label %110, label %186

110:                                              ; preds = %104
  %111 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %112 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %111, i64 80) #8
  %113 = bitcast i8* %112 to %"class.sh::TFunction"*
  %114 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 0, i32 0, i32 8
  %115 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %114, align 8
  %116 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %77, i64 0, i32 8
  %117 = load i8, i8* %116, align 8
  %118 = icmp ugt i8 %117, 1
  %119 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %77, i64 0, i32 9
  %120 = load i8, i8* %119, align 1
  %121 = icmp ugt i8 %120, 1
  %122 = and i1 %118, %121
  %123 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %124 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %123, i64 184) #8
  %125 = bitcast i8* %124 to %"class.sh::TType"*
  %126 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %77, i64 0, i32 0
  %127 = load i32, i32* %126, align 8
  %128 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %77, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* %125, i32 %127, i32 %129, i32 0, i8 zeroext 1, i8 zeroext 1) #8
  br i1 %122, label %130, label %132

130:                                              ; preds = %110
  %131 = load i8, i8* %119, align 1
  call void @_ZN2sh5TType14setPrimarySizeEh(%"class.sh::TType"* %125, i8 zeroext %131) #8
  br label %132

132:                                              ; preds = %110, %130
  call void @_ZN2sh9TFunctionC1EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeEPKNS_5TTypeEb(%"class.sh::TFunction"* %113, %"class.sh::TSymbolTable"* %115, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %16, i8 zeroext 2, %"class.sh::TType"* %125, i1 zeroext true) #8
  %133 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %134 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %133, i64 40) #8
  %135 = bitcast i8* %134 to %"class.sh::TVariable"*
  %136 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %114, align 8
  %137 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %138 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %137, i64 184) #8
  %139 = bitcast i8* %138 to %"class.sh::TType"*
  call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* %139, %"class.sh::TType"* dereferenceable(184) %77) #8
  %140 = getelementptr inbounds i8, i8* %138, i64 4
  %141 = bitcast i8* %140 to i32*
  store i32 3, i32* %141, align 4
  %142 = getelementptr inbounds i8, i8* %138, i64 8
  %143 = bitcast i8* %142 to i32*
  store i32 14, i32* %143, align 8
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %135, %"class.sh::TSymbolTable"* %136, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2sh12_GLOBAL__N_19kBaseNameE, %"class.sh::TType"* %139, i8 zeroext 2, i8 zeroext 0) #8
  call void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"* %113, %"class.sh::TVariable"* %135) #8
  %144 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %145 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %144, i64 40) #8
  %146 = bitcast i8* %145 to %"class.sh::TVariable"*
  %147 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %114, align 8
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %146, %"class.sh::TSymbolTable"* %147, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2sh12_GLOBAL__N_110kIndexNameE, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE3ELNS_10TPrecisionE3ELNS_10TQualifierE14ELh1ELh1EEE to %"class.sh::TType"*), i8 zeroext 2, i8 zeroext 0) #8
  call void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"* %113, %"class.sh::TVariable"* %146) #8
  %148 = bitcast %"class.std::__1::__tree_end_node"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #8
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %13, align 8
  %149 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISI_EERKT_(%"class.std::__1::__tree.166"* %106, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %13, %"class.sh::TType"* dereferenceable(184) %77) #8
  %150 = bitcast %"class.std::__1::__tree_node_base"** %149 to %"class.std::__1::__tree_node"**
  %151 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node"* %151, null
  br i1 %152, label %153, label %182

153:                                              ; preds = %132
  %154 = call i8* @_Znwm(i64 224) #10, !noalias !21
  %155 = getelementptr inbounds i8, i8* %154, i64 32
  %156 = bitcast i8* %155 to %"class.sh::TType"*
  call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* %156, %"class.sh::TType"* dereferenceable(184) %77) #8, !noalias !21
  %157 = getelementptr inbounds i8, i8* %154, i64 216
  %158 = bitcast i8* %157 to %"class.sh::TFunction"**
  store %"class.sh::TFunction"* null, %"class.sh::TFunction"** %158, align 8, !noalias !21
  %159 = bitcast %"class.std::__1::__tree_end_node"** %13 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast i8* %154 to %"class.std::__1::__tree_node"*
  %162 = bitcast i8* %154 to %"class.std::__1::__tree_node_base"*
  %163 = getelementptr inbounds i8, i8* %154, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 0, i64 16, i1 false) #8
  %164 = bitcast i8* %163 to i64*
  store i64 %160, i64* %164, align 8
  %165 = bitcast %"class.std::__1::__tree_node_base"** %149 to i8**
  store i8* %154, i8** %165, align 8
  %166 = getelementptr inbounds %"class.std::__1::map.165", %"class.std::__1::map.165"* %105, i64 0, i32 0, i32 0
  %167 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %166, align 8
  %168 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 0, i32 0
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %168, align 8
  %170 = icmp eq %"class.std::__1::__tree_node_base"* %169, null
  br i1 %170, label %175, label %171

171:                                              ; preds = %153
  %172 = ptrtoint %"class.std::__1::__tree_node_base"* %169 to i64
  %173 = bitcast %"class.std::__1::map.165"* %105 to i64*
  store i64 %172, i64* %173, align 8
  %174 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %149, align 8
  br label %175

175:                                              ; preds = %171, %153
  %176 = phi %"class.std::__1::__tree_node_base"* [ %162, %153 ], [ %174, %171 ]
  %177 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %178 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %177, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %178, %"class.std::__1::__tree_node_base"* %176) #8
  %179 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %180 = load i64, i64* %179, align 8
  %181 = add i64 %180, 1
  store i64 %181, i64* %179, align 8
  br label %182

182:                                              ; preds = %132, %175
  %183 = phi %"class.std::__1::__tree_node"* [ %161, %175 ], [ %151, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #8
  %184 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %183, i64 0, i32 1, i32 0, i32 1
  %185 = bitcast %"class.sh::TFunction"** %184 to i8**
  store i8* %112, i8** %185, align 8
  br label %225

186:                                              ; preds = %104
  %187 = bitcast %"class.std::__1::__tree_end_node"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %187) #8
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %12, align 8
  %188 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISI_EERKT_(%"class.std::__1::__tree.166"* %106, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %12, %"class.sh::TType"* dereferenceable(184) %77) #8
  %189 = bitcast %"class.std::__1::__tree_node_base"** %188 to %"class.std::__1::__tree_node"**
  %190 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %189, align 8
  %191 = icmp eq %"class.std::__1::__tree_node"* %190, null
  br i1 %191, label %192, label %221

192:                                              ; preds = %186
  %193 = call i8* @_Znwm(i64 224) #10, !noalias !24
  %194 = getelementptr inbounds i8, i8* %193, i64 32
  %195 = bitcast i8* %194 to %"class.sh::TType"*
  call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* %195, %"class.sh::TType"* dereferenceable(184) %77) #8, !noalias !24
  %196 = getelementptr inbounds i8, i8* %193, i64 216
  %197 = bitcast i8* %196 to %"class.sh::TFunction"**
  store %"class.sh::TFunction"* null, %"class.sh::TFunction"** %197, align 8, !noalias !24
  %198 = bitcast %"class.std::__1::__tree_end_node"** %12 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = bitcast i8* %193 to %"class.std::__1::__tree_node"*
  %201 = bitcast i8* %193 to %"class.std::__1::__tree_node_base"*
  %202 = getelementptr inbounds i8, i8* %193, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %193, i8 0, i64 16, i1 false) #8
  %203 = bitcast i8* %202 to i64*
  store i64 %199, i64* %203, align 8
  %204 = bitcast %"class.std::__1::__tree_node_base"** %188 to i8**
  store i8* %193, i8** %204, align 8
  %205 = getelementptr inbounds %"class.std::__1::map.165", %"class.std::__1::map.165"* %105, i64 0, i32 0, i32 0
  %206 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %205, align 8
  %207 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %206, i64 0, i32 0
  %208 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %207, align 8
  %209 = icmp eq %"class.std::__1::__tree_node_base"* %208, null
  br i1 %209, label %214, label %210

210:                                              ; preds = %192
  %211 = ptrtoint %"class.std::__1::__tree_node_base"* %208 to i64
  %212 = bitcast %"class.std::__1::map.165"* %105 to i64*
  store i64 %211, i64* %212, align 8
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %188, align 8
  br label %214

214:                                              ; preds = %210, %192
  %215 = phi %"class.std::__1::__tree_node_base"* [ %201, %192 ], [ %213, %210 ]
  %216 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %217 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %216, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %217, %"class.std::__1::__tree_node_base"* %215) #8
  %218 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %219 = load i64, i64* %218, align 8
  %220 = add i64 %219, 1
  store i64 %220, i64* %218, align 8
  br label %221

221:                                              ; preds = %186, %214
  %222 = phi %"class.std::__1::__tree_node"* [ %200, %214 ], [ %190, %186 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %187) #8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %222, i64 0, i32 1, i32 0, i32 1
  %224 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %223, align 8
  br label %225

225:                                              ; preds = %221, %182
  %226 = phi %"class.sh::TFunction"* [ %113, %182 ], [ %224, %221 ]
  br i1 %70, label %227, label %2381

227:                                              ; preds = %225
  %228 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %71, align 8
  %229 = bitcast %"class.sh::TIntermTyped"* %228 to i1 (%"class.sh::TIntermTyped"*)***
  %230 = load i1 (%"class.sh::TIntermTyped"*)**, i1 (%"class.sh::TIntermTyped"*)*** %229, align 8
  %231 = getelementptr inbounds i1 (%"class.sh::TIntermTyped"*)*, i1 (%"class.sh::TIntermTyped"*)** %230, i64 30
  %232 = load i1 (%"class.sh::TIntermTyped"*)*, i1 (%"class.sh::TIntermTyped"*)** %231, align 8
  %233 = call zeroext i1 %232(%"class.sh::TIntermTyped"* %228) #8
  br i1 %233, label %234, label %235

234:                                              ; preds = %227
  store i8 1, i8* %32, align 1
  br label %3021

235:                                              ; preds = %227
  %236 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %71, align 8
  %237 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %236, i64 0, i32 0
  %238 = bitcast %"class.sh::TIntermTyped"* %236 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %239 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %238, align 8
  %240 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %239, i64 13
  %241 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %240, align 8
  %242 = call %"class.sh::TIntermBinary"* %241(%"class.sh::TIntermNode"* %237) #8
  %243 = icmp eq %"class.sh::TIntermBinary"* %242, null
  br i1 %243, label %247, label %244

244:                                              ; preds = %235
  %245 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.sh::TIntermBinary"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.sh::TIntermBinary"*)** %51, align 8
  %246 = call zeroext i1 %245(%"union.std::__1::__function::__policy_storage"* %53, %"class.sh::TIntermBinary"* nonnull %242) #8
  br i1 %246, label %3021, label %247

247:                                              ; preds = %235, %244
  %248 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 2
  %249 = getelementptr inbounds %"class.std::__1::map.165", %"class.std::__1::map.165"* %248, i64 0, i32 0
  %250 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.166"* %249, %"class.sh::TType"* dereferenceable(184) %77) #8
  %251 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %252 = icmp eq %"class.std::__1::__tree_end_node"* %250, %251
  br i1 %252, label %253, label %368

253:                                              ; preds = %247
  %254 = bitcast %"class.sh::ImmutableString"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %254) #8
  %255 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %18, i64 0, i32 0
  %256 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %18, i64 0, i32 1
  %257 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %258 = bitcast %"class.sh::ImmutableString"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %258, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #8
  %259 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %71, align 8
  %260 = bitcast %"class.sh::TIntermTyped"* %259 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %261 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %260, align 8
  %262 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %261, i64 31
  %263 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %262, align 8
  %264 = call dereferenceable(184) %"class.sh::TType"* %263(%"class.sh::TIntermTyped"* %259) #8
  call fastcc void @_ZN2sh12_GLOBAL__N_120GetIndexFunctionNameERKNS_5TTypeEb(%"class.std::__1::basic_string"* nonnull sret %19, %"class.sh::TType"* dereferenceable(184) %264, i1 zeroext true)
  %265 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %266 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %265, i64 0, i32 1, i32 0
  %267 = load i8, i8* %266, align 1
  %268 = icmp slt i8 %267, 0
  %269 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %272 = load i64, i64* %271, align 8
  %273 = zext i8 %267 to i64
  %274 = select i1 %268, i8* %270, i8* %257
  %275 = select i1 %268, i64 %272, i64 %273
  %276 = add i64 %275, 1
  %277 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %278 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %277, i64 %276) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %278, i8* align 1 %274, i64 %276, i1 false) #8
  store i8* %278, i8** %255, align 8
  %279 = load i8, i8* %266, align 1
  %280 = icmp slt i8 %279, 0
  %281 = load i64, i64* %271, align 8
  %282 = zext i8 %279 to i64
  %283 = select i1 %280, i64 %281, i64 %282
  store i64 %283, i64* %256, align 8
  br i1 %280, label %284, label %286

284:                                              ; preds = %253
  %285 = load i8*, i8** %269, align 8
  call void @_ZdlPv(i8* %285) #10
  br label %286

286:                                              ; preds = %253, %284
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #8
  %287 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %288 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %287, i64 80) #8
  %289 = bitcast i8* %288 to %"class.sh::TFunction"*
  %290 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 0, i32 0, i32 8
  %291 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %290, align 8
  call void @_ZN2sh9TFunctionC1EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeEPKNS_5TTypeEb(%"class.sh::TFunction"* %289, %"class.sh::TSymbolTable"* %291, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %18, i8 zeroext 2, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE0ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*), i1 zeroext false) #8
  %292 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %293 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %292, i64 40) #8
  %294 = bitcast i8* %293 to %"class.sh::TVariable"*
  %295 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %290, align 8
  %296 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %297 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %296, i64 184) #8
  %298 = bitcast i8* %297 to %"class.sh::TType"*
  call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* %298, %"class.sh::TType"* dereferenceable(184) %77) #8
  %299 = getelementptr inbounds i8, i8* %297, i64 4
  %300 = bitcast i8* %299 to i32*
  store i32 3, i32* %300, align 4
  %301 = getelementptr inbounds i8, i8* %297, i64 8
  %302 = bitcast i8* %301 to i32*
  store i32 16, i32* %302, align 8
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %294, %"class.sh::TSymbolTable"* %295, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2sh12_GLOBAL__N_19kBaseNameE, %"class.sh::TType"* %298, i8 zeroext 2, i8 zeroext 0) #8
  call void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"* %289, %"class.sh::TVariable"* %294) #8
  %303 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %304 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %303, i64 40) #8
  %305 = bitcast i8* %304 to %"class.sh::TVariable"*
  %306 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %290, align 8
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %305, %"class.sh::TSymbolTable"* %306, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2sh12_GLOBAL__N_110kIndexNameE, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE3ELNS_10TPrecisionE3ELNS_10TQualifierE14ELh1ELh1EEE to %"class.sh::TType"*), i8 zeroext 2, i8 zeroext 0) #8
  call void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"* %289, %"class.sh::TVariable"* %305) #8
  %307 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %77, i64 0, i32 8
  %308 = load i8, i8* %307, align 8
  %309 = icmp ugt i8 %308, 1
  %310 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %77, i64 0, i32 9
  %311 = load i8, i8* %310, align 1
  %312 = icmp ugt i8 %311, 1
  %313 = and i1 %309, %312
  %314 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %315 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %314, i64 184) #8
  %316 = bitcast i8* %315 to %"class.sh::TType"*
  %317 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %77, i64 0, i32 0
  %318 = load i32, i32* %317, align 8
  %319 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %77, i64 0, i32 1
  %320 = load i32, i32* %319, align 4
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* %316, i32 %318, i32 %320, i32 0, i8 zeroext 1, i8 zeroext 1) #8
  br i1 %313, label %321, label %323

321:                                              ; preds = %286
  %322 = load i8, i8* %310, align 1
  call void @_ZN2sh5TType14setPrimarySizeEh(%"class.sh::TType"* %316, i8 zeroext %322) #8
  br label %323

323:                                              ; preds = %286, %321
  %324 = getelementptr inbounds i8, i8* %315, i64 8
  %325 = bitcast i8* %324 to i32*
  store i32 14, i32* %325, align 8
  %326 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %327 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %326, i64 40) #8
  %328 = bitcast i8* %327 to %"class.sh::TVariable"*
  %329 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %290, align 8
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %328, %"class.sh::TSymbolTable"* %329, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2sh12_GLOBAL__N_110kValueNameE, %"class.sh::TType"* %316, i8 zeroext 2, i8 zeroext 0) #8
  call void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"* %289, %"class.sh::TVariable"* %328) #8
  %330 = bitcast %"class.std::__1::__tree_end_node"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %330) #8
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %11, align 8
  %331 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISI_EERKT_(%"class.std::__1::__tree.166"* %249, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %11, %"class.sh::TType"* dereferenceable(184) %77) #8
  %332 = bitcast %"class.std::__1::__tree_node_base"** %331 to %"class.std::__1::__tree_node"**
  %333 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node"* %333, null
  br i1 %334, label %335, label %364

335:                                              ; preds = %323
  %336 = call i8* @_Znwm(i64 224) #10, !noalias !27
  %337 = getelementptr inbounds i8, i8* %336, i64 32
  %338 = bitcast i8* %337 to %"class.sh::TType"*
  call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* %338, %"class.sh::TType"* dereferenceable(184) %77) #8, !noalias !27
  %339 = getelementptr inbounds i8, i8* %336, i64 216
  %340 = bitcast i8* %339 to %"class.sh::TFunction"**
  store %"class.sh::TFunction"* null, %"class.sh::TFunction"** %340, align 8, !noalias !27
  %341 = bitcast %"class.std::__1::__tree_end_node"** %11 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = bitcast i8* %336 to %"class.std::__1::__tree_node"*
  %344 = bitcast i8* %336 to %"class.std::__1::__tree_node_base"*
  %345 = getelementptr inbounds i8, i8* %336, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %336, i8 0, i64 16, i1 false) #8
  %346 = bitcast i8* %345 to i64*
  store i64 %342, i64* %346, align 8
  %347 = bitcast %"class.std::__1::__tree_node_base"** %331 to i8**
  store i8* %336, i8** %347, align 8
  %348 = getelementptr inbounds %"class.std::__1::map.165", %"class.std::__1::map.165"* %248, i64 0, i32 0, i32 0
  %349 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %348, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %349, i64 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = icmp eq %"class.std::__1::__tree_node_base"* %351, null
  br i1 %352, label %357, label %353

353:                                              ; preds = %335
  %354 = ptrtoint %"class.std::__1::__tree_node_base"* %351 to i64
  %355 = bitcast %"class.std::__1::map.165"* %248 to i64*
  store i64 %354, i64* %355, align 8
  %356 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %331, align 8
  br label %357

357:                                              ; preds = %353, %335
  %358 = phi %"class.std::__1::__tree_node_base"* [ %344, %335 ], [ %356, %353 ]
  %359 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %360 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %359, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %360, %"class.std::__1::__tree_node_base"* %358) #8
  %361 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %362 = load i64, i64* %361, align 8
  %363 = add i64 %362, 1
  store i64 %363, i64* %361, align 8
  br label %364

364:                                              ; preds = %323, %357
  %365 = phi %"class.std::__1::__tree_node"* [ %343, %357 ], [ %333, %323 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %330) #8
  %366 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %365, i64 0, i32 1, i32 0, i32 1
  %367 = bitcast %"class.sh::TFunction"** %366 to i8**
  store i8* %288, i8** %367, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %254) #8
  br label %407

368:                                              ; preds = %247
  %369 = bitcast %"class.std::__1::__tree_end_node"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %369) #8
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %10, align 8
  %370 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISI_EERKT_(%"class.std::__1::__tree.166"* %249, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %10, %"class.sh::TType"* dereferenceable(184) %77) #8
  %371 = bitcast %"class.std::__1::__tree_node_base"** %370 to %"class.std::__1::__tree_node"**
  %372 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %371, align 8
  %373 = icmp eq %"class.std::__1::__tree_node"* %372, null
  br i1 %373, label %374, label %403

374:                                              ; preds = %368
  %375 = call i8* @_Znwm(i64 224) #10, !noalias !30
  %376 = getelementptr inbounds i8, i8* %375, i64 32
  %377 = bitcast i8* %376 to %"class.sh::TType"*
  call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* %377, %"class.sh::TType"* dereferenceable(184) %77) #8, !noalias !30
  %378 = getelementptr inbounds i8, i8* %375, i64 216
  %379 = bitcast i8* %378 to %"class.sh::TFunction"**
  store %"class.sh::TFunction"* null, %"class.sh::TFunction"** %379, align 8, !noalias !30
  %380 = bitcast %"class.std::__1::__tree_end_node"** %10 to i64*
  %381 = load i64, i64* %380, align 8
  %382 = bitcast i8* %375 to %"class.std::__1::__tree_node"*
  %383 = bitcast i8* %375 to %"class.std::__1::__tree_node_base"*
  %384 = getelementptr inbounds i8, i8* %375, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %375, i8 0, i64 16, i1 false) #8
  %385 = bitcast i8* %384 to i64*
  store i64 %381, i64* %385, align 8
  %386 = bitcast %"class.std::__1::__tree_node_base"** %370 to i8**
  store i8* %375, i8** %386, align 8
  %387 = getelementptr inbounds %"class.std::__1::map.165", %"class.std::__1::map.165"* %248, i64 0, i32 0, i32 0
  %388 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %387, align 8
  %389 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %388, i64 0, i32 0
  %390 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %389, align 8
  %391 = icmp eq %"class.std::__1::__tree_node_base"* %390, null
  br i1 %391, label %396, label %392

392:                                              ; preds = %374
  %393 = ptrtoint %"class.std::__1::__tree_node_base"* %390 to i64
  %394 = bitcast %"class.std::__1::map.165"* %248 to i64*
  store i64 %393, i64* %394, align 8
  %395 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %370, align 8
  br label %396

396:                                              ; preds = %392, %374
  %397 = phi %"class.std::__1::__tree_node_base"* [ %383, %374 ], [ %395, %392 ]
  %398 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %399 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %398, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %399, %"class.std::__1::__tree_node_base"* %397) #8
  %400 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %401 = load i64, i64* %400, align 8
  %402 = add i64 %401, 1
  store i64 %402, i64* %400, align 8
  br label %403

403:                                              ; preds = %368, %396
  %404 = phi %"class.std::__1::__tree_node"* [ %382, %396 ], [ %372, %368 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %369) #8
  %405 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %404, i64 0, i32 1, i32 0, i32 1
  %406 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %405, align 8
  br label %407

407:                                              ; preds = %403, %364
  %408 = phi %"class.sh::TFunction"* [ %289, %364 ], [ %406, %403 ]
  %409 = bitcast %"class.sh::TVector.31"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %409) #8
  %410 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %20, i64 0, i32 0, i32 0, i32 0
  %411 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %20, i64 0, i32 0, i32 0, i32 1
  %412 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %20, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %409, i8 0, i64 24, i1 false) #8
  %413 = bitcast %"class.sh::TVector.31"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %413) #8
  %414 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %21, i64 0, i32 0, i32 0, i32 0
  %415 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %21, i64 0, i32 0, i32 0, i32 1
  %416 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %21, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %413, i8 0, i64 24, i1 false) #8
  %417 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 3
  %418 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %417, align 8
  %419 = bitcast %"class.sh::TIntermTyped"* %418 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %420 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %419, align 8
  %421 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %420, i64 31
  %422 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %421, align 8
  %423 = call dereferenceable(184) %"class.sh::TType"* %422(%"class.sh::TIntermTyped"* %418) #8
  %424 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %423, i64 0, i32 0
  %425 = load i32, i32* %424, align 8
  %426 = icmp eq i32 %425, 3
  br i1 %426, label %634, label %427

427:                                              ; preds = %407
  %428 = bitcast %"class.sh::TVector.31"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %428) #8
  %429 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %8, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %428, i8 0, i64 24, i1 false) #8
  %430 = ptrtoint %"class.sh::TIntermTyped"* %418 to i64
  %431 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %8, i64 0, i32 0, i32 0, i32 1
  %432 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %433 = bitcast %"class.sh::TIntermNode"*** %431 to i64*
  %434 = bitcast %"class.sh::TVector.31"* %8 to i64*
  %435 = bitcast %"class.sh::TIntermNode"*** %432 to i64*
  %436 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %437 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %436, i64 8) #8
  %438 = bitcast i8* %437 to %"class.sh::TIntermNode"**
  %439 = getelementptr inbounds i8, i8* %437, i64 8
  %440 = ptrtoint i8* %439 to i64
  %441 = bitcast i8* %437 to i64*
  store i64 %430, i64* %441, align 8
  %442 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %429, align 8
  %443 = ptrtoint %"class.sh::TIntermNode"** %442 to i64
  %444 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %431, align 8
  %445 = bitcast %"class.sh::TIntermNode"** %444 to i8*
  %446 = icmp eq %"class.sh::TIntermNode"** %444, %442
  br i1 %446, label %620, label %447

447:                                              ; preds = %427
  %448 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %444, i64 -1
  %449 = ptrtoint %"class.sh::TIntermNode"** %448 to i64
  %450 = sub i64 %449, %443
  %451 = lshr i64 %450, 3
  %452 = add nuw nsw i64 %451, 1
  %453 = icmp ult i64 %452, 4
  br i1 %453, label %550, label %454

454:                                              ; preds = %447
  %455 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %444, i64 -1
  %456 = ptrtoint %"class.sh::TIntermNode"** %455 to i64
  %457 = sub i64 %456, %443
  %458 = lshr i64 %457, 3
  %459 = and i64 %457, -8
  %460 = xor i64 %459, -8
  %461 = getelementptr i8, i8* %437, i64 %460
  %462 = xor i64 %458, -1
  %463 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %444, i64 %462
  %464 = bitcast %"class.sh::TIntermNode"** %463 to i8*
  %465 = icmp ult i8* %461, %445
  %466 = icmp ugt i8* %437, %464
  %467 = and i1 %465, %466
  br i1 %467, label %550, label %468

468:                                              ; preds = %454
  %469 = and i64 %452, 4611686018427387900
  %470 = sub nsw i64 0, %469
  %471 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %438, i64 %470
  %472 = sub nsw i64 0, %469
  %473 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %444, i64 %472
  %474 = add nsw i64 %469, -4
  %475 = lshr exact i64 %474, 2
  %476 = add nuw nsw i64 %475, 1
  %477 = and i64 %476, 1
  %478 = icmp eq i64 %474, 0
  br i1 %478, label %525, label %479

479:                                              ; preds = %468
  %480 = sub nuw nsw i64 %476, %477
  %481 = getelementptr i8, i8* %437, i64 -8
  %482 = bitcast i8* %481 to %"class.sh::TIntermNode"**
  %483 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %444, i64 -1
  %484 = getelementptr i8, i8* %437, i64 -8
  %485 = bitcast i8* %484 to %"class.sh::TIntermNode"**
  %486 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %444, i64 -1
  br label %487

487:                                              ; preds = %487, %479
  %488 = phi i64 [ 0, %479 ], [ %522, %487 ]
  %489 = phi i64 [ %480, %479 ], [ %523, %487 ]
  %490 = sub i64 0, %488
  %491 = sub i64 0, %488
  %492 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %482, i64 %490
  %493 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %483, i64 %491
  %494 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %493, i64 -1
  %495 = bitcast %"class.sh::TIntermNode"** %494 to <2 x i64>*
  %496 = load <2 x i64>, <2 x i64>* %495, align 8, !alias.scope !33
  %497 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %493, i64 -2
  %498 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %497, i64 -1
  %499 = bitcast %"class.sh::TIntermNode"** %498 to <2 x i64>*
  %500 = load <2 x i64>, <2 x i64>* %499, align 8, !alias.scope !33
  %501 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %492, i64 -1
  %502 = bitcast %"class.sh::TIntermNode"** %501 to <2 x i64>*
  store <2 x i64> %496, <2 x i64>* %502, align 8, !alias.scope !36, !noalias !33
  %503 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %492, i64 -2
  %504 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %503, i64 -1
  %505 = bitcast %"class.sh::TIntermNode"** %504 to <2 x i64>*
  store <2 x i64> %500, <2 x i64>* %505, align 8, !alias.scope !36, !noalias !33
  %506 = sub nuw nsw i64 -4, %488
  %507 = sub nuw nsw i64 -4, %488
  %508 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %485, i64 %506
  %509 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %486, i64 %507
  %510 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %509, i64 -1
  %511 = bitcast %"class.sh::TIntermNode"** %510 to <2 x i64>*
  %512 = load <2 x i64>, <2 x i64>* %511, align 8, !alias.scope !33
  %513 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %509, i64 -2
  %514 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %513, i64 -1
  %515 = bitcast %"class.sh::TIntermNode"** %514 to <2 x i64>*
  %516 = load <2 x i64>, <2 x i64>* %515, align 8, !alias.scope !33
  %517 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %508, i64 -1
  %518 = bitcast %"class.sh::TIntermNode"** %517 to <2 x i64>*
  store <2 x i64> %512, <2 x i64>* %518, align 8, !alias.scope !36, !noalias !33
  %519 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %508, i64 -2
  %520 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %519, i64 -1
  %521 = bitcast %"class.sh::TIntermNode"** %520 to <2 x i64>*
  store <2 x i64> %516, <2 x i64>* %521, align 8, !alias.scope !36, !noalias !33
  %522 = add i64 %488, 8
  %523 = add i64 %489, -2
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %525, label %487, !llvm.loop !38

525:                                              ; preds = %487, %468
  %526 = phi i64 [ 0, %468 ], [ %522, %487 ]
  %527 = icmp eq i64 %477, 0
  br i1 %527, label %548, label %528

528:                                              ; preds = %525
  %529 = sub i64 0, %526
  %530 = getelementptr i8, i8* %437, i64 -8
  %531 = bitcast i8* %530 to %"class.sh::TIntermNode"**
  %532 = sub i64 0, %526
  %533 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %444, i64 -1
  %534 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %531, i64 %529
  %535 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %533, i64 %532
  %536 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %535, i64 -1
  %537 = bitcast %"class.sh::TIntermNode"** %536 to <2 x i64>*
  %538 = load <2 x i64>, <2 x i64>* %537, align 8, !alias.scope !33
  %539 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %535, i64 -2
  %540 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %539, i64 -1
  %541 = bitcast %"class.sh::TIntermNode"** %540 to <2 x i64>*
  %542 = load <2 x i64>, <2 x i64>* %541, align 8, !alias.scope !33
  %543 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %534, i64 -1
  %544 = bitcast %"class.sh::TIntermNode"** %543 to <2 x i64>*
  store <2 x i64> %538, <2 x i64>* %544, align 8, !alias.scope !36, !noalias !33
  %545 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %534, i64 -2
  %546 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %545, i64 -1
  %547 = bitcast %"class.sh::TIntermNode"** %546 to <2 x i64>*
  store <2 x i64> %542, <2 x i64>* %547, align 8, !alias.scope !36, !noalias !33
  br label %548

548:                                              ; preds = %525, %528
  %549 = icmp eq i64 %452, %469
  br i1 %549, label %620, label %550

550:                                              ; preds = %548, %454, %447
  %551 = phi %"class.sh::TIntermNode"** [ %438, %454 ], [ %438, %447 ], [ %471, %548 ]
  %552 = phi %"class.sh::TIntermNode"** [ %444, %454 ], [ %444, %447 ], [ %473, %548 ]
  %553 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %552, i64 -1
  %554 = ptrtoint %"class.sh::TIntermNode"** %553 to i64
  %555 = sub i64 %554, %443
  %556 = lshr i64 %555, 3
  %557 = add nuw nsw i64 %556, 1
  %558 = and i64 %557, 7
  %559 = icmp eq i64 %558, 0
  br i1 %559, label %571, label %560

560:                                              ; preds = %550, %560
  %561 = phi %"class.sh::TIntermNode"** [ %564, %560 ], [ %551, %550 ]
  %562 = phi %"class.sh::TIntermNode"** [ %565, %560 ], [ %552, %550 ]
  %563 = phi i64 [ %569, %560 ], [ %558, %550 ]
  %564 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %561, i64 -1
  %565 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %562, i64 -1
  %566 = bitcast %"class.sh::TIntermNode"** %565 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = bitcast %"class.sh::TIntermNode"** %564 to i64*
  store i64 %567, i64* %568, align 8
  %569 = add i64 %563, -1
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %571, label %560, !llvm.loop !39

571:                                              ; preds = %560, %550
  %572 = phi %"class.sh::TIntermNode"** [ undef, %550 ], [ %564, %560 ]
  %573 = phi %"class.sh::TIntermNode"** [ %551, %550 ], [ %564, %560 ]
  %574 = phi %"class.sh::TIntermNode"** [ %552, %550 ], [ %565, %560 ]
  %575 = icmp ult i64 %555, 56
  br i1 %575, label %620, label %576

576:                                              ; preds = %571, %576
  %577 = phi %"class.sh::TIntermNode"** [ %614, %576 ], [ %573, %571 ]
  %578 = phi %"class.sh::TIntermNode"** [ %615, %576 ], [ %574, %571 ]
  %579 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %577, i64 -1
  %580 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %578, i64 -1
  %581 = bitcast %"class.sh::TIntermNode"** %580 to i64*
  %582 = load i64, i64* %581, align 8
  %583 = bitcast %"class.sh::TIntermNode"** %579 to i64*
  store i64 %582, i64* %583, align 8
  %584 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %577, i64 -2
  %585 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %578, i64 -2
  %586 = bitcast %"class.sh::TIntermNode"** %585 to i64*
  %587 = load i64, i64* %586, align 8
  %588 = bitcast %"class.sh::TIntermNode"** %584 to i64*
  store i64 %587, i64* %588, align 8
  %589 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %577, i64 -3
  %590 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %578, i64 -3
  %591 = bitcast %"class.sh::TIntermNode"** %590 to i64*
  %592 = load i64, i64* %591, align 8
  %593 = bitcast %"class.sh::TIntermNode"** %589 to i64*
  store i64 %592, i64* %593, align 8
  %594 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %577, i64 -4
  %595 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %578, i64 -4
  %596 = bitcast %"class.sh::TIntermNode"** %595 to i64*
  %597 = load i64, i64* %596, align 8
  %598 = bitcast %"class.sh::TIntermNode"** %594 to i64*
  store i64 %597, i64* %598, align 8
  %599 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %577, i64 -5
  %600 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %578, i64 -5
  %601 = bitcast %"class.sh::TIntermNode"** %600 to i64*
  %602 = load i64, i64* %601, align 8
  %603 = bitcast %"class.sh::TIntermNode"** %599 to i64*
  store i64 %602, i64* %603, align 8
  %604 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %577, i64 -6
  %605 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %578, i64 -6
  %606 = bitcast %"class.sh::TIntermNode"** %605 to i64*
  %607 = load i64, i64* %606, align 8
  %608 = bitcast %"class.sh::TIntermNode"** %604 to i64*
  store i64 %607, i64* %608, align 8
  %609 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %577, i64 -7
  %610 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %578, i64 -7
  %611 = bitcast %"class.sh::TIntermNode"** %610 to i64*
  %612 = load i64, i64* %611, align 8
  %613 = bitcast %"class.sh::TIntermNode"** %609 to i64*
  store i64 %612, i64* %613, align 8
  %614 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %577, i64 -8
  %615 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %578, i64 -8
  %616 = bitcast %"class.sh::TIntermNode"** %615 to i64*
  %617 = load i64, i64* %616, align 8
  %618 = bitcast %"class.sh::TIntermNode"** %614 to i64*
  store i64 %617, i64* %618, align 8
  %619 = icmp eq %"class.sh::TIntermNode"** %615, %442
  br i1 %619, label %620, label %576, !llvm.loop !40

620:                                              ; preds = %571, %576, %548, %427
  %621 = phi %"class.sh::TIntermNode"** [ %438, %427 ], [ %471, %548 ], [ %572, %571 ], [ %614, %576 ]
  %622 = ptrtoint %"class.sh::TIntermNode"** %621 to i64
  store i64 %622, i64* %434, align 8
  store i64 %440, i64* %433, align 8
  store i64 %440, i64* %435, align 8
  %623 = bitcast %"class.sh::TType"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %623) #8
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeEhh(%"class.sh::TType"* nonnull %9, i32 3, i8 zeroext 1, i8 zeroext 1) #8
  %624 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate17CreateConstructorERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TType"* nonnull dereferenceable(184) %9, %"class.sh::TVector.31"* nonnull %8) #8
  %625 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %624, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %623) #8
  %626 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %429, align 8
  %627 = icmp eq %"class.sh::TIntermNode"** %626, null
  br i1 %627, label %631, label %628

628:                                              ; preds = %620
  %629 = ptrtoint %"class.sh::TIntermNode"** %626 to i64
  %630 = bitcast %"class.sh::TIntermNode"*** %431 to i64*
  store i64 %629, i64* %630, align 8
  br label %631

631:                                              ; preds = %628, %620
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %428) #8
  %632 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %411, align 8
  %633 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %412, align 8
  br label %634

634:                                              ; preds = %407, %631
  %635 = phi %"class.sh::TIntermNode"** [ %633, %631 ], [ null, %407 ]
  %636 = phi %"class.sh::TIntermNode"** [ %632, %631 ], [ null, %407 ]
  %637 = phi %"class.sh::TIntermTyped"* [ %625, %631 ], [ %418, %407 ]
  %638 = bitcast %"class.sh::TIntermDeclaration"** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %638) #8
  store %"class.sh::TIntermDeclaration"* null, %"class.sh::TIntermDeclaration"** %22, align 8
  %639 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 0, i32 0
  %640 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 0, i32 0, i32 8
  %641 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %640, align 8
  %642 = call %"class.sh::TVariable"* @_ZN2sh19DeclareTempVariableEPNS_12TSymbolTableEPNS_12TIntermTypedENS_10TQualifierEPPNS_18TIntermDeclarationE(%"class.sh::TSymbolTable"* %641, %"class.sh::TIntermTyped"* %637, i32 0, %"class.sh::TIntermDeclaration"** nonnull %22) #8
  %643 = bitcast %"class.sh::TIntermDeclaration"** %22 to i64*
  %644 = load i64, i64* %643, align 8
  %645 = icmp ult %"class.sh::TIntermNode"** %636, %635
  %646 = ptrtoint %"class.sh::TIntermNode"** %635 to i64
  br i1 %645, label %647, label %652

647:                                              ; preds = %634
  %648 = bitcast %"class.sh::TIntermNode"** %636 to i64*
  store i64 %644, i64* %648, align 8
  %649 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %636, i64 1
  %650 = ptrtoint %"class.sh::TIntermNode"** %649 to i64
  %651 = bitcast %"class.sh::TIntermNode"*** %411 to i64*
  store i64 %650, i64* %651, align 8
  br label %864

652:                                              ; preds = %634
  %653 = ptrtoint %"class.sh::TIntermNode"** %636 to i64
  %654 = bitcast %"class.sh::TIntermNode"*** %411 to i64*
  %655 = bitcast %"class.sh::TVector.31"* %20 to i64*
  %656 = load i64, i64* %655, align 8
  %657 = sub i64 %653, %656
  %658 = ashr exact i64 %657, 3
  %659 = add nsw i64 %658, 1
  %660 = icmp ugt i64 %659, 2305843009213693951
  br i1 %660, label %661, label %663

661:                                              ; preds = %652
  %662 = bitcast %"class.sh::TVector.31"* %20 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %662) #9
  unreachable

663:                                              ; preds = %652
  %664 = bitcast %"class.sh::TIntermNode"*** %412 to i64*
  %665 = sub i64 %646, %656
  %666 = ashr exact i64 %665, 3
  %667 = icmp ult i64 %666, 1152921504606846975
  br i1 %667, label %668, label %673

668:                                              ; preds = %663
  %669 = ashr exact i64 %665, 2
  %670 = icmp ult i64 %669, %659
  %671 = select i1 %670, i64 %659, i64 %669
  %672 = icmp eq i64 %671, 0
  br i1 %672, label %679, label %673

673:                                              ; preds = %668, %663
  %674 = phi i64 [ %671, %668 ], [ 2305843009213693951, %663 ]
  %675 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %676 = shl i64 %674, 3
  %677 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %675, i64 %676) #8
  %678 = bitcast i8* %677 to %"class.sh::TIntermNode"**
  br label %679

679:                                              ; preds = %673, %668
  %680 = phi i64 [ %674, %673 ], [ 0, %668 ]
  %681 = phi %"class.sh::TIntermNode"** [ %678, %673 ], [ null, %668 ]
  %682 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %681, i64 %658
  %683 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %681, i64 %680
  %684 = ptrtoint %"class.sh::TIntermNode"** %683 to i64
  %685 = bitcast %"class.sh::TIntermNode"** %682 to i64*
  store i64 %644, i64* %685, align 8
  %686 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %682, i64 1
  %687 = ptrtoint %"class.sh::TIntermNode"** %686 to i64
  %688 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %410, align 8
  %689 = ptrtoint %"class.sh::TIntermNode"** %688 to i64
  %690 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %411, align 8
  %691 = icmp eq %"class.sh::TIntermNode"** %690, %688
  br i1 %691, label %861, label %692

692:                                              ; preds = %679
  %693 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %690, i64 -1
  %694 = ptrtoint %"class.sh::TIntermNode"** %693 to i64
  %695 = sub i64 %694, %689
  %696 = lshr i64 %695, 3
  %697 = add nuw nsw i64 %696, 1
  %698 = icmp ult i64 %697, 4
  br i1 %698, label %791, label %699

699:                                              ; preds = %692
  %700 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %690, i64 -1
  %701 = ptrtoint %"class.sh::TIntermNode"** %700 to i64
  %702 = sub i64 %701, %689
  %703 = lshr i64 %702, 3
  %704 = xor i64 %703, -1
  %705 = add nsw i64 %658, %704
  %706 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %681, i64 %705
  %707 = xor i64 %703, -1
  %708 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %690, i64 %707
  %709 = icmp ult %"class.sh::TIntermNode"** %706, %690
  %710 = icmp ult %"class.sh::TIntermNode"** %708, %682
  %711 = and i1 %709, %710
  br i1 %711, label %791, label %712

712:                                              ; preds = %699
  %713 = and i64 %697, 4611686018427387900
  %714 = sub nsw i64 0, %713
  %715 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %682, i64 %714
  %716 = sub nsw i64 0, %713
  %717 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %690, i64 %716
  %718 = add nsw i64 %713, -4
  %719 = lshr exact i64 %718, 2
  %720 = add nuw nsw i64 %719, 1
  %721 = and i64 %720, 1
  %722 = icmp eq i64 %718, 0
  br i1 %722, label %767, label %723

723:                                              ; preds = %712
  %724 = sub nuw nsw i64 %720, %721
  %725 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %682, i64 -1
  %726 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %690, i64 -1
  %727 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %682, i64 -1
  %728 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %690, i64 -1
  br label %729

729:                                              ; preds = %729, %723
  %730 = phi i64 [ 0, %723 ], [ %764, %729 ]
  %731 = phi i64 [ %724, %723 ], [ %765, %729 ]
  %732 = sub i64 0, %730
  %733 = sub i64 0, %730
  %734 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %725, i64 %732
  %735 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %726, i64 %733
  %736 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %735, i64 -1
  %737 = bitcast %"class.sh::TIntermNode"** %736 to <2 x i64>*
  %738 = load <2 x i64>, <2 x i64>* %737, align 8, !alias.scope !41
  %739 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %735, i64 -2
  %740 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %739, i64 -1
  %741 = bitcast %"class.sh::TIntermNode"** %740 to <2 x i64>*
  %742 = load <2 x i64>, <2 x i64>* %741, align 8, !alias.scope !41
  %743 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %734, i64 -1
  %744 = bitcast %"class.sh::TIntermNode"** %743 to <2 x i64>*
  store <2 x i64> %738, <2 x i64>* %744, align 8, !alias.scope !44, !noalias !41
  %745 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %734, i64 -2
  %746 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %745, i64 -1
  %747 = bitcast %"class.sh::TIntermNode"** %746 to <2 x i64>*
  store <2 x i64> %742, <2 x i64>* %747, align 8, !alias.scope !44, !noalias !41
  %748 = sub nuw nsw i64 -4, %730
  %749 = sub nuw nsw i64 -4, %730
  %750 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %727, i64 %748
  %751 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %728, i64 %749
  %752 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %751, i64 -1
  %753 = bitcast %"class.sh::TIntermNode"** %752 to <2 x i64>*
  %754 = load <2 x i64>, <2 x i64>* %753, align 8, !alias.scope !41
  %755 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %751, i64 -2
  %756 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %755, i64 -1
  %757 = bitcast %"class.sh::TIntermNode"** %756 to <2 x i64>*
  %758 = load <2 x i64>, <2 x i64>* %757, align 8, !alias.scope !41
  %759 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %750, i64 -1
  %760 = bitcast %"class.sh::TIntermNode"** %759 to <2 x i64>*
  store <2 x i64> %754, <2 x i64>* %760, align 8, !alias.scope !44, !noalias !41
  %761 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %750, i64 -2
  %762 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %761, i64 -1
  %763 = bitcast %"class.sh::TIntermNode"** %762 to <2 x i64>*
  store <2 x i64> %758, <2 x i64>* %763, align 8, !alias.scope !44, !noalias !41
  %764 = add i64 %730, 8
  %765 = add i64 %731, -2
  %766 = icmp eq i64 %765, 0
  br i1 %766, label %767, label %729, !llvm.loop !46

767:                                              ; preds = %729, %712
  %768 = phi i64 [ 0, %712 ], [ %764, %729 ]
  %769 = icmp eq i64 %721, 0
  br i1 %769, label %789, label %770

770:                                              ; preds = %767
  %771 = sub i64 0, %768
  %772 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %682, i64 -1
  %773 = sub i64 0, %768
  %774 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %690, i64 -1
  %775 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %772, i64 %771
  %776 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %774, i64 %773
  %777 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %776, i64 -1
  %778 = bitcast %"class.sh::TIntermNode"** %777 to <2 x i64>*
  %779 = load <2 x i64>, <2 x i64>* %778, align 8, !alias.scope !41
  %780 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %776, i64 -2
  %781 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %780, i64 -1
  %782 = bitcast %"class.sh::TIntermNode"** %781 to <2 x i64>*
  %783 = load <2 x i64>, <2 x i64>* %782, align 8, !alias.scope !41
  %784 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %775, i64 -1
  %785 = bitcast %"class.sh::TIntermNode"** %784 to <2 x i64>*
  store <2 x i64> %779, <2 x i64>* %785, align 8, !alias.scope !44, !noalias !41
  %786 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %775, i64 -2
  %787 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %786, i64 -1
  %788 = bitcast %"class.sh::TIntermNode"** %787 to <2 x i64>*
  store <2 x i64> %783, <2 x i64>* %788, align 8, !alias.scope !44, !noalias !41
  br label %789

789:                                              ; preds = %767, %770
  %790 = icmp eq i64 %697, %713
  br i1 %790, label %861, label %791

791:                                              ; preds = %789, %699, %692
  %792 = phi %"class.sh::TIntermNode"** [ %682, %699 ], [ %682, %692 ], [ %715, %789 ]
  %793 = phi %"class.sh::TIntermNode"** [ %690, %699 ], [ %690, %692 ], [ %717, %789 ]
  %794 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %793, i64 -1
  %795 = ptrtoint %"class.sh::TIntermNode"** %794 to i64
  %796 = sub i64 %795, %689
  %797 = lshr i64 %796, 3
  %798 = add nuw nsw i64 %797, 1
  %799 = and i64 %798, 7
  %800 = icmp eq i64 %799, 0
  br i1 %800, label %812, label %801

801:                                              ; preds = %791, %801
  %802 = phi %"class.sh::TIntermNode"** [ %805, %801 ], [ %792, %791 ]
  %803 = phi %"class.sh::TIntermNode"** [ %806, %801 ], [ %793, %791 ]
  %804 = phi i64 [ %810, %801 ], [ %799, %791 ]
  %805 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %802, i64 -1
  %806 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %803, i64 -1
  %807 = bitcast %"class.sh::TIntermNode"** %806 to i64*
  %808 = load i64, i64* %807, align 8
  %809 = bitcast %"class.sh::TIntermNode"** %805 to i64*
  store i64 %808, i64* %809, align 8
  %810 = add i64 %804, -1
  %811 = icmp eq i64 %810, 0
  br i1 %811, label %812, label %801, !llvm.loop !47

812:                                              ; preds = %801, %791
  %813 = phi %"class.sh::TIntermNode"** [ undef, %791 ], [ %805, %801 ]
  %814 = phi %"class.sh::TIntermNode"** [ %792, %791 ], [ %805, %801 ]
  %815 = phi %"class.sh::TIntermNode"** [ %793, %791 ], [ %806, %801 ]
  %816 = icmp ult i64 %796, 56
  br i1 %816, label %861, label %817

817:                                              ; preds = %812, %817
  %818 = phi %"class.sh::TIntermNode"** [ %855, %817 ], [ %814, %812 ]
  %819 = phi %"class.sh::TIntermNode"** [ %856, %817 ], [ %815, %812 ]
  %820 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %818, i64 -1
  %821 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %819, i64 -1
  %822 = bitcast %"class.sh::TIntermNode"** %821 to i64*
  %823 = load i64, i64* %822, align 8
  %824 = bitcast %"class.sh::TIntermNode"** %820 to i64*
  store i64 %823, i64* %824, align 8
  %825 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %818, i64 -2
  %826 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %819, i64 -2
  %827 = bitcast %"class.sh::TIntermNode"** %826 to i64*
  %828 = load i64, i64* %827, align 8
  %829 = bitcast %"class.sh::TIntermNode"** %825 to i64*
  store i64 %828, i64* %829, align 8
  %830 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %818, i64 -3
  %831 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %819, i64 -3
  %832 = bitcast %"class.sh::TIntermNode"** %831 to i64*
  %833 = load i64, i64* %832, align 8
  %834 = bitcast %"class.sh::TIntermNode"** %830 to i64*
  store i64 %833, i64* %834, align 8
  %835 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %818, i64 -4
  %836 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %819, i64 -4
  %837 = bitcast %"class.sh::TIntermNode"** %836 to i64*
  %838 = load i64, i64* %837, align 8
  %839 = bitcast %"class.sh::TIntermNode"** %835 to i64*
  store i64 %838, i64* %839, align 8
  %840 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %818, i64 -5
  %841 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %819, i64 -5
  %842 = bitcast %"class.sh::TIntermNode"** %841 to i64*
  %843 = load i64, i64* %842, align 8
  %844 = bitcast %"class.sh::TIntermNode"** %840 to i64*
  store i64 %843, i64* %844, align 8
  %845 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %818, i64 -6
  %846 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %819, i64 -6
  %847 = bitcast %"class.sh::TIntermNode"** %846 to i64*
  %848 = load i64, i64* %847, align 8
  %849 = bitcast %"class.sh::TIntermNode"** %845 to i64*
  store i64 %848, i64* %849, align 8
  %850 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %818, i64 -7
  %851 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %819, i64 -7
  %852 = bitcast %"class.sh::TIntermNode"** %851 to i64*
  %853 = load i64, i64* %852, align 8
  %854 = bitcast %"class.sh::TIntermNode"** %850 to i64*
  store i64 %853, i64* %854, align 8
  %855 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %818, i64 -8
  %856 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %819, i64 -8
  %857 = bitcast %"class.sh::TIntermNode"** %856 to i64*
  %858 = load i64, i64* %857, align 8
  %859 = bitcast %"class.sh::TIntermNode"** %855 to i64*
  store i64 %858, i64* %859, align 8
  %860 = icmp eq %"class.sh::TIntermNode"** %856, %688
  br i1 %860, label %861, label %817, !llvm.loop !48

861:                                              ; preds = %812, %817, %789, %679
  %862 = phi %"class.sh::TIntermNode"** [ %682, %679 ], [ %715, %789 ], [ %813, %812 ], [ %855, %817 ]
  %863 = ptrtoint %"class.sh::TIntermNode"** %862 to i64
  store i64 %863, i64* %655, align 8
  store i64 %687, i64* %654, align 8
  store i64 %684, i64* %664, align 8
  br label %864

864:                                              ; preds = %861, %647
  %865 = call %"class.sh::TIntermSymbol"* @_ZN2sh20CreateTempSymbolNodeEPKNS_9TVariableE(%"class.sh::TVariable"* %642) #8
  %866 = bitcast %"class.sh::TVector.31"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %866) #8
  %867 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %7, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %866, i8 0, i64 24, i1 false) #8
  %868 = bitcast %"class.sh::TIntermTyped"** %71 to i64*
  %869 = load i64, i64* %868, align 8
  %870 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %7, i64 0, i32 0, i32 0, i32 1
  %871 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %7, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %872 = bitcast %"class.sh::TIntermNode"*** %870 to i64*
  %873 = bitcast %"class.sh::TVector.31"* %7 to i64*
  %874 = bitcast %"class.sh::TIntermNode"*** %871 to i64*
  %875 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %876 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %875, i64 8) #8
  %877 = bitcast i8* %876 to %"class.sh::TIntermNode"**
  %878 = getelementptr inbounds i8, i8* %876, i64 8
  %879 = ptrtoint i8* %878 to i64
  %880 = bitcast i8* %876 to i64*
  store i64 %869, i64* %880, align 8
  %881 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %867, align 8
  %882 = ptrtoint %"class.sh::TIntermNode"** %881 to i64
  %883 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %870, align 8
  %884 = bitcast %"class.sh::TIntermNode"** %883 to i8*
  %885 = icmp eq %"class.sh::TIntermNode"** %883, %881
  br i1 %885, label %1059, label %886

886:                                              ; preds = %864
  %887 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %883, i64 -1
  %888 = ptrtoint %"class.sh::TIntermNode"** %887 to i64
  %889 = sub i64 %888, %882
  %890 = lshr i64 %889, 3
  %891 = add nuw nsw i64 %890, 1
  %892 = icmp ult i64 %891, 4
  br i1 %892, label %989, label %893

893:                                              ; preds = %886
  %894 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %883, i64 -1
  %895 = ptrtoint %"class.sh::TIntermNode"** %894 to i64
  %896 = sub i64 %895, %882
  %897 = lshr i64 %896, 3
  %898 = and i64 %896, -8
  %899 = xor i64 %898, -8
  %900 = getelementptr i8, i8* %876, i64 %899
  %901 = xor i64 %897, -1
  %902 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %883, i64 %901
  %903 = bitcast %"class.sh::TIntermNode"** %902 to i8*
  %904 = icmp ult i8* %900, %884
  %905 = icmp ugt i8* %876, %903
  %906 = and i1 %904, %905
  br i1 %906, label %989, label %907

907:                                              ; preds = %893
  %908 = and i64 %891, 4611686018427387900
  %909 = sub nsw i64 0, %908
  %910 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %877, i64 %909
  %911 = sub nsw i64 0, %908
  %912 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %883, i64 %911
  %913 = add nsw i64 %908, -4
  %914 = lshr exact i64 %913, 2
  %915 = add nuw nsw i64 %914, 1
  %916 = and i64 %915, 1
  %917 = icmp eq i64 %913, 0
  br i1 %917, label %964, label %918

918:                                              ; preds = %907
  %919 = sub nuw nsw i64 %915, %916
  %920 = getelementptr i8, i8* %876, i64 -8
  %921 = bitcast i8* %920 to %"class.sh::TIntermNode"**
  %922 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %883, i64 -1
  %923 = getelementptr i8, i8* %876, i64 -8
  %924 = bitcast i8* %923 to %"class.sh::TIntermNode"**
  %925 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %883, i64 -1
  br label %926

926:                                              ; preds = %926, %918
  %927 = phi i64 [ 0, %918 ], [ %961, %926 ]
  %928 = phi i64 [ %919, %918 ], [ %962, %926 ]
  %929 = sub i64 0, %927
  %930 = sub i64 0, %927
  %931 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %921, i64 %929
  %932 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %922, i64 %930
  %933 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %932, i64 -1
  %934 = bitcast %"class.sh::TIntermNode"** %933 to <2 x i64>*
  %935 = load <2 x i64>, <2 x i64>* %934, align 8, !alias.scope !49
  %936 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %932, i64 -2
  %937 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %936, i64 -1
  %938 = bitcast %"class.sh::TIntermNode"** %937 to <2 x i64>*
  %939 = load <2 x i64>, <2 x i64>* %938, align 8, !alias.scope !49
  %940 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %931, i64 -1
  %941 = bitcast %"class.sh::TIntermNode"** %940 to <2 x i64>*
  store <2 x i64> %935, <2 x i64>* %941, align 8, !alias.scope !52, !noalias !49
  %942 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %931, i64 -2
  %943 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %942, i64 -1
  %944 = bitcast %"class.sh::TIntermNode"** %943 to <2 x i64>*
  store <2 x i64> %939, <2 x i64>* %944, align 8, !alias.scope !52, !noalias !49
  %945 = sub nuw nsw i64 -4, %927
  %946 = sub nuw nsw i64 -4, %927
  %947 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %924, i64 %945
  %948 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %925, i64 %946
  %949 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %948, i64 -1
  %950 = bitcast %"class.sh::TIntermNode"** %949 to <2 x i64>*
  %951 = load <2 x i64>, <2 x i64>* %950, align 8, !alias.scope !49
  %952 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %948, i64 -2
  %953 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %952, i64 -1
  %954 = bitcast %"class.sh::TIntermNode"** %953 to <2 x i64>*
  %955 = load <2 x i64>, <2 x i64>* %954, align 8, !alias.scope !49
  %956 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %947, i64 -1
  %957 = bitcast %"class.sh::TIntermNode"** %956 to <2 x i64>*
  store <2 x i64> %951, <2 x i64>* %957, align 8, !alias.scope !52, !noalias !49
  %958 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %947, i64 -2
  %959 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %958, i64 -1
  %960 = bitcast %"class.sh::TIntermNode"** %959 to <2 x i64>*
  store <2 x i64> %955, <2 x i64>* %960, align 8, !alias.scope !52, !noalias !49
  %961 = add i64 %927, 8
  %962 = add i64 %928, -2
  %963 = icmp eq i64 %962, 0
  br i1 %963, label %964, label %926, !llvm.loop !54

964:                                              ; preds = %926, %907
  %965 = phi i64 [ 0, %907 ], [ %961, %926 ]
  %966 = icmp eq i64 %916, 0
  br i1 %966, label %987, label %967

967:                                              ; preds = %964
  %968 = sub i64 0, %965
  %969 = getelementptr i8, i8* %876, i64 -8
  %970 = bitcast i8* %969 to %"class.sh::TIntermNode"**
  %971 = sub i64 0, %965
  %972 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %883, i64 -1
  %973 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %970, i64 %968
  %974 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %972, i64 %971
  %975 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %974, i64 -1
  %976 = bitcast %"class.sh::TIntermNode"** %975 to <2 x i64>*
  %977 = load <2 x i64>, <2 x i64>* %976, align 8, !alias.scope !49
  %978 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %974, i64 -2
  %979 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %978, i64 -1
  %980 = bitcast %"class.sh::TIntermNode"** %979 to <2 x i64>*
  %981 = load <2 x i64>, <2 x i64>* %980, align 8, !alias.scope !49
  %982 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %973, i64 -1
  %983 = bitcast %"class.sh::TIntermNode"** %982 to <2 x i64>*
  store <2 x i64> %977, <2 x i64>* %983, align 8, !alias.scope !52, !noalias !49
  %984 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %973, i64 -2
  %985 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %984, i64 -1
  %986 = bitcast %"class.sh::TIntermNode"** %985 to <2 x i64>*
  store <2 x i64> %981, <2 x i64>* %986, align 8, !alias.scope !52, !noalias !49
  br label %987

987:                                              ; preds = %964, %967
  %988 = icmp eq i64 %891, %908
  br i1 %988, label %1059, label %989

989:                                              ; preds = %987, %893, %886
  %990 = phi %"class.sh::TIntermNode"** [ %877, %893 ], [ %877, %886 ], [ %910, %987 ]
  %991 = phi %"class.sh::TIntermNode"** [ %883, %893 ], [ %883, %886 ], [ %912, %987 ]
  %992 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %991, i64 -1
  %993 = ptrtoint %"class.sh::TIntermNode"** %992 to i64
  %994 = sub i64 %993, %882
  %995 = lshr i64 %994, 3
  %996 = add nuw nsw i64 %995, 1
  %997 = and i64 %996, 7
  %998 = icmp eq i64 %997, 0
  br i1 %998, label %1010, label %999

999:                                              ; preds = %989, %999
  %1000 = phi %"class.sh::TIntermNode"** [ %1003, %999 ], [ %990, %989 ]
  %1001 = phi %"class.sh::TIntermNode"** [ %1004, %999 ], [ %991, %989 ]
  %1002 = phi i64 [ %1008, %999 ], [ %997, %989 ]
  %1003 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1000, i64 -1
  %1004 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1001, i64 -1
  %1005 = bitcast %"class.sh::TIntermNode"** %1004 to i64*
  %1006 = load i64, i64* %1005, align 8
  %1007 = bitcast %"class.sh::TIntermNode"** %1003 to i64*
  store i64 %1006, i64* %1007, align 8
  %1008 = add i64 %1002, -1
  %1009 = icmp eq i64 %1008, 0
  br i1 %1009, label %1010, label %999, !llvm.loop !55

1010:                                             ; preds = %999, %989
  %1011 = phi %"class.sh::TIntermNode"** [ undef, %989 ], [ %1003, %999 ]
  %1012 = phi %"class.sh::TIntermNode"** [ %990, %989 ], [ %1003, %999 ]
  %1013 = phi %"class.sh::TIntermNode"** [ %991, %989 ], [ %1004, %999 ]
  %1014 = icmp ult i64 %994, 56
  br i1 %1014, label %1059, label %1015

1015:                                             ; preds = %1010, %1015
  %1016 = phi %"class.sh::TIntermNode"** [ %1053, %1015 ], [ %1012, %1010 ]
  %1017 = phi %"class.sh::TIntermNode"** [ %1054, %1015 ], [ %1013, %1010 ]
  %1018 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1016, i64 -1
  %1019 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1017, i64 -1
  %1020 = bitcast %"class.sh::TIntermNode"** %1019 to i64*
  %1021 = load i64, i64* %1020, align 8
  %1022 = bitcast %"class.sh::TIntermNode"** %1018 to i64*
  store i64 %1021, i64* %1022, align 8
  %1023 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1016, i64 -2
  %1024 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1017, i64 -2
  %1025 = bitcast %"class.sh::TIntermNode"** %1024 to i64*
  %1026 = load i64, i64* %1025, align 8
  %1027 = bitcast %"class.sh::TIntermNode"** %1023 to i64*
  store i64 %1026, i64* %1027, align 8
  %1028 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1016, i64 -3
  %1029 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1017, i64 -3
  %1030 = bitcast %"class.sh::TIntermNode"** %1029 to i64*
  %1031 = load i64, i64* %1030, align 8
  %1032 = bitcast %"class.sh::TIntermNode"** %1028 to i64*
  store i64 %1031, i64* %1032, align 8
  %1033 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1016, i64 -4
  %1034 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1017, i64 -4
  %1035 = bitcast %"class.sh::TIntermNode"** %1034 to i64*
  %1036 = load i64, i64* %1035, align 8
  %1037 = bitcast %"class.sh::TIntermNode"** %1033 to i64*
  store i64 %1036, i64* %1037, align 8
  %1038 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1016, i64 -5
  %1039 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1017, i64 -5
  %1040 = bitcast %"class.sh::TIntermNode"** %1039 to i64*
  %1041 = load i64, i64* %1040, align 8
  %1042 = bitcast %"class.sh::TIntermNode"** %1038 to i64*
  store i64 %1041, i64* %1042, align 8
  %1043 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1016, i64 -6
  %1044 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1017, i64 -6
  %1045 = bitcast %"class.sh::TIntermNode"** %1044 to i64*
  %1046 = load i64, i64* %1045, align 8
  %1047 = bitcast %"class.sh::TIntermNode"** %1043 to i64*
  store i64 %1046, i64* %1047, align 8
  %1048 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1016, i64 -7
  %1049 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1017, i64 -7
  %1050 = bitcast %"class.sh::TIntermNode"** %1049 to i64*
  %1051 = load i64, i64* %1050, align 8
  %1052 = bitcast %"class.sh::TIntermNode"** %1048 to i64*
  store i64 %1051, i64* %1052, align 8
  %1053 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1016, i64 -8
  %1054 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1017, i64 -8
  %1055 = bitcast %"class.sh::TIntermNode"** %1054 to i64*
  %1056 = load i64, i64* %1055, align 8
  %1057 = bitcast %"class.sh::TIntermNode"** %1053 to i64*
  store i64 %1056, i64* %1057, align 8
  %1058 = icmp eq %"class.sh::TIntermNode"** %1054, %881
  br i1 %1058, label %1059, label %1015, !llvm.loop !56

1059:                                             ; preds = %1010, %1015, %987, %864
  %1060 = phi %"class.sh::TIntermNode"** [ %877, %864 ], [ %910, %987 ], [ %1011, %1010 ], [ %1053, %1015 ]
  %1061 = ptrtoint %"class.sh::TIntermNode"** %1060 to i64
  store i64 %1061, i64* %873, align 8
  store i64 %879, i64* %872, align 8
  store i64 %879, i64* %874, align 8
  %1062 = ptrtoint %"class.sh::TIntermSymbol"* %865 to i64
  %1063 = ptrtoint i8* %878 to i64
  %1064 = bitcast %"class.sh::TIntermNode"*** %870 to i64*
  %1065 = bitcast %"class.sh::TVector.31"* %7 to i64*
  %1066 = sub i64 %1063, %1061
  %1067 = ashr exact i64 %1066, 3
  %1068 = add nsw i64 %1067, 1
  %1069 = icmp ugt i64 %1068, 2305843009213693951
  br i1 %1069, label %1070, label %1072

1070:                                             ; preds = %1059
  %1071 = bitcast %"class.sh::TVector.31"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1071) #9
  unreachable

1072:                                             ; preds = %1059
  %1073 = ptrtoint i8* %878 to i64
  %1074 = bitcast %"class.sh::TIntermNode"*** %871 to i64*
  %1075 = sub i64 %1073, %1061
  %1076 = ashr exact i64 %1075, 3
  %1077 = icmp ult i64 %1076, 1152921504606846975
  br i1 %1077, label %1078, label %1083

1078:                                             ; preds = %1072
  %1079 = ashr exact i64 %1075, 2
  %1080 = icmp ult i64 %1079, %1068
  %1081 = select i1 %1080, i64 %1068, i64 %1079
  %1082 = icmp eq i64 %1081, 0
  br i1 %1082, label %1089, label %1083

1083:                                             ; preds = %1078, %1072
  %1084 = phi i64 [ %1081, %1078 ], [ 2305843009213693951, %1072 ]
  %1085 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1086 = shl i64 %1084, 3
  %1087 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1085, i64 %1086) #8
  %1088 = bitcast i8* %1087 to %"class.sh::TIntermNode"**
  br label %1089

1089:                                             ; preds = %1083, %1078
  %1090 = phi i64 [ %1084, %1083 ], [ 0, %1078 ]
  %1091 = phi %"class.sh::TIntermNode"** [ %1088, %1083 ], [ null, %1078 ]
  %1092 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1091, i64 %1067
  %1093 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1091, i64 %1090
  %1094 = ptrtoint %"class.sh::TIntermNode"** %1093 to i64
  %1095 = bitcast %"class.sh::TIntermNode"** %1092 to i64*
  store i64 %1062, i64* %1095, align 8
  %1096 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1092, i64 1
  %1097 = ptrtoint %"class.sh::TIntermNode"** %1096 to i64
  %1098 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %867, align 8
  %1099 = ptrtoint %"class.sh::TIntermNode"** %1098 to i64
  %1100 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %870, align 8
  %1101 = icmp eq %"class.sh::TIntermNode"** %1100, %1098
  br i1 %1101, label %1271, label %1102

1102:                                             ; preds = %1089
  %1103 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1100, i64 -1
  %1104 = ptrtoint %"class.sh::TIntermNode"** %1103 to i64
  %1105 = sub i64 %1104, %1099
  %1106 = lshr i64 %1105, 3
  %1107 = add nuw nsw i64 %1106, 1
  %1108 = icmp ult i64 %1107, 4
  br i1 %1108, label %1201, label %1109

1109:                                             ; preds = %1102
  %1110 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1100, i64 -1
  %1111 = ptrtoint %"class.sh::TIntermNode"** %1110 to i64
  %1112 = sub i64 %1111, %1099
  %1113 = lshr i64 %1112, 3
  %1114 = xor i64 %1113, -1
  %1115 = add nsw i64 %1067, %1114
  %1116 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1091, i64 %1115
  %1117 = xor i64 %1113, -1
  %1118 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1100, i64 %1117
  %1119 = icmp ult %"class.sh::TIntermNode"** %1116, %1100
  %1120 = icmp ult %"class.sh::TIntermNode"** %1118, %1092
  %1121 = and i1 %1119, %1120
  br i1 %1121, label %1201, label %1122

1122:                                             ; preds = %1109
  %1123 = and i64 %1107, 4611686018427387900
  %1124 = sub nsw i64 0, %1123
  %1125 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1092, i64 %1124
  %1126 = sub nsw i64 0, %1123
  %1127 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1100, i64 %1126
  %1128 = add nsw i64 %1123, -4
  %1129 = lshr exact i64 %1128, 2
  %1130 = add nuw nsw i64 %1129, 1
  %1131 = and i64 %1130, 1
  %1132 = icmp eq i64 %1128, 0
  br i1 %1132, label %1177, label %1133

1133:                                             ; preds = %1122
  %1134 = sub nuw nsw i64 %1130, %1131
  %1135 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1092, i64 -1
  %1136 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1100, i64 -1
  %1137 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1092, i64 -1
  %1138 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1100, i64 -1
  br label %1139

1139:                                             ; preds = %1139, %1133
  %1140 = phi i64 [ 0, %1133 ], [ %1174, %1139 ]
  %1141 = phi i64 [ %1134, %1133 ], [ %1175, %1139 ]
  %1142 = sub i64 0, %1140
  %1143 = sub i64 0, %1140
  %1144 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1135, i64 %1142
  %1145 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1136, i64 %1143
  %1146 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1145, i64 -1
  %1147 = bitcast %"class.sh::TIntermNode"** %1146 to <2 x i64>*
  %1148 = load <2 x i64>, <2 x i64>* %1147, align 8, !alias.scope !57
  %1149 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1145, i64 -2
  %1150 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1149, i64 -1
  %1151 = bitcast %"class.sh::TIntermNode"** %1150 to <2 x i64>*
  %1152 = load <2 x i64>, <2 x i64>* %1151, align 8, !alias.scope !57
  %1153 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1144, i64 -1
  %1154 = bitcast %"class.sh::TIntermNode"** %1153 to <2 x i64>*
  store <2 x i64> %1148, <2 x i64>* %1154, align 8, !alias.scope !60, !noalias !57
  %1155 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1144, i64 -2
  %1156 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1155, i64 -1
  %1157 = bitcast %"class.sh::TIntermNode"** %1156 to <2 x i64>*
  store <2 x i64> %1152, <2 x i64>* %1157, align 8, !alias.scope !60, !noalias !57
  %1158 = sub nuw nsw i64 -4, %1140
  %1159 = sub nuw nsw i64 -4, %1140
  %1160 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1137, i64 %1158
  %1161 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1138, i64 %1159
  %1162 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1161, i64 -1
  %1163 = bitcast %"class.sh::TIntermNode"** %1162 to <2 x i64>*
  %1164 = load <2 x i64>, <2 x i64>* %1163, align 8, !alias.scope !57
  %1165 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1161, i64 -2
  %1166 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1165, i64 -1
  %1167 = bitcast %"class.sh::TIntermNode"** %1166 to <2 x i64>*
  %1168 = load <2 x i64>, <2 x i64>* %1167, align 8, !alias.scope !57
  %1169 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1160, i64 -1
  %1170 = bitcast %"class.sh::TIntermNode"** %1169 to <2 x i64>*
  store <2 x i64> %1164, <2 x i64>* %1170, align 8, !alias.scope !60, !noalias !57
  %1171 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1160, i64 -2
  %1172 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1171, i64 -1
  %1173 = bitcast %"class.sh::TIntermNode"** %1172 to <2 x i64>*
  store <2 x i64> %1168, <2 x i64>* %1173, align 8, !alias.scope !60, !noalias !57
  %1174 = add i64 %1140, 8
  %1175 = add i64 %1141, -2
  %1176 = icmp eq i64 %1175, 0
  br i1 %1176, label %1177, label %1139, !llvm.loop !62

1177:                                             ; preds = %1139, %1122
  %1178 = phi i64 [ 0, %1122 ], [ %1174, %1139 ]
  %1179 = icmp eq i64 %1131, 0
  br i1 %1179, label %1199, label %1180

1180:                                             ; preds = %1177
  %1181 = sub i64 0, %1178
  %1182 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1092, i64 -1
  %1183 = sub i64 0, %1178
  %1184 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1100, i64 -1
  %1185 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1182, i64 %1181
  %1186 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1184, i64 %1183
  %1187 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1186, i64 -1
  %1188 = bitcast %"class.sh::TIntermNode"** %1187 to <2 x i64>*
  %1189 = load <2 x i64>, <2 x i64>* %1188, align 8, !alias.scope !57
  %1190 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1186, i64 -2
  %1191 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1190, i64 -1
  %1192 = bitcast %"class.sh::TIntermNode"** %1191 to <2 x i64>*
  %1193 = load <2 x i64>, <2 x i64>* %1192, align 8, !alias.scope !57
  %1194 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1185, i64 -1
  %1195 = bitcast %"class.sh::TIntermNode"** %1194 to <2 x i64>*
  store <2 x i64> %1189, <2 x i64>* %1195, align 8, !alias.scope !60, !noalias !57
  %1196 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1185, i64 -2
  %1197 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1196, i64 -1
  %1198 = bitcast %"class.sh::TIntermNode"** %1197 to <2 x i64>*
  store <2 x i64> %1193, <2 x i64>* %1198, align 8, !alias.scope !60, !noalias !57
  br label %1199

1199:                                             ; preds = %1177, %1180
  %1200 = icmp eq i64 %1107, %1123
  br i1 %1200, label %1271, label %1201

1201:                                             ; preds = %1199, %1109, %1102
  %1202 = phi %"class.sh::TIntermNode"** [ %1092, %1109 ], [ %1092, %1102 ], [ %1125, %1199 ]
  %1203 = phi %"class.sh::TIntermNode"** [ %1100, %1109 ], [ %1100, %1102 ], [ %1127, %1199 ]
  %1204 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1203, i64 -1
  %1205 = ptrtoint %"class.sh::TIntermNode"** %1204 to i64
  %1206 = sub i64 %1205, %1099
  %1207 = lshr i64 %1206, 3
  %1208 = add nuw nsw i64 %1207, 1
  %1209 = and i64 %1208, 7
  %1210 = icmp eq i64 %1209, 0
  br i1 %1210, label %1222, label %1211

1211:                                             ; preds = %1201, %1211
  %1212 = phi %"class.sh::TIntermNode"** [ %1215, %1211 ], [ %1202, %1201 ]
  %1213 = phi %"class.sh::TIntermNode"** [ %1216, %1211 ], [ %1203, %1201 ]
  %1214 = phi i64 [ %1220, %1211 ], [ %1209, %1201 ]
  %1215 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1212, i64 -1
  %1216 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1213, i64 -1
  %1217 = bitcast %"class.sh::TIntermNode"** %1216 to i64*
  %1218 = load i64, i64* %1217, align 8
  %1219 = bitcast %"class.sh::TIntermNode"** %1215 to i64*
  store i64 %1218, i64* %1219, align 8
  %1220 = add i64 %1214, -1
  %1221 = icmp eq i64 %1220, 0
  br i1 %1221, label %1222, label %1211, !llvm.loop !63

1222:                                             ; preds = %1211, %1201
  %1223 = phi %"class.sh::TIntermNode"** [ undef, %1201 ], [ %1215, %1211 ]
  %1224 = phi %"class.sh::TIntermNode"** [ %1202, %1201 ], [ %1215, %1211 ]
  %1225 = phi %"class.sh::TIntermNode"** [ %1203, %1201 ], [ %1216, %1211 ]
  %1226 = icmp ult i64 %1206, 56
  br i1 %1226, label %1271, label %1227

1227:                                             ; preds = %1222, %1227
  %1228 = phi %"class.sh::TIntermNode"** [ %1265, %1227 ], [ %1224, %1222 ]
  %1229 = phi %"class.sh::TIntermNode"** [ %1266, %1227 ], [ %1225, %1222 ]
  %1230 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1228, i64 -1
  %1231 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1229, i64 -1
  %1232 = bitcast %"class.sh::TIntermNode"** %1231 to i64*
  %1233 = load i64, i64* %1232, align 8
  %1234 = bitcast %"class.sh::TIntermNode"** %1230 to i64*
  store i64 %1233, i64* %1234, align 8
  %1235 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1228, i64 -2
  %1236 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1229, i64 -2
  %1237 = bitcast %"class.sh::TIntermNode"** %1236 to i64*
  %1238 = load i64, i64* %1237, align 8
  %1239 = bitcast %"class.sh::TIntermNode"** %1235 to i64*
  store i64 %1238, i64* %1239, align 8
  %1240 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1228, i64 -3
  %1241 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1229, i64 -3
  %1242 = bitcast %"class.sh::TIntermNode"** %1241 to i64*
  %1243 = load i64, i64* %1242, align 8
  %1244 = bitcast %"class.sh::TIntermNode"** %1240 to i64*
  store i64 %1243, i64* %1244, align 8
  %1245 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1228, i64 -4
  %1246 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1229, i64 -4
  %1247 = bitcast %"class.sh::TIntermNode"** %1246 to i64*
  %1248 = load i64, i64* %1247, align 8
  %1249 = bitcast %"class.sh::TIntermNode"** %1245 to i64*
  store i64 %1248, i64* %1249, align 8
  %1250 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1228, i64 -5
  %1251 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1229, i64 -5
  %1252 = bitcast %"class.sh::TIntermNode"** %1251 to i64*
  %1253 = load i64, i64* %1252, align 8
  %1254 = bitcast %"class.sh::TIntermNode"** %1250 to i64*
  store i64 %1253, i64* %1254, align 8
  %1255 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1228, i64 -6
  %1256 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1229, i64 -6
  %1257 = bitcast %"class.sh::TIntermNode"** %1256 to i64*
  %1258 = load i64, i64* %1257, align 8
  %1259 = bitcast %"class.sh::TIntermNode"** %1255 to i64*
  store i64 %1258, i64* %1259, align 8
  %1260 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1228, i64 -7
  %1261 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1229, i64 -7
  %1262 = bitcast %"class.sh::TIntermNode"** %1261 to i64*
  %1263 = load i64, i64* %1262, align 8
  %1264 = bitcast %"class.sh::TIntermNode"** %1260 to i64*
  store i64 %1263, i64* %1264, align 8
  %1265 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1228, i64 -8
  %1266 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1229, i64 -8
  %1267 = bitcast %"class.sh::TIntermNode"** %1266 to i64*
  %1268 = load i64, i64* %1267, align 8
  %1269 = bitcast %"class.sh::TIntermNode"** %1265 to i64*
  store i64 %1268, i64* %1269, align 8
  %1270 = icmp eq %"class.sh::TIntermNode"** %1266, %1098
  br i1 %1270, label %1271, label %1227, !llvm.loop !64

1271:                                             ; preds = %1222, %1227, %1199, %1089
  %1272 = phi %"class.sh::TIntermNode"** [ %1092, %1089 ], [ %1125, %1199 ], [ %1223, %1222 ], [ %1265, %1227 ]
  %1273 = ptrtoint %"class.sh::TIntermNode"** %1272 to i64
  store i64 %1273, i64* %1065, align 8
  store i64 %1097, i64* %1064, align 8
  store i64 %1094, i64* %1074, align 8
  %1274 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate18CreateFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* dereferenceable(80) %226, %"class.sh::TVector.31"* nonnull %7) #8
  %1275 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1276 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1274, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1277 = bitcast %"struct.sh::TSourceLoc"* %1276 to i8*
  %1278 = bitcast %"struct.sh::TSourceLoc"* %1275 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1277, i8* align 4 %1278, i64 16, i1 false) #8
  %1279 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %867, align 8
  %1280 = icmp eq %"class.sh::TIntermNode"** %1279, null
  br i1 %1280, label %1284, label %1281

1281:                                             ; preds = %1271
  %1282 = ptrtoint %"class.sh::TIntermNode"** %1279 to i64
  %1283 = bitcast %"class.sh::TIntermNode"*** %870 to i64*
  store i64 %1282, i64* %1283, align 8
  br label %1284

1284:                                             ; preds = %1271, %1281
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %866) #8
  %1285 = bitcast %"class.sh::TIntermDeclaration"** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1285) #8
  store %"class.sh::TIntermDeclaration"* null, %"class.sh::TIntermDeclaration"** %23, align 8
  %1286 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %640, align 8
  %1287 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1274, i64 0, i32 0, i32 0, i32 0
  %1288 = call %"class.sh::TVariable"* @_ZN2sh19DeclareTempVariableEPNS_12TSymbolTableEPNS_12TIntermTypedENS_10TQualifierEPPNS_18TIntermDeclarationE(%"class.sh::TSymbolTable"* %1286, %"class.sh::TIntermTyped"* %1287, i32 0, %"class.sh::TIntermDeclaration"** nonnull %23) #8
  %1289 = bitcast %"class.sh::TIntermDeclaration"** %23 to i64*
  %1290 = load i64, i64* %1289, align 8
  %1291 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %411, align 8
  %1292 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %412, align 8
  %1293 = icmp ult %"class.sh::TIntermNode"** %1291, %1292
  %1294 = ptrtoint %"class.sh::TIntermNode"** %1292 to i64
  br i1 %1293, label %1295, label %1300

1295:                                             ; preds = %1284
  %1296 = bitcast %"class.sh::TIntermNode"** %1291 to i64*
  store i64 %1290, i64* %1296, align 8
  %1297 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1291, i64 1
  %1298 = ptrtoint %"class.sh::TIntermNode"** %1297 to i64
  %1299 = bitcast %"class.sh::TIntermNode"*** %411 to i64*
  store i64 %1298, i64* %1299, align 8
  br label %1512

1300:                                             ; preds = %1284
  %1301 = ptrtoint %"class.sh::TIntermNode"** %1291 to i64
  %1302 = bitcast %"class.sh::TIntermNode"*** %411 to i64*
  %1303 = bitcast %"class.sh::TVector.31"* %20 to i64*
  %1304 = load i64, i64* %1303, align 8
  %1305 = sub i64 %1301, %1304
  %1306 = ashr exact i64 %1305, 3
  %1307 = add nsw i64 %1306, 1
  %1308 = icmp ugt i64 %1307, 2305843009213693951
  br i1 %1308, label %1309, label %1311

1309:                                             ; preds = %1300
  %1310 = bitcast %"class.sh::TVector.31"* %20 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1310) #9
  unreachable

1311:                                             ; preds = %1300
  %1312 = bitcast %"class.sh::TIntermNode"*** %412 to i64*
  %1313 = sub i64 %1294, %1304
  %1314 = ashr exact i64 %1313, 3
  %1315 = icmp ult i64 %1314, 1152921504606846975
  br i1 %1315, label %1316, label %1321

1316:                                             ; preds = %1311
  %1317 = ashr exact i64 %1313, 2
  %1318 = icmp ult i64 %1317, %1307
  %1319 = select i1 %1318, i64 %1307, i64 %1317
  %1320 = icmp eq i64 %1319, 0
  br i1 %1320, label %1327, label %1321

1321:                                             ; preds = %1316, %1311
  %1322 = phi i64 [ %1319, %1316 ], [ 2305843009213693951, %1311 ]
  %1323 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1324 = shl i64 %1322, 3
  %1325 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1323, i64 %1324) #8
  %1326 = bitcast i8* %1325 to %"class.sh::TIntermNode"**
  br label %1327

1327:                                             ; preds = %1321, %1316
  %1328 = phi i64 [ %1322, %1321 ], [ 0, %1316 ]
  %1329 = phi %"class.sh::TIntermNode"** [ %1326, %1321 ], [ null, %1316 ]
  %1330 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1329, i64 %1306
  %1331 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1329, i64 %1328
  %1332 = ptrtoint %"class.sh::TIntermNode"** %1331 to i64
  %1333 = bitcast %"class.sh::TIntermNode"** %1330 to i64*
  store i64 %1290, i64* %1333, align 8
  %1334 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1330, i64 1
  %1335 = ptrtoint %"class.sh::TIntermNode"** %1334 to i64
  %1336 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %410, align 8
  %1337 = ptrtoint %"class.sh::TIntermNode"** %1336 to i64
  %1338 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %411, align 8
  %1339 = icmp eq %"class.sh::TIntermNode"** %1338, %1336
  br i1 %1339, label %1509, label %1340

1340:                                             ; preds = %1327
  %1341 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1338, i64 -1
  %1342 = ptrtoint %"class.sh::TIntermNode"** %1341 to i64
  %1343 = sub i64 %1342, %1337
  %1344 = lshr i64 %1343, 3
  %1345 = add nuw nsw i64 %1344, 1
  %1346 = icmp ult i64 %1345, 4
  br i1 %1346, label %1439, label %1347

1347:                                             ; preds = %1340
  %1348 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1338, i64 -1
  %1349 = ptrtoint %"class.sh::TIntermNode"** %1348 to i64
  %1350 = sub i64 %1349, %1337
  %1351 = lshr i64 %1350, 3
  %1352 = xor i64 %1351, -1
  %1353 = add nsw i64 %1306, %1352
  %1354 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1329, i64 %1353
  %1355 = xor i64 %1351, -1
  %1356 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1338, i64 %1355
  %1357 = icmp ult %"class.sh::TIntermNode"** %1354, %1338
  %1358 = icmp ult %"class.sh::TIntermNode"** %1356, %1330
  %1359 = and i1 %1357, %1358
  br i1 %1359, label %1439, label %1360

1360:                                             ; preds = %1347
  %1361 = and i64 %1345, 4611686018427387900
  %1362 = sub nsw i64 0, %1361
  %1363 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1330, i64 %1362
  %1364 = sub nsw i64 0, %1361
  %1365 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1338, i64 %1364
  %1366 = add nsw i64 %1361, -4
  %1367 = lshr exact i64 %1366, 2
  %1368 = add nuw nsw i64 %1367, 1
  %1369 = and i64 %1368, 1
  %1370 = icmp eq i64 %1366, 0
  br i1 %1370, label %1415, label %1371

1371:                                             ; preds = %1360
  %1372 = sub nuw nsw i64 %1368, %1369
  %1373 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1330, i64 -1
  %1374 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1338, i64 -1
  %1375 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1330, i64 -1
  %1376 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1338, i64 -1
  br label %1377

1377:                                             ; preds = %1377, %1371
  %1378 = phi i64 [ 0, %1371 ], [ %1412, %1377 ]
  %1379 = phi i64 [ %1372, %1371 ], [ %1413, %1377 ]
  %1380 = sub i64 0, %1378
  %1381 = sub i64 0, %1378
  %1382 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1373, i64 %1380
  %1383 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1374, i64 %1381
  %1384 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1383, i64 -1
  %1385 = bitcast %"class.sh::TIntermNode"** %1384 to <2 x i64>*
  %1386 = load <2 x i64>, <2 x i64>* %1385, align 8, !alias.scope !65
  %1387 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1383, i64 -2
  %1388 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1387, i64 -1
  %1389 = bitcast %"class.sh::TIntermNode"** %1388 to <2 x i64>*
  %1390 = load <2 x i64>, <2 x i64>* %1389, align 8, !alias.scope !65
  %1391 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1382, i64 -1
  %1392 = bitcast %"class.sh::TIntermNode"** %1391 to <2 x i64>*
  store <2 x i64> %1386, <2 x i64>* %1392, align 8, !alias.scope !68, !noalias !65
  %1393 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1382, i64 -2
  %1394 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1393, i64 -1
  %1395 = bitcast %"class.sh::TIntermNode"** %1394 to <2 x i64>*
  store <2 x i64> %1390, <2 x i64>* %1395, align 8, !alias.scope !68, !noalias !65
  %1396 = sub nuw nsw i64 -4, %1378
  %1397 = sub nuw nsw i64 -4, %1378
  %1398 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1375, i64 %1396
  %1399 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1376, i64 %1397
  %1400 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1399, i64 -1
  %1401 = bitcast %"class.sh::TIntermNode"** %1400 to <2 x i64>*
  %1402 = load <2 x i64>, <2 x i64>* %1401, align 8, !alias.scope !65
  %1403 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1399, i64 -2
  %1404 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1403, i64 -1
  %1405 = bitcast %"class.sh::TIntermNode"** %1404 to <2 x i64>*
  %1406 = load <2 x i64>, <2 x i64>* %1405, align 8, !alias.scope !65
  %1407 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1398, i64 -1
  %1408 = bitcast %"class.sh::TIntermNode"** %1407 to <2 x i64>*
  store <2 x i64> %1402, <2 x i64>* %1408, align 8, !alias.scope !68, !noalias !65
  %1409 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1398, i64 -2
  %1410 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1409, i64 -1
  %1411 = bitcast %"class.sh::TIntermNode"** %1410 to <2 x i64>*
  store <2 x i64> %1406, <2 x i64>* %1411, align 8, !alias.scope !68, !noalias !65
  %1412 = add i64 %1378, 8
  %1413 = add i64 %1379, -2
  %1414 = icmp eq i64 %1413, 0
  br i1 %1414, label %1415, label %1377, !llvm.loop !70

1415:                                             ; preds = %1377, %1360
  %1416 = phi i64 [ 0, %1360 ], [ %1412, %1377 ]
  %1417 = icmp eq i64 %1369, 0
  br i1 %1417, label %1437, label %1418

1418:                                             ; preds = %1415
  %1419 = sub i64 0, %1416
  %1420 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1330, i64 -1
  %1421 = sub i64 0, %1416
  %1422 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1338, i64 -1
  %1423 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1420, i64 %1419
  %1424 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1422, i64 %1421
  %1425 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1424, i64 -1
  %1426 = bitcast %"class.sh::TIntermNode"** %1425 to <2 x i64>*
  %1427 = load <2 x i64>, <2 x i64>* %1426, align 8, !alias.scope !65
  %1428 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1424, i64 -2
  %1429 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1428, i64 -1
  %1430 = bitcast %"class.sh::TIntermNode"** %1429 to <2 x i64>*
  %1431 = load <2 x i64>, <2 x i64>* %1430, align 8, !alias.scope !65
  %1432 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1423, i64 -1
  %1433 = bitcast %"class.sh::TIntermNode"** %1432 to <2 x i64>*
  store <2 x i64> %1427, <2 x i64>* %1433, align 8, !alias.scope !68, !noalias !65
  %1434 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1423, i64 -2
  %1435 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1434, i64 -1
  %1436 = bitcast %"class.sh::TIntermNode"** %1435 to <2 x i64>*
  store <2 x i64> %1431, <2 x i64>* %1436, align 8, !alias.scope !68, !noalias !65
  br label %1437

1437:                                             ; preds = %1415, %1418
  %1438 = icmp eq i64 %1345, %1361
  br i1 %1438, label %1509, label %1439

1439:                                             ; preds = %1437, %1347, %1340
  %1440 = phi %"class.sh::TIntermNode"** [ %1330, %1347 ], [ %1330, %1340 ], [ %1363, %1437 ]
  %1441 = phi %"class.sh::TIntermNode"** [ %1338, %1347 ], [ %1338, %1340 ], [ %1365, %1437 ]
  %1442 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1441, i64 -1
  %1443 = ptrtoint %"class.sh::TIntermNode"** %1442 to i64
  %1444 = sub i64 %1443, %1337
  %1445 = lshr i64 %1444, 3
  %1446 = add nuw nsw i64 %1445, 1
  %1447 = and i64 %1446, 7
  %1448 = icmp eq i64 %1447, 0
  br i1 %1448, label %1460, label %1449

1449:                                             ; preds = %1439, %1449
  %1450 = phi %"class.sh::TIntermNode"** [ %1453, %1449 ], [ %1440, %1439 ]
  %1451 = phi %"class.sh::TIntermNode"** [ %1454, %1449 ], [ %1441, %1439 ]
  %1452 = phi i64 [ %1458, %1449 ], [ %1447, %1439 ]
  %1453 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1450, i64 -1
  %1454 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1451, i64 -1
  %1455 = bitcast %"class.sh::TIntermNode"** %1454 to i64*
  %1456 = load i64, i64* %1455, align 8
  %1457 = bitcast %"class.sh::TIntermNode"** %1453 to i64*
  store i64 %1456, i64* %1457, align 8
  %1458 = add i64 %1452, -1
  %1459 = icmp eq i64 %1458, 0
  br i1 %1459, label %1460, label %1449, !llvm.loop !71

1460:                                             ; preds = %1449, %1439
  %1461 = phi %"class.sh::TIntermNode"** [ undef, %1439 ], [ %1453, %1449 ]
  %1462 = phi %"class.sh::TIntermNode"** [ %1440, %1439 ], [ %1453, %1449 ]
  %1463 = phi %"class.sh::TIntermNode"** [ %1441, %1439 ], [ %1454, %1449 ]
  %1464 = icmp ult i64 %1444, 56
  br i1 %1464, label %1509, label %1465

1465:                                             ; preds = %1460, %1465
  %1466 = phi %"class.sh::TIntermNode"** [ %1503, %1465 ], [ %1462, %1460 ]
  %1467 = phi %"class.sh::TIntermNode"** [ %1504, %1465 ], [ %1463, %1460 ]
  %1468 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1466, i64 -1
  %1469 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1467, i64 -1
  %1470 = bitcast %"class.sh::TIntermNode"** %1469 to i64*
  %1471 = load i64, i64* %1470, align 8
  %1472 = bitcast %"class.sh::TIntermNode"** %1468 to i64*
  store i64 %1471, i64* %1472, align 8
  %1473 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1466, i64 -2
  %1474 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1467, i64 -2
  %1475 = bitcast %"class.sh::TIntermNode"** %1474 to i64*
  %1476 = load i64, i64* %1475, align 8
  %1477 = bitcast %"class.sh::TIntermNode"** %1473 to i64*
  store i64 %1476, i64* %1477, align 8
  %1478 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1466, i64 -3
  %1479 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1467, i64 -3
  %1480 = bitcast %"class.sh::TIntermNode"** %1479 to i64*
  %1481 = load i64, i64* %1480, align 8
  %1482 = bitcast %"class.sh::TIntermNode"** %1478 to i64*
  store i64 %1481, i64* %1482, align 8
  %1483 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1466, i64 -4
  %1484 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1467, i64 -4
  %1485 = bitcast %"class.sh::TIntermNode"** %1484 to i64*
  %1486 = load i64, i64* %1485, align 8
  %1487 = bitcast %"class.sh::TIntermNode"** %1483 to i64*
  store i64 %1486, i64* %1487, align 8
  %1488 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1466, i64 -5
  %1489 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1467, i64 -5
  %1490 = bitcast %"class.sh::TIntermNode"** %1489 to i64*
  %1491 = load i64, i64* %1490, align 8
  %1492 = bitcast %"class.sh::TIntermNode"** %1488 to i64*
  store i64 %1491, i64* %1492, align 8
  %1493 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1466, i64 -6
  %1494 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1467, i64 -6
  %1495 = bitcast %"class.sh::TIntermNode"** %1494 to i64*
  %1496 = load i64, i64* %1495, align 8
  %1497 = bitcast %"class.sh::TIntermNode"** %1493 to i64*
  store i64 %1496, i64* %1497, align 8
  %1498 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1466, i64 -7
  %1499 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1467, i64 -7
  %1500 = bitcast %"class.sh::TIntermNode"** %1499 to i64*
  %1501 = load i64, i64* %1500, align 8
  %1502 = bitcast %"class.sh::TIntermNode"** %1498 to i64*
  store i64 %1501, i64* %1502, align 8
  %1503 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1466, i64 -8
  %1504 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1467, i64 -8
  %1505 = bitcast %"class.sh::TIntermNode"** %1504 to i64*
  %1506 = load i64, i64* %1505, align 8
  %1507 = bitcast %"class.sh::TIntermNode"** %1503 to i64*
  store i64 %1506, i64* %1507, align 8
  %1508 = icmp eq %"class.sh::TIntermNode"** %1504, %1336
  br i1 %1508, label %1509, label %1465, !llvm.loop !72

1509:                                             ; preds = %1460, %1465, %1437, %1327
  %1510 = phi %"class.sh::TIntermNode"** [ %1330, %1327 ], [ %1363, %1437 ], [ %1461, %1460 ], [ %1503, %1465 ]
  %1511 = ptrtoint %"class.sh::TIntermNode"** %1510 to i64
  store i64 %1511, i64* %1303, align 8
  store i64 %1335, i64* %1302, align 8
  store i64 %1332, i64* %1312, align 8
  br label %1512

1512:                                             ; preds = %1295, %1509
  %1513 = bitcast %"class.sh::TVector.31"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1513) #8
  %1514 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %6, i64 0, i32 0, i32 0, i32 0
  %1515 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %6, i64 0, i32 0, i32 0, i32 1
  %1516 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1513, i8 0, i64 24, i1 false) #8
  %1517 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %71, align 8
  %1518 = bitcast %"class.sh::TIntermTyped"* %1517 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %1519 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %1518, align 8
  %1520 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1519, i64 23
  %1521 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1520, align 8
  %1522 = call %"class.sh::TIntermTyped"* %1521(%"class.sh::TIntermTyped"* %1517) #8
  %1523 = ptrtoint %"class.sh::TIntermTyped"* %1522 to i64
  %1524 = bitcast %"class.sh::TIntermNode"*** %1515 to i64*
  %1525 = bitcast %"class.sh::TVector.31"* %6 to i64*
  %1526 = bitcast %"class.sh::TIntermNode"*** %1516 to i64*
  %1527 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1528 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1527, i64 8) #8
  %1529 = bitcast i8* %1528 to %"class.sh::TIntermNode"**
  %1530 = getelementptr inbounds i8, i8* %1528, i64 8
  %1531 = ptrtoint i8* %1530 to i64
  %1532 = bitcast i8* %1528 to i64*
  store i64 %1523, i64* %1532, align 8
  %1533 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1514, align 8
  %1534 = ptrtoint %"class.sh::TIntermNode"** %1533 to i64
  %1535 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1515, align 8
  %1536 = bitcast %"class.sh::TIntermNode"** %1535 to i8*
  %1537 = icmp eq %"class.sh::TIntermNode"** %1535, %1533
  br i1 %1537, label %1711, label %1538

1538:                                             ; preds = %1512
  %1539 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1535, i64 -1
  %1540 = ptrtoint %"class.sh::TIntermNode"** %1539 to i64
  %1541 = sub i64 %1540, %1534
  %1542 = lshr i64 %1541, 3
  %1543 = add nuw nsw i64 %1542, 1
  %1544 = icmp ult i64 %1543, 4
  br i1 %1544, label %1641, label %1545

1545:                                             ; preds = %1538
  %1546 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1535, i64 -1
  %1547 = ptrtoint %"class.sh::TIntermNode"** %1546 to i64
  %1548 = sub i64 %1547, %1534
  %1549 = lshr i64 %1548, 3
  %1550 = and i64 %1548, -8
  %1551 = xor i64 %1550, -8
  %1552 = getelementptr i8, i8* %1528, i64 %1551
  %1553 = xor i64 %1549, -1
  %1554 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1535, i64 %1553
  %1555 = bitcast %"class.sh::TIntermNode"** %1554 to i8*
  %1556 = icmp ult i8* %1552, %1536
  %1557 = icmp ugt i8* %1528, %1555
  %1558 = and i1 %1556, %1557
  br i1 %1558, label %1641, label %1559

1559:                                             ; preds = %1545
  %1560 = and i64 %1543, 4611686018427387900
  %1561 = sub nsw i64 0, %1560
  %1562 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1529, i64 %1561
  %1563 = sub nsw i64 0, %1560
  %1564 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1535, i64 %1563
  %1565 = add nsw i64 %1560, -4
  %1566 = lshr exact i64 %1565, 2
  %1567 = add nuw nsw i64 %1566, 1
  %1568 = and i64 %1567, 1
  %1569 = icmp eq i64 %1565, 0
  br i1 %1569, label %1616, label %1570

1570:                                             ; preds = %1559
  %1571 = sub nuw nsw i64 %1567, %1568
  %1572 = getelementptr i8, i8* %1528, i64 -8
  %1573 = bitcast i8* %1572 to %"class.sh::TIntermNode"**
  %1574 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1535, i64 -1
  %1575 = getelementptr i8, i8* %1528, i64 -8
  %1576 = bitcast i8* %1575 to %"class.sh::TIntermNode"**
  %1577 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1535, i64 -1
  br label %1578

1578:                                             ; preds = %1578, %1570
  %1579 = phi i64 [ 0, %1570 ], [ %1613, %1578 ]
  %1580 = phi i64 [ %1571, %1570 ], [ %1614, %1578 ]
  %1581 = sub i64 0, %1579
  %1582 = sub i64 0, %1579
  %1583 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1573, i64 %1581
  %1584 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1574, i64 %1582
  %1585 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1584, i64 -1
  %1586 = bitcast %"class.sh::TIntermNode"** %1585 to <2 x i64>*
  %1587 = load <2 x i64>, <2 x i64>* %1586, align 8, !alias.scope !73
  %1588 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1584, i64 -2
  %1589 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1588, i64 -1
  %1590 = bitcast %"class.sh::TIntermNode"** %1589 to <2 x i64>*
  %1591 = load <2 x i64>, <2 x i64>* %1590, align 8, !alias.scope !73
  %1592 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1583, i64 -1
  %1593 = bitcast %"class.sh::TIntermNode"** %1592 to <2 x i64>*
  store <2 x i64> %1587, <2 x i64>* %1593, align 8, !alias.scope !76, !noalias !73
  %1594 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1583, i64 -2
  %1595 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1594, i64 -1
  %1596 = bitcast %"class.sh::TIntermNode"** %1595 to <2 x i64>*
  store <2 x i64> %1591, <2 x i64>* %1596, align 8, !alias.scope !76, !noalias !73
  %1597 = sub nuw nsw i64 -4, %1579
  %1598 = sub nuw nsw i64 -4, %1579
  %1599 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1576, i64 %1597
  %1600 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1577, i64 %1598
  %1601 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1600, i64 -1
  %1602 = bitcast %"class.sh::TIntermNode"** %1601 to <2 x i64>*
  %1603 = load <2 x i64>, <2 x i64>* %1602, align 8, !alias.scope !73
  %1604 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1600, i64 -2
  %1605 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1604, i64 -1
  %1606 = bitcast %"class.sh::TIntermNode"** %1605 to <2 x i64>*
  %1607 = load <2 x i64>, <2 x i64>* %1606, align 8, !alias.scope !73
  %1608 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1599, i64 -1
  %1609 = bitcast %"class.sh::TIntermNode"** %1608 to <2 x i64>*
  store <2 x i64> %1603, <2 x i64>* %1609, align 8, !alias.scope !76, !noalias !73
  %1610 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1599, i64 -2
  %1611 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1610, i64 -1
  %1612 = bitcast %"class.sh::TIntermNode"** %1611 to <2 x i64>*
  store <2 x i64> %1607, <2 x i64>* %1612, align 8, !alias.scope !76, !noalias !73
  %1613 = add i64 %1579, 8
  %1614 = add i64 %1580, -2
  %1615 = icmp eq i64 %1614, 0
  br i1 %1615, label %1616, label %1578, !llvm.loop !78

1616:                                             ; preds = %1578, %1559
  %1617 = phi i64 [ 0, %1559 ], [ %1613, %1578 ]
  %1618 = icmp eq i64 %1568, 0
  br i1 %1618, label %1639, label %1619

1619:                                             ; preds = %1616
  %1620 = sub i64 0, %1617
  %1621 = getelementptr i8, i8* %1528, i64 -8
  %1622 = bitcast i8* %1621 to %"class.sh::TIntermNode"**
  %1623 = sub i64 0, %1617
  %1624 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1535, i64 -1
  %1625 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1622, i64 %1620
  %1626 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1624, i64 %1623
  %1627 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1626, i64 -1
  %1628 = bitcast %"class.sh::TIntermNode"** %1627 to <2 x i64>*
  %1629 = load <2 x i64>, <2 x i64>* %1628, align 8, !alias.scope !73
  %1630 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1626, i64 -2
  %1631 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1630, i64 -1
  %1632 = bitcast %"class.sh::TIntermNode"** %1631 to <2 x i64>*
  %1633 = load <2 x i64>, <2 x i64>* %1632, align 8, !alias.scope !73
  %1634 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1625, i64 -1
  %1635 = bitcast %"class.sh::TIntermNode"** %1634 to <2 x i64>*
  store <2 x i64> %1629, <2 x i64>* %1635, align 8, !alias.scope !76, !noalias !73
  %1636 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1625, i64 -2
  %1637 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1636, i64 -1
  %1638 = bitcast %"class.sh::TIntermNode"** %1637 to <2 x i64>*
  store <2 x i64> %1633, <2 x i64>* %1638, align 8, !alias.scope !76, !noalias !73
  br label %1639

1639:                                             ; preds = %1616, %1619
  %1640 = icmp eq i64 %1543, %1560
  br i1 %1640, label %1711, label %1641

1641:                                             ; preds = %1639, %1545, %1538
  %1642 = phi %"class.sh::TIntermNode"** [ %1529, %1545 ], [ %1529, %1538 ], [ %1562, %1639 ]
  %1643 = phi %"class.sh::TIntermNode"** [ %1535, %1545 ], [ %1535, %1538 ], [ %1564, %1639 ]
  %1644 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1643, i64 -1
  %1645 = ptrtoint %"class.sh::TIntermNode"** %1644 to i64
  %1646 = sub i64 %1645, %1534
  %1647 = lshr i64 %1646, 3
  %1648 = add nuw nsw i64 %1647, 1
  %1649 = and i64 %1648, 7
  %1650 = icmp eq i64 %1649, 0
  br i1 %1650, label %1662, label %1651

1651:                                             ; preds = %1641, %1651
  %1652 = phi %"class.sh::TIntermNode"** [ %1655, %1651 ], [ %1642, %1641 ]
  %1653 = phi %"class.sh::TIntermNode"** [ %1656, %1651 ], [ %1643, %1641 ]
  %1654 = phi i64 [ %1660, %1651 ], [ %1649, %1641 ]
  %1655 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1652, i64 -1
  %1656 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1653, i64 -1
  %1657 = bitcast %"class.sh::TIntermNode"** %1656 to i64*
  %1658 = load i64, i64* %1657, align 8
  %1659 = bitcast %"class.sh::TIntermNode"** %1655 to i64*
  store i64 %1658, i64* %1659, align 8
  %1660 = add i64 %1654, -1
  %1661 = icmp eq i64 %1660, 0
  br i1 %1661, label %1662, label %1651, !llvm.loop !79

1662:                                             ; preds = %1651, %1641
  %1663 = phi %"class.sh::TIntermNode"** [ undef, %1641 ], [ %1655, %1651 ]
  %1664 = phi %"class.sh::TIntermNode"** [ %1642, %1641 ], [ %1655, %1651 ]
  %1665 = phi %"class.sh::TIntermNode"** [ %1643, %1641 ], [ %1656, %1651 ]
  %1666 = icmp ult i64 %1646, 56
  br i1 %1666, label %1711, label %1667

1667:                                             ; preds = %1662, %1667
  %1668 = phi %"class.sh::TIntermNode"** [ %1705, %1667 ], [ %1664, %1662 ]
  %1669 = phi %"class.sh::TIntermNode"** [ %1706, %1667 ], [ %1665, %1662 ]
  %1670 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1668, i64 -1
  %1671 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1669, i64 -1
  %1672 = bitcast %"class.sh::TIntermNode"** %1671 to i64*
  %1673 = load i64, i64* %1672, align 8
  %1674 = bitcast %"class.sh::TIntermNode"** %1670 to i64*
  store i64 %1673, i64* %1674, align 8
  %1675 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1668, i64 -2
  %1676 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1669, i64 -2
  %1677 = bitcast %"class.sh::TIntermNode"** %1676 to i64*
  %1678 = load i64, i64* %1677, align 8
  %1679 = bitcast %"class.sh::TIntermNode"** %1675 to i64*
  store i64 %1678, i64* %1679, align 8
  %1680 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1668, i64 -3
  %1681 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1669, i64 -3
  %1682 = bitcast %"class.sh::TIntermNode"** %1681 to i64*
  %1683 = load i64, i64* %1682, align 8
  %1684 = bitcast %"class.sh::TIntermNode"** %1680 to i64*
  store i64 %1683, i64* %1684, align 8
  %1685 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1668, i64 -4
  %1686 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1669, i64 -4
  %1687 = bitcast %"class.sh::TIntermNode"** %1686 to i64*
  %1688 = load i64, i64* %1687, align 8
  %1689 = bitcast %"class.sh::TIntermNode"** %1685 to i64*
  store i64 %1688, i64* %1689, align 8
  %1690 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1668, i64 -5
  %1691 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1669, i64 -5
  %1692 = bitcast %"class.sh::TIntermNode"** %1691 to i64*
  %1693 = load i64, i64* %1692, align 8
  %1694 = bitcast %"class.sh::TIntermNode"** %1690 to i64*
  store i64 %1693, i64* %1694, align 8
  %1695 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1668, i64 -6
  %1696 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1669, i64 -6
  %1697 = bitcast %"class.sh::TIntermNode"** %1696 to i64*
  %1698 = load i64, i64* %1697, align 8
  %1699 = bitcast %"class.sh::TIntermNode"** %1695 to i64*
  store i64 %1698, i64* %1699, align 8
  %1700 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1668, i64 -7
  %1701 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1669, i64 -7
  %1702 = bitcast %"class.sh::TIntermNode"** %1701 to i64*
  %1703 = load i64, i64* %1702, align 8
  %1704 = bitcast %"class.sh::TIntermNode"** %1700 to i64*
  store i64 %1703, i64* %1704, align 8
  %1705 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1668, i64 -8
  %1706 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1669, i64 -8
  %1707 = bitcast %"class.sh::TIntermNode"** %1706 to i64*
  %1708 = load i64, i64* %1707, align 8
  %1709 = bitcast %"class.sh::TIntermNode"** %1705 to i64*
  store i64 %1708, i64* %1709, align 8
  %1710 = icmp eq %"class.sh::TIntermNode"** %1706, %1533
  br i1 %1710, label %1711, label %1667, !llvm.loop !80

1711:                                             ; preds = %1662, %1667, %1639, %1512
  %1712 = phi %"class.sh::TIntermNode"** [ %1529, %1512 ], [ %1562, %1639 ], [ %1663, %1662 ], [ %1705, %1667 ]
  %1713 = ptrtoint %"class.sh::TIntermNode"** %1712 to i64
  store i64 %1713, i64* %1525, align 8
  store i64 %1531, i64* %1524, align 8
  store i64 %1531, i64* %1526, align 8
  %1714 = call %"class.sh::TIntermSymbol"* @_ZN2sh20CreateTempSymbolNodeEPKNS_9TVariableE(%"class.sh::TVariable"* %642) #8
  %1715 = ptrtoint %"class.sh::TIntermSymbol"* %1714 to i64
  %1716 = sub i64 %1531, %1713
  %1717 = ashr exact i64 %1716, 3
  %1718 = add nsw i64 %1717, 1
  %1719 = icmp ugt i64 %1718, 2305843009213693951
  br i1 %1719, label %1720, label %1722

1720:                                             ; preds = %1711
  %1721 = bitcast %"class.sh::TVector.31"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1721) #9
  unreachable

1722:                                             ; preds = %1711
  %1723 = icmp ult i64 %1717, 1152921504606846975
  br i1 %1723, label %1724, label %1729

1724:                                             ; preds = %1722
  %1725 = ashr exact i64 %1716, 2
  %1726 = icmp ult i64 %1725, %1718
  %1727 = select i1 %1726, i64 %1718, i64 %1725
  %1728 = icmp eq i64 %1727, 0
  br i1 %1728, label %1735, label %1729

1729:                                             ; preds = %1724, %1722
  %1730 = phi i64 [ %1727, %1724 ], [ 2305843009213693951, %1722 ]
  %1731 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1732 = shl i64 %1730, 3
  %1733 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1731, i64 %1732) #8
  %1734 = bitcast i8* %1733 to %"class.sh::TIntermNode"**
  br label %1735

1735:                                             ; preds = %1729, %1724
  %1736 = phi i64 [ %1730, %1729 ], [ 0, %1724 ]
  %1737 = phi %"class.sh::TIntermNode"** [ %1734, %1729 ], [ null, %1724 ]
  %1738 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1737, i64 %1717
  %1739 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1737, i64 %1736
  %1740 = ptrtoint %"class.sh::TIntermNode"** %1739 to i64
  %1741 = bitcast %"class.sh::TIntermNode"** %1738 to i64*
  store i64 %1715, i64* %1741, align 8
  %1742 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1738, i64 1
  %1743 = ptrtoint %"class.sh::TIntermNode"** %1742 to i64
  %1744 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1514, align 8
  %1745 = ptrtoint %"class.sh::TIntermNode"** %1744 to i64
  %1746 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1515, align 8
  %1747 = icmp eq %"class.sh::TIntermNode"** %1746, %1744
  br i1 %1747, label %1917, label %1748

1748:                                             ; preds = %1735
  %1749 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1746, i64 -1
  %1750 = ptrtoint %"class.sh::TIntermNode"** %1749 to i64
  %1751 = sub i64 %1750, %1745
  %1752 = lshr i64 %1751, 3
  %1753 = add nuw nsw i64 %1752, 1
  %1754 = icmp ult i64 %1753, 4
  br i1 %1754, label %1847, label %1755

1755:                                             ; preds = %1748
  %1756 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1746, i64 -1
  %1757 = ptrtoint %"class.sh::TIntermNode"** %1756 to i64
  %1758 = sub i64 %1757, %1745
  %1759 = lshr i64 %1758, 3
  %1760 = xor i64 %1759, -1
  %1761 = add nsw i64 %1717, %1760
  %1762 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1737, i64 %1761
  %1763 = xor i64 %1759, -1
  %1764 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1746, i64 %1763
  %1765 = icmp ult %"class.sh::TIntermNode"** %1762, %1746
  %1766 = icmp ult %"class.sh::TIntermNode"** %1764, %1738
  %1767 = and i1 %1765, %1766
  br i1 %1767, label %1847, label %1768

1768:                                             ; preds = %1755
  %1769 = and i64 %1753, 4611686018427387900
  %1770 = sub nsw i64 0, %1769
  %1771 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1738, i64 %1770
  %1772 = sub nsw i64 0, %1769
  %1773 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1746, i64 %1772
  %1774 = add nsw i64 %1769, -4
  %1775 = lshr exact i64 %1774, 2
  %1776 = add nuw nsw i64 %1775, 1
  %1777 = and i64 %1776, 1
  %1778 = icmp eq i64 %1774, 0
  br i1 %1778, label %1823, label %1779

1779:                                             ; preds = %1768
  %1780 = sub nuw nsw i64 %1776, %1777
  %1781 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1738, i64 -1
  %1782 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1746, i64 -1
  %1783 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1738, i64 -1
  %1784 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1746, i64 -1
  br label %1785

1785:                                             ; preds = %1785, %1779
  %1786 = phi i64 [ 0, %1779 ], [ %1820, %1785 ]
  %1787 = phi i64 [ %1780, %1779 ], [ %1821, %1785 ]
  %1788 = sub i64 0, %1786
  %1789 = sub i64 0, %1786
  %1790 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1781, i64 %1788
  %1791 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1782, i64 %1789
  %1792 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1791, i64 -1
  %1793 = bitcast %"class.sh::TIntermNode"** %1792 to <2 x i64>*
  %1794 = load <2 x i64>, <2 x i64>* %1793, align 8, !alias.scope !81
  %1795 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1791, i64 -2
  %1796 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1795, i64 -1
  %1797 = bitcast %"class.sh::TIntermNode"** %1796 to <2 x i64>*
  %1798 = load <2 x i64>, <2 x i64>* %1797, align 8, !alias.scope !81
  %1799 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1790, i64 -1
  %1800 = bitcast %"class.sh::TIntermNode"** %1799 to <2 x i64>*
  store <2 x i64> %1794, <2 x i64>* %1800, align 8, !alias.scope !84, !noalias !81
  %1801 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1790, i64 -2
  %1802 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1801, i64 -1
  %1803 = bitcast %"class.sh::TIntermNode"** %1802 to <2 x i64>*
  store <2 x i64> %1798, <2 x i64>* %1803, align 8, !alias.scope !84, !noalias !81
  %1804 = sub nuw nsw i64 -4, %1786
  %1805 = sub nuw nsw i64 -4, %1786
  %1806 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1783, i64 %1804
  %1807 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1784, i64 %1805
  %1808 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1807, i64 -1
  %1809 = bitcast %"class.sh::TIntermNode"** %1808 to <2 x i64>*
  %1810 = load <2 x i64>, <2 x i64>* %1809, align 8, !alias.scope !81
  %1811 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1807, i64 -2
  %1812 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1811, i64 -1
  %1813 = bitcast %"class.sh::TIntermNode"** %1812 to <2 x i64>*
  %1814 = load <2 x i64>, <2 x i64>* %1813, align 8, !alias.scope !81
  %1815 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1806, i64 -1
  %1816 = bitcast %"class.sh::TIntermNode"** %1815 to <2 x i64>*
  store <2 x i64> %1810, <2 x i64>* %1816, align 8, !alias.scope !84, !noalias !81
  %1817 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1806, i64 -2
  %1818 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1817, i64 -1
  %1819 = bitcast %"class.sh::TIntermNode"** %1818 to <2 x i64>*
  store <2 x i64> %1814, <2 x i64>* %1819, align 8, !alias.scope !84, !noalias !81
  %1820 = add i64 %1786, 8
  %1821 = add i64 %1787, -2
  %1822 = icmp eq i64 %1821, 0
  br i1 %1822, label %1823, label %1785, !llvm.loop !86

1823:                                             ; preds = %1785, %1768
  %1824 = phi i64 [ 0, %1768 ], [ %1820, %1785 ]
  %1825 = icmp eq i64 %1777, 0
  br i1 %1825, label %1845, label %1826

1826:                                             ; preds = %1823
  %1827 = sub i64 0, %1824
  %1828 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1738, i64 -1
  %1829 = sub i64 0, %1824
  %1830 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1746, i64 -1
  %1831 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1828, i64 %1827
  %1832 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1830, i64 %1829
  %1833 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1832, i64 -1
  %1834 = bitcast %"class.sh::TIntermNode"** %1833 to <2 x i64>*
  %1835 = load <2 x i64>, <2 x i64>* %1834, align 8, !alias.scope !81
  %1836 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1832, i64 -2
  %1837 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1836, i64 -1
  %1838 = bitcast %"class.sh::TIntermNode"** %1837 to <2 x i64>*
  %1839 = load <2 x i64>, <2 x i64>* %1838, align 8, !alias.scope !81
  %1840 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1831, i64 -1
  %1841 = bitcast %"class.sh::TIntermNode"** %1840 to <2 x i64>*
  store <2 x i64> %1835, <2 x i64>* %1841, align 8, !alias.scope !84, !noalias !81
  %1842 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1831, i64 -2
  %1843 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1842, i64 -1
  %1844 = bitcast %"class.sh::TIntermNode"** %1843 to <2 x i64>*
  store <2 x i64> %1839, <2 x i64>* %1844, align 8, !alias.scope !84, !noalias !81
  br label %1845

1845:                                             ; preds = %1823, %1826
  %1846 = icmp eq i64 %1753, %1769
  br i1 %1846, label %1917, label %1847

1847:                                             ; preds = %1845, %1755, %1748
  %1848 = phi %"class.sh::TIntermNode"** [ %1738, %1755 ], [ %1738, %1748 ], [ %1771, %1845 ]
  %1849 = phi %"class.sh::TIntermNode"** [ %1746, %1755 ], [ %1746, %1748 ], [ %1773, %1845 ]
  %1850 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1849, i64 -1
  %1851 = ptrtoint %"class.sh::TIntermNode"** %1850 to i64
  %1852 = sub i64 %1851, %1745
  %1853 = lshr i64 %1852, 3
  %1854 = add nuw nsw i64 %1853, 1
  %1855 = and i64 %1854, 7
  %1856 = icmp eq i64 %1855, 0
  br i1 %1856, label %1868, label %1857

1857:                                             ; preds = %1847, %1857
  %1858 = phi %"class.sh::TIntermNode"** [ %1861, %1857 ], [ %1848, %1847 ]
  %1859 = phi %"class.sh::TIntermNode"** [ %1862, %1857 ], [ %1849, %1847 ]
  %1860 = phi i64 [ %1866, %1857 ], [ %1855, %1847 ]
  %1861 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1858, i64 -1
  %1862 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1859, i64 -1
  %1863 = bitcast %"class.sh::TIntermNode"** %1862 to i64*
  %1864 = load i64, i64* %1863, align 8
  %1865 = bitcast %"class.sh::TIntermNode"** %1861 to i64*
  store i64 %1864, i64* %1865, align 8
  %1866 = add i64 %1860, -1
  %1867 = icmp eq i64 %1866, 0
  br i1 %1867, label %1868, label %1857, !llvm.loop !87

1868:                                             ; preds = %1857, %1847
  %1869 = phi %"class.sh::TIntermNode"** [ undef, %1847 ], [ %1861, %1857 ]
  %1870 = phi %"class.sh::TIntermNode"** [ %1848, %1847 ], [ %1861, %1857 ]
  %1871 = phi %"class.sh::TIntermNode"** [ %1849, %1847 ], [ %1862, %1857 ]
  %1872 = icmp ult i64 %1852, 56
  br i1 %1872, label %1917, label %1873

1873:                                             ; preds = %1868, %1873
  %1874 = phi %"class.sh::TIntermNode"** [ %1911, %1873 ], [ %1870, %1868 ]
  %1875 = phi %"class.sh::TIntermNode"** [ %1912, %1873 ], [ %1871, %1868 ]
  %1876 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1874, i64 -1
  %1877 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1875, i64 -1
  %1878 = bitcast %"class.sh::TIntermNode"** %1877 to i64*
  %1879 = load i64, i64* %1878, align 8
  %1880 = bitcast %"class.sh::TIntermNode"** %1876 to i64*
  store i64 %1879, i64* %1880, align 8
  %1881 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1874, i64 -2
  %1882 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1875, i64 -2
  %1883 = bitcast %"class.sh::TIntermNode"** %1882 to i64*
  %1884 = load i64, i64* %1883, align 8
  %1885 = bitcast %"class.sh::TIntermNode"** %1881 to i64*
  store i64 %1884, i64* %1885, align 8
  %1886 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1874, i64 -3
  %1887 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1875, i64 -3
  %1888 = bitcast %"class.sh::TIntermNode"** %1887 to i64*
  %1889 = load i64, i64* %1888, align 8
  %1890 = bitcast %"class.sh::TIntermNode"** %1886 to i64*
  store i64 %1889, i64* %1890, align 8
  %1891 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1874, i64 -4
  %1892 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1875, i64 -4
  %1893 = bitcast %"class.sh::TIntermNode"** %1892 to i64*
  %1894 = load i64, i64* %1893, align 8
  %1895 = bitcast %"class.sh::TIntermNode"** %1891 to i64*
  store i64 %1894, i64* %1895, align 8
  %1896 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1874, i64 -5
  %1897 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1875, i64 -5
  %1898 = bitcast %"class.sh::TIntermNode"** %1897 to i64*
  %1899 = load i64, i64* %1898, align 8
  %1900 = bitcast %"class.sh::TIntermNode"** %1896 to i64*
  store i64 %1899, i64* %1900, align 8
  %1901 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1874, i64 -6
  %1902 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1875, i64 -6
  %1903 = bitcast %"class.sh::TIntermNode"** %1902 to i64*
  %1904 = load i64, i64* %1903, align 8
  %1905 = bitcast %"class.sh::TIntermNode"** %1901 to i64*
  store i64 %1904, i64* %1905, align 8
  %1906 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1874, i64 -7
  %1907 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1875, i64 -7
  %1908 = bitcast %"class.sh::TIntermNode"** %1907 to i64*
  %1909 = load i64, i64* %1908, align 8
  %1910 = bitcast %"class.sh::TIntermNode"** %1906 to i64*
  store i64 %1909, i64* %1910, align 8
  %1911 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1874, i64 -8
  %1912 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1875, i64 -8
  %1913 = bitcast %"class.sh::TIntermNode"** %1912 to i64*
  %1914 = load i64, i64* %1913, align 8
  %1915 = bitcast %"class.sh::TIntermNode"** %1911 to i64*
  store i64 %1914, i64* %1915, align 8
  %1916 = icmp eq %"class.sh::TIntermNode"** %1912, %1744
  br i1 %1916, label %1917, label %1873, !llvm.loop !88

1917:                                             ; preds = %1868, %1873, %1845, %1735
  %1918 = phi %"class.sh::TIntermNode"** [ %1738, %1735 ], [ %1771, %1845 ], [ %1869, %1868 ], [ %1911, %1873 ]
  %1919 = ptrtoint %"class.sh::TIntermNode"** %1918 to i64
  store i64 %1919, i64* %1525, align 8
  store i64 %1743, i64* %1524, align 8
  store i64 %1740, i64* %1526, align 8
  %1920 = call %"class.sh::TIntermSymbol"* @_ZN2sh20CreateTempSymbolNodeEPKNS_9TVariableE(%"class.sh::TVariable"* %1288) #8
  %1921 = ptrtoint %"class.sh::TIntermSymbol"* %1920 to i64
  %1922 = icmp ult %"class.sh::TIntermNode"** %1742, %1739
  br i1 %1922, label %1923, label %1927

1923:                                             ; preds = %1917
  %1924 = bitcast %"class.sh::TIntermNode"** %1742 to i64*
  store i64 %1921, i64* %1924, align 8
  %1925 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1742, i64 1
  %1926 = ptrtoint %"class.sh::TIntermNode"** %1925 to i64
  store i64 %1926, i64* %1524, align 8
  br label %2135

1927:                                             ; preds = %1917
  %1928 = load i64, i64* %1525, align 8
  %1929 = sub i64 %1743, %1928
  %1930 = ashr exact i64 %1929, 3
  %1931 = add nsw i64 %1930, 1
  %1932 = icmp ugt i64 %1931, 2305843009213693951
  br i1 %1932, label %1933, label %1935

1933:                                             ; preds = %1927
  %1934 = bitcast %"class.sh::TVector.31"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1934) #9
  unreachable

1935:                                             ; preds = %1927
  %1936 = sub i64 %1740, %1928
  %1937 = ashr exact i64 %1936, 3
  %1938 = icmp ult i64 %1937, 1152921504606846975
  br i1 %1938, label %1939, label %1944

1939:                                             ; preds = %1935
  %1940 = ashr exact i64 %1936, 2
  %1941 = icmp ult i64 %1940, %1931
  %1942 = select i1 %1941, i64 %1931, i64 %1940
  %1943 = icmp eq i64 %1942, 0
  br i1 %1943, label %1950, label %1944

1944:                                             ; preds = %1939, %1935
  %1945 = phi i64 [ %1942, %1939 ], [ 2305843009213693951, %1935 ]
  %1946 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1947 = shl i64 %1945, 3
  %1948 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1946, i64 %1947) #8
  %1949 = bitcast i8* %1948 to %"class.sh::TIntermNode"**
  br label %1950

1950:                                             ; preds = %1944, %1939
  %1951 = phi i64 [ %1945, %1944 ], [ 0, %1939 ]
  %1952 = phi %"class.sh::TIntermNode"** [ %1949, %1944 ], [ null, %1939 ]
  %1953 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1952, i64 %1930
  %1954 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1952, i64 %1951
  %1955 = ptrtoint %"class.sh::TIntermNode"** %1954 to i64
  %1956 = bitcast %"class.sh::TIntermNode"** %1953 to i64*
  store i64 %1921, i64* %1956, align 8
  %1957 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1953, i64 1
  %1958 = ptrtoint %"class.sh::TIntermNode"** %1957 to i64
  %1959 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1514, align 8
  %1960 = ptrtoint %"class.sh::TIntermNode"** %1959 to i64
  %1961 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1515, align 8
  %1962 = icmp eq %"class.sh::TIntermNode"** %1961, %1959
  br i1 %1962, label %2132, label %1963

1963:                                             ; preds = %1950
  %1964 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1961, i64 -1
  %1965 = ptrtoint %"class.sh::TIntermNode"** %1964 to i64
  %1966 = sub i64 %1965, %1960
  %1967 = lshr i64 %1966, 3
  %1968 = add nuw nsw i64 %1967, 1
  %1969 = icmp ult i64 %1968, 4
  br i1 %1969, label %2062, label %1970

1970:                                             ; preds = %1963
  %1971 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1961, i64 -1
  %1972 = ptrtoint %"class.sh::TIntermNode"** %1971 to i64
  %1973 = sub i64 %1972, %1960
  %1974 = lshr i64 %1973, 3
  %1975 = xor i64 %1974, -1
  %1976 = add nsw i64 %1930, %1975
  %1977 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1952, i64 %1976
  %1978 = xor i64 %1974, -1
  %1979 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1961, i64 %1978
  %1980 = icmp ult %"class.sh::TIntermNode"** %1977, %1961
  %1981 = icmp ult %"class.sh::TIntermNode"** %1979, %1953
  %1982 = and i1 %1980, %1981
  br i1 %1982, label %2062, label %1983

1983:                                             ; preds = %1970
  %1984 = and i64 %1968, 4611686018427387900
  %1985 = sub nsw i64 0, %1984
  %1986 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1953, i64 %1985
  %1987 = sub nsw i64 0, %1984
  %1988 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1961, i64 %1987
  %1989 = add nsw i64 %1984, -4
  %1990 = lshr exact i64 %1989, 2
  %1991 = add nuw nsw i64 %1990, 1
  %1992 = and i64 %1991, 1
  %1993 = icmp eq i64 %1989, 0
  br i1 %1993, label %2038, label %1994

1994:                                             ; preds = %1983
  %1995 = sub nuw nsw i64 %1991, %1992
  %1996 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1953, i64 -1
  %1997 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1961, i64 -1
  %1998 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1953, i64 -1
  %1999 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1961, i64 -1
  br label %2000

2000:                                             ; preds = %2000, %1994
  %2001 = phi i64 [ 0, %1994 ], [ %2035, %2000 ]
  %2002 = phi i64 [ %1995, %1994 ], [ %2036, %2000 ]
  %2003 = sub i64 0, %2001
  %2004 = sub i64 0, %2001
  %2005 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1996, i64 %2003
  %2006 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1997, i64 %2004
  %2007 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2006, i64 -1
  %2008 = bitcast %"class.sh::TIntermNode"** %2007 to <2 x i64>*
  %2009 = load <2 x i64>, <2 x i64>* %2008, align 8, !alias.scope !89
  %2010 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2006, i64 -2
  %2011 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2010, i64 -1
  %2012 = bitcast %"class.sh::TIntermNode"** %2011 to <2 x i64>*
  %2013 = load <2 x i64>, <2 x i64>* %2012, align 8, !alias.scope !89
  %2014 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2005, i64 -1
  %2015 = bitcast %"class.sh::TIntermNode"** %2014 to <2 x i64>*
  store <2 x i64> %2009, <2 x i64>* %2015, align 8, !alias.scope !92, !noalias !89
  %2016 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2005, i64 -2
  %2017 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2016, i64 -1
  %2018 = bitcast %"class.sh::TIntermNode"** %2017 to <2 x i64>*
  store <2 x i64> %2013, <2 x i64>* %2018, align 8, !alias.scope !92, !noalias !89
  %2019 = sub nuw nsw i64 -4, %2001
  %2020 = sub nuw nsw i64 -4, %2001
  %2021 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1998, i64 %2019
  %2022 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1999, i64 %2020
  %2023 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2022, i64 -1
  %2024 = bitcast %"class.sh::TIntermNode"** %2023 to <2 x i64>*
  %2025 = load <2 x i64>, <2 x i64>* %2024, align 8, !alias.scope !89
  %2026 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2022, i64 -2
  %2027 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2026, i64 -1
  %2028 = bitcast %"class.sh::TIntermNode"** %2027 to <2 x i64>*
  %2029 = load <2 x i64>, <2 x i64>* %2028, align 8, !alias.scope !89
  %2030 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2021, i64 -1
  %2031 = bitcast %"class.sh::TIntermNode"** %2030 to <2 x i64>*
  store <2 x i64> %2025, <2 x i64>* %2031, align 8, !alias.scope !92, !noalias !89
  %2032 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2021, i64 -2
  %2033 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2032, i64 -1
  %2034 = bitcast %"class.sh::TIntermNode"** %2033 to <2 x i64>*
  store <2 x i64> %2029, <2 x i64>* %2034, align 8, !alias.scope !92, !noalias !89
  %2035 = add i64 %2001, 8
  %2036 = add i64 %2002, -2
  %2037 = icmp eq i64 %2036, 0
  br i1 %2037, label %2038, label %2000, !llvm.loop !94

2038:                                             ; preds = %2000, %1983
  %2039 = phi i64 [ 0, %1983 ], [ %2035, %2000 ]
  %2040 = icmp eq i64 %1992, 0
  br i1 %2040, label %2060, label %2041

2041:                                             ; preds = %2038
  %2042 = sub i64 0, %2039
  %2043 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1953, i64 -1
  %2044 = sub i64 0, %2039
  %2045 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1961, i64 -1
  %2046 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2043, i64 %2042
  %2047 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2045, i64 %2044
  %2048 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2047, i64 -1
  %2049 = bitcast %"class.sh::TIntermNode"** %2048 to <2 x i64>*
  %2050 = load <2 x i64>, <2 x i64>* %2049, align 8, !alias.scope !89
  %2051 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2047, i64 -2
  %2052 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2051, i64 -1
  %2053 = bitcast %"class.sh::TIntermNode"** %2052 to <2 x i64>*
  %2054 = load <2 x i64>, <2 x i64>* %2053, align 8, !alias.scope !89
  %2055 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2046, i64 -1
  %2056 = bitcast %"class.sh::TIntermNode"** %2055 to <2 x i64>*
  store <2 x i64> %2050, <2 x i64>* %2056, align 8, !alias.scope !92, !noalias !89
  %2057 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2046, i64 -2
  %2058 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2057, i64 -1
  %2059 = bitcast %"class.sh::TIntermNode"** %2058 to <2 x i64>*
  store <2 x i64> %2054, <2 x i64>* %2059, align 8, !alias.scope !92, !noalias !89
  br label %2060

2060:                                             ; preds = %2038, %2041
  %2061 = icmp eq i64 %1968, %1984
  br i1 %2061, label %2132, label %2062

2062:                                             ; preds = %2060, %1970, %1963
  %2063 = phi %"class.sh::TIntermNode"** [ %1953, %1970 ], [ %1953, %1963 ], [ %1986, %2060 ]
  %2064 = phi %"class.sh::TIntermNode"** [ %1961, %1970 ], [ %1961, %1963 ], [ %1988, %2060 ]
  %2065 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2064, i64 -1
  %2066 = ptrtoint %"class.sh::TIntermNode"** %2065 to i64
  %2067 = sub i64 %2066, %1960
  %2068 = lshr i64 %2067, 3
  %2069 = add nuw nsw i64 %2068, 1
  %2070 = and i64 %2069, 7
  %2071 = icmp eq i64 %2070, 0
  br i1 %2071, label %2083, label %2072

2072:                                             ; preds = %2062, %2072
  %2073 = phi %"class.sh::TIntermNode"** [ %2076, %2072 ], [ %2063, %2062 ]
  %2074 = phi %"class.sh::TIntermNode"** [ %2077, %2072 ], [ %2064, %2062 ]
  %2075 = phi i64 [ %2081, %2072 ], [ %2070, %2062 ]
  %2076 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2073, i64 -1
  %2077 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2074, i64 -1
  %2078 = bitcast %"class.sh::TIntermNode"** %2077 to i64*
  %2079 = load i64, i64* %2078, align 8
  %2080 = bitcast %"class.sh::TIntermNode"** %2076 to i64*
  store i64 %2079, i64* %2080, align 8
  %2081 = add i64 %2075, -1
  %2082 = icmp eq i64 %2081, 0
  br i1 %2082, label %2083, label %2072, !llvm.loop !95

2083:                                             ; preds = %2072, %2062
  %2084 = phi %"class.sh::TIntermNode"** [ undef, %2062 ], [ %2076, %2072 ]
  %2085 = phi %"class.sh::TIntermNode"** [ %2063, %2062 ], [ %2076, %2072 ]
  %2086 = phi %"class.sh::TIntermNode"** [ %2064, %2062 ], [ %2077, %2072 ]
  %2087 = icmp ult i64 %2067, 56
  br i1 %2087, label %2132, label %2088

2088:                                             ; preds = %2083, %2088
  %2089 = phi %"class.sh::TIntermNode"** [ %2126, %2088 ], [ %2085, %2083 ]
  %2090 = phi %"class.sh::TIntermNode"** [ %2127, %2088 ], [ %2086, %2083 ]
  %2091 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2089, i64 -1
  %2092 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2090, i64 -1
  %2093 = bitcast %"class.sh::TIntermNode"** %2092 to i64*
  %2094 = load i64, i64* %2093, align 8
  %2095 = bitcast %"class.sh::TIntermNode"** %2091 to i64*
  store i64 %2094, i64* %2095, align 8
  %2096 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2089, i64 -2
  %2097 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2090, i64 -2
  %2098 = bitcast %"class.sh::TIntermNode"** %2097 to i64*
  %2099 = load i64, i64* %2098, align 8
  %2100 = bitcast %"class.sh::TIntermNode"** %2096 to i64*
  store i64 %2099, i64* %2100, align 8
  %2101 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2089, i64 -3
  %2102 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2090, i64 -3
  %2103 = bitcast %"class.sh::TIntermNode"** %2102 to i64*
  %2104 = load i64, i64* %2103, align 8
  %2105 = bitcast %"class.sh::TIntermNode"** %2101 to i64*
  store i64 %2104, i64* %2105, align 8
  %2106 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2089, i64 -4
  %2107 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2090, i64 -4
  %2108 = bitcast %"class.sh::TIntermNode"** %2107 to i64*
  %2109 = load i64, i64* %2108, align 8
  %2110 = bitcast %"class.sh::TIntermNode"** %2106 to i64*
  store i64 %2109, i64* %2110, align 8
  %2111 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2089, i64 -5
  %2112 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2090, i64 -5
  %2113 = bitcast %"class.sh::TIntermNode"** %2112 to i64*
  %2114 = load i64, i64* %2113, align 8
  %2115 = bitcast %"class.sh::TIntermNode"** %2111 to i64*
  store i64 %2114, i64* %2115, align 8
  %2116 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2089, i64 -6
  %2117 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2090, i64 -6
  %2118 = bitcast %"class.sh::TIntermNode"** %2117 to i64*
  %2119 = load i64, i64* %2118, align 8
  %2120 = bitcast %"class.sh::TIntermNode"** %2116 to i64*
  store i64 %2119, i64* %2120, align 8
  %2121 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2089, i64 -7
  %2122 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2090, i64 -7
  %2123 = bitcast %"class.sh::TIntermNode"** %2122 to i64*
  %2124 = load i64, i64* %2123, align 8
  %2125 = bitcast %"class.sh::TIntermNode"** %2121 to i64*
  store i64 %2124, i64* %2125, align 8
  %2126 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2089, i64 -8
  %2127 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2090, i64 -8
  %2128 = bitcast %"class.sh::TIntermNode"** %2127 to i64*
  %2129 = load i64, i64* %2128, align 8
  %2130 = bitcast %"class.sh::TIntermNode"** %2126 to i64*
  store i64 %2129, i64* %2130, align 8
  %2131 = icmp eq %"class.sh::TIntermNode"** %2127, %1959
  br i1 %2131, label %2132, label %2088, !llvm.loop !96

2132:                                             ; preds = %2083, %2088, %2060, %1950
  %2133 = phi %"class.sh::TIntermNode"** [ %1953, %1950 ], [ %1986, %2060 ], [ %2084, %2083 ], [ %2126, %2088 ]
  %2134 = ptrtoint %"class.sh::TIntermNode"** %2133 to i64
  store i64 %2134, i64* %1525, align 8
  store i64 %1958, i64* %1524, align 8
  store i64 %1955, i64* %1526, align 8
  br label %2135

2135:                                             ; preds = %2132, %1923
  %2136 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate18CreateFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* dereferenceable(80) %408, %"class.sh::TVector.31"* nonnull %6) #8
  %2137 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2136, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2138 = bitcast %"struct.sh::TSourceLoc"* %2137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2138, i8* align 4 %1278, i64 16, i1 false) #8
  %2139 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1514, align 8
  %2140 = icmp eq %"class.sh::TIntermNode"** %2139, null
  br i1 %2140, label %2143, label %2141

2141:                                             ; preds = %2135
  %2142 = ptrtoint %"class.sh::TIntermNode"** %2139 to i64
  store i64 %2142, i64* %1524, align 8
  br label %2143

2143:                                             ; preds = %2135, %2141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1513) #8
  %2144 = ptrtoint %"class.sh::TIntermAggregate"* %2136 to i64
  %2145 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %415, align 8
  %2146 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %416, align 8
  %2147 = icmp ult %"class.sh::TIntermNode"** %2145, %2146
  %2148 = ptrtoint %"class.sh::TIntermNode"** %2146 to i64
  br i1 %2147, label %2149, label %2154

2149:                                             ; preds = %2143
  %2150 = bitcast %"class.sh::TIntermNode"** %2145 to i64*
  store i64 %2144, i64* %2150, align 8
  %2151 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2145, i64 1
  %2152 = ptrtoint %"class.sh::TIntermNode"** %2151 to i64
  %2153 = bitcast %"class.sh::TIntermNode"*** %415 to i64*
  store i64 %2152, i64* %2153, align 8
  br label %2366

2154:                                             ; preds = %2143
  %2155 = ptrtoint %"class.sh::TIntermNode"** %2145 to i64
  %2156 = bitcast %"class.sh::TIntermNode"*** %415 to i64*
  %2157 = bitcast %"class.sh::TVector.31"* %21 to i64*
  %2158 = load i64, i64* %2157, align 8
  %2159 = sub i64 %2155, %2158
  %2160 = ashr exact i64 %2159, 3
  %2161 = add nsw i64 %2160, 1
  %2162 = icmp ugt i64 %2161, 2305843009213693951
  br i1 %2162, label %2163, label %2165

2163:                                             ; preds = %2154
  %2164 = bitcast %"class.sh::TVector.31"* %21 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2164) #9
  unreachable

2165:                                             ; preds = %2154
  %2166 = bitcast %"class.sh::TIntermNode"*** %416 to i64*
  %2167 = sub i64 %2148, %2158
  %2168 = ashr exact i64 %2167, 3
  %2169 = icmp ult i64 %2168, 1152921504606846975
  br i1 %2169, label %2170, label %2175

2170:                                             ; preds = %2165
  %2171 = ashr exact i64 %2167, 2
  %2172 = icmp ult i64 %2171, %2161
  %2173 = select i1 %2172, i64 %2161, i64 %2171
  %2174 = icmp eq i64 %2173, 0
  br i1 %2174, label %2181, label %2175

2175:                                             ; preds = %2170, %2165
  %2176 = phi i64 [ %2173, %2170 ], [ 2305843009213693951, %2165 ]
  %2177 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2178 = shl i64 %2176, 3
  %2179 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2177, i64 %2178) #8
  %2180 = bitcast i8* %2179 to %"class.sh::TIntermNode"**
  br label %2181

2181:                                             ; preds = %2175, %2170
  %2182 = phi i64 [ %2176, %2175 ], [ 0, %2170 ]
  %2183 = phi %"class.sh::TIntermNode"** [ %2180, %2175 ], [ null, %2170 ]
  %2184 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2183, i64 %2160
  %2185 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2183, i64 %2182
  %2186 = ptrtoint %"class.sh::TIntermNode"** %2185 to i64
  %2187 = bitcast %"class.sh::TIntermNode"** %2184 to i64*
  store i64 %2144, i64* %2187, align 8
  %2188 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2184, i64 1
  %2189 = ptrtoint %"class.sh::TIntermNode"** %2188 to i64
  %2190 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %414, align 8
  %2191 = ptrtoint %"class.sh::TIntermNode"** %2190 to i64
  %2192 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %415, align 8
  %2193 = icmp eq %"class.sh::TIntermNode"** %2192, %2190
  br i1 %2193, label %2363, label %2194

2194:                                             ; preds = %2181
  %2195 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2192, i64 -1
  %2196 = ptrtoint %"class.sh::TIntermNode"** %2195 to i64
  %2197 = sub i64 %2196, %2191
  %2198 = lshr i64 %2197, 3
  %2199 = add nuw nsw i64 %2198, 1
  %2200 = icmp ult i64 %2199, 4
  br i1 %2200, label %2293, label %2201

2201:                                             ; preds = %2194
  %2202 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2192, i64 -1
  %2203 = ptrtoint %"class.sh::TIntermNode"** %2202 to i64
  %2204 = sub i64 %2203, %2191
  %2205 = lshr i64 %2204, 3
  %2206 = xor i64 %2205, -1
  %2207 = add nsw i64 %2160, %2206
  %2208 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2183, i64 %2207
  %2209 = xor i64 %2205, -1
  %2210 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2192, i64 %2209
  %2211 = icmp ult %"class.sh::TIntermNode"** %2208, %2192
  %2212 = icmp ult %"class.sh::TIntermNode"** %2210, %2184
  %2213 = and i1 %2211, %2212
  br i1 %2213, label %2293, label %2214

2214:                                             ; preds = %2201
  %2215 = and i64 %2199, 4611686018427387900
  %2216 = sub nsw i64 0, %2215
  %2217 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2184, i64 %2216
  %2218 = sub nsw i64 0, %2215
  %2219 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2192, i64 %2218
  %2220 = add nsw i64 %2215, -4
  %2221 = lshr exact i64 %2220, 2
  %2222 = add nuw nsw i64 %2221, 1
  %2223 = and i64 %2222, 1
  %2224 = icmp eq i64 %2220, 0
  br i1 %2224, label %2271, label %2225

2225:                                             ; preds = %2214
  %2226 = sub nuw nsw i64 %2222, %2223
  %2227 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2184, i64 -1
  %2228 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2192, i64 -1
  %2229 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2184, i64 -1
  %2230 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2192, i64 -1
  br label %2231

2231:                                             ; preds = %2231, %2225
  %2232 = phi i64 [ 0, %2225 ], [ %2266, %2231 ]
  %2233 = phi i64 [ %2226, %2225 ], [ %2267, %2231 ]
  %2234 = sub i64 0, %2232
  %2235 = sub i64 0, %2232
  %2236 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2227, i64 %2234
  %2237 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2228, i64 %2235
  %2238 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2237, i64 -1
  %2239 = bitcast %"class.sh::TIntermNode"** %2238 to <2 x i64>*
  %2240 = load <2 x i64>, <2 x i64>* %2239, align 8, !alias.scope !97
  %2241 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2237, i64 -2
  %2242 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2241, i64 -1
  %2243 = bitcast %"class.sh::TIntermNode"** %2242 to <2 x i64>*
  %2244 = load <2 x i64>, <2 x i64>* %2243, align 8, !alias.scope !97
  %2245 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2236, i64 -1
  %2246 = bitcast %"class.sh::TIntermNode"** %2245 to <2 x i64>*
  store <2 x i64> %2240, <2 x i64>* %2246, align 8, !alias.scope !100, !noalias !97
  %2247 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2236, i64 -2
  %2248 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2247, i64 -1
  %2249 = bitcast %"class.sh::TIntermNode"** %2248 to <2 x i64>*
  store <2 x i64> %2244, <2 x i64>* %2249, align 8, !alias.scope !100, !noalias !97
  %2250 = sub nuw nsw i64 -4, %2232
  %2251 = sub nuw nsw i64 -4, %2232
  %2252 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2229, i64 %2250
  %2253 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2230, i64 %2251
  %2254 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2253, i64 -1
  %2255 = bitcast %"class.sh::TIntermNode"** %2254 to <2 x i64>*
  %2256 = load <2 x i64>, <2 x i64>* %2255, align 8, !alias.scope !97
  %2257 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2253, i64 -2
  %2258 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2257, i64 -1
  %2259 = bitcast %"class.sh::TIntermNode"** %2258 to <2 x i64>*
  %2260 = load <2 x i64>, <2 x i64>* %2259, align 8, !alias.scope !97
  %2261 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2252, i64 -1
  %2262 = bitcast %"class.sh::TIntermNode"** %2261 to <2 x i64>*
  store <2 x i64> %2256, <2 x i64>* %2262, align 8, !alias.scope !100, !noalias !97
  %2263 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2252, i64 -2
  %2264 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2263, i64 -1
  %2265 = bitcast %"class.sh::TIntermNode"** %2264 to <2 x i64>*
  store <2 x i64> %2260, <2 x i64>* %2265, align 8, !alias.scope !100, !noalias !97
  %2266 = add i64 %2232, 8
  %2267 = add i64 %2233, -2
  %2268 = icmp eq i64 %2267, 0
  br i1 %2268, label %2269, label %2231, !llvm.loop !102

2269:                                             ; preds = %2231
  %2270 = sub nuw nsw i64 -8, %2232
  br label %2271

2271:                                             ; preds = %2269, %2214
  %2272 = phi i64 [ 0, %2214 ], [ %2270, %2269 ]
  %2273 = icmp eq i64 %2223, 0
  br i1 %2273, label %2291, label %2274

2274:                                             ; preds = %2271
  %2275 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2184, i64 -1
  %2276 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2192, i64 -1
  %2277 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2275, i64 %2272
  %2278 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2276, i64 %2272
  %2279 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2278, i64 -1
  %2280 = bitcast %"class.sh::TIntermNode"** %2279 to <2 x i64>*
  %2281 = load <2 x i64>, <2 x i64>* %2280, align 8, !alias.scope !97
  %2282 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2278, i64 -2
  %2283 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2282, i64 -1
  %2284 = bitcast %"class.sh::TIntermNode"** %2283 to <2 x i64>*
  %2285 = load <2 x i64>, <2 x i64>* %2284, align 8, !alias.scope !97
  %2286 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2277, i64 -1
  %2287 = bitcast %"class.sh::TIntermNode"** %2286 to <2 x i64>*
  store <2 x i64> %2281, <2 x i64>* %2287, align 8, !alias.scope !100, !noalias !97
  %2288 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2277, i64 -2
  %2289 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2288, i64 -1
  %2290 = bitcast %"class.sh::TIntermNode"** %2289 to <2 x i64>*
  store <2 x i64> %2285, <2 x i64>* %2290, align 8, !alias.scope !100, !noalias !97
  br label %2291

2291:                                             ; preds = %2271, %2274
  %2292 = icmp eq i64 %2199, %2215
  br i1 %2292, label %2363, label %2293

2293:                                             ; preds = %2291, %2201, %2194
  %2294 = phi %"class.sh::TIntermNode"** [ %2184, %2201 ], [ %2184, %2194 ], [ %2217, %2291 ]
  %2295 = phi %"class.sh::TIntermNode"** [ %2192, %2201 ], [ %2192, %2194 ], [ %2219, %2291 ]
  %2296 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2295, i64 -1
  %2297 = ptrtoint %"class.sh::TIntermNode"** %2296 to i64
  %2298 = sub i64 %2297, %2191
  %2299 = lshr i64 %2298, 3
  %2300 = add nuw nsw i64 %2299, 1
  %2301 = and i64 %2300, 7
  %2302 = icmp eq i64 %2301, 0
  br i1 %2302, label %2314, label %2303

2303:                                             ; preds = %2293, %2303
  %2304 = phi %"class.sh::TIntermNode"** [ %2307, %2303 ], [ %2294, %2293 ]
  %2305 = phi %"class.sh::TIntermNode"** [ %2308, %2303 ], [ %2295, %2293 ]
  %2306 = phi i64 [ %2312, %2303 ], [ %2301, %2293 ]
  %2307 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2304, i64 -1
  %2308 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2305, i64 -1
  %2309 = bitcast %"class.sh::TIntermNode"** %2308 to i64*
  %2310 = load i64, i64* %2309, align 8
  %2311 = bitcast %"class.sh::TIntermNode"** %2307 to i64*
  store i64 %2310, i64* %2311, align 8
  %2312 = add i64 %2306, -1
  %2313 = icmp eq i64 %2312, 0
  br i1 %2313, label %2314, label %2303, !llvm.loop !103

2314:                                             ; preds = %2303, %2293
  %2315 = phi %"class.sh::TIntermNode"** [ undef, %2293 ], [ %2307, %2303 ]
  %2316 = phi %"class.sh::TIntermNode"** [ %2294, %2293 ], [ %2307, %2303 ]
  %2317 = phi %"class.sh::TIntermNode"** [ %2295, %2293 ], [ %2308, %2303 ]
  %2318 = icmp ult i64 %2298, 56
  br i1 %2318, label %2363, label %2319

2319:                                             ; preds = %2314, %2319
  %2320 = phi %"class.sh::TIntermNode"** [ %2357, %2319 ], [ %2316, %2314 ]
  %2321 = phi %"class.sh::TIntermNode"** [ %2358, %2319 ], [ %2317, %2314 ]
  %2322 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2320, i64 -1
  %2323 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2321, i64 -1
  %2324 = bitcast %"class.sh::TIntermNode"** %2323 to i64*
  %2325 = load i64, i64* %2324, align 8
  %2326 = bitcast %"class.sh::TIntermNode"** %2322 to i64*
  store i64 %2325, i64* %2326, align 8
  %2327 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2320, i64 -2
  %2328 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2321, i64 -2
  %2329 = bitcast %"class.sh::TIntermNode"** %2328 to i64*
  %2330 = load i64, i64* %2329, align 8
  %2331 = bitcast %"class.sh::TIntermNode"** %2327 to i64*
  store i64 %2330, i64* %2331, align 8
  %2332 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2320, i64 -3
  %2333 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2321, i64 -3
  %2334 = bitcast %"class.sh::TIntermNode"** %2333 to i64*
  %2335 = load i64, i64* %2334, align 8
  %2336 = bitcast %"class.sh::TIntermNode"** %2332 to i64*
  store i64 %2335, i64* %2336, align 8
  %2337 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2320, i64 -4
  %2338 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2321, i64 -4
  %2339 = bitcast %"class.sh::TIntermNode"** %2338 to i64*
  %2340 = load i64, i64* %2339, align 8
  %2341 = bitcast %"class.sh::TIntermNode"** %2337 to i64*
  store i64 %2340, i64* %2341, align 8
  %2342 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2320, i64 -5
  %2343 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2321, i64 -5
  %2344 = bitcast %"class.sh::TIntermNode"** %2343 to i64*
  %2345 = load i64, i64* %2344, align 8
  %2346 = bitcast %"class.sh::TIntermNode"** %2342 to i64*
  store i64 %2345, i64* %2346, align 8
  %2347 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2320, i64 -6
  %2348 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2321, i64 -6
  %2349 = bitcast %"class.sh::TIntermNode"** %2348 to i64*
  %2350 = load i64, i64* %2349, align 8
  %2351 = bitcast %"class.sh::TIntermNode"** %2347 to i64*
  store i64 %2350, i64* %2351, align 8
  %2352 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2320, i64 -7
  %2353 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2321, i64 -7
  %2354 = bitcast %"class.sh::TIntermNode"** %2353 to i64*
  %2355 = load i64, i64* %2354, align 8
  %2356 = bitcast %"class.sh::TIntermNode"** %2352 to i64*
  store i64 %2355, i64* %2356, align 8
  %2357 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2320, i64 -8
  %2358 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2321, i64 -8
  %2359 = bitcast %"class.sh::TIntermNode"** %2358 to i64*
  %2360 = load i64, i64* %2359, align 8
  %2361 = bitcast %"class.sh::TIntermNode"** %2357 to i64*
  store i64 %2360, i64* %2361, align 8
  %2362 = icmp eq %"class.sh::TIntermNode"** %2358, %2190
  br i1 %2362, label %2363, label %2319, !llvm.loop !104

2363:                                             ; preds = %2314, %2319, %2291, %2181
  %2364 = phi %"class.sh::TIntermNode"** [ %2184, %2181 ], [ %2217, %2291 ], [ %2315, %2314 ], [ %2357, %2319 ]
  %2365 = ptrtoint %"class.sh::TIntermNode"** %2364 to i64
  store i64 %2365, i64* %2157, align 8
  store i64 %2189, i64* %2156, align 8
  store i64 %2186, i64* %2166, align 8
  br label %2366

2366:                                             ; preds = %2149, %2363
  call void @_ZN2sh16TIntermTraverser29insertStatementsInParentBlockERKNS_7TVectorIPNS_11TIntermNodeEEES6_(%"class.sh::TIntermTraverser"* %639, %"class.sh::TVector.31"* nonnull dereferenceable(24) %20, %"class.sh::TVector.31"* nonnull dereferenceable(24) %21) #8
  %2367 = call %"class.sh::TIntermSymbol"* @_ZN2sh20CreateTempSymbolNodeEPKNS_9TVariableE(%"class.sh::TVariable"* %1288) #8
  %2368 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %2367, i64 0, i32 0, i32 0
  call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %639, %"class.sh::TIntermNode"* %2368, i32 1) #8
  store i8 1, i8* %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1285) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %638) #8
  %2369 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %414, align 8
  %2370 = icmp eq %"class.sh::TIntermNode"** %2369, null
  br i1 %2370, label %2374, label %2371

2371:                                             ; preds = %2366
  %2372 = ptrtoint %"class.sh::TIntermNode"** %2369 to i64
  %2373 = bitcast %"class.sh::TIntermNode"*** %415 to i64*
  store i64 %2372, i64* %2373, align 8
  br label %2374

2374:                                             ; preds = %2366, %2371
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %413) #8
  %2375 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %410, align 8
  %2376 = icmp eq %"class.sh::TIntermNode"** %2375, null
  br i1 %2376, label %2380, label %2377

2377:                                             ; preds = %2374
  %2378 = ptrtoint %"class.sh::TIntermNode"** %2375 to i64
  %2379 = bitcast %"class.sh::TIntermNode"*** %411 to i64*
  store i64 %2378, i64* %2379, align 8
  br label %2380

2380:                                             ; preds = %2377, %2374
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %409) #8
  br label %3020

2381:                                             ; preds = %225
  %2382 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 3
  %2383 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %2382, align 8
  %2384 = bitcast %"class.sh::TIntermTyped"* %2383 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %2385 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %2384, align 8
  %2386 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %2385, i64 31
  %2387 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %2386, align 8
  %2388 = call dereferenceable(184) %"class.sh::TType"* %2387(%"class.sh::TIntermTyped"* %2383) #8
  %2389 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2388, i64 0, i32 0
  %2390 = load i32, i32* %2389, align 8
  %2391 = icmp eq i32 %2390, 3
  br i1 %2391, label %2597, label %2392

2392:                                             ; preds = %2381
  %2393 = bitcast %"class.sh::TVector.31"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2393) #8
  %2394 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2393, i8 0, i64 24, i1 false) #8
  %2395 = ptrtoint %"class.sh::TIntermTyped"* %2383 to i64
  %2396 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %4, i64 0, i32 0, i32 0, i32 1
  %2397 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %2398 = bitcast %"class.sh::TIntermNode"*** %2396 to i64*
  %2399 = bitcast %"class.sh::TVector.31"* %4 to i64*
  %2400 = bitcast %"class.sh::TIntermNode"*** %2397 to i64*
  %2401 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2402 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2401, i64 8) #8
  %2403 = bitcast i8* %2402 to %"class.sh::TIntermNode"**
  %2404 = getelementptr inbounds i8, i8* %2402, i64 8
  %2405 = ptrtoint i8* %2404 to i64
  %2406 = bitcast i8* %2402 to i64*
  store i64 %2395, i64* %2406, align 8
  %2407 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2394, align 8
  %2408 = ptrtoint %"class.sh::TIntermNode"** %2407 to i64
  %2409 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2396, align 8
  %2410 = bitcast %"class.sh::TIntermNode"** %2409 to i8*
  %2411 = icmp eq %"class.sh::TIntermNode"** %2409, %2407
  br i1 %2411, label %2585, label %2412

2412:                                             ; preds = %2392
  %2413 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2409, i64 -1
  %2414 = ptrtoint %"class.sh::TIntermNode"** %2413 to i64
  %2415 = sub i64 %2414, %2408
  %2416 = lshr i64 %2415, 3
  %2417 = add nuw nsw i64 %2416, 1
  %2418 = icmp ult i64 %2417, 4
  br i1 %2418, label %2515, label %2419

2419:                                             ; preds = %2412
  %2420 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2409, i64 -1
  %2421 = ptrtoint %"class.sh::TIntermNode"** %2420 to i64
  %2422 = sub i64 %2421, %2408
  %2423 = lshr i64 %2422, 3
  %2424 = and i64 %2422, -8
  %2425 = xor i64 %2424, -8
  %2426 = getelementptr i8, i8* %2402, i64 %2425
  %2427 = xor i64 %2423, -1
  %2428 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2409, i64 %2427
  %2429 = bitcast %"class.sh::TIntermNode"** %2428 to i8*
  %2430 = icmp ult i8* %2426, %2410
  %2431 = icmp ugt i8* %2402, %2429
  %2432 = and i1 %2430, %2431
  br i1 %2432, label %2515, label %2433

2433:                                             ; preds = %2419
  %2434 = and i64 %2417, 4611686018427387900
  %2435 = sub nsw i64 0, %2434
  %2436 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2403, i64 %2435
  %2437 = sub nsw i64 0, %2434
  %2438 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2409, i64 %2437
  %2439 = add nsw i64 %2434, -4
  %2440 = lshr exact i64 %2439, 2
  %2441 = add nuw nsw i64 %2440, 1
  %2442 = and i64 %2441, 1
  %2443 = icmp eq i64 %2439, 0
  br i1 %2443, label %2490, label %2444

2444:                                             ; preds = %2433
  %2445 = sub nuw nsw i64 %2441, %2442
  %2446 = getelementptr i8, i8* %2402, i64 -8
  %2447 = bitcast i8* %2446 to %"class.sh::TIntermNode"**
  %2448 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2409, i64 -1
  %2449 = getelementptr i8, i8* %2402, i64 -8
  %2450 = bitcast i8* %2449 to %"class.sh::TIntermNode"**
  %2451 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2409, i64 -1
  br label %2452

2452:                                             ; preds = %2452, %2444
  %2453 = phi i64 [ 0, %2444 ], [ %2487, %2452 ]
  %2454 = phi i64 [ %2445, %2444 ], [ %2488, %2452 ]
  %2455 = sub i64 0, %2453
  %2456 = sub i64 0, %2453
  %2457 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2447, i64 %2455
  %2458 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2448, i64 %2456
  %2459 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2458, i64 -1
  %2460 = bitcast %"class.sh::TIntermNode"** %2459 to <2 x i64>*
  %2461 = load <2 x i64>, <2 x i64>* %2460, align 8, !alias.scope !105
  %2462 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2458, i64 -2
  %2463 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2462, i64 -1
  %2464 = bitcast %"class.sh::TIntermNode"** %2463 to <2 x i64>*
  %2465 = load <2 x i64>, <2 x i64>* %2464, align 8, !alias.scope !105
  %2466 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2457, i64 -1
  %2467 = bitcast %"class.sh::TIntermNode"** %2466 to <2 x i64>*
  store <2 x i64> %2461, <2 x i64>* %2467, align 8, !alias.scope !108, !noalias !105
  %2468 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2457, i64 -2
  %2469 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2468, i64 -1
  %2470 = bitcast %"class.sh::TIntermNode"** %2469 to <2 x i64>*
  store <2 x i64> %2465, <2 x i64>* %2470, align 8, !alias.scope !108, !noalias !105
  %2471 = sub nuw nsw i64 -4, %2453
  %2472 = sub nuw nsw i64 -4, %2453
  %2473 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2450, i64 %2471
  %2474 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2451, i64 %2472
  %2475 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2474, i64 -1
  %2476 = bitcast %"class.sh::TIntermNode"** %2475 to <2 x i64>*
  %2477 = load <2 x i64>, <2 x i64>* %2476, align 8, !alias.scope !105
  %2478 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2474, i64 -2
  %2479 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2478, i64 -1
  %2480 = bitcast %"class.sh::TIntermNode"** %2479 to <2 x i64>*
  %2481 = load <2 x i64>, <2 x i64>* %2480, align 8, !alias.scope !105
  %2482 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2473, i64 -1
  %2483 = bitcast %"class.sh::TIntermNode"** %2482 to <2 x i64>*
  store <2 x i64> %2477, <2 x i64>* %2483, align 8, !alias.scope !108, !noalias !105
  %2484 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2473, i64 -2
  %2485 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2484, i64 -1
  %2486 = bitcast %"class.sh::TIntermNode"** %2485 to <2 x i64>*
  store <2 x i64> %2481, <2 x i64>* %2486, align 8, !alias.scope !108, !noalias !105
  %2487 = add i64 %2453, 8
  %2488 = add i64 %2454, -2
  %2489 = icmp eq i64 %2488, 0
  br i1 %2489, label %2490, label %2452, !llvm.loop !110

2490:                                             ; preds = %2452, %2433
  %2491 = phi i64 [ 0, %2433 ], [ %2487, %2452 ]
  %2492 = icmp eq i64 %2442, 0
  br i1 %2492, label %2513, label %2493

2493:                                             ; preds = %2490
  %2494 = sub i64 0, %2491
  %2495 = getelementptr i8, i8* %2402, i64 -8
  %2496 = bitcast i8* %2495 to %"class.sh::TIntermNode"**
  %2497 = sub i64 0, %2491
  %2498 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2409, i64 -1
  %2499 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2496, i64 %2494
  %2500 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2498, i64 %2497
  %2501 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2500, i64 -1
  %2502 = bitcast %"class.sh::TIntermNode"** %2501 to <2 x i64>*
  %2503 = load <2 x i64>, <2 x i64>* %2502, align 8, !alias.scope !105
  %2504 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2500, i64 -2
  %2505 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2504, i64 -1
  %2506 = bitcast %"class.sh::TIntermNode"** %2505 to <2 x i64>*
  %2507 = load <2 x i64>, <2 x i64>* %2506, align 8, !alias.scope !105
  %2508 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2499, i64 -1
  %2509 = bitcast %"class.sh::TIntermNode"** %2508 to <2 x i64>*
  store <2 x i64> %2503, <2 x i64>* %2509, align 8, !alias.scope !108, !noalias !105
  %2510 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2499, i64 -2
  %2511 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2510, i64 -1
  %2512 = bitcast %"class.sh::TIntermNode"** %2511 to <2 x i64>*
  store <2 x i64> %2507, <2 x i64>* %2512, align 8, !alias.scope !108, !noalias !105
  br label %2513

2513:                                             ; preds = %2490, %2493
  %2514 = icmp eq i64 %2417, %2434
  br i1 %2514, label %2585, label %2515

2515:                                             ; preds = %2513, %2419, %2412
  %2516 = phi %"class.sh::TIntermNode"** [ %2403, %2419 ], [ %2403, %2412 ], [ %2436, %2513 ]
  %2517 = phi %"class.sh::TIntermNode"** [ %2409, %2419 ], [ %2409, %2412 ], [ %2438, %2513 ]
  %2518 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2517, i64 -1
  %2519 = ptrtoint %"class.sh::TIntermNode"** %2518 to i64
  %2520 = sub i64 %2519, %2408
  %2521 = lshr i64 %2520, 3
  %2522 = add nuw nsw i64 %2521, 1
  %2523 = and i64 %2522, 7
  %2524 = icmp eq i64 %2523, 0
  br i1 %2524, label %2536, label %2525

2525:                                             ; preds = %2515, %2525
  %2526 = phi %"class.sh::TIntermNode"** [ %2529, %2525 ], [ %2516, %2515 ]
  %2527 = phi %"class.sh::TIntermNode"** [ %2530, %2525 ], [ %2517, %2515 ]
  %2528 = phi i64 [ %2534, %2525 ], [ %2523, %2515 ]
  %2529 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2526, i64 -1
  %2530 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2527, i64 -1
  %2531 = bitcast %"class.sh::TIntermNode"** %2530 to i64*
  %2532 = load i64, i64* %2531, align 8
  %2533 = bitcast %"class.sh::TIntermNode"** %2529 to i64*
  store i64 %2532, i64* %2533, align 8
  %2534 = add i64 %2528, -1
  %2535 = icmp eq i64 %2534, 0
  br i1 %2535, label %2536, label %2525, !llvm.loop !111

2536:                                             ; preds = %2525, %2515
  %2537 = phi %"class.sh::TIntermNode"** [ undef, %2515 ], [ %2529, %2525 ]
  %2538 = phi %"class.sh::TIntermNode"** [ %2516, %2515 ], [ %2529, %2525 ]
  %2539 = phi %"class.sh::TIntermNode"** [ %2517, %2515 ], [ %2530, %2525 ]
  %2540 = icmp ult i64 %2520, 56
  br i1 %2540, label %2585, label %2541

2541:                                             ; preds = %2536, %2541
  %2542 = phi %"class.sh::TIntermNode"** [ %2579, %2541 ], [ %2538, %2536 ]
  %2543 = phi %"class.sh::TIntermNode"** [ %2580, %2541 ], [ %2539, %2536 ]
  %2544 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2542, i64 -1
  %2545 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2543, i64 -1
  %2546 = bitcast %"class.sh::TIntermNode"** %2545 to i64*
  %2547 = load i64, i64* %2546, align 8
  %2548 = bitcast %"class.sh::TIntermNode"** %2544 to i64*
  store i64 %2547, i64* %2548, align 8
  %2549 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2542, i64 -2
  %2550 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2543, i64 -2
  %2551 = bitcast %"class.sh::TIntermNode"** %2550 to i64*
  %2552 = load i64, i64* %2551, align 8
  %2553 = bitcast %"class.sh::TIntermNode"** %2549 to i64*
  store i64 %2552, i64* %2553, align 8
  %2554 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2542, i64 -3
  %2555 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2543, i64 -3
  %2556 = bitcast %"class.sh::TIntermNode"** %2555 to i64*
  %2557 = load i64, i64* %2556, align 8
  %2558 = bitcast %"class.sh::TIntermNode"** %2554 to i64*
  store i64 %2557, i64* %2558, align 8
  %2559 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2542, i64 -4
  %2560 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2543, i64 -4
  %2561 = bitcast %"class.sh::TIntermNode"** %2560 to i64*
  %2562 = load i64, i64* %2561, align 8
  %2563 = bitcast %"class.sh::TIntermNode"** %2559 to i64*
  store i64 %2562, i64* %2563, align 8
  %2564 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2542, i64 -5
  %2565 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2543, i64 -5
  %2566 = bitcast %"class.sh::TIntermNode"** %2565 to i64*
  %2567 = load i64, i64* %2566, align 8
  %2568 = bitcast %"class.sh::TIntermNode"** %2564 to i64*
  store i64 %2567, i64* %2568, align 8
  %2569 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2542, i64 -6
  %2570 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2543, i64 -6
  %2571 = bitcast %"class.sh::TIntermNode"** %2570 to i64*
  %2572 = load i64, i64* %2571, align 8
  %2573 = bitcast %"class.sh::TIntermNode"** %2569 to i64*
  store i64 %2572, i64* %2573, align 8
  %2574 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2542, i64 -7
  %2575 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2543, i64 -7
  %2576 = bitcast %"class.sh::TIntermNode"** %2575 to i64*
  %2577 = load i64, i64* %2576, align 8
  %2578 = bitcast %"class.sh::TIntermNode"** %2574 to i64*
  store i64 %2577, i64* %2578, align 8
  %2579 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2542, i64 -8
  %2580 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2543, i64 -8
  %2581 = bitcast %"class.sh::TIntermNode"** %2580 to i64*
  %2582 = load i64, i64* %2581, align 8
  %2583 = bitcast %"class.sh::TIntermNode"** %2579 to i64*
  store i64 %2582, i64* %2583, align 8
  %2584 = icmp eq %"class.sh::TIntermNode"** %2580, %2407
  br i1 %2584, label %2585, label %2541, !llvm.loop !112

2585:                                             ; preds = %2536, %2541, %2513, %2392
  %2586 = phi %"class.sh::TIntermNode"** [ %2403, %2392 ], [ %2436, %2513 ], [ %2537, %2536 ], [ %2579, %2541 ]
  %2587 = ptrtoint %"class.sh::TIntermNode"** %2586 to i64
  store i64 %2587, i64* %2399, align 8
  store i64 %2405, i64* %2398, align 8
  store i64 %2405, i64* %2400, align 8
  %2588 = bitcast %"class.sh::TType"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %2588) #8
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeEhh(%"class.sh::TType"* nonnull %5, i32 3, i8 zeroext 1, i8 zeroext 1) #8
  %2589 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate17CreateConstructorERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TType"* nonnull dereferenceable(184) %5, %"class.sh::TVector.31"* nonnull %4) #8
  %2590 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2589, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %2588) #8
  %2591 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2394, align 8
  %2592 = icmp eq %"class.sh::TIntermNode"** %2591, null
  br i1 %2592, label %2596, label %2593

2593:                                             ; preds = %2585
  %2594 = ptrtoint %"class.sh::TIntermNode"** %2591 to i64
  %2595 = bitcast %"class.sh::TIntermNode"*** %2396 to i64*
  store i64 %2594, i64* %2595, align 8
  br label %2596

2596:                                             ; preds = %2593, %2585
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2393) #8
  br label %2597

2597:                                             ; preds = %2596, %2381
  %2598 = phi %"class.sh::TIntermTyped"* [ %2590, %2596 ], [ %2383, %2381 ]
  %2599 = bitcast %"class.sh::TVector.31"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2599) #8
  %2600 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %14, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2599, i8 0, i64 24, i1 false) #8
  %2601 = bitcast %"class.sh::TIntermTyped"** %71 to i64*
  %2602 = load i64, i64* %2601, align 8
  %2603 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %14, i64 0, i32 0, i32 0, i32 1
  %2604 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %14, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %2605 = bitcast %"class.sh::TIntermNode"*** %2603 to i64*
  %2606 = bitcast %"class.sh::TVector.31"* %14 to i64*
  %2607 = bitcast %"class.sh::TIntermNode"*** %2604 to i64*
  %2608 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2609 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2608, i64 8) #8
  %2610 = bitcast i8* %2609 to %"class.sh::TIntermNode"**
  %2611 = getelementptr inbounds i8, i8* %2609, i64 8
  %2612 = ptrtoint i8* %2611 to i64
  %2613 = bitcast i8* %2609 to i64*
  store i64 %2602, i64* %2613, align 8
  %2614 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2600, align 8
  %2615 = ptrtoint %"class.sh::TIntermNode"** %2614 to i64
  %2616 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2603, align 8
  %2617 = bitcast %"class.sh::TIntermNode"** %2616 to i8*
  %2618 = icmp eq %"class.sh::TIntermNode"** %2616, %2614
  br i1 %2618, label %2792, label %2619

2619:                                             ; preds = %2597
  %2620 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2616, i64 -1
  %2621 = ptrtoint %"class.sh::TIntermNode"** %2620 to i64
  %2622 = sub i64 %2621, %2615
  %2623 = lshr i64 %2622, 3
  %2624 = add nuw nsw i64 %2623, 1
  %2625 = icmp ult i64 %2624, 4
  br i1 %2625, label %2722, label %2626

2626:                                             ; preds = %2619
  %2627 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2616, i64 -1
  %2628 = ptrtoint %"class.sh::TIntermNode"** %2627 to i64
  %2629 = sub i64 %2628, %2615
  %2630 = lshr i64 %2629, 3
  %2631 = and i64 %2629, -8
  %2632 = xor i64 %2631, -8
  %2633 = getelementptr i8, i8* %2609, i64 %2632
  %2634 = xor i64 %2630, -1
  %2635 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2616, i64 %2634
  %2636 = bitcast %"class.sh::TIntermNode"** %2635 to i8*
  %2637 = icmp ult i8* %2633, %2617
  %2638 = icmp ugt i8* %2609, %2636
  %2639 = and i1 %2637, %2638
  br i1 %2639, label %2722, label %2640

2640:                                             ; preds = %2626
  %2641 = and i64 %2624, 4611686018427387900
  %2642 = sub nsw i64 0, %2641
  %2643 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2610, i64 %2642
  %2644 = sub nsw i64 0, %2641
  %2645 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2616, i64 %2644
  %2646 = add nsw i64 %2641, -4
  %2647 = lshr exact i64 %2646, 2
  %2648 = add nuw nsw i64 %2647, 1
  %2649 = and i64 %2648, 1
  %2650 = icmp eq i64 %2646, 0
  br i1 %2650, label %2697, label %2651

2651:                                             ; preds = %2640
  %2652 = sub nuw nsw i64 %2648, %2649
  %2653 = getelementptr i8, i8* %2609, i64 -8
  %2654 = bitcast i8* %2653 to %"class.sh::TIntermNode"**
  %2655 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2616, i64 -1
  %2656 = getelementptr i8, i8* %2609, i64 -8
  %2657 = bitcast i8* %2656 to %"class.sh::TIntermNode"**
  %2658 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2616, i64 -1
  br label %2659

2659:                                             ; preds = %2659, %2651
  %2660 = phi i64 [ 0, %2651 ], [ %2694, %2659 ]
  %2661 = phi i64 [ %2652, %2651 ], [ %2695, %2659 ]
  %2662 = sub i64 0, %2660
  %2663 = sub i64 0, %2660
  %2664 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2654, i64 %2662
  %2665 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2655, i64 %2663
  %2666 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2665, i64 -1
  %2667 = bitcast %"class.sh::TIntermNode"** %2666 to <2 x i64>*
  %2668 = load <2 x i64>, <2 x i64>* %2667, align 8, !alias.scope !113
  %2669 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2665, i64 -2
  %2670 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2669, i64 -1
  %2671 = bitcast %"class.sh::TIntermNode"** %2670 to <2 x i64>*
  %2672 = load <2 x i64>, <2 x i64>* %2671, align 8, !alias.scope !113
  %2673 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2664, i64 -1
  %2674 = bitcast %"class.sh::TIntermNode"** %2673 to <2 x i64>*
  store <2 x i64> %2668, <2 x i64>* %2674, align 8, !alias.scope !116, !noalias !113
  %2675 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2664, i64 -2
  %2676 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2675, i64 -1
  %2677 = bitcast %"class.sh::TIntermNode"** %2676 to <2 x i64>*
  store <2 x i64> %2672, <2 x i64>* %2677, align 8, !alias.scope !116, !noalias !113
  %2678 = sub nuw nsw i64 -4, %2660
  %2679 = sub nuw nsw i64 -4, %2660
  %2680 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2657, i64 %2678
  %2681 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2658, i64 %2679
  %2682 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2681, i64 -1
  %2683 = bitcast %"class.sh::TIntermNode"** %2682 to <2 x i64>*
  %2684 = load <2 x i64>, <2 x i64>* %2683, align 8, !alias.scope !113
  %2685 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2681, i64 -2
  %2686 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2685, i64 -1
  %2687 = bitcast %"class.sh::TIntermNode"** %2686 to <2 x i64>*
  %2688 = load <2 x i64>, <2 x i64>* %2687, align 8, !alias.scope !113
  %2689 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2680, i64 -1
  %2690 = bitcast %"class.sh::TIntermNode"** %2689 to <2 x i64>*
  store <2 x i64> %2684, <2 x i64>* %2690, align 8, !alias.scope !116, !noalias !113
  %2691 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2680, i64 -2
  %2692 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2691, i64 -1
  %2693 = bitcast %"class.sh::TIntermNode"** %2692 to <2 x i64>*
  store <2 x i64> %2688, <2 x i64>* %2693, align 8, !alias.scope !116, !noalias !113
  %2694 = add i64 %2660, 8
  %2695 = add i64 %2661, -2
  %2696 = icmp eq i64 %2695, 0
  br i1 %2696, label %2697, label %2659, !llvm.loop !118

2697:                                             ; preds = %2659, %2640
  %2698 = phi i64 [ 0, %2640 ], [ %2694, %2659 ]
  %2699 = icmp eq i64 %2649, 0
  br i1 %2699, label %2720, label %2700

2700:                                             ; preds = %2697
  %2701 = sub i64 0, %2698
  %2702 = getelementptr i8, i8* %2609, i64 -8
  %2703 = bitcast i8* %2702 to %"class.sh::TIntermNode"**
  %2704 = sub i64 0, %2698
  %2705 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2616, i64 -1
  %2706 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2703, i64 %2701
  %2707 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2705, i64 %2704
  %2708 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2707, i64 -1
  %2709 = bitcast %"class.sh::TIntermNode"** %2708 to <2 x i64>*
  %2710 = load <2 x i64>, <2 x i64>* %2709, align 8, !alias.scope !113
  %2711 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2707, i64 -2
  %2712 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2711, i64 -1
  %2713 = bitcast %"class.sh::TIntermNode"** %2712 to <2 x i64>*
  %2714 = load <2 x i64>, <2 x i64>* %2713, align 8, !alias.scope !113
  %2715 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2706, i64 -1
  %2716 = bitcast %"class.sh::TIntermNode"** %2715 to <2 x i64>*
  store <2 x i64> %2710, <2 x i64>* %2716, align 8, !alias.scope !116, !noalias !113
  %2717 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2706, i64 -2
  %2718 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2717, i64 -1
  %2719 = bitcast %"class.sh::TIntermNode"** %2718 to <2 x i64>*
  store <2 x i64> %2714, <2 x i64>* %2719, align 8, !alias.scope !116, !noalias !113
  br label %2720

2720:                                             ; preds = %2697, %2700
  %2721 = icmp eq i64 %2624, %2641
  br i1 %2721, label %2792, label %2722

2722:                                             ; preds = %2720, %2626, %2619
  %2723 = phi %"class.sh::TIntermNode"** [ %2610, %2626 ], [ %2610, %2619 ], [ %2643, %2720 ]
  %2724 = phi %"class.sh::TIntermNode"** [ %2616, %2626 ], [ %2616, %2619 ], [ %2645, %2720 ]
  %2725 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2724, i64 -1
  %2726 = ptrtoint %"class.sh::TIntermNode"** %2725 to i64
  %2727 = sub i64 %2726, %2615
  %2728 = lshr i64 %2727, 3
  %2729 = add nuw nsw i64 %2728, 1
  %2730 = and i64 %2729, 7
  %2731 = icmp eq i64 %2730, 0
  br i1 %2731, label %2743, label %2732

2732:                                             ; preds = %2722, %2732
  %2733 = phi %"class.sh::TIntermNode"** [ %2736, %2732 ], [ %2723, %2722 ]
  %2734 = phi %"class.sh::TIntermNode"** [ %2737, %2732 ], [ %2724, %2722 ]
  %2735 = phi i64 [ %2741, %2732 ], [ %2730, %2722 ]
  %2736 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2733, i64 -1
  %2737 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2734, i64 -1
  %2738 = bitcast %"class.sh::TIntermNode"** %2737 to i64*
  %2739 = load i64, i64* %2738, align 8
  %2740 = bitcast %"class.sh::TIntermNode"** %2736 to i64*
  store i64 %2739, i64* %2740, align 8
  %2741 = add i64 %2735, -1
  %2742 = icmp eq i64 %2741, 0
  br i1 %2742, label %2743, label %2732, !llvm.loop !119

2743:                                             ; preds = %2732, %2722
  %2744 = phi %"class.sh::TIntermNode"** [ undef, %2722 ], [ %2736, %2732 ]
  %2745 = phi %"class.sh::TIntermNode"** [ %2723, %2722 ], [ %2736, %2732 ]
  %2746 = phi %"class.sh::TIntermNode"** [ %2724, %2722 ], [ %2737, %2732 ]
  %2747 = icmp ult i64 %2727, 56
  br i1 %2747, label %2792, label %2748

2748:                                             ; preds = %2743, %2748
  %2749 = phi %"class.sh::TIntermNode"** [ %2786, %2748 ], [ %2745, %2743 ]
  %2750 = phi %"class.sh::TIntermNode"** [ %2787, %2748 ], [ %2746, %2743 ]
  %2751 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2749, i64 -1
  %2752 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2750, i64 -1
  %2753 = bitcast %"class.sh::TIntermNode"** %2752 to i64*
  %2754 = load i64, i64* %2753, align 8
  %2755 = bitcast %"class.sh::TIntermNode"** %2751 to i64*
  store i64 %2754, i64* %2755, align 8
  %2756 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2749, i64 -2
  %2757 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2750, i64 -2
  %2758 = bitcast %"class.sh::TIntermNode"** %2757 to i64*
  %2759 = load i64, i64* %2758, align 8
  %2760 = bitcast %"class.sh::TIntermNode"** %2756 to i64*
  store i64 %2759, i64* %2760, align 8
  %2761 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2749, i64 -3
  %2762 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2750, i64 -3
  %2763 = bitcast %"class.sh::TIntermNode"** %2762 to i64*
  %2764 = load i64, i64* %2763, align 8
  %2765 = bitcast %"class.sh::TIntermNode"** %2761 to i64*
  store i64 %2764, i64* %2765, align 8
  %2766 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2749, i64 -4
  %2767 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2750, i64 -4
  %2768 = bitcast %"class.sh::TIntermNode"** %2767 to i64*
  %2769 = load i64, i64* %2768, align 8
  %2770 = bitcast %"class.sh::TIntermNode"** %2766 to i64*
  store i64 %2769, i64* %2770, align 8
  %2771 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2749, i64 -5
  %2772 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2750, i64 -5
  %2773 = bitcast %"class.sh::TIntermNode"** %2772 to i64*
  %2774 = load i64, i64* %2773, align 8
  %2775 = bitcast %"class.sh::TIntermNode"** %2771 to i64*
  store i64 %2774, i64* %2775, align 8
  %2776 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2749, i64 -6
  %2777 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2750, i64 -6
  %2778 = bitcast %"class.sh::TIntermNode"** %2777 to i64*
  %2779 = load i64, i64* %2778, align 8
  %2780 = bitcast %"class.sh::TIntermNode"** %2776 to i64*
  store i64 %2779, i64* %2780, align 8
  %2781 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2749, i64 -7
  %2782 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2750, i64 -7
  %2783 = bitcast %"class.sh::TIntermNode"** %2782 to i64*
  %2784 = load i64, i64* %2783, align 8
  %2785 = bitcast %"class.sh::TIntermNode"** %2781 to i64*
  store i64 %2784, i64* %2785, align 8
  %2786 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2749, i64 -8
  %2787 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2750, i64 -8
  %2788 = bitcast %"class.sh::TIntermNode"** %2787 to i64*
  %2789 = load i64, i64* %2788, align 8
  %2790 = bitcast %"class.sh::TIntermNode"** %2786 to i64*
  store i64 %2789, i64* %2790, align 8
  %2791 = icmp eq %"class.sh::TIntermNode"** %2787, %2614
  br i1 %2791, label %2792, label %2748, !llvm.loop !120

2792:                                             ; preds = %2743, %2748, %2720, %2597
  %2793 = phi %"class.sh::TIntermNode"** [ %2610, %2597 ], [ %2643, %2720 ], [ %2744, %2743 ], [ %2786, %2748 ]
  %2794 = ptrtoint %"class.sh::TIntermNode"** %2793 to i64
  store i64 %2794, i64* %2606, align 8
  store i64 %2612, i64* %2605, align 8
  store i64 %2612, i64* %2607, align 8
  %2795 = ptrtoint %"class.sh::TIntermTyped"* %2598 to i64
  %2796 = ptrtoint i8* %2611 to i64
  %2797 = bitcast %"class.sh::TIntermNode"*** %2603 to i64*
  %2798 = bitcast %"class.sh::TVector.31"* %14 to i64*
  %2799 = sub i64 %2796, %2794
  %2800 = ashr exact i64 %2799, 3
  %2801 = add nsw i64 %2800, 1
  %2802 = icmp ugt i64 %2801, 2305843009213693951
  br i1 %2802, label %2803, label %2805

2803:                                             ; preds = %2792
  %2804 = bitcast %"class.sh::TVector.31"* %14 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2804) #9
  unreachable

2805:                                             ; preds = %2792
  %2806 = ptrtoint i8* %2611 to i64
  %2807 = bitcast %"class.sh::TIntermNode"*** %2604 to i64*
  %2808 = sub i64 %2806, %2794
  %2809 = ashr exact i64 %2808, 3
  %2810 = icmp ult i64 %2809, 1152921504606846975
  br i1 %2810, label %2811, label %2816

2811:                                             ; preds = %2805
  %2812 = ashr exact i64 %2808, 2
  %2813 = icmp ult i64 %2812, %2801
  %2814 = select i1 %2813, i64 %2801, i64 %2812
  %2815 = icmp eq i64 %2814, 0
  br i1 %2815, label %2822, label %2816

2816:                                             ; preds = %2811, %2805
  %2817 = phi i64 [ %2814, %2811 ], [ 2305843009213693951, %2805 ]
  %2818 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2819 = shl i64 %2817, 3
  %2820 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2818, i64 %2819) #8
  %2821 = bitcast i8* %2820 to %"class.sh::TIntermNode"**
  br label %2822

2822:                                             ; preds = %2816, %2811
  %2823 = phi i64 [ %2817, %2816 ], [ 0, %2811 ]
  %2824 = phi %"class.sh::TIntermNode"** [ %2821, %2816 ], [ null, %2811 ]
  %2825 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2824, i64 %2800
  %2826 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2824, i64 %2823
  %2827 = ptrtoint %"class.sh::TIntermNode"** %2826 to i64
  %2828 = bitcast %"class.sh::TIntermNode"** %2825 to i64*
  store i64 %2795, i64* %2828, align 8
  %2829 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2825, i64 1
  %2830 = ptrtoint %"class.sh::TIntermNode"** %2829 to i64
  %2831 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2600, align 8
  %2832 = ptrtoint %"class.sh::TIntermNode"** %2831 to i64
  %2833 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2603, align 8
  %2834 = icmp eq %"class.sh::TIntermNode"** %2833, %2831
  br i1 %2834, label %3004, label %2835

2835:                                             ; preds = %2822
  %2836 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2833, i64 -1
  %2837 = ptrtoint %"class.sh::TIntermNode"** %2836 to i64
  %2838 = sub i64 %2837, %2832
  %2839 = lshr i64 %2838, 3
  %2840 = add nuw nsw i64 %2839, 1
  %2841 = icmp ult i64 %2840, 4
  br i1 %2841, label %2934, label %2842

2842:                                             ; preds = %2835
  %2843 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2833, i64 -1
  %2844 = ptrtoint %"class.sh::TIntermNode"** %2843 to i64
  %2845 = sub i64 %2844, %2832
  %2846 = lshr i64 %2845, 3
  %2847 = xor i64 %2846, -1
  %2848 = add nsw i64 %2800, %2847
  %2849 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2824, i64 %2848
  %2850 = xor i64 %2846, -1
  %2851 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2833, i64 %2850
  %2852 = icmp ult %"class.sh::TIntermNode"** %2849, %2833
  %2853 = icmp ult %"class.sh::TIntermNode"** %2851, %2825
  %2854 = and i1 %2852, %2853
  br i1 %2854, label %2934, label %2855

2855:                                             ; preds = %2842
  %2856 = and i64 %2840, 4611686018427387900
  %2857 = sub nsw i64 0, %2856
  %2858 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2825, i64 %2857
  %2859 = sub nsw i64 0, %2856
  %2860 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2833, i64 %2859
  %2861 = add nsw i64 %2856, -4
  %2862 = lshr exact i64 %2861, 2
  %2863 = add nuw nsw i64 %2862, 1
  %2864 = and i64 %2863, 1
  %2865 = icmp eq i64 %2861, 0
  br i1 %2865, label %2912, label %2866

2866:                                             ; preds = %2855
  %2867 = sub nuw nsw i64 %2863, %2864
  %2868 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2825, i64 -1
  %2869 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2833, i64 -1
  %2870 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2825, i64 -1
  %2871 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2833, i64 -1
  br label %2872

2872:                                             ; preds = %2872, %2866
  %2873 = phi i64 [ 0, %2866 ], [ %2907, %2872 ]
  %2874 = phi i64 [ %2867, %2866 ], [ %2908, %2872 ]
  %2875 = sub i64 0, %2873
  %2876 = sub i64 0, %2873
  %2877 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2868, i64 %2875
  %2878 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2869, i64 %2876
  %2879 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2878, i64 -1
  %2880 = bitcast %"class.sh::TIntermNode"** %2879 to <2 x i64>*
  %2881 = load <2 x i64>, <2 x i64>* %2880, align 8, !alias.scope !121
  %2882 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2878, i64 -2
  %2883 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2882, i64 -1
  %2884 = bitcast %"class.sh::TIntermNode"** %2883 to <2 x i64>*
  %2885 = load <2 x i64>, <2 x i64>* %2884, align 8, !alias.scope !121
  %2886 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2877, i64 -1
  %2887 = bitcast %"class.sh::TIntermNode"** %2886 to <2 x i64>*
  store <2 x i64> %2881, <2 x i64>* %2887, align 8, !alias.scope !124, !noalias !121
  %2888 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2877, i64 -2
  %2889 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2888, i64 -1
  %2890 = bitcast %"class.sh::TIntermNode"** %2889 to <2 x i64>*
  store <2 x i64> %2885, <2 x i64>* %2890, align 8, !alias.scope !124, !noalias !121
  %2891 = sub nuw nsw i64 -4, %2873
  %2892 = sub nuw nsw i64 -4, %2873
  %2893 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2870, i64 %2891
  %2894 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2871, i64 %2892
  %2895 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2894, i64 -1
  %2896 = bitcast %"class.sh::TIntermNode"** %2895 to <2 x i64>*
  %2897 = load <2 x i64>, <2 x i64>* %2896, align 8, !alias.scope !121
  %2898 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2894, i64 -2
  %2899 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2898, i64 -1
  %2900 = bitcast %"class.sh::TIntermNode"** %2899 to <2 x i64>*
  %2901 = load <2 x i64>, <2 x i64>* %2900, align 8, !alias.scope !121
  %2902 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2893, i64 -1
  %2903 = bitcast %"class.sh::TIntermNode"** %2902 to <2 x i64>*
  store <2 x i64> %2897, <2 x i64>* %2903, align 8, !alias.scope !124, !noalias !121
  %2904 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2893, i64 -2
  %2905 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2904, i64 -1
  %2906 = bitcast %"class.sh::TIntermNode"** %2905 to <2 x i64>*
  store <2 x i64> %2901, <2 x i64>* %2906, align 8, !alias.scope !124, !noalias !121
  %2907 = add i64 %2873, 8
  %2908 = add i64 %2874, -2
  %2909 = icmp eq i64 %2908, 0
  br i1 %2909, label %2910, label %2872, !llvm.loop !126

2910:                                             ; preds = %2872
  %2911 = sub nuw nsw i64 -8, %2873
  br label %2912

2912:                                             ; preds = %2910, %2855
  %2913 = phi i64 [ 0, %2855 ], [ %2911, %2910 ]
  %2914 = icmp eq i64 %2864, 0
  br i1 %2914, label %2932, label %2915

2915:                                             ; preds = %2912
  %2916 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2825, i64 -1
  %2917 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2833, i64 -1
  %2918 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2916, i64 %2913
  %2919 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2917, i64 %2913
  %2920 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2919, i64 -1
  %2921 = bitcast %"class.sh::TIntermNode"** %2920 to <2 x i64>*
  %2922 = load <2 x i64>, <2 x i64>* %2921, align 8, !alias.scope !121
  %2923 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2919, i64 -2
  %2924 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2923, i64 -1
  %2925 = bitcast %"class.sh::TIntermNode"** %2924 to <2 x i64>*
  %2926 = load <2 x i64>, <2 x i64>* %2925, align 8, !alias.scope !121
  %2927 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2918, i64 -1
  %2928 = bitcast %"class.sh::TIntermNode"** %2927 to <2 x i64>*
  store <2 x i64> %2922, <2 x i64>* %2928, align 8, !alias.scope !124, !noalias !121
  %2929 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2918, i64 -2
  %2930 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2929, i64 -1
  %2931 = bitcast %"class.sh::TIntermNode"** %2930 to <2 x i64>*
  store <2 x i64> %2926, <2 x i64>* %2931, align 8, !alias.scope !124, !noalias !121
  br label %2932

2932:                                             ; preds = %2912, %2915
  %2933 = icmp eq i64 %2840, %2856
  br i1 %2933, label %3004, label %2934

2934:                                             ; preds = %2932, %2842, %2835
  %2935 = phi %"class.sh::TIntermNode"** [ %2825, %2842 ], [ %2825, %2835 ], [ %2858, %2932 ]
  %2936 = phi %"class.sh::TIntermNode"** [ %2833, %2842 ], [ %2833, %2835 ], [ %2860, %2932 ]
  %2937 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2936, i64 -1
  %2938 = ptrtoint %"class.sh::TIntermNode"** %2937 to i64
  %2939 = sub i64 %2938, %2832
  %2940 = lshr i64 %2939, 3
  %2941 = add nuw nsw i64 %2940, 1
  %2942 = and i64 %2941, 7
  %2943 = icmp eq i64 %2942, 0
  br i1 %2943, label %2955, label %2944

2944:                                             ; preds = %2934, %2944
  %2945 = phi %"class.sh::TIntermNode"** [ %2948, %2944 ], [ %2935, %2934 ]
  %2946 = phi %"class.sh::TIntermNode"** [ %2949, %2944 ], [ %2936, %2934 ]
  %2947 = phi i64 [ %2953, %2944 ], [ %2942, %2934 ]
  %2948 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2945, i64 -1
  %2949 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2946, i64 -1
  %2950 = bitcast %"class.sh::TIntermNode"** %2949 to i64*
  %2951 = load i64, i64* %2950, align 8
  %2952 = bitcast %"class.sh::TIntermNode"** %2948 to i64*
  store i64 %2951, i64* %2952, align 8
  %2953 = add i64 %2947, -1
  %2954 = icmp eq i64 %2953, 0
  br i1 %2954, label %2955, label %2944, !llvm.loop !127

2955:                                             ; preds = %2944, %2934
  %2956 = phi %"class.sh::TIntermNode"** [ undef, %2934 ], [ %2948, %2944 ]
  %2957 = phi %"class.sh::TIntermNode"** [ %2935, %2934 ], [ %2948, %2944 ]
  %2958 = phi %"class.sh::TIntermNode"** [ %2936, %2934 ], [ %2949, %2944 ]
  %2959 = icmp ult i64 %2939, 56
  br i1 %2959, label %3004, label %2960

2960:                                             ; preds = %2955, %2960
  %2961 = phi %"class.sh::TIntermNode"** [ %2998, %2960 ], [ %2957, %2955 ]
  %2962 = phi %"class.sh::TIntermNode"** [ %2999, %2960 ], [ %2958, %2955 ]
  %2963 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2961, i64 -1
  %2964 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2962, i64 -1
  %2965 = bitcast %"class.sh::TIntermNode"** %2964 to i64*
  %2966 = load i64, i64* %2965, align 8
  %2967 = bitcast %"class.sh::TIntermNode"** %2963 to i64*
  store i64 %2966, i64* %2967, align 8
  %2968 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2961, i64 -2
  %2969 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2962, i64 -2
  %2970 = bitcast %"class.sh::TIntermNode"** %2969 to i64*
  %2971 = load i64, i64* %2970, align 8
  %2972 = bitcast %"class.sh::TIntermNode"** %2968 to i64*
  store i64 %2971, i64* %2972, align 8
  %2973 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2961, i64 -3
  %2974 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2962, i64 -3
  %2975 = bitcast %"class.sh::TIntermNode"** %2974 to i64*
  %2976 = load i64, i64* %2975, align 8
  %2977 = bitcast %"class.sh::TIntermNode"** %2973 to i64*
  store i64 %2976, i64* %2977, align 8
  %2978 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2961, i64 -4
  %2979 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2962, i64 -4
  %2980 = bitcast %"class.sh::TIntermNode"** %2979 to i64*
  %2981 = load i64, i64* %2980, align 8
  %2982 = bitcast %"class.sh::TIntermNode"** %2978 to i64*
  store i64 %2981, i64* %2982, align 8
  %2983 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2961, i64 -5
  %2984 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2962, i64 -5
  %2985 = bitcast %"class.sh::TIntermNode"** %2984 to i64*
  %2986 = load i64, i64* %2985, align 8
  %2987 = bitcast %"class.sh::TIntermNode"** %2983 to i64*
  store i64 %2986, i64* %2987, align 8
  %2988 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2961, i64 -6
  %2989 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2962, i64 -6
  %2990 = bitcast %"class.sh::TIntermNode"** %2989 to i64*
  %2991 = load i64, i64* %2990, align 8
  %2992 = bitcast %"class.sh::TIntermNode"** %2988 to i64*
  store i64 %2991, i64* %2992, align 8
  %2993 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2961, i64 -7
  %2994 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2962, i64 -7
  %2995 = bitcast %"class.sh::TIntermNode"** %2994 to i64*
  %2996 = load i64, i64* %2995, align 8
  %2997 = bitcast %"class.sh::TIntermNode"** %2993 to i64*
  store i64 %2996, i64* %2997, align 8
  %2998 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2961, i64 -8
  %2999 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2962, i64 -8
  %3000 = bitcast %"class.sh::TIntermNode"** %2999 to i64*
  %3001 = load i64, i64* %3000, align 8
  %3002 = bitcast %"class.sh::TIntermNode"** %2998 to i64*
  store i64 %3001, i64* %3002, align 8
  %3003 = icmp eq %"class.sh::TIntermNode"** %2999, %2831
  br i1 %3003, label %3004, label %2960, !llvm.loop !128

3004:                                             ; preds = %2955, %2960, %2932, %2822
  %3005 = phi %"class.sh::TIntermNode"** [ %2825, %2822 ], [ %2858, %2932 ], [ %2956, %2955 ], [ %2998, %2960 ]
  %3006 = ptrtoint %"class.sh::TIntermNode"** %3005 to i64
  store i64 %3006, i64* %2798, align 8
  store i64 %2830, i64* %2797, align 8
  store i64 %2827, i64* %2807, align 8
  %3007 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate18CreateFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* dereferenceable(80) %226, %"class.sh::TVector.31"* nonnull %14) #8
  %3008 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3009 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %3007, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3010 = bitcast %"struct.sh::TSourceLoc"* %3009 to i8*
  %3011 = bitcast %"struct.sh::TSourceLoc"* %3008 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3010, i8* align 4 %3011, i64 16, i1 false) #8
  %3012 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2600, align 8
  %3013 = icmp eq %"class.sh::TIntermNode"** %3012, null
  br i1 %3013, label %3017, label %3014

3014:                                             ; preds = %3004
  %3015 = ptrtoint %"class.sh::TIntermNode"** %3012 to i64
  %3016 = bitcast %"class.sh::TIntermNode"*** %2603 to i64*
  store i64 %3015, i64* %3016, align 8
  br label %3017

3017:                                             ; preds = %3004, %3014
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2599) #8
  %3018 = getelementptr inbounds %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser", %"class.sh::(anonymous namespace)::RemoveDynamicIndexingTraverser"* %0, i64 0, i32 0, i32 0
  %3019 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %3007, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %3018, %"class.sh::TIntermNode"* %3019, i32 1) #8
  br label %3020

3020:                                             ; preds = %2380, %3017
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #8
  br label %3022

3021:                                             ; preds = %244, %234
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #8
  br label %3025

3022:                                             ; preds = %3020, %35, %50, %27
  %3023 = load i8, i8* %24, align 8, !range !2
  %3024 = icmp eq i8 %3023, 0
  br label %3025

3025:                                             ; preds = %3021, %3, %3022
  %3026 = phi i1 [ %3024, %3022 ], [ true, %3021 ], [ false, %3 ]
  ret i1 %3026
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2sh24TLValueTrackingTraverser14traverseBinaryEPNS_13TIntermBinaryE(%"class.sh::TLValueTrackingTraverser"*, %"class.sh::TIntermBinary"*) unnamed_addr #2

declare void @_ZN2sh24TLValueTrackingTraverser13traverseUnaryEPNS_12TIntermUnaryE(%"class.sh::TLValueTrackingTraverser"*, %"class.sh::TIntermUnary"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #2

declare void @_ZN2sh24TLValueTrackingTraverser17traverseAggregateEPNS_16TIntermAggregateE(%"class.sh::TLValueTrackingTraverser"*, %"class.sh::TIntermAggregate"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.sh::TVariable"* @_ZN2sh19DeclareTempVariableEPNS_12TSymbolTableEPNS_12TIntermTypedENS_10TQualifierEPPNS_18TIntermDeclarationE(%"class.sh::TSymbolTable"*, %"class.sh::TIntermTyped"*, i32, %"class.sh::TIntermDeclaration"**) local_unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser28insertStatementInParentBlockEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermNode"*) local_unnamed_addr #2

declare %"class.sh::TIntermSymbol"* @_ZN2sh20CreateTempSymbolNodeEPKNS_9TVariableE(%"class.sh::TVariable"*) local_unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser26queueReplacementWithParentEPNS_11TIntermNodeES2_S2_NS0_12OriginalNodeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, i32) local_unnamed_addr #2

declare void @_ZN2sh22PerformanceDiagnostics7warningERKNS_10TSourceLocEPKcS5_(%"class.sh::PerformanceDiagnostics"*, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2sh12_GLOBAL__N_120GetIndexFunctionNameERKNS_5TTypeEb(%"class.std::__1::basic_string"* noalias sret, %"class.sh::TType"* nocapture readonly dereferenceable(184), i1 zeroext) unnamed_addr #0 {
  %4 = alloca %"class.sh::TInfoSinkBase", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast %"class.sh::TInfoSinkBase"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %4, i64 0, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %4, i64 0, i32 1, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 48, i1 false) #8
  %13 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %4, i64 0, i32 0
  %14 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0)) #8
  br i1 %2, label %15, label %17

15:                                               ; preds = %3
  %16 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #8
  br label %17

17:                                               ; preds = %15, %3
  %18 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1, i64 0, i32 8
  %19 = load i8, i8* %18, align 8
  %20 = icmp ugt i8 %19, 1
  br i1 %20, label %21, label %37

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1, i64 0, i32 9
  %23 = load i8, i8* %22, align 1
  %24 = icmp ugt i8 %23, 1
  br i1 %24, label %25, label %37

25:                                               ; preds = %21
  %26 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0)) #8
  %27 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #8
  %28 = load i8, i8* %18, align 8
  %29 = zext i8 %28 to i32
  store i32 %29, i32* %5, align 4
  %30 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIiEERS0_RKT_(%"class.sh::TInfoSinkBase"* nonnull %4, i32* nonnull dereferenceable(4) %5)
  %31 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %30, i64 0, i32 0
  %32 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #8
  %33 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #8
  %34 = load i8, i8* %22, align 1
  %35 = zext i8 %34 to i32
  store i32 %35, i32* %6, align 4
  %36 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIiEERS0_RKT_(%"class.sh::TInfoSinkBase"* %30, i32* nonnull dereferenceable(4) %6)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #8
  br label %57

37:                                               ; preds = %17, %21
  %38 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, -1
  %41 = icmp ult i32 %40, 5
  br i1 %41, label %42, label %52

42:                                               ; preds = %37
  %43 = trunc i32 %40 to i8
  %44 = lshr i8 29, %43
  %45 = and i8 %44, 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = sext i32 %40 to i64
  %49 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table._ZN2sh12_GLOBAL__N_120GetIndexFunctionNameERKNS_5TTypeEb, i64 0, i64 %48
  %50 = load i8*, i8** %49, align 8
  %51 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %13, i8* %50) #8
  br label %52

52:                                               ; preds = %42, %37, %47
  %53 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #8
  %54 = load i8, i8* %18, align 8
  %55 = zext i8 %54 to i32
  store i32 %55, i32* %7, align 4
  %56 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIiEERS0_RKT_(%"class.sh::TInfoSinkBase"* nonnull %4, i32* nonnull dereferenceable(4) %7)
  br label %57

57:                                               ; preds = %52, %25
  %58 = phi i8* [ %53, %52 ], [ %27, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #8
  %59 = bitcast %"class.sh::TInfoSinkBase"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %57
  %64 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %8, i64 24, i1 false) #8
  br label %68

65:                                               ; preds = %57
  %66 = load i8*, i8** %9, align 8
  %67 = load i64, i64* %10, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %66, i64 %67) #8
  br label %68

68:                                               ; preds = %63, %65
  %69 = load i32*, i32** %11, align 8
  %70 = icmp eq i32* %69, null
  br i1 %70, label %75, label %71

71:                                               ; preds = %68
  %72 = ptrtoint i32* %69 to i64
  %73 = bitcast i32** %12 to i64*
  store i64 %72, i64* %73, align 8
  %74 = bitcast i32* %69 to i8*
  call void @_ZdlPv(i8* %74) #10
  br label %75

75:                                               ; preds = %71, %68
  %76 = load i8, i8* %60, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %79) #10
  br label %80

80:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #8
  ret void
}

declare void @_ZN2sh9TFunctionC1EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeEPKNS_5TTypeEb(%"class.sh::TFunction"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), i8 zeroext, %"class.sh::TType"*, i1 zeroext) unnamed_addr #2

declare void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"*, %"class.sh::TVariable"*) local_unnamed_addr #2

declare void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TType"*, i8 zeroext, i8 zeroext) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser29insertStatementsInParentBlockERKNS_7TVectorIPNS_11TIntermNodeEEES6_(%"class.sh::TIntermTraverser"*, %"class.sh::TVector.31"* dereferenceable(24), %"class.sh::TVector.31"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermNode"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIiEERS0_RKT_(%"class.sh::TInfoSinkBase"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::locale", align 8
  %6 = alloca %"class.std::__1::basic_ostringstream", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %8) #8
  %9 = bitcast %"class.std::__1::locale"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_stringbuf"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 256, i1 false) #8, !alias.scope !129
  %12 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 2, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %12, align 8, !alias.scope !129
  %14 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8, !noalias !129
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i64*
  store i64 %15, i64* %16, align 8, !alias.scope !129
  %17 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8, !noalias !129
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8**
  %19 = inttoptr i64 %15 to i8*
  %20 = getelementptr i8, i8* %19, i64 -24
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !129
  %23 = getelementptr inbounds i8, i8* %8, i64 %22
  %24 = bitcast i8* %23 to i64*
  store i64 %17, i64* %24, align 8, !alias.scope !129
  %25 = load i8*, i8** %18, align 8, !alias.scope !129
  %26 = getelementptr i8, i8* %25, i64 -24
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !129
  %29 = getelementptr inbounds i8, i8* %8, i64 %28
  %30 = bitcast i8* %29 to %"class.std::__1::ios_base"*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %30, i8* %11) #8
  %31 = getelementptr inbounds i8, i8* %29, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8, !alias.scope !129
  %33 = getelementptr inbounds i8, i8* %29, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8, !alias.scope !129
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %13, align 8, !alias.scope !129
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %12, align 8, !alias.scope !129
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %14) #8
  %35 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8, !alias.scope !129
  %36 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 1, i32 1
  %37 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 1, i32 3
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false) #8, !alias.scope !129
  store i32 16, i32* %37, align 8, !alias.scope !129
  %39 = load i8*, i8** %18, align 8, !alias.scope !129
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i8, i8* %8, i64 %42
  %44 = call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() #8
  %45 = bitcast %"class.std::__1::locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46)
  %47 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %5, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %47, align 8, !alias.scope !132
  %48 = bitcast i8* %43 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %5, %"class.std::__1::ios_base"* %48) #8
  call void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* nonnull sret %3, %"class.std::__1::ios_base"* %48, %"class.std::__1::locale"* dereferenceable(8) %44) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #8
  %49 = getelementptr inbounds i8, i8* %43, i64 40
  %50 = bitcast i8* %49 to %"class.std::__1::basic_streambuf"**
  %51 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %50, align 8, !noalias !132
  %52 = icmp eq %"class.std::__1::basic_streambuf"* %51, null
  br i1 %52, label %61, label %53

53:                                               ; preds = %2
  %54 = bitcast %"class.std::__1::basic_streambuf"* %51 to void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)***
  %55 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)**, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*** %54, align 8, !noalias !135
  %56 = getelementptr inbounds void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %55, i64 2
  %57 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %56, align 8, !noalias !135
  call void %57(%"class.std::__1::basic_streambuf"* nonnull %51, %"class.std::__1::locale"* dereferenceable(8) %44) #8, !noalias !135
  %58 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %4, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %58, align 8, !alias.scope !135, !noalias !132
  %59 = getelementptr inbounds %"class.std::__1::basic_streambuf", %"class.std::__1::basic_streambuf"* %51, i64 0, i32 1
  call void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale"* dereferenceable(8) %59) #8
  %60 = call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"* %59, %"class.std::__1::locale"* dereferenceable(8) %44) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  br label %61

61:                                               ; preds = %2, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46)
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  %62 = bitcast %"class.std::__1::basic_ostringstream"* %6 to %"class.std::__1::basic_ostream"*
  %63 = load i32, i32* %1, align 4
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %62, i32 %63) #8
  %65 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %0, i64 0, i32 0
  %66 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #8
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_stringbuf"* %10) #8
  %67 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = zext i8 %69 to i64
  %76 = select i1 %70, i8* %72, i8* %66
  %77 = select i1 %70, i64 %74, i64 %75
  %78 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %65, i8* %76, i64 %77) #8
  %79 = load i8, i8* %68, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %61
  %82 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %82) #10
  br label %83

83:                                               ; preds = %61, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #8
  %84 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %84, i64* %16, align 8
  %85 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %86 = inttoptr i64 %84 to i8*
  %87 = getelementptr i8, i8* %86, i64 -24
  %88 = bitcast i8* %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds i8, i8* %8, i64 %89
  %91 = bitcast i8* %90 to i64*
  store i64 %85, i64* %91, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %92 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %83
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #10
  br label %99

99:                                               ; preds = %83, %96
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %14) #8
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %62, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #8
  %100 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 2
  %101 = bitcast %"class.std::__1::basic_ios.base"* %100 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %101) #8
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %8) #8
  ret %"class.sh::TInfoSinkBase"* %0
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #2

declare i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.166"*, %"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.166", %"class.std::__1::__tree.166"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %129, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1, i64 0, i32 8
  %11 = load i8, i8* %10, align 8
  %12 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1, i64 0, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1, i64 0, i32 10, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1, i64 0, i32 10, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1, i64 0, i32 13
  %19 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %18, align 8
  %20 = icmp eq i64 %15, 0
  br label %21

21:                                               ; preds = %67, %7
  %22 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %74, %67 ]
  %23 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %75, %67 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, %9
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = icmp slt i32 %25, %9
  br label %67

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 8
  %31 = load i8, i8* %30, align 8
  %32 = icmp eq i8 %31, %11
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = icmp ult i8 %31, %11
  br label %67

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 9
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, %13
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = icmp ult i8 %37, %13
  br label %67

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 10, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, %15
  br i1 %44, label %45, label %49

45:                                               ; preds = %41
  br i1 %20, label %63, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 10, i32 0
  %48 = load i32*, i32** %47, align 8
  br label %53

49:                                               ; preds = %41
  %50 = icmp ult i64 %43, %15
  br label %67

51:                                               ; preds = %53
  %52 = icmp eq i64 %60, %15
  br i1 %52, label %63, label %53

53:                                               ; preds = %51, %46
  %54 = phi i64 [ 0, %46 ], [ %60, %51 ]
  %55 = getelementptr inbounds i32, i32* %48, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds i32, i32* %17, i64 %54
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %56, %58
  %60 = add nuw i64 %54, 1
  br i1 %59, label %51, label %61

61:                                               ; preds = %53
  %62 = icmp ult i32 %56, %58
  br label %67

63:                                               ; preds = %51, %45
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 13
  %65 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %64, align 8
  %66 = icmp ult %"class.sh::TStructure"* %65, %19
  br label %67

67:                                               ; preds = %63, %61, %49, %39, %33, %27
  %68 = phi i1 [ %66, %63 ], [ %28, %27 ], [ %34, %33 ], [ %40, %39 ], [ %50, %49 ], [ %62, %61 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %70 = bitcast %"class.std::__1::__tree_node_base"** %69 to %"class.std::__1::__tree_node"**
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::__tree_node"* %23 to %"class.std::__1::__tree_node"**
  %73 = select i1 %68, %"class.std::__1::__tree_node"** %70, %"class.std::__1::__tree_node"** %72
  %74 = select i1 %68, %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"* %71
  %75 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %73, align 8
  %76 = icmp eq %"class.std::__1::__tree_node"* %75, null
  br i1 %76, label %77, label %21

77:                                               ; preds = %67
  %78 = icmp eq %"class.std::__1::__tree_end_node"* %74, %3
  br i1 %78, label %129, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 4
  %81 = bitcast %"class.std::__1::__tree_end_node"* %80 to %"struct.std::__1::__value_type"*
  %82 = bitcast %"class.std::__1::__tree_end_node"* %80 to i32*
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %9, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %79
  %86 = icmp slt i32 %9, %83
  br i1 %86, label %129, label %130

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 18
  %89 = bitcast %"class.std::__1::__tree_end_node"* %88 to i8*
  %90 = load i8, i8* %89, align 8
  %91 = icmp eq i8 %11, %90
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  %93 = icmp ult i8 %11, %90
  br i1 %93, label %129, label %130

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %81, i64 0, i32 0, i32 0, i32 9
  %96 = load i8, i8* %95, align 1
  %97 = icmp eq i8 %13, %96
  br i1 %97, label %100, label %98

98:                                               ; preds = %94
  %99 = icmp ult i8 %13, %96
  br i1 %99, label %129, label %130

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 20
  %102 = bitcast %"class.std::__1::__tree_end_node"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %15, %103
  br i1 %104, label %105, label %110

105:                                              ; preds = %100
  br i1 %20, label %122, label %106

106:                                              ; preds = %105
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 19
  %108 = bitcast %"class.std::__1::__tree_end_node"* %107 to i32**
  %109 = load i32*, i32** %108, align 8
  br label %114

110:                                              ; preds = %100
  %111 = icmp ult i64 %15, %103
  br i1 %111, label %129, label %130

112:                                              ; preds = %114
  %113 = icmp eq i64 %121, %15
  br i1 %113, label %122, label %114

114:                                              ; preds = %112, %106
  %115 = phi i64 [ 0, %106 ], [ %121, %112 ]
  %116 = getelementptr inbounds i32, i32* %17, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds i32, i32* %109, i64 %115
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %117, %119
  %121 = add nuw i64 %115, 1
  br i1 %120, label %112, label %127

122:                                              ; preds = %112, %105
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 23
  %124 = bitcast %"class.std::__1::__tree_end_node"* %123 to %"class.sh::TStructure"**
  %125 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %124, align 8
  %126 = icmp ult %"class.sh::TStructure"* %19, %125
  br i1 %126, label %129, label %130

127:                                              ; preds = %114
  %128 = icmp ult i32 %117, %119
  br i1 %128, label %129, label %130

129:                                              ; preds = %77, %2, %110, %98, %92, %85, %122, %127
  br label %130

130:                                              ; preds = %127, %122, %85, %92, %98, %110, %129
  %131 = phi %"class.std::__1::__tree_end_node"* [ %3, %129 ], [ %74, %110 ], [ %74, %98 ], [ %74, %92 ], [ %74, %85 ], [ %74, %122 ], [ %74, %127 ]
  ret %"class.std::__1::__tree_end_node"* %131
}

declare void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"*, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #2

declare void @_ZN2sh5TType14setPrimarySizeEh(%"class.sh::TType"*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"*, %"class.sh::TType"* dereferenceable(184)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISI_EERKT_(%"class.std::__1::__tree.166"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.166", %"class.std::__1::__tree.166"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %124, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.166", %"class.std::__1::__tree.166"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 8
  %13 = load i8, i8* %12, align 8
  %14 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 9
  %15 = load i8, i8* %14, align 1
  %16 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 10, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  %19 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 10, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 13
  %22 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %21, align 8
  br label %23

23:                                               ; preds = %8, %120
  %24 = phi %"class.std::__1::__tree_node"* [ %123, %120 ], [ %6, %8 ]
  %25 = phi %"class.std::__1::__tree_node_base"** [ %122, %120 ], [ %9, %8 ]
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %11, %27
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = icmp slt i32 %11, %27
  br i1 %30, label %69, label %75

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 8
  %33 = load i8, i8* %32, align 8
  %34 = icmp eq i8 %13, %33
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = icmp ult i8 %13, %33
  br i1 %36, label %69, label %78

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 9
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %15, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = icmp ult i8 %15, %39
  br i1 %42, label %69, label %80

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 10, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %17, %45
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  br i1 %18, label %63, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 10, i32 0
  %50 = load i32*, i32** %49, align 8
  br label %55

51:                                               ; preds = %43
  %52 = icmp ult i64 %17, %45
  br i1 %52, label %69, label %80

53:                                               ; preds = %55
  %54 = icmp eq i64 %62, %17
  br i1 %54, label %63, label %55

55:                                               ; preds = %53, %48
  %56 = phi i64 [ 0, %48 ], [ %62, %53 ]
  %57 = getelementptr inbounds i32, i32* %20, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds i32, i32* %50, i64 %56
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  %62 = add nuw i64 %56, 1
  br i1 %61, label %53, label %67

63:                                               ; preds = %53, %47
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 13
  %65 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %64, align 8
  %66 = icmp ult %"class.sh::TStructure"* %22, %65
  br i1 %66, label %69, label %77

67:                                               ; preds = %55
  %68 = icmp ult i32 %58, %60
  br i1 %68, label %69, label %77

69:                                               ; preds = %51, %41, %35, %29, %63, %67
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, null
  br i1 %72, label %73, label %120

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %126

75:                                               ; preds = %29
  %76 = icmp slt i32 %27, %11
  br i1 %76, label %112, label %118

77:                                               ; preds = %67, %63
  br i1 %34, label %80, label %78

78:                                               ; preds = %35, %77
  %79 = icmp ult i8 %33, %13
  br i1 %79, label %112, label %118

80:                                               ; preds = %51, %41, %77
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 9
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, %15
  br i1 %83, label %86, label %84

84:                                               ; preds = %80
  %85 = icmp ult i8 %82, %15
  br i1 %85, label %112, label %118

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 10, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, %17
  br i1 %89, label %90, label %94

90:                                               ; preds = %86
  br i1 %18, label %106, label %91

91:                                               ; preds = %90
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 10, i32 0
  %93 = load i32*, i32** %92, align 8
  br label %98

94:                                               ; preds = %86
  %95 = icmp ult i64 %88, %17
  br i1 %95, label %112, label %118

96:                                               ; preds = %98
  %97 = icmp eq i64 %105, %17
  br i1 %97, label %106, label %98

98:                                               ; preds = %96, %91
  %99 = phi i64 [ 0, %91 ], [ %105, %96 ]
  %100 = getelementptr inbounds i32, i32* %93, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds i32, i32* %20, i64 %99
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %101, %103
  %105 = add nuw i64 %99, 1
  br i1 %104, label %96, label %110

106:                                              ; preds = %96, %90
  %107 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 13
  %108 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %107, align 8
  %109 = icmp ult %"class.sh::TStructure"* %108, %22
  br i1 %109, label %112, label %118

110:                                              ; preds = %98
  %111 = icmp ult i32 %101, %103
  br i1 %111, label %112, label %118

112:                                              ; preds = %94, %84, %78, %75, %106, %110
  %113 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 1
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, null
  br i1 %115, label %116, label %120

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %117, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %126

118:                                              ; preds = %94, %84, %78, %75, %106, %110
  %119 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %126

120:                                              ; preds = %112, %69
  %121 = phi %"class.std::__1::__tree_node_base"* [ %71, %69 ], [ %114, %112 ]
  %122 = phi %"class.std::__1::__tree_node_base"** [ %70, %69 ], [ %113, %112 ]
  %123 = bitcast %"class.std::__1::__tree_node_base"* %121 to %"class.std::__1::__tree_node"*
  br label %23

124:                                              ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %125 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %126

126:                                              ; preds = %124, %118, %116, %73
  %127 = phi %"class.std::__1::__tree_node_base"** [ %70, %73 ], [ %113, %116 ], [ %25, %118 ], [ %125, %124 ]
  ret %"class.std::__1::__tree_node_base"** %127
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate17CreateConstructorERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TType"* dereferenceable(184), %"class.sh::TVector.31"*) local_unnamed_addr #2

declare void @_ZN2sh5TTypeC1ENS_10TBasicTypeEhh(%"class.sh::TType"*, i32, i8 zeroext, i8 zeroext) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate18CreateFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* dereferenceable(80), %"class.sh::TVector.31"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.sh::TIntermFunctionDefinition"* @_ZN2sh12_GLOBAL__N_126GetIndexFunctionDefinitionERKNS_5TTypeEbRKNS_9TFunctionEPNS_12TSymbolTableE(%"class.sh::TType"* nocapture readonly dereferenceable(184), i1 zeroext, %"class.sh::TFunction"* dereferenceable(80)) unnamed_addr #0 {
  %4 = alloca %"class.sh::TType", align 8
  %5 = alloca %"class.sh::TType", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %0, i64 0, i32 8
  %8 = load i8, i8* %7, align 8
  %9 = zext i8 %8 to i32
  %10 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN2sh12_GLOBAL__N_120GetIndexFunctionNameERKNS_5TTypeEb(%"class.std::__1::basic_string"* nonnull sret %6, %"class.sh::TType"* dereferenceable(184) %0, i1 zeroext %1)
  %13 = call %"class.sh::TIntermFunctionPrototype"* @_ZN2sh35CreateInternalFunctionPrototypeNodeERKNS_9TFunctionE(%"class.sh::TFunction"* dereferenceable(80) %2) #8
  %14 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %15 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %14, i64 32) #8
  %16 = bitcast i8* %15 to %"class.sh::TIntermSymbol"*
  %17 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %2, i64 0, i32 3
  %18 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %17, align 8
  %19 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %18, align 8
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %16, %"class.sh::TVariable"* %19) #8
  %20 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %21 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %20, i64 32) #8
  %22 = bitcast i8* %21 to %"class.sh::TIntermSymbol"*
  %23 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %17, align 8
  %24 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %23, i64 1
  %25 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %24, align 8
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %22, %"class.sh::TVariable"* %25) #8
  br i1 %1, label %26, label %33

26:                                               ; preds = %3
  %27 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %28 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %27, i64 32) #8
  %29 = bitcast i8* %28 to %"class.sh::TIntermSymbol"*
  %30 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %17, align 8
  %31 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %30, i64 2
  %32 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %31, align 8
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %29, %"class.sh::TVariable"* %32) #8
  br label %33

33:                                               ; preds = %26, %3
  %34 = phi %"class.sh::TIntermSymbol"* [ %29, %26 ], [ null, %3 ]
  %35 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %36 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %35, i64 64) #8
  %37 = bitcast i8* %36 to %"class.sh::TIntermBlock"*
  %38 = bitcast i8* %36 to i32 (...)***
  %39 = getelementptr inbounds i8, i8* %36, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #8
  %40 = getelementptr inbounds i8, i8* %36, i64 24
  %41 = bitcast i8* %40 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds i8, i8* %36, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 25, i1 false) #8
  %43 = icmp eq i8 %8, 0
  %44 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %45 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %44, i64 32) #8
  br i1 %43, label %46, label %48

46:                                               ; preds = %33
  %47 = bitcast i8* %36 to %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)***
  br label %53

48:                                               ; preds = %33
  %49 = bitcast %"class.sh::TType"* %4 to i8*
  %50 = bitcast i8* %36 to %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)***
  %51 = bitcast i8* %15 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %52 = bitcast %"class.sh::TIntermSymbol"* %34 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  br label %830

53:                                               ; preds = %1803, %46
  %54 = phi %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*** [ %47, %46 ], [ %50, %1803 ]
  %55 = phi i8* [ %45, %46 ], [ %1806, %1803 ]
  %56 = bitcast i8* %55 to i32 (...)***
  %57 = getelementptr inbounds i8, i8* %55, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN2sh11TIntermCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %58 = getelementptr inbounds i8, i8* %55, i64 24
  %59 = bitcast i8* %58 to %"class.sh::TIntermTyped"**
  store %"class.sh::TIntermTyped"* null, %"class.sh::TIntermTyped"** %59, align 8
  %60 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*** %54, align 8
  %61 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %60, i64 27
  %62 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %61, align 8
  %63 = call %"class.sh::TVector.31"* %62(%"class.sh::TIntermBlock"* %37) #8
  %64 = ptrtoint i8* %55 to i64
  %65 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %63, i64 0, i32 0, i32 0, i32 1
  %66 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %65, align 8
  %67 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %63, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %68 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %67, align 8
  %69 = icmp ult %"class.sh::TIntermNode"** %66, %68
  %70 = ptrtoint %"class.sh::TIntermNode"** %68 to i64
  br i1 %69, label %71, label %76

71:                                               ; preds = %53
  %72 = bitcast %"class.sh::TIntermNode"** %66 to i64*
  store i64 %64, i64* %72, align 8
  %73 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %66, i64 1
  %74 = ptrtoint %"class.sh::TIntermNode"** %73 to i64
  %75 = bitcast %"class.sh::TIntermNode"*** %65 to i64*
  store i64 %74, i64* %75, align 8
  br label %289

76:                                               ; preds = %53
  %77 = ptrtoint %"class.sh::TIntermNode"** %66 to i64
  %78 = bitcast %"class.sh::TIntermNode"*** %65 to i64*
  %79 = bitcast %"class.sh::TVector.31"* %63 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %77, %80
  %82 = ashr exact i64 %81, 3
  %83 = add nsw i64 %82, 1
  %84 = icmp ugt i64 %83, 2305843009213693951
  br i1 %84, label %85, label %87

85:                                               ; preds = %76
  %86 = bitcast %"class.sh::TVector.31"* %63 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %86) #9
  unreachable

87:                                               ; preds = %76
  %88 = bitcast %"class.sh::TIntermNode"*** %67 to i64*
  %89 = sub i64 %70, %80
  %90 = ashr exact i64 %89, 3
  %91 = icmp ult i64 %90, 1152921504606846975
  br i1 %91, label %92, label %97

92:                                               ; preds = %87
  %93 = ashr exact i64 %89, 2
  %94 = icmp ult i64 %93, %83
  %95 = select i1 %94, i64 %83, i64 %93
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %92, %87
  %98 = phi i64 [ %95, %92 ], [ 2305843009213693951, %87 ]
  %99 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %100 = shl i64 %98, 3
  %101 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %99, i64 %100) #8
  %102 = bitcast i8* %101 to %"class.sh::TIntermNode"**
  br label %103

103:                                              ; preds = %97, %92
  %104 = phi i64 [ %98, %97 ], [ 0, %92 ]
  %105 = phi %"class.sh::TIntermNode"** [ %102, %97 ], [ null, %92 ]
  %106 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %105, i64 %82
  %107 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %105, i64 %104
  %108 = ptrtoint %"class.sh::TIntermNode"** %107 to i64
  %109 = bitcast %"class.sh::TIntermNode"** %106 to i64*
  store i64 %64, i64* %109, align 8
  %110 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %106, i64 1
  %111 = ptrtoint %"class.sh::TIntermNode"** %110 to i64
  %112 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %63, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %112, align 8
  %114 = ptrtoint %"class.sh::TIntermNode"** %113 to i64
  %115 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %65, align 8
  %116 = icmp eq %"class.sh::TIntermNode"** %115, %113
  br i1 %116, label %286, label %117

117:                                              ; preds = %103
  %118 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %115, i64 -1
  %119 = ptrtoint %"class.sh::TIntermNode"** %118 to i64
  %120 = sub i64 %119, %114
  %121 = lshr i64 %120, 3
  %122 = add nuw nsw i64 %121, 1
  %123 = icmp ult i64 %122, 4
  br i1 %123, label %216, label %124

124:                                              ; preds = %117
  %125 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %115, i64 -1
  %126 = ptrtoint %"class.sh::TIntermNode"** %125 to i64
  %127 = sub i64 %126, %114
  %128 = lshr i64 %127, 3
  %129 = xor i64 %128, -1
  %130 = add nsw i64 %82, %129
  %131 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %105, i64 %130
  %132 = xor i64 %128, -1
  %133 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %115, i64 %132
  %134 = icmp ult %"class.sh::TIntermNode"** %131, %115
  %135 = icmp ult %"class.sh::TIntermNode"** %133, %106
  %136 = and i1 %134, %135
  br i1 %136, label %216, label %137

137:                                              ; preds = %124
  %138 = and i64 %122, 4611686018427387900
  %139 = sub nsw i64 0, %138
  %140 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %106, i64 %139
  %141 = sub nsw i64 0, %138
  %142 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %115, i64 %141
  %143 = add nsw i64 %138, -4
  %144 = lshr exact i64 %143, 2
  %145 = add nuw nsw i64 %144, 1
  %146 = and i64 %145, 1
  %147 = icmp eq i64 %143, 0
  br i1 %147, label %192, label %148

148:                                              ; preds = %137
  %149 = sub nuw nsw i64 %145, %146
  %150 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %106, i64 -1
  %151 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %115, i64 -1
  %152 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %106, i64 -1
  %153 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %115, i64 -1
  br label %154

154:                                              ; preds = %154, %148
  %155 = phi i64 [ 0, %148 ], [ %189, %154 ]
  %156 = phi i64 [ %149, %148 ], [ %190, %154 ]
  %157 = sub i64 0, %155
  %158 = sub i64 0, %155
  %159 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %150, i64 %157
  %160 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %151, i64 %158
  %161 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %160, i64 -1
  %162 = bitcast %"class.sh::TIntermNode"** %161 to <2 x i64>*
  %163 = load <2 x i64>, <2 x i64>* %162, align 8, !alias.scope !138
  %164 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %160, i64 -2
  %165 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %164, i64 -1
  %166 = bitcast %"class.sh::TIntermNode"** %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !138
  %168 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %159, i64 -1
  %169 = bitcast %"class.sh::TIntermNode"** %168 to <2 x i64>*
  store <2 x i64> %163, <2 x i64>* %169, align 8, !alias.scope !141, !noalias !138
  %170 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %159, i64 -2
  %171 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %170, i64 -1
  %172 = bitcast %"class.sh::TIntermNode"** %171 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %172, align 8, !alias.scope !141, !noalias !138
  %173 = sub nuw nsw i64 -4, %155
  %174 = sub nuw nsw i64 -4, %155
  %175 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %152, i64 %173
  %176 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %153, i64 %174
  %177 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %176, i64 -1
  %178 = bitcast %"class.sh::TIntermNode"** %177 to <2 x i64>*
  %179 = load <2 x i64>, <2 x i64>* %178, align 8, !alias.scope !138
  %180 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %176, i64 -2
  %181 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %180, i64 -1
  %182 = bitcast %"class.sh::TIntermNode"** %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8, !alias.scope !138
  %184 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %175, i64 -1
  %185 = bitcast %"class.sh::TIntermNode"** %184 to <2 x i64>*
  store <2 x i64> %179, <2 x i64>* %185, align 8, !alias.scope !141, !noalias !138
  %186 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %175, i64 -2
  %187 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %186, i64 -1
  %188 = bitcast %"class.sh::TIntermNode"** %187 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %188, align 8, !alias.scope !141, !noalias !138
  %189 = add i64 %155, 8
  %190 = add i64 %156, -2
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %154, !llvm.loop !143

192:                                              ; preds = %154, %137
  %193 = phi i64 [ 0, %137 ], [ %189, %154 ]
  %194 = icmp eq i64 %146, 0
  br i1 %194, label %214, label %195

195:                                              ; preds = %192
  %196 = sub i64 0, %193
  %197 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %106, i64 -1
  %198 = sub i64 0, %193
  %199 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %115, i64 -1
  %200 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %197, i64 %196
  %201 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %199, i64 %198
  %202 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %201, i64 -1
  %203 = bitcast %"class.sh::TIntermNode"** %202 to <2 x i64>*
  %204 = load <2 x i64>, <2 x i64>* %203, align 8, !alias.scope !138
  %205 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %201, i64 -2
  %206 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %205, i64 -1
  %207 = bitcast %"class.sh::TIntermNode"** %206 to <2 x i64>*
  %208 = load <2 x i64>, <2 x i64>* %207, align 8, !alias.scope !138
  %209 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %200, i64 -1
  %210 = bitcast %"class.sh::TIntermNode"** %209 to <2 x i64>*
  store <2 x i64> %204, <2 x i64>* %210, align 8, !alias.scope !141, !noalias !138
  %211 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %200, i64 -2
  %212 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %211, i64 -1
  %213 = bitcast %"class.sh::TIntermNode"** %212 to <2 x i64>*
  store <2 x i64> %208, <2 x i64>* %213, align 8, !alias.scope !141, !noalias !138
  br label %214

214:                                              ; preds = %192, %195
  %215 = icmp eq i64 %122, %138
  br i1 %215, label %286, label %216

216:                                              ; preds = %214, %124, %117
  %217 = phi %"class.sh::TIntermNode"** [ %106, %124 ], [ %106, %117 ], [ %140, %214 ]
  %218 = phi %"class.sh::TIntermNode"** [ %115, %124 ], [ %115, %117 ], [ %142, %214 ]
  %219 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %218, i64 -1
  %220 = ptrtoint %"class.sh::TIntermNode"** %219 to i64
  %221 = sub i64 %220, %114
  %222 = lshr i64 %221, 3
  %223 = add nuw nsw i64 %222, 1
  %224 = and i64 %223, 7
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %237, label %226

226:                                              ; preds = %216, %226
  %227 = phi %"class.sh::TIntermNode"** [ %230, %226 ], [ %217, %216 ]
  %228 = phi %"class.sh::TIntermNode"** [ %231, %226 ], [ %218, %216 ]
  %229 = phi i64 [ %235, %226 ], [ %224, %216 ]
  %230 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %227, i64 -1
  %231 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %228, i64 -1
  %232 = bitcast %"class.sh::TIntermNode"** %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = bitcast %"class.sh::TIntermNode"** %230 to i64*
  store i64 %233, i64* %234, align 8
  %235 = add i64 %229, -1
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %226, !llvm.loop !144

237:                                              ; preds = %226, %216
  %238 = phi %"class.sh::TIntermNode"** [ undef, %216 ], [ %230, %226 ]
  %239 = phi %"class.sh::TIntermNode"** [ %217, %216 ], [ %230, %226 ]
  %240 = phi %"class.sh::TIntermNode"** [ %218, %216 ], [ %231, %226 ]
  %241 = icmp ult i64 %221, 56
  br i1 %241, label %286, label %242

242:                                              ; preds = %237, %242
  %243 = phi %"class.sh::TIntermNode"** [ %280, %242 ], [ %239, %237 ]
  %244 = phi %"class.sh::TIntermNode"** [ %281, %242 ], [ %240, %237 ]
  %245 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %243, i64 -1
  %246 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %244, i64 -1
  %247 = bitcast %"class.sh::TIntermNode"** %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = bitcast %"class.sh::TIntermNode"** %245 to i64*
  store i64 %248, i64* %249, align 8
  %250 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %243, i64 -2
  %251 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %244, i64 -2
  %252 = bitcast %"class.sh::TIntermNode"** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = bitcast %"class.sh::TIntermNode"** %250 to i64*
  store i64 %253, i64* %254, align 8
  %255 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %243, i64 -3
  %256 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %244, i64 -3
  %257 = bitcast %"class.sh::TIntermNode"** %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"class.sh::TIntermNode"** %255 to i64*
  store i64 %258, i64* %259, align 8
  %260 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %243, i64 -4
  %261 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %244, i64 -4
  %262 = bitcast %"class.sh::TIntermNode"** %261 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = bitcast %"class.sh::TIntermNode"** %260 to i64*
  store i64 %263, i64* %264, align 8
  %265 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %243, i64 -5
  %266 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %244, i64 -5
  %267 = bitcast %"class.sh::TIntermNode"** %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = bitcast %"class.sh::TIntermNode"** %265 to i64*
  store i64 %268, i64* %269, align 8
  %270 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %243, i64 -6
  %271 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %244, i64 -6
  %272 = bitcast %"class.sh::TIntermNode"** %271 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = bitcast %"class.sh::TIntermNode"** %270 to i64*
  store i64 %273, i64* %274, align 8
  %275 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %243, i64 -7
  %276 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %244, i64 -7
  %277 = bitcast %"class.sh::TIntermNode"** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = bitcast %"class.sh::TIntermNode"** %275 to i64*
  store i64 %278, i64* %279, align 8
  %280 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %243, i64 -8
  %281 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %244, i64 -8
  %282 = bitcast %"class.sh::TIntermNode"** %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = bitcast %"class.sh::TIntermNode"** %280 to i64*
  store i64 %283, i64* %284, align 8
  %285 = icmp eq %"class.sh::TIntermNode"** %281, %113
  br i1 %285, label %286, label %242, !llvm.loop !145

286:                                              ; preds = %237, %242, %214, %103
  %287 = phi %"class.sh::TIntermNode"** [ %106, %103 ], [ %140, %214 ], [ %238, %237 ], [ %280, %242 ]
  %288 = ptrtoint %"class.sh::TIntermNode"** %287 to i64
  store i64 %288, i64* %79, align 8
  store i64 %111, i64* %78, align 8
  store i64 %108, i64* %88, align 8
  br label %289

289:                                              ; preds = %71, %286
  %290 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %291 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %290, i64 40) #8
  %292 = bitcast i8* %291 to i32 (...)***
  %293 = getelementptr inbounds i8, i8* %291, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %293, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN2sh13TIntermBranchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %292, align 8
  %294 = getelementptr inbounds i8, i8* %291, i64 24
  store i8 -121, i8* %294, align 8
  %295 = getelementptr inbounds i8, i8* %291, i64 32
  %296 = bitcast i8* %295 to %"class.sh::TIntermTyped"**
  store %"class.sh::TIntermTyped"* null, %"class.sh::TIntermTyped"** %296, align 8
  %297 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*** %54, align 8
  %298 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %297, i64 27
  %299 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %298, align 8
  %300 = call %"class.sh::TVector.31"* %299(%"class.sh::TIntermBlock"* %37) #8
  %301 = ptrtoint i8* %291 to i64
  %302 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %300, i64 0, i32 0, i32 0, i32 1
  %303 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %302, align 8
  %304 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %300, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %305 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %304, align 8
  %306 = icmp ult %"class.sh::TIntermNode"** %303, %305
  %307 = ptrtoint %"class.sh::TIntermNode"** %305 to i64
  br i1 %306, label %308, label %313

308:                                              ; preds = %289
  %309 = bitcast %"class.sh::TIntermNode"** %303 to i64*
  store i64 %301, i64* %309, align 8
  %310 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %303, i64 1
  %311 = ptrtoint %"class.sh::TIntermNode"** %310 to i64
  %312 = bitcast %"class.sh::TIntermNode"*** %302 to i64*
  store i64 %311, i64* %312, align 8
  br label %526

313:                                              ; preds = %289
  %314 = ptrtoint %"class.sh::TIntermNode"** %303 to i64
  %315 = bitcast %"class.sh::TIntermNode"*** %302 to i64*
  %316 = bitcast %"class.sh::TVector.31"* %300 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = sub i64 %314, %317
  %319 = ashr exact i64 %318, 3
  %320 = add nsw i64 %319, 1
  %321 = icmp ugt i64 %320, 2305843009213693951
  br i1 %321, label %322, label %324

322:                                              ; preds = %313
  %323 = bitcast %"class.sh::TVector.31"* %300 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %323) #9
  unreachable

324:                                              ; preds = %313
  %325 = bitcast %"class.sh::TIntermNode"*** %304 to i64*
  %326 = sub i64 %307, %317
  %327 = ashr exact i64 %326, 3
  %328 = icmp ult i64 %327, 1152921504606846975
  br i1 %328, label %329, label %334

329:                                              ; preds = %324
  %330 = ashr exact i64 %326, 2
  %331 = icmp ult i64 %330, %320
  %332 = select i1 %331, i64 %320, i64 %330
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %340, label %334

334:                                              ; preds = %329, %324
  %335 = phi i64 [ %332, %329 ], [ 2305843009213693951, %324 ]
  %336 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %337 = shl i64 %335, 3
  %338 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %336, i64 %337) #8
  %339 = bitcast i8* %338 to %"class.sh::TIntermNode"**
  br label %340

340:                                              ; preds = %334, %329
  %341 = phi i64 [ %335, %334 ], [ 0, %329 ]
  %342 = phi %"class.sh::TIntermNode"** [ %339, %334 ], [ null, %329 ]
  %343 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %342, i64 %319
  %344 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %342, i64 %341
  %345 = ptrtoint %"class.sh::TIntermNode"** %344 to i64
  %346 = bitcast %"class.sh::TIntermNode"** %343 to i64*
  store i64 %301, i64* %346, align 8
  %347 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %343, i64 1
  %348 = ptrtoint %"class.sh::TIntermNode"** %347 to i64
  %349 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %300, i64 0, i32 0, i32 0, i32 0
  %350 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %349, align 8
  %351 = ptrtoint %"class.sh::TIntermNode"** %350 to i64
  %352 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %302, align 8
  %353 = icmp eq %"class.sh::TIntermNode"** %352, %350
  br i1 %353, label %523, label %354

354:                                              ; preds = %340
  %355 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %352, i64 -1
  %356 = ptrtoint %"class.sh::TIntermNode"** %355 to i64
  %357 = sub i64 %356, %351
  %358 = lshr i64 %357, 3
  %359 = add nuw nsw i64 %358, 1
  %360 = icmp ult i64 %359, 4
  br i1 %360, label %453, label %361

361:                                              ; preds = %354
  %362 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %352, i64 -1
  %363 = ptrtoint %"class.sh::TIntermNode"** %362 to i64
  %364 = sub i64 %363, %351
  %365 = lshr i64 %364, 3
  %366 = xor i64 %365, -1
  %367 = add nsw i64 %319, %366
  %368 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %342, i64 %367
  %369 = xor i64 %365, -1
  %370 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %352, i64 %369
  %371 = icmp ult %"class.sh::TIntermNode"** %368, %352
  %372 = icmp ult %"class.sh::TIntermNode"** %370, %343
  %373 = and i1 %371, %372
  br i1 %373, label %453, label %374

374:                                              ; preds = %361
  %375 = and i64 %359, 4611686018427387900
  %376 = sub nsw i64 0, %375
  %377 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %343, i64 %376
  %378 = sub nsw i64 0, %375
  %379 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %352, i64 %378
  %380 = add nsw i64 %375, -4
  %381 = lshr exact i64 %380, 2
  %382 = add nuw nsw i64 %381, 1
  %383 = and i64 %382, 1
  %384 = icmp eq i64 %380, 0
  br i1 %384, label %429, label %385

385:                                              ; preds = %374
  %386 = sub nuw nsw i64 %382, %383
  %387 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %343, i64 -1
  %388 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %352, i64 -1
  %389 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %343, i64 -1
  %390 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %352, i64 -1
  br label %391

391:                                              ; preds = %391, %385
  %392 = phi i64 [ 0, %385 ], [ %426, %391 ]
  %393 = phi i64 [ %386, %385 ], [ %427, %391 ]
  %394 = sub i64 0, %392
  %395 = sub i64 0, %392
  %396 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %387, i64 %394
  %397 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %388, i64 %395
  %398 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %397, i64 -1
  %399 = bitcast %"class.sh::TIntermNode"** %398 to <2 x i64>*
  %400 = load <2 x i64>, <2 x i64>* %399, align 8, !alias.scope !146
  %401 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %397, i64 -2
  %402 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %401, i64 -1
  %403 = bitcast %"class.sh::TIntermNode"** %402 to <2 x i64>*
  %404 = load <2 x i64>, <2 x i64>* %403, align 8, !alias.scope !146
  %405 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %396, i64 -1
  %406 = bitcast %"class.sh::TIntermNode"** %405 to <2 x i64>*
  store <2 x i64> %400, <2 x i64>* %406, align 8, !alias.scope !149, !noalias !146
  %407 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %396, i64 -2
  %408 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %407, i64 -1
  %409 = bitcast %"class.sh::TIntermNode"** %408 to <2 x i64>*
  store <2 x i64> %404, <2 x i64>* %409, align 8, !alias.scope !149, !noalias !146
  %410 = sub nuw nsw i64 -4, %392
  %411 = sub nuw nsw i64 -4, %392
  %412 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %389, i64 %410
  %413 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %390, i64 %411
  %414 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %413, i64 -1
  %415 = bitcast %"class.sh::TIntermNode"** %414 to <2 x i64>*
  %416 = load <2 x i64>, <2 x i64>* %415, align 8, !alias.scope !146
  %417 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %413, i64 -2
  %418 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %417, i64 -1
  %419 = bitcast %"class.sh::TIntermNode"** %418 to <2 x i64>*
  %420 = load <2 x i64>, <2 x i64>* %419, align 8, !alias.scope !146
  %421 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %412, i64 -1
  %422 = bitcast %"class.sh::TIntermNode"** %421 to <2 x i64>*
  store <2 x i64> %416, <2 x i64>* %422, align 8, !alias.scope !149, !noalias !146
  %423 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %412, i64 -2
  %424 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %423, i64 -1
  %425 = bitcast %"class.sh::TIntermNode"** %424 to <2 x i64>*
  store <2 x i64> %420, <2 x i64>* %425, align 8, !alias.scope !149, !noalias !146
  %426 = add i64 %392, 8
  %427 = add i64 %393, -2
  %428 = icmp eq i64 %427, 0
  br i1 %428, label %429, label %391, !llvm.loop !151

429:                                              ; preds = %391, %374
  %430 = phi i64 [ 0, %374 ], [ %426, %391 ]
  %431 = icmp eq i64 %383, 0
  br i1 %431, label %451, label %432

432:                                              ; preds = %429
  %433 = sub i64 0, %430
  %434 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %343, i64 -1
  %435 = sub i64 0, %430
  %436 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %352, i64 -1
  %437 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %434, i64 %433
  %438 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %436, i64 %435
  %439 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %438, i64 -1
  %440 = bitcast %"class.sh::TIntermNode"** %439 to <2 x i64>*
  %441 = load <2 x i64>, <2 x i64>* %440, align 8, !alias.scope !146
  %442 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %438, i64 -2
  %443 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %442, i64 -1
  %444 = bitcast %"class.sh::TIntermNode"** %443 to <2 x i64>*
  %445 = load <2 x i64>, <2 x i64>* %444, align 8, !alias.scope !146
  %446 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %437, i64 -1
  %447 = bitcast %"class.sh::TIntermNode"** %446 to <2 x i64>*
  store <2 x i64> %441, <2 x i64>* %447, align 8, !alias.scope !149, !noalias !146
  %448 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %437, i64 -2
  %449 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %448, i64 -1
  %450 = bitcast %"class.sh::TIntermNode"** %449 to <2 x i64>*
  store <2 x i64> %445, <2 x i64>* %450, align 8, !alias.scope !149, !noalias !146
  br label %451

451:                                              ; preds = %429, %432
  %452 = icmp eq i64 %359, %375
  br i1 %452, label %523, label %453

453:                                              ; preds = %451, %361, %354
  %454 = phi %"class.sh::TIntermNode"** [ %343, %361 ], [ %343, %354 ], [ %377, %451 ]
  %455 = phi %"class.sh::TIntermNode"** [ %352, %361 ], [ %352, %354 ], [ %379, %451 ]
  %456 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %455, i64 -1
  %457 = ptrtoint %"class.sh::TIntermNode"** %456 to i64
  %458 = sub i64 %457, %351
  %459 = lshr i64 %458, 3
  %460 = add nuw nsw i64 %459, 1
  %461 = and i64 %460, 7
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %474, label %463

463:                                              ; preds = %453, %463
  %464 = phi %"class.sh::TIntermNode"** [ %467, %463 ], [ %454, %453 ]
  %465 = phi %"class.sh::TIntermNode"** [ %468, %463 ], [ %455, %453 ]
  %466 = phi i64 [ %472, %463 ], [ %461, %453 ]
  %467 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %464, i64 -1
  %468 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %465, i64 -1
  %469 = bitcast %"class.sh::TIntermNode"** %468 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = bitcast %"class.sh::TIntermNode"** %467 to i64*
  store i64 %470, i64* %471, align 8
  %472 = add i64 %466, -1
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %474, label %463, !llvm.loop !152

474:                                              ; preds = %463, %453
  %475 = phi %"class.sh::TIntermNode"** [ undef, %453 ], [ %467, %463 ]
  %476 = phi %"class.sh::TIntermNode"** [ %454, %453 ], [ %467, %463 ]
  %477 = phi %"class.sh::TIntermNode"** [ %455, %453 ], [ %468, %463 ]
  %478 = icmp ult i64 %458, 56
  br i1 %478, label %523, label %479

479:                                              ; preds = %474, %479
  %480 = phi %"class.sh::TIntermNode"** [ %517, %479 ], [ %476, %474 ]
  %481 = phi %"class.sh::TIntermNode"** [ %518, %479 ], [ %477, %474 ]
  %482 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %480, i64 -1
  %483 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %481, i64 -1
  %484 = bitcast %"class.sh::TIntermNode"** %483 to i64*
  %485 = load i64, i64* %484, align 8
  %486 = bitcast %"class.sh::TIntermNode"** %482 to i64*
  store i64 %485, i64* %486, align 8
  %487 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %480, i64 -2
  %488 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %481, i64 -2
  %489 = bitcast %"class.sh::TIntermNode"** %488 to i64*
  %490 = load i64, i64* %489, align 8
  %491 = bitcast %"class.sh::TIntermNode"** %487 to i64*
  store i64 %490, i64* %491, align 8
  %492 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %480, i64 -3
  %493 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %481, i64 -3
  %494 = bitcast %"class.sh::TIntermNode"** %493 to i64*
  %495 = load i64, i64* %494, align 8
  %496 = bitcast %"class.sh::TIntermNode"** %492 to i64*
  store i64 %495, i64* %496, align 8
  %497 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %480, i64 -4
  %498 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %481, i64 -4
  %499 = bitcast %"class.sh::TIntermNode"** %498 to i64*
  %500 = load i64, i64* %499, align 8
  %501 = bitcast %"class.sh::TIntermNode"** %497 to i64*
  store i64 %500, i64* %501, align 8
  %502 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %480, i64 -5
  %503 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %481, i64 -5
  %504 = bitcast %"class.sh::TIntermNode"** %503 to i64*
  %505 = load i64, i64* %504, align 8
  %506 = bitcast %"class.sh::TIntermNode"** %502 to i64*
  store i64 %505, i64* %506, align 8
  %507 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %480, i64 -6
  %508 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %481, i64 -6
  %509 = bitcast %"class.sh::TIntermNode"** %508 to i64*
  %510 = load i64, i64* %509, align 8
  %511 = bitcast %"class.sh::TIntermNode"** %507 to i64*
  store i64 %510, i64* %511, align 8
  %512 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %480, i64 -7
  %513 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %481, i64 -7
  %514 = bitcast %"class.sh::TIntermNode"** %513 to i64*
  %515 = load i64, i64* %514, align 8
  %516 = bitcast %"class.sh::TIntermNode"** %512 to i64*
  store i64 %515, i64* %516, align 8
  %517 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %480, i64 -8
  %518 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %481, i64 -8
  %519 = bitcast %"class.sh::TIntermNode"** %518 to i64*
  %520 = load i64, i64* %519, align 8
  %521 = bitcast %"class.sh::TIntermNode"** %517 to i64*
  store i64 %520, i64* %521, align 8
  %522 = icmp eq %"class.sh::TIntermNode"** %518, %350
  br i1 %522, label %523, label %479, !llvm.loop !153

523:                                              ; preds = %474, %479, %451, %340
  %524 = phi %"class.sh::TIntermNode"** [ %343, %340 ], [ %377, %451 ], [ %475, %474 ], [ %517, %479 ]
  %525 = ptrtoint %"class.sh::TIntermNode"** %524 to i64
  store i64 %525, i64* %316, align 8
  store i64 %348, i64* %315, align 8
  store i64 %345, i64* %325, align 8
  br label %526

526:                                              ; preds = %308, %523
  %527 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %528 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %527, i64 40) #8
  %529 = bitcast i8* %528 to %"class.sh::TIntermSwitch"*
  %530 = bitcast i8* %21 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %531 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %530, align 8
  %532 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %531, i64 23
  %533 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %532, align 8
  %534 = call %"class.sh::TIntermTyped"* %533(%"class.sh::TIntermSymbol"* %22) #8
  call void @_ZN2sh13TIntermSwitchC1EPNS_12TIntermTypedEPNS_12TIntermBlockE(%"class.sh::TIntermSwitch"* %529, %"class.sh::TIntermTyped"* %534, %"class.sh::TIntermBlock"* %37) #8
  %535 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %536 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %535, i64 64) #8
  %537 = bitcast i8* %536 to %"class.sh::TIntermBlock"*
  %538 = bitcast i8* %536 to i32 (...)***
  %539 = getelementptr inbounds i8, i8* %536, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %539, i8 0, i64 16, i1 false) #8
  %540 = getelementptr inbounds i8, i8* %536, i64 24
  %541 = bitcast i8* %540 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %538, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %541, align 8
  %542 = getelementptr inbounds i8, i8* %536, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %542, i8 0, i64 25, i1 false) #8
  %543 = bitcast i8* %536 to %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)***
  %544 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 29) to %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)**), align 8
  %545 = call %"class.sh::TVector.31"* %544(%"class.sh::TIntermBlock"* %537) #8
  %546 = ptrtoint i8* %528 to i64
  %547 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %545, i64 0, i32 0, i32 0, i32 1
  %548 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %547, align 8
  %549 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %545, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %550 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %549, align 8
  %551 = icmp ult %"class.sh::TIntermNode"** %548, %550
  %552 = ptrtoint %"class.sh::TIntermNode"** %550 to i64
  br i1 %551, label %553, label %558

553:                                              ; preds = %526
  %554 = bitcast %"class.sh::TIntermNode"** %548 to i64*
  store i64 %546, i64* %554, align 8
  %555 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %548, i64 1
  %556 = ptrtoint %"class.sh::TIntermNode"** %555 to i64
  %557 = bitcast %"class.sh::TIntermNode"*** %547 to i64*
  store i64 %556, i64* %557, align 8
  br label %771

558:                                              ; preds = %526
  %559 = ptrtoint %"class.sh::TIntermNode"** %548 to i64
  %560 = bitcast %"class.sh::TIntermNode"*** %547 to i64*
  %561 = bitcast %"class.sh::TVector.31"* %545 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = sub i64 %559, %562
  %564 = ashr exact i64 %563, 3
  %565 = add nsw i64 %564, 1
  %566 = icmp ugt i64 %565, 2305843009213693951
  br i1 %566, label %567, label %569

567:                                              ; preds = %558
  %568 = bitcast %"class.sh::TVector.31"* %545 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %568) #9
  unreachable

569:                                              ; preds = %558
  %570 = bitcast %"class.sh::TIntermNode"*** %549 to i64*
  %571 = sub i64 %552, %562
  %572 = ashr exact i64 %571, 3
  %573 = icmp ult i64 %572, 1152921504606846975
  br i1 %573, label %574, label %579

574:                                              ; preds = %569
  %575 = ashr exact i64 %571, 2
  %576 = icmp ult i64 %575, %565
  %577 = select i1 %576, i64 %565, i64 %575
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %585, label %579

579:                                              ; preds = %574, %569
  %580 = phi i64 [ %577, %574 ], [ 2305843009213693951, %569 ]
  %581 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %582 = shl i64 %580, 3
  %583 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %581, i64 %582) #8
  %584 = bitcast i8* %583 to %"class.sh::TIntermNode"**
  br label %585

585:                                              ; preds = %579, %574
  %586 = phi i64 [ %580, %579 ], [ 0, %574 ]
  %587 = phi %"class.sh::TIntermNode"** [ %584, %579 ], [ null, %574 ]
  %588 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %587, i64 %564
  %589 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %587, i64 %586
  %590 = ptrtoint %"class.sh::TIntermNode"** %589 to i64
  %591 = bitcast %"class.sh::TIntermNode"** %588 to i64*
  store i64 %546, i64* %591, align 8
  %592 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %588, i64 1
  %593 = ptrtoint %"class.sh::TIntermNode"** %592 to i64
  %594 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %545, i64 0, i32 0, i32 0, i32 0
  %595 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %594, align 8
  %596 = ptrtoint %"class.sh::TIntermNode"** %595 to i64
  %597 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %547, align 8
  %598 = icmp eq %"class.sh::TIntermNode"** %597, %595
  br i1 %598, label %768, label %599

599:                                              ; preds = %585
  %600 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %597, i64 -1
  %601 = ptrtoint %"class.sh::TIntermNode"** %600 to i64
  %602 = sub i64 %601, %596
  %603 = lshr i64 %602, 3
  %604 = add nuw nsw i64 %603, 1
  %605 = icmp ult i64 %604, 4
  br i1 %605, label %698, label %606

606:                                              ; preds = %599
  %607 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %597, i64 -1
  %608 = ptrtoint %"class.sh::TIntermNode"** %607 to i64
  %609 = sub i64 %608, %596
  %610 = lshr i64 %609, 3
  %611 = xor i64 %610, -1
  %612 = add nsw i64 %564, %611
  %613 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %587, i64 %612
  %614 = xor i64 %610, -1
  %615 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %597, i64 %614
  %616 = icmp ult %"class.sh::TIntermNode"** %613, %597
  %617 = icmp ult %"class.sh::TIntermNode"** %615, %588
  %618 = and i1 %616, %617
  br i1 %618, label %698, label %619

619:                                              ; preds = %606
  %620 = and i64 %604, 4611686018427387900
  %621 = sub nsw i64 0, %620
  %622 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %588, i64 %621
  %623 = sub nsw i64 0, %620
  %624 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %597, i64 %623
  %625 = add nsw i64 %620, -4
  %626 = lshr exact i64 %625, 2
  %627 = add nuw nsw i64 %626, 1
  %628 = and i64 %627, 1
  %629 = icmp eq i64 %625, 0
  br i1 %629, label %674, label %630

630:                                              ; preds = %619
  %631 = sub nuw nsw i64 %627, %628
  %632 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %588, i64 -1
  %633 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %597, i64 -1
  %634 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %588, i64 -1
  %635 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %597, i64 -1
  br label %636

636:                                              ; preds = %636, %630
  %637 = phi i64 [ 0, %630 ], [ %671, %636 ]
  %638 = phi i64 [ %631, %630 ], [ %672, %636 ]
  %639 = sub i64 0, %637
  %640 = sub i64 0, %637
  %641 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %632, i64 %639
  %642 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %633, i64 %640
  %643 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %642, i64 -1
  %644 = bitcast %"class.sh::TIntermNode"** %643 to <2 x i64>*
  %645 = load <2 x i64>, <2 x i64>* %644, align 8, !alias.scope !154
  %646 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %642, i64 -2
  %647 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %646, i64 -1
  %648 = bitcast %"class.sh::TIntermNode"** %647 to <2 x i64>*
  %649 = load <2 x i64>, <2 x i64>* %648, align 8, !alias.scope !154
  %650 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %641, i64 -1
  %651 = bitcast %"class.sh::TIntermNode"** %650 to <2 x i64>*
  store <2 x i64> %645, <2 x i64>* %651, align 8, !alias.scope !157, !noalias !154
  %652 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %641, i64 -2
  %653 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %652, i64 -1
  %654 = bitcast %"class.sh::TIntermNode"** %653 to <2 x i64>*
  store <2 x i64> %649, <2 x i64>* %654, align 8, !alias.scope !157, !noalias !154
  %655 = sub nuw nsw i64 -4, %637
  %656 = sub nuw nsw i64 -4, %637
  %657 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %634, i64 %655
  %658 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %635, i64 %656
  %659 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %658, i64 -1
  %660 = bitcast %"class.sh::TIntermNode"** %659 to <2 x i64>*
  %661 = load <2 x i64>, <2 x i64>* %660, align 8, !alias.scope !154
  %662 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %658, i64 -2
  %663 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %662, i64 -1
  %664 = bitcast %"class.sh::TIntermNode"** %663 to <2 x i64>*
  %665 = load <2 x i64>, <2 x i64>* %664, align 8, !alias.scope !154
  %666 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %657, i64 -1
  %667 = bitcast %"class.sh::TIntermNode"** %666 to <2 x i64>*
  store <2 x i64> %661, <2 x i64>* %667, align 8, !alias.scope !157, !noalias !154
  %668 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %657, i64 -2
  %669 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %668, i64 -1
  %670 = bitcast %"class.sh::TIntermNode"** %669 to <2 x i64>*
  store <2 x i64> %665, <2 x i64>* %670, align 8, !alias.scope !157, !noalias !154
  %671 = add i64 %637, 8
  %672 = add i64 %638, -2
  %673 = icmp eq i64 %672, 0
  br i1 %673, label %674, label %636, !llvm.loop !159

674:                                              ; preds = %636, %619
  %675 = phi i64 [ 0, %619 ], [ %671, %636 ]
  %676 = icmp eq i64 %628, 0
  br i1 %676, label %696, label %677

677:                                              ; preds = %674
  %678 = sub i64 0, %675
  %679 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %588, i64 -1
  %680 = sub i64 0, %675
  %681 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %597, i64 -1
  %682 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %679, i64 %678
  %683 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %681, i64 %680
  %684 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %683, i64 -1
  %685 = bitcast %"class.sh::TIntermNode"** %684 to <2 x i64>*
  %686 = load <2 x i64>, <2 x i64>* %685, align 8, !alias.scope !154
  %687 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %683, i64 -2
  %688 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %687, i64 -1
  %689 = bitcast %"class.sh::TIntermNode"** %688 to <2 x i64>*
  %690 = load <2 x i64>, <2 x i64>* %689, align 8, !alias.scope !154
  %691 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %682, i64 -1
  %692 = bitcast %"class.sh::TIntermNode"** %691 to <2 x i64>*
  store <2 x i64> %686, <2 x i64>* %692, align 8, !alias.scope !157, !noalias !154
  %693 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %682, i64 -2
  %694 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %693, i64 -1
  %695 = bitcast %"class.sh::TIntermNode"** %694 to <2 x i64>*
  store <2 x i64> %690, <2 x i64>* %695, align 8, !alias.scope !157, !noalias !154
  br label %696

696:                                              ; preds = %674, %677
  %697 = icmp eq i64 %604, %620
  br i1 %697, label %768, label %698

698:                                              ; preds = %696, %606, %599
  %699 = phi %"class.sh::TIntermNode"** [ %588, %606 ], [ %588, %599 ], [ %622, %696 ]
  %700 = phi %"class.sh::TIntermNode"** [ %597, %606 ], [ %597, %599 ], [ %624, %696 ]
  %701 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %700, i64 -1
  %702 = ptrtoint %"class.sh::TIntermNode"** %701 to i64
  %703 = sub i64 %702, %596
  %704 = lshr i64 %703, 3
  %705 = add nuw nsw i64 %704, 1
  %706 = and i64 %705, 7
  %707 = icmp eq i64 %706, 0
  br i1 %707, label %719, label %708

708:                                              ; preds = %698, %708
  %709 = phi %"class.sh::TIntermNode"** [ %712, %708 ], [ %699, %698 ]
  %710 = phi %"class.sh::TIntermNode"** [ %713, %708 ], [ %700, %698 ]
  %711 = phi i64 [ %717, %708 ], [ %706, %698 ]
  %712 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %709, i64 -1
  %713 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %710, i64 -1
  %714 = bitcast %"class.sh::TIntermNode"** %713 to i64*
  %715 = load i64, i64* %714, align 8
  %716 = bitcast %"class.sh::TIntermNode"** %712 to i64*
  store i64 %715, i64* %716, align 8
  %717 = add i64 %711, -1
  %718 = icmp eq i64 %717, 0
  br i1 %718, label %719, label %708, !llvm.loop !160

719:                                              ; preds = %708, %698
  %720 = phi %"class.sh::TIntermNode"** [ undef, %698 ], [ %712, %708 ]
  %721 = phi %"class.sh::TIntermNode"** [ %699, %698 ], [ %712, %708 ]
  %722 = phi %"class.sh::TIntermNode"** [ %700, %698 ], [ %713, %708 ]
  %723 = icmp ult i64 %703, 56
  br i1 %723, label %768, label %724

724:                                              ; preds = %719, %724
  %725 = phi %"class.sh::TIntermNode"** [ %762, %724 ], [ %721, %719 ]
  %726 = phi %"class.sh::TIntermNode"** [ %763, %724 ], [ %722, %719 ]
  %727 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %725, i64 -1
  %728 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %726, i64 -1
  %729 = bitcast %"class.sh::TIntermNode"** %728 to i64*
  %730 = load i64, i64* %729, align 8
  %731 = bitcast %"class.sh::TIntermNode"** %727 to i64*
  store i64 %730, i64* %731, align 8
  %732 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %725, i64 -2
  %733 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %726, i64 -2
  %734 = bitcast %"class.sh::TIntermNode"** %733 to i64*
  %735 = load i64, i64* %734, align 8
  %736 = bitcast %"class.sh::TIntermNode"** %732 to i64*
  store i64 %735, i64* %736, align 8
  %737 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %725, i64 -3
  %738 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %726, i64 -3
  %739 = bitcast %"class.sh::TIntermNode"** %738 to i64*
  %740 = load i64, i64* %739, align 8
  %741 = bitcast %"class.sh::TIntermNode"** %737 to i64*
  store i64 %740, i64* %741, align 8
  %742 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %725, i64 -4
  %743 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %726, i64 -4
  %744 = bitcast %"class.sh::TIntermNode"** %743 to i64*
  %745 = load i64, i64* %744, align 8
  %746 = bitcast %"class.sh::TIntermNode"** %742 to i64*
  store i64 %745, i64* %746, align 8
  %747 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %725, i64 -5
  %748 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %726, i64 -5
  %749 = bitcast %"class.sh::TIntermNode"** %748 to i64*
  %750 = load i64, i64* %749, align 8
  %751 = bitcast %"class.sh::TIntermNode"** %747 to i64*
  store i64 %750, i64* %751, align 8
  %752 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %725, i64 -6
  %753 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %726, i64 -6
  %754 = bitcast %"class.sh::TIntermNode"** %753 to i64*
  %755 = load i64, i64* %754, align 8
  %756 = bitcast %"class.sh::TIntermNode"** %752 to i64*
  store i64 %755, i64* %756, align 8
  %757 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %725, i64 -7
  %758 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %726, i64 -7
  %759 = bitcast %"class.sh::TIntermNode"** %758 to i64*
  %760 = load i64, i64* %759, align 8
  %761 = bitcast %"class.sh::TIntermNode"** %757 to i64*
  store i64 %760, i64* %761, align 8
  %762 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %725, i64 -8
  %763 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %726, i64 -8
  %764 = bitcast %"class.sh::TIntermNode"** %763 to i64*
  %765 = load i64, i64* %764, align 8
  %766 = bitcast %"class.sh::TIntermNode"** %762 to i64*
  store i64 %765, i64* %766, align 8
  %767 = icmp eq %"class.sh::TIntermNode"** %763, %595
  br i1 %767, label %768, label %724, !llvm.loop !161

768:                                              ; preds = %719, %724, %696, %585
  %769 = phi %"class.sh::TIntermNode"** [ %588, %585 ], [ %622, %696 ], [ %720, %719 ], [ %762, %724 ]
  %770 = ptrtoint %"class.sh::TIntermNode"** %769 to i64
  store i64 %770, i64* %561, align 8
  store i64 %593, i64* %560, align 8
  store i64 %590, i64* %570, align 8
  br label %771

771:                                              ; preds = %553, %768
  %772 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %773 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %772, i64 240) #8
  %774 = bitcast i8* %773 to %"class.sh::TIntermBinary"*
  %775 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %530, align 8
  %776 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %775, i64 23
  %777 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %776, align 8
  %778 = call %"class.sh::TIntermTyped"* %777(%"class.sh::TIntermSymbol"* %22) #8
  %779 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %780 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %779, i64 8) #8
  %781 = bitcast i8* %780 to %"class.sh::TConstantUnion"*
  call void @_ZN2sh14TConstantUnionC1Ev(%"class.sh::TConstantUnion"* %781) #8
  %782 = bitcast i8* %780 to i32*
  store i32 0, i32* %782, align 4
  %783 = getelementptr inbounds i8, i8* %780, i64 4
  %784 = bitcast i8* %783 to i32*
  store i32 3, i32* %784, align 4
  %785 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %786 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %785, i64 216) #8
  %787 = bitcast %"class.sh::TType"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %787) #8
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* nonnull %5, i32 3, i32 3, i32 0, i8 zeroext 1, i8 zeroext 1) #8
  %788 = bitcast i8* %786 to %"class.sh::TIntermExpression"*
  call void @_ZN2sh17TIntermExpressionC2ERKNS_5TTypeE(%"class.sh::TIntermExpression"* %788, %"class.sh::TType"* nonnull dereferenceable(184) %5) #8
  %789 = bitcast i8* %786 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN2sh20TIntermConstantUnionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %789, align 8
  %790 = getelementptr inbounds i8, i8* %786, i64 208
  %791 = bitcast i8* %790 to i8**
  store i8* %780, i8** %791, align 8
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %787) #8
  %792 = bitcast i8* %786 to %"class.sh::TIntermTyped"*
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %774, i8 zeroext 20, %"class.sh::TIntermTyped"* %778, %"class.sh::TIntermTyped"* %792) #8
  %793 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %794 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %793, i64 64) #8
  %795 = bitcast i8* %794 to %"class.sh::TIntermBlock"*
  %796 = bitcast i8* %794 to i32 (...)***
  %797 = getelementptr inbounds i8, i8* %794, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %797, i8 0, i64 16, i1 false) #8
  %798 = getelementptr inbounds i8, i8* %794, i64 24
  %799 = bitcast i8* %798 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %796, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %799, align 8
  %800 = getelementptr inbounds i8, i8* %794, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %800, i8 0, i64 25, i1 false) #8
  %801 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %802 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %801, i64 64) #8
  %803 = bitcast i8* %802 to %"class.sh::TIntermBlock"*
  %804 = bitcast i8* %802 to i32 (...)***
  %805 = getelementptr inbounds i8, i8* %802, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %805, i8 0, i64 16, i1 false) #8
  %806 = getelementptr inbounds i8, i8* %802, i64 24
  %807 = bitcast i8* %806 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %804, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %807, align 8
  %808 = getelementptr inbounds i8, i8* %802, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %808, i8 0, i64 25, i1 false) #8
  %809 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %810 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %809, i64 240) #8
  %811 = bitcast i8* %810 to %"class.sh::TIntermBinary"*
  %812 = bitcast i8* %15 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %813 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %812, align 8
  %814 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %813, i64 23
  %815 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %814, align 8
  %816 = call %"class.sh::TIntermTyped"* %815(%"class.sh::TIntermSymbol"* %16) #8
  %817 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 0) #8
  %818 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %817, i64 0, i32 0, i32 0
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %811, i8 zeroext 44, %"class.sh::TIntermTyped"* %816, %"class.sh::TIntermTyped"* %818) #8
  %819 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %820 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %819, i64 240) #8
  %821 = bitcast i8* %820 to %"class.sh::TIntermBinary"*
  %822 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %812, align 8
  %823 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %822, i64 23
  %824 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %823, align 8
  %825 = call %"class.sh::TIntermTyped"* %824(%"class.sh::TIntermSymbol"* %16) #8
  %826 = add nsw i32 %9, -1
  %827 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 %826) #8
  %828 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %827, i64 0, i32 0, i32 0
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %821, i8 zeroext 44, %"class.sh::TIntermTyped"* %825, %"class.sh::TIntermTyped"* %828) #8
  %829 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  br i1 %1, label %1808, label %2523

830:                                              ; preds = %1803, %48
  %831 = phi i8* [ %45, %48 ], [ %1806, %1803 ]
  %832 = phi i32 [ 0, %48 ], [ %1804, %1803 ]
  %833 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %834 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %833, i64 8) #8
  %835 = bitcast i8* %834 to %"class.sh::TConstantUnion"*
  call void @_ZN2sh14TConstantUnionC1Ev(%"class.sh::TConstantUnion"* %835) #8
  %836 = bitcast i8* %834 to i32*
  store i32 %832, i32* %836, align 4
  %837 = getelementptr inbounds i8, i8* %834, i64 4
  %838 = bitcast i8* %837 to i32*
  store i32 3, i32* %838, align 4
  %839 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %840 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %839, i64 216) #8
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %49) #8
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* nonnull %4, i32 3, i32 3, i32 0, i8 zeroext 1, i8 zeroext 1) #8
  %841 = bitcast i8* %840 to %"class.sh::TIntermExpression"*
  call void @_ZN2sh17TIntermExpressionC2ERKNS_5TTypeE(%"class.sh::TIntermExpression"* %841, %"class.sh::TType"* nonnull dereferenceable(184) %4) #8
  %842 = bitcast i8* %840 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN2sh20TIntermConstantUnionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %842, align 8
  %843 = getelementptr inbounds i8, i8* %840, i64 208
  %844 = bitcast i8* %843 to i8**
  store i8* %834, i8** %844, align 8
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %49) #8
  %845 = bitcast i8* %831 to i32 (...)***
  %846 = getelementptr inbounds i8, i8* %831, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %846, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN2sh11TIntermCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %845, align 8
  %847 = getelementptr inbounds i8, i8* %831, i64 24
  %848 = bitcast i8* %847 to i8**
  store i8* %840, i8** %848, align 8
  %849 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*** %50, align 8
  %850 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %849, i64 27
  %851 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %850, align 8
  %852 = call %"class.sh::TVector.31"* %851(%"class.sh::TIntermBlock"* %37) #8
  %853 = ptrtoint i8* %831 to i64
  %854 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %852, i64 0, i32 0, i32 0, i32 1
  %855 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %854, align 8
  %856 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %852, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %857 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %856, align 8
  %858 = icmp ult %"class.sh::TIntermNode"** %855, %857
  %859 = ptrtoint %"class.sh::TIntermNode"** %857 to i64
  br i1 %858, label %860, label %865

860:                                              ; preds = %830
  %861 = bitcast %"class.sh::TIntermNode"** %855 to i64*
  store i64 %853, i64* %861, align 8
  %862 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %855, i64 1
  %863 = ptrtoint %"class.sh::TIntermNode"** %862 to i64
  %864 = bitcast %"class.sh::TIntermNode"*** %854 to i64*
  store i64 %863, i64* %864, align 8
  br label %1079

865:                                              ; preds = %830
  %866 = ptrtoint %"class.sh::TIntermNode"** %855 to i64
  %867 = bitcast %"class.sh::TIntermNode"*** %854 to i64*
  %868 = bitcast %"class.sh::TVector.31"* %852 to i64*
  %869 = load i64, i64* %868, align 8
  %870 = sub i64 %866, %869
  %871 = ashr exact i64 %870, 3
  %872 = add nsw i64 %871, 1
  %873 = icmp ugt i64 %872, 2305843009213693951
  br i1 %873, label %874, label %876

874:                                              ; preds = %865
  %875 = bitcast %"class.sh::TVector.31"* %852 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %875) #9
  unreachable

876:                                              ; preds = %865
  %877 = bitcast %"class.sh::TIntermNode"*** %856 to i64*
  %878 = sub i64 %859, %869
  %879 = ashr exact i64 %878, 3
  %880 = icmp ult i64 %879, 1152921504606846975
  br i1 %880, label %881, label %886

881:                                              ; preds = %876
  %882 = ashr exact i64 %878, 2
  %883 = icmp ult i64 %882, %872
  %884 = select i1 %883, i64 %872, i64 %882
  %885 = icmp eq i64 %884, 0
  br i1 %885, label %892, label %886

886:                                              ; preds = %881, %876
  %887 = phi i64 [ %884, %881 ], [ 2305843009213693951, %876 ]
  %888 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %889 = shl i64 %887, 3
  %890 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %888, i64 %889) #8
  %891 = bitcast i8* %890 to %"class.sh::TIntermNode"**
  br label %892

892:                                              ; preds = %886, %881
  %893 = phi i64 [ %887, %886 ], [ 0, %881 ]
  %894 = phi %"class.sh::TIntermNode"** [ %891, %886 ], [ null, %881 ]
  %895 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %894, i64 %871
  %896 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %894, i64 %893
  %897 = ptrtoint %"class.sh::TIntermNode"** %896 to i64
  %898 = bitcast %"class.sh::TIntermNode"** %895 to i64*
  store i64 %853, i64* %898, align 8
  %899 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %895, i64 1
  %900 = ptrtoint %"class.sh::TIntermNode"** %899 to i64
  %901 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %852, i64 0, i32 0, i32 0, i32 0
  %902 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %901, align 8
  %903 = ptrtoint %"class.sh::TIntermNode"** %902 to i64
  %904 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %854, align 8
  %905 = icmp eq %"class.sh::TIntermNode"** %904, %902
  br i1 %905, label %1076, label %906

906:                                              ; preds = %892
  %907 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %904, i64 -1
  %908 = ptrtoint %"class.sh::TIntermNode"** %907 to i64
  %909 = sub i64 %908, %903
  %910 = lshr i64 %909, 3
  %911 = add nuw nsw i64 %910, 1
  %912 = icmp ult i64 %911, 4
  br i1 %912, label %1006, label %913

913:                                              ; preds = %906
  %914 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %894, i64 -1
  %915 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %904, i64 -1
  %916 = ptrtoint %"class.sh::TIntermNode"** %915 to i64
  %917 = sub i64 %916, %903
  %918 = lshr i64 %917, 3
  %919 = sub nsw i64 %871, %918
  %920 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %914, i64 %919
  %921 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %904, i64 -1
  %922 = sub nsw i64 0, %918
  %923 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %921, i64 %922
  %924 = icmp ult %"class.sh::TIntermNode"** %920, %904
  %925 = icmp ult %"class.sh::TIntermNode"** %923, %895
  %926 = and i1 %924, %925
  br i1 %926, label %1006, label %927

927:                                              ; preds = %913
  %928 = and i64 %911, 4611686018427387900
  %929 = sub nsw i64 0, %928
  %930 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %895, i64 %929
  %931 = sub nsw i64 0, %928
  %932 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %904, i64 %931
  %933 = add nsw i64 %928, -4
  %934 = lshr exact i64 %933, 2
  %935 = add nuw nsw i64 %934, 1
  %936 = and i64 %935, 1
  %937 = icmp eq i64 %933, 0
  br i1 %937, label %982, label %938

938:                                              ; preds = %927
  %939 = sub nuw nsw i64 %935, %936
  %940 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %895, i64 -1
  %941 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %904, i64 -1
  %942 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %895, i64 -1
  %943 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %904, i64 -1
  br label %944

944:                                              ; preds = %944, %938
  %945 = phi i64 [ 0, %938 ], [ %979, %944 ]
  %946 = phi i64 [ %939, %938 ], [ %980, %944 ]
  %947 = sub i64 0, %945
  %948 = sub i64 0, %945
  %949 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %940, i64 %947
  %950 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %941, i64 %948
  %951 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %950, i64 -1
  %952 = bitcast %"class.sh::TIntermNode"** %951 to <2 x i64>*
  %953 = load <2 x i64>, <2 x i64>* %952, align 8, !alias.scope !162
  %954 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %950, i64 -2
  %955 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %954, i64 -1
  %956 = bitcast %"class.sh::TIntermNode"** %955 to <2 x i64>*
  %957 = load <2 x i64>, <2 x i64>* %956, align 8, !alias.scope !162
  %958 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %949, i64 -1
  %959 = bitcast %"class.sh::TIntermNode"** %958 to <2 x i64>*
  store <2 x i64> %953, <2 x i64>* %959, align 8, !alias.scope !165, !noalias !162
  %960 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %949, i64 -2
  %961 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %960, i64 -1
  %962 = bitcast %"class.sh::TIntermNode"** %961 to <2 x i64>*
  store <2 x i64> %957, <2 x i64>* %962, align 8, !alias.scope !165, !noalias !162
  %963 = sub nuw nsw i64 -4, %945
  %964 = sub nuw nsw i64 -4, %945
  %965 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %942, i64 %963
  %966 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %943, i64 %964
  %967 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %966, i64 -1
  %968 = bitcast %"class.sh::TIntermNode"** %967 to <2 x i64>*
  %969 = load <2 x i64>, <2 x i64>* %968, align 8, !alias.scope !162
  %970 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %966, i64 -2
  %971 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %970, i64 -1
  %972 = bitcast %"class.sh::TIntermNode"** %971 to <2 x i64>*
  %973 = load <2 x i64>, <2 x i64>* %972, align 8, !alias.scope !162
  %974 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %965, i64 -1
  %975 = bitcast %"class.sh::TIntermNode"** %974 to <2 x i64>*
  store <2 x i64> %969, <2 x i64>* %975, align 8, !alias.scope !165, !noalias !162
  %976 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %965, i64 -2
  %977 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %976, i64 -1
  %978 = bitcast %"class.sh::TIntermNode"** %977 to <2 x i64>*
  store <2 x i64> %973, <2 x i64>* %978, align 8, !alias.scope !165, !noalias !162
  %979 = add i64 %945, 8
  %980 = add i64 %946, -2
  %981 = icmp eq i64 %980, 0
  br i1 %981, label %982, label %944, !llvm.loop !167

982:                                              ; preds = %944, %927
  %983 = phi i64 [ 0, %927 ], [ %979, %944 ]
  %984 = icmp eq i64 %936, 0
  br i1 %984, label %1004, label %985

985:                                              ; preds = %982
  %986 = sub i64 0, %983
  %987 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %895, i64 -1
  %988 = sub i64 0, %983
  %989 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %904, i64 -1
  %990 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %987, i64 %986
  %991 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %989, i64 %988
  %992 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %991, i64 -1
  %993 = bitcast %"class.sh::TIntermNode"** %992 to <2 x i64>*
  %994 = load <2 x i64>, <2 x i64>* %993, align 8, !alias.scope !162
  %995 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %991, i64 -2
  %996 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %995, i64 -1
  %997 = bitcast %"class.sh::TIntermNode"** %996 to <2 x i64>*
  %998 = load <2 x i64>, <2 x i64>* %997, align 8, !alias.scope !162
  %999 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %990, i64 -1
  %1000 = bitcast %"class.sh::TIntermNode"** %999 to <2 x i64>*
  store <2 x i64> %994, <2 x i64>* %1000, align 8, !alias.scope !165, !noalias !162
  %1001 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %990, i64 -2
  %1002 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1001, i64 -1
  %1003 = bitcast %"class.sh::TIntermNode"** %1002 to <2 x i64>*
  store <2 x i64> %998, <2 x i64>* %1003, align 8, !alias.scope !165, !noalias !162
  br label %1004

1004:                                             ; preds = %982, %985
  %1005 = icmp eq i64 %911, %928
  br i1 %1005, label %1076, label %1006

1006:                                             ; preds = %1004, %913, %906
  %1007 = phi %"class.sh::TIntermNode"** [ %895, %913 ], [ %895, %906 ], [ %930, %1004 ]
  %1008 = phi %"class.sh::TIntermNode"** [ %904, %913 ], [ %904, %906 ], [ %932, %1004 ]
  %1009 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1008, i64 -1
  %1010 = ptrtoint %"class.sh::TIntermNode"** %1009 to i64
  %1011 = sub i64 %1010, %903
  %1012 = lshr i64 %1011, 3
  %1013 = add nuw nsw i64 %1012, 1
  %1014 = and i64 %1013, 7
  %1015 = icmp eq i64 %1014, 0
  br i1 %1015, label %1027, label %1016

1016:                                             ; preds = %1006, %1016
  %1017 = phi %"class.sh::TIntermNode"** [ %1020, %1016 ], [ %1007, %1006 ]
  %1018 = phi %"class.sh::TIntermNode"** [ %1021, %1016 ], [ %1008, %1006 ]
  %1019 = phi i64 [ %1025, %1016 ], [ %1014, %1006 ]
  %1020 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1017, i64 -1
  %1021 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1018, i64 -1
  %1022 = bitcast %"class.sh::TIntermNode"** %1021 to i64*
  %1023 = load i64, i64* %1022, align 8
  %1024 = bitcast %"class.sh::TIntermNode"** %1020 to i64*
  store i64 %1023, i64* %1024, align 8
  %1025 = add i64 %1019, -1
  %1026 = icmp eq i64 %1025, 0
  br i1 %1026, label %1027, label %1016, !llvm.loop !168

1027:                                             ; preds = %1016, %1006
  %1028 = phi %"class.sh::TIntermNode"** [ undef, %1006 ], [ %1020, %1016 ]
  %1029 = phi %"class.sh::TIntermNode"** [ %1007, %1006 ], [ %1020, %1016 ]
  %1030 = phi %"class.sh::TIntermNode"** [ %1008, %1006 ], [ %1021, %1016 ]
  %1031 = icmp ult i64 %1011, 56
  br i1 %1031, label %1076, label %1032

1032:                                             ; preds = %1027, %1032
  %1033 = phi %"class.sh::TIntermNode"** [ %1070, %1032 ], [ %1029, %1027 ]
  %1034 = phi %"class.sh::TIntermNode"** [ %1071, %1032 ], [ %1030, %1027 ]
  %1035 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1033, i64 -1
  %1036 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1034, i64 -1
  %1037 = bitcast %"class.sh::TIntermNode"** %1036 to i64*
  %1038 = load i64, i64* %1037, align 8
  %1039 = bitcast %"class.sh::TIntermNode"** %1035 to i64*
  store i64 %1038, i64* %1039, align 8
  %1040 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1033, i64 -2
  %1041 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1034, i64 -2
  %1042 = bitcast %"class.sh::TIntermNode"** %1041 to i64*
  %1043 = load i64, i64* %1042, align 8
  %1044 = bitcast %"class.sh::TIntermNode"** %1040 to i64*
  store i64 %1043, i64* %1044, align 8
  %1045 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1033, i64 -3
  %1046 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1034, i64 -3
  %1047 = bitcast %"class.sh::TIntermNode"** %1046 to i64*
  %1048 = load i64, i64* %1047, align 8
  %1049 = bitcast %"class.sh::TIntermNode"** %1045 to i64*
  store i64 %1048, i64* %1049, align 8
  %1050 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1033, i64 -4
  %1051 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1034, i64 -4
  %1052 = bitcast %"class.sh::TIntermNode"** %1051 to i64*
  %1053 = load i64, i64* %1052, align 8
  %1054 = bitcast %"class.sh::TIntermNode"** %1050 to i64*
  store i64 %1053, i64* %1054, align 8
  %1055 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1033, i64 -5
  %1056 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1034, i64 -5
  %1057 = bitcast %"class.sh::TIntermNode"** %1056 to i64*
  %1058 = load i64, i64* %1057, align 8
  %1059 = bitcast %"class.sh::TIntermNode"** %1055 to i64*
  store i64 %1058, i64* %1059, align 8
  %1060 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1033, i64 -6
  %1061 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1034, i64 -6
  %1062 = bitcast %"class.sh::TIntermNode"** %1061 to i64*
  %1063 = load i64, i64* %1062, align 8
  %1064 = bitcast %"class.sh::TIntermNode"** %1060 to i64*
  store i64 %1063, i64* %1064, align 8
  %1065 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1033, i64 -7
  %1066 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1034, i64 -7
  %1067 = bitcast %"class.sh::TIntermNode"** %1066 to i64*
  %1068 = load i64, i64* %1067, align 8
  %1069 = bitcast %"class.sh::TIntermNode"** %1065 to i64*
  store i64 %1068, i64* %1069, align 8
  %1070 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1033, i64 -8
  %1071 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1034, i64 -8
  %1072 = bitcast %"class.sh::TIntermNode"** %1071 to i64*
  %1073 = load i64, i64* %1072, align 8
  %1074 = bitcast %"class.sh::TIntermNode"** %1070 to i64*
  store i64 %1073, i64* %1074, align 8
  %1075 = icmp eq %"class.sh::TIntermNode"** %1071, %902
  br i1 %1075, label %1076, label %1032, !llvm.loop !169

1076:                                             ; preds = %1027, %1032, %1004, %892
  %1077 = phi %"class.sh::TIntermNode"** [ %895, %892 ], [ %930, %1004 ], [ %1028, %1027 ], [ %1070, %1032 ]
  %1078 = ptrtoint %"class.sh::TIntermNode"** %1077 to i64
  store i64 %1078, i64* %868, align 8
  store i64 %900, i64* %867, align 8
  store i64 %897, i64* %877, align 8
  br label %1079

1079:                                             ; preds = %860, %1076
  %1080 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1081 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1080, i64 240) #8
  %1082 = bitcast i8* %1081 to %"class.sh::TIntermBinary"*
  %1083 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %51, align 8
  %1084 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1083, i64 23
  %1085 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1084, align 8
  %1086 = call %"class.sh::TIntermTyped"* %1085(%"class.sh::TIntermSymbol"* %16) #8
  %1087 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 %832) #8
  %1088 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %1087, i64 0, i32 0, i32 0
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1082, i8 zeroext 44, %"class.sh::TIntermTyped"* %1086, %"class.sh::TIntermTyped"* %1088) #8
  %1089 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  br i1 %1, label %1090, label %1566

1090:                                             ; preds = %1079
  %1091 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1089, i64 240) #8
  %1092 = bitcast i8* %1091 to %"class.sh::TIntermBinary"*
  %1093 = bitcast i8* %1081 to %"class.sh::TIntermTyped"*
  %1094 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %52, align 8
  %1095 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1094, i64 23
  %1096 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1095, align 8
  %1097 = call %"class.sh::TIntermTyped"* %1096(%"class.sh::TIntermSymbol"* %34) #8
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1092, i8 zeroext -118, %"class.sh::TIntermTyped"* %1093, %"class.sh::TIntermTyped"* %1097) #8
  %1098 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*** %50, align 8
  %1099 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %1098, i64 27
  %1100 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %1099, align 8
  %1101 = call %"class.sh::TVector.31"* %1100(%"class.sh::TIntermBlock"* %37) #8
  %1102 = ptrtoint i8* %1091 to i64
  %1103 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %1101, i64 0, i32 0, i32 0, i32 1
  %1104 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1103, align 8
  %1105 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %1101, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1106 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1105, align 8
  %1107 = icmp ult %"class.sh::TIntermNode"** %1104, %1106
  %1108 = ptrtoint %"class.sh::TIntermNode"** %1106 to i64
  br i1 %1107, label %1109, label %1114

1109:                                             ; preds = %1090
  %1110 = bitcast %"class.sh::TIntermNode"** %1104 to i64*
  store i64 %1102, i64* %1110, align 8
  %1111 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1104, i64 1
  %1112 = ptrtoint %"class.sh::TIntermNode"** %1111 to i64
  %1113 = bitcast %"class.sh::TIntermNode"*** %1103 to i64*
  store i64 %1112, i64* %1113, align 8
  br label %1328

1114:                                             ; preds = %1090
  %1115 = ptrtoint %"class.sh::TIntermNode"** %1104 to i64
  %1116 = bitcast %"class.sh::TIntermNode"*** %1103 to i64*
  %1117 = bitcast %"class.sh::TVector.31"* %1101 to i64*
  %1118 = load i64, i64* %1117, align 8
  %1119 = sub i64 %1115, %1118
  %1120 = ashr exact i64 %1119, 3
  %1121 = add nsw i64 %1120, 1
  %1122 = icmp ugt i64 %1121, 2305843009213693951
  br i1 %1122, label %1123, label %1125

1123:                                             ; preds = %1114
  %1124 = bitcast %"class.sh::TVector.31"* %1101 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1124) #9
  unreachable

1125:                                             ; preds = %1114
  %1126 = bitcast %"class.sh::TIntermNode"*** %1105 to i64*
  %1127 = sub i64 %1108, %1118
  %1128 = ashr exact i64 %1127, 3
  %1129 = icmp ult i64 %1128, 1152921504606846975
  br i1 %1129, label %1130, label %1135

1130:                                             ; preds = %1125
  %1131 = ashr exact i64 %1127, 2
  %1132 = icmp ult i64 %1131, %1121
  %1133 = select i1 %1132, i64 %1121, i64 %1131
  %1134 = icmp eq i64 %1133, 0
  br i1 %1134, label %1141, label %1135

1135:                                             ; preds = %1130, %1125
  %1136 = phi i64 [ %1133, %1130 ], [ 2305843009213693951, %1125 ]
  %1137 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1138 = shl i64 %1136, 3
  %1139 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1137, i64 %1138) #8
  %1140 = bitcast i8* %1139 to %"class.sh::TIntermNode"**
  br label %1141

1141:                                             ; preds = %1135, %1130
  %1142 = phi i64 [ %1136, %1135 ], [ 0, %1130 ]
  %1143 = phi %"class.sh::TIntermNode"** [ %1140, %1135 ], [ null, %1130 ]
  %1144 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1143, i64 %1120
  %1145 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1143, i64 %1142
  %1146 = ptrtoint %"class.sh::TIntermNode"** %1145 to i64
  %1147 = bitcast %"class.sh::TIntermNode"** %1144 to i64*
  store i64 %1102, i64* %1147, align 8
  %1148 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1144, i64 1
  %1149 = ptrtoint %"class.sh::TIntermNode"** %1148 to i64
  %1150 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %1101, i64 0, i32 0, i32 0, i32 0
  %1151 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1150, align 8
  %1152 = ptrtoint %"class.sh::TIntermNode"** %1151 to i64
  %1153 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1103, align 8
  %1154 = icmp eq %"class.sh::TIntermNode"** %1153, %1151
  br i1 %1154, label %1325, label %1155

1155:                                             ; preds = %1141
  %1156 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1153, i64 -1
  %1157 = ptrtoint %"class.sh::TIntermNode"** %1156 to i64
  %1158 = sub i64 %1157, %1152
  %1159 = lshr i64 %1158, 3
  %1160 = add nuw nsw i64 %1159, 1
  %1161 = icmp ult i64 %1160, 4
  br i1 %1161, label %1255, label %1162

1162:                                             ; preds = %1155
  %1163 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1143, i64 -1
  %1164 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1153, i64 -1
  %1165 = ptrtoint %"class.sh::TIntermNode"** %1164 to i64
  %1166 = sub i64 %1165, %1152
  %1167 = lshr i64 %1166, 3
  %1168 = sub nsw i64 %1120, %1167
  %1169 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1163, i64 %1168
  %1170 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1153, i64 -1
  %1171 = sub nsw i64 0, %1167
  %1172 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1170, i64 %1171
  %1173 = icmp ult %"class.sh::TIntermNode"** %1169, %1153
  %1174 = icmp ult %"class.sh::TIntermNode"** %1172, %1144
  %1175 = and i1 %1173, %1174
  br i1 %1175, label %1255, label %1176

1176:                                             ; preds = %1162
  %1177 = and i64 %1160, 4611686018427387900
  %1178 = sub nsw i64 0, %1177
  %1179 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1144, i64 %1178
  %1180 = sub nsw i64 0, %1177
  %1181 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1153, i64 %1180
  %1182 = add nsw i64 %1177, -4
  %1183 = lshr exact i64 %1182, 2
  %1184 = add nuw nsw i64 %1183, 1
  %1185 = and i64 %1184, 1
  %1186 = icmp eq i64 %1182, 0
  br i1 %1186, label %1231, label %1187

1187:                                             ; preds = %1176
  %1188 = sub nuw nsw i64 %1184, %1185
  %1189 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1144, i64 -1
  %1190 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1153, i64 -1
  %1191 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1144, i64 -1
  %1192 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1153, i64 -1
  br label %1193

1193:                                             ; preds = %1193, %1187
  %1194 = phi i64 [ 0, %1187 ], [ %1228, %1193 ]
  %1195 = phi i64 [ %1188, %1187 ], [ %1229, %1193 ]
  %1196 = sub i64 0, %1194
  %1197 = sub i64 0, %1194
  %1198 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1189, i64 %1196
  %1199 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1190, i64 %1197
  %1200 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1199, i64 -1
  %1201 = bitcast %"class.sh::TIntermNode"** %1200 to <2 x i64>*
  %1202 = load <2 x i64>, <2 x i64>* %1201, align 8, !alias.scope !170
  %1203 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1199, i64 -2
  %1204 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1203, i64 -1
  %1205 = bitcast %"class.sh::TIntermNode"** %1204 to <2 x i64>*
  %1206 = load <2 x i64>, <2 x i64>* %1205, align 8, !alias.scope !170
  %1207 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1198, i64 -1
  %1208 = bitcast %"class.sh::TIntermNode"** %1207 to <2 x i64>*
  store <2 x i64> %1202, <2 x i64>* %1208, align 8, !alias.scope !173, !noalias !170
  %1209 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1198, i64 -2
  %1210 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1209, i64 -1
  %1211 = bitcast %"class.sh::TIntermNode"** %1210 to <2 x i64>*
  store <2 x i64> %1206, <2 x i64>* %1211, align 8, !alias.scope !173, !noalias !170
  %1212 = sub nuw nsw i64 -4, %1194
  %1213 = sub nuw nsw i64 -4, %1194
  %1214 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1191, i64 %1212
  %1215 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1192, i64 %1213
  %1216 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1215, i64 -1
  %1217 = bitcast %"class.sh::TIntermNode"** %1216 to <2 x i64>*
  %1218 = load <2 x i64>, <2 x i64>* %1217, align 8, !alias.scope !170
  %1219 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1215, i64 -2
  %1220 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1219, i64 -1
  %1221 = bitcast %"class.sh::TIntermNode"** %1220 to <2 x i64>*
  %1222 = load <2 x i64>, <2 x i64>* %1221, align 8, !alias.scope !170
  %1223 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1214, i64 -1
  %1224 = bitcast %"class.sh::TIntermNode"** %1223 to <2 x i64>*
  store <2 x i64> %1218, <2 x i64>* %1224, align 8, !alias.scope !173, !noalias !170
  %1225 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1214, i64 -2
  %1226 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1225, i64 -1
  %1227 = bitcast %"class.sh::TIntermNode"** %1226 to <2 x i64>*
  store <2 x i64> %1222, <2 x i64>* %1227, align 8, !alias.scope !173, !noalias !170
  %1228 = add i64 %1194, 8
  %1229 = add i64 %1195, -2
  %1230 = icmp eq i64 %1229, 0
  br i1 %1230, label %1231, label %1193, !llvm.loop !175

1231:                                             ; preds = %1193, %1176
  %1232 = phi i64 [ 0, %1176 ], [ %1228, %1193 ]
  %1233 = icmp eq i64 %1185, 0
  br i1 %1233, label %1253, label %1234

1234:                                             ; preds = %1231
  %1235 = sub i64 0, %1232
  %1236 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1144, i64 -1
  %1237 = sub i64 0, %1232
  %1238 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1153, i64 -1
  %1239 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1236, i64 %1235
  %1240 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1238, i64 %1237
  %1241 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1240, i64 -1
  %1242 = bitcast %"class.sh::TIntermNode"** %1241 to <2 x i64>*
  %1243 = load <2 x i64>, <2 x i64>* %1242, align 8, !alias.scope !170
  %1244 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1240, i64 -2
  %1245 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1244, i64 -1
  %1246 = bitcast %"class.sh::TIntermNode"** %1245 to <2 x i64>*
  %1247 = load <2 x i64>, <2 x i64>* %1246, align 8, !alias.scope !170
  %1248 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1239, i64 -1
  %1249 = bitcast %"class.sh::TIntermNode"** %1248 to <2 x i64>*
  store <2 x i64> %1243, <2 x i64>* %1249, align 8, !alias.scope !173, !noalias !170
  %1250 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1239, i64 -2
  %1251 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1250, i64 -1
  %1252 = bitcast %"class.sh::TIntermNode"** %1251 to <2 x i64>*
  store <2 x i64> %1247, <2 x i64>* %1252, align 8, !alias.scope !173, !noalias !170
  br label %1253

1253:                                             ; preds = %1231, %1234
  %1254 = icmp eq i64 %1160, %1177
  br i1 %1254, label %1325, label %1255

1255:                                             ; preds = %1253, %1162, %1155
  %1256 = phi %"class.sh::TIntermNode"** [ %1144, %1162 ], [ %1144, %1155 ], [ %1179, %1253 ]
  %1257 = phi %"class.sh::TIntermNode"** [ %1153, %1162 ], [ %1153, %1155 ], [ %1181, %1253 ]
  %1258 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1257, i64 -1
  %1259 = ptrtoint %"class.sh::TIntermNode"** %1258 to i64
  %1260 = sub i64 %1259, %1152
  %1261 = lshr i64 %1260, 3
  %1262 = add nuw nsw i64 %1261, 1
  %1263 = and i64 %1262, 7
  %1264 = icmp eq i64 %1263, 0
  br i1 %1264, label %1276, label %1265

1265:                                             ; preds = %1255, %1265
  %1266 = phi %"class.sh::TIntermNode"** [ %1269, %1265 ], [ %1256, %1255 ]
  %1267 = phi %"class.sh::TIntermNode"** [ %1270, %1265 ], [ %1257, %1255 ]
  %1268 = phi i64 [ %1274, %1265 ], [ %1263, %1255 ]
  %1269 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1266, i64 -1
  %1270 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1267, i64 -1
  %1271 = bitcast %"class.sh::TIntermNode"** %1270 to i64*
  %1272 = load i64, i64* %1271, align 8
  %1273 = bitcast %"class.sh::TIntermNode"** %1269 to i64*
  store i64 %1272, i64* %1273, align 8
  %1274 = add i64 %1268, -1
  %1275 = icmp eq i64 %1274, 0
  br i1 %1275, label %1276, label %1265, !llvm.loop !176

1276:                                             ; preds = %1265, %1255
  %1277 = phi %"class.sh::TIntermNode"** [ undef, %1255 ], [ %1269, %1265 ]
  %1278 = phi %"class.sh::TIntermNode"** [ %1256, %1255 ], [ %1269, %1265 ]
  %1279 = phi %"class.sh::TIntermNode"** [ %1257, %1255 ], [ %1270, %1265 ]
  %1280 = icmp ult i64 %1260, 56
  br i1 %1280, label %1325, label %1281

1281:                                             ; preds = %1276, %1281
  %1282 = phi %"class.sh::TIntermNode"** [ %1319, %1281 ], [ %1278, %1276 ]
  %1283 = phi %"class.sh::TIntermNode"** [ %1320, %1281 ], [ %1279, %1276 ]
  %1284 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1282, i64 -1
  %1285 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1283, i64 -1
  %1286 = bitcast %"class.sh::TIntermNode"** %1285 to i64*
  %1287 = load i64, i64* %1286, align 8
  %1288 = bitcast %"class.sh::TIntermNode"** %1284 to i64*
  store i64 %1287, i64* %1288, align 8
  %1289 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1282, i64 -2
  %1290 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1283, i64 -2
  %1291 = bitcast %"class.sh::TIntermNode"** %1290 to i64*
  %1292 = load i64, i64* %1291, align 8
  %1293 = bitcast %"class.sh::TIntermNode"** %1289 to i64*
  store i64 %1292, i64* %1293, align 8
  %1294 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1282, i64 -3
  %1295 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1283, i64 -3
  %1296 = bitcast %"class.sh::TIntermNode"** %1295 to i64*
  %1297 = load i64, i64* %1296, align 8
  %1298 = bitcast %"class.sh::TIntermNode"** %1294 to i64*
  store i64 %1297, i64* %1298, align 8
  %1299 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1282, i64 -4
  %1300 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1283, i64 -4
  %1301 = bitcast %"class.sh::TIntermNode"** %1300 to i64*
  %1302 = load i64, i64* %1301, align 8
  %1303 = bitcast %"class.sh::TIntermNode"** %1299 to i64*
  store i64 %1302, i64* %1303, align 8
  %1304 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1282, i64 -5
  %1305 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1283, i64 -5
  %1306 = bitcast %"class.sh::TIntermNode"** %1305 to i64*
  %1307 = load i64, i64* %1306, align 8
  %1308 = bitcast %"class.sh::TIntermNode"** %1304 to i64*
  store i64 %1307, i64* %1308, align 8
  %1309 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1282, i64 -6
  %1310 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1283, i64 -6
  %1311 = bitcast %"class.sh::TIntermNode"** %1310 to i64*
  %1312 = load i64, i64* %1311, align 8
  %1313 = bitcast %"class.sh::TIntermNode"** %1309 to i64*
  store i64 %1312, i64* %1313, align 8
  %1314 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1282, i64 -7
  %1315 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1283, i64 -7
  %1316 = bitcast %"class.sh::TIntermNode"** %1315 to i64*
  %1317 = load i64, i64* %1316, align 8
  %1318 = bitcast %"class.sh::TIntermNode"** %1314 to i64*
  store i64 %1317, i64* %1318, align 8
  %1319 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1282, i64 -8
  %1320 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1283, i64 -8
  %1321 = bitcast %"class.sh::TIntermNode"** %1320 to i64*
  %1322 = load i64, i64* %1321, align 8
  %1323 = bitcast %"class.sh::TIntermNode"** %1319 to i64*
  store i64 %1322, i64* %1323, align 8
  %1324 = icmp eq %"class.sh::TIntermNode"** %1320, %1151
  br i1 %1324, label %1325, label %1281, !llvm.loop !177

1325:                                             ; preds = %1276, %1281, %1253, %1141
  %1326 = phi %"class.sh::TIntermNode"** [ %1144, %1141 ], [ %1179, %1253 ], [ %1277, %1276 ], [ %1319, %1281 ]
  %1327 = ptrtoint %"class.sh::TIntermNode"** %1326 to i64
  store i64 %1327, i64* %1117, align 8
  store i64 %1149, i64* %1116, align 8
  store i64 %1146, i64* %1126, align 8
  br label %1328

1328:                                             ; preds = %1109, %1325
  %1329 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1330 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1329, i64 40) #8
  %1331 = bitcast i8* %1330 to i32 (...)***
  %1332 = getelementptr inbounds i8, i8* %1330, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1332, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN2sh13TIntermBranchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1331, align 8
  %1333 = getelementptr inbounds i8, i8* %1330, i64 24
  store i8 -122, i8* %1333, align 8
  %1334 = getelementptr inbounds i8, i8* %1330, i64 32
  %1335 = bitcast i8* %1334 to %"class.sh::TIntermTyped"**
  store %"class.sh::TIntermTyped"* null, %"class.sh::TIntermTyped"** %1335, align 8
  %1336 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*** %50, align 8
  %1337 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %1336, i64 27
  %1338 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %1337, align 8
  %1339 = call %"class.sh::TVector.31"* %1338(%"class.sh::TIntermBlock"* %37) #8
  %1340 = ptrtoint i8* %1330 to i64
  %1341 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %1339, i64 0, i32 0, i32 0, i32 1
  %1342 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1341, align 8
  %1343 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %1339, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1344 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1343, align 8
  %1345 = icmp ult %"class.sh::TIntermNode"** %1342, %1344
  %1346 = ptrtoint %"class.sh::TIntermNode"** %1344 to i64
  br i1 %1345, label %1347, label %1352

1347:                                             ; preds = %1328
  %1348 = bitcast %"class.sh::TIntermNode"** %1342 to i64*
  store i64 %1340, i64* %1348, align 8
  %1349 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1342, i64 1
  %1350 = ptrtoint %"class.sh::TIntermNode"** %1349 to i64
  %1351 = bitcast %"class.sh::TIntermNode"*** %1341 to i64*
  store i64 %1350, i64* %1351, align 8
  br label %1803

1352:                                             ; preds = %1328
  %1353 = ptrtoint %"class.sh::TIntermNode"** %1342 to i64
  %1354 = bitcast %"class.sh::TIntermNode"*** %1341 to i64*
  %1355 = bitcast %"class.sh::TVector.31"* %1339 to i64*
  %1356 = load i64, i64* %1355, align 8
  %1357 = sub i64 %1353, %1356
  %1358 = ashr exact i64 %1357, 3
  %1359 = add nsw i64 %1358, 1
  %1360 = icmp ugt i64 %1359, 2305843009213693951
  br i1 %1360, label %1361, label %1363

1361:                                             ; preds = %1352
  %1362 = bitcast %"class.sh::TVector.31"* %1339 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1362) #9
  unreachable

1363:                                             ; preds = %1352
  %1364 = bitcast %"class.sh::TIntermNode"*** %1343 to i64*
  %1365 = sub i64 %1346, %1356
  %1366 = ashr exact i64 %1365, 3
  %1367 = icmp ult i64 %1366, 1152921504606846975
  br i1 %1367, label %1368, label %1373

1368:                                             ; preds = %1363
  %1369 = ashr exact i64 %1365, 2
  %1370 = icmp ult i64 %1369, %1359
  %1371 = select i1 %1370, i64 %1359, i64 %1369
  %1372 = icmp eq i64 %1371, 0
  br i1 %1372, label %1379, label %1373

1373:                                             ; preds = %1368, %1363
  %1374 = phi i64 [ %1371, %1368 ], [ 2305843009213693951, %1363 ]
  %1375 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1376 = shl i64 %1374, 3
  %1377 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1375, i64 %1376) #8
  %1378 = bitcast i8* %1377 to %"class.sh::TIntermNode"**
  br label %1379

1379:                                             ; preds = %1373, %1368
  %1380 = phi i64 [ %1374, %1373 ], [ 0, %1368 ]
  %1381 = phi %"class.sh::TIntermNode"** [ %1378, %1373 ], [ null, %1368 ]
  %1382 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1381, i64 %1358
  %1383 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1381, i64 %1380
  %1384 = ptrtoint %"class.sh::TIntermNode"** %1383 to i64
  %1385 = bitcast %"class.sh::TIntermNode"** %1382 to i64*
  store i64 %1340, i64* %1385, align 8
  %1386 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1382, i64 1
  %1387 = ptrtoint %"class.sh::TIntermNode"** %1386 to i64
  %1388 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %1339, i64 0, i32 0, i32 0, i32 0
  %1389 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1388, align 8
  %1390 = ptrtoint %"class.sh::TIntermNode"** %1389 to i64
  %1391 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1341, align 8
  %1392 = icmp eq %"class.sh::TIntermNode"** %1391, %1389
  br i1 %1392, label %1563, label %1393

1393:                                             ; preds = %1379
  %1394 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1391, i64 -1
  %1395 = ptrtoint %"class.sh::TIntermNode"** %1394 to i64
  %1396 = sub i64 %1395, %1390
  %1397 = lshr i64 %1396, 3
  %1398 = add nuw nsw i64 %1397, 1
  %1399 = icmp ult i64 %1398, 4
  br i1 %1399, label %1493, label %1400

1400:                                             ; preds = %1393
  %1401 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1381, i64 -1
  %1402 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1391, i64 -1
  %1403 = ptrtoint %"class.sh::TIntermNode"** %1402 to i64
  %1404 = sub i64 %1403, %1390
  %1405 = lshr i64 %1404, 3
  %1406 = sub nsw i64 %1358, %1405
  %1407 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1401, i64 %1406
  %1408 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1391, i64 -1
  %1409 = sub nsw i64 0, %1405
  %1410 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1408, i64 %1409
  %1411 = icmp ult %"class.sh::TIntermNode"** %1407, %1391
  %1412 = icmp ult %"class.sh::TIntermNode"** %1410, %1382
  %1413 = and i1 %1411, %1412
  br i1 %1413, label %1493, label %1414

1414:                                             ; preds = %1400
  %1415 = and i64 %1398, 4611686018427387900
  %1416 = sub nsw i64 0, %1415
  %1417 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1382, i64 %1416
  %1418 = sub nsw i64 0, %1415
  %1419 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1391, i64 %1418
  %1420 = add nsw i64 %1415, -4
  %1421 = lshr exact i64 %1420, 2
  %1422 = add nuw nsw i64 %1421, 1
  %1423 = and i64 %1422, 1
  %1424 = icmp eq i64 %1420, 0
  br i1 %1424, label %1469, label %1425

1425:                                             ; preds = %1414
  %1426 = sub nuw nsw i64 %1422, %1423
  %1427 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1382, i64 -1
  %1428 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1391, i64 -1
  %1429 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1382, i64 -1
  %1430 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1391, i64 -1
  br label %1431

1431:                                             ; preds = %1431, %1425
  %1432 = phi i64 [ 0, %1425 ], [ %1466, %1431 ]
  %1433 = phi i64 [ %1426, %1425 ], [ %1467, %1431 ]
  %1434 = sub i64 0, %1432
  %1435 = sub i64 0, %1432
  %1436 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1427, i64 %1434
  %1437 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1428, i64 %1435
  %1438 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1437, i64 -1
  %1439 = bitcast %"class.sh::TIntermNode"** %1438 to <2 x i64>*
  %1440 = load <2 x i64>, <2 x i64>* %1439, align 8, !alias.scope !178
  %1441 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1437, i64 -2
  %1442 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1441, i64 -1
  %1443 = bitcast %"class.sh::TIntermNode"** %1442 to <2 x i64>*
  %1444 = load <2 x i64>, <2 x i64>* %1443, align 8, !alias.scope !178
  %1445 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1436, i64 -1
  %1446 = bitcast %"class.sh::TIntermNode"** %1445 to <2 x i64>*
  store <2 x i64> %1440, <2 x i64>* %1446, align 8, !alias.scope !181, !noalias !178
  %1447 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1436, i64 -2
  %1448 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1447, i64 -1
  %1449 = bitcast %"class.sh::TIntermNode"** %1448 to <2 x i64>*
  store <2 x i64> %1444, <2 x i64>* %1449, align 8, !alias.scope !181, !noalias !178
  %1450 = sub nuw nsw i64 -4, %1432
  %1451 = sub nuw nsw i64 -4, %1432
  %1452 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1429, i64 %1450
  %1453 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1430, i64 %1451
  %1454 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1453, i64 -1
  %1455 = bitcast %"class.sh::TIntermNode"** %1454 to <2 x i64>*
  %1456 = load <2 x i64>, <2 x i64>* %1455, align 8, !alias.scope !178
  %1457 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1453, i64 -2
  %1458 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1457, i64 -1
  %1459 = bitcast %"class.sh::TIntermNode"** %1458 to <2 x i64>*
  %1460 = load <2 x i64>, <2 x i64>* %1459, align 8, !alias.scope !178
  %1461 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1452, i64 -1
  %1462 = bitcast %"class.sh::TIntermNode"** %1461 to <2 x i64>*
  store <2 x i64> %1456, <2 x i64>* %1462, align 8, !alias.scope !181, !noalias !178
  %1463 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1452, i64 -2
  %1464 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1463, i64 -1
  %1465 = bitcast %"class.sh::TIntermNode"** %1464 to <2 x i64>*
  store <2 x i64> %1460, <2 x i64>* %1465, align 8, !alias.scope !181, !noalias !178
  %1466 = add i64 %1432, 8
  %1467 = add i64 %1433, -2
  %1468 = icmp eq i64 %1467, 0
  br i1 %1468, label %1469, label %1431, !llvm.loop !183

1469:                                             ; preds = %1431, %1414
  %1470 = phi i64 [ 0, %1414 ], [ %1466, %1431 ]
  %1471 = icmp eq i64 %1423, 0
  br i1 %1471, label %1491, label %1472

1472:                                             ; preds = %1469
  %1473 = sub i64 0, %1470
  %1474 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1382, i64 -1
  %1475 = sub i64 0, %1470
  %1476 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1391, i64 -1
  %1477 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1474, i64 %1473
  %1478 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1476, i64 %1475
  %1479 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1478, i64 -1
  %1480 = bitcast %"class.sh::TIntermNode"** %1479 to <2 x i64>*
  %1481 = load <2 x i64>, <2 x i64>* %1480, align 8, !alias.scope !178
  %1482 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1478, i64 -2
  %1483 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1482, i64 -1
  %1484 = bitcast %"class.sh::TIntermNode"** %1483 to <2 x i64>*
  %1485 = load <2 x i64>, <2 x i64>* %1484, align 8, !alias.scope !178
  %1486 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1477, i64 -1
  %1487 = bitcast %"class.sh::TIntermNode"** %1486 to <2 x i64>*
  store <2 x i64> %1481, <2 x i64>* %1487, align 8, !alias.scope !181, !noalias !178
  %1488 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1477, i64 -2
  %1489 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1488, i64 -1
  %1490 = bitcast %"class.sh::TIntermNode"** %1489 to <2 x i64>*
  store <2 x i64> %1485, <2 x i64>* %1490, align 8, !alias.scope !181, !noalias !178
  br label %1491

1491:                                             ; preds = %1469, %1472
  %1492 = icmp eq i64 %1398, %1415
  br i1 %1492, label %1563, label %1493

1493:                                             ; preds = %1491, %1400, %1393
  %1494 = phi %"class.sh::TIntermNode"** [ %1382, %1400 ], [ %1382, %1393 ], [ %1417, %1491 ]
  %1495 = phi %"class.sh::TIntermNode"** [ %1391, %1400 ], [ %1391, %1393 ], [ %1419, %1491 ]
  %1496 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1495, i64 -1
  %1497 = ptrtoint %"class.sh::TIntermNode"** %1496 to i64
  %1498 = sub i64 %1497, %1390
  %1499 = lshr i64 %1498, 3
  %1500 = add nuw nsw i64 %1499, 1
  %1501 = and i64 %1500, 7
  %1502 = icmp eq i64 %1501, 0
  br i1 %1502, label %1514, label %1503

1503:                                             ; preds = %1493, %1503
  %1504 = phi %"class.sh::TIntermNode"** [ %1507, %1503 ], [ %1494, %1493 ]
  %1505 = phi %"class.sh::TIntermNode"** [ %1508, %1503 ], [ %1495, %1493 ]
  %1506 = phi i64 [ %1512, %1503 ], [ %1501, %1493 ]
  %1507 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1504, i64 -1
  %1508 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1505, i64 -1
  %1509 = bitcast %"class.sh::TIntermNode"** %1508 to i64*
  %1510 = load i64, i64* %1509, align 8
  %1511 = bitcast %"class.sh::TIntermNode"** %1507 to i64*
  store i64 %1510, i64* %1511, align 8
  %1512 = add i64 %1506, -1
  %1513 = icmp eq i64 %1512, 0
  br i1 %1513, label %1514, label %1503, !llvm.loop !184

1514:                                             ; preds = %1503, %1493
  %1515 = phi %"class.sh::TIntermNode"** [ undef, %1493 ], [ %1507, %1503 ]
  %1516 = phi %"class.sh::TIntermNode"** [ %1494, %1493 ], [ %1507, %1503 ]
  %1517 = phi %"class.sh::TIntermNode"** [ %1495, %1493 ], [ %1508, %1503 ]
  %1518 = icmp ult i64 %1498, 56
  br i1 %1518, label %1563, label %1519

1519:                                             ; preds = %1514, %1519
  %1520 = phi %"class.sh::TIntermNode"** [ %1557, %1519 ], [ %1516, %1514 ]
  %1521 = phi %"class.sh::TIntermNode"** [ %1558, %1519 ], [ %1517, %1514 ]
  %1522 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1520, i64 -1
  %1523 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1521, i64 -1
  %1524 = bitcast %"class.sh::TIntermNode"** %1523 to i64*
  %1525 = load i64, i64* %1524, align 8
  %1526 = bitcast %"class.sh::TIntermNode"** %1522 to i64*
  store i64 %1525, i64* %1526, align 8
  %1527 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1520, i64 -2
  %1528 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1521, i64 -2
  %1529 = bitcast %"class.sh::TIntermNode"** %1528 to i64*
  %1530 = load i64, i64* %1529, align 8
  %1531 = bitcast %"class.sh::TIntermNode"** %1527 to i64*
  store i64 %1530, i64* %1531, align 8
  %1532 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1520, i64 -3
  %1533 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1521, i64 -3
  %1534 = bitcast %"class.sh::TIntermNode"** %1533 to i64*
  %1535 = load i64, i64* %1534, align 8
  %1536 = bitcast %"class.sh::TIntermNode"** %1532 to i64*
  store i64 %1535, i64* %1536, align 8
  %1537 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1520, i64 -4
  %1538 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1521, i64 -4
  %1539 = bitcast %"class.sh::TIntermNode"** %1538 to i64*
  %1540 = load i64, i64* %1539, align 8
  %1541 = bitcast %"class.sh::TIntermNode"** %1537 to i64*
  store i64 %1540, i64* %1541, align 8
  %1542 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1520, i64 -5
  %1543 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1521, i64 -5
  %1544 = bitcast %"class.sh::TIntermNode"** %1543 to i64*
  %1545 = load i64, i64* %1544, align 8
  %1546 = bitcast %"class.sh::TIntermNode"** %1542 to i64*
  store i64 %1545, i64* %1546, align 8
  %1547 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1520, i64 -6
  %1548 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1521, i64 -6
  %1549 = bitcast %"class.sh::TIntermNode"** %1548 to i64*
  %1550 = load i64, i64* %1549, align 8
  %1551 = bitcast %"class.sh::TIntermNode"** %1547 to i64*
  store i64 %1550, i64* %1551, align 8
  %1552 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1520, i64 -7
  %1553 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1521, i64 -7
  %1554 = bitcast %"class.sh::TIntermNode"** %1553 to i64*
  %1555 = load i64, i64* %1554, align 8
  %1556 = bitcast %"class.sh::TIntermNode"** %1552 to i64*
  store i64 %1555, i64* %1556, align 8
  %1557 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1520, i64 -8
  %1558 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1521, i64 -8
  %1559 = bitcast %"class.sh::TIntermNode"** %1558 to i64*
  %1560 = load i64, i64* %1559, align 8
  %1561 = bitcast %"class.sh::TIntermNode"** %1557 to i64*
  store i64 %1560, i64* %1561, align 8
  %1562 = icmp eq %"class.sh::TIntermNode"** %1558, %1389
  br i1 %1562, label %1563, label %1519, !llvm.loop !185

1563:                                             ; preds = %1514, %1519, %1491, %1379
  %1564 = phi %"class.sh::TIntermNode"** [ %1382, %1379 ], [ %1417, %1491 ], [ %1515, %1514 ], [ %1557, %1519 ]
  %1565 = ptrtoint %"class.sh::TIntermNode"** %1564 to i64
  store i64 %1565, i64* %1355, align 8
  store i64 %1387, i64* %1354, align 8
  store i64 %1384, i64* %1364, align 8
  br label %1803

1566:                                             ; preds = %1079
  %1567 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1089, i64 40) #8
  %1568 = bitcast i8* %1567 to i32 (...)***
  %1569 = getelementptr inbounds i8, i8* %1567, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1569, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN2sh13TIntermBranchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1568, align 8
  %1570 = getelementptr inbounds i8, i8* %1567, i64 24
  store i8 -122, i8* %1570, align 8
  %1571 = getelementptr inbounds i8, i8* %1567, i64 32
  %1572 = bitcast i8* %1571 to i8**
  store i8* %1081, i8** %1572, align 8
  %1573 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*** %50, align 8
  %1574 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %1573, i64 27
  %1575 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %1574, align 8
  %1576 = call %"class.sh::TVector.31"* %1575(%"class.sh::TIntermBlock"* %37) #8
  %1577 = ptrtoint i8* %1567 to i64
  %1578 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %1576, i64 0, i32 0, i32 0, i32 1
  %1579 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1578, align 8
  %1580 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %1576, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1581 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1580, align 8
  %1582 = icmp ult %"class.sh::TIntermNode"** %1579, %1581
  %1583 = ptrtoint %"class.sh::TIntermNode"** %1581 to i64
  br i1 %1582, label %1584, label %1589

1584:                                             ; preds = %1566
  %1585 = bitcast %"class.sh::TIntermNode"** %1579 to i64*
  store i64 %1577, i64* %1585, align 8
  %1586 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1579, i64 1
  %1587 = ptrtoint %"class.sh::TIntermNode"** %1586 to i64
  %1588 = bitcast %"class.sh::TIntermNode"*** %1578 to i64*
  store i64 %1587, i64* %1588, align 8
  br label %1803

1589:                                             ; preds = %1566
  %1590 = ptrtoint %"class.sh::TIntermNode"** %1579 to i64
  %1591 = bitcast %"class.sh::TIntermNode"*** %1578 to i64*
  %1592 = bitcast %"class.sh::TVector.31"* %1576 to i64*
  %1593 = load i64, i64* %1592, align 8
  %1594 = sub i64 %1590, %1593
  %1595 = ashr exact i64 %1594, 3
  %1596 = add nsw i64 %1595, 1
  %1597 = icmp ugt i64 %1596, 2305843009213693951
  br i1 %1597, label %1598, label %1600

1598:                                             ; preds = %1589
  %1599 = bitcast %"class.sh::TVector.31"* %1576 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1599) #9
  unreachable

1600:                                             ; preds = %1589
  %1601 = bitcast %"class.sh::TIntermNode"*** %1580 to i64*
  %1602 = sub i64 %1583, %1593
  %1603 = ashr exact i64 %1602, 3
  %1604 = icmp ult i64 %1603, 1152921504606846975
  br i1 %1604, label %1605, label %1610

1605:                                             ; preds = %1600
  %1606 = ashr exact i64 %1602, 2
  %1607 = icmp ult i64 %1606, %1596
  %1608 = select i1 %1607, i64 %1596, i64 %1606
  %1609 = icmp eq i64 %1608, 0
  br i1 %1609, label %1616, label %1610

1610:                                             ; preds = %1605, %1600
  %1611 = phi i64 [ %1608, %1605 ], [ 2305843009213693951, %1600 ]
  %1612 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1613 = shl i64 %1611, 3
  %1614 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1612, i64 %1613) #8
  %1615 = bitcast i8* %1614 to %"class.sh::TIntermNode"**
  br label %1616

1616:                                             ; preds = %1610, %1605
  %1617 = phi i64 [ %1611, %1610 ], [ 0, %1605 ]
  %1618 = phi %"class.sh::TIntermNode"** [ %1615, %1610 ], [ null, %1605 ]
  %1619 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1618, i64 %1595
  %1620 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1618, i64 %1617
  %1621 = ptrtoint %"class.sh::TIntermNode"** %1620 to i64
  %1622 = bitcast %"class.sh::TIntermNode"** %1619 to i64*
  store i64 %1577, i64* %1622, align 8
  %1623 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1619, i64 1
  %1624 = ptrtoint %"class.sh::TIntermNode"** %1623 to i64
  %1625 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %1576, i64 0, i32 0, i32 0, i32 0
  %1626 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1625, align 8
  %1627 = ptrtoint %"class.sh::TIntermNode"** %1626 to i64
  %1628 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1578, align 8
  %1629 = icmp eq %"class.sh::TIntermNode"** %1628, %1626
  br i1 %1629, label %1800, label %1630

1630:                                             ; preds = %1616
  %1631 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1628, i64 -1
  %1632 = ptrtoint %"class.sh::TIntermNode"** %1631 to i64
  %1633 = sub i64 %1632, %1627
  %1634 = lshr i64 %1633, 3
  %1635 = add nuw nsw i64 %1634, 1
  %1636 = icmp ult i64 %1635, 4
  br i1 %1636, label %1730, label %1637

1637:                                             ; preds = %1630
  %1638 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1618, i64 -1
  %1639 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1628, i64 -1
  %1640 = ptrtoint %"class.sh::TIntermNode"** %1639 to i64
  %1641 = sub i64 %1640, %1627
  %1642 = lshr i64 %1641, 3
  %1643 = sub nsw i64 %1595, %1642
  %1644 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1638, i64 %1643
  %1645 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1628, i64 -1
  %1646 = sub nsw i64 0, %1642
  %1647 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1645, i64 %1646
  %1648 = icmp ult %"class.sh::TIntermNode"** %1644, %1628
  %1649 = icmp ult %"class.sh::TIntermNode"** %1647, %1619
  %1650 = and i1 %1648, %1649
  br i1 %1650, label %1730, label %1651

1651:                                             ; preds = %1637
  %1652 = and i64 %1635, 4611686018427387900
  %1653 = sub nsw i64 0, %1652
  %1654 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1619, i64 %1653
  %1655 = sub nsw i64 0, %1652
  %1656 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1628, i64 %1655
  %1657 = add nsw i64 %1652, -4
  %1658 = lshr exact i64 %1657, 2
  %1659 = add nuw nsw i64 %1658, 1
  %1660 = and i64 %1659, 1
  %1661 = icmp eq i64 %1657, 0
  br i1 %1661, label %1706, label %1662

1662:                                             ; preds = %1651
  %1663 = sub nuw nsw i64 %1659, %1660
  %1664 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1619, i64 -1
  %1665 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1628, i64 -1
  %1666 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1619, i64 -1
  %1667 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1628, i64 -1
  br label %1668

1668:                                             ; preds = %1668, %1662
  %1669 = phi i64 [ 0, %1662 ], [ %1703, %1668 ]
  %1670 = phi i64 [ %1663, %1662 ], [ %1704, %1668 ]
  %1671 = sub i64 0, %1669
  %1672 = sub i64 0, %1669
  %1673 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1664, i64 %1671
  %1674 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1665, i64 %1672
  %1675 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1674, i64 -1
  %1676 = bitcast %"class.sh::TIntermNode"** %1675 to <2 x i64>*
  %1677 = load <2 x i64>, <2 x i64>* %1676, align 8, !alias.scope !186
  %1678 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1674, i64 -2
  %1679 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1678, i64 -1
  %1680 = bitcast %"class.sh::TIntermNode"** %1679 to <2 x i64>*
  %1681 = load <2 x i64>, <2 x i64>* %1680, align 8, !alias.scope !186
  %1682 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1673, i64 -1
  %1683 = bitcast %"class.sh::TIntermNode"** %1682 to <2 x i64>*
  store <2 x i64> %1677, <2 x i64>* %1683, align 8, !alias.scope !189, !noalias !186
  %1684 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1673, i64 -2
  %1685 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1684, i64 -1
  %1686 = bitcast %"class.sh::TIntermNode"** %1685 to <2 x i64>*
  store <2 x i64> %1681, <2 x i64>* %1686, align 8, !alias.scope !189, !noalias !186
  %1687 = sub nuw nsw i64 -4, %1669
  %1688 = sub nuw nsw i64 -4, %1669
  %1689 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1666, i64 %1687
  %1690 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1667, i64 %1688
  %1691 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1690, i64 -1
  %1692 = bitcast %"class.sh::TIntermNode"** %1691 to <2 x i64>*
  %1693 = load <2 x i64>, <2 x i64>* %1692, align 8, !alias.scope !186
  %1694 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1690, i64 -2
  %1695 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1694, i64 -1
  %1696 = bitcast %"class.sh::TIntermNode"** %1695 to <2 x i64>*
  %1697 = load <2 x i64>, <2 x i64>* %1696, align 8, !alias.scope !186
  %1698 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1689, i64 -1
  %1699 = bitcast %"class.sh::TIntermNode"** %1698 to <2 x i64>*
  store <2 x i64> %1693, <2 x i64>* %1699, align 8, !alias.scope !189, !noalias !186
  %1700 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1689, i64 -2
  %1701 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1700, i64 -1
  %1702 = bitcast %"class.sh::TIntermNode"** %1701 to <2 x i64>*
  store <2 x i64> %1697, <2 x i64>* %1702, align 8, !alias.scope !189, !noalias !186
  %1703 = add i64 %1669, 8
  %1704 = add i64 %1670, -2
  %1705 = icmp eq i64 %1704, 0
  br i1 %1705, label %1706, label %1668, !llvm.loop !191

1706:                                             ; preds = %1668, %1651
  %1707 = phi i64 [ 0, %1651 ], [ %1703, %1668 ]
  %1708 = icmp eq i64 %1660, 0
  br i1 %1708, label %1728, label %1709

1709:                                             ; preds = %1706
  %1710 = sub i64 0, %1707
  %1711 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1619, i64 -1
  %1712 = sub i64 0, %1707
  %1713 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1628, i64 -1
  %1714 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1711, i64 %1710
  %1715 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1713, i64 %1712
  %1716 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1715, i64 -1
  %1717 = bitcast %"class.sh::TIntermNode"** %1716 to <2 x i64>*
  %1718 = load <2 x i64>, <2 x i64>* %1717, align 8, !alias.scope !186
  %1719 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1715, i64 -2
  %1720 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1719, i64 -1
  %1721 = bitcast %"class.sh::TIntermNode"** %1720 to <2 x i64>*
  %1722 = load <2 x i64>, <2 x i64>* %1721, align 8, !alias.scope !186
  %1723 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1714, i64 -1
  %1724 = bitcast %"class.sh::TIntermNode"** %1723 to <2 x i64>*
  store <2 x i64> %1718, <2 x i64>* %1724, align 8, !alias.scope !189, !noalias !186
  %1725 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1714, i64 -2
  %1726 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1725, i64 -1
  %1727 = bitcast %"class.sh::TIntermNode"** %1726 to <2 x i64>*
  store <2 x i64> %1722, <2 x i64>* %1727, align 8, !alias.scope !189, !noalias !186
  br label %1728

1728:                                             ; preds = %1706, %1709
  %1729 = icmp eq i64 %1635, %1652
  br i1 %1729, label %1800, label %1730

1730:                                             ; preds = %1728, %1637, %1630
  %1731 = phi %"class.sh::TIntermNode"** [ %1619, %1637 ], [ %1619, %1630 ], [ %1654, %1728 ]
  %1732 = phi %"class.sh::TIntermNode"** [ %1628, %1637 ], [ %1628, %1630 ], [ %1656, %1728 ]
  %1733 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1732, i64 -1
  %1734 = ptrtoint %"class.sh::TIntermNode"** %1733 to i64
  %1735 = sub i64 %1734, %1627
  %1736 = lshr i64 %1735, 3
  %1737 = add nuw nsw i64 %1736, 1
  %1738 = and i64 %1737, 7
  %1739 = icmp eq i64 %1738, 0
  br i1 %1739, label %1751, label %1740

1740:                                             ; preds = %1730, %1740
  %1741 = phi %"class.sh::TIntermNode"** [ %1744, %1740 ], [ %1731, %1730 ]
  %1742 = phi %"class.sh::TIntermNode"** [ %1745, %1740 ], [ %1732, %1730 ]
  %1743 = phi i64 [ %1749, %1740 ], [ %1738, %1730 ]
  %1744 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1741, i64 -1
  %1745 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1742, i64 -1
  %1746 = bitcast %"class.sh::TIntermNode"** %1745 to i64*
  %1747 = load i64, i64* %1746, align 8
  %1748 = bitcast %"class.sh::TIntermNode"** %1744 to i64*
  store i64 %1747, i64* %1748, align 8
  %1749 = add i64 %1743, -1
  %1750 = icmp eq i64 %1749, 0
  br i1 %1750, label %1751, label %1740, !llvm.loop !192

1751:                                             ; preds = %1740, %1730
  %1752 = phi %"class.sh::TIntermNode"** [ undef, %1730 ], [ %1744, %1740 ]
  %1753 = phi %"class.sh::TIntermNode"** [ %1731, %1730 ], [ %1744, %1740 ]
  %1754 = phi %"class.sh::TIntermNode"** [ %1732, %1730 ], [ %1745, %1740 ]
  %1755 = icmp ult i64 %1735, 56
  br i1 %1755, label %1800, label %1756

1756:                                             ; preds = %1751, %1756
  %1757 = phi %"class.sh::TIntermNode"** [ %1794, %1756 ], [ %1753, %1751 ]
  %1758 = phi %"class.sh::TIntermNode"** [ %1795, %1756 ], [ %1754, %1751 ]
  %1759 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1757, i64 -1
  %1760 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1758, i64 -1
  %1761 = bitcast %"class.sh::TIntermNode"** %1760 to i64*
  %1762 = load i64, i64* %1761, align 8
  %1763 = bitcast %"class.sh::TIntermNode"** %1759 to i64*
  store i64 %1762, i64* %1763, align 8
  %1764 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1757, i64 -2
  %1765 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1758, i64 -2
  %1766 = bitcast %"class.sh::TIntermNode"** %1765 to i64*
  %1767 = load i64, i64* %1766, align 8
  %1768 = bitcast %"class.sh::TIntermNode"** %1764 to i64*
  store i64 %1767, i64* %1768, align 8
  %1769 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1757, i64 -3
  %1770 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1758, i64 -3
  %1771 = bitcast %"class.sh::TIntermNode"** %1770 to i64*
  %1772 = load i64, i64* %1771, align 8
  %1773 = bitcast %"class.sh::TIntermNode"** %1769 to i64*
  store i64 %1772, i64* %1773, align 8
  %1774 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1757, i64 -4
  %1775 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1758, i64 -4
  %1776 = bitcast %"class.sh::TIntermNode"** %1775 to i64*
  %1777 = load i64, i64* %1776, align 8
  %1778 = bitcast %"class.sh::TIntermNode"** %1774 to i64*
  store i64 %1777, i64* %1778, align 8
  %1779 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1757, i64 -5
  %1780 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1758, i64 -5
  %1781 = bitcast %"class.sh::TIntermNode"** %1780 to i64*
  %1782 = load i64, i64* %1781, align 8
  %1783 = bitcast %"class.sh::TIntermNode"** %1779 to i64*
  store i64 %1782, i64* %1783, align 8
  %1784 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1757, i64 -6
  %1785 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1758, i64 -6
  %1786 = bitcast %"class.sh::TIntermNode"** %1785 to i64*
  %1787 = load i64, i64* %1786, align 8
  %1788 = bitcast %"class.sh::TIntermNode"** %1784 to i64*
  store i64 %1787, i64* %1788, align 8
  %1789 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1757, i64 -7
  %1790 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1758, i64 -7
  %1791 = bitcast %"class.sh::TIntermNode"** %1790 to i64*
  %1792 = load i64, i64* %1791, align 8
  %1793 = bitcast %"class.sh::TIntermNode"** %1789 to i64*
  store i64 %1792, i64* %1793, align 8
  %1794 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1757, i64 -8
  %1795 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1758, i64 -8
  %1796 = bitcast %"class.sh::TIntermNode"** %1795 to i64*
  %1797 = load i64, i64* %1796, align 8
  %1798 = bitcast %"class.sh::TIntermNode"** %1794 to i64*
  store i64 %1797, i64* %1798, align 8
  %1799 = icmp eq %"class.sh::TIntermNode"** %1795, %1626
  br i1 %1799, label %1800, label %1756, !llvm.loop !193

1800:                                             ; preds = %1751, %1756, %1728, %1616
  %1801 = phi %"class.sh::TIntermNode"** [ %1619, %1616 ], [ %1654, %1728 ], [ %1752, %1751 ], [ %1794, %1756 ]
  %1802 = ptrtoint %"class.sh::TIntermNode"** %1801 to i64
  store i64 %1802, i64* %1592, align 8
  store i64 %1624, i64* %1591, align 8
  store i64 %1621, i64* %1601, align 8
  br label %1803

1803:                                             ; preds = %1800, %1584, %1563, %1347
  %1804 = add nuw nsw i32 %832, 1
  %1805 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1806 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1805, i64 32) #8
  %1807 = icmp eq i32 %1804, %9
  br i1 %1807, label %53, label %830

1808:                                             ; preds = %771
  %1809 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %829, i64 240) #8
  %1810 = bitcast i8* %1809 to %"class.sh::TIntermBinary"*
  %1811 = bitcast i8* %810 to %"class.sh::TIntermTyped"*
  %1812 = bitcast %"class.sh::TIntermSymbol"* %34 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %1813 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %1812, align 8
  %1814 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1813, i64 23
  %1815 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1814, align 8
  %1816 = call %"class.sh::TIntermTyped"* %1815(%"class.sh::TIntermSymbol"* %34) #8
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1810, i8 zeroext -118, %"class.sh::TIntermTyped"* %1811, %"class.sh::TIntermTyped"* %1816) #8
  %1817 = bitcast i8* %794 to %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)***
  %1818 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*** %1817, align 8
  %1819 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %1818, i64 27
  %1820 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %1819, align 8
  %1821 = call %"class.sh::TVector.31"* %1820(%"class.sh::TIntermBlock"* %795) #8
  %1822 = ptrtoint i8* %1809 to i64
  %1823 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %1821, i64 0, i32 0, i32 0, i32 1
  %1824 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1823, align 8
  %1825 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %1821, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1826 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1825, align 8
  %1827 = icmp ult %"class.sh::TIntermNode"** %1824, %1826
  %1828 = ptrtoint %"class.sh::TIntermNode"** %1826 to i64
  br i1 %1827, label %1829, label %1834

1829:                                             ; preds = %1808
  %1830 = bitcast %"class.sh::TIntermNode"** %1824 to i64*
  store i64 %1822, i64* %1830, align 8
  %1831 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1824, i64 1
  %1832 = ptrtoint %"class.sh::TIntermNode"** %1831 to i64
  %1833 = bitcast %"class.sh::TIntermNode"*** %1823 to i64*
  store i64 %1832, i64* %1833, align 8
  br label %2047

1834:                                             ; preds = %1808
  %1835 = ptrtoint %"class.sh::TIntermNode"** %1824 to i64
  %1836 = bitcast %"class.sh::TIntermNode"*** %1823 to i64*
  %1837 = bitcast %"class.sh::TVector.31"* %1821 to i64*
  %1838 = load i64, i64* %1837, align 8
  %1839 = sub i64 %1835, %1838
  %1840 = ashr exact i64 %1839, 3
  %1841 = add nsw i64 %1840, 1
  %1842 = icmp ugt i64 %1841, 2305843009213693951
  br i1 %1842, label %1843, label %1845

1843:                                             ; preds = %1834
  %1844 = bitcast %"class.sh::TVector.31"* %1821 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1844) #9
  unreachable

1845:                                             ; preds = %1834
  %1846 = bitcast %"class.sh::TIntermNode"*** %1825 to i64*
  %1847 = sub i64 %1828, %1838
  %1848 = ashr exact i64 %1847, 3
  %1849 = icmp ult i64 %1848, 1152921504606846975
  br i1 %1849, label %1850, label %1855

1850:                                             ; preds = %1845
  %1851 = ashr exact i64 %1847, 2
  %1852 = icmp ult i64 %1851, %1841
  %1853 = select i1 %1852, i64 %1841, i64 %1851
  %1854 = icmp eq i64 %1853, 0
  br i1 %1854, label %1861, label %1855

1855:                                             ; preds = %1850, %1845
  %1856 = phi i64 [ %1853, %1850 ], [ 2305843009213693951, %1845 ]
  %1857 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %1858 = shl i64 %1856, 3
  %1859 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1857, i64 %1858) #8
  %1860 = bitcast i8* %1859 to %"class.sh::TIntermNode"**
  br label %1861

1861:                                             ; preds = %1855, %1850
  %1862 = phi i64 [ %1856, %1855 ], [ 0, %1850 ]
  %1863 = phi %"class.sh::TIntermNode"** [ %1860, %1855 ], [ null, %1850 ]
  %1864 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1863, i64 %1840
  %1865 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1863, i64 %1862
  %1866 = ptrtoint %"class.sh::TIntermNode"** %1865 to i64
  %1867 = bitcast %"class.sh::TIntermNode"** %1864 to i64*
  store i64 %1822, i64* %1867, align 8
  %1868 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1864, i64 1
  %1869 = ptrtoint %"class.sh::TIntermNode"** %1868 to i64
  %1870 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %1821, i64 0, i32 0, i32 0, i32 0
  %1871 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1870, align 8
  %1872 = ptrtoint %"class.sh::TIntermNode"** %1871 to i64
  %1873 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1823, align 8
  %1874 = icmp eq %"class.sh::TIntermNode"** %1873, %1871
  br i1 %1874, label %2044, label %1875

1875:                                             ; preds = %1861
  %1876 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1873, i64 -1
  %1877 = ptrtoint %"class.sh::TIntermNode"** %1876 to i64
  %1878 = sub i64 %1877, %1872
  %1879 = lshr i64 %1878, 3
  %1880 = add nuw nsw i64 %1879, 1
  %1881 = icmp ult i64 %1880, 4
  br i1 %1881, label %1974, label %1882

1882:                                             ; preds = %1875
  %1883 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1873, i64 -1
  %1884 = ptrtoint %"class.sh::TIntermNode"** %1883 to i64
  %1885 = sub i64 %1884, %1872
  %1886 = lshr i64 %1885, 3
  %1887 = xor i64 %1886, -1
  %1888 = add nsw i64 %1840, %1887
  %1889 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1863, i64 %1888
  %1890 = xor i64 %1886, -1
  %1891 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1873, i64 %1890
  %1892 = icmp ult %"class.sh::TIntermNode"** %1889, %1873
  %1893 = icmp ult %"class.sh::TIntermNode"** %1891, %1864
  %1894 = and i1 %1892, %1893
  br i1 %1894, label %1974, label %1895

1895:                                             ; preds = %1882
  %1896 = and i64 %1880, 4611686018427387900
  %1897 = sub nsw i64 0, %1896
  %1898 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1864, i64 %1897
  %1899 = sub nsw i64 0, %1896
  %1900 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1873, i64 %1899
  %1901 = add nsw i64 %1896, -4
  %1902 = lshr exact i64 %1901, 2
  %1903 = add nuw nsw i64 %1902, 1
  %1904 = and i64 %1903, 1
  %1905 = icmp eq i64 %1901, 0
  br i1 %1905, label %1950, label %1906

1906:                                             ; preds = %1895
  %1907 = sub nuw nsw i64 %1903, %1904
  %1908 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1864, i64 -1
  %1909 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1873, i64 -1
  %1910 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1864, i64 -1
  %1911 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1873, i64 -1
  br label %1912

1912:                                             ; preds = %1912, %1906
  %1913 = phi i64 [ 0, %1906 ], [ %1947, %1912 ]
  %1914 = phi i64 [ %1907, %1906 ], [ %1948, %1912 ]
  %1915 = sub i64 0, %1913
  %1916 = sub i64 0, %1913
  %1917 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1908, i64 %1915
  %1918 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1909, i64 %1916
  %1919 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1918, i64 -1
  %1920 = bitcast %"class.sh::TIntermNode"** %1919 to <2 x i64>*
  %1921 = load <2 x i64>, <2 x i64>* %1920, align 8, !alias.scope !194
  %1922 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1918, i64 -2
  %1923 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1922, i64 -1
  %1924 = bitcast %"class.sh::TIntermNode"** %1923 to <2 x i64>*
  %1925 = load <2 x i64>, <2 x i64>* %1924, align 8, !alias.scope !194
  %1926 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1917, i64 -1
  %1927 = bitcast %"class.sh::TIntermNode"** %1926 to <2 x i64>*
  store <2 x i64> %1921, <2 x i64>* %1927, align 8, !alias.scope !197, !noalias !194
  %1928 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1917, i64 -2
  %1929 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1928, i64 -1
  %1930 = bitcast %"class.sh::TIntermNode"** %1929 to <2 x i64>*
  store <2 x i64> %1925, <2 x i64>* %1930, align 8, !alias.scope !197, !noalias !194
  %1931 = sub nuw nsw i64 -4, %1913
  %1932 = sub nuw nsw i64 -4, %1913
  %1933 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1910, i64 %1931
  %1934 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1911, i64 %1932
  %1935 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1934, i64 -1
  %1936 = bitcast %"class.sh::TIntermNode"** %1935 to <2 x i64>*
  %1937 = load <2 x i64>, <2 x i64>* %1936, align 8, !alias.scope !194
  %1938 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1934, i64 -2
  %1939 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1938, i64 -1
  %1940 = bitcast %"class.sh::TIntermNode"** %1939 to <2 x i64>*
  %1941 = load <2 x i64>, <2 x i64>* %1940, align 8, !alias.scope !194
  %1942 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1933, i64 -1
  %1943 = bitcast %"class.sh::TIntermNode"** %1942 to <2 x i64>*
  store <2 x i64> %1937, <2 x i64>* %1943, align 8, !alias.scope !197, !noalias !194
  %1944 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1933, i64 -2
  %1945 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1944, i64 -1
  %1946 = bitcast %"class.sh::TIntermNode"** %1945 to <2 x i64>*
  store <2 x i64> %1941, <2 x i64>* %1946, align 8, !alias.scope !197, !noalias !194
  %1947 = add i64 %1913, 8
  %1948 = add i64 %1914, -2
  %1949 = icmp eq i64 %1948, 0
  br i1 %1949, label %1950, label %1912, !llvm.loop !199

1950:                                             ; preds = %1912, %1895
  %1951 = phi i64 [ 0, %1895 ], [ %1947, %1912 ]
  %1952 = icmp eq i64 %1904, 0
  br i1 %1952, label %1972, label %1953

1953:                                             ; preds = %1950
  %1954 = sub i64 0, %1951
  %1955 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1864, i64 -1
  %1956 = sub i64 0, %1951
  %1957 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1873, i64 -1
  %1958 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1955, i64 %1954
  %1959 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1957, i64 %1956
  %1960 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1959, i64 -1
  %1961 = bitcast %"class.sh::TIntermNode"** %1960 to <2 x i64>*
  %1962 = load <2 x i64>, <2 x i64>* %1961, align 8, !alias.scope !194
  %1963 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1959, i64 -2
  %1964 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1963, i64 -1
  %1965 = bitcast %"class.sh::TIntermNode"** %1964 to <2 x i64>*
  %1966 = load <2 x i64>, <2 x i64>* %1965, align 8, !alias.scope !194
  %1967 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1958, i64 -1
  %1968 = bitcast %"class.sh::TIntermNode"** %1967 to <2 x i64>*
  store <2 x i64> %1962, <2 x i64>* %1968, align 8, !alias.scope !197, !noalias !194
  %1969 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1958, i64 -2
  %1970 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1969, i64 -1
  %1971 = bitcast %"class.sh::TIntermNode"** %1970 to <2 x i64>*
  store <2 x i64> %1966, <2 x i64>* %1971, align 8, !alias.scope !197, !noalias !194
  br label %1972

1972:                                             ; preds = %1950, %1953
  %1973 = icmp eq i64 %1880, %1896
  br i1 %1973, label %2044, label %1974

1974:                                             ; preds = %1972, %1882, %1875
  %1975 = phi %"class.sh::TIntermNode"** [ %1864, %1882 ], [ %1864, %1875 ], [ %1898, %1972 ]
  %1976 = phi %"class.sh::TIntermNode"** [ %1873, %1882 ], [ %1873, %1875 ], [ %1900, %1972 ]
  %1977 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1976, i64 -1
  %1978 = ptrtoint %"class.sh::TIntermNode"** %1977 to i64
  %1979 = sub i64 %1978, %1872
  %1980 = lshr i64 %1979, 3
  %1981 = add nuw nsw i64 %1980, 1
  %1982 = and i64 %1981, 7
  %1983 = icmp eq i64 %1982, 0
  br i1 %1983, label %1995, label %1984

1984:                                             ; preds = %1974, %1984
  %1985 = phi %"class.sh::TIntermNode"** [ %1988, %1984 ], [ %1975, %1974 ]
  %1986 = phi %"class.sh::TIntermNode"** [ %1989, %1984 ], [ %1976, %1974 ]
  %1987 = phi i64 [ %1993, %1984 ], [ %1982, %1974 ]
  %1988 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1985, i64 -1
  %1989 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1986, i64 -1
  %1990 = bitcast %"class.sh::TIntermNode"** %1989 to i64*
  %1991 = load i64, i64* %1990, align 8
  %1992 = bitcast %"class.sh::TIntermNode"** %1988 to i64*
  store i64 %1991, i64* %1992, align 8
  %1993 = add i64 %1987, -1
  %1994 = icmp eq i64 %1993, 0
  br i1 %1994, label %1995, label %1984, !llvm.loop !200

1995:                                             ; preds = %1984, %1974
  %1996 = phi %"class.sh::TIntermNode"** [ undef, %1974 ], [ %1988, %1984 ]
  %1997 = phi %"class.sh::TIntermNode"** [ %1975, %1974 ], [ %1988, %1984 ]
  %1998 = phi %"class.sh::TIntermNode"** [ %1976, %1974 ], [ %1989, %1984 ]
  %1999 = icmp ult i64 %1979, 56
  br i1 %1999, label %2044, label %2000

2000:                                             ; preds = %1995, %2000
  %2001 = phi %"class.sh::TIntermNode"** [ %2038, %2000 ], [ %1997, %1995 ]
  %2002 = phi %"class.sh::TIntermNode"** [ %2039, %2000 ], [ %1998, %1995 ]
  %2003 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2001, i64 -1
  %2004 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2002, i64 -1
  %2005 = bitcast %"class.sh::TIntermNode"** %2004 to i64*
  %2006 = load i64, i64* %2005, align 8
  %2007 = bitcast %"class.sh::TIntermNode"** %2003 to i64*
  store i64 %2006, i64* %2007, align 8
  %2008 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2001, i64 -2
  %2009 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2002, i64 -2
  %2010 = bitcast %"class.sh::TIntermNode"** %2009 to i64*
  %2011 = load i64, i64* %2010, align 8
  %2012 = bitcast %"class.sh::TIntermNode"** %2008 to i64*
  store i64 %2011, i64* %2012, align 8
  %2013 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2001, i64 -3
  %2014 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2002, i64 -3
  %2015 = bitcast %"class.sh::TIntermNode"** %2014 to i64*
  %2016 = load i64, i64* %2015, align 8
  %2017 = bitcast %"class.sh::TIntermNode"** %2013 to i64*
  store i64 %2016, i64* %2017, align 8
  %2018 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2001, i64 -4
  %2019 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2002, i64 -4
  %2020 = bitcast %"class.sh::TIntermNode"** %2019 to i64*
  %2021 = load i64, i64* %2020, align 8
  %2022 = bitcast %"class.sh::TIntermNode"** %2018 to i64*
  store i64 %2021, i64* %2022, align 8
  %2023 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2001, i64 -5
  %2024 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2002, i64 -5
  %2025 = bitcast %"class.sh::TIntermNode"** %2024 to i64*
  %2026 = load i64, i64* %2025, align 8
  %2027 = bitcast %"class.sh::TIntermNode"** %2023 to i64*
  store i64 %2026, i64* %2027, align 8
  %2028 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2001, i64 -6
  %2029 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2002, i64 -6
  %2030 = bitcast %"class.sh::TIntermNode"** %2029 to i64*
  %2031 = load i64, i64* %2030, align 8
  %2032 = bitcast %"class.sh::TIntermNode"** %2028 to i64*
  store i64 %2031, i64* %2032, align 8
  %2033 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2001, i64 -7
  %2034 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2002, i64 -7
  %2035 = bitcast %"class.sh::TIntermNode"** %2034 to i64*
  %2036 = load i64, i64* %2035, align 8
  %2037 = bitcast %"class.sh::TIntermNode"** %2033 to i64*
  store i64 %2036, i64* %2037, align 8
  %2038 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2001, i64 -8
  %2039 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2002, i64 -8
  %2040 = bitcast %"class.sh::TIntermNode"** %2039 to i64*
  %2041 = load i64, i64* %2040, align 8
  %2042 = bitcast %"class.sh::TIntermNode"** %2038 to i64*
  store i64 %2041, i64* %2042, align 8
  %2043 = icmp eq %"class.sh::TIntermNode"** %2039, %1871
  br i1 %2043, label %2044, label %2000, !llvm.loop !201

2044:                                             ; preds = %1995, %2000, %1972, %1861
  %2045 = phi %"class.sh::TIntermNode"** [ %1864, %1861 ], [ %1898, %1972 ], [ %1996, %1995 ], [ %2038, %2000 ]
  %2046 = ptrtoint %"class.sh::TIntermNode"** %2045 to i64
  store i64 %2046, i64* %1837, align 8
  store i64 %1869, i64* %1836, align 8
  store i64 %1866, i64* %1846, align 8
  br label %2047

2047:                                             ; preds = %1829, %2044
  %2048 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2049 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2048, i64 40) #8
  %2050 = bitcast i8* %2049 to i32 (...)***
  %2051 = getelementptr inbounds i8, i8* %2049, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %2051, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN2sh13TIntermBranchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2050, align 8
  %2052 = getelementptr inbounds i8, i8* %2049, i64 24
  store i8 -122, i8* %2052, align 8
  %2053 = getelementptr inbounds i8, i8* %2049, i64 32
  %2054 = bitcast i8* %2053 to %"class.sh::TIntermTyped"**
  store %"class.sh::TIntermTyped"* null, %"class.sh::TIntermTyped"** %2054, align 8
  %2055 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*** %1817, align 8
  %2056 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %2055, i64 27
  %2057 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %2056, align 8
  %2058 = call %"class.sh::TVector.31"* %2057(%"class.sh::TIntermBlock"* %795) #8
  %2059 = ptrtoint i8* %2049 to i64
  %2060 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %2058, i64 0, i32 0, i32 0, i32 1
  %2061 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2060, align 8
  %2062 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %2058, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %2063 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2062, align 8
  %2064 = icmp ult %"class.sh::TIntermNode"** %2061, %2063
  %2065 = ptrtoint %"class.sh::TIntermNode"** %2063 to i64
  br i1 %2064, label %2066, label %2071

2066:                                             ; preds = %2047
  %2067 = bitcast %"class.sh::TIntermNode"** %2061 to i64*
  store i64 %2059, i64* %2067, align 8
  %2068 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2061, i64 1
  %2069 = ptrtoint %"class.sh::TIntermNode"** %2068 to i64
  %2070 = bitcast %"class.sh::TIntermNode"*** %2060 to i64*
  store i64 %2069, i64* %2070, align 8
  br label %2284

2071:                                             ; preds = %2047
  %2072 = ptrtoint %"class.sh::TIntermNode"** %2061 to i64
  %2073 = bitcast %"class.sh::TIntermNode"*** %2060 to i64*
  %2074 = bitcast %"class.sh::TVector.31"* %2058 to i64*
  %2075 = load i64, i64* %2074, align 8
  %2076 = sub i64 %2072, %2075
  %2077 = ashr exact i64 %2076, 3
  %2078 = add nsw i64 %2077, 1
  %2079 = icmp ugt i64 %2078, 2305843009213693951
  br i1 %2079, label %2080, label %2082

2080:                                             ; preds = %2071
  %2081 = bitcast %"class.sh::TVector.31"* %2058 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2081) #9
  unreachable

2082:                                             ; preds = %2071
  %2083 = bitcast %"class.sh::TIntermNode"*** %2062 to i64*
  %2084 = sub i64 %2065, %2075
  %2085 = ashr exact i64 %2084, 3
  %2086 = icmp ult i64 %2085, 1152921504606846975
  br i1 %2086, label %2087, label %2092

2087:                                             ; preds = %2082
  %2088 = ashr exact i64 %2084, 2
  %2089 = icmp ult i64 %2088, %2078
  %2090 = select i1 %2089, i64 %2078, i64 %2088
  %2091 = icmp eq i64 %2090, 0
  br i1 %2091, label %2098, label %2092

2092:                                             ; preds = %2087, %2082
  %2093 = phi i64 [ %2090, %2087 ], [ 2305843009213693951, %2082 ]
  %2094 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2095 = shl i64 %2093, 3
  %2096 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2094, i64 %2095) #8
  %2097 = bitcast i8* %2096 to %"class.sh::TIntermNode"**
  br label %2098

2098:                                             ; preds = %2092, %2087
  %2099 = phi i64 [ %2093, %2092 ], [ 0, %2087 ]
  %2100 = phi %"class.sh::TIntermNode"** [ %2097, %2092 ], [ null, %2087 ]
  %2101 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2100, i64 %2077
  %2102 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2100, i64 %2099
  %2103 = ptrtoint %"class.sh::TIntermNode"** %2102 to i64
  %2104 = bitcast %"class.sh::TIntermNode"** %2101 to i64*
  store i64 %2059, i64* %2104, align 8
  %2105 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2101, i64 1
  %2106 = ptrtoint %"class.sh::TIntermNode"** %2105 to i64
  %2107 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %2058, i64 0, i32 0, i32 0, i32 0
  %2108 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2107, align 8
  %2109 = ptrtoint %"class.sh::TIntermNode"** %2108 to i64
  %2110 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2060, align 8
  %2111 = icmp eq %"class.sh::TIntermNode"** %2110, %2108
  br i1 %2111, label %2281, label %2112

2112:                                             ; preds = %2098
  %2113 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2110, i64 -1
  %2114 = ptrtoint %"class.sh::TIntermNode"** %2113 to i64
  %2115 = sub i64 %2114, %2109
  %2116 = lshr i64 %2115, 3
  %2117 = add nuw nsw i64 %2116, 1
  %2118 = icmp ult i64 %2117, 4
  br i1 %2118, label %2211, label %2119

2119:                                             ; preds = %2112
  %2120 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2110, i64 -1
  %2121 = ptrtoint %"class.sh::TIntermNode"** %2120 to i64
  %2122 = sub i64 %2121, %2109
  %2123 = lshr i64 %2122, 3
  %2124 = xor i64 %2123, -1
  %2125 = add nsw i64 %2077, %2124
  %2126 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2100, i64 %2125
  %2127 = xor i64 %2123, -1
  %2128 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2110, i64 %2127
  %2129 = icmp ult %"class.sh::TIntermNode"** %2126, %2110
  %2130 = icmp ult %"class.sh::TIntermNode"** %2128, %2101
  %2131 = and i1 %2129, %2130
  br i1 %2131, label %2211, label %2132

2132:                                             ; preds = %2119
  %2133 = and i64 %2117, 4611686018427387900
  %2134 = sub nsw i64 0, %2133
  %2135 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2101, i64 %2134
  %2136 = sub nsw i64 0, %2133
  %2137 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2110, i64 %2136
  %2138 = add nsw i64 %2133, -4
  %2139 = lshr exact i64 %2138, 2
  %2140 = add nuw nsw i64 %2139, 1
  %2141 = and i64 %2140, 1
  %2142 = icmp eq i64 %2138, 0
  br i1 %2142, label %2187, label %2143

2143:                                             ; preds = %2132
  %2144 = sub nuw nsw i64 %2140, %2141
  %2145 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2101, i64 -1
  %2146 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2110, i64 -1
  %2147 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2101, i64 -1
  %2148 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2110, i64 -1
  br label %2149

2149:                                             ; preds = %2149, %2143
  %2150 = phi i64 [ 0, %2143 ], [ %2184, %2149 ]
  %2151 = phi i64 [ %2144, %2143 ], [ %2185, %2149 ]
  %2152 = sub i64 0, %2150
  %2153 = sub i64 0, %2150
  %2154 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2145, i64 %2152
  %2155 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2146, i64 %2153
  %2156 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2155, i64 -1
  %2157 = bitcast %"class.sh::TIntermNode"** %2156 to <2 x i64>*
  %2158 = load <2 x i64>, <2 x i64>* %2157, align 8, !alias.scope !202
  %2159 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2155, i64 -2
  %2160 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2159, i64 -1
  %2161 = bitcast %"class.sh::TIntermNode"** %2160 to <2 x i64>*
  %2162 = load <2 x i64>, <2 x i64>* %2161, align 8, !alias.scope !202
  %2163 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2154, i64 -1
  %2164 = bitcast %"class.sh::TIntermNode"** %2163 to <2 x i64>*
  store <2 x i64> %2158, <2 x i64>* %2164, align 8, !alias.scope !205, !noalias !202
  %2165 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2154, i64 -2
  %2166 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2165, i64 -1
  %2167 = bitcast %"class.sh::TIntermNode"** %2166 to <2 x i64>*
  store <2 x i64> %2162, <2 x i64>* %2167, align 8, !alias.scope !205, !noalias !202
  %2168 = sub nuw nsw i64 -4, %2150
  %2169 = sub nuw nsw i64 -4, %2150
  %2170 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2147, i64 %2168
  %2171 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2148, i64 %2169
  %2172 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2171, i64 -1
  %2173 = bitcast %"class.sh::TIntermNode"** %2172 to <2 x i64>*
  %2174 = load <2 x i64>, <2 x i64>* %2173, align 8, !alias.scope !202
  %2175 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2171, i64 -2
  %2176 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2175, i64 -1
  %2177 = bitcast %"class.sh::TIntermNode"** %2176 to <2 x i64>*
  %2178 = load <2 x i64>, <2 x i64>* %2177, align 8, !alias.scope !202
  %2179 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2170, i64 -1
  %2180 = bitcast %"class.sh::TIntermNode"** %2179 to <2 x i64>*
  store <2 x i64> %2174, <2 x i64>* %2180, align 8, !alias.scope !205, !noalias !202
  %2181 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2170, i64 -2
  %2182 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2181, i64 -1
  %2183 = bitcast %"class.sh::TIntermNode"** %2182 to <2 x i64>*
  store <2 x i64> %2178, <2 x i64>* %2183, align 8, !alias.scope !205, !noalias !202
  %2184 = add i64 %2150, 8
  %2185 = add i64 %2151, -2
  %2186 = icmp eq i64 %2185, 0
  br i1 %2186, label %2187, label %2149, !llvm.loop !207

2187:                                             ; preds = %2149, %2132
  %2188 = phi i64 [ 0, %2132 ], [ %2184, %2149 ]
  %2189 = icmp eq i64 %2141, 0
  br i1 %2189, label %2209, label %2190

2190:                                             ; preds = %2187
  %2191 = sub i64 0, %2188
  %2192 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2101, i64 -1
  %2193 = sub i64 0, %2188
  %2194 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2110, i64 -1
  %2195 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2192, i64 %2191
  %2196 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2194, i64 %2193
  %2197 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2196, i64 -1
  %2198 = bitcast %"class.sh::TIntermNode"** %2197 to <2 x i64>*
  %2199 = load <2 x i64>, <2 x i64>* %2198, align 8, !alias.scope !202
  %2200 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2196, i64 -2
  %2201 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2200, i64 -1
  %2202 = bitcast %"class.sh::TIntermNode"** %2201 to <2 x i64>*
  %2203 = load <2 x i64>, <2 x i64>* %2202, align 8, !alias.scope !202
  %2204 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2195, i64 -1
  %2205 = bitcast %"class.sh::TIntermNode"** %2204 to <2 x i64>*
  store <2 x i64> %2199, <2 x i64>* %2205, align 8, !alias.scope !205, !noalias !202
  %2206 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2195, i64 -2
  %2207 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2206, i64 -1
  %2208 = bitcast %"class.sh::TIntermNode"** %2207 to <2 x i64>*
  store <2 x i64> %2203, <2 x i64>* %2208, align 8, !alias.scope !205, !noalias !202
  br label %2209

2209:                                             ; preds = %2187, %2190
  %2210 = icmp eq i64 %2117, %2133
  br i1 %2210, label %2281, label %2211

2211:                                             ; preds = %2209, %2119, %2112
  %2212 = phi %"class.sh::TIntermNode"** [ %2101, %2119 ], [ %2101, %2112 ], [ %2135, %2209 ]
  %2213 = phi %"class.sh::TIntermNode"** [ %2110, %2119 ], [ %2110, %2112 ], [ %2137, %2209 ]
  %2214 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2213, i64 -1
  %2215 = ptrtoint %"class.sh::TIntermNode"** %2214 to i64
  %2216 = sub i64 %2215, %2109
  %2217 = lshr i64 %2216, 3
  %2218 = add nuw nsw i64 %2217, 1
  %2219 = and i64 %2218, 7
  %2220 = icmp eq i64 %2219, 0
  br i1 %2220, label %2232, label %2221

2221:                                             ; preds = %2211, %2221
  %2222 = phi %"class.sh::TIntermNode"** [ %2225, %2221 ], [ %2212, %2211 ]
  %2223 = phi %"class.sh::TIntermNode"** [ %2226, %2221 ], [ %2213, %2211 ]
  %2224 = phi i64 [ %2230, %2221 ], [ %2219, %2211 ]
  %2225 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2222, i64 -1
  %2226 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2223, i64 -1
  %2227 = bitcast %"class.sh::TIntermNode"** %2226 to i64*
  %2228 = load i64, i64* %2227, align 8
  %2229 = bitcast %"class.sh::TIntermNode"** %2225 to i64*
  store i64 %2228, i64* %2229, align 8
  %2230 = add i64 %2224, -1
  %2231 = icmp eq i64 %2230, 0
  br i1 %2231, label %2232, label %2221, !llvm.loop !208

2232:                                             ; preds = %2221, %2211
  %2233 = phi %"class.sh::TIntermNode"** [ undef, %2211 ], [ %2225, %2221 ]
  %2234 = phi %"class.sh::TIntermNode"** [ %2212, %2211 ], [ %2225, %2221 ]
  %2235 = phi %"class.sh::TIntermNode"** [ %2213, %2211 ], [ %2226, %2221 ]
  %2236 = icmp ult i64 %2216, 56
  br i1 %2236, label %2281, label %2237

2237:                                             ; preds = %2232, %2237
  %2238 = phi %"class.sh::TIntermNode"** [ %2275, %2237 ], [ %2234, %2232 ]
  %2239 = phi %"class.sh::TIntermNode"** [ %2276, %2237 ], [ %2235, %2232 ]
  %2240 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2238, i64 -1
  %2241 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2239, i64 -1
  %2242 = bitcast %"class.sh::TIntermNode"** %2241 to i64*
  %2243 = load i64, i64* %2242, align 8
  %2244 = bitcast %"class.sh::TIntermNode"** %2240 to i64*
  store i64 %2243, i64* %2244, align 8
  %2245 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2238, i64 -2
  %2246 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2239, i64 -2
  %2247 = bitcast %"class.sh::TIntermNode"** %2246 to i64*
  %2248 = load i64, i64* %2247, align 8
  %2249 = bitcast %"class.sh::TIntermNode"** %2245 to i64*
  store i64 %2248, i64* %2249, align 8
  %2250 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2238, i64 -3
  %2251 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2239, i64 -3
  %2252 = bitcast %"class.sh::TIntermNode"** %2251 to i64*
  %2253 = load i64, i64* %2252, align 8
  %2254 = bitcast %"class.sh::TIntermNode"** %2250 to i64*
  store i64 %2253, i64* %2254, align 8
  %2255 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2238, i64 -4
  %2256 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2239, i64 -4
  %2257 = bitcast %"class.sh::TIntermNode"** %2256 to i64*
  %2258 = load i64, i64* %2257, align 8
  %2259 = bitcast %"class.sh::TIntermNode"** %2255 to i64*
  store i64 %2258, i64* %2259, align 8
  %2260 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2238, i64 -5
  %2261 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2239, i64 -5
  %2262 = bitcast %"class.sh::TIntermNode"** %2261 to i64*
  %2263 = load i64, i64* %2262, align 8
  %2264 = bitcast %"class.sh::TIntermNode"** %2260 to i64*
  store i64 %2263, i64* %2264, align 8
  %2265 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2238, i64 -6
  %2266 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2239, i64 -6
  %2267 = bitcast %"class.sh::TIntermNode"** %2266 to i64*
  %2268 = load i64, i64* %2267, align 8
  %2269 = bitcast %"class.sh::TIntermNode"** %2265 to i64*
  store i64 %2268, i64* %2269, align 8
  %2270 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2238, i64 -7
  %2271 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2239, i64 -7
  %2272 = bitcast %"class.sh::TIntermNode"** %2271 to i64*
  %2273 = load i64, i64* %2272, align 8
  %2274 = bitcast %"class.sh::TIntermNode"** %2270 to i64*
  store i64 %2273, i64* %2274, align 8
  %2275 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2238, i64 -8
  %2276 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2239, i64 -8
  %2277 = bitcast %"class.sh::TIntermNode"** %2276 to i64*
  %2278 = load i64, i64* %2277, align 8
  %2279 = bitcast %"class.sh::TIntermNode"** %2275 to i64*
  store i64 %2278, i64* %2279, align 8
  %2280 = icmp eq %"class.sh::TIntermNode"** %2276, %2108
  br i1 %2280, label %2281, label %2237, !llvm.loop !209

2281:                                             ; preds = %2232, %2237, %2209, %2098
  %2282 = phi %"class.sh::TIntermNode"** [ %2101, %2098 ], [ %2135, %2209 ], [ %2233, %2232 ], [ %2275, %2237 ]
  %2283 = ptrtoint %"class.sh::TIntermNode"** %2282 to i64
  store i64 %2283, i64* %2074, align 8
  store i64 %2106, i64* %2073, align 8
  store i64 %2103, i64* %2083, align 8
  br label %2284

2284:                                             ; preds = %2066, %2281
  %2285 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2286 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2285, i64 240) #8
  %2287 = bitcast i8* %2286 to %"class.sh::TIntermBinary"*
  %2288 = bitcast i8* %820 to %"class.sh::TIntermTyped"*
  %2289 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %1812, align 8
  %2290 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %2289, i64 23
  %2291 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %2290, align 8
  %2292 = call %"class.sh::TIntermTyped"* %2291(%"class.sh::TIntermSymbol"* %34) #8
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %2287, i8 zeroext -118, %"class.sh::TIntermTyped"* %2288, %"class.sh::TIntermTyped"* %2292) #8
  %2293 = bitcast i8* %802 to %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)***
  %2294 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*** %2293, align 8
  %2295 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %2294, i64 27
  %2296 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %2295, align 8
  %2297 = call %"class.sh::TVector.31"* %2296(%"class.sh::TIntermBlock"* %803) #8
  %2298 = ptrtoint i8* %2286 to i64
  %2299 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %2297, i64 0, i32 0, i32 0, i32 1
  %2300 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2299, align 8
  %2301 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %2297, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %2302 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2301, align 8
  %2303 = icmp ult %"class.sh::TIntermNode"** %2300, %2302
  %2304 = ptrtoint %"class.sh::TIntermNode"** %2302 to i64
  br i1 %2303, label %2305, label %2310

2305:                                             ; preds = %2284
  %2306 = bitcast %"class.sh::TIntermNode"** %2300 to i64*
  store i64 %2298, i64* %2306, align 8
  %2307 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2300, i64 1
  %2308 = ptrtoint %"class.sh::TIntermNode"** %2307 to i64
  %2309 = bitcast %"class.sh::TIntermNode"*** %2299 to i64*
  store i64 %2308, i64* %2309, align 8
  br label %2998

2310:                                             ; preds = %2284
  %2311 = ptrtoint %"class.sh::TIntermNode"** %2300 to i64
  %2312 = bitcast %"class.sh::TIntermNode"*** %2299 to i64*
  %2313 = bitcast %"class.sh::TVector.31"* %2297 to i64*
  %2314 = load i64, i64* %2313, align 8
  %2315 = sub i64 %2311, %2314
  %2316 = ashr exact i64 %2315, 3
  %2317 = add nsw i64 %2316, 1
  %2318 = icmp ugt i64 %2317, 2305843009213693951
  br i1 %2318, label %2319, label %2321

2319:                                             ; preds = %2310
  %2320 = bitcast %"class.sh::TVector.31"* %2297 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2320) #9
  unreachable

2321:                                             ; preds = %2310
  %2322 = bitcast %"class.sh::TIntermNode"*** %2301 to i64*
  %2323 = sub i64 %2304, %2314
  %2324 = ashr exact i64 %2323, 3
  %2325 = icmp ult i64 %2324, 1152921504606846975
  br i1 %2325, label %2326, label %2331

2326:                                             ; preds = %2321
  %2327 = ashr exact i64 %2323, 2
  %2328 = icmp ult i64 %2327, %2317
  %2329 = select i1 %2328, i64 %2317, i64 %2327
  %2330 = icmp eq i64 %2329, 0
  br i1 %2330, label %2337, label %2331

2331:                                             ; preds = %2326, %2321
  %2332 = phi i64 [ %2329, %2326 ], [ 2305843009213693951, %2321 ]
  %2333 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2334 = shl i64 %2332, 3
  %2335 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2333, i64 %2334) #8
  %2336 = bitcast i8* %2335 to %"class.sh::TIntermNode"**
  br label %2337

2337:                                             ; preds = %2331, %2326
  %2338 = phi i64 [ %2332, %2331 ], [ 0, %2326 ]
  %2339 = phi %"class.sh::TIntermNode"** [ %2336, %2331 ], [ null, %2326 ]
  %2340 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2339, i64 %2316
  %2341 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2339, i64 %2338
  %2342 = ptrtoint %"class.sh::TIntermNode"** %2341 to i64
  %2343 = bitcast %"class.sh::TIntermNode"** %2340 to i64*
  store i64 %2298, i64* %2343, align 8
  %2344 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2340, i64 1
  %2345 = ptrtoint %"class.sh::TIntermNode"** %2344 to i64
  %2346 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %2297, i64 0, i32 0, i32 0, i32 0
  %2347 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2346, align 8
  %2348 = ptrtoint %"class.sh::TIntermNode"** %2347 to i64
  %2349 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2299, align 8
  %2350 = icmp eq %"class.sh::TIntermNode"** %2349, %2347
  br i1 %2350, label %2520, label %2351

2351:                                             ; preds = %2337
  %2352 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2349, i64 -1
  %2353 = ptrtoint %"class.sh::TIntermNode"** %2352 to i64
  %2354 = sub i64 %2353, %2348
  %2355 = lshr i64 %2354, 3
  %2356 = add nuw nsw i64 %2355, 1
  %2357 = icmp ult i64 %2356, 4
  br i1 %2357, label %2450, label %2358

2358:                                             ; preds = %2351
  %2359 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2349, i64 -1
  %2360 = ptrtoint %"class.sh::TIntermNode"** %2359 to i64
  %2361 = sub i64 %2360, %2348
  %2362 = lshr i64 %2361, 3
  %2363 = xor i64 %2362, -1
  %2364 = add nsw i64 %2316, %2363
  %2365 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2339, i64 %2364
  %2366 = xor i64 %2362, -1
  %2367 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2349, i64 %2366
  %2368 = icmp ult %"class.sh::TIntermNode"** %2365, %2349
  %2369 = icmp ult %"class.sh::TIntermNode"** %2367, %2340
  %2370 = and i1 %2368, %2369
  br i1 %2370, label %2450, label %2371

2371:                                             ; preds = %2358
  %2372 = and i64 %2356, 4611686018427387900
  %2373 = sub nsw i64 0, %2372
  %2374 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2340, i64 %2373
  %2375 = sub nsw i64 0, %2372
  %2376 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2349, i64 %2375
  %2377 = add nsw i64 %2372, -4
  %2378 = lshr exact i64 %2377, 2
  %2379 = add nuw nsw i64 %2378, 1
  %2380 = and i64 %2379, 1
  %2381 = icmp eq i64 %2377, 0
  br i1 %2381, label %2426, label %2382

2382:                                             ; preds = %2371
  %2383 = sub nuw nsw i64 %2379, %2380
  %2384 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2340, i64 -1
  %2385 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2349, i64 -1
  %2386 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2340, i64 -1
  %2387 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2349, i64 -1
  br label %2388

2388:                                             ; preds = %2388, %2382
  %2389 = phi i64 [ 0, %2382 ], [ %2423, %2388 ]
  %2390 = phi i64 [ %2383, %2382 ], [ %2424, %2388 ]
  %2391 = sub i64 0, %2389
  %2392 = sub i64 0, %2389
  %2393 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2384, i64 %2391
  %2394 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2385, i64 %2392
  %2395 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2394, i64 -1
  %2396 = bitcast %"class.sh::TIntermNode"** %2395 to <2 x i64>*
  %2397 = load <2 x i64>, <2 x i64>* %2396, align 8, !alias.scope !210
  %2398 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2394, i64 -2
  %2399 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2398, i64 -1
  %2400 = bitcast %"class.sh::TIntermNode"** %2399 to <2 x i64>*
  %2401 = load <2 x i64>, <2 x i64>* %2400, align 8, !alias.scope !210
  %2402 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2393, i64 -1
  %2403 = bitcast %"class.sh::TIntermNode"** %2402 to <2 x i64>*
  store <2 x i64> %2397, <2 x i64>* %2403, align 8, !alias.scope !213, !noalias !210
  %2404 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2393, i64 -2
  %2405 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2404, i64 -1
  %2406 = bitcast %"class.sh::TIntermNode"** %2405 to <2 x i64>*
  store <2 x i64> %2401, <2 x i64>* %2406, align 8, !alias.scope !213, !noalias !210
  %2407 = sub nuw nsw i64 -4, %2389
  %2408 = sub nuw nsw i64 -4, %2389
  %2409 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2386, i64 %2407
  %2410 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2387, i64 %2408
  %2411 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2410, i64 -1
  %2412 = bitcast %"class.sh::TIntermNode"** %2411 to <2 x i64>*
  %2413 = load <2 x i64>, <2 x i64>* %2412, align 8, !alias.scope !210
  %2414 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2410, i64 -2
  %2415 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2414, i64 -1
  %2416 = bitcast %"class.sh::TIntermNode"** %2415 to <2 x i64>*
  %2417 = load <2 x i64>, <2 x i64>* %2416, align 8, !alias.scope !210
  %2418 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2409, i64 -1
  %2419 = bitcast %"class.sh::TIntermNode"** %2418 to <2 x i64>*
  store <2 x i64> %2413, <2 x i64>* %2419, align 8, !alias.scope !213, !noalias !210
  %2420 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2409, i64 -2
  %2421 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2420, i64 -1
  %2422 = bitcast %"class.sh::TIntermNode"** %2421 to <2 x i64>*
  store <2 x i64> %2417, <2 x i64>* %2422, align 8, !alias.scope !213, !noalias !210
  %2423 = add i64 %2389, 8
  %2424 = add i64 %2390, -2
  %2425 = icmp eq i64 %2424, 0
  br i1 %2425, label %2426, label %2388, !llvm.loop !215

2426:                                             ; preds = %2388, %2371
  %2427 = phi i64 [ 0, %2371 ], [ %2423, %2388 ]
  %2428 = icmp eq i64 %2380, 0
  br i1 %2428, label %2448, label %2429

2429:                                             ; preds = %2426
  %2430 = sub i64 0, %2427
  %2431 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2340, i64 -1
  %2432 = sub i64 0, %2427
  %2433 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2349, i64 -1
  %2434 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2431, i64 %2430
  %2435 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2433, i64 %2432
  %2436 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2435, i64 -1
  %2437 = bitcast %"class.sh::TIntermNode"** %2436 to <2 x i64>*
  %2438 = load <2 x i64>, <2 x i64>* %2437, align 8, !alias.scope !210
  %2439 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2435, i64 -2
  %2440 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2439, i64 -1
  %2441 = bitcast %"class.sh::TIntermNode"** %2440 to <2 x i64>*
  %2442 = load <2 x i64>, <2 x i64>* %2441, align 8, !alias.scope !210
  %2443 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2434, i64 -1
  %2444 = bitcast %"class.sh::TIntermNode"** %2443 to <2 x i64>*
  store <2 x i64> %2438, <2 x i64>* %2444, align 8, !alias.scope !213, !noalias !210
  %2445 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2434, i64 -2
  %2446 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2445, i64 -1
  %2447 = bitcast %"class.sh::TIntermNode"** %2446 to <2 x i64>*
  store <2 x i64> %2442, <2 x i64>* %2447, align 8, !alias.scope !213, !noalias !210
  br label %2448

2448:                                             ; preds = %2426, %2429
  %2449 = icmp eq i64 %2356, %2372
  br i1 %2449, label %2520, label %2450

2450:                                             ; preds = %2448, %2358, %2351
  %2451 = phi %"class.sh::TIntermNode"** [ %2340, %2358 ], [ %2340, %2351 ], [ %2374, %2448 ]
  %2452 = phi %"class.sh::TIntermNode"** [ %2349, %2358 ], [ %2349, %2351 ], [ %2376, %2448 ]
  %2453 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2452, i64 -1
  %2454 = ptrtoint %"class.sh::TIntermNode"** %2453 to i64
  %2455 = sub i64 %2454, %2348
  %2456 = lshr i64 %2455, 3
  %2457 = add nuw nsw i64 %2456, 1
  %2458 = and i64 %2457, 7
  %2459 = icmp eq i64 %2458, 0
  br i1 %2459, label %2471, label %2460

2460:                                             ; preds = %2450, %2460
  %2461 = phi %"class.sh::TIntermNode"** [ %2464, %2460 ], [ %2451, %2450 ]
  %2462 = phi %"class.sh::TIntermNode"** [ %2465, %2460 ], [ %2452, %2450 ]
  %2463 = phi i64 [ %2469, %2460 ], [ %2458, %2450 ]
  %2464 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2461, i64 -1
  %2465 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2462, i64 -1
  %2466 = bitcast %"class.sh::TIntermNode"** %2465 to i64*
  %2467 = load i64, i64* %2466, align 8
  %2468 = bitcast %"class.sh::TIntermNode"** %2464 to i64*
  store i64 %2467, i64* %2468, align 8
  %2469 = add i64 %2463, -1
  %2470 = icmp eq i64 %2469, 0
  br i1 %2470, label %2471, label %2460, !llvm.loop !216

2471:                                             ; preds = %2460, %2450
  %2472 = phi %"class.sh::TIntermNode"** [ undef, %2450 ], [ %2464, %2460 ]
  %2473 = phi %"class.sh::TIntermNode"** [ %2451, %2450 ], [ %2464, %2460 ]
  %2474 = phi %"class.sh::TIntermNode"** [ %2452, %2450 ], [ %2465, %2460 ]
  %2475 = icmp ult i64 %2455, 56
  br i1 %2475, label %2520, label %2476

2476:                                             ; preds = %2471, %2476
  %2477 = phi %"class.sh::TIntermNode"** [ %2514, %2476 ], [ %2473, %2471 ]
  %2478 = phi %"class.sh::TIntermNode"** [ %2515, %2476 ], [ %2474, %2471 ]
  %2479 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2477, i64 -1
  %2480 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2478, i64 -1
  %2481 = bitcast %"class.sh::TIntermNode"** %2480 to i64*
  %2482 = load i64, i64* %2481, align 8
  %2483 = bitcast %"class.sh::TIntermNode"** %2479 to i64*
  store i64 %2482, i64* %2483, align 8
  %2484 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2477, i64 -2
  %2485 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2478, i64 -2
  %2486 = bitcast %"class.sh::TIntermNode"** %2485 to i64*
  %2487 = load i64, i64* %2486, align 8
  %2488 = bitcast %"class.sh::TIntermNode"** %2484 to i64*
  store i64 %2487, i64* %2488, align 8
  %2489 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2477, i64 -3
  %2490 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2478, i64 -3
  %2491 = bitcast %"class.sh::TIntermNode"** %2490 to i64*
  %2492 = load i64, i64* %2491, align 8
  %2493 = bitcast %"class.sh::TIntermNode"** %2489 to i64*
  store i64 %2492, i64* %2493, align 8
  %2494 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2477, i64 -4
  %2495 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2478, i64 -4
  %2496 = bitcast %"class.sh::TIntermNode"** %2495 to i64*
  %2497 = load i64, i64* %2496, align 8
  %2498 = bitcast %"class.sh::TIntermNode"** %2494 to i64*
  store i64 %2497, i64* %2498, align 8
  %2499 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2477, i64 -5
  %2500 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2478, i64 -5
  %2501 = bitcast %"class.sh::TIntermNode"** %2500 to i64*
  %2502 = load i64, i64* %2501, align 8
  %2503 = bitcast %"class.sh::TIntermNode"** %2499 to i64*
  store i64 %2502, i64* %2503, align 8
  %2504 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2477, i64 -6
  %2505 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2478, i64 -6
  %2506 = bitcast %"class.sh::TIntermNode"** %2505 to i64*
  %2507 = load i64, i64* %2506, align 8
  %2508 = bitcast %"class.sh::TIntermNode"** %2504 to i64*
  store i64 %2507, i64* %2508, align 8
  %2509 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2477, i64 -7
  %2510 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2478, i64 -7
  %2511 = bitcast %"class.sh::TIntermNode"** %2510 to i64*
  %2512 = load i64, i64* %2511, align 8
  %2513 = bitcast %"class.sh::TIntermNode"** %2509 to i64*
  store i64 %2512, i64* %2513, align 8
  %2514 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2477, i64 -8
  %2515 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2478, i64 -8
  %2516 = bitcast %"class.sh::TIntermNode"** %2515 to i64*
  %2517 = load i64, i64* %2516, align 8
  %2518 = bitcast %"class.sh::TIntermNode"** %2514 to i64*
  store i64 %2517, i64* %2518, align 8
  %2519 = icmp eq %"class.sh::TIntermNode"** %2515, %2347
  br i1 %2519, label %2520, label %2476, !llvm.loop !217

2520:                                             ; preds = %2471, %2476, %2448, %2337
  %2521 = phi %"class.sh::TIntermNode"** [ %2340, %2337 ], [ %2374, %2448 ], [ %2472, %2471 ], [ %2514, %2476 ]
  %2522 = ptrtoint %"class.sh::TIntermNode"** %2521 to i64
  store i64 %2522, i64* %2313, align 8
  store i64 %2345, i64* %2312, align 8
  store i64 %2342, i64* %2322, align 8
  br label %2998

2523:                                             ; preds = %771
  %2524 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %829, i64 40) #8
  %2525 = bitcast i8* %2524 to i32 (...)***
  %2526 = getelementptr inbounds i8, i8* %2524, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %2526, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN2sh13TIntermBranchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2525, align 8
  %2527 = getelementptr inbounds i8, i8* %2524, i64 24
  store i8 -122, i8* %2527, align 8
  %2528 = getelementptr inbounds i8, i8* %2524, i64 32
  %2529 = bitcast i8* %2528 to i8**
  store i8* %810, i8** %2529, align 8
  %2530 = bitcast i8* %794 to %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)***
  %2531 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*** %2530, align 8
  %2532 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %2531, i64 27
  %2533 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %2532, align 8
  %2534 = call %"class.sh::TVector.31"* %2533(%"class.sh::TIntermBlock"* %795) #8
  %2535 = ptrtoint i8* %2524 to i64
  %2536 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %2534, i64 0, i32 0, i32 0, i32 1
  %2537 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2536, align 8
  %2538 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %2534, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %2539 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2538, align 8
  %2540 = icmp ult %"class.sh::TIntermNode"** %2537, %2539
  %2541 = ptrtoint %"class.sh::TIntermNode"** %2539 to i64
  br i1 %2540, label %2542, label %2547

2542:                                             ; preds = %2523
  %2543 = bitcast %"class.sh::TIntermNode"** %2537 to i64*
  store i64 %2535, i64* %2543, align 8
  %2544 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2537, i64 1
  %2545 = ptrtoint %"class.sh::TIntermNode"** %2544 to i64
  %2546 = bitcast %"class.sh::TIntermNode"*** %2536 to i64*
  store i64 %2545, i64* %2546, align 8
  br label %2760

2547:                                             ; preds = %2523
  %2548 = ptrtoint %"class.sh::TIntermNode"** %2537 to i64
  %2549 = bitcast %"class.sh::TIntermNode"*** %2536 to i64*
  %2550 = bitcast %"class.sh::TVector.31"* %2534 to i64*
  %2551 = load i64, i64* %2550, align 8
  %2552 = sub i64 %2548, %2551
  %2553 = ashr exact i64 %2552, 3
  %2554 = add nsw i64 %2553, 1
  %2555 = icmp ugt i64 %2554, 2305843009213693951
  br i1 %2555, label %2556, label %2558

2556:                                             ; preds = %2547
  %2557 = bitcast %"class.sh::TVector.31"* %2534 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2557) #9
  unreachable

2558:                                             ; preds = %2547
  %2559 = bitcast %"class.sh::TIntermNode"*** %2538 to i64*
  %2560 = sub i64 %2541, %2551
  %2561 = ashr exact i64 %2560, 3
  %2562 = icmp ult i64 %2561, 1152921504606846975
  br i1 %2562, label %2563, label %2568

2563:                                             ; preds = %2558
  %2564 = ashr exact i64 %2560, 2
  %2565 = icmp ult i64 %2564, %2554
  %2566 = select i1 %2565, i64 %2554, i64 %2564
  %2567 = icmp eq i64 %2566, 0
  br i1 %2567, label %2574, label %2568

2568:                                             ; preds = %2563, %2558
  %2569 = phi i64 [ %2566, %2563 ], [ 2305843009213693951, %2558 ]
  %2570 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2571 = shl i64 %2569, 3
  %2572 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2570, i64 %2571) #8
  %2573 = bitcast i8* %2572 to %"class.sh::TIntermNode"**
  br label %2574

2574:                                             ; preds = %2568, %2563
  %2575 = phi i64 [ %2569, %2568 ], [ 0, %2563 ]
  %2576 = phi %"class.sh::TIntermNode"** [ %2573, %2568 ], [ null, %2563 ]
  %2577 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2576, i64 %2553
  %2578 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2576, i64 %2575
  %2579 = ptrtoint %"class.sh::TIntermNode"** %2578 to i64
  %2580 = bitcast %"class.sh::TIntermNode"** %2577 to i64*
  store i64 %2535, i64* %2580, align 8
  %2581 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2577, i64 1
  %2582 = ptrtoint %"class.sh::TIntermNode"** %2581 to i64
  %2583 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %2534, i64 0, i32 0, i32 0, i32 0
  %2584 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2583, align 8
  %2585 = ptrtoint %"class.sh::TIntermNode"** %2584 to i64
  %2586 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2536, align 8
  %2587 = icmp eq %"class.sh::TIntermNode"** %2586, %2584
  br i1 %2587, label %2757, label %2588

2588:                                             ; preds = %2574
  %2589 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2586, i64 -1
  %2590 = ptrtoint %"class.sh::TIntermNode"** %2589 to i64
  %2591 = sub i64 %2590, %2585
  %2592 = lshr i64 %2591, 3
  %2593 = add nuw nsw i64 %2592, 1
  %2594 = icmp ult i64 %2593, 4
  br i1 %2594, label %2687, label %2595

2595:                                             ; preds = %2588
  %2596 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2586, i64 -1
  %2597 = ptrtoint %"class.sh::TIntermNode"** %2596 to i64
  %2598 = sub i64 %2597, %2585
  %2599 = lshr i64 %2598, 3
  %2600 = xor i64 %2599, -1
  %2601 = add nsw i64 %2553, %2600
  %2602 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2576, i64 %2601
  %2603 = xor i64 %2599, -1
  %2604 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2586, i64 %2603
  %2605 = icmp ult %"class.sh::TIntermNode"** %2602, %2586
  %2606 = icmp ult %"class.sh::TIntermNode"** %2604, %2577
  %2607 = and i1 %2605, %2606
  br i1 %2607, label %2687, label %2608

2608:                                             ; preds = %2595
  %2609 = and i64 %2593, 4611686018427387900
  %2610 = sub nsw i64 0, %2609
  %2611 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2577, i64 %2610
  %2612 = sub nsw i64 0, %2609
  %2613 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2586, i64 %2612
  %2614 = add nsw i64 %2609, -4
  %2615 = lshr exact i64 %2614, 2
  %2616 = add nuw nsw i64 %2615, 1
  %2617 = and i64 %2616, 1
  %2618 = icmp eq i64 %2614, 0
  br i1 %2618, label %2663, label %2619

2619:                                             ; preds = %2608
  %2620 = sub nuw nsw i64 %2616, %2617
  %2621 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2577, i64 -1
  %2622 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2586, i64 -1
  %2623 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2577, i64 -1
  %2624 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2586, i64 -1
  br label %2625

2625:                                             ; preds = %2625, %2619
  %2626 = phi i64 [ 0, %2619 ], [ %2660, %2625 ]
  %2627 = phi i64 [ %2620, %2619 ], [ %2661, %2625 ]
  %2628 = sub i64 0, %2626
  %2629 = sub i64 0, %2626
  %2630 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2621, i64 %2628
  %2631 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2622, i64 %2629
  %2632 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2631, i64 -1
  %2633 = bitcast %"class.sh::TIntermNode"** %2632 to <2 x i64>*
  %2634 = load <2 x i64>, <2 x i64>* %2633, align 8, !alias.scope !218
  %2635 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2631, i64 -2
  %2636 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2635, i64 -1
  %2637 = bitcast %"class.sh::TIntermNode"** %2636 to <2 x i64>*
  %2638 = load <2 x i64>, <2 x i64>* %2637, align 8, !alias.scope !218
  %2639 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2630, i64 -1
  %2640 = bitcast %"class.sh::TIntermNode"** %2639 to <2 x i64>*
  store <2 x i64> %2634, <2 x i64>* %2640, align 8, !alias.scope !221, !noalias !218
  %2641 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2630, i64 -2
  %2642 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2641, i64 -1
  %2643 = bitcast %"class.sh::TIntermNode"** %2642 to <2 x i64>*
  store <2 x i64> %2638, <2 x i64>* %2643, align 8, !alias.scope !221, !noalias !218
  %2644 = sub nuw nsw i64 -4, %2626
  %2645 = sub nuw nsw i64 -4, %2626
  %2646 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2623, i64 %2644
  %2647 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2624, i64 %2645
  %2648 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2647, i64 -1
  %2649 = bitcast %"class.sh::TIntermNode"** %2648 to <2 x i64>*
  %2650 = load <2 x i64>, <2 x i64>* %2649, align 8, !alias.scope !218
  %2651 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2647, i64 -2
  %2652 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2651, i64 -1
  %2653 = bitcast %"class.sh::TIntermNode"** %2652 to <2 x i64>*
  %2654 = load <2 x i64>, <2 x i64>* %2653, align 8, !alias.scope !218
  %2655 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2646, i64 -1
  %2656 = bitcast %"class.sh::TIntermNode"** %2655 to <2 x i64>*
  store <2 x i64> %2650, <2 x i64>* %2656, align 8, !alias.scope !221, !noalias !218
  %2657 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2646, i64 -2
  %2658 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2657, i64 -1
  %2659 = bitcast %"class.sh::TIntermNode"** %2658 to <2 x i64>*
  store <2 x i64> %2654, <2 x i64>* %2659, align 8, !alias.scope !221, !noalias !218
  %2660 = add i64 %2626, 8
  %2661 = add i64 %2627, -2
  %2662 = icmp eq i64 %2661, 0
  br i1 %2662, label %2663, label %2625, !llvm.loop !223

2663:                                             ; preds = %2625, %2608
  %2664 = phi i64 [ 0, %2608 ], [ %2660, %2625 ]
  %2665 = icmp eq i64 %2617, 0
  br i1 %2665, label %2685, label %2666

2666:                                             ; preds = %2663
  %2667 = sub i64 0, %2664
  %2668 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2577, i64 -1
  %2669 = sub i64 0, %2664
  %2670 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2586, i64 -1
  %2671 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2668, i64 %2667
  %2672 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2670, i64 %2669
  %2673 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2672, i64 -1
  %2674 = bitcast %"class.sh::TIntermNode"** %2673 to <2 x i64>*
  %2675 = load <2 x i64>, <2 x i64>* %2674, align 8, !alias.scope !218
  %2676 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2672, i64 -2
  %2677 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2676, i64 -1
  %2678 = bitcast %"class.sh::TIntermNode"** %2677 to <2 x i64>*
  %2679 = load <2 x i64>, <2 x i64>* %2678, align 8, !alias.scope !218
  %2680 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2671, i64 -1
  %2681 = bitcast %"class.sh::TIntermNode"** %2680 to <2 x i64>*
  store <2 x i64> %2675, <2 x i64>* %2681, align 8, !alias.scope !221, !noalias !218
  %2682 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2671, i64 -2
  %2683 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2682, i64 -1
  %2684 = bitcast %"class.sh::TIntermNode"** %2683 to <2 x i64>*
  store <2 x i64> %2679, <2 x i64>* %2684, align 8, !alias.scope !221, !noalias !218
  br label %2685

2685:                                             ; preds = %2663, %2666
  %2686 = icmp eq i64 %2593, %2609
  br i1 %2686, label %2757, label %2687

2687:                                             ; preds = %2685, %2595, %2588
  %2688 = phi %"class.sh::TIntermNode"** [ %2577, %2595 ], [ %2577, %2588 ], [ %2611, %2685 ]
  %2689 = phi %"class.sh::TIntermNode"** [ %2586, %2595 ], [ %2586, %2588 ], [ %2613, %2685 ]
  %2690 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2689, i64 -1
  %2691 = ptrtoint %"class.sh::TIntermNode"** %2690 to i64
  %2692 = sub i64 %2691, %2585
  %2693 = lshr i64 %2692, 3
  %2694 = add nuw nsw i64 %2693, 1
  %2695 = and i64 %2694, 7
  %2696 = icmp eq i64 %2695, 0
  br i1 %2696, label %2708, label %2697

2697:                                             ; preds = %2687, %2697
  %2698 = phi %"class.sh::TIntermNode"** [ %2701, %2697 ], [ %2688, %2687 ]
  %2699 = phi %"class.sh::TIntermNode"** [ %2702, %2697 ], [ %2689, %2687 ]
  %2700 = phi i64 [ %2706, %2697 ], [ %2695, %2687 ]
  %2701 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2698, i64 -1
  %2702 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2699, i64 -1
  %2703 = bitcast %"class.sh::TIntermNode"** %2702 to i64*
  %2704 = load i64, i64* %2703, align 8
  %2705 = bitcast %"class.sh::TIntermNode"** %2701 to i64*
  store i64 %2704, i64* %2705, align 8
  %2706 = add i64 %2700, -1
  %2707 = icmp eq i64 %2706, 0
  br i1 %2707, label %2708, label %2697, !llvm.loop !224

2708:                                             ; preds = %2697, %2687
  %2709 = phi %"class.sh::TIntermNode"** [ undef, %2687 ], [ %2701, %2697 ]
  %2710 = phi %"class.sh::TIntermNode"** [ %2688, %2687 ], [ %2701, %2697 ]
  %2711 = phi %"class.sh::TIntermNode"** [ %2689, %2687 ], [ %2702, %2697 ]
  %2712 = icmp ult i64 %2692, 56
  br i1 %2712, label %2757, label %2713

2713:                                             ; preds = %2708, %2713
  %2714 = phi %"class.sh::TIntermNode"** [ %2751, %2713 ], [ %2710, %2708 ]
  %2715 = phi %"class.sh::TIntermNode"** [ %2752, %2713 ], [ %2711, %2708 ]
  %2716 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2714, i64 -1
  %2717 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2715, i64 -1
  %2718 = bitcast %"class.sh::TIntermNode"** %2717 to i64*
  %2719 = load i64, i64* %2718, align 8
  %2720 = bitcast %"class.sh::TIntermNode"** %2716 to i64*
  store i64 %2719, i64* %2720, align 8
  %2721 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2714, i64 -2
  %2722 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2715, i64 -2
  %2723 = bitcast %"class.sh::TIntermNode"** %2722 to i64*
  %2724 = load i64, i64* %2723, align 8
  %2725 = bitcast %"class.sh::TIntermNode"** %2721 to i64*
  store i64 %2724, i64* %2725, align 8
  %2726 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2714, i64 -3
  %2727 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2715, i64 -3
  %2728 = bitcast %"class.sh::TIntermNode"** %2727 to i64*
  %2729 = load i64, i64* %2728, align 8
  %2730 = bitcast %"class.sh::TIntermNode"** %2726 to i64*
  store i64 %2729, i64* %2730, align 8
  %2731 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2714, i64 -4
  %2732 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2715, i64 -4
  %2733 = bitcast %"class.sh::TIntermNode"** %2732 to i64*
  %2734 = load i64, i64* %2733, align 8
  %2735 = bitcast %"class.sh::TIntermNode"** %2731 to i64*
  store i64 %2734, i64* %2735, align 8
  %2736 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2714, i64 -5
  %2737 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2715, i64 -5
  %2738 = bitcast %"class.sh::TIntermNode"** %2737 to i64*
  %2739 = load i64, i64* %2738, align 8
  %2740 = bitcast %"class.sh::TIntermNode"** %2736 to i64*
  store i64 %2739, i64* %2740, align 8
  %2741 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2714, i64 -6
  %2742 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2715, i64 -6
  %2743 = bitcast %"class.sh::TIntermNode"** %2742 to i64*
  %2744 = load i64, i64* %2743, align 8
  %2745 = bitcast %"class.sh::TIntermNode"** %2741 to i64*
  store i64 %2744, i64* %2745, align 8
  %2746 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2714, i64 -7
  %2747 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2715, i64 -7
  %2748 = bitcast %"class.sh::TIntermNode"** %2747 to i64*
  %2749 = load i64, i64* %2748, align 8
  %2750 = bitcast %"class.sh::TIntermNode"** %2746 to i64*
  store i64 %2749, i64* %2750, align 8
  %2751 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2714, i64 -8
  %2752 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2715, i64 -8
  %2753 = bitcast %"class.sh::TIntermNode"** %2752 to i64*
  %2754 = load i64, i64* %2753, align 8
  %2755 = bitcast %"class.sh::TIntermNode"** %2751 to i64*
  store i64 %2754, i64* %2755, align 8
  %2756 = icmp eq %"class.sh::TIntermNode"** %2752, %2584
  br i1 %2756, label %2757, label %2713, !llvm.loop !225

2757:                                             ; preds = %2708, %2713, %2685, %2574
  %2758 = phi %"class.sh::TIntermNode"** [ %2577, %2574 ], [ %2611, %2685 ], [ %2709, %2708 ], [ %2751, %2713 ]
  %2759 = ptrtoint %"class.sh::TIntermNode"** %2758 to i64
  store i64 %2759, i64* %2550, align 8
  store i64 %2582, i64* %2549, align 8
  store i64 %2579, i64* %2559, align 8
  br label %2760

2760:                                             ; preds = %2542, %2757
  %2761 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2762 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2761, i64 40) #8
  %2763 = bitcast i8* %2762 to i32 (...)***
  %2764 = getelementptr inbounds i8, i8* %2762, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %2764, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN2sh13TIntermBranchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2763, align 8
  %2765 = getelementptr inbounds i8, i8* %2762, i64 24
  store i8 -122, i8* %2765, align 8
  %2766 = getelementptr inbounds i8, i8* %2762, i64 32
  %2767 = bitcast i8* %2766 to i8**
  store i8* %820, i8** %2767, align 8
  %2768 = bitcast i8* %802 to %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)***
  %2769 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*** %2768, align 8
  %2770 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %2769, i64 27
  %2771 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %2770, align 8
  %2772 = call %"class.sh::TVector.31"* %2771(%"class.sh::TIntermBlock"* %803) #8
  %2773 = ptrtoint i8* %2762 to i64
  %2774 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %2772, i64 0, i32 0, i32 0, i32 1
  %2775 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2774, align 8
  %2776 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %2772, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %2777 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2776, align 8
  %2778 = icmp ult %"class.sh::TIntermNode"** %2775, %2777
  %2779 = ptrtoint %"class.sh::TIntermNode"** %2777 to i64
  br i1 %2778, label %2780, label %2785

2780:                                             ; preds = %2760
  %2781 = bitcast %"class.sh::TIntermNode"** %2775 to i64*
  store i64 %2773, i64* %2781, align 8
  %2782 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2775, i64 1
  %2783 = ptrtoint %"class.sh::TIntermNode"** %2782 to i64
  %2784 = bitcast %"class.sh::TIntermNode"*** %2774 to i64*
  store i64 %2783, i64* %2784, align 8
  br label %2998

2785:                                             ; preds = %2760
  %2786 = ptrtoint %"class.sh::TIntermNode"** %2775 to i64
  %2787 = bitcast %"class.sh::TIntermNode"*** %2774 to i64*
  %2788 = bitcast %"class.sh::TVector.31"* %2772 to i64*
  %2789 = load i64, i64* %2788, align 8
  %2790 = sub i64 %2786, %2789
  %2791 = ashr exact i64 %2790, 3
  %2792 = add nsw i64 %2791, 1
  %2793 = icmp ugt i64 %2792, 2305843009213693951
  br i1 %2793, label %2794, label %2796

2794:                                             ; preds = %2785
  %2795 = bitcast %"class.sh::TVector.31"* %2772 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2795) #9
  unreachable

2796:                                             ; preds = %2785
  %2797 = bitcast %"class.sh::TIntermNode"*** %2776 to i64*
  %2798 = sub i64 %2779, %2789
  %2799 = ashr exact i64 %2798, 3
  %2800 = icmp ult i64 %2799, 1152921504606846975
  br i1 %2800, label %2801, label %2806

2801:                                             ; preds = %2796
  %2802 = ashr exact i64 %2798, 2
  %2803 = icmp ult i64 %2802, %2792
  %2804 = select i1 %2803, i64 %2792, i64 %2802
  %2805 = icmp eq i64 %2804, 0
  br i1 %2805, label %2812, label %2806

2806:                                             ; preds = %2801, %2796
  %2807 = phi i64 [ %2804, %2801 ], [ 2305843009213693951, %2796 ]
  %2808 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %2809 = shl i64 %2807, 3
  %2810 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2808, i64 %2809) #8
  %2811 = bitcast i8* %2810 to %"class.sh::TIntermNode"**
  br label %2812

2812:                                             ; preds = %2806, %2801
  %2813 = phi i64 [ %2807, %2806 ], [ 0, %2801 ]
  %2814 = phi %"class.sh::TIntermNode"** [ %2811, %2806 ], [ null, %2801 ]
  %2815 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2814, i64 %2791
  %2816 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2814, i64 %2813
  %2817 = ptrtoint %"class.sh::TIntermNode"** %2816 to i64
  %2818 = bitcast %"class.sh::TIntermNode"** %2815 to i64*
  store i64 %2773, i64* %2818, align 8
  %2819 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2815, i64 1
  %2820 = ptrtoint %"class.sh::TIntermNode"** %2819 to i64
  %2821 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %2772, i64 0, i32 0, i32 0, i32 0
  %2822 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2821, align 8
  %2823 = ptrtoint %"class.sh::TIntermNode"** %2822 to i64
  %2824 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %2774, align 8
  %2825 = icmp eq %"class.sh::TIntermNode"** %2824, %2822
  br i1 %2825, label %2995, label %2826

2826:                                             ; preds = %2812
  %2827 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2824, i64 -1
  %2828 = ptrtoint %"class.sh::TIntermNode"** %2827 to i64
  %2829 = sub i64 %2828, %2823
  %2830 = lshr i64 %2829, 3
  %2831 = add nuw nsw i64 %2830, 1
  %2832 = icmp ult i64 %2831, 4
  br i1 %2832, label %2925, label %2833

2833:                                             ; preds = %2826
  %2834 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2824, i64 -1
  %2835 = ptrtoint %"class.sh::TIntermNode"** %2834 to i64
  %2836 = sub i64 %2835, %2823
  %2837 = lshr i64 %2836, 3
  %2838 = xor i64 %2837, -1
  %2839 = add nsw i64 %2791, %2838
  %2840 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2814, i64 %2839
  %2841 = xor i64 %2837, -1
  %2842 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2824, i64 %2841
  %2843 = icmp ult %"class.sh::TIntermNode"** %2840, %2824
  %2844 = icmp ult %"class.sh::TIntermNode"** %2842, %2815
  %2845 = and i1 %2843, %2844
  br i1 %2845, label %2925, label %2846

2846:                                             ; preds = %2833
  %2847 = and i64 %2831, 4611686018427387900
  %2848 = sub nsw i64 0, %2847
  %2849 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2815, i64 %2848
  %2850 = sub nsw i64 0, %2847
  %2851 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2824, i64 %2850
  %2852 = add nsw i64 %2847, -4
  %2853 = lshr exact i64 %2852, 2
  %2854 = add nuw nsw i64 %2853, 1
  %2855 = and i64 %2854, 1
  %2856 = icmp eq i64 %2852, 0
  br i1 %2856, label %2901, label %2857

2857:                                             ; preds = %2846
  %2858 = sub nuw nsw i64 %2854, %2855
  %2859 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2815, i64 -1
  %2860 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2824, i64 -1
  %2861 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2815, i64 -1
  %2862 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2824, i64 -1
  br label %2863

2863:                                             ; preds = %2863, %2857
  %2864 = phi i64 [ 0, %2857 ], [ %2898, %2863 ]
  %2865 = phi i64 [ %2858, %2857 ], [ %2899, %2863 ]
  %2866 = sub i64 0, %2864
  %2867 = sub i64 0, %2864
  %2868 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2859, i64 %2866
  %2869 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2860, i64 %2867
  %2870 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2869, i64 -1
  %2871 = bitcast %"class.sh::TIntermNode"** %2870 to <2 x i64>*
  %2872 = load <2 x i64>, <2 x i64>* %2871, align 8, !alias.scope !226
  %2873 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2869, i64 -2
  %2874 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2873, i64 -1
  %2875 = bitcast %"class.sh::TIntermNode"** %2874 to <2 x i64>*
  %2876 = load <2 x i64>, <2 x i64>* %2875, align 8, !alias.scope !226
  %2877 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2868, i64 -1
  %2878 = bitcast %"class.sh::TIntermNode"** %2877 to <2 x i64>*
  store <2 x i64> %2872, <2 x i64>* %2878, align 8, !alias.scope !229, !noalias !226
  %2879 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2868, i64 -2
  %2880 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2879, i64 -1
  %2881 = bitcast %"class.sh::TIntermNode"** %2880 to <2 x i64>*
  store <2 x i64> %2876, <2 x i64>* %2881, align 8, !alias.scope !229, !noalias !226
  %2882 = sub nuw nsw i64 -4, %2864
  %2883 = sub nuw nsw i64 -4, %2864
  %2884 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2861, i64 %2882
  %2885 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2862, i64 %2883
  %2886 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2885, i64 -1
  %2887 = bitcast %"class.sh::TIntermNode"** %2886 to <2 x i64>*
  %2888 = load <2 x i64>, <2 x i64>* %2887, align 8, !alias.scope !226
  %2889 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2885, i64 -2
  %2890 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2889, i64 -1
  %2891 = bitcast %"class.sh::TIntermNode"** %2890 to <2 x i64>*
  %2892 = load <2 x i64>, <2 x i64>* %2891, align 8, !alias.scope !226
  %2893 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2884, i64 -1
  %2894 = bitcast %"class.sh::TIntermNode"** %2893 to <2 x i64>*
  store <2 x i64> %2888, <2 x i64>* %2894, align 8, !alias.scope !229, !noalias !226
  %2895 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2884, i64 -2
  %2896 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2895, i64 -1
  %2897 = bitcast %"class.sh::TIntermNode"** %2896 to <2 x i64>*
  store <2 x i64> %2892, <2 x i64>* %2897, align 8, !alias.scope !229, !noalias !226
  %2898 = add i64 %2864, 8
  %2899 = add i64 %2865, -2
  %2900 = icmp eq i64 %2899, 0
  br i1 %2900, label %2901, label %2863, !llvm.loop !231

2901:                                             ; preds = %2863, %2846
  %2902 = phi i64 [ 0, %2846 ], [ %2898, %2863 ]
  %2903 = icmp eq i64 %2855, 0
  br i1 %2903, label %2923, label %2904

2904:                                             ; preds = %2901
  %2905 = sub i64 0, %2902
  %2906 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2815, i64 -1
  %2907 = sub i64 0, %2902
  %2908 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2824, i64 -1
  %2909 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2906, i64 %2905
  %2910 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2908, i64 %2907
  %2911 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2910, i64 -1
  %2912 = bitcast %"class.sh::TIntermNode"** %2911 to <2 x i64>*
  %2913 = load <2 x i64>, <2 x i64>* %2912, align 8, !alias.scope !226
  %2914 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2910, i64 -2
  %2915 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2914, i64 -1
  %2916 = bitcast %"class.sh::TIntermNode"** %2915 to <2 x i64>*
  %2917 = load <2 x i64>, <2 x i64>* %2916, align 8, !alias.scope !226
  %2918 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2909, i64 -1
  %2919 = bitcast %"class.sh::TIntermNode"** %2918 to <2 x i64>*
  store <2 x i64> %2913, <2 x i64>* %2919, align 8, !alias.scope !229, !noalias !226
  %2920 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2909, i64 -2
  %2921 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2920, i64 -1
  %2922 = bitcast %"class.sh::TIntermNode"** %2921 to <2 x i64>*
  store <2 x i64> %2917, <2 x i64>* %2922, align 8, !alias.scope !229, !noalias !226
  br label %2923

2923:                                             ; preds = %2901, %2904
  %2924 = icmp eq i64 %2831, %2847
  br i1 %2924, label %2995, label %2925

2925:                                             ; preds = %2923, %2833, %2826
  %2926 = phi %"class.sh::TIntermNode"** [ %2815, %2833 ], [ %2815, %2826 ], [ %2849, %2923 ]
  %2927 = phi %"class.sh::TIntermNode"** [ %2824, %2833 ], [ %2824, %2826 ], [ %2851, %2923 ]
  %2928 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2927, i64 -1
  %2929 = ptrtoint %"class.sh::TIntermNode"** %2928 to i64
  %2930 = sub i64 %2929, %2823
  %2931 = lshr i64 %2930, 3
  %2932 = add nuw nsw i64 %2931, 1
  %2933 = and i64 %2932, 7
  %2934 = icmp eq i64 %2933, 0
  br i1 %2934, label %2946, label %2935

2935:                                             ; preds = %2925, %2935
  %2936 = phi %"class.sh::TIntermNode"** [ %2939, %2935 ], [ %2926, %2925 ]
  %2937 = phi %"class.sh::TIntermNode"** [ %2940, %2935 ], [ %2927, %2925 ]
  %2938 = phi i64 [ %2944, %2935 ], [ %2933, %2925 ]
  %2939 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2936, i64 -1
  %2940 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2937, i64 -1
  %2941 = bitcast %"class.sh::TIntermNode"** %2940 to i64*
  %2942 = load i64, i64* %2941, align 8
  %2943 = bitcast %"class.sh::TIntermNode"** %2939 to i64*
  store i64 %2942, i64* %2943, align 8
  %2944 = add i64 %2938, -1
  %2945 = icmp eq i64 %2944, 0
  br i1 %2945, label %2946, label %2935, !llvm.loop !232

2946:                                             ; preds = %2935, %2925
  %2947 = phi %"class.sh::TIntermNode"** [ undef, %2925 ], [ %2939, %2935 ]
  %2948 = phi %"class.sh::TIntermNode"** [ %2926, %2925 ], [ %2939, %2935 ]
  %2949 = phi %"class.sh::TIntermNode"** [ %2927, %2925 ], [ %2940, %2935 ]
  %2950 = icmp ult i64 %2930, 56
  br i1 %2950, label %2995, label %2951

2951:                                             ; preds = %2946, %2951
  %2952 = phi %"class.sh::TIntermNode"** [ %2989, %2951 ], [ %2948, %2946 ]
  %2953 = phi %"class.sh::TIntermNode"** [ %2990, %2951 ], [ %2949, %2946 ]
  %2954 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2952, i64 -1
  %2955 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2953, i64 -1
  %2956 = bitcast %"class.sh::TIntermNode"** %2955 to i64*
  %2957 = load i64, i64* %2956, align 8
  %2958 = bitcast %"class.sh::TIntermNode"** %2954 to i64*
  store i64 %2957, i64* %2958, align 8
  %2959 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2952, i64 -2
  %2960 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2953, i64 -2
  %2961 = bitcast %"class.sh::TIntermNode"** %2960 to i64*
  %2962 = load i64, i64* %2961, align 8
  %2963 = bitcast %"class.sh::TIntermNode"** %2959 to i64*
  store i64 %2962, i64* %2963, align 8
  %2964 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2952, i64 -3
  %2965 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2953, i64 -3
  %2966 = bitcast %"class.sh::TIntermNode"** %2965 to i64*
  %2967 = load i64, i64* %2966, align 8
  %2968 = bitcast %"class.sh::TIntermNode"** %2964 to i64*
  store i64 %2967, i64* %2968, align 8
  %2969 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2952, i64 -4
  %2970 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2953, i64 -4
  %2971 = bitcast %"class.sh::TIntermNode"** %2970 to i64*
  %2972 = load i64, i64* %2971, align 8
  %2973 = bitcast %"class.sh::TIntermNode"** %2969 to i64*
  store i64 %2972, i64* %2973, align 8
  %2974 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2952, i64 -5
  %2975 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2953, i64 -5
  %2976 = bitcast %"class.sh::TIntermNode"** %2975 to i64*
  %2977 = load i64, i64* %2976, align 8
  %2978 = bitcast %"class.sh::TIntermNode"** %2974 to i64*
  store i64 %2977, i64* %2978, align 8
  %2979 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2952, i64 -6
  %2980 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2953, i64 -6
  %2981 = bitcast %"class.sh::TIntermNode"** %2980 to i64*
  %2982 = load i64, i64* %2981, align 8
  %2983 = bitcast %"class.sh::TIntermNode"** %2979 to i64*
  store i64 %2982, i64* %2983, align 8
  %2984 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2952, i64 -7
  %2985 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2953, i64 -7
  %2986 = bitcast %"class.sh::TIntermNode"** %2985 to i64*
  %2987 = load i64, i64* %2986, align 8
  %2988 = bitcast %"class.sh::TIntermNode"** %2984 to i64*
  store i64 %2987, i64* %2988, align 8
  %2989 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2952, i64 -8
  %2990 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2953, i64 -8
  %2991 = bitcast %"class.sh::TIntermNode"** %2990 to i64*
  %2992 = load i64, i64* %2991, align 8
  %2993 = bitcast %"class.sh::TIntermNode"** %2989 to i64*
  store i64 %2992, i64* %2993, align 8
  %2994 = icmp eq %"class.sh::TIntermNode"** %2990, %2822
  br i1 %2994, label %2995, label %2951, !llvm.loop !233

2995:                                             ; preds = %2946, %2951, %2923, %2812
  %2996 = phi %"class.sh::TIntermNode"** [ %2815, %2812 ], [ %2849, %2923 ], [ %2947, %2946 ], [ %2989, %2951 ]
  %2997 = ptrtoint %"class.sh::TIntermNode"** %2996 to i64
  store i64 %2997, i64* %2788, align 8
  store i64 %2820, i64* %2787, align 8
  store i64 %2817, i64* %2797, align 8
  br label %2998

2998:                                             ; preds = %2995, %2780, %2520, %2305
  %2999 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %3000 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2999, i64 48) #8
  %3001 = bitcast i8* %3000 to %"class.sh::TIntermIfElse"*
  %3002 = bitcast i8* %773 to %"class.sh::TIntermTyped"*
  call void @_ZN2sh13TIntermIfElseC1EPNS_12TIntermTypedEPNS_12TIntermBlockES4_(%"class.sh::TIntermIfElse"* %3001, %"class.sh::TIntermTyped"* %3002, %"class.sh::TIntermBlock"* %795, %"class.sh::TIntermBlock"* null) #8
  %3003 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*** %543, align 8
  %3004 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %3003, i64 27
  %3005 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %3004, align 8
  %3006 = call %"class.sh::TVector.31"* %3005(%"class.sh::TIntermBlock"* %537) #8
  %3007 = ptrtoint i8* %3000 to i64
  %3008 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %3006, i64 0, i32 0, i32 0, i32 1
  %3009 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %3008, align 8
  %3010 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %3006, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3011 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %3010, align 8
  %3012 = icmp ult %"class.sh::TIntermNode"** %3009, %3011
  %3013 = ptrtoint %"class.sh::TIntermNode"** %3011 to i64
  br i1 %3012, label %3014, label %3019

3014:                                             ; preds = %2998
  %3015 = bitcast %"class.sh::TIntermNode"** %3009 to i64*
  store i64 %3007, i64* %3015, align 8
  %3016 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3009, i64 1
  %3017 = ptrtoint %"class.sh::TIntermNode"** %3016 to i64
  %3018 = bitcast %"class.sh::TIntermNode"*** %3008 to i64*
  store i64 %3017, i64* %3018, align 8
  br label %3232

3019:                                             ; preds = %2998
  %3020 = ptrtoint %"class.sh::TIntermNode"** %3009 to i64
  %3021 = bitcast %"class.sh::TIntermNode"*** %3008 to i64*
  %3022 = bitcast %"class.sh::TVector.31"* %3006 to i64*
  %3023 = load i64, i64* %3022, align 8
  %3024 = sub i64 %3020, %3023
  %3025 = ashr exact i64 %3024, 3
  %3026 = add nsw i64 %3025, 1
  %3027 = icmp ugt i64 %3026, 2305843009213693951
  br i1 %3027, label %3028, label %3030

3028:                                             ; preds = %3019
  %3029 = bitcast %"class.sh::TVector.31"* %3006 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3029) #9
  unreachable

3030:                                             ; preds = %3019
  %3031 = bitcast %"class.sh::TIntermNode"*** %3010 to i64*
  %3032 = sub i64 %3013, %3023
  %3033 = ashr exact i64 %3032, 3
  %3034 = icmp ult i64 %3033, 1152921504606846975
  br i1 %3034, label %3035, label %3040

3035:                                             ; preds = %3030
  %3036 = ashr exact i64 %3032, 2
  %3037 = icmp ult i64 %3036, %3026
  %3038 = select i1 %3037, i64 %3026, i64 %3036
  %3039 = icmp eq i64 %3038, 0
  br i1 %3039, label %3046, label %3040

3040:                                             ; preds = %3035, %3030
  %3041 = phi i64 [ %3038, %3035 ], [ 2305843009213693951, %3030 ]
  %3042 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %3043 = shl i64 %3041, 3
  %3044 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %3042, i64 %3043) #8
  %3045 = bitcast i8* %3044 to %"class.sh::TIntermNode"**
  br label %3046

3046:                                             ; preds = %3040, %3035
  %3047 = phi i64 [ %3041, %3040 ], [ 0, %3035 ]
  %3048 = phi %"class.sh::TIntermNode"** [ %3045, %3040 ], [ null, %3035 ]
  %3049 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3048, i64 %3025
  %3050 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3048, i64 %3047
  %3051 = ptrtoint %"class.sh::TIntermNode"** %3050 to i64
  %3052 = bitcast %"class.sh::TIntermNode"** %3049 to i64*
  store i64 %3007, i64* %3052, align 8
  %3053 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3049, i64 1
  %3054 = ptrtoint %"class.sh::TIntermNode"** %3053 to i64
  %3055 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %3006, i64 0, i32 0, i32 0, i32 0
  %3056 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %3055, align 8
  %3057 = ptrtoint %"class.sh::TIntermNode"** %3056 to i64
  %3058 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %3008, align 8
  %3059 = icmp eq %"class.sh::TIntermNode"** %3058, %3056
  br i1 %3059, label %3229, label %3060

3060:                                             ; preds = %3046
  %3061 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3058, i64 -1
  %3062 = ptrtoint %"class.sh::TIntermNode"** %3061 to i64
  %3063 = sub i64 %3062, %3057
  %3064 = lshr i64 %3063, 3
  %3065 = add nuw nsw i64 %3064, 1
  %3066 = icmp ult i64 %3065, 4
  br i1 %3066, label %3159, label %3067

3067:                                             ; preds = %3060
  %3068 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3058, i64 -1
  %3069 = ptrtoint %"class.sh::TIntermNode"** %3068 to i64
  %3070 = sub i64 %3069, %3057
  %3071 = lshr i64 %3070, 3
  %3072 = xor i64 %3071, -1
  %3073 = add nsw i64 %3025, %3072
  %3074 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3048, i64 %3073
  %3075 = xor i64 %3071, -1
  %3076 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3058, i64 %3075
  %3077 = icmp ult %"class.sh::TIntermNode"** %3074, %3058
  %3078 = icmp ult %"class.sh::TIntermNode"** %3076, %3049
  %3079 = and i1 %3077, %3078
  br i1 %3079, label %3159, label %3080

3080:                                             ; preds = %3067
  %3081 = and i64 %3065, 4611686018427387900
  %3082 = sub nsw i64 0, %3081
  %3083 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3049, i64 %3082
  %3084 = sub nsw i64 0, %3081
  %3085 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3058, i64 %3084
  %3086 = add nsw i64 %3081, -4
  %3087 = lshr exact i64 %3086, 2
  %3088 = add nuw nsw i64 %3087, 1
  %3089 = and i64 %3088, 1
  %3090 = icmp eq i64 %3086, 0
  br i1 %3090, label %3135, label %3091

3091:                                             ; preds = %3080
  %3092 = sub nuw nsw i64 %3088, %3089
  %3093 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3049, i64 -1
  %3094 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3058, i64 -1
  %3095 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3049, i64 -1
  %3096 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3058, i64 -1
  br label %3097

3097:                                             ; preds = %3097, %3091
  %3098 = phi i64 [ 0, %3091 ], [ %3132, %3097 ]
  %3099 = phi i64 [ %3092, %3091 ], [ %3133, %3097 ]
  %3100 = sub i64 0, %3098
  %3101 = sub i64 0, %3098
  %3102 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3093, i64 %3100
  %3103 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3094, i64 %3101
  %3104 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3103, i64 -1
  %3105 = bitcast %"class.sh::TIntermNode"** %3104 to <2 x i64>*
  %3106 = load <2 x i64>, <2 x i64>* %3105, align 8, !alias.scope !234
  %3107 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3103, i64 -2
  %3108 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3107, i64 -1
  %3109 = bitcast %"class.sh::TIntermNode"** %3108 to <2 x i64>*
  %3110 = load <2 x i64>, <2 x i64>* %3109, align 8, !alias.scope !234
  %3111 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3102, i64 -1
  %3112 = bitcast %"class.sh::TIntermNode"** %3111 to <2 x i64>*
  store <2 x i64> %3106, <2 x i64>* %3112, align 8, !alias.scope !237, !noalias !234
  %3113 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3102, i64 -2
  %3114 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3113, i64 -1
  %3115 = bitcast %"class.sh::TIntermNode"** %3114 to <2 x i64>*
  store <2 x i64> %3110, <2 x i64>* %3115, align 8, !alias.scope !237, !noalias !234
  %3116 = sub nuw nsw i64 -4, %3098
  %3117 = sub nuw nsw i64 -4, %3098
  %3118 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3095, i64 %3116
  %3119 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3096, i64 %3117
  %3120 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3119, i64 -1
  %3121 = bitcast %"class.sh::TIntermNode"** %3120 to <2 x i64>*
  %3122 = load <2 x i64>, <2 x i64>* %3121, align 8, !alias.scope !234
  %3123 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3119, i64 -2
  %3124 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3123, i64 -1
  %3125 = bitcast %"class.sh::TIntermNode"** %3124 to <2 x i64>*
  %3126 = load <2 x i64>, <2 x i64>* %3125, align 8, !alias.scope !234
  %3127 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3118, i64 -1
  %3128 = bitcast %"class.sh::TIntermNode"** %3127 to <2 x i64>*
  store <2 x i64> %3122, <2 x i64>* %3128, align 8, !alias.scope !237, !noalias !234
  %3129 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3118, i64 -2
  %3130 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3129, i64 -1
  %3131 = bitcast %"class.sh::TIntermNode"** %3130 to <2 x i64>*
  store <2 x i64> %3126, <2 x i64>* %3131, align 8, !alias.scope !237, !noalias !234
  %3132 = add i64 %3098, 8
  %3133 = add i64 %3099, -2
  %3134 = icmp eq i64 %3133, 0
  br i1 %3134, label %3135, label %3097, !llvm.loop !239

3135:                                             ; preds = %3097, %3080
  %3136 = phi i64 [ 0, %3080 ], [ %3132, %3097 ]
  %3137 = icmp eq i64 %3089, 0
  br i1 %3137, label %3157, label %3138

3138:                                             ; preds = %3135
  %3139 = sub i64 0, %3136
  %3140 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3049, i64 -1
  %3141 = sub i64 0, %3136
  %3142 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3058, i64 -1
  %3143 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3140, i64 %3139
  %3144 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3142, i64 %3141
  %3145 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3144, i64 -1
  %3146 = bitcast %"class.sh::TIntermNode"** %3145 to <2 x i64>*
  %3147 = load <2 x i64>, <2 x i64>* %3146, align 8, !alias.scope !234
  %3148 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3144, i64 -2
  %3149 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3148, i64 -1
  %3150 = bitcast %"class.sh::TIntermNode"** %3149 to <2 x i64>*
  %3151 = load <2 x i64>, <2 x i64>* %3150, align 8, !alias.scope !234
  %3152 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3143, i64 -1
  %3153 = bitcast %"class.sh::TIntermNode"** %3152 to <2 x i64>*
  store <2 x i64> %3147, <2 x i64>* %3153, align 8, !alias.scope !237, !noalias !234
  %3154 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3143, i64 -2
  %3155 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3154, i64 -1
  %3156 = bitcast %"class.sh::TIntermNode"** %3155 to <2 x i64>*
  store <2 x i64> %3151, <2 x i64>* %3156, align 8, !alias.scope !237, !noalias !234
  br label %3157

3157:                                             ; preds = %3135, %3138
  %3158 = icmp eq i64 %3065, %3081
  br i1 %3158, label %3229, label %3159

3159:                                             ; preds = %3157, %3067, %3060
  %3160 = phi %"class.sh::TIntermNode"** [ %3049, %3067 ], [ %3049, %3060 ], [ %3083, %3157 ]
  %3161 = phi %"class.sh::TIntermNode"** [ %3058, %3067 ], [ %3058, %3060 ], [ %3085, %3157 ]
  %3162 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3161, i64 -1
  %3163 = ptrtoint %"class.sh::TIntermNode"** %3162 to i64
  %3164 = sub i64 %3163, %3057
  %3165 = lshr i64 %3164, 3
  %3166 = add nuw nsw i64 %3165, 1
  %3167 = and i64 %3166, 7
  %3168 = icmp eq i64 %3167, 0
  br i1 %3168, label %3180, label %3169

3169:                                             ; preds = %3159, %3169
  %3170 = phi %"class.sh::TIntermNode"** [ %3173, %3169 ], [ %3160, %3159 ]
  %3171 = phi %"class.sh::TIntermNode"** [ %3174, %3169 ], [ %3161, %3159 ]
  %3172 = phi i64 [ %3178, %3169 ], [ %3167, %3159 ]
  %3173 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3170, i64 -1
  %3174 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3171, i64 -1
  %3175 = bitcast %"class.sh::TIntermNode"** %3174 to i64*
  %3176 = load i64, i64* %3175, align 8
  %3177 = bitcast %"class.sh::TIntermNode"** %3173 to i64*
  store i64 %3176, i64* %3177, align 8
  %3178 = add i64 %3172, -1
  %3179 = icmp eq i64 %3178, 0
  br i1 %3179, label %3180, label %3169, !llvm.loop !240

3180:                                             ; preds = %3169, %3159
  %3181 = phi %"class.sh::TIntermNode"** [ undef, %3159 ], [ %3173, %3169 ]
  %3182 = phi %"class.sh::TIntermNode"** [ %3160, %3159 ], [ %3173, %3169 ]
  %3183 = phi %"class.sh::TIntermNode"** [ %3161, %3159 ], [ %3174, %3169 ]
  %3184 = icmp ult i64 %3164, 56
  br i1 %3184, label %3229, label %3185

3185:                                             ; preds = %3180, %3185
  %3186 = phi %"class.sh::TIntermNode"** [ %3223, %3185 ], [ %3182, %3180 ]
  %3187 = phi %"class.sh::TIntermNode"** [ %3224, %3185 ], [ %3183, %3180 ]
  %3188 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3186, i64 -1
  %3189 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3187, i64 -1
  %3190 = bitcast %"class.sh::TIntermNode"** %3189 to i64*
  %3191 = load i64, i64* %3190, align 8
  %3192 = bitcast %"class.sh::TIntermNode"** %3188 to i64*
  store i64 %3191, i64* %3192, align 8
  %3193 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3186, i64 -2
  %3194 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3187, i64 -2
  %3195 = bitcast %"class.sh::TIntermNode"** %3194 to i64*
  %3196 = load i64, i64* %3195, align 8
  %3197 = bitcast %"class.sh::TIntermNode"** %3193 to i64*
  store i64 %3196, i64* %3197, align 8
  %3198 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3186, i64 -3
  %3199 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3187, i64 -3
  %3200 = bitcast %"class.sh::TIntermNode"** %3199 to i64*
  %3201 = load i64, i64* %3200, align 8
  %3202 = bitcast %"class.sh::TIntermNode"** %3198 to i64*
  store i64 %3201, i64* %3202, align 8
  %3203 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3186, i64 -4
  %3204 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3187, i64 -4
  %3205 = bitcast %"class.sh::TIntermNode"** %3204 to i64*
  %3206 = load i64, i64* %3205, align 8
  %3207 = bitcast %"class.sh::TIntermNode"** %3203 to i64*
  store i64 %3206, i64* %3207, align 8
  %3208 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3186, i64 -5
  %3209 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3187, i64 -5
  %3210 = bitcast %"class.sh::TIntermNode"** %3209 to i64*
  %3211 = load i64, i64* %3210, align 8
  %3212 = bitcast %"class.sh::TIntermNode"** %3208 to i64*
  store i64 %3211, i64* %3212, align 8
  %3213 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3186, i64 -6
  %3214 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3187, i64 -6
  %3215 = bitcast %"class.sh::TIntermNode"** %3214 to i64*
  %3216 = load i64, i64* %3215, align 8
  %3217 = bitcast %"class.sh::TIntermNode"** %3213 to i64*
  store i64 %3216, i64* %3217, align 8
  %3218 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3186, i64 -7
  %3219 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3187, i64 -7
  %3220 = bitcast %"class.sh::TIntermNode"** %3219 to i64*
  %3221 = load i64, i64* %3220, align 8
  %3222 = bitcast %"class.sh::TIntermNode"** %3218 to i64*
  store i64 %3221, i64* %3222, align 8
  %3223 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3186, i64 -8
  %3224 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3187, i64 -8
  %3225 = bitcast %"class.sh::TIntermNode"** %3224 to i64*
  %3226 = load i64, i64* %3225, align 8
  %3227 = bitcast %"class.sh::TIntermNode"** %3223 to i64*
  store i64 %3226, i64* %3227, align 8
  %3228 = icmp eq %"class.sh::TIntermNode"** %3224, %3056
  br i1 %3228, label %3229, label %3185, !llvm.loop !241

3229:                                             ; preds = %3180, %3185, %3157, %3046
  %3230 = phi %"class.sh::TIntermNode"** [ %3049, %3046 ], [ %3083, %3157 ], [ %3181, %3180 ], [ %3223, %3185 ]
  %3231 = ptrtoint %"class.sh::TIntermNode"** %3230 to i64
  store i64 %3231, i64* %3022, align 8
  store i64 %3054, i64* %3021, align 8
  store i64 %3051, i64* %3031, align 8
  br label %3232

3232:                                             ; preds = %3014, %3229
  %3233 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*** %543, align 8
  %3234 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %3233, i64 27
  %3235 = load %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermBlock"*)** %3234, align 8
  %3236 = call %"class.sh::TVector.31"* %3235(%"class.sh::TIntermBlock"* %537) #8
  %3237 = ptrtoint i8* %802 to i64
  %3238 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %3236, i64 0, i32 0, i32 0, i32 1
  %3239 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %3238, align 8
  %3240 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %3236, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3241 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %3240, align 8
  %3242 = icmp ult %"class.sh::TIntermNode"** %3239, %3241
  %3243 = ptrtoint %"class.sh::TIntermNode"** %3241 to i64
  br i1 %3242, label %3244, label %3249

3244:                                             ; preds = %3232
  %3245 = bitcast %"class.sh::TIntermNode"** %3239 to i64*
  store i64 %3237, i64* %3245, align 8
  %3246 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3239, i64 1
  %3247 = ptrtoint %"class.sh::TIntermNode"** %3246 to i64
  %3248 = bitcast %"class.sh::TIntermNode"*** %3238 to i64*
  store i64 %3247, i64* %3248, align 8
  br label %3462

3249:                                             ; preds = %3232
  %3250 = ptrtoint %"class.sh::TIntermNode"** %3239 to i64
  %3251 = bitcast %"class.sh::TIntermNode"*** %3238 to i64*
  %3252 = bitcast %"class.sh::TVector.31"* %3236 to i64*
  %3253 = load i64, i64* %3252, align 8
  %3254 = sub i64 %3250, %3253
  %3255 = ashr exact i64 %3254, 3
  %3256 = add nsw i64 %3255, 1
  %3257 = icmp ugt i64 %3256, 2305843009213693951
  br i1 %3257, label %3258, label %3260

3258:                                             ; preds = %3249
  %3259 = bitcast %"class.sh::TVector.31"* %3236 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %3259) #9
  unreachable

3260:                                             ; preds = %3249
  %3261 = bitcast %"class.sh::TIntermNode"*** %3240 to i64*
  %3262 = sub i64 %3243, %3253
  %3263 = ashr exact i64 %3262, 3
  %3264 = icmp ult i64 %3263, 1152921504606846975
  br i1 %3264, label %3265, label %3270

3265:                                             ; preds = %3260
  %3266 = ashr exact i64 %3262, 2
  %3267 = icmp ult i64 %3266, %3256
  %3268 = select i1 %3267, i64 %3256, i64 %3266
  %3269 = icmp eq i64 %3268, 0
  br i1 %3269, label %3276, label %3270

3270:                                             ; preds = %3265, %3260
  %3271 = phi i64 [ %3268, %3265 ], [ 2305843009213693951, %3260 ]
  %3272 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %3273 = shl i64 %3271, 3
  %3274 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %3272, i64 %3273) #8
  %3275 = bitcast i8* %3274 to %"class.sh::TIntermNode"**
  br label %3276

3276:                                             ; preds = %3270, %3265
  %3277 = phi i64 [ %3271, %3270 ], [ 0, %3265 ]
  %3278 = phi %"class.sh::TIntermNode"** [ %3275, %3270 ], [ null, %3265 ]
  %3279 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3278, i64 %3255
  %3280 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3278, i64 %3277
  %3281 = ptrtoint %"class.sh::TIntermNode"** %3280 to i64
  %3282 = bitcast %"class.sh::TIntermNode"** %3279 to i64*
  store i64 %3237, i64* %3282, align 8
  %3283 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3279, i64 1
  %3284 = ptrtoint %"class.sh::TIntermNode"** %3283 to i64
  %3285 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %3236, i64 0, i32 0, i32 0, i32 0
  %3286 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %3285, align 8
  %3287 = ptrtoint %"class.sh::TIntermNode"** %3286 to i64
  %3288 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %3238, align 8
  %3289 = icmp eq %"class.sh::TIntermNode"** %3288, %3286
  br i1 %3289, label %3459, label %3290

3290:                                             ; preds = %3276
  %3291 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3288, i64 -1
  %3292 = ptrtoint %"class.sh::TIntermNode"** %3291 to i64
  %3293 = sub i64 %3292, %3287
  %3294 = lshr i64 %3293, 3
  %3295 = add nuw nsw i64 %3294, 1
  %3296 = icmp ult i64 %3295, 4
  br i1 %3296, label %3389, label %3297

3297:                                             ; preds = %3290
  %3298 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3288, i64 -1
  %3299 = ptrtoint %"class.sh::TIntermNode"** %3298 to i64
  %3300 = sub i64 %3299, %3287
  %3301 = lshr i64 %3300, 3
  %3302 = xor i64 %3301, -1
  %3303 = add nsw i64 %3255, %3302
  %3304 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3278, i64 %3303
  %3305 = xor i64 %3301, -1
  %3306 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3288, i64 %3305
  %3307 = icmp ult %"class.sh::TIntermNode"** %3304, %3288
  %3308 = icmp ult %"class.sh::TIntermNode"** %3306, %3279
  %3309 = and i1 %3307, %3308
  br i1 %3309, label %3389, label %3310

3310:                                             ; preds = %3297
  %3311 = and i64 %3295, 4611686018427387900
  %3312 = sub nsw i64 0, %3311
  %3313 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3279, i64 %3312
  %3314 = sub nsw i64 0, %3311
  %3315 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3288, i64 %3314
  %3316 = add nsw i64 %3311, -4
  %3317 = lshr exact i64 %3316, 2
  %3318 = add nuw nsw i64 %3317, 1
  %3319 = and i64 %3318, 1
  %3320 = icmp eq i64 %3316, 0
  br i1 %3320, label %3367, label %3321

3321:                                             ; preds = %3310
  %3322 = sub nuw nsw i64 %3318, %3319
  %3323 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3279, i64 -1
  %3324 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3288, i64 -1
  %3325 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3279, i64 -1
  %3326 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3288, i64 -1
  br label %3327

3327:                                             ; preds = %3327, %3321
  %3328 = phi i64 [ 0, %3321 ], [ %3362, %3327 ]
  %3329 = phi i64 [ %3322, %3321 ], [ %3363, %3327 ]
  %3330 = sub i64 0, %3328
  %3331 = sub i64 0, %3328
  %3332 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3323, i64 %3330
  %3333 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3324, i64 %3331
  %3334 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3333, i64 -1
  %3335 = bitcast %"class.sh::TIntermNode"** %3334 to <2 x i64>*
  %3336 = load <2 x i64>, <2 x i64>* %3335, align 8, !alias.scope !242
  %3337 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3333, i64 -2
  %3338 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3337, i64 -1
  %3339 = bitcast %"class.sh::TIntermNode"** %3338 to <2 x i64>*
  %3340 = load <2 x i64>, <2 x i64>* %3339, align 8, !alias.scope !242
  %3341 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3332, i64 -1
  %3342 = bitcast %"class.sh::TIntermNode"** %3341 to <2 x i64>*
  store <2 x i64> %3336, <2 x i64>* %3342, align 8, !alias.scope !245, !noalias !242
  %3343 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3332, i64 -2
  %3344 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3343, i64 -1
  %3345 = bitcast %"class.sh::TIntermNode"** %3344 to <2 x i64>*
  store <2 x i64> %3340, <2 x i64>* %3345, align 8, !alias.scope !245, !noalias !242
  %3346 = sub nuw nsw i64 -4, %3328
  %3347 = sub nuw nsw i64 -4, %3328
  %3348 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3325, i64 %3346
  %3349 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3326, i64 %3347
  %3350 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3349, i64 -1
  %3351 = bitcast %"class.sh::TIntermNode"** %3350 to <2 x i64>*
  %3352 = load <2 x i64>, <2 x i64>* %3351, align 8, !alias.scope !242
  %3353 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3349, i64 -2
  %3354 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3353, i64 -1
  %3355 = bitcast %"class.sh::TIntermNode"** %3354 to <2 x i64>*
  %3356 = load <2 x i64>, <2 x i64>* %3355, align 8, !alias.scope !242
  %3357 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3348, i64 -1
  %3358 = bitcast %"class.sh::TIntermNode"** %3357 to <2 x i64>*
  store <2 x i64> %3352, <2 x i64>* %3358, align 8, !alias.scope !245, !noalias !242
  %3359 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3348, i64 -2
  %3360 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3359, i64 -1
  %3361 = bitcast %"class.sh::TIntermNode"** %3360 to <2 x i64>*
  store <2 x i64> %3356, <2 x i64>* %3361, align 8, !alias.scope !245, !noalias !242
  %3362 = add i64 %3328, 8
  %3363 = add i64 %3329, -2
  %3364 = icmp eq i64 %3363, 0
  br i1 %3364, label %3365, label %3327, !llvm.loop !247

3365:                                             ; preds = %3327
  %3366 = sub nuw nsw i64 -8, %3328
  br label %3367

3367:                                             ; preds = %3365, %3310
  %3368 = phi i64 [ 0, %3310 ], [ %3366, %3365 ]
  %3369 = icmp eq i64 %3319, 0
  br i1 %3369, label %3387, label %3370

3370:                                             ; preds = %3367
  %3371 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3279, i64 -1
  %3372 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3288, i64 -1
  %3373 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3371, i64 %3368
  %3374 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3372, i64 %3368
  %3375 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3374, i64 -1
  %3376 = bitcast %"class.sh::TIntermNode"** %3375 to <2 x i64>*
  %3377 = load <2 x i64>, <2 x i64>* %3376, align 8, !alias.scope !242
  %3378 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3374, i64 -2
  %3379 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3378, i64 -1
  %3380 = bitcast %"class.sh::TIntermNode"** %3379 to <2 x i64>*
  %3381 = load <2 x i64>, <2 x i64>* %3380, align 8, !alias.scope !242
  %3382 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3373, i64 -1
  %3383 = bitcast %"class.sh::TIntermNode"** %3382 to <2 x i64>*
  store <2 x i64> %3377, <2 x i64>* %3383, align 8, !alias.scope !245, !noalias !242
  %3384 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3373, i64 -2
  %3385 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3384, i64 -1
  %3386 = bitcast %"class.sh::TIntermNode"** %3385 to <2 x i64>*
  store <2 x i64> %3381, <2 x i64>* %3386, align 8, !alias.scope !245, !noalias !242
  br label %3387

3387:                                             ; preds = %3367, %3370
  %3388 = icmp eq i64 %3295, %3311
  br i1 %3388, label %3459, label %3389

3389:                                             ; preds = %3387, %3297, %3290
  %3390 = phi %"class.sh::TIntermNode"** [ %3279, %3297 ], [ %3279, %3290 ], [ %3313, %3387 ]
  %3391 = phi %"class.sh::TIntermNode"** [ %3288, %3297 ], [ %3288, %3290 ], [ %3315, %3387 ]
  %3392 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3391, i64 -1
  %3393 = ptrtoint %"class.sh::TIntermNode"** %3392 to i64
  %3394 = sub i64 %3393, %3287
  %3395 = lshr i64 %3394, 3
  %3396 = add nuw nsw i64 %3395, 1
  %3397 = and i64 %3396, 7
  %3398 = icmp eq i64 %3397, 0
  br i1 %3398, label %3410, label %3399

3399:                                             ; preds = %3389, %3399
  %3400 = phi %"class.sh::TIntermNode"** [ %3403, %3399 ], [ %3390, %3389 ]
  %3401 = phi %"class.sh::TIntermNode"** [ %3404, %3399 ], [ %3391, %3389 ]
  %3402 = phi i64 [ %3408, %3399 ], [ %3397, %3389 ]
  %3403 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3400, i64 -1
  %3404 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3401, i64 -1
  %3405 = bitcast %"class.sh::TIntermNode"** %3404 to i64*
  %3406 = load i64, i64* %3405, align 8
  %3407 = bitcast %"class.sh::TIntermNode"** %3403 to i64*
  store i64 %3406, i64* %3407, align 8
  %3408 = add i64 %3402, -1
  %3409 = icmp eq i64 %3408, 0
  br i1 %3409, label %3410, label %3399, !llvm.loop !248

3410:                                             ; preds = %3399, %3389
  %3411 = phi %"class.sh::TIntermNode"** [ undef, %3389 ], [ %3403, %3399 ]
  %3412 = phi %"class.sh::TIntermNode"** [ %3390, %3389 ], [ %3403, %3399 ]
  %3413 = phi %"class.sh::TIntermNode"** [ %3391, %3389 ], [ %3404, %3399 ]
  %3414 = icmp ult i64 %3394, 56
  br i1 %3414, label %3459, label %3415

3415:                                             ; preds = %3410, %3415
  %3416 = phi %"class.sh::TIntermNode"** [ %3453, %3415 ], [ %3412, %3410 ]
  %3417 = phi %"class.sh::TIntermNode"** [ %3454, %3415 ], [ %3413, %3410 ]
  %3418 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3416, i64 -1
  %3419 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3417, i64 -1
  %3420 = bitcast %"class.sh::TIntermNode"** %3419 to i64*
  %3421 = load i64, i64* %3420, align 8
  %3422 = bitcast %"class.sh::TIntermNode"** %3418 to i64*
  store i64 %3421, i64* %3422, align 8
  %3423 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3416, i64 -2
  %3424 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3417, i64 -2
  %3425 = bitcast %"class.sh::TIntermNode"** %3424 to i64*
  %3426 = load i64, i64* %3425, align 8
  %3427 = bitcast %"class.sh::TIntermNode"** %3423 to i64*
  store i64 %3426, i64* %3427, align 8
  %3428 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3416, i64 -3
  %3429 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3417, i64 -3
  %3430 = bitcast %"class.sh::TIntermNode"** %3429 to i64*
  %3431 = load i64, i64* %3430, align 8
  %3432 = bitcast %"class.sh::TIntermNode"** %3428 to i64*
  store i64 %3431, i64* %3432, align 8
  %3433 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3416, i64 -4
  %3434 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3417, i64 -4
  %3435 = bitcast %"class.sh::TIntermNode"** %3434 to i64*
  %3436 = load i64, i64* %3435, align 8
  %3437 = bitcast %"class.sh::TIntermNode"** %3433 to i64*
  store i64 %3436, i64* %3437, align 8
  %3438 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3416, i64 -5
  %3439 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3417, i64 -5
  %3440 = bitcast %"class.sh::TIntermNode"** %3439 to i64*
  %3441 = load i64, i64* %3440, align 8
  %3442 = bitcast %"class.sh::TIntermNode"** %3438 to i64*
  store i64 %3441, i64* %3442, align 8
  %3443 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3416, i64 -6
  %3444 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3417, i64 -6
  %3445 = bitcast %"class.sh::TIntermNode"** %3444 to i64*
  %3446 = load i64, i64* %3445, align 8
  %3447 = bitcast %"class.sh::TIntermNode"** %3443 to i64*
  store i64 %3446, i64* %3447, align 8
  %3448 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3416, i64 -7
  %3449 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3417, i64 -7
  %3450 = bitcast %"class.sh::TIntermNode"** %3449 to i64*
  %3451 = load i64, i64* %3450, align 8
  %3452 = bitcast %"class.sh::TIntermNode"** %3448 to i64*
  store i64 %3451, i64* %3452, align 8
  %3453 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3416, i64 -8
  %3454 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %3417, i64 -8
  %3455 = bitcast %"class.sh::TIntermNode"** %3454 to i64*
  %3456 = load i64, i64* %3455, align 8
  %3457 = bitcast %"class.sh::TIntermNode"** %3453 to i64*
  store i64 %3456, i64* %3457, align 8
  %3458 = icmp eq %"class.sh::TIntermNode"** %3454, %3286
  br i1 %3458, label %3459, label %3415, !llvm.loop !249

3459:                                             ; preds = %3410, %3415, %3387, %3276
  %3460 = phi %"class.sh::TIntermNode"** [ %3279, %3276 ], [ %3313, %3387 ], [ %3411, %3410 ], [ %3453, %3415 ]
  %3461 = ptrtoint %"class.sh::TIntermNode"** %3460 to i64
  store i64 %3461, i64* %3252, align 8
  store i64 %3284, i64* %3251, align 8
  store i64 %3281, i64* %3261, align 8
  br label %3462

3462:                                             ; preds = %3244, %3459
  %3463 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #8
  %3464 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %3463, i64 40) #8
  %3465 = bitcast i8* %3464 to %"class.sh::TIntermFunctionDefinition"*
  %3466 = bitcast i8* %3464 to i32 (...)***
  %3467 = getelementptr inbounds i8, i8* %3464, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %3467, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN2sh25TIntermFunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3466, align 8
  %3468 = getelementptr inbounds i8, i8* %3464, i64 24
  %3469 = bitcast i8* %3468 to %"class.sh::TIntermFunctionPrototype"**
  store %"class.sh::TIntermFunctionPrototype"* %13, %"class.sh::TIntermFunctionPrototype"** %3469, align 8
  %3470 = getelementptr inbounds i8, i8* %3464, i64 32
  %3471 = bitcast i8* %3470 to i8**
  store i8* %536, i8** %3471, align 8
  %3472 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3473 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3472, i64 0, i32 1, i32 0
  %3474 = load i8, i8* %3473, align 1
  %3475 = icmp slt i8 %3474, 0
  br i1 %3475, label %3476, label %3478

3476:                                             ; preds = %3462
  %3477 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %3477) #10
  br label %3478

3478:                                             ; preds = %3462, %3476
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  ret %"class.sh::TIntermFunctionDefinition"* %3465
}

declare zeroext i1 @_ZN2sh20TIntermAggregateBase16insertChildNodesEmRKNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TIntermAggregateBase"*, i64, %"class.sh::TVector.31"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.sh::TIntermFunctionPrototype"* @_ZN2sh35CreateInternalFunctionPrototypeNodeERKNS_9TFunctionE(%"class.sh::TFunction"* dereferenceable(80)) local_unnamed_addr #2

declare void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"*, %"class.sh::TVariable"*) unnamed_addr #2

declare %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32) local_unnamed_addr #2

declare void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*) unnamed_addr #2

declare void @_ZN2sh13TIntermSwitchC1EPNS_12TIntermTypedEPNS_12TIntermBlockE(%"class.sh::TIntermSwitch"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*) unnamed_addr #2

declare void @_ZN2sh13TIntermIfElseC1EPNS_12TIntermTypedEPNS_12TIntermBlockES4_(%"class.sh::TIntermIfElse"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"*) unnamed_addr #2

declare void @_ZN2sh14TConstantUnionC1Ev(%"class.sh::TConstantUnion"*) unnamed_addr #2

declare void @_ZN2sh17TIntermExpressionC2ERKNS_5TTypeE(%"class.sh::TIntermExpression"*, %"class.sh::TType"* dereferenceable(184)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.166"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.166"* %0, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.166"* %0, %"class.std::__1::__tree_node"* %9) #8
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN2sh13TIntermBinaryEEE11__call_implINS0_20__default_alloc_funcIZNS2_44RemoveDynamicIndexingOfNonSSBOVectorOrMatrixEPNS2_9TCompilerEPNS2_11TIntermNodeEPNS2_12TSymbolTableEPNS2_22PerformanceDiagnosticsEE3$_0S5_EEEEbPKNS0_16__policy_storageES4_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.sh::TIntermBinary"*) #0 align 2 {
  %3 = tail call zeroext i1 @_ZN2sh24IntermNodePatternMatcher40IsDynamicIndexingOfNonSSBOVectorOrMatrixEPNS_13TIntermBinaryE(%"class.sh::TIntermBinary"* %1) #8
  ret i1 %3
}

declare zeroext i1 @_ZN2sh24IntermNodePatternMatcher40IsDynamicIndexingOfNonSSBOVectorOrMatrixEPNS_13TIntermBinaryE(%"class.sh::TIntermBinary"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN2sh13TIntermBinaryEEE11__call_implINS0_20__default_alloc_funcIZNS2_37RemoveDynamicIndexingOfSwizzledVectorEPNS2_9TCompilerEPNS2_11TIntermNodeEPNS2_12TSymbolTableEPNS2_22PerformanceDiagnosticsEE3$_1S5_EEEEbPKNS0_16__policy_storageES4_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.sh::TIntermBinary"*) #0 align 2 {
  %3 = tail call zeroext i1 @_ZN2sh24IntermNodePatternMatcher33IsDynamicIndexingOfSwizzledVectorEPNS_13TIntermBinaryE(%"class.sh::TIntermBinary"* %1) #8
  ret i1 %3
}

declare zeroext i1 @_ZN2sh24IntermNodePatternMatcher33IsDynamicIndexingOfSwizzledVectorEPNS_13TIntermBinaryE(%"class.sh::TIntermBinary"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !9}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !9}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__16__treeINS_12__value_typeIN2sh5TTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !9}
!39 = distinct !{!39, !11}
!40 = distinct !{!40, !9}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !9}
!47 = distinct !{!47, !11}
!48 = distinct !{!48, !9}
!49 = !{!50}
!50 = distinct !{!50, !51}
!51 = distinct !{!51, !"LVerDomain"}
!52 = !{!53}
!53 = distinct !{!53, !51}
!54 = distinct !{!54, !9}
!55 = distinct !{!55, !11}
!56 = distinct !{!56, !9}
!57 = !{!58}
!58 = distinct !{!58, !59}
!59 = distinct !{!59, !"LVerDomain"}
!60 = !{!61}
!61 = distinct !{!61, !59}
!62 = distinct !{!62, !9}
!63 = distinct !{!63, !11}
!64 = distinct !{!64, !9}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !9}
!71 = distinct !{!71, !11}
!72 = distinct !{!72, !9}
!73 = !{!74}
!74 = distinct !{!74, !75}
!75 = distinct !{!75, !"LVerDomain"}
!76 = !{!77}
!77 = distinct !{!77, !75}
!78 = distinct !{!78, !9}
!79 = distinct !{!79, !11}
!80 = distinct !{!80, !9}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85}
!85 = distinct !{!85, !83}
!86 = distinct !{!86, !9}
!87 = distinct !{!87, !11}
!88 = distinct !{!88, !9}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = distinct !{!94, !9}
!95 = distinct !{!95, !11}
!96 = distinct !{!96, !9}
!97 = !{!98}
!98 = distinct !{!98, !99}
!99 = distinct !{!99, !"LVerDomain"}
!100 = !{!101}
!101 = distinct !{!101, !99}
!102 = distinct !{!102, !9}
!103 = distinct !{!103, !11}
!104 = distinct !{!104, !9}
!105 = !{!106}
!106 = distinct !{!106, !107}
!107 = distinct !{!107, !"LVerDomain"}
!108 = !{!109}
!109 = distinct !{!109, !107}
!110 = distinct !{!110, !9}
!111 = distinct !{!111, !11}
!112 = distinct !{!112, !9}
!113 = !{!114}
!114 = distinct !{!114, !115}
!115 = distinct !{!115, !"LVerDomain"}
!116 = !{!117}
!117 = distinct !{!117, !115}
!118 = distinct !{!118, !9}
!119 = distinct !{!119, !11}
!120 = distinct !{!120, !9}
!121 = !{!122}
!122 = distinct !{!122, !123}
!123 = distinct !{!123, !"LVerDomain"}
!124 = !{!125}
!125 = distinct !{!125, !123}
!126 = distinct !{!126, !9}
!127 = distinct !{!127, !11}
!128 = distinct !{!128, !9}
!129 = !{!130}
!130 = distinct !{!130, !131, !"_ZN2sh16InitializeStreamINSt3__119basic_ostringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v: argument 0"}
!131 = distinct !{!131, !"_ZN2sh16InitializeStreamINSt3__119basic_ostringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v"}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE: argument 0"}
!134 = distinct !{!134, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE"}
!135 = !{!136}
!136 = distinct !{!136, !137, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE: argument 0"}
!137 = distinct !{!137, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE"}
!138 = !{!139}
!139 = distinct !{!139, !140}
!140 = distinct !{!140, !"LVerDomain"}
!141 = !{!142}
!142 = distinct !{!142, !140}
!143 = distinct !{!143, !9}
!144 = distinct !{!144, !11}
!145 = distinct !{!145, !9}
!146 = !{!147}
!147 = distinct !{!147, !148}
!148 = distinct !{!148, !"LVerDomain"}
!149 = !{!150}
!150 = distinct !{!150, !148}
!151 = distinct !{!151, !9}
!152 = distinct !{!152, !11}
!153 = distinct !{!153, !9}
!154 = !{!155}
!155 = distinct !{!155, !156}
!156 = distinct !{!156, !"LVerDomain"}
!157 = !{!158}
!158 = distinct !{!158, !156}
!159 = distinct !{!159, !9}
!160 = distinct !{!160, !11}
!161 = distinct !{!161, !9}
!162 = !{!163}
!163 = distinct !{!163, !164}
!164 = distinct !{!164, !"LVerDomain"}
!165 = !{!166}
!166 = distinct !{!166, !164}
!167 = distinct !{!167, !9}
!168 = distinct !{!168, !11}
!169 = distinct !{!169, !9}
!170 = !{!171}
!171 = distinct !{!171, !172}
!172 = distinct !{!172, !"LVerDomain"}
!173 = !{!174}
!174 = distinct !{!174, !172}
!175 = distinct !{!175, !9}
!176 = distinct !{!176, !11}
!177 = distinct !{!177, !9}
!178 = !{!179}
!179 = distinct !{!179, !180}
!180 = distinct !{!180, !"LVerDomain"}
!181 = !{!182}
!182 = distinct !{!182, !180}
!183 = distinct !{!183, !9}
!184 = distinct !{!184, !11}
!185 = distinct !{!185, !9}
!186 = !{!187}
!187 = distinct !{!187, !188}
!188 = distinct !{!188, !"LVerDomain"}
!189 = !{!190}
!190 = distinct !{!190, !188}
!191 = distinct !{!191, !9}
!192 = distinct !{!192, !11}
!193 = distinct !{!193, !9}
!194 = !{!195}
!195 = distinct !{!195, !196}
!196 = distinct !{!196, !"LVerDomain"}
!197 = !{!198}
!198 = distinct !{!198, !196}
!199 = distinct !{!199, !9}
!200 = distinct !{!200, !11}
!201 = distinct !{!201, !9}
!202 = !{!203}
!203 = distinct !{!203, !204}
!204 = distinct !{!204, !"LVerDomain"}
!205 = !{!206}
!206 = distinct !{!206, !204}
!207 = distinct !{!207, !9}
!208 = distinct !{!208, !11}
!209 = distinct !{!209, !9}
!210 = !{!211}
!211 = distinct !{!211, !212}
!212 = distinct !{!212, !"LVerDomain"}
!213 = !{!214}
!214 = distinct !{!214, !212}
!215 = distinct !{!215, !9}
!216 = distinct !{!216, !11}
!217 = distinct !{!217, !9}
!218 = !{!219}
!219 = distinct !{!219, !220}
!220 = distinct !{!220, !"LVerDomain"}
!221 = !{!222}
!222 = distinct !{!222, !220}
!223 = distinct !{!223, !9}
!224 = distinct !{!224, !11}
!225 = distinct !{!225, !9}
!226 = !{!227}
!227 = distinct !{!227, !228}
!228 = distinct !{!228, !"LVerDomain"}
!229 = !{!230}
!230 = distinct !{!230, !228}
!231 = distinct !{!231, !9}
!232 = distinct !{!232, !11}
!233 = distinct !{!233, !9}
!234 = !{!235}
!235 = distinct !{!235, !236}
!236 = distinct !{!236, !"LVerDomain"}
!237 = !{!238}
!238 = distinct !{!238, !236}
!239 = distinct !{!239, !9}
!240 = distinct !{!240, !11}
!241 = distinct !{!241, !9}
!242 = !{!243}
!243 = distinct !{!243, !244}
!244 = distinct !{!244, !"LVerDomain"}
!245 = !{!246}
!246 = distinct !{!246, !244}
!247 = distinct !{!247, !9}
!248 = distinct !{!248, !11}
!249 = distinct !{!249, !9}
