; ModuleID = '../../third_party/webrtc/modules/audio_coding/codecs/pcm16b/pcm16b_common.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/codecs/pcm16b/pcm16b_common.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"*, %"class.std::__1::__compressed_pair.9" }
%"struct.webrtc::AudioCodecSpec" = type { %"struct.webrtc::SdpAudioFormat", %"struct.webrtc::AudioCodecInfo" }
%"struct.webrtc::SdpAudioFormat" = type { %"class.std::__1::basic_string", i32, i64, %"class.std::__1::map" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"struct.webrtc::AudioCodecInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.webrtc::AudioCodecSpec"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN6webrtc14AudioCodecSpecENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@.ref.tmp = private constant [2 x i32] [i32 1, i32 2], align 4
@.str = private unnamed_addr constant [4 x i8] c"L16\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc31Pcm16BAppendSupportedCodecSpecsEPNSt3__16vectorINS_14AudioCodecSpecENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"*) local_unnamed_addr #0 {
  %2 = alloca %"struct.webrtc::AudioCodecSpec", align 8
  %3 = bitcast %"struct.webrtc::AudioCodecSpec"* %2 to i8*
  %4 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %2, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %2, i64 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"struct.webrtc::AudioCodecInfo"* %5 to i8*
  %9 = bitcast %"struct.webrtc::AudioCodecSpec"** %6 to i64*
  br label %11

10:                                               ; preds = %51
  ret void

11:                                               ; preds = %1, %51
  %12 = phi i32* [ getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp, i64 0, i64 0), %1 ], [ %52, %51 ]
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 255
  %15 = zext i32 %14 to i64
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %3) #8
  call void @_ZN6webrtc14SdpAudioFormatC1EN4absl11string_viewEim(%"struct.webrtc::SdpAudioFormat"* nonnull %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i32 8000, i64 %15) #8
  %16 = mul nuw nsw i32 %14, 128000
  call void @_ZN6webrtc14AudioCodecInfoC1Eimi(%"struct.webrtc::AudioCodecInfo"* %5, i32 8000, i64 %15, i32 %16) #8
  %17 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %6, align 8
  %18 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %7, align 8
  %19 = icmp ult %"struct.webrtc::AudioCodecSpec"* %17, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %17, i64 0, i32 0
  call void @_ZN6webrtc14SdpAudioFormatC1EOS0_(%"struct.webrtc::SdpAudioFormat"* %21, %"struct.webrtc::SdpAudioFormat"* nonnull dereferenceable(64) %4) #8
  %22 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %17, i64 0, i32 1
  %23 = bitcast %"struct.webrtc::AudioCodecInfo"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %8, i64 32, i1 false) #8
  %24 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %17, i64 1
  %25 = ptrtoint %"struct.webrtc::AudioCodecSpec"* %24 to i64
  store i64 %25, i64* %9, align 8
  br label %27

26:                                               ; preds = %11
  call void @_ZNSt3__16vectorIN6webrtc14AudioCodecSpecENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %0, %"struct.webrtc::AudioCodecSpec"* nonnull dereferenceable(96) %2) #8
  br label %27

27:                                               ; preds = %20, %26
  call void @_ZN6webrtc14SdpAudioFormatD1Ev(%"struct.webrtc::SdpAudioFormat"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %3) #8
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %3) #8
  call void @_ZN6webrtc14SdpAudioFormatC1EN4absl11string_viewEim(%"struct.webrtc::SdpAudioFormat"* nonnull %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i32 16000, i64 %15) #8
  %28 = mul nuw nsw i32 %14, 256000
  call void @_ZN6webrtc14AudioCodecInfoC1Eimi(%"struct.webrtc::AudioCodecInfo"* %5, i32 16000, i64 %15, i32 %28) #8
  %29 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %6, align 8
  %30 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %7, align 8
  %31 = icmp ult %"struct.webrtc::AudioCodecSpec"* %29, %30
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @_ZNSt3__16vectorIN6webrtc14AudioCodecSpecENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %0, %"struct.webrtc::AudioCodecSpec"* nonnull dereferenceable(96) %2) #8
  br label %39

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %29, i64 0, i32 0
  call void @_ZN6webrtc14SdpAudioFormatC1EOS0_(%"struct.webrtc::SdpAudioFormat"* %34, %"struct.webrtc::SdpAudioFormat"* nonnull dereferenceable(64) %4) #8
  %35 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %29, i64 0, i32 1
  %36 = bitcast %"struct.webrtc::AudioCodecInfo"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %8, i64 32, i1 false) #8
  %37 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %29, i64 1
  %38 = ptrtoint %"struct.webrtc::AudioCodecSpec"* %37 to i64
  store i64 %38, i64* %9, align 8
  br label %39

39:                                               ; preds = %33, %32
  call void @_ZN6webrtc14SdpAudioFormatD1Ev(%"struct.webrtc::SdpAudioFormat"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %3) #8
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %3) #8
  call void @_ZN6webrtc14SdpAudioFormatC1EN4absl11string_viewEim(%"struct.webrtc::SdpAudioFormat"* nonnull %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i32 32000, i64 %15) #8
  %40 = mul nuw nsw i32 %14, 512000
  call void @_ZN6webrtc14AudioCodecInfoC1Eimi(%"struct.webrtc::AudioCodecInfo"* %5, i32 32000, i64 %15, i32 %40) #8
  %41 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %6, align 8
  %42 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %7, align 8
  %43 = icmp ult %"struct.webrtc::AudioCodecSpec"* %41, %42
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @_ZNSt3__16vectorIN6webrtc14AudioCodecSpecENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %0, %"struct.webrtc::AudioCodecSpec"* nonnull dereferenceable(96) %2) #8
  br label %51

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %41, i64 0, i32 0
  call void @_ZN6webrtc14SdpAudioFormatC1EOS0_(%"struct.webrtc::SdpAudioFormat"* %46, %"struct.webrtc::SdpAudioFormat"* nonnull dereferenceable(64) %4) #8
  %47 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %41, i64 0, i32 1
  %48 = bitcast %"struct.webrtc::AudioCodecInfo"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %8, i64 32, i1 false) #8
  %49 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %41, i64 1
  %50 = ptrtoint %"struct.webrtc::AudioCodecSpec"* %49 to i64
  store i64 %50, i64* %9, align 8
  br label %51

51:                                               ; preds = %45, %44
  call void @_ZN6webrtc14SdpAudioFormatD1Ev(%"struct.webrtc::SdpAudioFormat"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %3) #8
  %52 = getelementptr inbounds i32, i32* %12, i64 1
  %53 = icmp eq i32* %52, getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp, i64 1, i64 0)
  br i1 %53, label %10, label %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6webrtc14SdpAudioFormatC1EN4absl11string_viewEim(%"struct.webrtc::SdpAudioFormat"*, i8*, i64, i32, i64) unnamed_addr #2

declare void @_ZN6webrtc14AudioCodecInfoC1Eimi(%"struct.webrtc::AudioCodecInfo"*, i32, i64, i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN6webrtc14SdpAudioFormatD1Ev(%"struct.webrtc::SdpAudioFormat"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc14AudioCodecSpecENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"struct.webrtc::AudioCodecSpec"* dereferenceable(96)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.webrtc::AudioCodecSpec"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 96
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 192153584101141162
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #9
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.webrtc::AudioCodecSpec"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 96
  %20 = icmp ult i64 %19, 96076792050570581
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 192153584101141162, %14 ]
  %28 = mul i64 %27, 96
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.webrtc::AudioCodecSpec"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.webrtc::AudioCodecSpec"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %33, i64 %32
  %36 = ptrtoint %"struct.webrtc::AudioCodecSpec"* %35 to i64
  %37 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %1, i64 0, i32 0
  tail call void @_ZN6webrtc14SdpAudioFormatC1EOS0_(%"struct.webrtc::SdpAudioFormat"* %37, %"struct.webrtc::SdpAudioFormat"* dereferenceable(64) %38) #8
  %39 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %1, i64 0, i32 1
  %41 = bitcast %"struct.webrtc::AudioCodecInfo"* %39 to i8*
  %42 = bitcast %"struct.webrtc::AudioCodecInfo"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 32, i1 false) #8
  %43 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %34, i64 1
  %44 = ptrtoint %"struct.webrtc::AudioCodecSpec"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %45, align 8
  %47 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %3, align 8
  %48 = icmp eq %"struct.webrtc::AudioCodecSpec"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %31
  %50 = ptrtoint %"struct.webrtc::AudioCodecSpec"* %46 to i64
  br label %66

51:                                               ; preds = %31, %51
  %52 = phi %"struct.webrtc::AudioCodecSpec"* [ %61, %51 ], [ %34, %31 ]
  %53 = phi %"struct.webrtc::AudioCodecSpec"* [ %54, %51 ], [ %47, %31 ]
  %54 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %53, i64 -1
  %55 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %52, i64 -1, i32 0
  %56 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %54, i64 0, i32 0
  tail call void @_ZN6webrtc14SdpAudioFormatC1EOS0_(%"struct.webrtc::SdpAudioFormat"* %55, %"struct.webrtc::SdpAudioFormat"* dereferenceable(64) %56) #8
  %57 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %52, i64 -1, i32 1
  %58 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %53, i64 -1, i32 1
  %59 = bitcast %"struct.webrtc::AudioCodecInfo"* %57 to i8*
  %60 = bitcast %"struct.webrtc::AudioCodecInfo"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 32, i1 false) #8
  %61 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %52, i64 -1
  %62 = icmp eq %"struct.webrtc::AudioCodecSpec"* %54, %46
  br i1 %62, label %63, label %51

63:                                               ; preds = %51
  %64 = load i64, i64* %6, align 8
  %65 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %3, align 8
  br label %66

66:                                               ; preds = %49, %63
  %67 = phi %"struct.webrtc::AudioCodecSpec"* [ %46, %49 ], [ %65, %63 ]
  %68 = phi %"struct.webrtc::AudioCodecSpec"* [ %34, %49 ], [ %61, %63 ]
  %69 = phi i64 [ %50, %49 ], [ %64, %63 ]
  %70 = ptrtoint %"struct.webrtc::AudioCodecSpec"* %68 to i64
  store i64 %70, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %71 = inttoptr i64 %69 to %"struct.webrtc::AudioCodecSpec"*
  %72 = icmp eq %"struct.webrtc::AudioCodecSpec"* %67, %71
  br i1 %72, label %78, label %73

73:                                               ; preds = %66, %73
  %74 = phi %"struct.webrtc::AudioCodecSpec"* [ %75, %73 ], [ %67, %66 ]
  %75 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %74, i64 -1
  %76 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %75, i64 0, i32 0
  tail call void @_ZN6webrtc14SdpAudioFormatD1Ev(%"struct.webrtc::SdpAudioFormat"* %76) #8
  %77 = icmp eq %"struct.webrtc::AudioCodecSpec"* %75, %71
  br i1 %77, label %78, label %73

78:                                               ; preds = %73, %66
  %79 = icmp eq i64 %69, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = inttoptr i64 %69 to i8*
  tail call void @_ZdlPv(i8* %81) #10
  br label %82

82:                                               ; preds = %78, %80
  ret void
}

declare void @_ZN6webrtc14SdpAudioFormatC1EOS0_(%"struct.webrtc::SdpAudioFormat"*, %"struct.webrtc::SdpAudioFormat"* dereferenceable(64)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
