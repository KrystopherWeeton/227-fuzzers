; ModuleID = '../../media/base/video_util.cc'
source_filename = "../../media/base/video_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.media::VideoFrame" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.media::VideoFrameLayout", %class.scoped_refptr, i32, %"class.gfx::Rect", %"class.gfx::Size", [4 x i8*], [4 x %"struct.gpu::MailboxHolder"], %"class.base::OnceCallback", %"class.base::UnsafeSharedMemoryRegion"*, %"class.base::UnsafeSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.std::__1::unique_ptr", %class.scoped_refptr.7, %"class.std::__1::vector.8", %"class.base::TimeDelta", %"class.base::Lock", %"struct.gpu::SyncToken", %"struct.media::VideoFrameMetadata", i32, %"class.gfx::ColorSpace", %"class.absl::optional.51", [4 x i8], %"class.absl::optional.56", %"class.std::__1::unique_ptr.61" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.media::VideoFrameLayout" = type { i32, %"class.gfx::Size", %"class.std::__1::vector", i8, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"*, %"class.std::__1::__compressed_pair" }
%"struct.media::ColorPlaneLayout" = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.media::ColorPlaneLayout"* }
%class.scoped_refptr = type { %"class.media::VideoFrame"* }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.3", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type { i32 (...)** }
%class.scoped_refptr.7 = type { %"class.media::VideoFrame::DmabufHolder"* }
%"class.media::VideoFrame::DmabufHolder" = type opaque
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.base::OnceCallback.10"*, %"class.base::OnceCallback.10"*, %"class.std::__1::__compressed_pair.11" }
%"class.base::OnceCallback.10" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::OnceCallback.10"* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"struct.media::VideoFrameMetadata" = type { i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.16", %"class.absl::optional.21", %"class.absl::optional.26", i8, %"class.absl::optional.31", %"class.absl::optional.36", i8, %"class.absl::optional", i8, [3 x i8], %"class.absl::optional.41", i8, i8, i8, i8, i32, %"class.absl::optional.46", i8, %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.31", %"class.absl::optional.36", %"class.absl::optional", %"class.absl::optional.31", %"class.absl::optional.16" }
%"class.absl::optional.21" = type { %"class.absl::optional_internal::optional_data.22" }
%"class.absl::optional_internal::optional_data.22" = type { %"class.absl::optional_internal::optional_data_base.23" }
%"class.absl::optional_internal::optional_data_base.23" = type { %"class.absl::optional_internal::optional_data_dtor_base.24" }
%"class.absl::optional_internal::optional_data_dtor_base.24" = type { i8, %union.anon.25 }
%union.anon.25 = type { %"class.gfx::Rect" }
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { i32 }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, [3 x i8], %union.anon.45 }
%union.anon.45 = type { %"struct.media::VideoTransformation" }
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.46" = type { %"class.absl::optional_internal::optional_data.47" }
%"class.absl::optional_internal::optional_data.47" = type { %"class.absl::optional_internal::optional_data_base.48" }
%"class.absl::optional_internal::optional_data_base.48" = type { %"class.absl::optional_internal::optional_data_dtor_base.49" }
%"class.absl::optional_internal::optional_data_dtor_base.49" = type { i8, %union.anon.50 }
%union.anon.50 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, %union.anon.40 }
%union.anon.40 = type { double }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional.31" = type { %"class.absl::optional_internal::optional_data.32" }
%"class.absl::optional_internal::optional_data.32" = type { %"class.absl::optional_internal::optional_data_base.33" }
%"class.absl::optional_internal::optional_data_base.33" = type { %"class.absl::optional_internal::optional_data_dtor_base.34" }
%"class.absl::optional_internal::optional_data_dtor_base.34" = type { i8, %union.anon.35 }
%union.anon.35 = type { %"class.base::TimeDelta" }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.51" = type { %"class.absl::optional_internal::optional_data.52" }
%"class.absl::optional_internal::optional_data.52" = type { %"class.absl::optional_internal::optional_data_base.53" }
%"class.absl::optional_internal::optional_data_base.53" = type { %"class.absl::optional_internal::optional_data_dtor_base.54" }
%"class.absl::optional_internal::optional_data_dtor_base.54" = type { i8, %union.anon.55 }
%union.anon.55 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, [7 x i8], %union.anon.60 }
%union.anon.60 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { i8* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.150 }
%union.anon.150 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.gpu::raster::RasterInterface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %class.sk_sp.107, %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.114", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.132" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.65", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type opaque
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type opaque
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.107 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %class.GrResourceCache* }
%class.GrResourceCache = type opaque
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%"class.media::VideoFramePool" = type { %class.scoped_refptr.138 }
%class.scoped_refptr.138 = type { %"class.media::VideoFramePool::PoolImpl"* }
%"class.media::VideoFramePool::PoolImpl" = type opaque
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.187, i32, i32 }
%class.sk_sp.187 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.188" }
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__atomic_base.190" }
%"struct.std::__1::__atomic_base.190" = type { %"struct.std::__1::__cxx_atomic_impl.191" }
%"struct.std::__1::__cxx_atomic_impl.191" = type { %"struct.std::__1::__cxx_atomic_base_impl.192" }
%"struct.std::__1::__cxx_atomic_base_impl.192" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.base::ScopedClosureRunner" = type { %"class.base::OnceCallback.10" }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon.210, %class.sk_sp.212 }
%union.anon.210 = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.211, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.211 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.212 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%class.sk_sp.186 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.media::Status" = type { %"class.std::__1::unique_ptr.145" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.media::Status::StatusInternal"* }
%"struct.media::Status::StatusInternal" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.154", %"class.std::__1::vector.161", %"class.base::Value" }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.base::Value"* }
%"class.std::__1::vector.161" = type { %"class.std::__1::__vector_base.162" }
%"class.std::__1::__vector_base.162" = type { %"class.media::Status"*, %"class.media::Status"*, %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.media::Status"* }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.168" }
%"union.absl::variant_internal::DestructibleUnionImpl.168" = type { %"union.absl::variant_internal::DestructibleUnionImpl.169" }
%"union.absl::variant_internal::DestructibleUnionImpl.169" = type { %"union.absl::variant_internal::DestructibleUnionImpl.170" }
%"union.absl::variant_internal::DestructibleUnionImpl.170" = type { %"union.absl::variant_internal::DestructibleUnionImpl.171" }
%"union.absl::variant_internal::DestructibleUnionImpl.171" = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { i8*, i8*, %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.absl::optional.193" = type { %"class.absl::optional_internal::optional_data.194" }
%"class.absl::optional_internal::optional_data.194" = type { %"class.absl::optional_internal::optional_data_base.195" }
%"class.absl::optional_internal::optional_data_base.195" = type { %"class.absl::optional_internal::optional_data_dtor_base.196" }
%"class.absl::optional_internal::optional_data_dtor_base.196" = type { i8, %union.anon.197 }
%union.anon.197 = type { %"class.media::VideoFrameLayout" }
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { i32*, i32*, %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { i32* }
%"class.base::OnceCallback.205" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::tuple.213" = type { %"struct.std::__1::__tuple_impl.214" }
%"struct.std::__1::__tuple_impl.214" = type { %"class.std::__1::__tuple_leaf.215", %"class.std::__1::__tuple_leaf.216", %"class.std::__1::__tuple_leaf.217" }
%"class.std::__1::__tuple_leaf.215" = type { i32 }
%"class.std::__1::__tuple_leaf.216" = type { i8 }
%"class.std::__1::__tuple_leaf.217" = type { %"class.gpu::raster::RasterInterface"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNO5media6Status8WithDataINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEOS0_PKcRKT_ = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJ5sk_spI7SkImageEEEENS_12OnceCallbackIFvDpT_EEEvEUlS7_E_JEEEFvS7_EE7RunOnceEPNS0_13BindStateBaseEOS7_ = comdat any

$_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJ5sk_spI7SkImageEEEENS_12OnceCallbackIFvDpT_EEEvEUlS6_E_JEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFv5sk_spI7SkImageEEEEJS6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFv5sk_spI7SkImageEEEEJS5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFv5sk_spI7SkImageEEEEJS6_EEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"ConvertAndScaleFrame\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"../../media/base/video_util.cc\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"src\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"dst\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"stride >= row_bytes\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"view_area.x() >= 0\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"view_area.y() >= 0\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"view_area.right() <= row_bytes\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"view_area.bottom() <= rows\00", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZN5media19GetPixelAspectRatioERKN3gfx4RectERKNS0_4SizeE(%"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = sitofp i32 %4 to double
  %6 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = sitofp i32 %7 to double
  %9 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sitofp i32 %10 to double
  %12 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to double
  %15 = fmul double %8, %11
  %16 = fmul double %5, %14
  %17 = fdiv double %15, %16
  ret double %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN5media14GetNaturalSizeERKN3gfx4RectEd(%"class.gfx::Rect"* nocapture readonly dereferenceable(16), double) local_unnamed_addr #2 {
  %3 = tail call double @llvm.fabs.f64(double %1) #12
  %4 = fcmp ueq double %3, 0x7FF0000000000000
  %5 = fcmp ole double %1, 0.000000e+00
  %6 = or i1 %5, %4
  br i1 %6, label %33, label %7

7:                                                ; preds = %2
  %8 = fcmp ult double %1, 1.000000e+00
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  br i1 %8, label %22, label %11

11:                                               ; preds = %7
  %12 = sitofp i32 %10 to double
  %13 = fmul double %12, %1
  %14 = tail call double @llvm.round.f64(double %13)
  %15 = fptosi double %14 to i32
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %15, 0
  %19 = select i1 %18, i32 %15, i32 0
  %20 = icmp sgt i32 %17, 0
  %21 = select i1 %20, i32 %17, i32 0
  br label %33

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = sitofp i32 %24 to double
  %26 = fdiv double %25, %1
  %27 = tail call double @llvm.round.f64(double %26)
  %28 = fptosi double %27 to i32
  %29 = icmp sgt i32 %10, 0
  %30 = select i1 %29, i32 %10, i32 0
  %31 = icmp sgt i32 %28, 0
  %32 = select i1 %31, i32 %28, i32 0
  br label %33

33:                                               ; preds = %2, %22, %11
  %34 = phi i32 [ %32, %22 ], [ %21, %11 ], [ 0, %2 ]
  %35 = phi i32 [ %30, %22 ], [ %19, %11 ], [ 0, %2 ]
  %36 = zext i32 %34 to i64
  %37 = shl nuw nsw i64 %36, 32
  %38 = zext i32 %35 to i64
  %39 = or i64 %37, %38
  ret i64 %39
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN5media14GetNaturalSizeERKN3gfx4SizeEii(%"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, i32) local_unnamed_addr #2 {
  %4 = icmp slt i32 %2, 1
  %5 = icmp slt i32 %1, 1
  %6 = or i1 %5, %4
  br i1 %6, label %42, label %7

7:                                                ; preds = %3
  %8 = sitofp i32 %1 to double
  %9 = sitofp i32 %2 to double
  %10 = fdiv double %8, %9
  %11 = bitcast %"class.gfx::Size"* %0 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = tail call double @llvm.fabs.f64(double %10) #12
  %14 = fcmp ueq double %13, 0x7FF0000000000000
  %15 = fcmp ole double %10, 0.000000e+00
  %16 = or i1 %15, %14
  br i1 %16, label %42, label %17

17:                                               ; preds = %7
  %18 = fcmp ult double %10, 1.000000e+00
  %19 = trunc i64 %12 to i32
  br i1 %18, label %31, label %20

20:                                               ; preds = %17
  %21 = sitofp i32 %19 to double
  %22 = fmul double %10, %21
  %23 = tail call double @llvm.round.f64(double %22) #13
  %24 = fptosi double %23 to i32
  %25 = lshr i64 %12, 32
  %26 = trunc i64 %25 to i32
  %27 = icmp sgt i32 %24, 0
  %28 = select i1 %27, i32 %24, i32 0
  %29 = icmp sgt i32 %26, 0
  %30 = select i1 %29, i32 %26, i32 0
  br label %42

31:                                               ; preds = %17
  %32 = lshr i64 %12, 32
  %33 = trunc i64 %32 to i32
  %34 = sitofp i32 %33 to double
  %35 = fdiv double %34, %10
  %36 = tail call double @llvm.round.f64(double %35) #13
  %37 = fptosi double %36 to i32
  %38 = icmp sgt i32 %19, 0
  %39 = select i1 %38, i32 %19, i32 0
  %40 = icmp sgt i32 %37, 0
  %41 = select i1 %40, i32 %37, i32 0
  br label %42

42:                                               ; preds = %31, %20, %7, %3
  %43 = phi i32 [ 0, %3 ], [ %39, %31 ], [ %28, %20 ], [ 0, %7 ]
  %44 = phi i32 [ 0, %3 ], [ %41, %31 ], [ %30, %20 ], [ 0, %7 ]
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 32
  %47 = zext i32 %43 to i64
  %48 = or i64 %46, %47
  ret i64 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media7FillYUVEPNS_10VideoFrameEhhh(%"class.media::VideoFrame"*, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #4 {
  %5 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 7, i64 0
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i32 @_ZNK5media10VideoFrame4rowsEm(%"class.media::VideoFrame"* %0, i64 0) #13
  %8 = tail call i32 @_ZNK5media10VideoFrame9row_bytesEm(%"class.media::VideoFrame"* %0, i64 0) #13
  %9 = icmp sgt i32 %7, 0
  br i1 %9, label %10, label %31

10:                                               ; preds = %4
  %11 = sext i32 %8 to i64
  %12 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %13 = add i32 %7, -1
  %14 = and i32 %7, 3
  %15 = icmp ult i32 %13, 3
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = sub i32 %7, %14
  br label %49

18:                                               ; preds = %49, %10
  %19 = phi i8* [ %6, %10 ], [ %71, %49 ]
  %20 = icmp eq i32 %14, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %18, %21
  %22 = phi i8* [ %28, %21 ], [ %19, %18 ]
  %23 = phi i32 [ %29, %21 ], [ %14, %18 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %22, i8 %1, i64 %11, i1 false)
  %24 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %12, align 8
  %25 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %22, i64 %27
  %29 = add i32 %23, -1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %21, !llvm.loop !2

31:                                               ; preds = %18, %21, %4
  %32 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 7, i64 1
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 7, i64 2
  %35 = load i8*, i8** %34, align 8
  %36 = tail call i32 @_ZNK5media10VideoFrame4rowsEm(%"class.media::VideoFrame"* %0, i64 1) #13
  %37 = tail call i32 @_ZNK5media10VideoFrame9row_bytesEm(%"class.media::VideoFrame"* %0, i64 1) #13
  %38 = tail call i32 @_ZNK5media10VideoFrame9row_bytesEm(%"class.media::VideoFrame"* %0, i64 2) #13
  %39 = icmp sgt i32 %36, 0
  br i1 %39, label %40, label %93

40:                                               ; preds = %31
  %41 = sext i32 %37 to i64
  %42 = sext i32 %38 to i64
  %43 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %44 = add i32 %36, -1
  %45 = and i32 %36, 3
  %46 = icmp ult i32 %44, 3
  br i1 %46, label %74, label %47

47:                                               ; preds = %40
  %48 = sub i32 %36, %45
  br label %94

49:                                               ; preds = %49, %16
  %50 = phi i8* [ %6, %16 ], [ %71, %49 ]
  %51 = phi i32 [ %17, %16 ], [ %72, %49 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %50, i8 %1, i64 %11, i1 false)
  %52 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %12, align 8
  %53 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %52, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %50, i64 %55
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %56, i8 %1, i64 %11, i1 false)
  %57 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %12, align 8
  %58 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %56, i64 %60
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %61, i8 %1, i64 %11, i1 false)
  %62 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %12, align 8
  %63 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %62, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %61, i64 %65
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %66, i8 %1, i64 %11, i1 false)
  %67 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %12, align 8
  %68 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %67, i64 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %66, i64 %70
  %72 = add i32 %51, -4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %18, label %49

74:                                               ; preds = %94, %40
  %75 = phi i8* [ %35, %40 ], [ %133, %94 ]
  %76 = phi i8* [ %33, %40 ], [ %129, %94 ]
  %77 = icmp eq i32 %45, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %74, %78
  %79 = phi i8* [ %90, %78 ], [ %75, %74 ]
  %80 = phi i8* [ %86, %78 ], [ %76, %74 ]
  %81 = phi i32 [ %91, %78 ], [ %45, %74 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %80, i8 %2, i64 %41, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %79, i8 %3, i64 %42, i1 false)
  %82 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %43, align 8
  %83 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %82, i64 1, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  %87 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %82, i64 2, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %79, i64 %89
  %91 = add i32 %81, -1
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %78, !llvm.loop !4

93:                                               ; preds = %74, %78, %31
  ret void

94:                                               ; preds = %94, %47
  %95 = phi i8* [ %35, %47 ], [ %133, %94 ]
  %96 = phi i8* [ %33, %47 ], [ %129, %94 ]
  %97 = phi i32 [ %48, %47 ], [ %134, %94 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %96, i8 %2, i64 %41, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %95, i8 %3, i64 %42, i1 false)
  %98 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %43, align 8
  %99 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %98, i64 1, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* %96, i64 %101
  %103 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %98, i64 2, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, i8* %95, i64 %105
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %102, i8 %2, i64 %41, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %106, i8 %3, i64 %42, i1 false)
  %107 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %43, align 8
  %108 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %107, i64 1, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i8, i8* %102, i64 %110
  %112 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %107, i64 2, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i8, i8* %106, i64 %114
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %111, i8 %2, i64 %41, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %115, i8 %3, i64 %42, i1 false)
  %116 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %43, align 8
  %117 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %116, i64 1, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* %111, i64 %119
  %121 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %116, i64 2, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %115, i64 %123
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %120, i8 %2, i64 %41, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %124, i8 %3, i64 %42, i1 false)
  %125 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %43, align 8
  %126 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %125, i64 1, i32 0
  %127 = load i32, i32* %126, align 8
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* %120, i64 %128
  %130 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %125, i64 2, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %124, i64 %132
  %134 = add i32 %97, -4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %74, label %94
}

declare i32 @_ZNK5media10VideoFrame4rowsEm(%"class.media::VideoFrame"*, i64) local_unnamed_addr #5

declare i32 @_ZNK5media10VideoFrame9row_bytesEm(%"class.media::VideoFrame"*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8FillYUVAEPNS_10VideoFrameEhhhh(%"class.media::VideoFrame"*, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #4 {
  tail call void @_ZN5media7FillYUVEPNS_10VideoFrameEhhh(%"class.media::VideoFrame"* %0, i8 zeroext %1, i8 zeroext %2, i8 zeroext %3)
  %6 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 7, i64 3
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i32 @_ZNK5media10VideoFrame4rowsEm(%"class.media::VideoFrame"* %0, i64 3) #13
  %9 = tail call i32 @_ZNK5media10VideoFrame9row_bytesEm(%"class.media::VideoFrame"* %0, i64 3) #13
  %10 = icmp sgt i32 %8, 0
  br i1 %10, label %11, label %32

11:                                               ; preds = %5
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %14 = add i32 %8, -1
  %15 = and i32 %8, 3
  %16 = icmp ult i32 %14, 3
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = sub i32 %8, %15
  br label %33

19:                                               ; preds = %33, %11
  %20 = phi i8* [ %7, %11 ], [ %55, %33 ]
  %21 = icmp eq i32 %15, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %19, %22
  %23 = phi i8* [ %29, %22 ], [ %20, %19 ]
  %24 = phi i32 [ %30, %22 ], [ %15, %19 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 %4, i64 %12, i1 false)
  %25 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %13, align 8
  %26 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %25, i64 3, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %23, i64 %28
  %30 = add i32 %24, -1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %22, !llvm.loop !5

32:                                               ; preds = %19, %22, %5
  ret void

33:                                               ; preds = %33, %17
  %34 = phi i8* [ %7, %17 ], [ %55, %33 ]
  %35 = phi i32 [ %18, %17 ], [ %56, %33 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %34, i8 %4, i64 %12, i1 false)
  %36 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %13, align 8
  %37 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %36, i64 3, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %34, i64 %39
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 %4, i64 %12, i1 false)
  %41 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %13, align 8
  %42 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %41, i64 3, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %40, i64 %44
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %45, i8 %4, i64 %12, i1 false)
  %46 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %13, align 8
  %47 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %46, i64 3, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %45, i64 %49
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %50, i8 %4, i64 %12, i1 false)
  %51 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %13, align 8
  %52 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %51, i64 3, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %50, i64 %54
  %56 = add i32 %35, -4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %19, label %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19LetterboxVideoFrameEPNS_10VideoFrameERKN3gfx4RectE(%"class.media::VideoFrame"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 2, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %43 [
    i32 10, label %6
    i32 2, label %7
    i32 1, label %7
  ]

6:                                                ; preds = %2
  tail call fastcc void @_ZN5mediaL14LetterboxPlaneEPNS_10VideoFrameEiRKN3gfx4RectEh(%"class.media::VideoFrame"* %0, i32 0, %"class.gfx::Rect"* dereferenceable(16) %1, i8 zeroext 0)
  br label %43

7:                                                ; preds = %2, %2
  tail call fastcc void @_ZN5mediaL14LetterboxPlaneEPNS_10VideoFrameEiRKN3gfx4RectEh(%"class.media::VideoFrame"* %0, i32 0, %"class.gfx::Rect"* dereferenceable(16) %1, i8 zeroext 0)
  %8 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sdiv i32 %14, 2
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = sdiv i32 %17, 2
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = sdiv i32 %20, 2
  %22 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sdiv i32 %23, 2
  store i32 %15, i32* %9, align 4
  store i32 %18, i32* %10, align 4
  %25 = icmp sgt i32 %14, 1
  %26 = icmp sgt i32 %20, 1
  %27 = and i1 %25, %26
  %28 = sub nuw nsw i32 2147483647, %15
  %29 = icmp ult i32 %28, %21
  %30 = and i1 %29, %27
  %31 = select i1 %30, i32 %28, i32 %21
  %32 = icmp sgt i32 %17, 1
  %33 = icmp sgt i32 %23, 1
  %34 = and i1 %32, %33
  %35 = sub nuw nsw i32 2147483647, %18
  %36 = icmp ult i32 %35, %24
  %37 = and i1 %36, %34
  %38 = select i1 %37, i32 %35, i32 %24
  %39 = icmp sgt i32 %31, 0
  %40 = select i1 %39, i32 %31, i32 0
  store i32 %40, i32* %11, align 4
  %41 = icmp sgt i32 %38, 0
  %42 = select i1 %41, i32 %38, i32 0
  store i32 %42, i32* %12, align 4
  call fastcc void @_ZN5mediaL14LetterboxPlaneEPNS_10VideoFrameEiRKN3gfx4RectEh(%"class.media::VideoFrame"* %0, i32 1, %"class.gfx::Rect"* nonnull dereferenceable(16) %3, i8 zeroext -128)
  call fastcc void @_ZN5mediaL14LetterboxPlaneEPNS_10VideoFrameEiRKN3gfx4RectEh(%"class.media::VideoFrame"* %0, i32 2, %"class.gfx::Rect"* nonnull dereferenceable(16) %3, i8 zeroext -128)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  br label %43

43:                                               ; preds = %2, %7, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5mediaL14LetterboxPlaneEPNS_10VideoFrameEiRKN3gfx4RectEh(%"class.media::VideoFrame"*, i32, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), i8 zeroext) unnamed_addr #4 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.logging::CheckOpResult", align 8
  %15 = alloca %"class.logging::CheckError", align 8
  %16 = alloca %"class.logging::CheckOpResult", align 8
  %17 = alloca %"class.logging::CheckError", align 8
  %18 = alloca %"class.logging::CheckOpResult", align 8
  %19 = alloca %"class.logging::CheckError", align 8
  %20 = sext i32 %1 to i64
  %21 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 7, i64 %20
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i32 @_ZNK5media10VideoFrame4rowsEm(%"class.media::VideoFrame"* %0, i64 %20) #13
  %24 = tail call i32 @_ZNK5media10VideoFrame9row_bytesEm(%"class.media::VideoFrame"* %0, i64 %20) #13
  %25 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %26 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %25, align 8
  %27 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %26, i64 %20, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 2, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = tail call i32 @_ZN5media10VideoFrame15BytesPerElementENS_16VideoPixelFormatEm(i32 %30, i64 %20) #13
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = mul nsw i32 %33, %31
  %35 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = mul nsw i32 %38, %31
  %40 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %34, 0
  %43 = icmp sgt i32 %39, 0
  %44 = and i1 %42, %43
  %45 = sub nuw nsw i32 2147483647, %34
  %46 = icmp ult i32 %45, %39
  %47 = and i1 %46, %44
  %48 = select i1 %47, i32 %45, i32 %39
  %49 = icmp sgt i32 %36, 0
  %50 = icmp sgt i32 %41, 0
  %51 = and i1 %49, %50
  %52 = sub nuw nsw i32 2147483647, %36
  %53 = icmp ult i32 %52, %41
  %54 = and i1 %53, %51
  %55 = select i1 %54, i32 %52, i32 %41
  %56 = icmp sgt i32 %48, 0
  %57 = select i1 %56, i32 %48, i32 0
  %58 = icmp sgt i32 %55, 0
  %59 = select i1 %58, i32 %55, i32 0
  %60 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #13
  %61 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %61, align 8
  %62 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  %63 = icmp slt i32 %28, %24
  br i1 %63, label %65, label %64

64:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  store i8* null, i8** %61, align 8
  br label %74

65:                                               ; preds = %4
  %66 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %28) #13
  %67 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %24) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i8* %66, i8* %67) #13
  %68 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  store i8* %69, i8** %61, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %65
  %72 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 353, %"class.logging::CheckOpResult"* nonnull %10) #13
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #13
  br label %74

74:                                               ; preds = %64, %65, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #13
  %75 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #13
  %76 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %76, align 8
  %77 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77)
  %78 = icmp slt i32 %34, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77)
  store i8* null, i8** %76, align 8
  br label %89

80:                                               ; preds = %74
  %81 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %34) #13
  %82 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* %81, i8* %82) #13
  %83 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %84 = load i8*, i8** %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77)
  store i8* %84, i8** %76, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %80
  %87 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 354, %"class.logging::CheckOpResult"* nonnull %12) #13
  %88 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #13
  br label %89

89:                                               ; preds = %79, %80, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #13
  %90 = bitcast %"class.logging::CheckOpResult"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #13
  %91 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %14, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %91, align 8
  %92 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp slt i32 %36, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %91, align 8
  br label %104

95:                                               ; preds = %89
  %96 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %36) #13
  %97 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), i8* %96, i8* %97) #13
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %91, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 355, %"class.logging::CheckOpResult"* nonnull %14) #13
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #13
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #13
  %105 = bitcast %"class.logging::CheckOpResult"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #13
  %106 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %16, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %106, align 8
  %107 = add nsw i32 %57, %34
  %108 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108)
  %109 = icmp slt i32 %24, %107
  br i1 %109, label %111, label %110

110:                                              ; preds = %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108)
  store i8* null, i8** %106, align 8
  br label %120

111:                                              ; preds = %104
  %112 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %107) #13
  %113 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %24) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %8, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i8* %112, i8* %113) #13
  %114 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  %115 = load i8*, i8** %114, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108)
  store i8* %115, i8** %106, align 8
  %116 = icmp eq i8* %115, null
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = bitcast %"class.logging::CheckError"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %17, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 356, %"class.logging::CheckOpResult"* nonnull %16) #13
  %119 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %17) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #13
  br label %120

120:                                              ; preds = %110, %111, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #13
  %121 = bitcast %"class.logging::CheckOpResult"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #13
  %122 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %18, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %122, align 8
  %123 = add i32 %59, %36
  %124 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124)
  %125 = icmp sgt i32 %123, %23
  br i1 %125, label %127, label %126

126:                                              ; preds = %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124)
  store i8* null, i8** %122, align 8
  br label %136

127:                                              ; preds = %120
  %128 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %123) #13
  %129 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %23) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %9, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8* %128, i8* %129) #13
  %130 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  %131 = load i8*, i8** %130, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124)
  store i8* %131, i8** %122, align 8
  %132 = icmp eq i8* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %127
  %134 = bitcast %"class.logging::CheckError"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %19, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 357, %"class.logging::CheckOpResult"* nonnull %18) #13
  %135 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %19) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #13
  br label %136

136:                                              ; preds = %126, %127, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #13
  br i1 %49, label %137, label %168

137:                                              ; preds = %136
  %138 = sext i32 %24 to i64
  %139 = sext i32 %28 to i64
  %140 = add i32 %36, -1
  %141 = and i32 %36, 7
  %142 = icmp ult i32 %140, 7
  br i1 %142, label %158, label %143

143:                                              ; preds = %137
  %144 = sub i32 %36, %141
  br label %145

145:                                              ; preds = %145, %143
  %146 = phi i8* [ %22, %143 ], [ %155, %145 ]
  %147 = phi i32 [ %144, %143 ], [ %156, %145 ]
  call void @llvm.memset.p0i8.i64(i8* align 1 %146, i8 %3, i64 %138, i1 false)
  %148 = getelementptr inbounds i8, i8* %146, i64 %139
  call void @llvm.memset.p0i8.i64(i8* align 1 %148, i8 %3, i64 %138, i1 false)
  %149 = getelementptr inbounds i8, i8* %148, i64 %139
  call void @llvm.memset.p0i8.i64(i8* align 1 %149, i8 %3, i64 %138, i1 false)
  %150 = getelementptr inbounds i8, i8* %149, i64 %139
  call void @llvm.memset.p0i8.i64(i8* align 1 %150, i8 %3, i64 %138, i1 false)
  %151 = getelementptr inbounds i8, i8* %150, i64 %139
  call void @llvm.memset.p0i8.i64(i8* align 1 %151, i8 %3, i64 %138, i1 false)
  %152 = getelementptr inbounds i8, i8* %151, i64 %139
  call void @llvm.memset.p0i8.i64(i8* align 1 %152, i8 %3, i64 %138, i1 false)
  %153 = getelementptr inbounds i8, i8* %152, i64 %139
  call void @llvm.memset.p0i8.i64(i8* align 1 %153, i8 %3, i64 %138, i1 false)
  %154 = getelementptr inbounds i8, i8* %153, i64 %139
  call void @llvm.memset.p0i8.i64(i8* align 1 %154, i8 %3, i64 %138, i1 false)
  %155 = getelementptr inbounds i8, i8* %154, i64 %139
  %156 = add i32 %147, -8
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %145

158:                                              ; preds = %145, %137
  %159 = phi i8* [ undef, %137 ], [ %155, %145 ]
  %160 = phi i8* [ %22, %137 ], [ %155, %145 ]
  %161 = icmp eq i32 %141, 0
  br i1 %161, label %168, label %162

162:                                              ; preds = %158, %162
  %163 = phi i8* [ %165, %162 ], [ %160, %158 ]
  %164 = phi i32 [ %166, %162 ], [ %141, %158 ]
  call void @llvm.memset.p0i8.i64(i8* align 1 %163, i8 %3, i64 %138, i1 false)
  %165 = getelementptr inbounds i8, i8* %163, i64 %139
  %166 = add i32 %164, -1
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %162, !llvm.loop !6

168:                                              ; preds = %158, %162, %136
  %169 = phi i8* [ %22, %136 ], [ %159, %158 ], [ %165, %162 ]
  %170 = phi i32 [ 0, %136 ], [ %36, %162 ], [ %36, %158 ]
  %171 = icmp slt i32 %57, %24
  br i1 %171, label %172, label %208

172:                                              ; preds = %168
  %173 = icmp slt i32 %170, %123
  br i1 %173, label %174, label %213

174:                                              ; preds = %172
  %175 = sext i32 %34 to i64
  %176 = icmp sgt i32 %24, %107
  %177 = sext i32 %107 to i64
  %178 = sub nsw i32 %24, %107
  %179 = sext i32 %178 to i64
  %180 = sext i32 %28 to i64
  %181 = add i32 %36, %59
  %182 = sub i32 %181, %170
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %193, label %185

185:                                              ; preds = %174
  br i1 %42, label %186, label %187

186:                                              ; preds = %185
  call void @llvm.memset.p0i8.i64(i8* align 1 %169, i8 %3, i64 %175, i1 false)
  br label %187

187:                                              ; preds = %186, %185
  br i1 %176, label %188, label %190

188:                                              ; preds = %187
  %189 = getelementptr inbounds i8, i8* %169, i64 %177
  call void @llvm.memset.p0i8.i64(i8* align 1 %189, i8 %3, i64 %179, i1 false)
  br label %190

190:                                              ; preds = %188, %187
  %191 = getelementptr inbounds i8, i8* %169, i64 %180
  %192 = add nuw nsw i32 %170, 1
  br label %193

193:                                              ; preds = %174, %190
  %194 = phi i32 [ %170, %174 ], [ %192, %190 ]
  %195 = phi i8* [ %169, %174 ], [ %191, %190 ]
  %196 = phi i8* [ undef, %174 ], [ %191, %190 ]
  %197 = add i32 %170, 1
  %198 = icmp eq i32 %181, %197
  br i1 %198, label %213, label %199

199:                                              ; preds = %193, %255
  %200 = phi i32 [ %257, %255 ], [ %194, %193 ]
  %201 = phi i8* [ %256, %255 ], [ %195, %193 ]
  br i1 %42, label %202, label %203

202:                                              ; preds = %199
  call void @llvm.memset.p0i8.i64(i8* align 1 %201, i8 %3, i64 %175, i1 false)
  br label %203

203:                                              ; preds = %202, %199
  br i1 %176, label %204, label %206

204:                                              ; preds = %203
  %205 = getelementptr inbounds i8, i8* %201, i64 %177
  call void @llvm.memset.p0i8.i64(i8* align 1 %205, i8 %3, i64 %179, i1 false)
  br label %206

206:                                              ; preds = %204, %203
  %207 = getelementptr inbounds i8, i8* %201, i64 %180
  br i1 %42, label %251, label %252

208:                                              ; preds = %168
  %209 = add nuw nsw i32 %170, %59
  %210 = mul nsw i32 %59, %28
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i8, i8* %169, i64 %211
  br label %213

213:                                              ; preds = %193, %255, %172, %208
  %214 = phi i8* [ %212, %208 ], [ %169, %172 ], [ %196, %193 ], [ %256, %255 ]
  %215 = phi i32 [ %209, %208 ], [ %170, %172 ], [ %123, %255 ], [ %123, %193 ]
  %216 = icmp sgt i32 %23, %215
  br i1 %216, label %217, label %250

217:                                              ; preds = %213
  %218 = sext i32 %24 to i64
  %219 = sext i32 %28 to i64
  %220 = sub i32 %23, %215
  %221 = xor i32 %215, -1
  %222 = add i32 %23, %221
  %223 = and i32 %220, 7
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %233, label %225

225:                                              ; preds = %217, %225
  %226 = phi i32 [ %230, %225 ], [ %215, %217 ]
  %227 = phi i8* [ %229, %225 ], [ %214, %217 ]
  %228 = phi i32 [ %231, %225 ], [ %223, %217 ]
  call void @llvm.memset.p0i8.i64(i8* align 1 %227, i8 %3, i64 %218, i1 false)
  %229 = getelementptr inbounds i8, i8* %227, i64 %219
  %230 = add nsw i32 %226, 1
  %231 = add i32 %228, -1
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %225, !llvm.loop !7

233:                                              ; preds = %225, %217
  %234 = phi i32 [ %215, %217 ], [ %230, %225 ]
  %235 = phi i8* [ %214, %217 ], [ %229, %225 ]
  %236 = icmp ult i32 %222, 7
  br i1 %236, label %250, label %237

237:                                              ; preds = %233, %237
  %238 = phi i32 [ %248, %237 ], [ %234, %233 ]
  %239 = phi i8* [ %247, %237 ], [ %235, %233 ]
  call void @llvm.memset.p0i8.i64(i8* align 1 %239, i8 %3, i64 %218, i1 false)
  %240 = getelementptr inbounds i8, i8* %239, i64 %219
  call void @llvm.memset.p0i8.i64(i8* align 1 %240, i8 %3, i64 %218, i1 false)
  %241 = getelementptr inbounds i8, i8* %240, i64 %219
  call void @llvm.memset.p0i8.i64(i8* align 1 %241, i8 %3, i64 %218, i1 false)
  %242 = getelementptr inbounds i8, i8* %241, i64 %219
  call void @llvm.memset.p0i8.i64(i8* align 1 %242, i8 %3, i64 %218, i1 false)
  %243 = getelementptr inbounds i8, i8* %242, i64 %219
  call void @llvm.memset.p0i8.i64(i8* align 1 %243, i8 %3, i64 %218, i1 false)
  %244 = getelementptr inbounds i8, i8* %243, i64 %219
  call void @llvm.memset.p0i8.i64(i8* align 1 %244, i8 %3, i64 %218, i1 false)
  %245 = getelementptr inbounds i8, i8* %244, i64 %219
  call void @llvm.memset.p0i8.i64(i8* align 1 %245, i8 %3, i64 %218, i1 false)
  %246 = getelementptr inbounds i8, i8* %245, i64 %219
  call void @llvm.memset.p0i8.i64(i8* align 1 %246, i8 %3, i64 %218, i1 false)
  %247 = getelementptr inbounds i8, i8* %246, i64 %219
  %248 = add nsw i32 %238, 8
  %249 = icmp eq i32 %248, %23
  br i1 %249, label %250, label %237

250:                                              ; preds = %233, %237, %213
  ret void

251:                                              ; preds = %206
  call void @llvm.memset.p0i8.i64(i8* align 1 %207, i8 %3, i64 %175, i1 false)
  br label %252

252:                                              ; preds = %251, %206
  br i1 %176, label %253, label %255

253:                                              ; preds = %252
  %254 = getelementptr inbounds i8, i8* %207, i64 %177
  call void @llvm.memset.p0i8.i64(i8* align 1 %254, i8 %3, i64 %179, i1 false)
  br label %255

255:                                              ; preds = %253, %252
  %256 = getelementptr inbounds i8, i8* %207, i64 %180
  %257 = add nuw nsw i32 %200, 2
  %258 = icmp slt i32 %257, %123
  br i1 %258, label %199, label %213
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19RotatePlaneByPixelsEPKhPhiiibb(i8* nocapture readonly, i8* nocapture, i32, i32, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #4 {
  switch i32 %4, label %12 [
    i32 270, label %8
    i32 180, label %8
  ]

8:                                                ; preds = %7, %7
  %9 = add nsw i32 %4, -180
  %10 = xor i1 %5, true
  %11 = xor i1 %6, true
  br label %12

12:                                               ; preds = %7, %8
  %13 = phi i32 [ %9, %8 ], [ %4, %7 ]
  %14 = phi i1 [ %10, %8 ], [ %5, %7 ]
  %15 = phi i1 [ %11, %8 ], [ %6, %7 ]
  switch i32 %13, label %114 [
    i32 0, label %16
    i32 90, label %60
  ]

16:                                               ; preds = %12
  br i1 %15, label %17, label %28

17:                                               ; preds = %16
  br i1 %14, label %18, label %24

18:                                               ; preds = %17
  %19 = sub nsw i32 0, %2
  %20 = mul nsw i32 %3, %2
  %21 = add nsw i32 %20, -1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %1, i64 %22
  br label %114

24:                                               ; preds = %17
  %25 = add nsw i32 %2, -1
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %1, i64 %26
  br label %114

28:                                               ; preds = %16
  br i1 %14, label %29, label %57

29:                                               ; preds = %28
  %30 = icmp sgt i32 %3, 0
  br i1 %30, label %31, label %195

31:                                               ; preds = %29
  %32 = add nsw i32 %3, -1
  %33 = mul nsw i32 %32, %2
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %1, i64 %34
  %36 = sext i32 %2 to i64
  %37 = sub nsw i64 0, %36
  %38 = add i32 %3, -1
  %39 = and i32 %3, 3
  %40 = icmp ult i32 %38, 3
  br i1 %40, label %183, label %41

41:                                               ; preds = %31
  %42 = sub i32 %3, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i8* [ %0, %41 ], [ %53, %43 ]
  %45 = phi i8* [ %35, %41 ], [ %54, %43 ]
  %46 = phi i32 [ %42, %41 ], [ %55, %43 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %44, i64 %36, i1 false)
  %47 = getelementptr inbounds i8, i8* %44, i64 %36
  %48 = getelementptr inbounds i8, i8* %45, i64 %37
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 %47, i64 %36, i1 false)
  %49 = getelementptr inbounds i8, i8* %47, i64 %36
  %50 = getelementptr inbounds i8, i8* %48, i64 %37
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %49, i64 %36, i1 false)
  %51 = getelementptr inbounds i8, i8* %49, i64 %36
  %52 = getelementptr inbounds i8, i8* %50, i64 %37
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %51, i64 %36, i1 false)
  %53 = getelementptr inbounds i8, i8* %51, i64 %36
  %54 = getelementptr inbounds i8, i8* %52, i64 %37
  %55 = add i32 %46, -4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %183, label %43

57:                                               ; preds = %28
  %58 = mul nsw i32 %3, %2
  %59 = sext i32 %58 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %0, i64 %59, i1 false)
  br label %195

60:                                               ; preds = %12
  %61 = icmp sgt i32 %2, %3
  br i1 %61, label %62, label %65

62:                                               ; preds = %60
  %63 = sub nsw i32 %2, %3
  %64 = sdiv i32 %63, 2
  br label %69

65:                                               ; preds = %60
  %66 = sub nsw i32 %3, %2
  %67 = sdiv i32 %66, 2
  %68 = mul nsw i32 %67, %2
  br label %69

69:                                               ; preds = %65, %62
  %70 = phi i32 [ %64, %62 ], [ %68, %65 ]
  %71 = phi i32 [ %3, %62 ], [ %2, %65 ]
  %72 = phi i32 [ %64, %62 ], [ %67, %65 ]
  %73 = sext i32 %70 to i64
  %74 = getelementptr inbounds i8, i8* %0, i64 %73
  %75 = sub nsw i32 0, %2
  %76 = select i1 %14, i32 %75, i32 %2
  %77 = select i1 %15, i32 1, i32 -1
  br i1 %15, label %78, label %91

78:                                               ; preds = %69
  br i1 %14, label %79, label %88

79:                                               ; preds = %78
  br i1 %61, label %80, label %84

80:                                               ; preds = %79
  %81 = add nsw i32 %3, -1
  %82 = mul nsw i32 %81, %2
  %83 = add nsw i32 %72, %82
  br label %109

84:                                               ; preds = %79
  %85 = xor i32 %72, -1
  %86 = add i32 %85, %3
  %87 = mul nsw i32 %86, %2
  br label %109

88:                                               ; preds = %78
  %89 = select i1 %61, i32 1, i32 %2
  %90 = mul nsw i32 %72, %89
  br label %109

91:                                               ; preds = %69
  br i1 %14, label %92, label %101

92:                                               ; preds = %91
  br i1 %61, label %93, label %97

93:                                               ; preds = %92
  %94 = mul nsw i32 %3, %2
  %95 = xor i32 %72, -1
  %96 = add i32 %94, %95
  br label %109

97:                                               ; preds = %92
  %98 = sub nsw i32 %3, %72
  %99 = mul nsw i32 %98, %2
  %100 = add nsw i32 %99, -1
  br label %109

101:                                              ; preds = %91
  br i1 %61, label %102, label %105

102:                                              ; preds = %101
  %103 = xor i32 %72, -1
  %104 = add i32 %103, %2
  br label %109

105:                                              ; preds = %101
  %106 = add nsw i32 %72, 1
  %107 = mul nsw i32 %106, %2
  %108 = add nsw i32 %107, -1
  br label %109

109:                                              ; preds = %102, %105, %93, %97, %80, %84, %88
  %110 = phi i32 [ %90, %88 ], [ %83, %80 ], [ %87, %84 ], [ %96, %93 ], [ %100, %97 ], [ %104, %102 ], [ %108, %105 ]
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %1, i64 %111
  %113 = sext i32 %76 to i64
  br label %114

114:                                              ; preds = %12, %109, %24, %18
  %115 = phi i8* [ %23, %18 ], [ %27, %24 ], [ %112, %109 ], [ %1, %12 ]
  %116 = phi i8* [ %0, %18 ], [ %0, %24 ], [ %74, %109 ], [ %0, %12 ]
  %117 = phi i32 [ %3, %18 ], [ %3, %24 ], [ %71, %109 ], [ %3, %12 ]
  %118 = phi i32 [ %2, %18 ], [ %2, %24 ], [ %71, %109 ], [ %2, %12 ]
  %119 = phi i32 [ %19, %18 ], [ %2, %24 ], [ %77, %109 ], [ %2, %12 ]
  %120 = phi i64 [ -1, %18 ], [ -1, %24 ], [ %113, %109 ], [ 1, %12 ]
  %121 = icmp sgt i32 %117, 0
  br i1 %121, label %122, label %195

122:                                              ; preds = %114
  %123 = icmp sgt i32 %118, 0
  %124 = sext i32 %2 to i64
  %125 = sext i32 %119 to i64
  %126 = add i32 %118, -1
  %127 = and i32 %118, 7
  %128 = icmp ult i32 %126, 7
  %129 = sub i32 %118, %127
  %130 = icmp eq i32 %127, 0
  br label %131

131:                                              ; preds = %148, %122
  %132 = phi i32 [ 0, %122 ], [ %151, %148 ]
  %133 = phi i8* [ %116, %122 ], [ %149, %148 ]
  %134 = phi i8* [ %115, %122 ], [ %150, %148 ]
  br i1 %123, label %135, label %148

135:                                              ; preds = %131
  br i1 %128, label %136, label %153

136:                                              ; preds = %153, %135
  %137 = phi i8* [ %134, %135 ], [ %180, %153 ]
  %138 = phi i8* [ %133, %135 ], [ %178, %153 ]
  br i1 %130, label %148, label %139

139:                                              ; preds = %136, %139
  %140 = phi i8* [ %145, %139 ], [ %137, %136 ]
  %141 = phi i8* [ %143, %139 ], [ %138, %136 ]
  %142 = phi i32 [ %146, %139 ], [ %127, %136 ]
  %143 = getelementptr inbounds i8, i8* %141, i64 1
  %144 = load i8, i8* %141, align 1
  store i8 %144, i8* %140, align 1
  %145 = getelementptr inbounds i8, i8* %140, i64 %120
  %146 = add i32 %142, -1
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %139, !llvm.loop !8

148:                                              ; preds = %136, %139, %131
  %149 = getelementptr inbounds i8, i8* %133, i64 %124
  %150 = getelementptr inbounds i8, i8* %134, i64 %125
  %151 = add nuw nsw i32 %132, 1
  %152 = icmp eq i32 %151, %117
  br i1 %152, label %195, label %131

153:                                              ; preds = %135, %153
  %154 = phi i8* [ %180, %153 ], [ %134, %135 ]
  %155 = phi i8* [ %178, %153 ], [ %133, %135 ]
  %156 = phi i32 [ %181, %153 ], [ %129, %135 ]
  %157 = getelementptr inbounds i8, i8* %155, i64 1
  %158 = load i8, i8* %155, align 1
  store i8 %158, i8* %154, align 1
  %159 = getelementptr inbounds i8, i8* %154, i64 %120
  %160 = getelementptr inbounds i8, i8* %155, i64 2
  %161 = load i8, i8* %157, align 1
  store i8 %161, i8* %159, align 1
  %162 = getelementptr inbounds i8, i8* %159, i64 %120
  %163 = getelementptr inbounds i8, i8* %155, i64 3
  %164 = load i8, i8* %160, align 1
  store i8 %164, i8* %162, align 1
  %165 = getelementptr inbounds i8, i8* %162, i64 %120
  %166 = getelementptr inbounds i8, i8* %155, i64 4
  %167 = load i8, i8* %163, align 1
  store i8 %167, i8* %165, align 1
  %168 = getelementptr inbounds i8, i8* %165, i64 %120
  %169 = getelementptr inbounds i8, i8* %155, i64 5
  %170 = load i8, i8* %166, align 1
  store i8 %170, i8* %168, align 1
  %171 = getelementptr inbounds i8, i8* %168, i64 %120
  %172 = getelementptr inbounds i8, i8* %155, i64 6
  %173 = load i8, i8* %169, align 1
  store i8 %173, i8* %171, align 1
  %174 = getelementptr inbounds i8, i8* %171, i64 %120
  %175 = getelementptr inbounds i8, i8* %155, i64 7
  %176 = load i8, i8* %172, align 1
  store i8 %176, i8* %174, align 1
  %177 = getelementptr inbounds i8, i8* %174, i64 %120
  %178 = getelementptr inbounds i8, i8* %155, i64 8
  %179 = load i8, i8* %175, align 1
  store i8 %179, i8* %177, align 1
  %180 = getelementptr inbounds i8, i8* %177, i64 %120
  %181 = add i32 %156, -8
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %136, label %153

183:                                              ; preds = %43, %31
  %184 = phi i8* [ %0, %31 ], [ %53, %43 ]
  %185 = phi i8* [ %35, %31 ], [ %54, %43 ]
  %186 = icmp eq i32 %39, 0
  br i1 %186, label %195, label %187

187:                                              ; preds = %183, %187
  %188 = phi i8* [ %191, %187 ], [ %184, %183 ]
  %189 = phi i8* [ %192, %187 ], [ %185, %183 ]
  %190 = phi i32 [ %193, %187 ], [ %39, %183 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %189, i8* align 1 %188, i64 %36, i1 false)
  %191 = getelementptr inbounds i8, i8* %188, i64 %36
  %192 = getelementptr inbounds i8, i8* %189, i64 %37
  %193 = add i32 %190, -1
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %187, !llvm.loop !9

195:                                              ; preds = %183, %187, %148, %29, %114, %57
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5media22ComputeLetterboxRegionERKN3gfx4RectERKNS0_4SizeE(%"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 {
  %3 = alloca %"class.gfx::Rect", align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %8
  %13 = bitcast i64* %4 to %"class.gfx::Size"*
  %14 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = bitcast %"class.gfx::Rect"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 4 %15, i64 16, i1 false)
  %16 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1
  %18 = tail call fastcc i64 @_ZN5mediaL17ScaleSizeToTargetERKN3gfx4SizeES3_b(%"class.gfx::Size"* dereferenceable(8) %1, %"class.gfx::Size"* dereferenceable(8) %17, i1 zeroext true)
  store i64 %18, i64* %4, align 8
  call void @_ZN3gfx4Rect19ClampToCenteredSizeERKNS_4SizeE(%"class.gfx::Rect"* nonnull %3, %"class.gfx::Size"* nonnull dereferenceable(8) %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  %19 = bitcast %"class.gfx::Rect"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1
  %22 = bitcast %"class.gfx::Size"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  br label %24

24:                                               ; preds = %2, %8, %12
  %25 = phi i64 [ %20, %12 ], [ 0, %8 ], [ 0, %2 ]
  %26 = phi i64 [ %23, %12 ], [ 0, %8 ], [ 0, %2 ]
  %27 = insertvalue { i64, i64 } undef, i64 %25, 0
  %28 = insertvalue { i64, i64 } %27, i64 %26, 1
  ret { i64, i64 } %28
}

declare void @_ZN3gfx4Rect19ClampToCenteredSizeERKNS_4SizeE(%"class.gfx::Rect"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN5mediaL17ScaleSizeToTargetERKN3gfx4SizeES3_b(%"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Size"* nocapture readonly dereferenceable(8), i1 zeroext) unnamed_addr #4 {
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %71, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %71, label %11

11:                                               ; preds = %7
  %12 = sext i32 %5 to i64
  %13 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = mul nsw i64 %15, %12
  %17 = sext i32 %9 to i64
  %18 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = mul nsw i64 %20, %17
  %22 = icmp slt i64 %21, %16
  %23 = icmp slt i64 %16, %21
  %24 = select i1 %2, i1 %22, i1 %23
  br i1 %24, label %25, label %48

25:                                               ; preds = %11
  %26 = icmp slt i64 %21, 0
  br i1 %26, label %41, label %27

27:                                               ; preds = %25
  %28 = sdiv i32 %5, 2
  %29 = zext i64 %21 to i65
  %30 = sext i32 %28 to i65
  %31 = add nsw i65 %29, %30
  %32 = trunc i65 %31 to i64
  %33 = icmp slt i65 %31, 0
  br i1 %33, label %41, label %34, !prof !10

34:                                               ; preds = %27
  %35 = icmp slt i32 %5, 0
  %36 = icmp ne i64 %32, 0
  %37 = and i1 %35, %36
  br i1 %37, label %41, label %38, !prof !11

38:                                               ; preds = %34
  %39 = udiv i64 %32, %12
  %40 = icmp ult i64 %39, 2147483648
  br i1 %40, label %42, label %41, !prof !12

41:                                               ; preds = %38, %34, %27, %25
  tail call void @llvm.trap() #13
  unreachable

42:                                               ; preds = %38
  %43 = trunc i64 %39 to i32
  %44 = icmp sgt i32 %19, 0
  %45 = select i1 %44, i32 %19, i32 0
  %46 = icmp sgt i32 %43, 0
  %47 = select i1 %46, i32 %43, i32 0
  br label %71

48:                                               ; preds = %11
  %49 = icmp slt i64 %16, 0
  br i1 %49, label %64, label %50

50:                                               ; preds = %48
  %51 = sdiv i32 %9, 2
  %52 = zext i64 %16 to i65
  %53 = sext i32 %51 to i65
  %54 = add nsw i65 %52, %53
  %55 = trunc i65 %54 to i64
  %56 = icmp slt i65 %54, 0
  br i1 %56, label %64, label %57, !prof !10

57:                                               ; preds = %50
  %58 = icmp slt i32 %9, 0
  %59 = icmp ne i64 %55, 0
  %60 = and i1 %58, %59
  br i1 %60, label %64, label %61, !prof !11

61:                                               ; preds = %57
  %62 = udiv i64 %55, %17
  %63 = icmp ult i64 %62, 2147483648
  br i1 %63, label %65, label %64, !prof !12

64:                                               ; preds = %61, %57, %50, %48
  tail call void @llvm.trap() #13
  unreachable

65:                                               ; preds = %61
  %66 = trunc i64 %62 to i32
  %67 = icmp sgt i32 %66, 0
  %68 = select i1 %67, i32 %66, i32 0
  %69 = icmp sgt i32 %14, 0
  %70 = select i1 %69, i32 %14, i32 0
  br label %71

71:                                               ; preds = %3, %7, %42, %65
  %72 = phi i32 [ %47, %42 ], [ %70, %65 ], [ 0, %7 ], [ 0, %3 ]
  %73 = phi i32 [ %45, %42 ], [ %68, %65 ], [ 0, %7 ], [ 0, %3 ]
  %74 = zext i32 %72 to i64
  %75 = shl nuw nsw i64 %74, 32
  %76 = zext i32 %73 to i64
  %77 = or i64 %75, %76
  ret i64 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5media29ComputeLetterboxRegionForI420ERKN3gfx4RectERKNS0_4SizeE(%"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 {
  %3 = alloca %"class.gfx::Rect", align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %8
  %13 = bitcast i64* %4 to %"class.gfx::Size"*
  %14 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = bitcast %"class.gfx::Rect"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 4 %15, i64 16, i1 false) #13
  %16 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1
  %18 = tail call fastcc i64 @_ZN5mediaL17ScaleSizeToTargetERKN3gfx4SizeES3_b(%"class.gfx::Size"* dereferenceable(8) %1, %"class.gfx::Size"* dereferenceable(8) %17, i1 zeroext true) #13
  store i64 %18, i64* %4, align 8
  call void @_ZN3gfx4Rect19ClampToCenteredSizeERKNS_4SizeE(%"class.gfx::Rect"* nonnull %3, %"class.gfx::Size"* nonnull dereferenceable(8) %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  %19 = bitcast %"class.gfx::Rect"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1
  %22 = bitcast %"class.gfx::Size"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  br label %24

24:                                               ; preds = %2, %8, %12
  %25 = phi i64 [ %20, %12 ], [ 0, %8 ], [ 0, %2 ]
  %26 = phi i64 [ %23, %12 ], [ 0, %8 ], [ 0, %2 ]
  %27 = trunc i64 %25 to i32
  %28 = lshr i64 %25, 32
  %29 = trunc i64 %28 to i32
  %30 = trunc i64 %26 to i32
  %31 = lshr i64 %26, 32
  %32 = trunc i64 %31 to i32
  %33 = and i32 %27, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %55, label %35

35:                                               ; preds = %24
  %36 = add nsw i32 %27, -1
  %37 = icmp sgt i32 %36, 0
  %38 = icmp sgt i32 %30, 0
  %39 = and i1 %37, %38
  %40 = sub i32 -2147483648, %27
  %41 = icmp ult i32 %40, %30
  %42 = and i1 %41, %39
  %43 = select i1 %42, i32 %40, i32 %30
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %69, label %48

48:                                               ; preds = %35
  %49 = add nuw nsw i32 %45, 1
  %50 = icmp ule i32 %40, %45
  %51 = and i1 %37, %50
  %52 = select i1 %51, i32 %40, i32 %49
  %53 = icmp sgt i32 %52, 0
  %54 = select i1 %53, i32 %52, i32 0
  br label %69

55:                                               ; preds = %24
  %56 = and i32 %30, 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %69, label %58

58:                                               ; preds = %55
  %59 = add nsw i32 %30, -1
  %60 = icmp sgt i32 %27, 0
  %61 = icmp sgt i32 %59, 0
  %62 = and i1 %60, %61
  %63 = sub nuw nsw i32 2147483647, %27
  %64 = icmp ult i32 %63, %59
  %65 = and i1 %64, %62
  %66 = select i1 %65, i32 %63, i32 %59
  %67 = icmp sgt i32 %66, 0
  %68 = select i1 %67, i32 %66, i32 0
  br label %69

69:                                               ; preds = %35, %55, %58, %48
  %70 = phi i32 [ %30, %55 ], [ %68, %58 ], [ %45, %35 ], [ %54, %48 ]
  %71 = phi i32 [ %27, %55 ], [ %27, %58 ], [ %36, %35 ], [ %36, %48 ]
  %72 = and i32 %29, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %94, label %74

74:                                               ; preds = %69
  %75 = add nsw i32 %29, -1
  %76 = icmp sgt i32 %75, 0
  %77 = icmp sgt i32 %32, 0
  %78 = and i1 %76, %77
  %79 = sub i32 -2147483648, %29
  %80 = icmp ult i32 %79, %32
  %81 = and i1 %80, %78
  %82 = select i1 %81, i32 %79, i32 %32
  %83 = icmp sgt i32 %82, 0
  %84 = select i1 %83, i32 %82, i32 0
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %108, label %87

87:                                               ; preds = %74
  %88 = add nuw nsw i32 %84, 1
  %89 = icmp ule i32 %79, %84
  %90 = and i1 %76, %89
  %91 = select i1 %90, i32 %79, i32 %88
  %92 = icmp sgt i32 %91, 0
  %93 = select i1 %92, i32 %91, i32 0
  br label %108

94:                                               ; preds = %69
  %95 = and i32 %32, 1
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %108, label %97

97:                                               ; preds = %94
  %98 = add nsw i32 %32, -1
  %99 = icmp sgt i32 %29, 0
  %100 = icmp sgt i32 %98, 0
  %101 = and i1 %99, %100
  %102 = sub nuw nsw i32 2147483647, %29
  %103 = icmp ult i32 %102, %98
  %104 = and i1 %103, %101
  %105 = select i1 %104, i32 %102, i32 %98
  %106 = icmp sgt i32 %105, 0
  %107 = select i1 %106, i32 %105, i32 0
  br label %108

108:                                              ; preds = %74, %94, %97, %87
  %109 = phi i32 [ %32, %94 ], [ %107, %97 ], [ %84, %74 ], [ %93, %87 ]
  %110 = phi i32 [ %29, %94 ], [ %29, %97 ], [ %75, %74 ], [ %75, %87 ]
  %111 = zext i32 %110 to i64
  %112 = shl nuw i64 %111, 32
  %113 = zext i32 %71 to i64
  %114 = or i64 %112, %113
  %115 = insertvalue { i64, i64 } undef, i64 %114, 0
  %116 = zext i32 %109 to i64
  %117 = shl nuw i64 %116, 32
  %118 = zext i32 %70 to i64
  %119 = or i64 %117, %118
  %120 = insertvalue { i64, i64 } %115, i64 %119, 1
  ret { i64, i64 } %120
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5media26ScaleSizeToFitWithinTargetERKN3gfx4SizeES3_(%"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 {
  %3 = tail call fastcc i64 @_ZN5mediaL17ScaleSizeToTargetERKN3gfx4SizeES3_b(%"class.gfx::Size"* dereferenceable(8) %0, %"class.gfx::Size"* dereferenceable(8) %1, i1 zeroext true)
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5media26ScaleSizeToEncompassTargetERKN3gfx4SizeES3_(%"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 {
  %3 = tail call fastcc i64 @_ZN5mediaL17ScaleSizeToTargetERKN3gfx4SizeES3_b(%"class.gfx::Size"* dereferenceable(8) %0, %"class.gfx::Size"* dereferenceable(8) %1, i1 zeroext false)
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5media21GetRectSizeFromOriginERKN3gfx4RectE(%"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, %3
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, %8
  %12 = icmp sgt i32 %6, 0
  %13 = select i1 %12, i32 %6, i32 0
  %14 = icmp sgt i32 %11, 0
  %15 = select i1 %14, i32 %11, i32 0
  %16 = zext i32 %15 to i64
  %17 = shl nuw nsw i64 %16, 32
  %18 = zext i32 %13 to i64
  %19 = or i64 %17, %18
  ret i64 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5media21PadToMatchAspectRatioERKN3gfx4SizeES3_(%"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %68, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = sext i32 %8 to i64
  %15 = mul nsw i64 %14, %13
  %16 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = sext i32 %4 to i64
  %20 = mul nsw i64 %18, %19
  %21 = icmp slt i64 %15, %20
  br i1 %21, label %22, label %45

22:                                               ; preds = %10
  %23 = icmp slt i64 %20, 0
  br i1 %23, label %38, label %24

24:                                               ; preds = %22
  %25 = sdiv i32 %8, 2
  %26 = zext i64 %20 to i65
  %27 = sext i32 %25 to i65
  %28 = add nsw i65 %26, %27
  %29 = trunc i65 %28 to i64
  %30 = icmp slt i65 %28, 0
  br i1 %30, label %38, label %31, !prof !10

31:                                               ; preds = %24
  %32 = icmp slt i32 %8, 0
  %33 = icmp ne i64 %29, 0
  %34 = and i1 %32, %33
  br i1 %34, label %38, label %35, !prof !11

35:                                               ; preds = %31
  %36 = udiv i64 %29, %14
  %37 = icmp ult i64 %36, 2147483648
  br i1 %37, label %39, label %38, !prof !12

38:                                               ; preds = %35, %31, %24, %22
  tail call void @llvm.trap() #13
  unreachable

39:                                               ; preds = %35
  %40 = trunc i64 %36 to i32
  %41 = icmp sgt i32 %40, 0
  %42 = select i1 %41, i32 %40, i32 0
  %43 = icmp sgt i32 %17, 0
  %44 = select i1 %43, i32 %17, i32 0
  br label %68

45:                                               ; preds = %10
  %46 = icmp slt i64 %15, 0
  br i1 %46, label %61, label %47

47:                                               ; preds = %45
  %48 = sdiv i32 %4, 2
  %49 = zext i64 %15 to i65
  %50 = sext i32 %48 to i65
  %51 = add nsw i65 %49, %50
  %52 = trunc i65 %51 to i64
  %53 = icmp slt i65 %51, 0
  br i1 %53, label %61, label %54, !prof !10

54:                                               ; preds = %47
  %55 = icmp slt i32 %4, 0
  %56 = icmp ne i64 %52, 0
  %57 = and i1 %55, %56
  br i1 %57, label %61, label %58, !prof !11

58:                                               ; preds = %54
  %59 = udiv i64 %52, %19
  %60 = icmp ult i64 %59, 2147483648
  br i1 %60, label %62, label %61, !prof !12

61:                                               ; preds = %58, %54, %47, %45
  tail call void @llvm.trap() #13
  unreachable

62:                                               ; preds = %58
  %63 = trunc i64 %59 to i32
  %64 = icmp sgt i32 %12, 0
  %65 = select i1 %64, i32 %12, i32 0
  %66 = icmp sgt i32 %63, 0
  %67 = select i1 %66, i32 %63, i32 0
  br label %68

68:                                               ; preds = %2, %6, %39, %62
  %69 = phi i32 [ %44, %39 ], [ %67, %62 ], [ 0, %6 ], [ 0, %2 ]
  %70 = phi i32 [ %42, %39 ], [ %65, %62 ], [ 0, %6 ], [ 0, %2 ]
  %71 = zext i32 %69 to i64
  %72 = shl nuw nsw i64 %71, 32
  %73 = zext i32 %70 to i64
  %74 = or i64 %72, %73
  ret i64 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::VideoFrame"* @_ZN5media26ConvertToMemoryMappedFrameE13scoped_refptrINS_10VideoFrameEE(%"class.media::VideoFrame"*) local_unnamed_addr #4 {
  %2 = alloca [4 x i8*], align 16
  %3 = alloca %"class.gfx::ColorSpace", align 4
  %4 = alloca %"class.base::OnceCallback.10", align 8
  %5 = ptrtoint %"class.media::VideoFrame"* %0 to i64
  %6 = tail call %"class.gfx::GpuMemoryBuffer"* @_ZNK5media10VideoFrame18GetGpuMemoryBufferEv(%"class.media::VideoFrame"* %0) #13
  %7 = bitcast %"class.gfx::GpuMemoryBuffer"* %6 to i1 (%"class.gfx::GpuMemoryBuffer"*)***
  %8 = load i1 (%"class.gfx::GpuMemoryBuffer"*)**, i1 (%"class.gfx::GpuMemoryBuffer"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.gfx::GpuMemoryBuffer"*)*, i1 (%"class.gfx::GpuMemoryBuffer"*)** %8, i64 2
  %10 = load i1 (%"class.gfx::GpuMemoryBuffer"*)*, i1 (%"class.gfx::GpuMemoryBuffer"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.gfx::GpuMemoryBuffer"* %6) #13
  br i1 %11, label %12, label %67

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 2, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = tail call i64 @_ZN5media10VideoFrame9NumPlanesENS_16VideoPixelFormatE(i32 %14) #13
  %16 = bitcast [4 x i8*]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 0, i64 32, i1 false)
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.gfx::GpuMemoryBuffer"* %6 to i8* (%"class.gfx::GpuMemoryBuffer"*, i64)***
  br label %38

20:                                               ; preds = %38
  %21 = getelementptr inbounds [4 x i8*], [4 x i8*]* %2, i64 0, i64 0
  %22 = load i8*, i8** %21, align 16
  %23 = getelementptr inbounds [4 x i8*], [4 x i8*]* %2, i64 0, i64 1
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds [4 x i8*], [4 x i8*]* %2, i64 0, i64 2
  %26 = load i8*, i8** %25, align 16
  br label %27

27:                                               ; preds = %20, %12
  %28 = phi i8* [ %26, %20 ], [ null, %12 ]
  %29 = phi i8* [ %24, %20 ], [ null, %12 ]
  %30 = phi i8* [ %22, %20 ], [ null, %12 ]
  %31 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 2
  %32 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 6
  %34 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 16, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = tail call %"class.media::VideoFrame"* @_ZN5media10VideoFrame29WrapExternalYuvDataWithLayoutERKNS_16VideoFrameLayoutERKN3gfx4RectERKNS4_4SizeEPhSB_SB_N4base9TimeDeltaE(%"class.media::VideoFrameLayout"* dereferenceable(64) %31, %"class.gfx::Rect"* dereferenceable(16) %32, %"class.gfx::Size"* dereferenceable(8) %33, i8* %30, i8* %29, i8* %28, i64 %35) #13
  %37 = icmp eq %"class.media::VideoFrame"* %36, null
  br i1 %37, label %59, label %47

38:                                               ; preds = %38, %18
  %39 = phi i64 [ 0, %18 ], [ %45, %38 ]
  %40 = load i8* (%"class.gfx::GpuMemoryBuffer"*, i64)**, i8* (%"class.gfx::GpuMemoryBuffer"*, i64)*** %19, align 8
  %41 = getelementptr inbounds i8* (%"class.gfx::GpuMemoryBuffer"*, i64)*, i8* (%"class.gfx::GpuMemoryBuffer"*, i64)** %40, i64 3
  %42 = load i8* (%"class.gfx::GpuMemoryBuffer"*, i64)*, i8* (%"class.gfx::GpuMemoryBuffer"*, i64)** %41, align 8
  %43 = tail call i8* %42(%"class.gfx::GpuMemoryBuffer"* %6, i64 %39) #13
  %44 = getelementptr inbounds [4 x i8*], [4 x i8*]* %2, i64 0, i64 %39
  store i8* %43, i8** %44, align 8
  %45 = add nuw i64 %39, 1
  %46 = icmp eq i64 %45, %15
  br i1 %46, label %20, label %38

47:                                               ; preds = %27
  %48 = ptrtoint %"class.media::VideoFrame"* %36 to i64
  %49 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %49) #13
  call void @_ZNK5media10VideoFrame10ColorSpaceEv(%"class.gfx::ColorSpace"* nonnull sret %3, %"class.media::VideoFrame"* %0) #13
  %50 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %36, i64 0, i32 21, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* nonnull align 4 %49, i64 68, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %49) #13
  %51 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %36, i64 0, i32 19
  %52 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 19
  call void @_ZN5media18VideoFrameMetadata17MergeMetadataFromERKS0_(%"struct.media::VideoFrameMetadata"* %51, %"struct.media::VideoFrameMetadata"* dereferenceable(376) %52) #13
  %53 = call i8* @_Znwm(i64 48) #14, !noalias !13
  %54 = bitcast i8* %53 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %54, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media26ConvertToMemoryMappedFrameE13scoped_refptrINS3_10VideoFrameEEE3$_0JS6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5media26ConvertToMemoryMappedFrameE13scoped_refptrINS2_10VideoFrameEEE3$_0JS5_EE7DestroyEPKNS0_13BindStateBaseE") #13, !noalias !13
  %55 = getelementptr inbounds i8, i8* %53, i64 40
  %56 = bitcast i8* %55 to i64*
  store i64 %5, i64* %56, align 8, !noalias !13
  %57 = bitcast %"class.base::OnceCallback.10"* %4 to i8**
  store i8* %53, i8** %57, align 8, !alias.scope !13
  call void @_ZN5media10VideoFrame22AddDestructionObserverEN4base12OnceCallbackIFvvEEE(%"class.media::VideoFrame"* nonnull %36, %"class.base::OnceCallback.10"* nonnull %4) #13
  %58 = getelementptr inbounds %"class.base::OnceCallback.10", %"class.base::OnceCallback.10"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %58) #13
  br label %64

59:                                               ; preds = %27
  %60 = bitcast %"class.gfx::GpuMemoryBuffer"* %6 to void (%"class.gfx::GpuMemoryBuffer"*)***
  %61 = load void (%"class.gfx::GpuMemoryBuffer"*)**, void (%"class.gfx::GpuMemoryBuffer"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.gfx::GpuMemoryBuffer"*)*, void (%"class.gfx::GpuMemoryBuffer"*)** %61, i64 4
  %63 = load void (%"class.gfx::GpuMemoryBuffer"*)*, void (%"class.gfx::GpuMemoryBuffer"*)** %62, align 8
  tail call void %63(%"class.gfx::GpuMemoryBuffer"* %6) #13
  br label %64

64:                                               ; preds = %59, %47
  %65 = phi %"class.media::VideoFrame"* [ null, %47 ], [ %0, %59 ]
  %66 = phi i64 [ %48, %47 ], [ 0, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #13
  br label %67

67:                                               ; preds = %1, %64
  %68 = phi i64 [ %66, %64 ], [ 0, %1 ]
  %69 = phi %"class.media::VideoFrame"* [ %65, %64 ], [ %0, %1 ]
  %70 = icmp eq %"class.media::VideoFrame"* %69, null
  br i1 %70, label %83, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw sub i32* %73, i32 1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %83

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %72, i64 -2
  %78 = bitcast %"class.base::RefCountedThreadSafe"* %77 to %"class.media::VideoFrame"*
  %79 = bitcast %"class.base::RefCountedThreadSafe"* %77 to void (%"class.media::VideoFrame"*)***
  %80 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %80, i64 1
  %82 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %81, align 8
  call void %82(%"class.media::VideoFrame"* nonnull %78) #13
  br label %83

83:                                               ; preds = %67, %71, %76
  %84 = inttoptr i64 %68 to %"class.media::VideoFrame"*
  ret %"class.media::VideoFrame"* %84
}

declare %"class.gfx::GpuMemoryBuffer"* @_ZNK5media10VideoFrame18GetGpuMemoryBufferEv(%"class.media::VideoFrame"*) local_unnamed_addr #5

declare i64 @_ZN5media10VideoFrame9NumPlanesENS_16VideoPixelFormatE(i32) local_unnamed_addr #5

declare %"class.media::VideoFrame"* @_ZN5media10VideoFrame29WrapExternalYuvDataWithLayoutERKNS_16VideoFrameLayoutERKN3gfx4RectERKNS4_4SizeEPhSB_SB_N4base9TimeDeltaE(%"class.media::VideoFrameLayout"* dereferenceable(64), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), i8*, i8*, i8*, i64) local_unnamed_addr #5

declare void @_ZNK5media10VideoFrame10ColorSpaceEv(%"class.gfx::ColorSpace"* sret, %"class.media::VideoFrame"*) local_unnamed_addr #5

declare void @_ZN5media18VideoFrameMetadata17MergeMetadataFromERKS0_(%"struct.media::VideoFrameMetadata"*, %"struct.media::VideoFrameMetadata"* dereferenceable(376)) local_unnamed_addr #5

declare void @_ZN5media10VideoFrame22AddDestructionObserverEN4base12OnceCallbackIFvvEEE(%"class.media::VideoFrame"*, %"class.base::OnceCallback.10"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::VideoFrame"* @_ZN5media20WrapAsI420VideoFrameE13scoped_refptrINS_10VideoFrameEE(%"class.media::VideoFrame"*) local_unnamed_addr #4 {
  %2 = icmp eq %"class.media::VideoFrame"* %0, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %1
  %4 = tail call %"class.media::VideoFrame"* @_ZN5media10VideoFrame14WrapVideoFrameE13scoped_refptrIS0_ENS_16VideoPixelFormatERKN3gfx4RectERKNS4_4SizeE(%"class.media::VideoFrame"* null, i32 1, %"class.gfx::Rect"* nonnull dereferenceable(16) inttoptr (i64 92 to %"class.gfx::Rect"*), %"class.gfx::Size"* nonnull dereferenceable(8) inttoptr (i64 108 to %"class.gfx::Size"*)) #13
  br label %22

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic
  %8 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 6
  %10 = tail call %"class.media::VideoFrame"* @_ZN5media10VideoFrame14WrapVideoFrameE13scoped_refptrIS0_ENS_16VideoPixelFormatERKN3gfx4RectERKNS4_4SizeE(%"class.media::VideoFrame"* nonnull %0, i32 1, %"class.gfx::Rect"* dereferenceable(16) %8, %"class.gfx::Size"* dereferenceable(8) %9) #13
  %11 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.media::VideoFrame"*
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %16 to void (%"class.media::VideoFrame"*)***
  %19 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %19, i64 1
  %21 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %20, align 8
  tail call void %21(%"class.media::VideoFrame"* nonnull %17) #13
  br label %22

22:                                               ; preds = %3, %5, %15
  %23 = phi %"class.media::VideoFrame"* [ %4, %3 ], [ %10, %5 ], [ %10, %15 ]
  ret %"class.media::VideoFrame"* %23
}

declare %"class.media::VideoFrame"* @_ZN5media10VideoFrame14WrapVideoFrameE13scoped_refptrIS0_ENS_16VideoPixelFormatERKN3gfx4RectERKNS4_4SizeE(%"class.media::VideoFrame"*, i32, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media19I420CopyWithPaddingERKNS_10VideoFrameEPS0_(%"class.media::VideoFrame"* dereferenceable(1144), %"class.media::VideoFrame"*) local_unnamed_addr #4 {
  %3 = icmp eq %"class.media::VideoFrame"* %1, null
  br i1 %3, label %336, label %4

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZNK5media10VideoFrame10IsMappableEv(%"class.media::VideoFrame"* nonnull %1) #13
  br i1 %5, label %6, label %336

6:                                                ; preds = %4
  %7 = tail call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %0, i64 0) #13
  %8 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %9 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %8, align 8
  %10 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = tail call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %0, i64 1) #13
  %13 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %8, align 8
  %14 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %13, i64 1, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = tail call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %0, i64 2) #13
  %17 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %8, align 8
  %18 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %17, i64 2, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 7, i64 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 2, i32 2, i32 0, i32 0
  %23 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %22, align 8
  %24 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 7, i64 1
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %23, i64 1, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 7, i64 2
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %23, i64 2, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 5, i32 1, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 5, i32 1, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = tail call i32 @I420Copy(i8* %7, i32 %11, i8* %12, i32 %15, i8* %16, i32 %19, i8* %21, i32 %25, i8* %27, i32 %29, i8* %31, i32 %33, i32 %35, i32 %37) #13
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %336

40:                                               ; preds = %6
  %41 = load i8*, i8** %20, align 8
  %42 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %22, align 8
  %43 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 2, i32 1
  %47 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 5, i32 1
  %48 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = load i32, i32* %36, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %65

54:                                               ; preds = %51, %40
  %55 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %46, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %104, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 2, i32 1, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %104, label %62

62:                                               ; preds = %58
  %63 = sext i32 %60 to i64
  %64 = mul nsw i64 %63, %45
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 0, i64 %64, i1 false) #13
  br label %104

65:                                               ; preds = %51
  %66 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %46, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %67, %49
  %69 = icmp sgt i32 %52, 0
  %70 = and i1 %69, %68
  br i1 %70, label %71, label %85

71:                                               ; preds = %65
  %72 = sext i32 %49 to i64
  %73 = getelementptr inbounds i8, i8* %41, i64 %72
  %74 = sub nsw i32 %67, %49
  %75 = sext i32 %74 to i64
  br label %76

76:                                               ; preds = %76, %71
  %77 = phi i32 [ 0, %71 ], [ %81, %76 ]
  %78 = phi i8* [ %73, %71 ], [ %82, %76 ]
  %79 = getelementptr inbounds i8, i8* %78, i64 -1
  %80 = load i8, i8* %79, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %78, i8 %80, i64 %75, i1 false) #13
  %81 = add nuw nsw i32 %77, 1
  %82 = getelementptr inbounds i8, i8* %78, i64 %45
  %83 = load i32, i32* %36, align 4
  %84 = icmp slt i32 %81, %83
  br i1 %84, label %76, label %85

85:                                               ; preds = %76, %65
  %86 = phi i32 [ %52, %65 ], [ %83, %76 ]
  %87 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 2, i32 1, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = icmp slt i32 %86, %88
  br i1 %89, label %90, label %104

90:                                               ; preds = %85
  %91 = sext i32 %86 to i64
  %92 = mul nsw i64 %91, %45
  %93 = getelementptr inbounds i8, i8* %41, i64 %92
  %94 = sub nsw i64 0, %45
  %95 = getelementptr inbounds i8, i8* %93, i64 %94
  %96 = sext i32 %67 to i64
  br label %97

97:                                               ; preds = %97, %90
  %98 = phi i32 [ %86, %90 ], [ %100, %97 ]
  %99 = phi i8* [ %93, %90 ], [ %101, %97 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %99, i8* align 1 %95, i64 %96, i1 false) #13
  %100 = add nsw i32 %98, 1
  %101 = getelementptr inbounds i8, i8* %99, i64 %45
  %102 = load i32, i32* %87, align 4
  %103 = icmp slt i32 %100, %102
  br i1 %103, label %97, label %104

104:                                              ; preds = %97, %54, %58, %62, %85
  %105 = load i8*, i8** %26, align 8
  %106 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %22, align 8
  %107 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %106, i64 1, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = sext i32 %108 to i64
  %110 = tail call i64 @_ZN5media10VideoFrame9PlaneSizeENS_16VideoPixelFormatEmRKN3gfx4SizeE(i32 1, i64 1, %"class.gfx::Size"* dereferenceable(8) %46) #13
  %111 = trunc i64 %110 to i32
  %112 = lshr i64 %110, 32
  %113 = trunc i64 %112 to i32
  %114 = tail call i64 @_ZN5media10VideoFrame9PlaneSizeENS_16VideoPixelFormatEmRKN3gfx4SizeE(i32 1, i64 1, %"class.gfx::Size"* dereferenceable(8) %47) #13
  %115 = trunc i64 %114 to i32
  %116 = lshr i64 %114, 32
  %117 = trunc i64 %116 to i32
  %118 = icmp eq i32 %115, 0
  %119 = icmp eq i32 %117, 0
  %120 = or i1 %118, %119
  br i1 %120, label %121, label %128

121:                                              ; preds = %104
  %122 = icmp eq i32 %111, 0
  %123 = icmp eq i32 %113, 0
  %124 = or i1 %122, %123
  br i1 %124, label %220, label %125

125:                                              ; preds = %121
  %126 = ashr i64 %110, 32
  %127 = mul nsw i64 %126, %109
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %105, i8 0, i64 %127, i1 false) #13
  br label %220

128:                                              ; preds = %104
  %129 = icmp sgt i32 %111, %115
  %130 = icmp sgt i32 %117, 0
  %131 = and i1 %129, %130
  br i1 %131, label %132, label %184

132:                                              ; preds = %128
  %133 = shl i64 %114, 32
  %134 = ashr exact i64 %133, 32
  %135 = getelementptr inbounds i8, i8* %105, i64 %134
  %136 = sub i64 %110, %114
  %137 = shl i64 %136, 32
  %138 = ashr exact i64 %137, 32
  %139 = add i32 %117, -1
  %140 = and i32 %117, 7
  %141 = icmp ult i32 %139, 7
  br i1 %141, label %173, label %142

142:                                              ; preds = %132
  %143 = sub i32 %117, %140
  br label %144

144:                                              ; preds = %144, %142
  %145 = phi i8* [ %135, %142 ], [ %170, %144 ]
  %146 = phi i32 [ %143, %142 ], [ %171, %144 ]
  %147 = getelementptr inbounds i8, i8* %145, i64 -1
  %148 = load i8, i8* %147, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %145, i8 %148, i64 %138, i1 false) #13
  %149 = getelementptr inbounds i8, i8* %145, i64 %109
  %150 = getelementptr inbounds i8, i8* %149, i64 -1
  %151 = load i8, i8* %150, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %149, i8 %151, i64 %138, i1 false) #13
  %152 = getelementptr inbounds i8, i8* %149, i64 %109
  %153 = getelementptr inbounds i8, i8* %152, i64 -1
  %154 = load i8, i8* %153, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %152, i8 %154, i64 %138, i1 false) #13
  %155 = getelementptr inbounds i8, i8* %152, i64 %109
  %156 = getelementptr inbounds i8, i8* %155, i64 -1
  %157 = load i8, i8* %156, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %155, i8 %157, i64 %138, i1 false) #13
  %158 = getelementptr inbounds i8, i8* %155, i64 %109
  %159 = getelementptr inbounds i8, i8* %158, i64 -1
  %160 = load i8, i8* %159, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %158, i8 %160, i64 %138, i1 false) #13
  %161 = getelementptr inbounds i8, i8* %158, i64 %109
  %162 = getelementptr inbounds i8, i8* %161, i64 -1
  %163 = load i8, i8* %162, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %161, i8 %163, i64 %138, i1 false) #13
  %164 = getelementptr inbounds i8, i8* %161, i64 %109
  %165 = getelementptr inbounds i8, i8* %164, i64 -1
  %166 = load i8, i8* %165, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %164, i8 %166, i64 %138, i1 false) #13
  %167 = getelementptr inbounds i8, i8* %164, i64 %109
  %168 = getelementptr inbounds i8, i8* %167, i64 -1
  %169 = load i8, i8* %168, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %167, i8 %169, i64 %138, i1 false) #13
  %170 = getelementptr inbounds i8, i8* %167, i64 %109
  %171 = add i32 %146, -8
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %144

173:                                              ; preds = %144, %132
  %174 = phi i8* [ %135, %132 ], [ %170, %144 ]
  %175 = icmp eq i32 %140, 0
  br i1 %175, label %184, label %176

176:                                              ; preds = %173, %176
  %177 = phi i8* [ %181, %176 ], [ %174, %173 ]
  %178 = phi i32 [ %182, %176 ], [ %140, %173 ]
  %179 = getelementptr inbounds i8, i8* %177, i64 -1
  %180 = load i8, i8* %179, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %177, i8 %180, i64 %138, i1 false) #13
  %181 = getelementptr inbounds i8, i8* %177, i64 %109
  %182 = add i32 %178, -1
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %176, !llvm.loop !18

184:                                              ; preds = %173, %176, %128
  %185 = icmp sgt i32 %113, %117
  br i1 %185, label %186, label %220

186:                                              ; preds = %184
  %187 = ashr i64 %114, 32
  %188 = mul nsw i64 %187, %109
  %189 = getelementptr inbounds i8, i8* %105, i64 %188
  %190 = sub nsw i64 0, %109
  %191 = getelementptr inbounds i8, i8* %189, i64 %190
  %192 = shl i64 %110, 32
  %193 = ashr exact i64 %192, 32
  %194 = sub i32 %113, %117
  %195 = xor i32 %117, -1
  %196 = add i32 %195, %113
  %197 = and i32 %194, 3
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %207, label %199

199:                                              ; preds = %186, %199
  %200 = phi i32 [ %203, %199 ], [ %117, %186 ]
  %201 = phi i8* [ %204, %199 ], [ %189, %186 ]
  %202 = phi i32 [ %205, %199 ], [ %197, %186 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %201, i8* align 1 %191, i64 %193, i1 false) #13
  %203 = add nsw i32 %200, 1
  %204 = getelementptr inbounds i8, i8* %201, i64 %109
  %205 = add i32 %202, -1
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %199, !llvm.loop !19

207:                                              ; preds = %199, %186
  %208 = phi i32 [ %117, %186 ], [ %203, %199 ]
  %209 = phi i8* [ %189, %186 ], [ %204, %199 ]
  %210 = icmp ult i32 %196, 3
  br i1 %210, label %220, label %211

211:                                              ; preds = %207, %211
  %212 = phi i32 [ %217, %211 ], [ %208, %207 ]
  %213 = phi i8* [ %218, %211 ], [ %209, %207 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %213, i8* align 1 %191, i64 %193, i1 false) #13
  %214 = getelementptr inbounds i8, i8* %213, i64 %109
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %214, i8* align 1 %191, i64 %193, i1 false) #13
  %215 = getelementptr inbounds i8, i8* %214, i64 %109
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %215, i8* align 1 %191, i64 %193, i1 false) #13
  %216 = getelementptr inbounds i8, i8* %215, i64 %109
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %216, i8* align 1 %191, i64 %193, i1 false) #13
  %217 = add nsw i32 %212, 4
  %218 = getelementptr inbounds i8, i8* %216, i64 %109
  %219 = icmp eq i32 %217, %113
  br i1 %219, label %220, label %211

220:                                              ; preds = %207, %211, %121, %125, %184
  %221 = load i8*, i8** %30, align 8
  %222 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %22, align 8
  %223 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %222, i64 2, i32 0
  %224 = load i32, i32* %223, align 8
  %225 = sext i32 %224 to i64
  %226 = tail call i64 @_ZN5media10VideoFrame9PlaneSizeENS_16VideoPixelFormatEmRKN3gfx4SizeE(i32 1, i64 2, %"class.gfx::Size"* dereferenceable(8) %46) #13
  %227 = trunc i64 %226 to i32
  %228 = lshr i64 %226, 32
  %229 = trunc i64 %228 to i32
  %230 = tail call i64 @_ZN5media10VideoFrame9PlaneSizeENS_16VideoPixelFormatEmRKN3gfx4SizeE(i32 1, i64 2, %"class.gfx::Size"* dereferenceable(8) %47) #13
  %231 = trunc i64 %230 to i32
  %232 = lshr i64 %230, 32
  %233 = trunc i64 %232 to i32
  %234 = icmp eq i32 %231, 0
  %235 = icmp eq i32 %233, 0
  %236 = or i1 %234, %235
  br i1 %236, label %237, label %244

237:                                              ; preds = %220
  %238 = icmp eq i32 %227, 0
  %239 = icmp eq i32 %229, 0
  %240 = or i1 %238, %239
  br i1 %240, label %336, label %241

241:                                              ; preds = %237
  %242 = ashr i64 %226, 32
  %243 = mul nsw i64 %242, %225
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %221, i8 0, i64 %243, i1 false) #13
  br label %336

244:                                              ; preds = %220
  %245 = icmp sgt i32 %227, %231
  %246 = icmp sgt i32 %233, 0
  %247 = and i1 %245, %246
  br i1 %247, label %248, label %300

248:                                              ; preds = %244
  %249 = shl i64 %230, 32
  %250 = ashr exact i64 %249, 32
  %251 = getelementptr inbounds i8, i8* %221, i64 %250
  %252 = sub i64 %226, %230
  %253 = shl i64 %252, 32
  %254 = ashr exact i64 %253, 32
  %255 = add i32 %233, -1
  %256 = and i32 %233, 7
  %257 = icmp ult i32 %255, 7
  br i1 %257, label %289, label %258

258:                                              ; preds = %248
  %259 = sub i32 %233, %256
  br label %260

260:                                              ; preds = %260, %258
  %261 = phi i8* [ %251, %258 ], [ %286, %260 ]
  %262 = phi i32 [ %259, %258 ], [ %287, %260 ]
  %263 = getelementptr inbounds i8, i8* %261, i64 -1
  %264 = load i8, i8* %263, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %261, i8 %264, i64 %254, i1 false) #13
  %265 = getelementptr inbounds i8, i8* %261, i64 %225
  %266 = getelementptr inbounds i8, i8* %265, i64 -1
  %267 = load i8, i8* %266, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %265, i8 %267, i64 %254, i1 false) #13
  %268 = getelementptr inbounds i8, i8* %265, i64 %225
  %269 = getelementptr inbounds i8, i8* %268, i64 -1
  %270 = load i8, i8* %269, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %268, i8 %270, i64 %254, i1 false) #13
  %271 = getelementptr inbounds i8, i8* %268, i64 %225
  %272 = getelementptr inbounds i8, i8* %271, i64 -1
  %273 = load i8, i8* %272, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %271, i8 %273, i64 %254, i1 false) #13
  %274 = getelementptr inbounds i8, i8* %271, i64 %225
  %275 = getelementptr inbounds i8, i8* %274, i64 -1
  %276 = load i8, i8* %275, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %274, i8 %276, i64 %254, i1 false) #13
  %277 = getelementptr inbounds i8, i8* %274, i64 %225
  %278 = getelementptr inbounds i8, i8* %277, i64 -1
  %279 = load i8, i8* %278, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %277, i8 %279, i64 %254, i1 false) #13
  %280 = getelementptr inbounds i8, i8* %277, i64 %225
  %281 = getelementptr inbounds i8, i8* %280, i64 -1
  %282 = load i8, i8* %281, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %280, i8 %282, i64 %254, i1 false) #13
  %283 = getelementptr inbounds i8, i8* %280, i64 %225
  %284 = getelementptr inbounds i8, i8* %283, i64 -1
  %285 = load i8, i8* %284, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %283, i8 %285, i64 %254, i1 false) #13
  %286 = getelementptr inbounds i8, i8* %283, i64 %225
  %287 = add i32 %262, -8
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %260

289:                                              ; preds = %260, %248
  %290 = phi i8* [ %251, %248 ], [ %286, %260 ]
  %291 = icmp eq i32 %256, 0
  br i1 %291, label %300, label %292

292:                                              ; preds = %289, %292
  %293 = phi i8* [ %297, %292 ], [ %290, %289 ]
  %294 = phi i32 [ %298, %292 ], [ %256, %289 ]
  %295 = getelementptr inbounds i8, i8* %293, i64 -1
  %296 = load i8, i8* %295, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %293, i8 %296, i64 %254, i1 false) #13
  %297 = getelementptr inbounds i8, i8* %293, i64 %225
  %298 = add i32 %294, -1
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %292, !llvm.loop !20

300:                                              ; preds = %289, %292, %244
  %301 = icmp sgt i32 %229, %233
  br i1 %301, label %302, label %336

302:                                              ; preds = %300
  %303 = ashr i64 %230, 32
  %304 = mul nsw i64 %303, %225
  %305 = getelementptr inbounds i8, i8* %221, i64 %304
  %306 = sub nsw i64 0, %225
  %307 = getelementptr inbounds i8, i8* %305, i64 %306
  %308 = shl i64 %226, 32
  %309 = ashr exact i64 %308, 32
  %310 = sub i32 %229, %233
  %311 = xor i32 %233, -1
  %312 = add i32 %311, %229
  %313 = and i32 %310, 3
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %323, label %315

315:                                              ; preds = %302, %315
  %316 = phi i32 [ %319, %315 ], [ %233, %302 ]
  %317 = phi i8* [ %320, %315 ], [ %305, %302 ]
  %318 = phi i32 [ %321, %315 ], [ %313, %302 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %317, i8* align 1 %307, i64 %309, i1 false) #13
  %319 = add nsw i32 %316, 1
  %320 = getelementptr inbounds i8, i8* %317, i64 %225
  %321 = add i32 %318, -1
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %315, !llvm.loop !21

323:                                              ; preds = %315, %302
  %324 = phi i32 [ %233, %302 ], [ %319, %315 ]
  %325 = phi i8* [ %305, %302 ], [ %320, %315 ]
  %326 = icmp ult i32 %312, 3
  br i1 %326, label %336, label %327

327:                                              ; preds = %323, %327
  %328 = phi i32 [ %333, %327 ], [ %324, %323 ]
  %329 = phi i8* [ %334, %327 ], [ %325, %323 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %329, i8* align 1 %307, i64 %309, i1 false) #13
  %330 = getelementptr inbounds i8, i8* %329, i64 %225
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %330, i8* align 1 %307, i64 %309, i1 false) #13
  %331 = getelementptr inbounds i8, i8* %330, i64 %225
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %331, i8* align 1 %307, i64 %309, i1 false) #13
  %332 = getelementptr inbounds i8, i8* %331, i64 %225
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %332, i8* align 1 %307, i64 %309, i1 false) #13
  %333 = add nsw i32 %328, 4
  %334 = getelementptr inbounds i8, i8* %332, i64 %225
  %335 = icmp eq i32 %333, %229
  br i1 %335, label %336, label %327

336:                                              ; preds = %323, %327, %300, %241, %237, %6, %4, %2
  %337 = phi i1 [ false, %2 ], [ false, %4 ], [ false, %6 ], [ true, %237 ], [ true, %241 ], [ true, %300 ], [ true, %327 ], [ true, %323 ]
  ret i1 %337
}

declare zeroext i1 @_ZNK5media10VideoFrame10IsMappableEv(%"class.media::VideoFrame"*) local_unnamed_addr #5

declare i32 @I420Copy(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #5

declare i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"*, i64) local_unnamed_addr #5

declare i64 @_ZN5media10VideoFrame9PlaneSizeENS_16VideoPixelFormatEmRKN3gfx4SizeE(i32, i64, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::VideoFrame"* @_ZN5media38ReadbackTextureBackedFrameToMemorySyncERKNS_10VideoFrameEPN3gpu6raster15RasterInterfaceEP15GrDirectContextPNS_14VideoFramePoolE(%"class.media::VideoFrame"* dereferenceable(1144), %"class.gpu::raster::RasterInterface"*, %class.GrDirectContext*, %"class.media::VideoFramePool"*) local_unnamed_addr #4 {
  %5 = alloca %"class.gfx::ColorSpace", align 4
  %6 = alloca %struct.SkImageInfo, align 8
  %7 = alloca %"class.gfx::ColorSpace", align 4
  %8 = alloca %"class.base::ScopedClosureRunner", align 8
  %9 = alloca %"class.base::OnceCallback.10", align 8
  %10 = alloca %struct.GrGLTextureInfo, align 4
  %11 = alloca %class.GrBackendTexture, align 8
  %12 = alloca %class.sk_sp.186, align 8
  %13 = alloca %class.sk_sp.187, align 8
  %14 = alloca %class.SkPixmap, align 8
  %15 = icmp eq %class.GrDirectContext* %2, null
  br i1 %15, label %202, label %16

16:                                               ; preds = %4
  %17 = bitcast %"class.base::OnceCallback.10"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = bitcast %class.sk_sp.187* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = ptrtoint %"class.gpu::raster::RasterInterface"* %1 to i64
  %20 = tail call i64 @_ZNK5media10VideoFrame11NumTexturesEv(%"class.media::VideoFrame"* %0) #13
  %21 = icmp ugt i64 %20, 2
  br i1 %21, label %200, label %22

22:                                               ; preds = %16
  %23 = tail call i64 @_ZNK5media10VideoFrame11NumTexturesEv(%"class.media::VideoFrame"* %0) #13
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %200, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 2, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = tail call i64 @_ZNK5media10VideoFrame11NumTexturesEv(%"class.media::VideoFrame"* %0) #13
  %29 = icmp eq i64 %28, 1
  %30 = icmp eq i32 %27, 6
  %31 = and i1 %30, %29
  %32 = select i1 %31, i32 10, i32 %27
  %33 = icmp eq %"class.media::VideoFramePool"* %3, null
  %34 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 2, i32 1
  %35 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 5
  %36 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 6
  %37 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 16, i32 0
  %38 = load i64, i64* %37, align 8
  br i1 %33, label %41, label %39

39:                                               ; preds = %25
  %40 = tail call %"class.media::VideoFrame"* @_ZN5media14VideoFramePool11CreateFrameENS_16VideoPixelFormatERKN3gfx4SizeERKNS2_4RectES5_N4base9TimeDeltaE(%"class.media::VideoFramePool"* nonnull %3, i32 %32, %"class.gfx::Size"* dereferenceable(8) %34, %"class.gfx::Rect"* dereferenceable(16) %35, %"class.gfx::Size"* dereferenceable(8) %36, i64 %38) #13
  br label %43

41:                                               ; preds = %25
  %42 = tail call %"class.media::VideoFrame"* @_ZN5media10VideoFrame11CreateFrameENS_16VideoPixelFormatERKN3gfx4SizeERKNS2_4RectES5_N4base9TimeDeltaE(i32 %32, %"class.gfx::Size"* dereferenceable(8) %34, %"class.gfx::Rect"* dereferenceable(16) %35, %"class.gfx::Size"* dereferenceable(8) %36, i64 %38) #13
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi %"class.media::VideoFrame"* [ %42, %41 ], [ %40, %39 ]
  %45 = ptrtoint %"class.media::VideoFrame"* %44 to i64
  %46 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %46) #13
  call void @_ZNK5media10VideoFrame10ColorSpaceEv(%"class.gfx::ColorSpace"* nonnull sret %7, %"class.media::VideoFrame"* %0) #13
  %47 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %44, i64 0, i32 21, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* nonnull align 4 %46, i64 68, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %46) #13
  %48 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %44, i64 0, i32 19
  %49 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 19
  call void @_ZN5media18VideoFrameMetadata17MergeMetadataFromERKS0_(%"struct.media::VideoFrameMetadata"* %48, %"struct.media::VideoFrameMetadata"* dereferenceable(376) %49) #13
  %50 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %44, i64 0, i32 2, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = call i64 @_ZN5media10VideoFrame9NumPlanesENS_16VideoPixelFormatE(i32 %51) #13
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %200, label %54

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"class.gpu::raster::RasterInterface", %"class.gpu::raster::RasterInterface"* %1, i64 0, i32 0
  %56 = bitcast %"class.gpu::raster::RasterInterface"* %1 to void (%"class.gpu::InterfaceBase"*, i8*)***
  %57 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %44, i64 0, i32 2, i32 1, i32 0
  %58 = bitcast %"class.gpu::raster::RasterInterface"* %1 to i32 (%"class.gpu::raster::RasterInterface"*, %"struct.gpu::Mailbox"*)***
  %59 = bitcast %"class.gpu::raster::RasterInterface"* %1 to void (%"class.gpu::raster::RasterInterface"*, i32, i32)***
  %60 = bitcast %"class.base::ScopedClosureRunner"* %8 to i8*
  %61 = getelementptr inbounds %"class.base::ScopedClosureRunner", %"class.base::ScopedClosureRunner"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.base::OnceCallback.10"* %9 to i8**
  %63 = getelementptr inbounds %"class.base::OnceCallback.10", %"class.base::OnceCallback.10"* %9, i64 0, i32 0
  %64 = bitcast %struct.GrGLTextureInfo* %10 to i8*
  %65 = getelementptr inbounds %struct.GrGLTextureInfo, %struct.GrGLTextureInfo* %10, i64 0, i32 0
  %66 = getelementptr inbounds %struct.GrGLTextureInfo, %struct.GrGLTextureInfo* %10, i64 0, i32 1
  %67 = getelementptr inbounds %struct.GrGLTextureInfo, %struct.GrGLTextureInfo* %10, i64 0, i32 2
  %68 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %11, i64 0, i32 0
  %69 = bitcast %class.sk_sp.186* %12 to i8*
  %70 = getelementptr inbounds %class.sk_sp.186, %class.sk_sp.186* %12, i64 0, i32 0
  %71 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %2, i64 0, i32 0
  %72 = getelementptr inbounds %class.sk_sp.187, %class.sk_sp.187* %13, i64 0, i32 0
  %73 = bitcast %class.SkPixmap* %14 to i8*
  %74 = bitcast %class.SkPixmap* %14 to i64*
  %75 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %14, i64 0, i32 1
  %76 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %14, i64 0, i32 2, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %14, i64 0, i32 2, i32 0, i32 1
  %78 = bitcast i32* %77 to i64*
  %79 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %14, i64 0, i32 2, i32 1
  %80 = bitcast %struct.SkISize* %79 to i64*
  br label %83

81:                                               ; preds = %182
  %82 = icmp eq i64 %185, %52
  br i1 %82, label %200, label %83

83:                                               ; preds = %81, %54
  %84 = phi i64 [ 0, %54 ], [ %185, %81 ]
  %85 = call dereferenceable(48) %"struct.gpu::MailboxHolder"* @_ZNK5media10VideoFrame14mailbox_holderEm(%"class.media::VideoFrame"* %0, i64 %84) #13
  %86 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %85, i64 0, i32 0
  %87 = call zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"* %86) #13
  br i1 %87, label %186, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %85, i64 0, i32 1, i32 0
  %90 = load void (%"class.gpu::InterfaceBase"*, i8*)**, void (%"class.gpu::InterfaceBase"*, i8*)*** %56, align 8
  %91 = getelementptr inbounds void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %90, i64 3
  %92 = load void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %91, align 8
  call void %92(%"class.gpu::InterfaceBase"* %55, i8* %89) #13
  %93 = load i32, i32* %50, align 8
  %94 = load i32, i32* %57, align 4
  %95 = call i64 @_ZN5media10VideoFrame7ColumnsEmNS_16VideoPixelFormatEi(i64 %84, i32 %93, i32 %94) #13
  %96 = trunc i64 %95 to i32
  %97 = call i32 @_ZNK5media10VideoFrame4rowsEm(%"class.media::VideoFrame"* %44, i64 %84) #13
  %98 = load i32 (%"class.gpu::raster::RasterInterface"*, %"struct.gpu::Mailbox"*)**, i32 (%"class.gpu::raster::RasterInterface"*, %"struct.gpu::Mailbox"*)*** %58, align 8
  %99 = getelementptr inbounds i32 (%"class.gpu::raster::RasterInterface"*, %"struct.gpu::Mailbox"*)*, i32 (%"class.gpu::raster::RasterInterface"*, %"struct.gpu::Mailbox"*)** %98, i64 16
  %100 = load i32 (%"class.gpu::raster::RasterInterface"*, %"struct.gpu::Mailbox"*)*, i32 (%"class.gpu::raster::RasterInterface"*, %"struct.gpu::Mailbox"*)** %99, align 8
  %101 = call i32 %100(%"class.gpu::raster::RasterInterface"* %1, %"struct.gpu::Mailbox"* dereferenceable(16) %86) #13
  %102 = call zeroext i1 @_ZNK3gpu7Mailbox13IsSharedImageEv(%"struct.gpu::Mailbox"* %86) #13
  br i1 %102, label %103, label %107

103:                                              ; preds = %88
  %104 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32)**, void (%"class.gpu::raster::RasterInterface"*, i32, i32)*** %59, align 8
  %105 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i32, i32)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32)** %104, i64 20
  %106 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32)** %105, align 8
  call void %106(%"class.gpu::raster::RasterInterface"* %1, i32 %101, i32 35574) #13
  br label %107

107:                                              ; preds = %103, %88
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #13
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %61, align 8
  %108 = call zeroext i1 @_ZNK3gpu7Mailbox13IsSharedImageEv(%"struct.gpu::Mailbox"* %86) #13
  %109 = zext i1 %108 to i8
  %110 = call i8* @_Znwm(i64 56) #14, !noalias !22
  %111 = bitcast i8* %110 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %111, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media12_GLOBAL__N_142ReadbackTextureBackedFrameToMemorySyncGLESERKNS3_10VideoFrameEPN3gpu6raster15RasterInterfaceEP15GrDirectContextPNS3_14VideoFramePoolEE3$_1JjbSB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5media12_GLOBAL__N_142ReadbackTextureBackedFrameToMemorySyncGLESERKNS2_10VideoFrameEPN3gpu6raster15RasterInterfaceEP15GrDirectContextPNS2_14VideoFramePoolEE3$_1JjbSA_EE7DestroyEPKNS0_13BindStateBaseE") #13, !noalias !22
  %112 = getelementptr inbounds i8, i8* %110, i64 40
  %113 = bitcast i8* %112 to i32*
  store i32 %101, i32* %113, align 4, !noalias !22
  %114 = getelementptr inbounds i8, i8* %110, i64 44
  store i8 %109, i8* %114, align 1, !noalias !22
  %115 = getelementptr inbounds i8, i8* %110, i64 48
  %116 = bitcast i8* %115 to i64*
  store i64 %19, i64* %116, align 8, !noalias !22
  store i8* %110, i8** %62, align 8, !alias.scope !22
  call void @_ZN4base19ScopedClosureRunnerC1ENS_12OnceCallbackIFvvEEE(%"class.base::ScopedClosureRunner"* nonnull %8, %"class.base::OnceCallback.10"* nonnull %9) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #13
  %117 = load i32, i32* %50, align 8
  switch i32 %117, label %128 [
    i32 6, label %118
    i32 28, label %120
    i32 27, label %122
    i32 11, label %124
    i32 10, label %126
  ]

118:                                              ; preds = %107
  switch i64 %84, label %128 [
    i64 1, label %129
    i64 0, label %119
  ]

119:                                              ; preds = %118
  br label %129

120:                                              ; preds = %107
  %121 = icmp eq i64 %84, 0
  br i1 %121, label %129, label %128

122:                                              ; preds = %107
  %123 = icmp eq i64 %84, 0
  br i1 %123, label %129, label %128

124:                                              ; preds = %107
  %125 = icmp eq i64 %84, 0
  br i1 %125, label %129, label %128

126:                                              ; preds = %107
  %127 = icmp eq i64 %84, 0
  br i1 %127, label %129, label %128

128:                                              ; preds = %126, %124, %122, %120, %118, %107
  br label %129

129:                                              ; preds = %128, %126, %124, %122, %120, %119, %118
  %130 = phi i32 [ 0, %128 ], [ 1, %119 ], [ 15, %118 ], [ 4, %120 ], [ 4, %122 ], [ 6, %124 ], [ 6, %126 ]
  %131 = phi i32 [ 0, %128 ], [ 33321, %119 ], [ 33323, %118 ], [ 32856, %120 ], [ 32856, %122 ], [ 37793, %124 ], [ 37793, %126 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %64) #13
  store i32 %101, i32* %66, align 4
  %132 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %85, i64 0, i32 2
  %133 = load i32, i32* %132, align 8
  store i32 %133, i32* %65, align 4
  store i32 %131, i32* %67, align 4
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %68) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 176, i1 false) #13
  call void @_ZN16GrBackendTextureC1Eii11GrMipmappedRK15GrGLTextureInfo(%class.GrBackendTexture* nonnull %11, i32 %96, i32 %97, i1 zeroext false, %struct.GrGLTextureInfo* nonnull dereferenceable(12) %10) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #13
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %70, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %72, align 8
  call void @_ZN7SkImage15MakeFromTextureEP18GrRecordingContextRK16GrBackendTexture15GrSurfaceOrigin11SkColorType11SkAlphaType5sk_spI12SkColorSpaceEPFvPvESB_(%class.sk_sp.186* nonnull sret %12, %class.GrRecordingContext* %71, %class.GrBackendTexture* nonnull dereferenceable(176) %11, i32 0, i32 %130, i32 1, %class.sk_sp.187* nonnull %13, void (i8*)* null, i8* null) #13
  %134 = load %class.SkColorSpace*, %class.SkColorSpace** %72, align 8
  %135 = icmp eq %class.SkColorSpace* %134, null
  br i1 %135, label %142, label %136

136:                                              ; preds = %129
  %137 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = atomicrmw add i32* %137, i32 -1 acq_rel
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %142

140:                                              ; preds = %136
  %141 = bitcast %class.SkColorSpace* %134 to i8*
  call void @_ZdlPv(i8* %141) #14
  br label %142

142:                                              ; preds = %140, %136, %129
  %143 = load %class.SkImage*, %class.SkImage** %70, align 8
  %144 = icmp eq %class.SkImage* %143, null
  br i1 %144, label %182, label %145

145:                                              ; preds = %142
  %146 = zext i32 %97 to i64
  %147 = shl nuw i64 %146, 32
  %148 = and i64 %95, 4294967295
  %149 = or i64 %147, %148
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %73) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 40, i1 false) #13
  %150 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %44, i64 0, i32 7, i64 %84
  %151 = bitcast i8** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = call i32 @_ZNK5media10VideoFrame9row_bytesEm(%"class.media::VideoFrame"* %44, i64 %84) #13
  %154 = sext i32 %153 to i64
  store i64 %152, i64* %74, align 8
  store i64 %154, i64* %75, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %76, align 8
  %155 = zext i32 %130 to i64
  %156 = or i64 %155, 4294967296
  store i64 %156, i64* %78, align 8
  store i64 %149, i64* %80, align 8
  %157 = load %class.SkImage*, %class.SkImage** %70, align 8
  %158 = call zeroext i1 @_ZNK7SkImage10readPixelsEP15GrDirectContextRK8SkPixmapiiNS_11CachingHintE(%class.SkImage* %157, %class.GrDirectContext* nonnull %2, %class.SkPixmap* nonnull dereferenceable(40) %14, i32 0, i32 0, i32 1) #13
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = load %class.SkColorSpace*, %class.SkColorSpace** %76, align 8
  %162 = icmp eq %class.SkColorSpace* %161, null
  br i1 %162, label %169, label %163

163:                                              ; preds = %145
  %164 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = atomicrmw add i32* %164, i32 -1 acq_rel
  %166 = icmp eq i32 %165, 1
  br i1 %166, label %167, label %169

167:                                              ; preds = %163
  %168 = bitcast %class.SkColorSpace* %161 to i8*
  call void @_ZdlPv(i8* %168) #14
  br label %169

169:                                              ; preds = %167, %163, %145
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %73) #13
  %170 = load %class.SkImage*, %class.SkImage** %70, align 8
  %171 = icmp eq %class.SkImage* %170, null
  br i1 %171, label %182, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %class.SkImage, %class.SkImage* %170, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = atomicrmw add i32* %173, i32 -1 acq_rel
  %175 = icmp eq i32 %174, 1
  br i1 %175, label %176, label %182

176:                                              ; preds = %172
  %177 = bitcast %class.SkImage* %170 to %class.SkRefCntBase*
  %178 = bitcast %class.SkImage* %170 to void (%class.SkRefCntBase*)***
  %179 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %178, align 8
  %180 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %179, i64 2
  %181 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %180, align 8
  call void %181(%class.SkRefCntBase* nonnull %177) #13
  br label %182

182:                                              ; preds = %176, %172, %169, %142
  %183 = phi i32 [ %160, %169 ], [ %160, %172 ], [ %160, %176 ], [ 1, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #13
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %68) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %64) #13
  call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #13
  %184 = icmp eq i32 %183, 0
  %185 = add nuw i64 %84, 1
  br i1 %184, label %81, label %186

186:                                              ; preds = %182, %83
  %187 = icmp eq %"class.media::VideoFrame"* %44, null
  br i1 %187, label %200, label %188

188:                                              ; preds = %186
  %189 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %44, i64 0, i32 1
  %190 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = atomicrmw sub i32* %190, i32 1 acq_rel
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %193, label %200

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %189, i64 -2
  %195 = bitcast %"class.base::RefCountedThreadSafe"* %194 to %"class.media::VideoFrame"*
  %196 = bitcast %"class.base::RefCountedThreadSafe"* %194 to void (%"class.media::VideoFrame"*)***
  %197 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %197, i64 1
  %199 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %198, align 8
  call void %199(%"class.media::VideoFrame"* nonnull %195) #13
  br label %200

200:                                              ; preds = %81, %16, %22, %43, %186, %188, %193
  %201 = phi i64 [ 0, %22 ], [ 0, %16 ], [ 0, %186 ], [ 0, %188 ], [ 0, %193 ], [ %45, %43 ], [ %45, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %330

202:                                              ; preds = %4
  %203 = tail call i64 @_ZNK5media10VideoFrame11NumTexturesEv(%"class.media::VideoFrame"* %0) #13
  %204 = icmp ugt i64 %203, 2
  br i1 %204, label %330, label %205

205:                                              ; preds = %202
  %206 = tail call i64 @_ZNK5media10VideoFrame11NumTexturesEv(%"class.media::VideoFrame"* %0) #13
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %330, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 2, i32 0
  %210 = load i32, i32* %209, align 8
  %211 = tail call i64 @_ZNK5media10VideoFrame11NumTexturesEv(%"class.media::VideoFrame"* %0) #13
  %212 = icmp eq i64 %211, 1
  %213 = icmp eq i32 %210, 6
  %214 = and i1 %213, %212
  %215 = select i1 %214, i32 10, i32 %210
  %216 = icmp eq %"class.media::VideoFramePool"* %3, null
  %217 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 2, i32 1
  %218 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 5
  %219 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 6
  %220 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 16, i32 0
  %221 = load i64, i64* %220, align 8
  br i1 %216, label %224, label %222

222:                                              ; preds = %208
  %223 = tail call %"class.media::VideoFrame"* @_ZN5media14VideoFramePool11CreateFrameENS_16VideoPixelFormatERKN3gfx4SizeERKNS2_4RectES5_N4base9TimeDeltaE(%"class.media::VideoFramePool"* nonnull %3, i32 %215, %"class.gfx::Size"* dereferenceable(8) %217, %"class.gfx::Rect"* dereferenceable(16) %218, %"class.gfx::Size"* dereferenceable(8) %219, i64 %221) #13
  br label %226

224:                                              ; preds = %208
  %225 = tail call %"class.media::VideoFrame"* @_ZN5media10VideoFrame11CreateFrameENS_16VideoPixelFormatERKN3gfx4SizeERKNS2_4RectES5_N4base9TimeDeltaE(i32 %215, %"class.gfx::Size"* dereferenceable(8) %217, %"class.gfx::Rect"* dereferenceable(16) %218, %"class.gfx::Size"* dereferenceable(8) %219, i64 %221) #13
  br label %226

226:                                              ; preds = %224, %222
  %227 = phi %"class.media::VideoFrame"* [ %225, %224 ], [ %223, %222 ]
  %228 = ptrtoint %"class.media::VideoFrame"* %227 to i64
  %229 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %229) #13
  call void @_ZNK5media10VideoFrame10ColorSpaceEv(%"class.gfx::ColorSpace"* nonnull sret %5, %"class.media::VideoFrame"* %0) #13
  %230 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %227, i64 0, i32 21, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %230, i8* nonnull align 4 %229, i64 68, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %229) #13
  %231 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %227, i64 0, i32 19
  %232 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %0, i64 0, i32 19
  call void @_ZN5media18VideoFrameMetadata17MergeMetadataFromERKS0_(%"struct.media::VideoFrameMetadata"* %231, %"struct.media::VideoFrameMetadata"* dereferenceable(376) %232) #13
  %233 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %227, i64 0, i32 2, i32 0
  %234 = load i32, i32* %233, align 8
  %235 = call i64 @_ZN5media10VideoFrame9NumPlanesENS_16VideoPixelFormatE(i32 %234) #13
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %330, label %237

237:                                              ; preds = %226
  %238 = getelementptr inbounds %"class.gpu::raster::RasterInterface", %"class.gpu::raster::RasterInterface"* %1, i64 0, i32 0
  %239 = bitcast %"class.gpu::raster::RasterInterface"* %1 to void (%"class.gpu::InterfaceBase"*, i8*)***
  %240 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %227, i64 0, i32 2, i32 1, i32 0
  %241 = bitcast %struct.SkImageInfo* %6 to i8*
  %242 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %243 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 1
  %244 = bitcast %struct.SkImageInfo* %6 to i64*
  %245 = bitcast i32* %243 to i64*
  %246 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %247 = bitcast %struct.SkISize* %246 to i64*
  %248 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0
  %249 = bitcast %"class.gpu::raster::RasterInterface"* %1 to void (%"class.gpu::raster::RasterInterface"*, %"struct.gpu::Mailbox"*, %struct.SkImageInfo*, i32, i32, i32, i8*)***
  %250 = bitcast %"class.gpu::raster::RasterInterface"* %1 to i32 (%"class.gpu::raster::RasterInterface"*)***
  br label %253

251:                                              ; preds = %314
  %252 = icmp eq i64 %315, %235
  br i1 %252, label %330, label %253

253:                                              ; preds = %251, %237
  %254 = phi i64 [ 0, %237 ], [ %315, %251 ]
  %255 = call dereferenceable(48) %"struct.gpu::MailboxHolder"* @_ZNK5media10VideoFrame14mailbox_holderEm(%"class.media::VideoFrame"* %0, i64 %254) #13
  %256 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %255, i64 0, i32 0
  %257 = call zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"* %256) #13
  br i1 %257, label %316, label %258

258:                                              ; preds = %253
  %259 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %255, i64 0, i32 1, i32 0
  %260 = load void (%"class.gpu::InterfaceBase"*, i8*)**, void (%"class.gpu::InterfaceBase"*, i8*)*** %239, align 8
  %261 = getelementptr inbounds void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %260, i64 3
  %262 = load void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %261, align 8
  call void %262(%"class.gpu::InterfaceBase"* %238, i8* %259) #13
  %263 = load i32, i32* %233, align 8
  %264 = load i32, i32* %240, align 4
  %265 = call i64 @_ZN5media10VideoFrame7ColumnsEmNS_16VideoPixelFormatEi(i64 %254, i32 %263, i32 %264) #13
  %266 = call i32 @_ZNK5media10VideoFrame4rowsEm(%"class.media::VideoFrame"* %227, i64 %254) #13
  %267 = load i32, i32* %233, align 8
  switch i32 %267, label %281 [
    i32 6, label %268
    i32 28, label %273
    i32 27, label %275
    i32 11, label %277
    i32 10, label %279
  ]

268:                                              ; preds = %258
  %269 = icmp eq i64 %254, 0
  %270 = select i1 %269, i64 4294967297, i64 4294967296
  %271 = icmp eq i64 %254, 1
  %272 = select i1 %271, i64 4294967311, i64 %270
  br label %282

273:                                              ; preds = %258
  %274 = icmp eq i64 %254, 0
  br i1 %274, label %282, label %281

275:                                              ; preds = %258
  %276 = icmp eq i64 %254, 0
  br i1 %276, label %282, label %281

277:                                              ; preds = %258
  %278 = icmp eq i64 %254, 0
  br i1 %278, label %282, label %281

279:                                              ; preds = %258
  %280 = icmp eq i64 %254, 0
  br i1 %280, label %282, label %281

281:                                              ; preds = %279, %277, %275, %273, %258
  br label %282

282:                                              ; preds = %281, %279, %277, %275, %273, %268
  %283 = phi i64 [ 4294967296, %281 ], [ 4294967300, %273 ], [ 4294967300, %275 ], [ 4294967302, %277 ], [ 4294967302, %279 ], [ %272, %268 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %241) #13
  %284 = zext i32 %266 to i64
  %285 = shl nuw i64 %284, 32
  %286 = and i64 %265, 4294967295
  %287 = or i64 %285, %286
  store i64 0, i64* %244, align 8, !alias.scope !27
  store i64 %283, i64* %245, align 8, !alias.scope !27
  store i64 %287, i64* %247, align 8, !alias.scope !27
  %288 = shl i64 %265, 32
  %289 = ashr exact i64 %288, 32
  %290 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %248) #13
  %291 = sext i32 %290 to i64
  %292 = mul nsw i64 %289, %291
  %293 = icmp ult i64 %292, 2147483648
  %294 = select i1 %293, i64 %292, i64 0
  %295 = trunc i64 %294 to i32
  %296 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %227, i64 0, i32 7, i64 %254
  %297 = load i8*, i8** %296, align 8
  %298 = load void (%"class.gpu::raster::RasterInterface"*, %"struct.gpu::Mailbox"*, %struct.SkImageInfo*, i32, i32, i32, i8*)**, void (%"class.gpu::raster::RasterInterface"*, %"struct.gpu::Mailbox"*, %struct.SkImageInfo*, i32, i32, i32, i8*)*** %249, align 8
  %299 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, %"struct.gpu::Mailbox"*, %struct.SkImageInfo*, i32, i32, i32, i8*)*, void (%"class.gpu::raster::RasterInterface"*, %"struct.gpu::Mailbox"*, %struct.SkImageInfo*, i32, i32, i32, i8*)** %298, i64 15
  %300 = load void (%"class.gpu::raster::RasterInterface"*, %"struct.gpu::Mailbox"*, %struct.SkImageInfo*, i32, i32, i32, i8*)*, void (%"class.gpu::raster::RasterInterface"*, %"struct.gpu::Mailbox"*, %struct.SkImageInfo*, i32, i32, i32, i8*)** %299, align 8
  call void %300(%"class.gpu::raster::RasterInterface"* %1, %"struct.gpu::Mailbox"* dereferenceable(16) %256, %struct.SkImageInfo* nonnull dereferenceable(24) %6, i32 %295, i32 0, i32 0, i8* %297) #13
  %301 = load i32 (%"class.gpu::raster::RasterInterface"*)**, i32 (%"class.gpu::raster::RasterInterface"*)*** %250, align 8
  %302 = getelementptr inbounds i32 (%"class.gpu::raster::RasterInterface"*)*, i32 (%"class.gpu::raster::RasterInterface"*)** %301, i64 27
  %303 = load i32 (%"class.gpu::raster::RasterInterface"*)*, i32 (%"class.gpu::raster::RasterInterface"*)** %302, align 8
  %304 = call i32 %303(%"class.gpu::raster::RasterInterface"* %1) #13
  %305 = icmp eq i32 %304, 0
  %306 = load %class.SkColorSpace*, %class.SkColorSpace** %242, align 8
  %307 = icmp eq %class.SkColorSpace* %306, null
  br i1 %307, label %314, label %308

308:                                              ; preds = %282
  %309 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %306, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = atomicrmw add i32* %309, i32 -1 acq_rel
  %311 = icmp eq i32 %310, 1
  br i1 %311, label %312, label %314

312:                                              ; preds = %308
  %313 = bitcast %class.SkColorSpace* %306 to i8*
  call void @_ZdlPv(i8* %313) #14
  br label %314

314:                                              ; preds = %312, %308, %282
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %241) #13
  %315 = add nuw i64 %254, 1
  br i1 %305, label %251, label %316

316:                                              ; preds = %314, %253
  %317 = icmp eq %"class.media::VideoFrame"* %227, null
  br i1 %317, label %330, label %318

318:                                              ; preds = %316
  %319 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %227, i64 0, i32 1
  %320 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %319, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = atomicrmw sub i32* %320, i32 1 acq_rel
  %322 = icmp eq i32 %321, 1
  br i1 %322, label %323, label %330

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %319, i64 -2
  %325 = bitcast %"class.base::RefCountedThreadSafe"* %324 to %"class.media::VideoFrame"*
  %326 = bitcast %"class.base::RefCountedThreadSafe"* %324 to void (%"class.media::VideoFrame"*)***
  %327 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %326, align 8
  %328 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %327, i64 1
  %329 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %328, align 8
  call void %329(%"class.media::VideoFrame"* nonnull %325) #13
  br label %330

330:                                              ; preds = %251, %323, %318, %316, %226, %205, %202, %200
  %331 = phi i64 [ %201, %200 ], [ 0, %205 ], [ 0, %202 ], [ 0, %316 ], [ 0, %318 ], [ 0, %323 ], [ %228, %226 ], [ %228, %251 ]
  %332 = inttoptr i64 %331 to %"class.media::VideoFrame"*
  ret %"class.media::VideoFrame"* %332
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media20ConvertAndScaleFrameERKNS_10VideoFrameERS0_RNSt3__16vectorIhNS4_9allocatorIhEEEE(%"class.media::Status"* noalias sret, %"class.media::VideoFrame"* dereferenceable(1144), %"class.media::VideoFrame"* dereferenceable(1144), %"class.std::__1::vector.139"* dereferenceable(24)) local_unnamed_addr #4 {
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.gfx::ColorSpace", align 4
  %10 = alloca %"class.base::Location", align 8
  %11 = alloca %"class.base::Location", align 8
  %12 = alloca %"class.base::Location", align 8
  %13 = alloca %"class.base::Location", align 8
  %14 = alloca %"class.base::Location", align 8
  %15 = alloca %"class.base::Location", align 8
  %16 = alloca %"class.media::Status", align 8
  %17 = alloca %"class.base::Location", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = tail call zeroext i1 @_ZNK5media10VideoFrame10IsMappableEv(%"class.media::VideoFrame"* %1) #13
  br i1 %20, label %21, label %23

21:                                               ; preds = %4
  %22 = tail call zeroext i1 @_ZNK5media10VideoFrame10IsMappableEv(%"class.media::VideoFrame"* %2) #13
  br i1 %22, label %25, label %23

23:                                               ; preds = %21, %4
  %24 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 727) #13
  call void @_ZN5media6StatusC1ENS_10StatusCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_8LocationE(%"class.media::Status"* %0, i32 2561, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0, %"class.base::Location"* nonnull dereferenceable(32) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #13
  br label %496

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 2, i32 0
  %27 = load i32, i32* %26, align 8
  switch i32 %27, label %157 [
    i32 1, label %28
    i32 6, label %28
  ]

28:                                               ; preds = %25, %25
  %29 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 2, i32 0
  %30 = load i32, i32* %29, align 8
  switch i32 %30, label %157 [
    i32 28, label %31
    i32 11, label %31
    i32 27, label %31
    i32 10, label %31
  ]

31:                                               ; preds = %28, %28, %28, %28
  %32 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 21, i32 0
  store i8 4, i8* %32, align 4
  %33 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 21, i32 1
  store i8 7, i8* %33, align 1
  %34 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 21, i32 2
  store i8 5, i8* %34, align 2
  %35 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 21, i32 3
  store i8 1, i8* %35, align 1
  %36 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 21, i32 4
  %37 = bitcast [9 x float]* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 0, i64 64, i1 false)
  %38 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 2, i32 2, i32 0, i32 0
  %39 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %38, align 8
  %40 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %39, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = tail call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 0) #13
  %44 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %67

49:                                               ; preds = %31
  %50 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %51, %53
  br i1 %54, label %55, label %67

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %61, label %67

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %63, %65
  br i1 %66, label %101, label %67

67:                                               ; preds = %61, %31, %55, %49
  %68 = load i32, i32* %29, align 8
  %69 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 2, i32 1
  %70 = tail call i64 @_ZN5media10VideoFrame14AllocationSizeENS_16VideoPixelFormatERKN3gfx4SizeE(i32 %68, %"class.gfx::Size"* dereferenceable(8) %69) #13
  %71 = getelementptr inbounds %"class.std::__1::vector.139", %"class.std::__1::vector.139"* %3, i64 0, i32 0, i32 1
  %72 = bitcast i8** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::vector.139"* %3 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %73, %75
  %77 = icmp ugt i64 %70, %76
  br i1 %77, label %78, label %80

78:                                               ; preds = %67
  %79 = sub i64 %70, %76
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.139"* %3, i64 %79) #13
  br label %80

80:                                               ; preds = %78, %67
  %81 = load i32, i32* %29, align 8
  %82 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = tail call i64 @_ZN5media10VideoFrame8RowBytesEmNS_16VideoPixelFormatEi(i64 0, i32 %81, i32 %83) #13
  %85 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %"class.std::__1::vector.139", %"class.std::__1::vector.139"* %3, i64 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = trunc i64 %84 to i32
  %92 = load i32, i32* %82, align 4
  %93 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = tail call i32 @ARGBScale(i8* %43, i32 %41, i32 %86, i32 %88, i8* %90, i32 %91, i32 %92, i32 %94, i32 3) #13
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %80
  %98 = load i8*, i8** %89, align 8
  br label %101

99:                                               ; preds = %80
  %100 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 755) #13
  call void @_ZN5media6StatusC1ENS_10StatusCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_8LocationE(%"class.media::Status"* %0, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0, %"class.base::Location"* nonnull dereferenceable(32) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #13
  br label %496

101:                                              ; preds = %61, %97
  %102 = phi i8* [ %43, %61 ], [ %98, %97 ]
  %103 = phi i64 [ %42, %61 ], [ %84, %97 ]
  %104 = load i32, i32* %26, align 8
  %105 = icmp eq i32 %104, 1
  %106 = load i32, i32* %29, align 8
  %107 = add i32 %106, -27
  %108 = icmp ugt i32 %107, 1
  br i1 %105, label %109, label %135

109:                                              ; preds = %101
  %110 = select i1 %108, i32 (i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32)* @ARGBToI420, i32 (i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32)* @ABGRToI420
  %111 = trunc i64 %103 to i32
  %112 = tail call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 0) #13
  %113 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 2, i32 2, i32 0, i32 0
  %114 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %113, align 8
  %115 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %114, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = tail call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 1) #13
  %118 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %113, align 8
  %119 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %118, i64 1, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = tail call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 2) #13
  %122 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %113, align 8
  %123 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %122, i64 2, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = tail call i32 %110(i8* %102, i32 %111, i8* %112, i32 %116, i8* %117, i32 %120, i8* %121, i32 %124, i32 %126, i32 %128) #13, !callees !30
  %130 = icmp eq i32 %129, 0
  %131 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %131) #13
  br i1 %130, label %133, label %132

132:                                              ; preds = %109
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 773) #13
  call void @_ZN5media6StatusC1ENS_10StatusCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_8LocationE(%"class.media::Status"* %0, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0, %"class.base::Location"* nonnull dereferenceable(32) %7) #13
  br label %134

133:                                              ; preds = %109
  tail call void @_ZN5media6StatusC1Ev(%"class.media::Status"* %0) #13
  br label %134

134:                                              ; preds = %133, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %131) #13
  br label %496

135:                                              ; preds = %101
  %136 = select i1 %108, i32 (i8*, i32, i8*, i32, i8*, i32, i32, i32)* @ARGBToNV12, i32 (i8*, i32, i8*, i32, i8*, i32, i32, i32)* @ABGRToNV12
  %137 = trunc i64 %103 to i32
  %138 = tail call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 0) #13
  %139 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 2, i32 2, i32 0, i32 0
  %140 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %139, align 8
  %141 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %140, i64 0, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = tail call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 1) #13
  %144 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %139, align 8
  %145 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %144, i64 1, i32 0
  %146 = load i32, i32* %145, align 8
  %147 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = tail call i32 %136(i8* %102, i32 %137, i8* %138, i32 %142, i8* %143, i32 %146, i32 %148, i32 %150) #13, !callees !31
  %152 = icmp eq i32 %151, 0
  %153 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %153) #13
  br i1 %152, label %155, label %154

154:                                              ; preds = %135
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 786) #13
  call void @_ZN5media6StatusC1ENS_10StatusCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_8LocationE(%"class.media::Status"* %0, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0, %"class.base::Location"* nonnull dereferenceable(32) %8) #13
  br label %156

155:                                              ; preds = %135
  tail call void @_ZN5media6StatusC1Ev(%"class.media::Status"* %0) #13
  br label %156

156:                                              ; preds = %155, %154
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %153) #13
  br label %496

157:                                              ; preds = %28, %25
  %158 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %158) #13
  call void @_ZNK5media10VideoFrame10ColorSpaceEv(%"class.gfx::ColorSpace"* nonnull sret %9, %"class.media::VideoFrame"* %1) #13
  %159 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 21, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %159, i8* nonnull align 4 %158, i64 68, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %158) #13
  %160 = load i32, i32* %26, align 8
  switch i32 %160, label %473 [
    i32 1, label %161
    i32 6, label %205
  ]

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 2, i32 0
  %163 = load i32, i32* %162, align 8
  switch i32 %163, label %473 [
    i32 1, label %164
    i32 6, label %241
  ]

164:                                              ; preds = %161
  %165 = call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 0) #13
  %166 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 2, i32 2, i32 0, i32 0
  %167 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %166, align 8
  %168 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %167, i64 0, i32 0
  %169 = load i32, i32* %168, align 8
  %170 = call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 1) #13
  %171 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %166, align 8
  %172 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %171, i64 1, i32 0
  %173 = load i32, i32* %172, align 8
  %174 = call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 2) #13
  %175 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %166, align 8
  %176 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %175, i64 2, i32 0
  %177 = load i32, i32* %176, align 8
  %178 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 0) #13
  %183 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 2, i32 2, i32 0, i32 0
  %184 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %183, align 8
  %185 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %184, i64 0, i32 0
  %186 = load i32, i32* %185, align 8
  %187 = call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 1) #13
  %188 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %183, align 8
  %189 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %188, i64 1, i32 0
  %190 = load i32, i32* %189, align 8
  %191 = call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 2) #13
  %192 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %183, align 8
  %193 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %192, i64 2, i32 0
  %194 = load i32, i32* %193, align 8
  %195 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = call i32 @I420Scale(i8* %165, i32 %169, i8* %170, i32 %173, i8* %174, i32 %177, i32 %179, i32 %181, i8* %182, i32 %186, i8* %187, i32 %190, i8* %191, i32 %194, i32 %196, i32 %198, i32 3) #13
  %200 = icmp eq i32 %199, 0
  %201 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %201) #13
  br i1 %200, label %203, label %202

202:                                              ; preds = %164
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 810) #13
  call void @_ZN5media6StatusC1ENS_10StatusCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_8LocationE(%"class.media::Status"* %0, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0, %"class.base::Location"* nonnull dereferenceable(32) %10) #13
  br label %204

203:                                              ; preds = %164
  call void @_ZN5media6StatusC1Ev(%"class.media::Status"* %0) #13
  br label %204

204:                                              ; preds = %203, %202
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %201) #13
  br label %496

205:                                              ; preds = %157
  %206 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 2, i32 0
  %207 = load i32, i32* %206, align 8
  switch i32 %207, label %473 [
    i32 6, label %208
    i32 1, label %358
  ]

208:                                              ; preds = %205
  %209 = call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 0) #13
  %210 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 2, i32 2, i32 0, i32 0
  %211 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %210, align 8
  %212 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %211, i64 0, i32 0
  %213 = load i32, i32* %212, align 8
  %214 = call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 1) #13
  %215 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %210, align 8
  %216 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %215, i64 1, i32 0
  %217 = load i32, i32* %216, align 8
  %218 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 0) #13
  %223 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 2, i32 2, i32 0, i32 0
  %224 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %223, align 8
  %225 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %224, i64 0, i32 0
  %226 = load i32, i32* %225, align 8
  %227 = call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 1) #13
  %228 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %223, align 8
  %229 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %228, i64 1, i32 0
  %230 = load i32, i32* %229, align 8
  %231 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = call i32 @NV12Scale(i8* %209, i32 %213, i8* %214, i32 %217, i32 %219, i32 %221, i8* %222, i32 %226, i8* %227, i32 %230, i32 %232, i32 %234, i32 3) #13
  %236 = icmp eq i32 %235, 0
  %237 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %237) #13
  br i1 %236, label %239, label %238

238:                                              ; preds = %208
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 828) #13
  call void @_ZN5media6StatusC1ENS_10StatusCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_8LocationE(%"class.media::Status"* %0, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0, %"class.base::Location"* nonnull dereferenceable(32) %11) #13
  br label %240

239:                                              ; preds = %208
  call void @_ZN5media6StatusC1Ev(%"class.media::Status"* %0) #13
  br label %240

240:                                              ; preds = %239, %238
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %237) #13
  br label %496

241:                                              ; preds = %161
  %242 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 0, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 0, i32 0
  %245 = load i32, i32* %244, align 4
  %246 = icmp eq i32 %243, %245
  br i1 %246, label %247, label %296

247:                                              ; preds = %241
  %248 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 0, i32 1
  %251 = load i32, i32* %250, align 4
  %252 = icmp eq i32 %249, %251
  br i1 %252, label %253, label %296

253:                                              ; preds = %247
  %254 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 0
  %255 = load i32, i32* %254, align 4
  %256 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %255, %257
  br i1 %258, label %259, label %296

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 1
  %261 = load i32, i32* %260, align 4
  %262 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = icmp eq i32 %261, %263
  br i1 %264, label %265, label %296

265:                                              ; preds = %259
  %266 = call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 0) #13
  %267 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 2, i32 2, i32 0, i32 0
  %268 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %267, align 8
  %269 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %268, i64 0, i32 0
  %270 = load i32, i32* %269, align 8
  %271 = call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 1) #13
  %272 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %267, align 8
  %273 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %272, i64 1, i32 0
  %274 = load i32, i32* %273, align 8
  %275 = call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 0) #13
  %276 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 2, i32 2, i32 0, i32 0
  %277 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %276, align 8
  %278 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %277, i64 0, i32 0
  %279 = load i32, i32* %278, align 8
  %280 = call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 1) #13
  %281 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %276, align 8
  %282 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %281, i64 1, i32 0
  %283 = load i32, i32* %282, align 8
  %284 = call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 2) #13
  %285 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %276, align 8
  %286 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %285, i64 2, i32 0
  %287 = load i32, i32* %286, align 8
  %288 = load i32, i32* %256, align 4
  %289 = load i32, i32* %262, align 4
  %290 = call i32 @NV12ToI420(i8* %266, i32 %270, i8* %271, i32 %274, i8* %275, i32 %279, i8* %280, i32 %283, i8* %284, i32 %287, i32 %288, i32 %289) #13
  %291 = icmp eq i32 %290, 0
  %292 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %292) #13
  br i1 %291, label %294, label %293

293:                                              ; preds = %265
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 848) #13
  call void @_ZN5media6StatusC1ENS_10StatusCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_8LocationE(%"class.media::Status"* %0, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0, %"class.base::Location"* nonnull dereferenceable(32) %12) #13
  br label %295

294:                                              ; preds = %265
  call void @_ZN5media6StatusC1Ev(%"class.media::Status"* %0) #13
  br label %295

295:                                              ; preds = %294, %293
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %292) #13
  br label %496

296:                                              ; preds = %241, %253, %247, %259
  %297 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 0
  %298 = load i32, i32* %297, align 4
  %299 = add nsw i32 %298, 1
  %300 = sdiv i32 %299, 2
  %301 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = add nsw i32 %302, 1
  %304 = sdiv i32 %303, 2
  %305 = mul nsw i32 %304, %300
  %306 = shl nsw i32 %305, 1
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds %"class.std::__1::vector.139", %"class.std::__1::vector.139"* %3, i64 0, i32 0, i32 1
  %309 = bitcast i8** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.std::__1::vector.139"* %3 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = sub i64 %310, %312
  %314 = icmp ult i64 %313, %307
  %315 = inttoptr i64 %312 to i8*
  br i1 %314, label %316, label %320

316:                                              ; preds = %296
  %317 = sub i64 %307, %313
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.139"* %3, i64 %317) #13
  %318 = getelementptr inbounds %"class.std::__1::vector.139", %"class.std::__1::vector.139"* %3, i64 0, i32 0, i32 0
  %319 = load i8*, i8** %318, align 8
  br label %320

320:                                              ; preds = %316, %296
  %321 = phi i8* [ %319, %316 ], [ %315, %296 ]
  %322 = sext i32 %305 to i64
  %323 = getelementptr inbounds i8, i8* %321, i64 %322
  %324 = call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 1) #13
  %325 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 2, i32 2, i32 0, i32 0
  %326 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %325, align 8
  %327 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %326, i64 1, i32 0
  %328 = load i32, i32* %327, align 8
  call void @SplitUVPlane(i8* %324, i32 %328, i8* %321, i32 %300, i8* %323, i32 %300, i32 %300, i32 %304) #13
  %329 = call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 0) #13
  %330 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %325, align 8
  %331 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %330, i64 0, i32 0
  %332 = load i32, i32* %331, align 8
  %333 = load i32, i32* %297, align 4
  %334 = load i32, i32* %301, align 4
  %335 = call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 0) #13
  %336 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 2, i32 2, i32 0, i32 0
  %337 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %336, align 8
  %338 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %337, i64 0, i32 0
  %339 = load i32, i32* %338, align 8
  %340 = call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 1) #13
  %341 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %336, align 8
  %342 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %341, i64 1, i32 0
  %343 = load i32, i32* %342, align 8
  %344 = call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 2) #13
  %345 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %336, align 8
  %346 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %345, i64 2, i32 0
  %347 = load i32, i32* %346, align 8
  %348 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 0
  %349 = load i32, i32* %348, align 4
  %350 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 1
  %351 = load i32, i32* %350, align 4
  %352 = call i32 @I420Scale(i8* %329, i32 %332, i8* %321, i32 %300, i8* %323, i32 %300, i32 %333, i32 %334, i8* %335, i32 %339, i8* %340, i32 %343, i8* %344, i32 %347, i32 %349, i32 %351, i32 3) #13
  %353 = icmp eq i32 %352, 0
  %354 = bitcast %"class.base::Location"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %354) #13
  br i1 %353, label %356, label %355

355:                                              ; preds = %320
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 884) #13
  call void @_ZN5media6StatusC1ENS_10StatusCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_8LocationE(%"class.media::Status"* %0, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0, %"class.base::Location"* nonnull dereferenceable(32) %13) #13
  br label %357

356:                                              ; preds = %320
  call void @_ZN5media6StatusC1Ev(%"class.media::Status"* %0) #13
  br label %357

357:                                              ; preds = %356, %355
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %354) #13
  br label %496

358:                                              ; preds = %205
  %359 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 0, i32 0
  %360 = load i32, i32* %359, align 4
  %361 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 0, i32 0
  %362 = load i32, i32* %361, align 4
  %363 = icmp eq i32 %360, %362
  br i1 %363, label %364, label %413

364:                                              ; preds = %358
  %365 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 0, i32 1
  %366 = load i32, i32* %365, align 4
  %367 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 0, i32 1
  %368 = load i32, i32* %367, align 4
  %369 = icmp eq i32 %366, %368
  br i1 %369, label %370, label %413

370:                                              ; preds = %364
  %371 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 0
  %372 = load i32, i32* %371, align 4
  %373 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 0
  %374 = load i32, i32* %373, align 4
  %375 = icmp eq i32 %372, %374
  br i1 %375, label %376, label %413

376:                                              ; preds = %370
  %377 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 1
  %378 = load i32, i32* %377, align 4
  %379 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 1
  %380 = load i32, i32* %379, align 4
  %381 = icmp eq i32 %378, %380
  br i1 %381, label %382, label %413

382:                                              ; preds = %376
  %383 = call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 0) #13
  %384 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 2, i32 2, i32 0, i32 0
  %385 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %384, align 8
  %386 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %385, i64 0, i32 0
  %387 = load i32, i32* %386, align 8
  %388 = call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 1) #13
  %389 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %384, align 8
  %390 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %389, i64 1, i32 0
  %391 = load i32, i32* %390, align 8
  %392 = call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 2) #13
  %393 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %384, align 8
  %394 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %393, i64 2, i32 0
  %395 = load i32, i32* %394, align 8
  %396 = call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 0) #13
  %397 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 2, i32 2, i32 0, i32 0
  %398 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %397, align 8
  %399 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %398, i64 0, i32 0
  %400 = load i32, i32* %399, align 8
  %401 = call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 1) #13
  %402 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %397, align 8
  %403 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %402, i64 1, i32 0
  %404 = load i32, i32* %403, align 8
  %405 = load i32, i32* %373, align 4
  %406 = load i32, i32* %379, align 4
  %407 = call i32 @I420ToNV12(i8* %383, i32 %387, i8* %388, i32 %391, i8* %392, i32 %395, i8* %396, i32 %400, i8* %401, i32 %404, i32 %405, i32 %406) #13
  %408 = icmp eq i32 %407, 0
  %409 = bitcast %"class.base::Location"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %409) #13
  br i1 %408, label %411, label %410

410:                                              ; preds = %382
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %14, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 905) #13
  call void @_ZN5media6StatusC1ENS_10StatusCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_8LocationE(%"class.media::Status"* %0, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0, %"class.base::Location"* nonnull dereferenceable(32) %14) #13
  br label %412

411:                                              ; preds = %382
  call void @_ZN5media6StatusC1Ev(%"class.media::Status"* %0) #13
  br label %412

412:                                              ; preds = %411, %410
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %409) #13
  br label %496

413:                                              ; preds = %358, %370, %364, %376
  %414 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 0
  %415 = load i32, i32* %414, align 4
  %416 = add nsw i32 %415, 1
  %417 = sdiv i32 %416, 2
  %418 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 5, i32 1, i32 1
  %419 = load i32, i32* %418, align 4
  %420 = add nsw i32 %419, 1
  %421 = sdiv i32 %420, 2
  %422 = shl nsw i32 %417, 1
  %423 = mul i32 %422, %421
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds %"class.std::__1::vector.139", %"class.std::__1::vector.139"* %3, i64 0, i32 0, i32 1
  %426 = bitcast i8** %425 to i64*
  %427 = load i64, i64* %426, align 8
  %428 = bitcast %"class.std::__1::vector.139"* %3 to i64*
  %429 = load i64, i64* %428, align 8
  %430 = sub i64 %427, %429
  %431 = icmp ult i64 %430, %424
  %432 = inttoptr i64 %429 to i8*
  br i1 %431, label %433, label %437

433:                                              ; preds = %413
  %434 = sub i64 %424, %430
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.139"* %3, i64 %434) #13
  %435 = getelementptr inbounds %"class.std::__1::vector.139", %"class.std::__1::vector.139"* %3, i64 0, i32 0, i32 0
  %436 = load i8*, i8** %435, align 8
  br label %437

437:                                              ; preds = %433, %413
  %438 = phi i8* [ %436, %433 ], [ %432, %413 ]
  %439 = call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 1) #13
  %440 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 2, i32 2, i32 0, i32 0
  %441 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %440, align 8
  %442 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %441, i64 1, i32 0
  %443 = load i32, i32* %442, align 8
  %444 = call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 2) #13
  %445 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %440, align 8
  %446 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %445, i64 2, i32 0
  %447 = load i32, i32* %446, align 8
  call void @MergeUVPlane(i8* %439, i32 %443, i8* %444, i32 %447, i8* %438, i32 %422, i32 %417, i32 %421) #13
  %448 = call i8* @_ZNK5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %1, i64 0) #13
  %449 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %440, align 8
  %450 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %449, i64 0, i32 0
  %451 = load i32, i32* %450, align 8
  %452 = load i32, i32* %414, align 4
  %453 = load i32, i32* %418, align 4
  %454 = call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 0) #13
  %455 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 2, i32 2, i32 0, i32 0
  %456 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %455, align 8
  %457 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %456, i64 0, i32 0
  %458 = load i32, i32* %457, align 8
  %459 = call i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"* %2, i64 1) #13
  %460 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %455, align 8
  %461 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %460, i64 1, i32 0
  %462 = load i32, i32* %461, align 8
  %463 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 0
  %464 = load i32, i32* %463, align 4
  %465 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %2, i64 0, i32 5, i32 1, i32 1
  %466 = load i32, i32* %465, align 4
  %467 = call i32 @NV12Scale(i8* %448, i32 %451, i8* %438, i32 %422, i32 %452, i32 %453, i8* %454, i32 %458, i8* %459, i32 %462, i32 %464, i32 %466, i32 3) #13
  %468 = icmp eq i32 %467, 0
  %469 = bitcast %"class.base::Location"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %469) #13
  br i1 %468, label %471, label %470

470:                                              ; preds = %437
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 938) #13
  call void @_ZN5media6StatusC1ENS_10StatusCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_8LocationE(%"class.media::Status"* %0, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0, %"class.base::Location"* nonnull dereferenceable(32) %15) #13
  br label %472

471:                                              ; preds = %437
  call void @_ZN5media6StatusC1Ev(%"class.media::Status"* %0) #13
  br label %472

472:                                              ; preds = %471, %470
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %469) #13
  br label %496

473:                                              ; preds = %205, %161, %157
  %474 = bitcast %"class.media::Status"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %474) #13
  %475 = bitcast %"class.base::Location"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %475) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %17, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i32 942) #13
  call void @_ZN5media6StatusC1ENS_10StatusCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_8LocationE(%"class.media::Status"* nonnull %16, i32 2561, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0, %"class.base::Location"* nonnull dereferenceable(32) %17) #13
  %476 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %476) #13
  call void @_ZNK5media10VideoFrame21AsHumanReadableStringEv(%"class.std::__1::basic_string"* nonnull sret %18, %"class.media::VideoFrame"* %1) #13
  %477 = call dereferenceable(8) %"class.media::Status"* @_ZNO5media6Status8WithDataINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEOS0_PKcRKT_(%"class.media::Status"* nonnull %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18)
  %478 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %478) #13
  call void @_ZNK5media10VideoFrame21AsHumanReadableStringEv(%"class.std::__1::basic_string"* nonnull sret %19, %"class.media::VideoFrame"* %2) #13
  %479 = call dereferenceable(8) %"class.media::Status"* @_ZNO5media6Status8WithDataINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEOS0_PKcRKT_(%"class.media::Status"* %477, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %19)
  call void @_ZN5media6StatusC1EOS0_(%"class.media::Status"* %0, %"class.media::Status"* dereferenceable(8) %479) #13
  %480 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %481 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %480, i64 0, i32 1, i32 0
  %482 = load i8, i8* %481, align 1
  %483 = icmp slt i8 %482, 0
  br i1 %483, label %484, label %487

484:                                              ; preds = %473
  %485 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %486 = load i8*, i8** %485, align 8
  call void @_ZdlPv(i8* %486) #14
  br label %487

487:                                              ; preds = %473, %484
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %478) #13
  %488 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %489 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %488, i64 0, i32 1, i32 0
  %490 = load i8, i8* %489, align 1
  %491 = icmp slt i8 %490, 0
  br i1 %491, label %492, label %495

492:                                              ; preds = %487
  %493 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %494 = load i8*, i8** %493, align 8
  call void @_ZdlPv(i8* %494) #14
  br label %495

495:                                              ; preds = %487, %492
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %476) #13
  call void @_ZN5media6StatusD1Ev(%"class.media::Status"* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %475) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %474) #13
  br label %496

496:                                              ; preds = %99, %134, %156, %495, %472, %412, %357, %295, %240, %204, %23
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

declare void @_ZN5media6StatusC1ENS_10StatusCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_8LocationE(%"class.media::Status"*, i32, i8*, i64, %"class.base::Location"* dereferenceable(32)) unnamed_addr #5

declare i64 @_ZN5media10VideoFrame14AllocationSizeENS_16VideoPixelFormatERKN3gfx4SizeE(i32, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #5

declare i64 @_ZN5media10VideoFrame8RowBytesEmNS_16VideoPixelFormatEi(i64, i32, i32) local_unnamed_addr #5

declare i32 @ARGBScale(i8*, i32, i32, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #5

declare i32 @ABGRToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #5

declare i32 @ARGBToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #5

declare i8* @_ZN5media10VideoFrame12visible_dataEm(%"class.media::VideoFrame"*, i64) local_unnamed_addr #5

declare void @_ZN5media6StatusC1Ev(%"class.media::Status"*) unnamed_addr #5

declare i32 @ABGRToNV12(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #5

declare i32 @ARGBToNV12(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #5

declare i32 @I420Scale(i8*, i32, i8*, i32, i8*, i32, i32, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #5

declare i32 @NV12Scale(i8*, i32, i8*, i32, i32, i32, i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #5

declare i32 @NV12ToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #5

declare void @SplitUVPlane(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #5

declare i32 @I420ToNV12(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #5

declare void @MergeUVPlane(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.media::Status"* @_ZNO5media6Status8WithDataINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEOS0_PKcRKT_(%"class.media::Status"*, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::Value", align 8
  %6 = getelementptr inbounds %"class.media::Status", %"class.media::Status"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.media::Status::StatusInternal"*, %"struct.media::Status::StatusInternal"** %6, align 8
  %8 = getelementptr inbounds %"struct.media::Status::StatusInternal", %"struct.media::Status::StatusInternal"* %7, i64 0, i32 4
  %9 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #13
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10)
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1, !noalias !32
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %16, i64 24, i1 false) #13, !noalias !32
  br label %22

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8, !noalias !32
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8, !noalias !32
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %19, i64 %21) #13
  br label %22

22:                                               ; preds = %17, %15
  %23 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1, !noalias !35
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !noalias !35
  %29 = select i1 %26, i8* %28, i8* %10
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !35
  %32 = zext i8 %25 to i64
  %33 = select i1 %26, i64 %31, i64 %32
  call void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %5, i8* %29, i64 %33) #13
  %34 = load i8, i8* %24, align 1, !noalias !32
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %22
  %37 = load i8*, i8** %27, align 8, !noalias !32
  call void @_ZdlPv(i8* %37) #14
  br label %38

38:                                               ; preds = %22, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10)
  %39 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %8, i8* %1, %"class.base::Value"* nonnull dereferenceable(32) %5) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #13
  ret %"class.media::Status"* %0
}

declare void @_ZNK5media10VideoFrame21AsHumanReadableStringEv(%"class.std::__1::basic_string"* sret, %"class.media::VideoFrame"*) local_unnamed_addr #5

declare void @_ZN5media6StatusC1EOS0_(%"class.media::Status"*, %"class.media::Status"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5media6StatusD1Ev(%"class.media::Status"*) unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media31VideoPixelFormatFromSkColorTypeE11SkColorTypeb(i32, i1 zeroext) local_unnamed_addr #7 {
  switch i32 %0, label %7 [
    i32 4, label %3
    i32 6, label %5
  ]

3:                                                ; preds = %2
  %4 = select i1 %1, i32 28, i32 27
  br label %7

5:                                                ; preds = %2
  %6 = select i1 %1, i32 11, i32 10
  br label %7

7:                                                ; preds = %2, %5, %3
  %8 = phi i32 [ %6, %5 ], [ %4, %3 ], [ 0, %2 ]
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::VideoFrame"* @_ZN5media17CreateFromSkImageE5sk_spI7SkImageERKN3gfx4RectERKNS3_4SizeEN4base9TimeDeltaEb(%class.sk_sp.186* nocapture, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), i64, i1 zeroext) local_unnamed_addr #4 {
  %6 = alloca %class.sk_sp.186, align 8
  %7 = alloca %class.SkPixmap, align 8
  %8 = alloca %"class.gfx::Size", align 4
  %9 = alloca %"class.absl::optional.193", align 8
  %10 = alloca %"class.std::__1::vector.198", align 8
  %11 = alloca %"class.base::OnceCallback.10", align 8
  %12 = alloca %"class.base::OnceCallback.205", align 8
  %13 = getelementptr inbounds %class.sk_sp.186, %class.sk_sp.186* %0, i64 0, i32 0
  %14 = load %class.SkImage*, %class.SkImage** %13, align 8
  %15 = tail call zeroext i1 @_ZNK7SkImage15isLazyGeneratedEv(%class.SkImage* %14) #13
  br i1 %15, label %16, label %49

16:                                               ; preds = %5
  %17 = bitcast %class.sk_sp.186* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = load %class.SkImage*, %class.SkImage** %13, align 8
  call void @_ZNK7SkImage15makeRasterImageENS_11CachingHintE(%class.sk_sp.186* nonnull sret %6, %class.SkImage* %18, i32 1) #13
  %19 = getelementptr inbounds %class.sk_sp.186, %class.sk_sp.186* %6, i64 0, i32 0
  %20 = bitcast %class.sk_sp.186* %6 to i64*
  %21 = load i64, i64* %20, align 8
  store %class.SkImage* null, %class.SkImage** %19, align 8
  %22 = load %class.SkImage*, %class.SkImage** %13, align 8
  %23 = bitcast %class.sk_sp.186* %0 to i64*
  store i64 %21, i64* %23, align 8
  %24 = icmp eq %class.SkImage* %22, null
  br i1 %24, label %48, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %class.SkImage, %class.SkImage* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = bitcast %class.SkImage* %22 to %class.SkRefCntBase*
  %31 = bitcast %class.SkImage* %22 to void (%class.SkRefCntBase*)***
  %32 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, i64 2
  %34 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, align 8
  call void %34(%class.SkRefCntBase* nonnull %30) #13
  br label %35

35:                                               ; preds = %25, %29
  %36 = load %class.SkImage*, %class.SkImage** %19, align 8
  %37 = icmp eq %class.SkImage* %36, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %class.SkImage, %class.SkImage* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = bitcast %class.SkImage* %36 to %class.SkRefCntBase*
  %44 = bitcast %class.SkImage* %36 to void (%class.SkRefCntBase*)***
  %45 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, i64 2
  %47 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, align 8
  call void %47(%class.SkRefCntBase* nonnull %43) #13
  br label %48

48:                                               ; preds = %16, %35, %38, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %49

49:                                               ; preds = %48, %5
  %50 = load %class.SkImage*, %class.SkImage** %13, align 8
  %51 = call i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage* %50) #13
  %52 = load %class.SkImage*, %class.SkImage** %13, align 8
  %53 = call i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage* %52) #13
  %54 = icmp eq i32 %53, 1
  %55 = or i1 %54, %4
  switch i32 %51, label %60 [
    i32 4, label %56
    i32 6, label %58
  ]

56:                                               ; preds = %49
  %57 = select i1 %55, i32 28, i32 27
  br label %60

58:                                               ; preds = %49
  %59 = select i1 %55, i32 11, i32 10
  br label %60

60:                                               ; preds = %49, %56, %58
  %61 = phi i32 [ %59, %58 ], [ %57, %56 ], [ 0, %49 ]
  %62 = call i64 @_ZN5media16VideoFrameLayout9NumPlanesENS_16VideoPixelFormatE(i32 %61) #13
  %63 = icmp eq i64 %62, 1
  br i1 %63, label %64, label %147

64:                                               ; preds = %60
  %65 = bitcast %class.SkPixmap* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %65) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 40, i1 false) #13
  %66 = load %class.SkImage*, %class.SkImage** %13, align 8
  %67 = call zeroext i1 @_ZNK7SkImage10peekPixelsEP8SkPixmap(%class.SkImage* %66, %class.SkPixmap* nonnull %7) #13
  %68 = bitcast %"class.gfx::Size"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #13
  %69 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %8, i64 0, i32 0
  %70 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %8, i64 0, i32 1
  %71 = load %class.SkImage*, %class.SkImage** %13, align 8
  %72 = getelementptr inbounds %class.SkImage, %class.SkImage* %71, i64 0, i32 2, i32 1, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %class.SkImage, %class.SkImage* %71, i64 0, i32 2, i32 1, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = icmp sgt i32 %73, 0
  %77 = select i1 %76, i32 %73, i32 0
  store i32 %77, i32* %69, align 4
  %78 = icmp sgt i32 %75, 0
  %79 = select i1 %78, i32 %75, i32 0
  store i32 %79, i32* %70, align 4
  %80 = getelementptr inbounds %"class.absl::optional.193", %"class.absl::optional.193"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %80) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 72, i1 false)
  %81 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = trunc i64 %82 to i32
  %84 = call i8* @_Znwm(i64 4) #14
  %85 = bitcast i8* %84 to i32*
  %86 = getelementptr inbounds %"class.std::__1::vector.198", %"class.std::__1::vector.198"* %10, i64 0, i32 0, i32 1
  %87 = bitcast %"class.std::__1::vector.198"* %10 to i8**
  store i8* %84, i8** %87, align 8
  %88 = getelementptr inbounds i8, i8* %84, i64 4
  %89 = getelementptr inbounds %"class.std::__1::vector.198", %"class.std::__1::vector.198"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %90 = bitcast i32** %89 to i8**
  store i8* %88, i8** %90, align 8
  store i32 %83, i32* %85, align 4
  %91 = bitcast i32** %86 to i64*
  %92 = ptrtoint i8* %88 to i64
  store i64 %92, i64* %91, align 8
  call void @_ZN5media16VideoFrameLayout17CreateWithStridesENS_16VideoPixelFormatERKN3gfx4SizeENSt3__16vectorIiNS6_9allocatorIiEEEEmm(%"class.absl::optional.193"* nonnull sret %9, i32 %61, %"class.gfx::Size"* nonnull dereferenceable(8) %8, %"class.std::__1::vector.198"* nonnull %10, i64 32, i64 72057594037927935) #13
  %93 = getelementptr inbounds %"class.std::__1::vector.198", %"class.std::__1::vector.198"* %10, i64 0, i32 0, i32 0
  %94 = load i32*, i32** %93, align 8
  %95 = icmp eq i32* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %64
  %97 = ptrtoint i32* %94 to i64
  store i64 %97, i64* %91, align 8
  %98 = bitcast i32* %94 to i8*
  call void @_ZdlPv(i8* %98) #14
  br label %99

99:                                               ; preds = %64, %96
  %100 = load i8, i8* %80, align 8, !range !38
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %135, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.absl::optional.193", %"class.absl::optional.193"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %104 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 2
  %107 = load i64, i64* %81, align 8
  %108 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %106, i64 %107) #13
  %109 = call %"class.media::VideoFrame"* @_ZN5media10VideoFrame26WrapExternalDataWithLayoutERKNS_16VideoFrameLayoutERKN3gfx4RectERKNS4_4SizeEPhmN4base9TimeDeltaE(%"class.media::VideoFrameLayout"* dereferenceable(64) %103, %"class.gfx::Rect"* dereferenceable(16) %1, %"class.gfx::Size"* dereferenceable(8) %2, i8* %105, i64 %108, i64 %3) #13
  %110 = icmp eq %"class.media::VideoFrame"* %109, null
  br i1 %110, label %129, label %111

111:                                              ; preds = %102
  %112 = ptrtoint %"class.media::VideoFrame"* %109 to i64
  %113 = bitcast %"class.base::OnceCallback.205"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #13
  %114 = call i8* @_Znwm(i64 40) #14, !noalias !39
  %115 = bitcast i8* %114 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %115, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.sk_sp.186*)* @_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJ5sk_spI7SkImageEEEENS_12OnceCallbackIFvDpT_EEEvEUlS7_E_JEEEFvS7_EE7RunOnceEPNS0_13BindStateBaseEOS7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJ5sk_spI7SkImageEEEENS_12OnceCallbackIFvDpT_EEEvEUlS6_E_JEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !39
  %116 = call i8* @_Znwm(i64 48) #14, !noalias !46
  %117 = bitcast i8* %116 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %117, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFv5sk_spI7SkImageEEEEJS6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_12OnceCallbackIFv5sk_spI7SkImageEEEEJS5_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFv5sk_spI7SkImageEEEEJS6_EEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #13, !noalias !46
  %118 = getelementptr inbounds i8, i8* %116, i64 32
  %119 = getelementptr inbounds %"class.base::OnceCallback.205", %"class.base::OnceCallback.205"* %12, i64 0, i32 0, i32 0, i32 0
  %120 = ptrtoint i8* %114 to i64
  %121 = bitcast i8* %118 to i64*
  store i64 %120, i64* %121, align 8, !noalias !46
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %119, align 8, !noalias !46
  %122 = getelementptr inbounds i8, i8* %116, i64 40
  %123 = bitcast %class.sk_sp.186* %0 to i64*
  %124 = load i64, i64* %123, align 8, !noalias !46
  store %class.SkImage* null, %class.SkImage** %13, align 8, !noalias !46
  %125 = bitcast i8* %122 to i64*
  store i64 %124, i64* %125, align 8, !noalias !46
  %126 = bitcast %"class.base::OnceCallback.10"* %11 to i8**
  store i8* %116, i8** %126, align 8, !alias.scope !46
  call void @_ZN5media10VideoFrame22AddDestructionObserverEN4base12OnceCallbackIFvvEEE(%"class.media::VideoFrame"* nonnull %109, %"class.base::OnceCallback.10"* nonnull %11) #13
  %127 = getelementptr inbounds %"class.base::OnceCallback.10", %"class.base::OnceCallback.10"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %127) #13
  %128 = getelementptr inbounds %"class.base::OnceCallback.205", %"class.base::OnceCallback.205"* %12, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %128) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #13
  br label %129

129:                                              ; preds = %102, %111
  %130 = phi i64 [ 0, %102 ], [ %112, %111 ]
  %131 = load i8, i8* %80, align 8
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.absl::optional.193", %"class.absl::optional.193"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5media16VideoFrameLayoutD1Ev(%"class.media::VideoFrameLayout"* %134) #13
  store i8 0, i8* %80, align 8
  br label %135

135:                                              ; preds = %99, %129, %133
  %136 = phi i64 [ %130, %129 ], [ %130, %133 ], [ 0, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %80) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #13
  %137 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %138 = load %class.SkColorSpace*, %class.SkColorSpace** %137, align 8
  %139 = icmp eq %class.SkColorSpace* %138, null
  br i1 %139, label %146, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = atomicrmw add i32* %141, i32 -1 acq_rel
  %143 = icmp eq i32 %142, 1
  br i1 %143, label %144, label %146

144:                                              ; preds = %140
  %145 = bitcast %class.SkColorSpace* %138 to i8*
  call void @_ZdlPv(i8* %145) #14
  br label %146

146:                                              ; preds = %135, %140, %144
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %65) #13
  br label %147

147:                                              ; preds = %60, %146
  %148 = phi i64 [ %136, %146 ], [ 0, %60 ]
  %149 = inttoptr i64 %148 to %"class.media::VideoFrame"*
  ret %"class.media::VideoFrame"* %149
}

declare zeroext i1 @_ZNK7SkImage15isLazyGeneratedEv(%class.SkImage*) local_unnamed_addr #5

declare void @_ZNK7SkImage15makeRasterImageENS_11CachingHintE(%class.sk_sp.186* sret, %class.SkImage*, i32) local_unnamed_addr #5

declare i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage*) local_unnamed_addr #5

declare i64 @_ZN5media16VideoFrameLayout9NumPlanesENS_16VideoPixelFormatE(i32) local_unnamed_addr #5

declare zeroext i1 @_ZNK7SkImage10peekPixelsEP8SkPixmap(%class.SkImage*, %class.SkPixmap*) local_unnamed_addr #5

declare void @_ZN5media16VideoFrameLayout17CreateWithStridesENS_16VideoPixelFormatERKN3gfx4SizeENSt3__16vectorIiNS6_9allocatorIiEEEEmm(%"class.absl::optional.193"* sret, i32, %"class.gfx::Size"* dereferenceable(8), %"class.std::__1::vector.198"*, i64, i64) local_unnamed_addr #5

declare %"class.media::VideoFrame"* @_ZN5media10VideoFrame26WrapExternalDataWithLayoutERKNS_16VideoFrameLayoutERKN3gfx4RectERKNS4_4SizeEPhmN4base9TimeDeltaE(%"class.media::VideoFrameLayout"* dereferenceable(64), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), i8*, i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

declare i32 @_ZN5media10VideoFrame15BytesPerElementENS_16VideoPixelFormatEm(i32, i64) local_unnamed_addr #5

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare i64 @_ZNK5media10VideoFrame11NumTexturesEv(%"class.media::VideoFrame"*) local_unnamed_addr #5

declare %"class.media::VideoFrame"* @_ZN5media14VideoFramePool11CreateFrameENS_16VideoPixelFormatERKN3gfx4SizeERKNS2_4RectES5_N4base9TimeDeltaE(%"class.media::VideoFramePool"*, i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), i64) local_unnamed_addr #5

declare %"class.media::VideoFrame"* @_ZN5media10VideoFrame11CreateFrameENS_16VideoPixelFormatERKN3gfx4SizeERKNS2_4RectES5_N4base9TimeDeltaE(i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), i64) local_unnamed_addr #5

declare dereferenceable(48) %"struct.gpu::MailboxHolder"* @_ZNK5media10VideoFrame14mailbox_holderEm(%"class.media::VideoFrame"*, i64) local_unnamed_addr #5

declare zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"*) local_unnamed_addr #5

declare i64 @_ZN5media10VideoFrame7ColumnsEmNS_16VideoPixelFormatEi(i64, i32, i32) local_unnamed_addr #5

declare zeroext i1 @_ZNK3gpu7Mailbox13IsSharedImageEv(%"struct.gpu::Mailbox"*) local_unnamed_addr #5

declare void @_ZN4base19ScopedClosureRunnerC1ENS_12OnceCallbackIFvvEEE(%"class.base::ScopedClosureRunner"*, %"class.base::OnceCallback.10"*) unnamed_addr #5

declare void @_ZN16GrBackendTextureC1Eii11GrMipmappedRK15GrGLTextureInfo(%class.GrBackendTexture*, i32, i32, i1 zeroext, %struct.GrGLTextureInfo* dereferenceable(12)) unnamed_addr #5

declare void @_ZN7SkImage15MakeFromTextureEP18GrRecordingContextRK16GrBackendTexture15GrSurfaceOrigin11SkColorType11SkAlphaType5sk_spI12SkColorSpaceEPFvPvESB_(%class.sk_sp.186* sret, %class.GrRecordingContext*, %class.GrBackendTexture* dereferenceable(176), i32, i32, i32, %class.sk_sp.187*, void (i8*)*, i8*) local_unnamed_addr #5

declare zeroext i1 @_ZNK7SkImage10readPixelsEP15GrDirectContextRK8SkPixmapiiNS_11CachingHintE(%class.SkImage*, %class.GrDirectContext*, %class.SkPixmap* dereferenceable(40), i32, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media12_GLOBAL__N_142ReadbackTextureBackedFrameToMemorySyncGLESERKNS3_10VideoFrameEPN3gpu6raster15RasterInterfaceEP15GrDirectContextPNS3_14VideoFramePoolEE3$_1JjbSB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readonly) #4 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %"class.std::__1::tuple.213"*
  %4 = bitcast void ()** %2 to i32*
  %5 = getelementptr inbounds %"class.std::__1::tuple.213", %"class.std::__1::tuple.213"* %3, i64 0, i32 0, i32 1, i32 0
  %6 = getelementptr inbounds void ()*, void ()** %2, i64 1
  %7 = bitcast void ()** %6 to %"class.gpu::raster::RasterInterface"**
  %8 = load i32, i32* %4, align 4
  %9 = load i8, i8* %5, align 1, !range !38
  %10 = icmp eq i8 %9, 0
  %11 = load %"class.gpu::raster::RasterInterface"*, %"class.gpu::raster::RasterInterface"** %7, align 8
  %12 = bitcast %"class.gpu::raster::RasterInterface"* %11 to void (%"class.gpu::raster::RasterInterface"*, i32)***
  br i1 %10, label %17, label %13

13:                                               ; preds = %1
  %14 = load void (%"class.gpu::raster::RasterInterface"*, i32)**, void (%"class.gpu::raster::RasterInterface"*, i32)*** %12, align 8
  %15 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i32)*, void (%"class.gpu::raster::RasterInterface"*, i32)** %14, i64 21
  %16 = load void (%"class.gpu::raster::RasterInterface"*, i32)*, void (%"class.gpu::raster::RasterInterface"*, i32)** %15, align 8
  tail call void %16(%"class.gpu::raster::RasterInterface"* %11, i32 %8) #13
  br label %17

17:                                               ; preds = %1, %13
  %18 = load void (%"class.gpu::raster::RasterInterface"*, i32)**, void (%"class.gpu::raster::RasterInterface"*, i32)*** %12, align 8
  %19 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i32)*, void (%"class.gpu::raster::RasterInterface"*, i32)** %18, i64 17
  %20 = load void (%"class.gpu::raster::RasterInterface"*, i32)*, void (%"class.gpu::raster::RasterInterface"*, i32)** %19, align 8
  tail call void %20(%"class.gpu::raster::RasterInterface"* %11, i32 %8) #13
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5media12_GLOBAL__N_142ReadbackTextureBackedFrameToMemorySyncGLESERKNS2_10VideoFrameEPN3gpu6raster15RasterInterfaceEP15GrDirectContextPNS2_14VideoFramePoolEE3$_1JjbSA_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #4 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #5

declare i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage*) local_unnamed_addr #5

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5media16VideoFrameLayoutD1Ev(%"class.media::VideoFrameLayout"*) unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media26ConvertToMemoryMappedFrameE13scoped_refptrINS3_10VideoFrameEEE3$_0JS6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture) #4 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %"class.media::VideoFrame"**
  %4 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %3, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %3, align 8
  %5 = tail call %"class.gfx::GpuMemoryBuffer"* @_ZNK5media10VideoFrame18GetGpuMemoryBufferEv(%"class.media::VideoFrame"* %4) #13
  %6 = bitcast %"class.gfx::GpuMemoryBuffer"* %5 to void (%"class.gfx::GpuMemoryBuffer"*)***
  %7 = load void (%"class.gfx::GpuMemoryBuffer"*)**, void (%"class.gfx::GpuMemoryBuffer"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.gfx::GpuMemoryBuffer"*)*, void (%"class.gfx::GpuMemoryBuffer"*)** %7, i64 4
  %9 = load void (%"class.gfx::GpuMemoryBuffer"*)*, void (%"class.gfx::GpuMemoryBuffer"*)** %8, align 8
  tail call void %9(%"class.gfx::GpuMemoryBuffer"* %5) #13
  %10 = icmp eq %"class.media::VideoFrame"* %4, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %23

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 -2
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %17 to %"class.media::VideoFrame"*
  %19 = bitcast %"class.base::RefCountedThreadSafe"* %17 to void (%"class.media::VideoFrame"*)***
  %20 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %20, i64 1
  %22 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %21, align 8
  tail call void %22(%"class.media::VideoFrame"* nonnull %18) #13
  br label %23

23:                                               ; preds = %1, %11, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5media26ConvertToMemoryMappedFrameE13scoped_refptrINS2_10VideoFrameEEE3$_0JS5_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #4 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.media::VideoFrame"**
  %6 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %5, align 8
  %7 = icmp eq %"class.media::VideoFrame"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.media::VideoFrame"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.media::VideoFrame"*)***
  %17 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %17, i64 1
  %19 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %18, align 8
  tail call void %19(%"class.media::VideoFrame"* nonnull %15) #13
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.139"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.139", %"class.std::__1::vector.139"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.139", %"class.std::__1::vector.139"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #13
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector.139"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.139"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #15
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #14
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #13
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.139", %"class.std::__1::vector.139"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #13
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #14
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #6

declare void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJ5sk_spI7SkImageEEEENS_12OnceCallbackIFvDpT_EEEvEUlS7_E_JEEEFvS7_EE7RunOnceEPNS0_13BindStateBaseEOS7_(%"class.base::internal::BindStateBase"*, %class.sk_sp.186* dereferenceable(8)) #4 comdat align 2 {
  %3 = getelementptr inbounds %class.sk_sp.186, %class.sk_sp.186* %1, i64 0, i32 0
  %4 = load %class.SkImage*, %class.SkImage** %3, align 8
  store %class.SkImage* null, %class.SkImage** %3, align 8
  %5 = icmp eq %class.SkImage* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkImage, %class.SkImage* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImage* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImage* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %2, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJ5sk_spI7SkImageEEEENS_12OnceCallbackIFvDpT_EEEvEUlS6_E_JEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #4 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFv5sk_spI7SkImageEEEEJS6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #4 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.205", align 8
  %3 = alloca %class.sk_sp.186, align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast %class.sk_sp.186* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = bitcast void ()** %5 to %class.SkImage**
  %8 = bitcast void ()** %5 to i64*
  %9 = load i64, i64* %8, align 8
  store %class.SkImage* null, %class.SkImage** %7, align 8
  %10 = bitcast %class.sk_sp.186* %3 to i64*
  store i64 %9, i64* %10, align 8
  %11 = bitcast %"class.base::OnceCallback.205"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::BindStateBase"**
  %13 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::OnceCallback.205"* %2 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %16 = getelementptr inbounds %"class.base::OnceCallback.205", %"class.base::OnceCallback.205"* %2, i64 0, i32 0
  %17 = inttoptr i64 %14 to %"class.base::internal::BindStateBase"*
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %17, i64 0, i32 1
  %19 = bitcast void ()** %18 to void (%"class.base::internal::BindStateBase"*, %class.sk_sp.186*)**
  %20 = load void (%"class.base::internal::BindStateBase"*, %class.sk_sp.186*)*, void (%"class.base::internal::BindStateBase"*, %class.sk_sp.186*)** %19, align 8
  call void %20(%"class.base::internal::BindStateBase"* %17, %class.sk_sp.186* nonnull dereferenceable(8) %3) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  %21 = getelementptr inbounds %class.sk_sp.186, %class.sk_sp.186* %3, i64 0, i32 0
  %22 = load %class.SkImage*, %class.SkImage** %21, align 8
  %23 = icmp eq %class.SkImage* %22, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %class.SkImage, %class.SkImage* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = bitcast %class.SkImage* %22 to %class.SkRefCntBase*
  %30 = bitcast %class.SkImage* %22 to void (%class.SkRefCntBase*)***
  %31 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, i64 2
  %33 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, align 8
  call void %33(%class.SkRefCntBase* nonnull %29) #13
  br label %34

34:                                               ; preds = %1, %24, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_12OnceCallbackIFv5sk_spI7SkImageEEEEJS5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #4 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %class.SkImage**
  %6 = load %class.SkImage*, %class.SkImage** %5, align 8
  %7 = icmp eq %class.SkImage* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkImage, %class.SkImage* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 -1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = bitcast %class.SkImage* %6 to %class.SkRefCntBase*
  %14 = bitcast %class.SkImage* %6 to void (%class.SkRefCntBase*)***
  %15 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %15, i64 2
  %17 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %16, align 8
  tail call void %17(%class.SkRefCntBase* nonnull %13) #13
  br label %18

18:                                               ; preds = %3, %8, %12
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %20 = bitcast %"class.base::internal::BindStateBase"* %19 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %20) #13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFv5sk_spI7SkImageEEEEJS6_EEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #4 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #13
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #13
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #5

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #5

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
!10 = !{!"branch_weights", i32 2002, i32 2000}
!11 = !{!"branch_weights", i32 1, i32 4001}
!12 = !{!"branch_weights", i32 -102759400, i32 4193255}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5media26ConvertToMemoryMappedFrameE13scoped_refptrINS3_10VideoFrameEEE3$_0JS6_EEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5media26ConvertToMemoryMappedFrameE13scoped_refptrINS3_10VideoFrameEEE3$_0JS6_EEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base8BindOnceIZN5media26ConvertToMemoryMappedFrameE13scoped_refptrINS1_10VideoFrameEEE3$_0JS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8BindOnceIZN5media26ConvertToMemoryMappedFrameE13scoped_refptrINS1_10VideoFrameEEE3$_0JS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !3}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !3}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackERZN5media12_GLOBAL__N_142ReadbackTextureBackedFrameToMemorySyncGLESERKNS3_10VideoFrameEPN3gpu6raster15RasterInterfaceEP15GrDirectContextPNS3_14VideoFramePoolEE3$_1JRjbRSB_EEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackERZN5media12_GLOBAL__N_142ReadbackTextureBackedFrameToMemorySyncGLESERKNS3_10VideoFrameEPN3gpu6raster15RasterInterfaceEP15GrDirectContextPNS3_14VideoFramePoolEE3$_1JRjbRSB_EEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIRZN5media12_GLOBAL__N_142ReadbackTextureBackedFrameToMemorySyncGLESERKNS1_10VideoFrameEPN3gpu6raster15RasterInterfaceEP15GrDirectContextPNS1_14VideoFramePoolEE3$_1JRjbRS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIRZN5media12_GLOBAL__N_142ReadbackTextureBackedFrameToMemorySyncGLESERKNS1_10VideoFrameEPN3gpu6raster15RasterInterfaceEP15GrDirectContextPNS1_14VideoFramePoolEE3$_1JRjbRS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!29 = distinct !{!29, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!30 = !{i32 (i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32)* @ABGRToI420, i32 (i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32)* @ARGBToI420}
!31 = !{i32 (i8*, i32, i8*, i32, i8*, i32, i32, i32)* @ABGRToNV12, i32 (i8*, i32, i8*, i32, i8*, i32, i32, i32)* @ARGBToNV12}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN5media14MediaSerializeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base5ValueERKT_: argument 0"}
!34 = distinct !{!34, !"_ZN5media14MediaSerializeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base5ValueERKT_"}
!35 = !{!36, !33}
!36 = distinct !{!36, !37, !"_ZN5media8internal15MediaSerializerINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE9SerializeES8_: argument 0"}
!37 = distinct !{!37, !"_ZN5media8internal15MediaSerializerINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE9SerializeES8_"}
!38 = !{i8 0, i8 2}
!39 = !{!40, !42, !44}
!40 = distinct !{!40, !41, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJ5sk_spI7SkImageEEEENS2_IFvDpT_EEEvEUlS7_E_JEEEDcOT0_DpOT1_: argument 0"}
!41 = distinct !{!41, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJ5sk_spI7SkImageEEEENS2_IFvDpT_EEEvEUlS7_E_JEEEDcOT0_DpOT1_"}
!42 = distinct !{!42, !43, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJ5sk_spI7SkImageEEEENS_12OnceCallbackIFvDpT_EEEvEUlS5_E_JEEENS6_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!43 = distinct !{!43, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJ5sk_spI7SkImageEEEENS_12OnceCallbackIFvDpT_EEEvEUlS5_E_JEEENS6_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!44 = distinct !{!44, !45, !"_ZN4base9DoNothing4OnceIJ5sk_spI7SkImageEEEENS_12OnceCallbackIFvDpT_EEEv: argument 0"}
!45 = distinct !{!45, !"_ZN4base9DoNothing4OnceIJ5sk_spI7SkImageEEEENS_12OnceCallbackIFvDpT_EEEv"}
!46 = !{!47, !49}
!47 = distinct !{!47, !48, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFv5sk_spI7SkImageEEEEJS5_EEEDcOT0_DpOT1_: argument 0"}
!48 = distinct !{!48, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFv5sk_spI7SkImageEEEEJS5_EEEDcOT0_DpOT1_"}
!49 = distinct !{!49, !50, !"_ZN4base8BindOnceINS_12OnceCallbackIFv5sk_spI7SkImageEEEEJS4_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!50 = distinct !{!50, !"_ZN4base8BindOnceINS_12OnceCallbackIFv5sk_spI7SkImageEEEEJS4_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
