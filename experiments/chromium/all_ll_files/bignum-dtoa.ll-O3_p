; ModuleID = '../../v8/src/numbers/bignum-dtoa.cc'
source_filename = "../../v8/src/numbers/bignum-dtoa.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::Bignum" = type { [128 x i32], %"class.v8::internal::Vector.0", i32, i32 }
%"class.v8::internal::Vector.0" = type { i32*, i64 }

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10BignumDtoaEdNS0_14BignumDtoaModeEiNS0_6VectorIcEEPiS4_(double, i32, i32, i8*, i64, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %8 = alloca %"class.v8::internal::Bignum", align 8
  %9 = alloca %"class.v8::internal::Bignum", align 8
  %10 = alloca %"class.v8::internal::Bignum", align 8
  %11 = alloca %"class.v8::internal::Bignum", align 8
  %12 = bitcast double %0 to i64
  %13 = and i64 %12, 4503599627370495
  %14 = and i64 %12, 9218868437227405312
  %15 = icmp eq i64 %14, 0
  %16 = or i64 %13, 4503599627370496
  %17 = select i1 %15, i64 %13, i64 %16
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %15, label %25, label %20

20:                                               ; preds = %7
  %21 = lshr i64 %12, 52
  %22 = trunc i64 %21 to i32
  %23 = and i32 %22, 2047
  %24 = add nsw i32 %23, -1075
  br label %25

25:                                               ; preds = %7, %20
  %26 = phi i32 [ %24, %20 ], [ -1074, %7 ]
  %27 = and i64 %17, 4503599627370496
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %25, %29
  %30 = phi i32 [ %33, %29 ], [ %26, %25 ]
  %31 = phi i64 [ %32, %29 ], [ %17, %25 ]
  %32 = shl i64 %31, 1
  %33 = add nsw i32 %30, -1
  %34 = and i64 %31, 2251799813685248
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %29, label %36

36:                                               ; preds = %29, %25
  %37 = phi i32 [ %26, %25 ], [ %33, %29 ]
  %38 = add nsw i32 %37, 52
  %39 = sitofp i32 %38 to double
  %40 = fmul double %39, 0x3FD34413509F79FE
  %41 = fadd double %40, -1.000000e-10
  %42 = tail call double @llvm.ceil.f64(double %41) #5
  %43 = fptosi double %42 to i32
  %44 = icmp eq i32 %1, 1
  %45 = xor i32 %43, -1
  %46 = icmp sgt i32 %45, %2
  %47 = and i1 %44, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %36
  store i8 0, i8* %3, align 1
  store i32 0, i32* %5, align 4
  %49 = sub nsw i32 0, %2
  store i32 %49, i32* %6, align 4
  br label %220

50:                                               ; preds = %36
  %51 = bitcast %"class.v8::internal::Bignum"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %51) #5
  call void @_ZN2v88internal6BignumC1Ev(%"class.v8::internal::Bignum"* nonnull %8) #5
  %52 = bitcast %"class.v8::internal::Bignum"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %52) #5
  call void @_ZN2v88internal6BignumC1Ev(%"class.v8::internal::Bignum"* nonnull %9) #5
  %53 = bitcast %"class.v8::internal::Bignum"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %53) #5
  call void @_ZN2v88internal6BignumC1Ev(%"class.v8::internal::Bignum"* nonnull %10) #5
  %54 = bitcast %"class.v8::internal::Bignum"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %54) #5
  call void @_ZN2v88internal6BignumC1Ev(%"class.v8::internal::Bignum"* nonnull %11) #5
  %55 = icmp eq i32 %1, 0
  %56 = icmp ugt i64 %14, 4836865999795912704
  br i1 %56, label %57, label %65

57:                                               ; preds = %50
  call void @_ZN2v88internal6Bignum12AssignUInt64Em(%"class.v8::internal::Bignum"* nonnull %8, i64 %16) #5
  %58 = lshr i64 %12, 52
  %59 = trunc i64 %58 to i32
  %60 = and i32 %59, 2047
  %61 = add nsw i32 %60, -1075
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %8, i32 %61) #5
  call void @_ZN2v88internal6Bignum17AssignPowerUInt16Eti(%"class.v8::internal::Bignum"* nonnull %9, i16 zeroext 10, i32 %43) #5
  br i1 %55, label %62, label %93

62:                                               ; preds = %57
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %9, i32 1) #5
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %8, i32 1) #5
  call void @_ZN2v88internal6Bignum12AssignUInt16Et(%"class.v8::internal::Bignum"* nonnull %11, i16 zeroext 1) #5
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %11, i32 %61) #5
  call void @_ZN2v88internal6Bignum12AssignUInt16Et(%"class.v8::internal::Bignum"* nonnull %10, i16 zeroext 1) #5
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %10, i32 %61) #5
  %63 = icmp eq i64 %13, 0
  br i1 %63, label %64, label %93

64:                                               ; preds = %62
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %9, i32 1) #5
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %8, i32 1) #5
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %11, i32 1) #5
  br label %93

65:                                               ; preds = %50
  %66 = icmp sgt i32 %43, -1
  br i1 %66, label %67, label %78

67:                                               ; preds = %65
  br i1 %15, label %73, label %68

68:                                               ; preds = %67
  %69 = lshr i64 %12, 52
  %70 = trunc i64 %69 to i32
  %71 = and i32 %70, 2047
  %72 = sub nsw i32 1075, %71
  br label %73

73:                                               ; preds = %68, %67
  %74 = phi i32 [ %72, %68 ], [ 1074, %67 ]
  call void @_ZN2v88internal6Bignum12AssignUInt64Em(%"class.v8::internal::Bignum"* nonnull %8, i64 %17) #5
  call void @_ZN2v88internal6Bignum17AssignPowerUInt16Eti(%"class.v8::internal::Bignum"* nonnull %9, i16 zeroext 10, i32 %43) #5
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %9, i32 %74) #5
  br i1 %55, label %75, label %93

75:                                               ; preds = %73
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %9, i32 1) #5
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %8, i32 1) #5
  call void @_ZN2v88internal6Bignum12AssignUInt16Et(%"class.v8::internal::Bignum"* nonnull %11, i16 zeroext 1) #5
  call void @_ZN2v88internal6Bignum12AssignUInt16Et(%"class.v8::internal::Bignum"* nonnull %10, i16 zeroext 1) #5
  %76 = icmp eq i64 %13, 0
  br i1 %76, label %77, label %93

77:                                               ; preds = %75
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %9, i32 1) #5
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %8, i32 1) #5
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %11, i32 1) #5
  br label %93

78:                                               ; preds = %65
  br i1 %15, label %84, label %79

79:                                               ; preds = %78
  %80 = lshr i64 %12, 52
  %81 = trunc i64 %80 to i32
  %82 = and i32 %81, 2047
  %83 = sub nsw i32 1075, %82
  br label %84

84:                                               ; preds = %79, %78
  %85 = phi i32 [ %83, %79 ], [ 1074, %78 ]
  %86 = sub nsw i32 0, %43
  call void @_ZN2v88internal6Bignum17AssignPowerUInt16Eti(%"class.v8::internal::Bignum"* nonnull %8, i16 zeroext 10, i32 %86) #5
  br i1 %55, label %87, label %92

87:                                               ; preds = %84
  call void @_ZN2v88internal6Bignum12AssignBignumERKS1_(%"class.v8::internal::Bignum"* nonnull %11, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %8) #5
  call void @_ZN2v88internal6Bignum12AssignBignumERKS1_(%"class.v8::internal::Bignum"* nonnull %10, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %8) #5
  call void @_ZN2v88internal6Bignum16MultiplyByUInt64Em(%"class.v8::internal::Bignum"* nonnull %8, i64 %17) #5
  call void @_ZN2v88internal6Bignum12AssignUInt16Et(%"class.v8::internal::Bignum"* nonnull %9, i16 zeroext 1) #5
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %9, i32 %85) #5
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %8, i32 1) #5
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %9, i32 1) #5
  %88 = icmp ne i64 %13, 0
  %89 = icmp eq i64 %14, 4503599627370496
  %90 = or i1 %88, %89
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %8, i32 1) #5
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %9, i32 1) #5
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %11, i32 1) #5
  br label %93

92:                                               ; preds = %84
  call void @_ZN2v88internal6Bignum16MultiplyByUInt64Em(%"class.v8::internal::Bignum"* nonnull %8, i64 %17) #5
  call void @_ZN2v88internal6Bignum12AssignUInt16Et(%"class.v8::internal::Bignum"* nonnull %9, i16 zeroext 1) #5
  call void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nonnull %9, i32 %85) #5
  br label %93

93:                                               ; preds = %57, %62, %64, %73, %75, %77, %87, %91, %92
  %94 = call i32 @_ZN2v88internal6Bignum11PlusCompareERKS1_S3_S3_(%"class.v8::internal::Bignum"* nonnull dereferenceable(536) %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %11, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %9) #5
  %95 = icmp sgt i32 %94, -1
  %96 = icmp sgt i32 %94, 0
  %97 = select i1 %19, i1 %95, i1 %96
  br i1 %97, label %98, label %100

98:                                               ; preds = %93
  %99 = add nsw i32 %43, 1
  store i32 %99, i32* %6, align 4
  br label %105

100:                                              ; preds = %93
  store i32 %43, i32* %6, align 4
  call void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* nonnull %8, i32 10) #5
  %101 = call i32 @_ZN2v88internal6Bignum7CompareERKS1_S3_(%"class.v8::internal::Bignum"* nonnull dereferenceable(536) %10, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %11) #5
  %102 = icmp eq i32 %101, 0
  call void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* nonnull %10, i32 10) #5
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZN2v88internal6Bignum12AssignBignumERKS1_(%"class.v8::internal::Bignum"* nonnull %11, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %10) #5
  br label %105

104:                                              ; preds = %100
  call void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* nonnull %11, i32 10) #5
  br label %105

105:                                              ; preds = %98, %103, %104
  switch i32 %1, label %215 [
    i32 0, label %106
    i32 1, label %197
    i32 2, label %214
  ]

106:                                              ; preds = %105
  %107 = call i32 @_ZN2v88internal6Bignum7CompareERKS1_S3_(%"class.v8::internal::Bignum"* nonnull dereferenceable(536) %10, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %11) #5
  %108 = icmp eq i32 %107, 0
  %109 = select i1 %108, %"class.v8::internal::Bignum"* %10, %"class.v8::internal::Bignum"* %11
  store i32 0, i32* %5, align 4
  br i1 %19, label %110, label %139

110:                                              ; preds = %106
  br i1 %108, label %111, label %125

111:                                              ; preds = %110, %124
  %112 = call zeroext i16 @_ZN2v88internal6Bignum21DivideModuloIntBignumERKS1_(%"class.v8::internal::Bignum"* nonnull %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %9) #5
  %113 = trunc i16 %112 to i8
  %114 = add i8 %113, 48
  %115 = load i32, i32* %5, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %5, align 4
  %117 = sext i32 %115 to i64
  %118 = getelementptr inbounds i8, i8* %3, i64 %117
  store i8 %114, i8* %118, align 1
  %119 = call i32 @_ZN2v88internal6Bignum7CompareERKS1_S3_(%"class.v8::internal::Bignum"* nonnull dereferenceable(536) %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %10) #5
  %120 = icmp slt i32 %119, 1
  %121 = call i32 @_ZN2v88internal6Bignum11PlusCompareERKS1_S3_S3_(%"class.v8::internal::Bignum"* nonnull dereferenceable(536) %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %109, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %9) #5
  %122 = icmp sgt i32 %121, -1
  %123 = or i1 %120, %122
  br i1 %123, label %168, label %124

124:                                              ; preds = %111
  call void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* nonnull %8, i32 10) #5
  call void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* nonnull %10, i32 10) #5
  br label %111

125:                                              ; preds = %110, %138
  %126 = call zeroext i16 @_ZN2v88internal6Bignum21DivideModuloIntBignumERKS1_(%"class.v8::internal::Bignum"* nonnull %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %9) #5
  %127 = trunc i16 %126 to i8
  %128 = add i8 %127, 48
  %129 = load i32, i32* %5, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %5, align 4
  %131 = sext i32 %129 to i64
  %132 = getelementptr inbounds i8, i8* %3, i64 %131
  store i8 %128, i8* %132, align 1
  %133 = call i32 @_ZN2v88internal6Bignum7CompareERKS1_S3_(%"class.v8::internal::Bignum"* nonnull dereferenceable(536) %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %10) #5
  %134 = icmp slt i32 %133, 1
  %135 = call i32 @_ZN2v88internal6Bignum11PlusCompareERKS1_S3_S3_(%"class.v8::internal::Bignum"* nonnull dereferenceable(536) %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %109, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %9) #5
  %136 = icmp sgt i32 %135, -1
  %137 = or i1 %134, %136
  br i1 %137, label %168, label %138

138:                                              ; preds = %125
  call void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* nonnull %8, i32 10) #5
  call void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* nonnull %10, i32 10) #5
  call void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* nonnull %109, i32 10) #5
  br label %125

139:                                              ; preds = %106
  br i1 %108, label %140, label %154

140:                                              ; preds = %139, %153
  %141 = call zeroext i16 @_ZN2v88internal6Bignum21DivideModuloIntBignumERKS1_(%"class.v8::internal::Bignum"* nonnull %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %9) #5
  %142 = trunc i16 %141 to i8
  %143 = add i8 %142, 48
  %144 = load i32, i32* %5, align 4
  %145 = add nsw i32 %144, 1
  store i32 %145, i32* %5, align 4
  %146 = sext i32 %144 to i64
  %147 = getelementptr inbounds i8, i8* %3, i64 %146
  store i8 %143, i8* %147, align 1
  %148 = call i32 @_ZN2v88internal6Bignum7CompareERKS1_S3_(%"class.v8::internal::Bignum"* nonnull dereferenceable(536) %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %10) #5
  %149 = icmp slt i32 %148, 0
  %150 = call i32 @_ZN2v88internal6Bignum11PlusCompareERKS1_S3_S3_(%"class.v8::internal::Bignum"* nonnull dereferenceable(536) %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %10, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %9) #5
  %151 = icmp sgt i32 %150, 0
  %152 = or i1 %149, %151
  br i1 %152, label %168, label %153

153:                                              ; preds = %140
  call void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* nonnull %8, i32 10) #5
  call void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* nonnull %10, i32 10) #5
  br label %140

154:                                              ; preds = %139, %167
  %155 = call zeroext i16 @_ZN2v88internal6Bignum21DivideModuloIntBignumERKS1_(%"class.v8::internal::Bignum"* nonnull %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %9) #5
  %156 = trunc i16 %155 to i8
  %157 = add i8 %156, 48
  %158 = load i32, i32* %5, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %5, align 4
  %160 = sext i32 %158 to i64
  %161 = getelementptr inbounds i8, i8* %3, i64 %160
  store i8 %157, i8* %161, align 1
  %162 = call i32 @_ZN2v88internal6Bignum7CompareERKS1_S3_(%"class.v8::internal::Bignum"* nonnull dereferenceable(536) %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %10) #5
  %163 = icmp slt i32 %162, 0
  %164 = call i32 @_ZN2v88internal6Bignum11PlusCompareERKS1_S3_S3_(%"class.v8::internal::Bignum"* nonnull dereferenceable(536) %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %109, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %9) #5
  %165 = icmp sgt i32 %164, 0
  %166 = or i1 %163, %165
  br i1 %166, label %168, label %167

167:                                              ; preds = %154
  call void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* nonnull %8, i32 10) #5
  call void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* nonnull %10, i32 10) #5
  call void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* nonnull %109, i32 10) #5
  br label %154

168:                                              ; preds = %154, %140, %125, %111
  %169 = phi i1 [ %120, %111 ], [ %134, %125 ], [ %149, %140 ], [ %163, %154 ]
  %170 = phi i1 [ %122, %111 ], [ %136, %125 ], [ %151, %140 ], [ %165, %154 ]
  %171 = and i1 %169, %170
  br i1 %171, label %172, label %189

172:                                              ; preds = %168
  %173 = call i32 @_ZN2v88internal6Bignum11PlusCompareERKS1_S3_S3_(%"class.v8::internal::Bignum"* nonnull dereferenceable(536) %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %9) #5
  %174 = icmp slt i32 %173, 0
  br i1 %174, label %216, label %175

175:                                              ; preds = %172
  %176 = icmp eq i32 %173, 0
  %177 = load i32, i32* %5, align 4
  %178 = add nsw i32 %177, -1
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i8, i8* %3, i64 %179
  %181 = load i8, i8* %180, align 1
  br i1 %176, label %184, label %182

182:                                              ; preds = %175
  %183 = add i8 %181, 1
  store i8 %183, i8* %180, align 1
  br label %216

184:                                              ; preds = %175
  %185 = and i8 %181, 1
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %216, label %187

187:                                              ; preds = %184
  %188 = add i8 %181, 1
  store i8 %188, i8* %180, align 1
  br label %216

189:                                              ; preds = %168
  br i1 %169, label %216, label %190

190:                                              ; preds = %189
  %191 = load i32, i32* %5, align 4
  %192 = add nsw i32 %191, -1
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds i8, i8* %3, i64 %193
  %195 = load i8, i8* %194, align 1
  %196 = add i8 %195, 1
  store i8 %196, i8* %194, align 1
  br label %216

197:                                              ; preds = %105
  %198 = load i32, i32* %6, align 4
  %199 = sub nsw i32 0, %198
  %200 = icmp sgt i32 %199, %2
  br i1 %200, label %201, label %203

201:                                              ; preds = %197
  %202 = sub nsw i32 0, %2
  store i32 %202, i32* %6, align 4
  store i32 0, i32* %5, align 4
  br label %216

203:                                              ; preds = %197
  %204 = icmp eq i32 %199, %2
  br i1 %204, label %205, label %212

205:                                              ; preds = %203
  call void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* nonnull %9, i32 10) #5
  %206 = call i32 @_ZN2v88internal6Bignum11PlusCompareERKS1_S3_S3_(%"class.v8::internal::Bignum"* nonnull dereferenceable(536) %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %8, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %9) #5
  %207 = icmp sgt i32 %206, -1
  br i1 %207, label %208, label %211

208:                                              ; preds = %205
  store i8 49, i8* %3, align 1
  store i32 1, i32* %5, align 4
  %209 = load i32, i32* %6, align 4
  %210 = add nsw i32 %209, 1
  store i32 %210, i32* %6, align 4
  br label %216

211:                                              ; preds = %205
  store i32 0, i32* %5, align 4
  br label %216

212:                                              ; preds = %203
  %213 = add nsw i32 %198, %2
  call fastcc void @_ZN2v88internalL21GenerateCountedDigitsEiPiPNS0_6BignumES3_NS0_6VectorIcEES1_(i32 %213, i32* %6, %"class.v8::internal::Bignum"* nonnull %8, %"class.v8::internal::Bignum"* nonnull %9, i8* %3, i64 %4, i32* %5) #5
  br label %216

214:                                              ; preds = %105
  call fastcc void @_ZN2v88internalL21GenerateCountedDigitsEiPiPNS0_6BignumES3_NS0_6VectorIcEES1_(i32 %2, i32* %6, %"class.v8::internal::Bignum"* nonnull %8, %"class.v8::internal::Bignum"* nonnull %9, i8* %3, i64 %4, i32* %5)
  br label %216

215:                                              ; preds = %105
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

216:                                              ; preds = %212, %211, %208, %201, %190, %189, %187, %184, %182, %172, %214
  %217 = load i32, i32* %5, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds i8, i8* %3, i64 %218
  store i8 0, i8* %219, align 1
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %54) #5
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %53) #5
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %52) #5
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %51) #5
  br label %220

220:                                              ; preds = %216, %48
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal6BignumC1Ev(%"class.v8::internal::Bignum"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internalL21GenerateCountedDigitsEiPiPNS0_6BignumES3_NS0_6VectorIcEES1_(i32, i32* nocapture, %"class.v8::internal::Bignum"*, %"class.v8::internal::Bignum"*, i8*, i64, i32* nocapture) unnamed_addr #0 {
  %8 = add i32 %0, -1
  %9 = icmp sgt i32 %8, 0
  %10 = tail call zeroext i16 @_ZN2v88internal6Bignum21DivideModuloIntBignumERKS1_(%"class.v8::internal::Bignum"* %2, %"class.v8::internal::Bignum"* dereferenceable(536) %3) #5
  br i1 %9, label %11, label %13

11:                                               ; preds = %7
  %12 = zext i32 %8 to i64
  br label %24

13:                                               ; preds = %24, %7
  %14 = phi i16 [ %10, %7 ], [ %31, %24 ]
  %15 = tail call i32 @_ZN2v88internal6Bignum11PlusCompareERKS1_S3_S3_(%"class.v8::internal::Bignum"* dereferenceable(536) %2, %"class.v8::internal::Bignum"* dereferenceable(536) %2, %"class.v8::internal::Bignum"* dereferenceable(536) %3) #5
  %16 = lshr i32 %15, 31
  %17 = trunc i32 %16 to i16
  %18 = xor i16 %17, 1
  %19 = add i16 %18, %14
  %20 = trunc i16 %19 to i8
  %21 = add i8 %20, 48
  %22 = sext i32 %8 to i64
  %23 = getelementptr inbounds i8, i8* %4, i64 %22
  store i8 %21, i8* %23, align 1
  br i1 %9, label %33, label %44

24:                                               ; preds = %24, %11
  %25 = phi i64 [ 0, %11 ], [ %30, %24 ]
  %26 = phi i16 [ %10, %11 ], [ %31, %24 ]
  %27 = trunc i16 %26 to i8
  %28 = add i8 %27, 48
  %29 = getelementptr inbounds i8, i8* %4, i64 %25
  store i8 %28, i8* %29, align 1
  tail call void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* %2, i32 10) #5
  %30 = add nuw nsw i64 %25, 1
  %31 = tail call zeroext i16 @_ZN2v88internal6Bignum21DivideModuloIntBignumERKS1_(%"class.v8::internal::Bignum"* %2, %"class.v8::internal::Bignum"* dereferenceable(536) %3) #5
  %32 = icmp eq i64 %30, %12
  br i1 %32, label %13, label %24

33:                                               ; preds = %13, %37
  %34 = phi i8 [ %42, %37 ], [ %21, %13 ]
  %35 = phi i64 [ %39, %37 ], [ %22, %13 ]
  %36 = icmp eq i8 %34, 58
  br i1 %36, label %37, label %44

37:                                               ; preds = %33
  %38 = getelementptr inbounds i8, i8* %4, i64 %35
  store i8 48, i8* %38, align 1
  %39 = add nsw i64 %35, -1
  %40 = getelementptr inbounds i8, i8* %4, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = add i8 %41, 1
  store i8 %42, i8* %40, align 1
  %43 = icmp sgt i64 %39, 0
  br i1 %43, label %33, label %44

44:                                               ; preds = %37, %33, %13
  %45 = load i8, i8* %4, align 1
  %46 = icmp eq i8 %45, 58
  br i1 %46, label %47, label %50

47:                                               ; preds = %44
  store i8 49, i8* %4, align 1
  %48 = load i32, i32* %1, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %1, align 4
  br label %50

50:                                               ; preds = %47, %44
  store i32 %0, i32* %6, align 4
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare zeroext i16 @_ZN2v88internal6Bignum21DivideModuloIntBignumERKS1_(%"class.v8::internal::Bignum"*, %"class.v8::internal::Bignum"* dereferenceable(536)) local_unnamed_addr #2

declare i32 @_ZN2v88internal6Bignum11PlusCompareERKS1_S3_S3_(%"class.v8::internal::Bignum"* dereferenceable(536), %"class.v8::internal::Bignum"* dereferenceable(536), %"class.v8::internal::Bignum"* dereferenceable(536)) local_unnamed_addr #2

declare i32 @_ZN2v88internal6Bignum7CompareERKS1_S3_(%"class.v8::internal::Bignum"* dereferenceable(536), %"class.v8::internal::Bignum"* dereferenceable(536)) local_unnamed_addr #2

declare void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #4

declare void @_ZN2v88internal6Bignum12AssignUInt64Em(%"class.v8::internal::Bignum"*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal6Bignum17AssignPowerUInt16Eti(%"class.v8::internal::Bignum"*, i16 zeroext, i32) local_unnamed_addr #2

declare void @_ZN2v88internal6Bignum12AssignUInt16Et(%"class.v8::internal::Bignum"*, i16 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal6Bignum12AssignBignumERKS1_(%"class.v8::internal::Bignum"*, %"class.v8::internal::Bignum"* dereferenceable(536)) local_unnamed_addr #2

declare void @_ZN2v88internal6Bignum16MultiplyByUInt64Em(%"class.v8::internal::Bignum"*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
