; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/signal_dependent_erle_estimator.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/signal_dependent_erle_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::array.78" = type { [7 x i64] }
%"class.webrtc::SignalDependentErleEstimator" = type { float, i64, i64, i64, %"struct.std::__1::array", %"struct.std::__1::array.0", %"class.std::__1::vector", i8, %"class.std::__1::vector.2", %"class.std::__1::vector.2", %"class.std::__1::vector.10", %"class.std::__1::vector.17", %"class.std::__1::vector.19", %"class.std::__1::vector.17", %"class.std::__1::vector.31", %"class.std::__1::vector.39" }
%"struct.std::__1::array" = type { [65 x i64] }
%"struct.std::__1::array.0" = type { [6 x float] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"*, %"class.std::__1::__compressed_pair.5" }
%"struct.std::__1::array.4" = type { [65 x float] }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::array.4"* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::vector.2"* }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::array.0"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.std::__1::vector.19"*, %"class.std::__1::vector.19"*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::vector.19"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"struct.std::__1::array.33"*, %"struct.std::__1::array.33"*, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::array.33" = type { [6 x i32] }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::array.33"* }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.std::__1::array"*, %"struct.std::__1::array"*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::array"* }
%"struct.webrtc::EchoCanceller3Config" = type { %"struct.webrtc::EchoCanceller3Config::Buffering", %"struct.webrtc::EchoCanceller3Config::Delay", %"struct.webrtc::EchoCanceller3Config::Filter", %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::EpStrength", %"struct.webrtc::EchoCanceller3Config::EchoAudibility", %"struct.webrtc::EchoCanceller3Config::RenderLevels", %"struct.webrtc::EchoCanceller3Config::EchoRemovalControl", [6 x i8], %"struct.webrtc::EchoCanceller3Config::EchoModel", %"struct.webrtc::EchoCanceller3Config::ComfortNoise", [4 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor" }
%"struct.webrtc::EchoCanceller3Config::Buffering" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Delay" = type { i64, i64, i64, i64, i64, i64, float, float, float, %"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds", i8, i8, %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing", %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" }
%"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds" = type { i32, i32 }
%"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" = type { i8, i8, float, i8 }
%"struct.webrtc::EchoCanceller3Config::Filter" = type <{ %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", i64, float, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration" = type { i64, float, float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration" = type { i64, float, float }
%"struct.webrtc::EchoCanceller3Config::Erle" = type <{ float, float, float, i8, [3 x i8], i64, i8, i8, [6 x i8] }>
%"struct.webrtc::EchoCanceller3Config::EpStrength" = type <{ float, float, i8, i8, i8, i8 }>
%"struct.webrtc::EchoCanceller3Config::EchoAudibility" = type <{ float, float, float, float, float, float, i8, i8, [2 x i8] }>
%"struct.webrtc::EchoCanceller3Config::RenderLevels" = type { float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::EchoRemovalControl" = type { i8, i8 }
%"struct.webrtc::EchoCanceller3Config::EchoModel" = type <{ i64, float, float, float, float, i64, i64, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::ComfortNoise" = type { float }
%"struct.webrtc::EchoCanceller3Config::Suppressor" = type <{ i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection", i8, [3 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression", float, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning" = type { %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds" = type { float, float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection" = type <{ float, float, float, i32, i32, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection" = type { i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression" = type { float, float, float, float }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.webrtc::RenderBuffer" = type <{ %"struct.webrtc::BlockBuffer"*, %"struct.webrtc::SpectrumBuffer"*, %"struct.webrtc::FftBuffer"*, i8, [7 x i8] }>
%"struct.webrtc::BlockBuffer" = type { i32, %"class.std::__1::vector.46", i32, i32 }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::vector.48"*, %"class.std::__1::vector.48"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"class.std::__1::vector.81"*, %"class.std::__1::vector.81"*, %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::vector.81" = type opaque
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.std::__1::vector.81"* }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::vector.48"* }
%"struct.webrtc::SpectrumBuffer" = type { i32, %"class.std::__1::vector.10", i32, i32 }
%"struct.webrtc::FftBuffer" = type { i32, %"class.std::__1::vector.54", i32, i32 }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.std::__1::vector.56"*, %"class.std::__1::vector.56"*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"struct.webrtc::FftData"*, %"struct.webrtc::FftData"*, %"class.std::__1::__compressed_pair.88" }
%"struct.webrtc::FftData" = type { %"struct.std::__1::array.4", %"struct.std::__1::array.4" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.webrtc::FftData"* }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.std::__1::vector.56"* }
%"class.rtc::ArrayView.64" = type { %"class.rtc::impl::ArrayViewBase.65" }
%"class.rtc::impl::ArrayViewBase.65" = type { %"struct.std::__1::array.4"*, i64 }
%"class.std::__1::vector.66" = type { i64*, i64, %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { i64 }
%"struct.std::__1::array.77" = type { [6 x i64] }
%"struct.std::__1::array.79" = type { [6 x i8] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.webrtc::ApmDataDumper"* }
%"class.webrtc::ApmDataDumper" = type { i8 }

$_ZNSt3__16vectorINS0_INS_5arrayIfLm65EEENS_9allocatorIS2_EEEENS3_IS5_EEEC2EmRKS5_ = comdat any

$_ZNSt3__16vectorINS0_INS_5arrayIfLm6EEENS_9allocatorIS2_EEEENS3_IS5_EEEC2EmRKS5_ = comdat any

@_ZN6webrtc12_GLOBAL__N_115kBandBoundariesE = internal unnamed_addr constant %"struct.std::__1::array.78" { [7 x i64] [i64 1, i64 8, i64 16, i64 24, i64 32, i64 48, i64 65] }, align 8

@_ZN6webrtc28SignalDependentErleEstimatorC1ERKNS_20EchoCanceller3ConfigEm = hidden unnamed_addr alias void (%"class.webrtc::SignalDependentErleEstimator"*, %"struct.webrtc::EchoCanceller3Config"*, i64), void (%"class.webrtc::SignalDependentErleEstimator"*, %"struct.webrtc::EchoCanceller3Config"*, i64)* @_ZN6webrtc28SignalDependentErleEstimatorC2ERKNS_20EchoCanceller3ConfigEm
@_ZN6webrtc28SignalDependentErleEstimatorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::SignalDependentErleEstimator"*), void (%"class.webrtc::SignalDependentErleEstimator"*)* @_ZN6webrtc28SignalDependentErleEstimatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc28SignalDependentErleEstimatorC2ERKNS_20EchoCanceller3ConfigEm(%"class.webrtc::SignalDependentErleEstimator"*, %"struct.webrtc::EchoCanceller3Config"* nocapture readonly dereferenceable(560), i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::vector.2", align 8
  %6 = alloca %"class.std::__1::vector.19", align 8
  %7 = alloca %"class.std::__1::vector.19", align 8
  %8 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %1, i64 0, i32 3
  %9 = bitcast %"struct.webrtc::EchoCanceller3Config::Erle"* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = bitcast %"class.webrtc::SignalDependentErleEstimator"* %0 to i32*
  store i32 %10, i32* %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %1, i64 0, i32 3, i32 5
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %1, i64 0, i32 2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 3
  %19 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %1, i64 0, i32 1, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %20, 6
  store i64 %21, i64* %18, align 8
  %22 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 4
  %23 = bitcast %"struct.std::__1::array"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 -86, i64 520, i1 false) #6, !alias.scope !2
  br label %24

24:                                               ; preds = %657, %3
  %25 = phi i64 [ 0, %3 ], [ %665, %657 ]
  %26 = phi i64 [ 1, %3 ], [ %662, %657 ]
  %27 = getelementptr inbounds %"struct.std::__1::array.78", %"struct.std::__1::array.78"* @_ZN6webrtc12_GLOBAL__N_115kBandBoundariesE, i64 0, i32 0, i64 %26
  %28 = load i64, i64* %27, align 8, !noalias !2
  %29 = icmp uge i64 %25, %28
  %30 = zext i1 %29 to i64
  %31 = add i64 %26, %30
  %32 = add i64 %31, -1
  %33 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 4, i32 0, i64 %25
  store i64 %32, i64* %33, align 8, !alias.scope !2
  %34 = or i64 %25, 1
  %35 = icmp eq i64 %34, 65
  br i1 %35, label %36, label %657

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5
  %38 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %1, i64 0, i32 3, i32 1
  %39 = bitcast float* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %1, i64 0, i32 3, i32 2
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 4, i32 0, i64 32
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 %45
  %47 = shl nuw i64 %45, 2
  %48 = icmp sgt i64 %47, 0
  %49 = bitcast %"struct.std::__1::array.0"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %49, i8 -1, i64 24, i1 false) #6, !alias.scope !5
  br i1 %48, label %50, label %142

50:                                               ; preds = %36
  %51 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %37, i64 0, i32 0, i64 0
  %52 = icmp slt i64 %45, 1
  %53 = select i1 %52, i64 %45, i64 1
  %54 = add nsw i64 %53, -1
  %55 = sub i64 %45, %54
  %56 = icmp ult i64 %55, 8
  br i1 %56, label %132, label %57

57:                                               ; preds = %50
  %58 = and i64 %55, -8
  %59 = getelementptr %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 %58
  %60 = sub i64 %45, %58
  %61 = insertelement <4 x i32> undef, i32 %40, i32 0
  %62 = shufflevector <4 x i32> %61, <4 x i32> undef, <4 x i32> zeroinitializer
  %63 = insertelement <4 x i32> undef, i32 %40, i32 0
  %64 = shufflevector <4 x i32> %63, <4 x i32> undef, <4 x i32> zeroinitializer
  %65 = add i64 %58, -8
  %66 = lshr exact i64 %65, 3
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 7
  %69 = icmp ult i64 %65, 56
  br i1 %69, label %117, label %70

70:                                               ; preds = %57
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %114, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %115, %72 ]
  %75 = getelementptr %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 %73
  %76 = bitcast float* %75 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %76, align 4, !alias.scope !5
  %77 = getelementptr float, float* %75, i64 4
  %78 = bitcast float* %77 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %78, align 4, !alias.scope !5
  %79 = or i64 %73, 8
  %80 = getelementptr %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 %79
  %81 = bitcast float* %80 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %81, align 4, !alias.scope !5
  %82 = getelementptr float, float* %80, i64 4
  %83 = bitcast float* %82 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %83, align 4, !alias.scope !5
  %84 = or i64 %73, 16
  %85 = getelementptr %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 %84
  %86 = bitcast float* %85 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %86, align 4, !alias.scope !5
  %87 = getelementptr float, float* %85, i64 4
  %88 = bitcast float* %87 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %88, align 4, !alias.scope !5
  %89 = or i64 %73, 24
  %90 = getelementptr %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 %89
  %91 = bitcast float* %90 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %91, align 4, !alias.scope !5
  %92 = getelementptr float, float* %90, i64 4
  %93 = bitcast float* %92 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %93, align 4, !alias.scope !5
  %94 = or i64 %73, 32
  %95 = getelementptr %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 %94
  %96 = bitcast float* %95 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %96, align 4, !alias.scope !5
  %97 = getelementptr float, float* %95, i64 4
  %98 = bitcast float* %97 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %98, align 4, !alias.scope !5
  %99 = or i64 %73, 40
  %100 = getelementptr %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 %99
  %101 = bitcast float* %100 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %101, align 4, !alias.scope !5
  %102 = getelementptr float, float* %100, i64 4
  %103 = bitcast float* %102 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %103, align 4, !alias.scope !5
  %104 = or i64 %73, 48
  %105 = getelementptr %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 %104
  %106 = bitcast float* %105 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %106, align 4, !alias.scope !5
  %107 = getelementptr float, float* %105, i64 4
  %108 = bitcast float* %107 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %108, align 4, !alias.scope !5
  %109 = or i64 %73, 56
  %110 = getelementptr %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 %109
  %111 = bitcast float* %110 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %111, align 4, !alias.scope !5
  %112 = getelementptr float, float* %110, i64 4
  %113 = bitcast float* %112 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %113, align 4, !alias.scope !5
  %114 = add i64 %73, 64
  %115 = add i64 %74, -8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %72, !llvm.loop !8

117:                                              ; preds = %72, %57
  %118 = phi i64 [ 0, %57 ], [ %114, %72 ]
  %119 = icmp eq i64 %68, 0
  br i1 %119, label %130, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %127, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %128, %120 ], [ %68, %117 ]
  %123 = getelementptr %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 %121
  %124 = bitcast float* %123 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %124, align 4, !alias.scope !5
  %125 = getelementptr float, float* %123, i64 4
  %126 = bitcast float* %125 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %126, align 4, !alias.scope !5
  %127 = add i64 %121, 8
  %128 = add i64 %122, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %120, !llvm.loop !10

130:                                              ; preds = %120, %117
  %131 = icmp eq i64 %55, %58
  br i1 %131, label %142, label %132

132:                                              ; preds = %130, %50
  %133 = phi float* [ %51, %50 ], [ %59, %130 ]
  %134 = phi i64 [ %45, %50 ], [ %60, %130 ]
  br label %135

135:                                              ; preds = %132, %135
  %136 = phi float* [ %139, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %140, %135 ], [ %134, %132 ]
  %138 = bitcast float* %136 to i32*
  store i32 %40, i32* %138, align 4, !alias.scope !5
  %139 = getelementptr inbounds float, float* %136, i64 1
  %140 = add nsw i64 %137, -1
  %141 = icmp sgt i64 %140, 0
  br i1 %141, label %135, label %142, !llvm.loop !12

142:                                              ; preds = %135, %130, %36
  %143 = sub i64 24, %47
  %144 = icmp sgt i64 %143, 0
  br i1 %144, label %145, label %234

145:                                              ; preds = %142
  %146 = lshr exact i64 %143, 2
  %147 = lshr exact i64 %143, 2
  %148 = icmp ult i64 %143, 32
  br i1 %148, label %224, label %149

149:                                              ; preds = %145
  %150 = and i64 %147, 4611686018427387896
  %151 = getelementptr float, float* %46, i64 %150
  %152 = sub nsw i64 %146, %150
  %153 = insertelement <4 x i32> undef, i32 %43, i32 0
  %154 = shufflevector <4 x i32> %153, <4 x i32> undef, <4 x i32> zeroinitializer
  %155 = insertelement <4 x i32> undef, i32 %43, i32 0
  %156 = shufflevector <4 x i32> %155, <4 x i32> undef, <4 x i32> zeroinitializer
  %157 = add nsw i64 %150, -8
  %158 = lshr exact i64 %157, 3
  %159 = add nuw nsw i64 %158, 1
  %160 = and i64 %159, 7
  %161 = icmp ult i64 %157, 56
  br i1 %161, label %209, label %162

162:                                              ; preds = %149
  %163 = sub nsw i64 %159, %160
  br label %164

164:                                              ; preds = %164, %162
  %165 = phi i64 [ 0, %162 ], [ %206, %164 ]
  %166 = phi i64 [ %163, %162 ], [ %207, %164 ]
  %167 = getelementptr float, float* %46, i64 %165
  %168 = bitcast float* %167 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %168, align 4, !alias.scope !5
  %169 = getelementptr float, float* %167, i64 4
  %170 = bitcast float* %169 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %170, align 4, !alias.scope !5
  %171 = or i64 %165, 8
  %172 = getelementptr float, float* %46, i64 %171
  %173 = bitcast float* %172 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %173, align 4, !alias.scope !5
  %174 = getelementptr float, float* %172, i64 4
  %175 = bitcast float* %174 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %175, align 4, !alias.scope !5
  %176 = or i64 %165, 16
  %177 = getelementptr float, float* %46, i64 %176
  %178 = bitcast float* %177 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %178, align 4, !alias.scope !5
  %179 = getelementptr float, float* %177, i64 4
  %180 = bitcast float* %179 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %180, align 4, !alias.scope !5
  %181 = or i64 %165, 24
  %182 = getelementptr float, float* %46, i64 %181
  %183 = bitcast float* %182 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %183, align 4, !alias.scope !5
  %184 = getelementptr float, float* %182, i64 4
  %185 = bitcast float* %184 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %185, align 4, !alias.scope !5
  %186 = or i64 %165, 32
  %187 = getelementptr float, float* %46, i64 %186
  %188 = bitcast float* %187 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %188, align 4, !alias.scope !5
  %189 = getelementptr float, float* %187, i64 4
  %190 = bitcast float* %189 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %190, align 4, !alias.scope !5
  %191 = or i64 %165, 40
  %192 = getelementptr float, float* %46, i64 %191
  %193 = bitcast float* %192 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %193, align 4, !alias.scope !5
  %194 = getelementptr float, float* %192, i64 4
  %195 = bitcast float* %194 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %195, align 4, !alias.scope !5
  %196 = or i64 %165, 48
  %197 = getelementptr float, float* %46, i64 %196
  %198 = bitcast float* %197 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %198, align 4, !alias.scope !5
  %199 = getelementptr float, float* %197, i64 4
  %200 = bitcast float* %199 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %200, align 4, !alias.scope !5
  %201 = or i64 %165, 56
  %202 = getelementptr float, float* %46, i64 %201
  %203 = bitcast float* %202 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %203, align 4, !alias.scope !5
  %204 = getelementptr float, float* %202, i64 4
  %205 = bitcast float* %204 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %205, align 4, !alias.scope !5
  %206 = add i64 %165, 64
  %207 = add i64 %166, -8
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %164, !llvm.loop !14

209:                                              ; preds = %164, %149
  %210 = phi i64 [ 0, %149 ], [ %206, %164 ]
  %211 = icmp eq i64 %160, 0
  br i1 %211, label %222, label %212

212:                                              ; preds = %209, %212
  %213 = phi i64 [ %219, %212 ], [ %210, %209 ]
  %214 = phi i64 [ %220, %212 ], [ %160, %209 ]
  %215 = getelementptr float, float* %46, i64 %213
  %216 = bitcast float* %215 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %216, align 4, !alias.scope !5
  %217 = getelementptr float, float* %215, i64 4
  %218 = bitcast float* %217 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %218, align 4, !alias.scope !5
  %219 = add i64 %213, 8
  %220 = add i64 %214, -1
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %222, label %212, !llvm.loop !15

222:                                              ; preds = %212, %209
  %223 = icmp eq i64 %147, %150
  br i1 %223, label %234, label %224

224:                                              ; preds = %222, %145
  %225 = phi float* [ %46, %145 ], [ %151, %222 ]
  %226 = phi i64 [ %146, %145 ], [ %152, %222 ]
  br label %227

227:                                              ; preds = %224, %227
  %228 = phi float* [ %231, %227 ], [ %225, %224 ]
  %229 = phi i64 [ %232, %227 ], [ %226, %224 ]
  %230 = bitcast float* %228 to i32*
  store i32 %43, i32* %230, align 4, !alias.scope !5
  %231 = getelementptr inbounds float, float* %228, i64 1
  %232 = add nsw i64 %229, -1
  %233 = icmp sgt i64 %232, 0
  br i1 %233, label %227, label %234, !llvm.loop !16

234:                                              ; preds = %227, %222, %142
  %235 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 6
  %236 = load i64, i64* %18, align 8
  %237 = load i64, i64* %15, align 8
  %238 = load i64, i64* %12, align 8
  %239 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %235, i64 0, i32 0, i32 0
  %240 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 6, i32 0, i32 1
  %241 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %242 = add i64 %238, 1
  %243 = bitcast %"class.std::__1::vector"* %235 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 24, i1 false) #6, !alias.scope !17
  %244 = icmp eq i64 %242, 0
  br i1 %244, label %263, label %245

245:                                              ; preds = %234
  %246 = icmp ugt i64 %242, 2305843009213693951
  br i1 %246, label %247, label %249

247:                                              ; preds = %245
  %248 = bitcast %"class.std::__1::vector"* %235 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %248) #7
  unreachable

249:                                              ; preds = %245
  %250 = shl i64 %242, 3
  %251 = tail call i8* @_Znwm(i64 %250) #8
  %252 = bitcast i8* %251 to i64*
  %253 = bitcast %"class.std::__1::vector"* %235 to i8**
  store i8* %251, i8** %253, align 8, !alias.scope !17
  %254 = getelementptr inbounds i64, i64* %252, i64 %242
  store i64* %254, i64** %241, align 8, !alias.scope !17
  %255 = bitcast i64** %240 to i64*
  %256 = ptrtoint i8* %251 to i64
  %257 = getelementptr i64, i64* %252, i64 %238
  %258 = ptrtoint i64* %257 to i64
  %259 = sub i64 8, %256
  %260 = add i64 %259, %258
  %261 = and i64 %260, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %251, i8 0, i64 %261, i1 false) #6, !noalias !17
  %262 = ptrtoint i64* %254 to i64
  store i64 %262, i64* %255, align 8, !alias.scope !17
  br label %263

263:                                              ; preds = %249, %234
  %264 = phi i64* [ %252, %249 ], [ null, %234 ]
  %265 = phi i64 [ %256, %249 ], [ 0, %234 ]
  %266 = phi i64 [ %262, %249 ], [ 0, %234 ]
  %267 = sub i64 %266, %265
  %268 = icmp eq i64 %267, 16
  br i1 %268, label %269, label %271

269:                                              ; preds = %263
  store i64 0, i64* %264, align 8, !noalias !17
  %270 = getelementptr inbounds i64, i64* %264, i64 1
  store i64 %237, i64* %270, align 8, !noalias !17
  br label %433

271:                                              ; preds = %263
  %272 = ashr exact i64 %267, 3
  %273 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %273) #6, !noalias !17
  %274 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %275 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %276 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %277 = add nsw i64 %272, -1
  %278 = sub i64 %237, %236
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %273, i8 0, i64 24, i1 false) #6, !alias.scope !20, !noalias !17
  %279 = icmp eq i64 %277, 0
  br i1 %279, label %342, label %280

280:                                              ; preds = %271
  %281 = icmp ugt i64 %277, 2305843009213693951
  br i1 %281, label %282, label %284

282:                                              ; preds = %280
  %283 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %283) #7
  unreachable

284:                                              ; preds = %280
  %285 = shl i64 %277, 3
  %286 = tail call i8* @_Znwm(i64 %285) #8
  %287 = bitcast i8* %286 to i64*
  %288 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %286, i8** %288, align 8, !alias.scope !20, !noalias !17
  %289 = getelementptr inbounds i64, i64* %287, i64 %277
  store i64* %289, i64** %276, align 8, !alias.scope !20, !noalias !17
  %290 = bitcast i64** %275 to i64*
  %291 = ptrtoint i8* %286 to i64
  %292 = add nsw i64 %272, -2
  %293 = getelementptr i64, i64* %287, i64 %292
  %294 = ptrtoint i64* %293 to i64
  %295 = sub i64 8, %291
  %296 = add i64 %295, %294
  %297 = and i64 %296, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %286, i8 0, i64 %297, i1 false) #6, !noalias !23
  %298 = ptrtoint i64* %289 to i64
  store i64 %298, i64* %290, align 8, !alias.scope !20, !noalias !17
  %299 = icmp ugt i64 %277, 1
  %300 = shl nsw i64 %277, 1
  %301 = icmp ugt i64 %278, %300
  %302 = and i1 %299, %301
  br i1 %302, label %303, label %342

303:                                              ; preds = %284
  store i64 2, i64* %287, align 8, !noalias !17
  %304 = add i64 %278, -2
  %305 = icmp ugt i64 %292, 1
  %306 = shl nsw i64 %292, 2
  %307 = icmp ugt i64 %304, %306
  %308 = and i1 %305, %307
  br i1 %308, label %309, label %342

309:                                              ; preds = %303
  %310 = getelementptr inbounds i8, i8* %286, i64 8
  %311 = bitcast i8* %310 to i64*
  store i64 4, i64* %311, align 8
  %312 = add i64 %278, -6
  %313 = add nsw i64 %272, -3
  %314 = icmp ugt i64 %313, 1
  %315 = shl i64 %313, 3
  %316 = icmp ugt i64 %312, %315
  %317 = and i1 %314, %316
  br i1 %317, label %318, label %342

318:                                              ; preds = %309
  %319 = getelementptr inbounds i8, i8* %286, i64 16
  %320 = bitcast i8* %319 to i64*
  store i64 8, i64* %320, align 8
  %321 = add i64 %278, -14
  %322 = add nsw i64 %272, -4
  %323 = icmp ugt i64 %322, 1
  %324 = shl i64 %322, 4
  %325 = icmp ugt i64 %321, %324
  %326 = and i1 %323, %325
  br i1 %326, label %327, label %342

327:                                              ; preds = %318, %327
  %328 = phi i64 [ %337, %327 ], [ 3, %318 ]
  %329 = phi i64 [ %336, %327 ], [ 16, %318 ]
  %330 = phi i64 [ %335, %327 ], [ %322, %318 ]
  %331 = phi i64 [ %334, %327 ], [ %321, %318 ]
  %332 = load i64*, i64** %274, align 8, !alias.scope !20, !noalias !17
  %333 = getelementptr inbounds i64, i64* %332, i64 %328
  store i64 %329, i64* %333, align 8
  %334 = sub i64 %331, %329
  %335 = add i64 %330, -1
  %336 = shl i64 %329, 1
  %337 = add nuw i64 %328, 1
  %338 = icmp ugt i64 %335, 1
  %339 = mul i64 %335, %336
  %340 = icmp ugt i64 %334, %339
  %341 = and i1 %338, %340
  br i1 %341, label %327, label %342

342:                                              ; preds = %327, %318, %309, %303, %284, %271
  %343 = phi i64 [ %278, %284 ], [ %278, %271 ], [ %304, %303 ], [ %312, %309 ], [ %321, %318 ], [ %334, %327 ]
  %344 = phi i64 [ %277, %284 ], [ 0, %271 ], [ %292, %303 ], [ %313, %309 ], [ %322, %318 ], [ %335, %327 ]
  %345 = phi i64 [ 0, %284 ], [ 0, %271 ], [ 1, %303 ], [ 2, %309 ], [ 3, %318 ], [ %337, %327 ]
  %346 = udiv i64 %343, %344
  %347 = icmp ult i64 %345, %277
  br i1 %347, label %348, label %381

348:                                              ; preds = %342
  %349 = xor i64 %345, 3
  %350 = add i64 %272, %349
  %351 = add nsw i64 %272, -2
  %352 = sub i64 %351, %345
  %353 = and i64 %350, 3
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %363, label %355

355:                                              ; preds = %348, %355
  %356 = phi i64 [ %360, %355 ], [ %345, %348 ]
  %357 = phi i64 [ %361, %355 ], [ %353, %348 ]
  %358 = load i64*, i64** %274, align 8, !alias.scope !20, !noalias !17
  %359 = getelementptr inbounds i64, i64* %358, i64 %356
  store i64 %346, i64* %359, align 8
  %360 = add nuw i64 %356, 1
  %361 = add i64 %357, -1
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %355, !llvm.loop !24

363:                                              ; preds = %355, %348
  %364 = phi i64 [ %345, %348 ], [ %360, %355 ]
  %365 = icmp ult i64 %352, 3
  br i1 %365, label %381, label %366

366:                                              ; preds = %363, %366
  %367 = phi i64 [ %379, %366 ], [ %364, %363 ]
  %368 = load i64*, i64** %274, align 8, !alias.scope !20, !noalias !17
  %369 = getelementptr inbounds i64, i64* %368, i64 %367
  store i64 %346, i64* %369, align 8
  %370 = add nuw i64 %367, 1
  %371 = load i64*, i64** %274, align 8, !alias.scope !20, !noalias !17
  %372 = getelementptr inbounds i64, i64* %371, i64 %370
  store i64 %346, i64* %372, align 8
  %373 = add nuw i64 %367, 2
  %374 = load i64*, i64** %274, align 8, !alias.scope !20, !noalias !17
  %375 = getelementptr inbounds i64, i64* %374, i64 %373
  store i64 %346, i64* %375, align 8
  %376 = add nuw i64 %367, 3
  %377 = load i64*, i64** %274, align 8, !alias.scope !20, !noalias !17
  %378 = getelementptr inbounds i64, i64* %377, i64 %376
  store i64 %346, i64* %378, align 8
  %379 = add nuw i64 %367, 4
  %380 = icmp eq i64 %379, %277
  br i1 %380, label %381, label %366

381:                                              ; preds = %363, %366, %342
  %382 = mul i64 %346, %344
  %383 = sub i64 %343, %382
  %384 = add nsw i64 %272, -2
  %385 = load i64*, i64** %274, align 8, !alias.scope !20, !noalias !17
  %386 = getelementptr inbounds i64, i64* %385, i64 %384
  %387 = load i64, i64* %386, align 8
  %388 = add i64 %383, %387
  store i64 %388, i64* %386, align 8
  %389 = load i64*, i64** %239, align 8, !alias.scope !17
  store i64 %236, i64* %389, align 8
  %390 = icmp ugt i64 %237, %236
  %391 = bitcast i64** %275 to i64*
  br i1 %390, label %392, label %419

392:                                              ; preds = %381, %414
  %393 = phi i64 [ %415, %414 ], [ %236, %381 ]
  %394 = phi i64 [ %417, %414 ], [ 0, %381 ]
  %395 = phi i64 [ %416, %414 ], [ 0, %381 ]
  %396 = add i64 %394, 1
  %397 = load i64*, i64** %274, align 8, !noalias !17
  %398 = getelementptr inbounds i64, i64* %397, i64 %395
  %399 = load i64, i64* %398, align 8
  %400 = icmp ult i64 %396, %399
  br i1 %400, label %401, label %403

401:                                              ; preds = %392
  %402 = add i64 %393, 1
  br label %414

403:                                              ; preds = %392
  %404 = ptrtoint i64* %397 to i64
  %405 = add i64 %395, 1
  %406 = load i64, i64* %391, align 8, !noalias !17
  %407 = sub i64 %406, %404
  %408 = ashr exact i64 %407, 3
  %409 = icmp eq i64 %405, %408
  br i1 %409, label %419, label %410

410:                                              ; preds = %403
  %411 = add i64 %393, 1
  %412 = load i64*, i64** %239, align 8, !alias.scope !17
  %413 = getelementptr inbounds i64, i64* %412, i64 %405
  store i64 %411, i64* %413, align 8
  br label %414

414:                                              ; preds = %410, %401
  %415 = phi i64 [ %402, %401 ], [ %411, %410 ]
  %416 = phi i64 [ %395, %401 ], [ %405, %410 ]
  %417 = phi i64 [ %396, %401 ], [ 0, %410 ]
  %418 = icmp eq i64 %415, %237
  br i1 %418, label %419, label %392

419:                                              ; preds = %414, %403, %381
  %420 = bitcast %"class.std::__1::vector"* %4 to i64*
  %421 = load i64, i64* %391, align 8, !noalias !17
  %422 = load i64, i64* %420, align 8, !noalias !17
  %423 = sub i64 %421, %422
  %424 = ashr exact i64 %423, 3
  %425 = load i64*, i64** %239, align 8, !alias.scope !17
  %426 = getelementptr inbounds i64, i64* %425, i64 %424
  store i64 %237, i64* %426, align 8
  %427 = load i64*, i64** %274, align 8, !noalias !17
  %428 = icmp eq i64* %427, null
  br i1 %428, label %432, label %429

429:                                              ; preds = %419
  %430 = ptrtoint i64* %427 to i64
  store i64 %430, i64* %391, align 8, !noalias !17
  %431 = bitcast i64* %427 to i8*
  tail call void @_ZdlPv(i8* %431) #8
  br label %432

432:                                              ; preds = %429, %419
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %273) #6, !noalias !17
  br label %433

433:                                              ; preds = %269, %432
  %434 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 7
  %435 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %1, i64 0, i32 3, i32 3
  %436 = load i8, i8* %435, align 4, !range !25
  store i8 %436, i8* %434, align 8
  %437 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 8
  %438 = bitcast %"class.std::__1::vector.2"* %437 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %438, i8 0, i64 24, i1 false) #6
  %439 = icmp eq i64 %2, 0
  br i1 %439, label %440, label %443

440:                                              ; preds = %433
  %441 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 9
  %442 = bitcast %"class.std::__1::vector.2"* %441 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %442, i8 0, i64 24, i1 false) #6
  br label %481

443:                                              ; preds = %433
  %444 = icmp ugt i64 %2, 70949015668113660
  br i1 %444, label %445, label %447

445:                                              ; preds = %443
  %446 = bitcast %"class.std::__1::vector.2"* %437 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %446) #7
  unreachable

447:                                              ; preds = %443
  %448 = mul i64 %2, 260
  %449 = tail call i8* @_Znwm(i64 %448) #8
  %450 = bitcast i8* %449 to %"struct.std::__1::array.4"*
  %451 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 8, i32 0, i32 1
  %452 = bitcast %"class.std::__1::vector.2"* %437 to i8**
  store i8* %449, i8** %452, align 8
  %453 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %450, i64 %2
  %454 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array.4"* %453, %"struct.std::__1::array.4"** %454, align 8
  %455 = bitcast %"struct.std::__1::array.4"** %451 to i64*
  %456 = ptrtoint i8* %449 to i64
  %457 = add nsw i64 %2, -1
  %458 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %450, i64 %457, i32 0, i64 0
  %459 = ptrtoint float* %458 to i64
  %460 = sub i64 %459, %456
  %461 = urem i64 %460, 260
  %462 = add i64 %460, 260
  %463 = sub i64 %462, %461
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %449, i8 0, i64 %463, i1 false) #6
  %464 = ptrtoint %"struct.std::__1::array.4"* %453 to i64
  store i64 %464, i64* %455, align 8
  %465 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 9
  %466 = tail call i8* @_Znwm(i64 %448) #8
  %467 = bitcast i8* %466 to %"struct.std::__1::array.4"*
  %468 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 9, i32 0, i32 1
  %469 = bitcast %"class.std::__1::vector.2"* %465 to i8**
  store i8* %466, i8** %469, align 8
  %470 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %467, i64 %2
  %471 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array.4"* %470, %"struct.std::__1::array.4"** %471, align 8
  %472 = bitcast %"struct.std::__1::array.4"** %468 to i64*
  %473 = ptrtoint i8* %466 to i64
  %474 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %467, i64 %457, i32 0, i64 0
  %475 = ptrtoint float* %474 to i64
  %476 = sub i64 %475, %473
  %477 = urem i64 %476, 260
  %478 = add i64 %476, 260
  %479 = sub i64 %478, %477
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %466, i8 0, i64 %479, i1 false) #6
  %480 = ptrtoint %"struct.std::__1::array.4"* %470 to i64
  store i64 %480, i64* %472, align 8
  br label %481

481:                                              ; preds = %440, %447
  %482 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 10
  %483 = bitcast %"class.std::__1::vector.2"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %483) #6
  %484 = load i64, i64* %12, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %483, i8 0, i64 24, i1 false) #6
  %485 = icmp eq i64 %484, 0
  br i1 %485, label %508, label %486

486:                                              ; preds = %481
  %487 = icmp ugt i64 %484, 70949015668113660
  br i1 %487, label %488, label %490

488:                                              ; preds = %486
  %489 = bitcast %"class.std::__1::vector.2"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %489) #7
  unreachable

490:                                              ; preds = %486
  %491 = mul i64 %484, 260
  %492 = tail call i8* @_Znwm(i64 %491) #8
  %493 = bitcast i8* %492 to %"struct.std::__1::array.4"*
  %494 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 1
  %495 = bitcast %"class.std::__1::vector.2"* %5 to i8**
  store i8* %492, i8** %495, align 8
  %496 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %493, i64 %484
  %497 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array.4"* %496, %"struct.std::__1::array.4"** %497, align 8
  %498 = bitcast %"struct.std::__1::array.4"** %494 to i64*
  %499 = ptrtoint i8* %492 to i64
  %500 = add nsw i64 %484, -1
  %501 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %493, i64 %500, i32 0, i64 0
  %502 = ptrtoint float* %501 to i64
  %503 = sub i64 %502, %499
  %504 = urem i64 %503, 260
  %505 = add i64 %503, 260
  %506 = sub i64 %505, %504
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %492, i8 0, i64 %506, i1 false) #6
  %507 = ptrtoint %"struct.std::__1::array.4"* %496 to i64
  store i64 %507, i64* %498, align 8
  br label %508

508:                                              ; preds = %481, %490
  call void @_ZNSt3__16vectorINS0_INS_5arrayIfLm65EEENS_9allocatorIS2_EEEENS3_IS5_EEEC2EmRKS5_(%"class.std::__1::vector.10"* %482, i64 %2, %"class.std::__1::vector.2"* nonnull dereferenceable(24) %5)
  %509 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %510 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %509, align 8
  %511 = icmp eq %"struct.std::__1::array.4"* %510, null
  br i1 %511, label %517, label %512

512:                                              ; preds = %508
  %513 = ptrtoint %"struct.std::__1::array.4"* %510 to i64
  %514 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 1
  %515 = bitcast %"struct.std::__1::array.4"** %514 to i64*
  store i64 %513, i64* %515, align 8
  %516 = bitcast %"struct.std::__1::array.4"* %510 to i8*
  call void @_ZdlPv(i8* %516) #8
  br label %517

517:                                              ; preds = %508, %512
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %483) #6
  %518 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 11
  %519 = bitcast %"class.std::__1::vector.19"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %519) #6
  %520 = load i64, i64* %12, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %519, i8 0, i64 24, i1 false) #6
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %544, label %522

522:                                              ; preds = %517
  %523 = icmp ugt i64 %520, 768614336404564650
  br i1 %523, label %524, label %526

524:                                              ; preds = %522
  %525 = bitcast %"class.std::__1::vector.19"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %525) #7
  unreachable

526:                                              ; preds = %522
  %527 = mul i64 %520, 24
  %528 = call i8* @_Znwm(i64 %527) #8
  %529 = bitcast i8* %528 to %"struct.std::__1::array.0"*
  %530 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %6, i64 0, i32 0, i32 1
  %531 = bitcast %"class.std::__1::vector.19"* %6 to i8**
  store i8* %528, i8** %531, align 8
  %532 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %529, i64 %520
  %533 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array.0"* %532, %"struct.std::__1::array.0"** %533, align 8
  %534 = bitcast %"struct.std::__1::array.0"** %530 to i64*
  %535 = ptrtoint i8* %528 to i64
  %536 = add nsw i64 %520, -1
  %537 = getelementptr %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %529, i64 %536, i32 0, i64 0
  %538 = ptrtoint float* %537 to i64
  %539 = sub i64 %538, %535
  %540 = urem i64 %539, 24
  %541 = add i64 %539, 24
  %542 = sub i64 %541, %540
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %528, i8 0, i64 %542, i1 false) #6
  %543 = ptrtoint %"struct.std::__1::array.0"* %532 to i64
  store i64 %543, i64* %534, align 8
  br label %544

544:                                              ; preds = %517, %526
  call void @_ZNSt3__16vectorINS0_INS_5arrayIfLm6EEENS_9allocatorIS2_EEEENS3_IS5_EEEC2EmRKS5_(%"class.std::__1::vector.17"* %518, i64 %2, %"class.std::__1::vector.19"* nonnull dereferenceable(24) %6)
  %545 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %6, i64 0, i32 0, i32 0
  %546 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %545, align 8
  %547 = icmp eq %"struct.std::__1::array.0"* %546, null
  br i1 %547, label %553, label %548

548:                                              ; preds = %544
  %549 = ptrtoint %"struct.std::__1::array.0"* %546 to i64
  %550 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %6, i64 0, i32 0, i32 1
  %551 = bitcast %"struct.std::__1::array.0"** %550 to i64*
  store i64 %549, i64* %551, align 8
  %552 = bitcast %"struct.std::__1::array.0"* %546 to i8*
  call void @_ZdlPv(i8* %552) #8
  br label %553

553:                                              ; preds = %544, %548
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %519) #6
  %554 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 12
  %555 = bitcast %"class.std::__1::vector.19"* %554 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %555, i8 0, i64 24, i1 false) #6
  br i1 %439, label %574, label %556

556:                                              ; preds = %553
  %557 = mul i64 %2, 24
  %558 = call i8* @_Znwm(i64 %557) #8
  %559 = bitcast i8* %558 to %"struct.std::__1::array.0"*
  %560 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 12, i32 0, i32 1
  %561 = bitcast %"class.std::__1::vector.19"* %554 to i8**
  store i8* %558, i8** %561, align 8
  %562 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %559, i64 %2
  %563 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array.0"* %562, %"struct.std::__1::array.0"** %563, align 8
  %564 = bitcast %"struct.std::__1::array.0"** %560 to i64*
  %565 = ptrtoint i8* %558 to i64
  %566 = add nsw i64 %2, -1
  %567 = getelementptr %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %559, i64 %566, i32 0, i64 0
  %568 = ptrtoint float* %567 to i64
  %569 = sub i64 %568, %565
  %570 = urem i64 %569, 24
  %571 = add i64 %569, 24
  %572 = sub i64 %571, %570
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %558, i8 0, i64 %572, i1 false) #6
  %573 = ptrtoint %"struct.std::__1::array.0"* %562 to i64
  store i64 %573, i64* %564, align 8
  br label %574

574:                                              ; preds = %553, %556
  %575 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 13
  %576 = bitcast %"class.std::__1::vector.19"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %576) #6
  %577 = load i64, i64* %12, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %576, i8 0, i64 24, i1 false) #6
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %601, label %579

579:                                              ; preds = %574
  %580 = icmp ugt i64 %577, 768614336404564650
  br i1 %580, label %581, label %583

581:                                              ; preds = %579
  %582 = bitcast %"class.std::__1::vector.19"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %582) #7
  unreachable

583:                                              ; preds = %579
  %584 = mul i64 %577, 24
  %585 = call i8* @_Znwm(i64 %584) #8
  %586 = bitcast i8* %585 to %"struct.std::__1::array.0"*
  %587 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %7, i64 0, i32 0, i32 1
  %588 = bitcast %"class.std::__1::vector.19"* %7 to i8**
  store i8* %585, i8** %588, align 8
  %589 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %586, i64 %577
  %590 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array.0"* %589, %"struct.std::__1::array.0"** %590, align 8
  %591 = bitcast %"struct.std::__1::array.0"** %587 to i64*
  %592 = ptrtoint i8* %585 to i64
  %593 = add nsw i64 %577, -1
  %594 = getelementptr %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %586, i64 %593, i32 0, i64 0
  %595 = ptrtoint float* %594 to i64
  %596 = sub i64 %595, %592
  %597 = urem i64 %596, 24
  %598 = add i64 %596, 24
  %599 = sub i64 %598, %597
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %585, i8 0, i64 %599, i1 false) #6
  %600 = ptrtoint %"struct.std::__1::array.0"* %589 to i64
  store i64 %600, i64* %591, align 8
  br label %601

601:                                              ; preds = %574, %583
  call void @_ZNSt3__16vectorINS0_INS_5arrayIfLm6EEENS_9allocatorIS2_EEEENS3_IS5_EEEC2EmRKS5_(%"class.std::__1::vector.17"* %575, i64 %2, %"class.std::__1::vector.19"* nonnull dereferenceable(24) %7)
  %602 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %7, i64 0, i32 0, i32 0
  %603 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %602, align 8
  %604 = icmp eq %"struct.std::__1::array.0"* %603, null
  br i1 %604, label %610, label %605

605:                                              ; preds = %601
  %606 = ptrtoint %"struct.std::__1::array.0"* %603 to i64
  %607 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %7, i64 0, i32 0, i32 1
  %608 = bitcast %"struct.std::__1::array.0"** %607 to i64*
  store i64 %606, i64* %608, align 8
  %609 = bitcast %"struct.std::__1::array.0"* %603 to i8*
  call void @_ZdlPv(i8* %609) #8
  br label %610

610:                                              ; preds = %601, %605
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %576) #6
  %611 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 14
  %612 = bitcast %"class.std::__1::vector.31"* %611 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %612, i8 0, i64 24, i1 false) #6
  br i1 %439, label %613, label %616

613:                                              ; preds = %610
  %614 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 15
  %615 = bitcast %"class.std::__1::vector.39"* %614 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %615, i8 0, i64 24, i1 false) #6
  br label %656

616:                                              ; preds = %610
  %617 = mul i64 %2, 24
  %618 = call i8* @_Znwm(i64 %617) #8
  %619 = bitcast i8* %618 to %"struct.std::__1::array.33"*
  %620 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 14, i32 0, i32 1
  %621 = bitcast %"class.std::__1::vector.31"* %611 to i8**
  store i8* %618, i8** %621, align 8
  %622 = getelementptr inbounds %"struct.std::__1::array.33", %"struct.std::__1::array.33"* %619, i64 %2
  %623 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array.33"* %622, %"struct.std::__1::array.33"** %623, align 8
  %624 = bitcast %"struct.std::__1::array.33"** %620 to i64*
  %625 = ptrtoint i8* %618 to i64
  %626 = add nsw i64 %2, -1
  %627 = getelementptr %"struct.std::__1::array.33", %"struct.std::__1::array.33"* %619, i64 %626, i32 0, i64 0
  %628 = ptrtoint i32* %627 to i64
  %629 = sub i64 %628, %625
  %630 = urem i64 %629, 24
  %631 = add i64 %629, 24
  %632 = sub i64 %631, %630
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %618, i8 0, i64 %632, i1 false) #6
  %633 = ptrtoint %"struct.std::__1::array.33"* %622 to i64
  store i64 %633, i64* %624, align 8
  %634 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 15
  %635 = bitcast %"class.std::__1::vector.39"* %634 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %635, i8 0, i64 24, i1 false) #6
  %636 = icmp ugt i64 %2, 35474507834056830
  br i1 %636, label %637, label %639

637:                                              ; preds = %616
  %638 = bitcast %"class.std::__1::vector.39"* %634 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %638) #7
  unreachable

639:                                              ; preds = %616
  %640 = mul i64 %2, 520
  %641 = call i8* @_Znwm(i64 %640) #8
  %642 = bitcast i8* %641 to %"struct.std::__1::array"*
  %643 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 15, i32 0, i32 1
  %644 = bitcast %"class.std::__1::vector.39"* %634 to i8**
  store i8* %641, i8** %644, align 8
  %645 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %642, i64 %2
  %646 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array"* %645, %"struct.std::__1::array"** %646, align 8
  %647 = bitcast %"struct.std::__1::array"** %643 to i64*
  %648 = ptrtoint i8* %641 to i64
  %649 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %642, i64 %626, i32 0, i64 0
  %650 = ptrtoint i64* %649 to i64
  %651 = sub i64 %650, %648
  %652 = urem i64 %651, 520
  %653 = add i64 %651, 520
  %654 = sub i64 %653, %652
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %641, i8 0, i64 %654, i1 false) #6
  %655 = ptrtoint %"struct.std::__1::array"* %645 to i64
  store i64 %655, i64* %647, align 8
  br label %656

656:                                              ; preds = %613, %639
  call void @_ZN6webrtc28SignalDependentErleEstimator5ResetEv(%"class.webrtc::SignalDependentErleEstimator"* %0)
  ret void

657:                                              ; preds = %24
  %658 = getelementptr inbounds %"struct.std::__1::array.78", %"struct.std::__1::array.78"* @_ZN6webrtc12_GLOBAL__N_115kBandBoundariesE, i64 0, i32 0, i64 %31
  %659 = load i64, i64* %658, align 8, !noalias !2
  %660 = icmp uge i64 %34, %659
  %661 = zext i1 %660 to i64
  %662 = add i64 %31, %661
  %663 = add i64 %662, -1
  %664 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 4, i32 0, i64 %34
  store i64 %663, i64* %664, align 8, !alias.scope !2
  %665 = add nuw nsw i64 %25, 2
  br label %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_INS_5arrayIfLm65EEENS_9allocatorIS2_EEEENS3_IS5_EEEC2EmRKS5_(%"class.std::__1::vector.10"*, i64, %"class.std::__1::vector.2"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::vector.10"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #6
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %63, label %6

6:                                                ; preds = %3
  %7 = icmp ugt i64 %1, 768614336404564650
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = bitcast %"class.std::__1::vector.10"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %9) #7
  unreachable

10:                                               ; preds = %6
  %11 = mul i64 %1, 24
  %12 = tail call i8* @_Znwm(i64 %11) #8
  %13 = bitcast i8* %12 to %"class.std::__1::vector.2"*
  %14 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::vector.2"** %14 to i8**
  store i8* %12, i8** %15, align 8
  %16 = bitcast %"class.std::__1::vector.10"* %0 to i8**
  store i8* %12, i8** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %13, i64 %1
  %18 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::vector.2"* %17, %"class.std::__1::vector.2"** %18, align 8
  %19 = bitcast %"class.std::__1::vector.2"** %14 to i64*
  %20 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %2, i64 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::array.4"** %20 to i64*
  %22 = bitcast %"class.std::__1::vector.2"* %2 to i64*
  %23 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %2, i64 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %58, %10
  %25 = phi %"class.std::__1::vector.2"* [ %13, %10 ], [ %59, %58 ]
  %26 = bitcast %"class.std::__1::vector.2"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #6
  %27 = load i64, i64* %21, align 8
  %28 = load i64, i64* %22, align 8
  %29 = sub i64 %27, %28
  %30 = sdiv exact i64 %29, 260
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %58, label %32

32:                                               ; preds = %24
  %33 = icmp ugt i64 %30, 70949015668113660
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector.2"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #7
  unreachable

36:                                               ; preds = %32
  %37 = tail call i8* @_Znwm(i64 %29) #8
  %38 = bitcast i8* %37 to %"struct.std::__1::array.4"*
  %39 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %25, i64 0, i32 0, i32 1
  %40 = bitcast %"struct.std::__1::array.4"** %39 to i8**
  store i8* %37, i8** %40, align 8
  %41 = bitcast %"class.std::__1::vector.2"* %25 to i8**
  store i8* %37, i8** %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %38, i64 %30
  %43 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array.4"* %42, %"struct.std::__1::array.4"** %43, align 8
  %44 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %23, align 8
  %45 = load i64, i64* %21, align 8
  %46 = bitcast %"struct.std::__1::array.4"** %39 to i64*
  %47 = ptrtoint i8* %37 to i64
  %48 = ptrtoint %"struct.std::__1::array.4"* %44 to i64
  %49 = sub i64 %45, %48
  %50 = icmp sgt i64 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %36
  %52 = udiv exact i64 %49, 260
  %53 = bitcast %"struct.std::__1::array.4"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 %53, i64 %49, i1 false) #6
  %54 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %38, i64 %52
  %55 = ptrtoint %"struct.std::__1::array.4"* %54 to i64
  br label %56

56:                                               ; preds = %51, %36
  %57 = phi i64 [ %55, %51 ], [ %47, %36 ]
  store i64 %57, i64* %46, align 8
  br label %58

58:                                               ; preds = %56, %24
  %59 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %25, i64 1
  %60 = icmp eq %"class.std::__1::vector.2"* %59, %17
  br i1 %60, label %61, label %24

61:                                               ; preds = %58
  %62 = ptrtoint %"class.std::__1::vector.2"* %17 to i64
  store i64 %62, i64* %19, align 8
  br label %63

63:                                               ; preds = %3, %61
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_INS_5arrayIfLm6EEENS_9allocatorIS2_EEEENS3_IS5_EEEC2EmRKS5_(%"class.std::__1::vector.17"*, i64, %"class.std::__1::vector.19"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::vector.17"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #6
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %63, label %6

6:                                                ; preds = %3
  %7 = icmp ugt i64 %1, 768614336404564650
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %9) #7
  unreachable

10:                                               ; preds = %6
  %11 = mul i64 %1, 24
  %12 = tail call i8* @_Znwm(i64 %11) #8
  %13 = bitcast i8* %12 to %"class.std::__1::vector.19"*
  %14 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::vector.19"** %14 to i8**
  store i8* %12, i8** %15, align 8
  %16 = bitcast %"class.std::__1::vector.17"* %0 to i8**
  store i8* %12, i8** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %13, i64 %1
  %18 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::vector.19"* %17, %"class.std::__1::vector.19"** %18, align 8
  %19 = bitcast %"class.std::__1::vector.19"** %14 to i64*
  %20 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %2, i64 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::array.0"** %20 to i64*
  %22 = bitcast %"class.std::__1::vector.19"* %2 to i64*
  %23 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %2, i64 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %58, %10
  %25 = phi %"class.std::__1::vector.19"* [ %13, %10 ], [ %59, %58 ]
  %26 = bitcast %"class.std::__1::vector.19"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #6
  %27 = load i64, i64* %21, align 8
  %28 = load i64, i64* %22, align 8
  %29 = sub i64 %27, %28
  %30 = sdiv exact i64 %29, 24
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %58, label %32

32:                                               ; preds = %24
  %33 = icmp ugt i64 %30, 768614336404564650
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector.19"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #7
  unreachable

36:                                               ; preds = %32
  %37 = tail call i8* @_Znwm(i64 %29) #8
  %38 = bitcast i8* %37 to %"struct.std::__1::array.0"*
  %39 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %25, i64 0, i32 0, i32 1
  %40 = bitcast %"struct.std::__1::array.0"** %39 to i8**
  store i8* %37, i8** %40, align 8
  %41 = bitcast %"class.std::__1::vector.19"* %25 to i8**
  store i8* %37, i8** %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %38, i64 %30
  %43 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array.0"* %42, %"struct.std::__1::array.0"** %43, align 8
  %44 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %23, align 8
  %45 = load i64, i64* %21, align 8
  %46 = bitcast %"struct.std::__1::array.0"** %39 to i64*
  %47 = ptrtoint i8* %37 to i64
  %48 = ptrtoint %"struct.std::__1::array.0"* %44 to i64
  %49 = sub i64 %45, %48
  %50 = icmp sgt i64 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %36
  %52 = udiv exact i64 %49, 24
  %53 = bitcast %"struct.std::__1::array.0"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 %53, i64 %49, i1 false) #6
  %54 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %38, i64 %52
  %55 = ptrtoint %"struct.std::__1::array.0"* %54 to i64
  br label %56

56:                                               ; preds = %51, %36
  %57 = phi i64 [ %55, %51 ], [ %47, %36 ]
  store i64 %57, i64* %46, align 8
  br label %58

58:                                               ; preds = %56, %24
  %59 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %25, i64 1
  %60 = icmp eq %"class.std::__1::vector.19"* %59, %17
  br i1 %60, label %61, label %24

61:                                               ; preds = %58
  %62 = ptrtoint %"class.std::__1::vector.19"* %17 to i64
  store i64 %62, i64* %19, align 8
  br label %63

63:                                               ; preds = %3, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc28SignalDependentErleEstimator5ResetEv(%"class.webrtc::SignalDependentErleEstimator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 8
  %3 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 8, i32 0, i32 1
  %4 = bitcast %"struct.std::__1::array.4"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %21, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.webrtc::SignalDependentErleEstimator"* %0 to i32*
  %11 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 9, i32 0, i32 0
  %12 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 11, i32 0, i32 0
  %13 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 12, i32 0, i32 0
  %14 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 13, i32 0, i32 0
  %15 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 14, i32 0, i32 0
  %16 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 15, i32 0, i32 0
  %17 = bitcast %"class.webrtc::SignalDependentErleEstimator"* %0 to i8*
  %18 = getelementptr i8, i8* %17, i64 1
  %19 = bitcast %"class.webrtc::SignalDependentErleEstimator"* %0 to i8*
  %20 = getelementptr i8, i8* %19, i64 1
  br label %22

21:                                               ; preds = %352, %1
  ret void

22:                                               ; preds = %9, %352
  %23 = phi i64 [ %7, %9 ], [ %361, %352 ]
  %24 = phi i64 [ 0, %9 ], [ %359, %352 ]
  %25 = add i64 %24, 1
  %26 = inttoptr i64 %23 to %"struct.std::__1::array.4"*
  %27 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 0
  %28 = add i64 %24, 1
  %29 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24
  %30 = bitcast %"struct.std::__1::array.4"* %29 to i8*
  %31 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %28
  %32 = icmp ugt i8* %20, %30
  %33 = bitcast %"struct.std::__1::array.4"* %31 to %"class.webrtc::SignalDependentErleEstimator"*
  %34 = icmp ugt %"class.webrtc::SignalDependentErleEstimator"* %33, %0
  %35 = and i1 %32, %34
  br i1 %35, label %118, label %36

36:                                               ; preds = %22
  %37 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 64
  %38 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 0
  %39 = load i32, i32* %10, align 4, !alias.scope !26
  %40 = insertelement <4 x i32> undef, i32 %39, i32 0
  %41 = shufflevector <4 x i32> %40, <4 x i32> undef, <4 x i32> zeroinitializer
  %42 = bitcast float* %38 to <4 x i32>*
  store <4 x i32> %41, <4 x i32>* %42, align 4, !alias.scope !29, !noalias !26
  %43 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 4
  %44 = load i32, i32* %10, align 4, !alias.scope !26
  %45 = insertelement <4 x i32> undef, i32 %44, i32 0
  %46 = shufflevector <4 x i32> %45, <4 x i32> undef, <4 x i32> zeroinitializer
  %47 = bitcast float* %43 to <4 x i32>*
  store <4 x i32> %46, <4 x i32>* %47, align 4, !alias.scope !29, !noalias !26
  %48 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 8
  %49 = load i32, i32* %10, align 4, !alias.scope !26
  %50 = insertelement <4 x i32> undef, i32 %49, i32 0
  %51 = shufflevector <4 x i32> %50, <4 x i32> undef, <4 x i32> zeroinitializer
  %52 = bitcast float* %48 to <4 x i32>*
  store <4 x i32> %51, <4 x i32>* %52, align 4, !alias.scope !29, !noalias !26
  %53 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 12
  %54 = load i32, i32* %10, align 4, !alias.scope !26
  %55 = insertelement <4 x i32> undef, i32 %54, i32 0
  %56 = shufflevector <4 x i32> %55, <4 x i32> undef, <4 x i32> zeroinitializer
  %57 = bitcast float* %53 to <4 x i32>*
  store <4 x i32> %56, <4 x i32>* %57, align 4, !alias.scope !29, !noalias !26
  %58 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 16
  %59 = load i32, i32* %10, align 4, !alias.scope !26
  %60 = insertelement <4 x i32> undef, i32 %59, i32 0
  %61 = shufflevector <4 x i32> %60, <4 x i32> undef, <4 x i32> zeroinitializer
  %62 = bitcast float* %58 to <4 x i32>*
  store <4 x i32> %61, <4 x i32>* %62, align 4, !alias.scope !29, !noalias !26
  %63 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 20
  %64 = load i32, i32* %10, align 4, !alias.scope !26
  %65 = insertelement <4 x i32> undef, i32 %64, i32 0
  %66 = shufflevector <4 x i32> %65, <4 x i32> undef, <4 x i32> zeroinitializer
  %67 = bitcast float* %63 to <4 x i32>*
  store <4 x i32> %66, <4 x i32>* %67, align 4, !alias.scope !29, !noalias !26
  %68 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 24
  %69 = load i32, i32* %10, align 4, !alias.scope !26
  %70 = insertelement <4 x i32> undef, i32 %69, i32 0
  %71 = shufflevector <4 x i32> %70, <4 x i32> undef, <4 x i32> zeroinitializer
  %72 = bitcast float* %68 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %72, align 4, !alias.scope !29, !noalias !26
  %73 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 28
  %74 = load i32, i32* %10, align 4, !alias.scope !26
  %75 = insertelement <4 x i32> undef, i32 %74, i32 0
  %76 = shufflevector <4 x i32> %75, <4 x i32> undef, <4 x i32> zeroinitializer
  %77 = bitcast float* %73 to <4 x i32>*
  store <4 x i32> %76, <4 x i32>* %77, align 4, !alias.scope !29, !noalias !26
  %78 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 32
  %79 = load i32, i32* %10, align 4, !alias.scope !26
  %80 = insertelement <4 x i32> undef, i32 %79, i32 0
  %81 = shufflevector <4 x i32> %80, <4 x i32> undef, <4 x i32> zeroinitializer
  %82 = bitcast float* %78 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %82, align 4, !alias.scope !29, !noalias !26
  %83 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 36
  %84 = load i32, i32* %10, align 4, !alias.scope !26
  %85 = insertelement <4 x i32> undef, i32 %84, i32 0
  %86 = shufflevector <4 x i32> %85, <4 x i32> undef, <4 x i32> zeroinitializer
  %87 = bitcast float* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %87, align 4, !alias.scope !29, !noalias !26
  %88 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 40
  %89 = load i32, i32* %10, align 4, !alias.scope !26
  %90 = insertelement <4 x i32> undef, i32 %89, i32 0
  %91 = shufflevector <4 x i32> %90, <4 x i32> undef, <4 x i32> zeroinitializer
  %92 = bitcast float* %88 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %92, align 4, !alias.scope !29, !noalias !26
  %93 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 44
  %94 = load i32, i32* %10, align 4, !alias.scope !26
  %95 = insertelement <4 x i32> undef, i32 %94, i32 0
  %96 = shufflevector <4 x i32> %95, <4 x i32> undef, <4 x i32> zeroinitializer
  %97 = bitcast float* %93 to <4 x i32>*
  store <4 x i32> %96, <4 x i32>* %97, align 4, !alias.scope !29, !noalias !26
  %98 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 48
  %99 = load i32, i32* %10, align 4, !alias.scope !26
  %100 = insertelement <4 x i32> undef, i32 %99, i32 0
  %101 = shufflevector <4 x i32> %100, <4 x i32> undef, <4 x i32> zeroinitializer
  %102 = bitcast float* %98 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %102, align 4, !alias.scope !29, !noalias !26
  %103 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 52
  %104 = load i32, i32* %10, align 4, !alias.scope !26
  %105 = insertelement <4 x i32> undef, i32 %104, i32 0
  %106 = shufflevector <4 x i32> %105, <4 x i32> undef, <4 x i32> zeroinitializer
  %107 = bitcast float* %103 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %107, align 4, !alias.scope !29, !noalias !26
  %108 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 56
  %109 = load i32, i32* %10, align 4, !alias.scope !26
  %110 = insertelement <4 x i32> undef, i32 %109, i32 0
  %111 = shufflevector <4 x i32> %110, <4 x i32> undef, <4 x i32> zeroinitializer
  %112 = bitcast float* %108 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %112, align 4, !alias.scope !29, !noalias !26
  %113 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %26, i64 %24, i32 0, i64 60
  %114 = load i32, i32* %10, align 4, !alias.scope !26
  %115 = insertelement <4 x i32> undef, i32 %114, i32 0
  %116 = shufflevector <4 x i32> %115, <4 x i32> undef, <4 x i32> zeroinitializer
  %117 = bitcast float* %113 to <4 x i32>*
  store <4 x i32> %116, <4 x i32>* %117, align 4, !alias.scope !29, !noalias !26
  br label %118

118:                                              ; preds = %22, %36
  %119 = phi float* [ %27, %22 ], [ %37, %36 ]
  %120 = phi i64 [ 65, %22 ], [ 1, %36 ]
  br label %121

121:                                              ; preds = %121, %118
  %122 = phi float* [ %127, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %128, %121 ], [ %120, %118 ]
  %124 = phi i64 [ %129, %121 ], [ 1, %118 ]
  %125 = load i32, i32* %10, align 4
  %126 = bitcast float* %122 to i32*
  store i32 %125, i32* %126, align 4
  %127 = getelementptr inbounds float, float* %122, i64 1
  %128 = add nsw i64 %123, -1
  %129 = add i64 %124, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %121, !llvm.loop !31

131:                                              ; preds = %121
  %132 = icmp eq i64 %120, 1
  br i1 %132, label %162, label %133

133:                                              ; preds = %131, %133
  %134 = phi float* [ %159, %133 ], [ %127, %131 ]
  %135 = phi i64 [ %160, %133 ], [ %128, %131 ]
  %136 = load i32, i32* %10, align 4
  %137 = bitcast float* %134 to i32*
  store i32 %136, i32* %137, align 4
  %138 = getelementptr inbounds float, float* %134, i64 1
  %139 = load i32, i32* %10, align 4
  %140 = bitcast float* %138 to i32*
  store i32 %139, i32* %140, align 4
  %141 = getelementptr inbounds float, float* %134, i64 2
  %142 = load i32, i32* %10, align 4
  %143 = bitcast float* %141 to i32*
  store i32 %142, i32* %143, align 4
  %144 = getelementptr inbounds float, float* %134, i64 3
  %145 = load i32, i32* %10, align 4
  %146 = bitcast float* %144 to i32*
  store i32 %145, i32* %146, align 4
  %147 = getelementptr inbounds float, float* %134, i64 4
  %148 = load i32, i32* %10, align 4
  %149 = bitcast float* %147 to i32*
  store i32 %148, i32* %149, align 4
  %150 = getelementptr inbounds float, float* %134, i64 5
  %151 = load i32, i32* %10, align 4
  %152 = bitcast float* %150 to i32*
  store i32 %151, i32* %152, align 4
  %153 = getelementptr inbounds float, float* %134, i64 6
  %154 = load i32, i32* %10, align 4
  %155 = bitcast float* %153 to i32*
  store i32 %154, i32* %155, align 4
  %156 = getelementptr inbounds float, float* %134, i64 7
  %157 = load i32, i32* %10, align 4
  %158 = bitcast float* %156 to i32*
  store i32 %157, i32* %158, align 4
  %159 = getelementptr inbounds float, float* %134, i64 8
  %160 = add nsw i64 %135, -8
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %133, !llvm.loop !32

162:                                              ; preds = %133, %131
  %163 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %11, align 8
  %164 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 0
  %165 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24
  %166 = bitcast %"struct.std::__1::array.4"* %165 to i8*
  %167 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %25
  %168 = icmp ugt i8* %18, %166
  %169 = bitcast %"struct.std::__1::array.4"* %167 to %"class.webrtc::SignalDependentErleEstimator"*
  %170 = icmp ugt %"class.webrtc::SignalDependentErleEstimator"* %169, %0
  %171 = and i1 %168, %170
  br i1 %171, label %254, label %172

172:                                              ; preds = %162
  %173 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 64
  %174 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 0
  %175 = load i32, i32* %10, align 4, !alias.scope !33
  %176 = insertelement <4 x i32> undef, i32 %175, i32 0
  %177 = shufflevector <4 x i32> %176, <4 x i32> undef, <4 x i32> zeroinitializer
  %178 = bitcast float* %174 to <4 x i32>*
  store <4 x i32> %177, <4 x i32>* %178, align 4, !alias.scope !36, !noalias !33
  %179 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 4
  %180 = load i32, i32* %10, align 4, !alias.scope !33
  %181 = insertelement <4 x i32> undef, i32 %180, i32 0
  %182 = shufflevector <4 x i32> %181, <4 x i32> undef, <4 x i32> zeroinitializer
  %183 = bitcast float* %179 to <4 x i32>*
  store <4 x i32> %182, <4 x i32>* %183, align 4, !alias.scope !36, !noalias !33
  %184 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 8
  %185 = load i32, i32* %10, align 4, !alias.scope !33
  %186 = insertelement <4 x i32> undef, i32 %185, i32 0
  %187 = shufflevector <4 x i32> %186, <4 x i32> undef, <4 x i32> zeroinitializer
  %188 = bitcast float* %184 to <4 x i32>*
  store <4 x i32> %187, <4 x i32>* %188, align 4, !alias.scope !36, !noalias !33
  %189 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 12
  %190 = load i32, i32* %10, align 4, !alias.scope !33
  %191 = insertelement <4 x i32> undef, i32 %190, i32 0
  %192 = shufflevector <4 x i32> %191, <4 x i32> undef, <4 x i32> zeroinitializer
  %193 = bitcast float* %189 to <4 x i32>*
  store <4 x i32> %192, <4 x i32>* %193, align 4, !alias.scope !36, !noalias !33
  %194 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 16
  %195 = load i32, i32* %10, align 4, !alias.scope !33
  %196 = insertelement <4 x i32> undef, i32 %195, i32 0
  %197 = shufflevector <4 x i32> %196, <4 x i32> undef, <4 x i32> zeroinitializer
  %198 = bitcast float* %194 to <4 x i32>*
  store <4 x i32> %197, <4 x i32>* %198, align 4, !alias.scope !36, !noalias !33
  %199 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 20
  %200 = load i32, i32* %10, align 4, !alias.scope !33
  %201 = insertelement <4 x i32> undef, i32 %200, i32 0
  %202 = shufflevector <4 x i32> %201, <4 x i32> undef, <4 x i32> zeroinitializer
  %203 = bitcast float* %199 to <4 x i32>*
  store <4 x i32> %202, <4 x i32>* %203, align 4, !alias.scope !36, !noalias !33
  %204 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 24
  %205 = load i32, i32* %10, align 4, !alias.scope !33
  %206 = insertelement <4 x i32> undef, i32 %205, i32 0
  %207 = shufflevector <4 x i32> %206, <4 x i32> undef, <4 x i32> zeroinitializer
  %208 = bitcast float* %204 to <4 x i32>*
  store <4 x i32> %207, <4 x i32>* %208, align 4, !alias.scope !36, !noalias !33
  %209 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 28
  %210 = load i32, i32* %10, align 4, !alias.scope !33
  %211 = insertelement <4 x i32> undef, i32 %210, i32 0
  %212 = shufflevector <4 x i32> %211, <4 x i32> undef, <4 x i32> zeroinitializer
  %213 = bitcast float* %209 to <4 x i32>*
  store <4 x i32> %212, <4 x i32>* %213, align 4, !alias.scope !36, !noalias !33
  %214 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 32
  %215 = load i32, i32* %10, align 4, !alias.scope !33
  %216 = insertelement <4 x i32> undef, i32 %215, i32 0
  %217 = shufflevector <4 x i32> %216, <4 x i32> undef, <4 x i32> zeroinitializer
  %218 = bitcast float* %214 to <4 x i32>*
  store <4 x i32> %217, <4 x i32>* %218, align 4, !alias.scope !36, !noalias !33
  %219 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 36
  %220 = load i32, i32* %10, align 4, !alias.scope !33
  %221 = insertelement <4 x i32> undef, i32 %220, i32 0
  %222 = shufflevector <4 x i32> %221, <4 x i32> undef, <4 x i32> zeroinitializer
  %223 = bitcast float* %219 to <4 x i32>*
  store <4 x i32> %222, <4 x i32>* %223, align 4, !alias.scope !36, !noalias !33
  %224 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 40
  %225 = load i32, i32* %10, align 4, !alias.scope !33
  %226 = insertelement <4 x i32> undef, i32 %225, i32 0
  %227 = shufflevector <4 x i32> %226, <4 x i32> undef, <4 x i32> zeroinitializer
  %228 = bitcast float* %224 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %228, align 4, !alias.scope !36, !noalias !33
  %229 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 44
  %230 = load i32, i32* %10, align 4, !alias.scope !33
  %231 = insertelement <4 x i32> undef, i32 %230, i32 0
  %232 = shufflevector <4 x i32> %231, <4 x i32> undef, <4 x i32> zeroinitializer
  %233 = bitcast float* %229 to <4 x i32>*
  store <4 x i32> %232, <4 x i32>* %233, align 4, !alias.scope !36, !noalias !33
  %234 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 48
  %235 = load i32, i32* %10, align 4, !alias.scope !33
  %236 = insertelement <4 x i32> undef, i32 %235, i32 0
  %237 = shufflevector <4 x i32> %236, <4 x i32> undef, <4 x i32> zeroinitializer
  %238 = bitcast float* %234 to <4 x i32>*
  store <4 x i32> %237, <4 x i32>* %238, align 4, !alias.scope !36, !noalias !33
  %239 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 52
  %240 = load i32, i32* %10, align 4, !alias.scope !33
  %241 = insertelement <4 x i32> undef, i32 %240, i32 0
  %242 = shufflevector <4 x i32> %241, <4 x i32> undef, <4 x i32> zeroinitializer
  %243 = bitcast float* %239 to <4 x i32>*
  store <4 x i32> %242, <4 x i32>* %243, align 4, !alias.scope !36, !noalias !33
  %244 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 56
  %245 = load i32, i32* %10, align 4, !alias.scope !33
  %246 = insertelement <4 x i32> undef, i32 %245, i32 0
  %247 = shufflevector <4 x i32> %246, <4 x i32> undef, <4 x i32> zeroinitializer
  %248 = bitcast float* %244 to <4 x i32>*
  store <4 x i32> %247, <4 x i32>* %248, align 4, !alias.scope !36, !noalias !33
  %249 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %163, i64 %24, i32 0, i64 60
  %250 = load i32, i32* %10, align 4, !alias.scope !33
  %251 = insertelement <4 x i32> undef, i32 %250, i32 0
  %252 = shufflevector <4 x i32> %251, <4 x i32> undef, <4 x i32> zeroinitializer
  %253 = bitcast float* %249 to <4 x i32>*
  store <4 x i32> %252, <4 x i32>* %253, align 4, !alias.scope !36, !noalias !33
  br label %254

254:                                              ; preds = %162, %172
  %255 = phi float* [ %164, %162 ], [ %173, %172 ]
  %256 = phi i64 [ 65, %162 ], [ 1, %172 ]
  br label %257

257:                                              ; preds = %257, %254
  %258 = phi float* [ %263, %257 ], [ %255, %254 ]
  %259 = phi i64 [ %264, %257 ], [ %256, %254 ]
  %260 = phi i64 [ %265, %257 ], [ 1, %254 ]
  %261 = load i32, i32* %10, align 4
  %262 = bitcast float* %258 to i32*
  store i32 %261, i32* %262, align 4
  %263 = getelementptr inbounds float, float* %258, i64 1
  %264 = add nsw i64 %259, -1
  %265 = add i64 %260, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %257, !llvm.loop !38

267:                                              ; preds = %257
  %268 = icmp eq i64 %256, 1
  br i1 %268, label %298, label %269

269:                                              ; preds = %267, %269
  %270 = phi float* [ %295, %269 ], [ %263, %267 ]
  %271 = phi i64 [ %296, %269 ], [ %264, %267 ]
  %272 = load i32, i32* %10, align 4
  %273 = bitcast float* %270 to i32*
  store i32 %272, i32* %273, align 4
  %274 = getelementptr inbounds float, float* %270, i64 1
  %275 = load i32, i32* %10, align 4
  %276 = bitcast float* %274 to i32*
  store i32 %275, i32* %276, align 4
  %277 = getelementptr inbounds float, float* %270, i64 2
  %278 = load i32, i32* %10, align 4
  %279 = bitcast float* %277 to i32*
  store i32 %278, i32* %279, align 4
  %280 = getelementptr inbounds float, float* %270, i64 3
  %281 = load i32, i32* %10, align 4
  %282 = bitcast float* %280 to i32*
  store i32 %281, i32* %282, align 4
  %283 = getelementptr inbounds float, float* %270, i64 4
  %284 = load i32, i32* %10, align 4
  %285 = bitcast float* %283 to i32*
  store i32 %284, i32* %285, align 4
  %286 = getelementptr inbounds float, float* %270, i64 5
  %287 = load i32, i32* %10, align 4
  %288 = bitcast float* %286 to i32*
  store i32 %287, i32* %288, align 4
  %289 = getelementptr inbounds float, float* %270, i64 6
  %290 = load i32, i32* %10, align 4
  %291 = bitcast float* %289 to i32*
  store i32 %290, i32* %291, align 4
  %292 = getelementptr inbounds float, float* %270, i64 7
  %293 = load i32, i32* %10, align 4
  %294 = bitcast float* %292 to i32*
  store i32 %293, i32* %294, align 4
  %295 = getelementptr inbounds float, float* %270, i64 8
  %296 = add nsw i64 %271, -8
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %269, !llvm.loop !39

298:                                              ; preds = %269, %267
  %299 = load %"class.std::__1::vector.19"*, %"class.std::__1::vector.19"** %12, align 8
  %300 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %299, i64 %24, i32 0, i32 0
  %301 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %300, align 8
  %302 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %299, i64 %24, i32 0, i32 1
  %303 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %302, align 8
  %304 = icmp eq %"struct.std::__1::array.0"* %301, %303
  br i1 %304, label %305, label %331

305:                                              ; preds = %331, %298
  %306 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %13, align 8
  %307 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %306, i64 %24
  %308 = load i32, i32* %10, align 4
  %309 = bitcast %"struct.std::__1::array.0"* %307 to i32*
  store i32 %308, i32* %309, align 4
  %310 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %306, i64 %24, i32 0, i64 1
  %311 = load i32, i32* %10, align 4
  %312 = bitcast float* %310 to i32*
  store i32 %311, i32* %312, align 4
  %313 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %306, i64 %24, i32 0, i64 2
  %314 = load i32, i32* %10, align 4
  %315 = bitcast float* %313 to i32*
  store i32 %314, i32* %315, align 4
  %316 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %306, i64 %24, i32 0, i64 3
  %317 = load i32, i32* %10, align 4
  %318 = bitcast float* %316 to i32*
  store i32 %317, i32* %318, align 4
  %319 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %306, i64 %24, i32 0, i64 4
  %320 = load i32, i32* %10, align 4
  %321 = bitcast float* %319 to i32*
  store i32 %320, i32* %321, align 4
  %322 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %306, i64 %24, i32 0, i64 5
  %323 = load i32, i32* %10, align 4
  %324 = bitcast float* %322 to i32*
  store i32 %323, i32* %324, align 4
  %325 = load %"class.std::__1::vector.19"*, %"class.std::__1::vector.19"** %14, align 8
  %326 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %325, i64 %24, i32 0, i32 0
  %327 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %326, align 8
  %328 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %325, i64 %24, i32 0, i32 1
  %329 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %328, align 8
  %330 = icmp eq %"struct.std::__1::array.0"* %327, %329
  br i1 %330, label %352, label %365

331:                                              ; preds = %298, %331
  %332 = phi %"struct.std::__1::array.0"* [ %350, %331 ], [ %301, %298 ]
  %333 = load i32, i32* %10, align 4
  %334 = bitcast %"struct.std::__1::array.0"* %332 to i32*
  store i32 %333, i32* %334, align 4
  %335 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %332, i64 0, i32 0, i64 1
  %336 = load i32, i32* %10, align 4
  %337 = bitcast float* %335 to i32*
  store i32 %336, i32* %337, align 4
  %338 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %332, i64 0, i32 0, i64 2
  %339 = load i32, i32* %10, align 4
  %340 = bitcast float* %338 to i32*
  store i32 %339, i32* %340, align 4
  %341 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %332, i64 0, i32 0, i64 3
  %342 = load i32, i32* %10, align 4
  %343 = bitcast float* %341 to i32*
  store i32 %342, i32* %343, align 4
  %344 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %332, i64 0, i32 0, i64 4
  %345 = load i32, i32* %10, align 4
  %346 = bitcast float* %344 to i32*
  store i32 %345, i32* %346, align 4
  %347 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %332, i64 0, i32 0, i64 5
  %348 = load i32, i32* %10, align 4
  %349 = bitcast float* %347 to i32*
  store i32 %348, i32* %349, align 4
  %350 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %332, i64 1
  %351 = icmp eq %"struct.std::__1::array.0"* %350, %303
  br i1 %351, label %305, label %331

352:                                              ; preds = %365, %305
  %353 = load %"struct.std::__1::array.33"*, %"struct.std::__1::array.33"** %15, align 8
  %354 = getelementptr inbounds %"struct.std::__1::array.33", %"struct.std::__1::array.33"* %353, i64 %24, i32 0, i64 0
  %355 = bitcast i32* %354 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %355, i8 0, i64 24, i1 false)
  %356 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %16, align 8
  %357 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %356, i64 %24
  %358 = bitcast %"struct.std::__1::array"* %357 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %358, i8 0, i64 520, i1 false)
  %359 = add nuw i64 %24, 1
  %360 = load i64, i64* %4, align 8
  %361 = load i64, i64* %6, align 8
  %362 = sub i64 %360, %361
  %363 = sdiv exact i64 %362, 260
  %364 = icmp ult i64 %359, %363
  br i1 %364, label %22, label %21

365:                                              ; preds = %305, %365
  %366 = phi %"struct.std::__1::array.0"* [ %372, %365 ], [ %327, %305 ]
  %367 = bitcast %"struct.std::__1::array.0"* %366 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216>, <4 x i32>* %367, align 4
  %368 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %366, i64 0, i32 0, i64 4
  %369 = bitcast float* %368 to i32*
  store i32 1065353216, i32* %369, align 4
  %370 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %366, i64 0, i32 0, i64 5
  %371 = bitcast float* %370 to i32*
  store i32 1065353216, i32* %371, align 4
  %372 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %366, i64 1
  %373 = icmp eq %"struct.std::__1::array.0"* %372, %329
  br i1 %373, label %352, label %365
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc28SignalDependentErleEstimatorD2Ev(%"class.webrtc::SignalDependentErleEstimator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 15, i32 0, i32 0
  %3 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %2, align 8
  %4 = icmp eq %"struct.std::__1::array"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.std::__1::array"* %3 to i64
  %7 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 15, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::array"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.std::__1::array"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #8
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 14, i32 0, i32 0
  %12 = load %"struct.std::__1::array.33"*, %"struct.std::__1::array.33"** %11, align 8
  %13 = icmp eq %"struct.std::__1::array.33"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"struct.std::__1::array.33"* %12 to i64
  %16 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 14, i32 0, i32 1
  %17 = bitcast %"struct.std::__1::array.33"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.std::__1::array.33"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #8
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 13
  %21 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.std::__1::vector.19"*, %"class.std::__1::vector.19"** %21, align 8
  %23 = icmp eq %"class.std::__1::vector.19"* %22, null
  br i1 %23, label %47, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.std::__1::vector.19"* %22 to i8*
  %26 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 13, i32 0, i32 1
  %27 = load %"class.std::__1::vector.19"*, %"class.std::__1::vector.19"** %26, align 8
  %28 = icmp eq %"class.std::__1::vector.19"* %27, %22
  br i1 %28, label %45, label %29

29:                                               ; preds = %24, %40
  %30 = phi %"class.std::__1::vector.19"* [ %31, %40 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %30, i64 -1
  %32 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %31, i64 0, i32 0, i32 0
  %33 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %32, align 8
  %34 = icmp eq %"struct.std::__1::array.0"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"struct.std::__1::array.0"* %33 to i64
  %37 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %30, i64 -1, i32 0, i32 1
  %38 = bitcast %"struct.std::__1::array.0"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast %"struct.std::__1::array.0"* %33 to i8*
  tail call void @_ZdlPv(i8* %39) #8
  br label %40

40:                                               ; preds = %35, %29
  %41 = icmp eq %"class.std::__1::vector.19"* %31, %22
  br i1 %41, label %42, label %29

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::vector.17"* %20 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %24
  %46 = phi i8* [ %44, %42 ], [ %25, %24 ]
  store %"class.std::__1::vector.19"* %22, %"class.std::__1::vector.19"** %26, align 8
  tail call void @_ZdlPv(i8* %46) #8
  br label %47

47:                                               ; preds = %19, %45
  %48 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 12, i32 0, i32 0
  %49 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %48, align 8
  %50 = icmp eq %"struct.std::__1::array.0"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint %"struct.std::__1::array.0"* %49 to i64
  %53 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 12, i32 0, i32 1
  %54 = bitcast %"struct.std::__1::array.0"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast %"struct.std::__1::array.0"* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #8
  br label %56

56:                                               ; preds = %47, %51
  %57 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 11
  %58 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.std::__1::vector.19"*, %"class.std::__1::vector.19"** %58, align 8
  %60 = icmp eq %"class.std::__1::vector.19"* %59, null
  br i1 %60, label %84, label %61

61:                                               ; preds = %56
  %62 = bitcast %"class.std::__1::vector.19"* %59 to i8*
  %63 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 11, i32 0, i32 1
  %64 = load %"class.std::__1::vector.19"*, %"class.std::__1::vector.19"** %63, align 8
  %65 = icmp eq %"class.std::__1::vector.19"* %64, %59
  br i1 %65, label %82, label %66

66:                                               ; preds = %61, %77
  %67 = phi %"class.std::__1::vector.19"* [ %68, %77 ], [ %64, %61 ]
  %68 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %67, i64 -1
  %69 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %68, i64 0, i32 0, i32 0
  %70 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %69, align 8
  %71 = icmp eq %"struct.std::__1::array.0"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %66
  %73 = ptrtoint %"struct.std::__1::array.0"* %70 to i64
  %74 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %67, i64 -1, i32 0, i32 1
  %75 = bitcast %"struct.std::__1::array.0"** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = bitcast %"struct.std::__1::array.0"* %70 to i8*
  tail call void @_ZdlPv(i8* %76) #8
  br label %77

77:                                               ; preds = %72, %66
  %78 = icmp eq %"class.std::__1::vector.19"* %68, %59
  br i1 %78, label %79, label %66

79:                                               ; preds = %77
  %80 = bitcast %"class.std::__1::vector.17"* %57 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %61
  %83 = phi i8* [ %81, %79 ], [ %62, %61 ]
  store %"class.std::__1::vector.19"* %59, %"class.std::__1::vector.19"** %63, align 8
  tail call void @_ZdlPv(i8* %83) #8
  br label %84

84:                                               ; preds = %56, %82
  %85 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 10
  %86 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %86, align 8
  %88 = icmp eq %"class.std::__1::vector.2"* %87, null
  br i1 %88, label %112, label %89

89:                                               ; preds = %84
  %90 = bitcast %"class.std::__1::vector.2"* %87 to i8*
  %91 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 10, i32 0, i32 1
  %92 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.2"* %92, %87
  br i1 %93, label %110, label %94

94:                                               ; preds = %89, %105
  %95 = phi %"class.std::__1::vector.2"* [ %96, %105 ], [ %92, %89 ]
  %96 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %95, i64 -1
  %97 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %96, i64 0, i32 0, i32 0
  %98 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %97, align 8
  %99 = icmp eq %"struct.std::__1::array.4"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %94
  %101 = ptrtoint %"struct.std::__1::array.4"* %98 to i64
  %102 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %95, i64 -1, i32 0, i32 1
  %103 = bitcast %"struct.std::__1::array.4"** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast %"struct.std::__1::array.4"* %98 to i8*
  tail call void @_ZdlPv(i8* %104) #8
  br label %105

105:                                              ; preds = %100, %94
  %106 = icmp eq %"class.std::__1::vector.2"* %96, %87
  br i1 %106, label %107, label %94

107:                                              ; preds = %105
  %108 = bitcast %"class.std::__1::vector.10"* %85 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %107, %89
  %111 = phi i8* [ %109, %107 ], [ %90, %89 ]
  store %"class.std::__1::vector.2"* %87, %"class.std::__1::vector.2"** %91, align 8
  tail call void @_ZdlPv(i8* %111) #8
  br label %112

112:                                              ; preds = %84, %110
  %113 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 9, i32 0, i32 0
  %114 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %113, align 8
  %115 = icmp eq %"struct.std::__1::array.4"* %114, null
  br i1 %115, label %121, label %116

116:                                              ; preds = %112
  %117 = ptrtoint %"struct.std::__1::array.4"* %114 to i64
  %118 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 9, i32 0, i32 1
  %119 = bitcast %"struct.std::__1::array.4"** %118 to i64*
  store i64 %117, i64* %119, align 8
  %120 = bitcast %"struct.std::__1::array.4"* %114 to i8*
  tail call void @_ZdlPv(i8* %120) #8
  br label %121

121:                                              ; preds = %112, %116
  %122 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 8, i32 0, i32 0
  %123 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %122, align 8
  %124 = icmp eq %"struct.std::__1::array.4"* %123, null
  br i1 %124, label %130, label %125

125:                                              ; preds = %121
  %126 = ptrtoint %"struct.std::__1::array.4"* %123 to i64
  %127 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 8, i32 0, i32 1
  %128 = bitcast %"struct.std::__1::array.4"** %127 to i64*
  store i64 %126, i64* %128, align 8
  %129 = bitcast %"struct.std::__1::array.4"* %123 to i8*
  tail call void @_ZdlPv(i8* %129) #8
  br label %130

130:                                              ; preds = %121, %125
  %131 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 6, i32 0, i32 0
  %132 = load i64*, i64** %131, align 8
  %133 = icmp eq i64* %132, null
  br i1 %133, label %139, label %134

134:                                              ; preds = %130
  %135 = ptrtoint i64* %132 to i64
  %136 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 6, i32 0, i32 1
  %137 = bitcast i64** %136 to i64*
  store i64 %135, i64* %137, align 8
  %138 = bitcast i64* %132 to i8*
  tail call void @_ZdlPv(i8* %138) #8
  br label %139

139:                                              ; preds = %130, %134
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc28SignalDependentErleEstimator6UpdateERKNS_12RenderBufferEN3rtc9ArrayViewIKNSt3__16vectorINS6_5arrayIfLm65EEENS6_9allocatorIS9_EEEELln4711EEENS5_IKfLl65EEENS5_IKS9_Lln4711EEESI_SI_SI_RKNS7_IbNSA_IbEEEE(%"class.webrtc::SignalDependentErleEstimator"* nocapture readonly, %"class.webrtc::RenderBuffer"* nocapture readonly dereferenceable(32), %"class.std::__1::vector.2"*, i64, float*, %"class.rtc::ArrayView.64"* nocapture readonly byval(%"class.rtc::ArrayView.64") align 8, %"class.rtc::ArrayView.64"* nocapture readonly byval(%"class.rtc::ArrayView.64") align 8, %"class.rtc::ArrayView.64"* nocapture readonly byval(%"class.rtc::ArrayView.64") align 8, %"class.rtc::ArrayView.64"* nocapture readonly byval(%"class.rtc::ArrayView.64") align 8, %"class.std::__1::vector.66"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %11 = icmp eq i64 %3, 0
  %12 = select i1 %11, %"class.std::__1::vector.2"* null, %"class.std::__1::vector.2"* %2
  tail call void @_ZN6webrtc28SignalDependentErleEstimator35ComputeEchoEstimatePerFilterSectionERKNS_12RenderBufferEN3rtc9ArrayViewIKNSt3__16vectorINS6_5arrayIfLm65EEENS6_9allocatorIS9_EEEELln4711EEE(%"class.webrtc::SignalDependentErleEstimator"* %0, %"class.webrtc::RenderBuffer"* dereferenceable(32) %1, %"class.std::__1::vector.2"* %12, i64 %3) #6
  %13 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 15
  %14 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 15, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::array"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.39"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %66, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %13, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 10, i32 0, i32 0
  br label %24

24:                                               ; preds = %30, %20
  %25 = phi i64 [ %18, %20 ], [ %33, %30 ]
  %26 = phi i64 [ 0, %20 ], [ %31, %30 ]
  %27 = inttoptr i64 %25 to %"struct.std::__1::array"*
  %28 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %27, i64 %26
  %29 = bitcast %"struct.std::__1::array"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 520, i1 false) #6
  br label %37

30:                                               ; preds = %63
  %31 = add nuw i64 %26, 1
  %32 = load i64, i64* %15, align 8
  %33 = load i64, i64* %17, align 8
  %34 = sub i64 %32, %33
  %35 = sdiv exact i64 %34, 520
  %36 = icmp ult i64 %31, %35
  br i1 %36, label %24, label %66

37:                                               ; preds = %63, %24
  %38 = phi i64 [ %64, %63 ], [ 0, %24 ]
  %39 = load i64, i64* %22, align 8
  %40 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %23, align 8
  %41 = add i64 %39, -1
  %42 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %40, i64 %26, i32 0, i32 0
  %43 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %43, i64 %41, i32 0, i64 %38
  %45 = load float, float* %44, align 4
  %46 = fmul float %45, 0x3FECCCCCC0000000
  %47 = icmp eq i64 %39, 0
  %48 = fcmp ult float %45, %46
  %49 = or i1 %47, %48
  br i1 %49, label %63, label %50

50:                                               ; preds = %37, %55
  %51 = phi i64 [ %59, %55 ], [ %41, %37 ]
  %52 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %21, align 8
  %53 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %52, i64 %26, i32 0, i64 %38
  store i64 %51, i64* %53, align 8
  %54 = icmp eq i64 %51, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %50
  %56 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %23, align 8
  %57 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %56, i64 %26, i32 0, i32 0
  %58 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %57, align 8
  %59 = add i64 %51, -1
  %60 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %58, i64 %59, i32 0, i64 %38
  %61 = load float, float* %60, align 4
  %62 = fcmp ult float %61, %46
  br i1 %62, label %63, label %50

63:                                               ; preds = %55, %50, %37
  %64 = add nuw nsw i64 %38, 1
  %65 = icmp eq i64 %64, 65
  br i1 %65, label %30, label %37

66:                                               ; preds = %30, %10
  %67 = getelementptr inbounds %"class.rtc::ArrayView.64", %"class.rtc::ArrayView.64"* %5, i64 0, i32 0, i32 0
  %68 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %67, align 8
  %69 = getelementptr inbounds %"class.rtc::ArrayView.64", %"class.rtc::ArrayView.64"* %5, i64 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  %72 = select i1 %71, %"struct.std::__1::array.4"* null, %"struct.std::__1::array.4"* %68
  %73 = getelementptr inbounds %"class.rtc::ArrayView.64", %"class.rtc::ArrayView.64"* %6, i64 0, i32 0, i32 0
  %74 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %73, align 8
  %75 = getelementptr inbounds %"class.rtc::ArrayView.64", %"class.rtc::ArrayView.64"* %6, i64 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  %78 = select i1 %77, %"struct.std::__1::array.4"* null, %"struct.std::__1::array.4"* %74
  tail call void @_ZN6webrtc28SignalDependentErleEstimator23UpdateCorrectionFactorsEN3rtc9ArrayViewIKfLl65EEENS2_IKNSt3__15arrayIfLm65EEELln4711EEES9_RKNS5_6vectorIbNS5_9allocatorIbEEEE(%"class.webrtc::SignalDependentErleEstimator"* %0, float* %4, %"struct.std::__1::array.4"* %72, i64 %70, %"struct.std::__1::array.4"* %78, i64 %76, %"class.std::__1::vector.66"* dereferenceable(24) %9)
  %79 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 8
  %80 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 8, i32 0, i32 1
  %81 = bitcast %"struct.std::__1::array.4"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.std::__1::vector.2"* %79 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %82, %84
  br i1 %85, label %101, label %86

86:                                               ; preds = %66
  %87 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 13, i32 0, i32 0
  %88 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %13, i64 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.rtc::ArrayView.64", %"class.rtc::ArrayView.64"* %7, i64 0, i32 0, i32 0
  %90 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %89, align 8
  %91 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 0
  %92 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %79, i64 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 7
  %94 = getelementptr inbounds %"class.rtc::ArrayView.64", %"class.rtc::ArrayView.64"* %8, i64 0, i32 0, i32 0
  %95 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %94, align 8
  %96 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 9, i32 0, i32 0
  br label %97

97:                                               ; preds = %86, %102
  %98 = phi i64 [ %84, %86 ], [ %105, %102 ]
  %99 = phi i64 [ 0, %86 ], [ %103, %102 ]
  %100 = inttoptr i64 %98 to %"struct.std::__1::array.4"*
  br label %109

101:                                              ; preds = %102, %66
  ret void

102:                                              ; preds = %149
  %103 = add nuw i64 %99, 1
  %104 = load i64, i64* %81, align 8
  %105 = load i64, i64* %83, align 8
  %106 = sub i64 %104, %105
  %107 = sdiv exact i64 %106, 260
  %108 = icmp ult i64 %103, %107
  br i1 %108, label %97, label %101

109:                                              ; preds = %152, %97
  %110 = phi %"struct.std::__1::array.4"* [ %100, %97 ], [ %153, %152 ]
  %111 = phi i64 [ 0, %97 ], [ %150, %152 ]
  %112 = load %"class.std::__1::vector.19"*, %"class.std::__1::vector.19"** %87, align 8
  %113 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %88, align 8
  %114 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %113, i64 %99, i32 0, i64 %111
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %112, i64 %99, i32 0, i32 0
  %117 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %116, align 8
  %118 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 4, i32 0, i64 %111
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %117, i64 %115, i32 0, i64 %119
  %121 = load float, float* %120, align 4
  %122 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %90, i64 %99, i32 0, i64 %111
  %123 = load float, float* %122, align 4
  %124 = fmul float %121, %123
  %125 = load float, float* %91, align 8
  %126 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 %119
  %127 = load float, float* %126, align 4
  %128 = fcmp ole float %124, %125
  %129 = fcmp oge float %124, %127
  %130 = select i1 %129, float %127, float %124
  %131 = select i1 %128, float %125, float %130
  %132 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %110, i64 %99, i32 0, i64 %111
  store float %131, float* %132, align 4
  %133 = load i8, i8* %93, align 8, !range !25
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %149, label %135

135:                                              ; preds = %109
  %136 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %95, i64 %99, i32 0, i64 %111
  %137 = load float, float* %136, align 4
  %138 = fmul float %121, %137
  %139 = load float, float* %91, align 8
  %140 = load i64, i64* %118, align 8
  %141 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 %140
  %142 = load float, float* %141, align 4
  %143 = fcmp ole float %138, %139
  %144 = fcmp oge float %138, %142
  %145 = select i1 %144, float %142, float %138
  %146 = select i1 %143, float %139, float %145
  %147 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %96, align 8
  %148 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %147, i64 %99, i32 0, i64 %111
  store float %146, float* %148, align 4
  br label %149

149:                                              ; preds = %109, %135
  %150 = add nuw nsw i64 %111, 1
  %151 = icmp eq i64 %150, 64
  br i1 %151, label %102, label %152

152:                                              ; preds = %149
  %153 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %92, align 8
  br label %109
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc28SignalDependentErleEstimator35ComputeNumberOfActiveFilterSectionsERKNS_12RenderBufferEN3rtc9ArrayViewIKNSt3__16vectorINS6_5arrayIfLm65EEENS6_9allocatorIS9_EEEELln4711EEE(%"class.webrtc::SignalDependentErleEstimator"* nocapture readonly, %"class.webrtc::RenderBuffer"* nocapture readonly dereferenceable(32), %"class.std::__1::vector.2"*, i64) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i64 %3, 0
  %6 = select i1 %5, %"class.std::__1::vector.2"* null, %"class.std::__1::vector.2"* %2
  tail call void @_ZN6webrtc28SignalDependentErleEstimator35ComputeEchoEstimatePerFilterSectionERKNS_12RenderBufferEN3rtc9ArrayViewIKNSt3__16vectorINS6_5arrayIfLm65EEENS6_9allocatorIS9_EEEELln4711EEE(%"class.webrtc::SignalDependentErleEstimator"* %0, %"class.webrtc::RenderBuffer"* dereferenceable(32) %1, %"class.std::__1::vector.2"* %6, i64 %3)
  %7 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 15
  %8 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 15, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::array"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.39"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %60, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %7, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 10, i32 0, i32 0
  br label %18

18:                                               ; preds = %24, %14
  %19 = phi i64 [ %12, %14 ], [ %27, %24 ]
  %20 = phi i64 [ 0, %14 ], [ %25, %24 ]
  %21 = inttoptr i64 %19 to %"struct.std::__1::array"*
  %22 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %21, i64 %20
  %23 = bitcast %"struct.std::__1::array"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 520, i1 false) #6
  br label %31

24:                                               ; preds = %57
  %25 = add nuw i64 %20, 1
  %26 = load i64, i64* %9, align 8
  %27 = load i64, i64* %11, align 8
  %28 = sub i64 %26, %27
  %29 = sdiv exact i64 %28, 520
  %30 = icmp ult i64 %25, %29
  br i1 %30, label %18, label %60

31:                                               ; preds = %57, %18
  %32 = phi i64 [ %58, %57 ], [ 0, %18 ]
  %33 = load i64, i64* %16, align 8
  %34 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %17, align 8
  %35 = add i64 %33, -1
  %36 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %34, i64 %20, i32 0, i32 0
  %37 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %37, i64 %35, i32 0, i64 %32
  %39 = load float, float* %38, align 4
  %40 = fmul float %39, 0x3FECCCCCC0000000
  %41 = icmp eq i64 %33, 0
  %42 = fcmp ult float %39, %40
  %43 = or i1 %41, %42
  br i1 %43, label %57, label %44

44:                                               ; preds = %31, %49
  %45 = phi i64 [ %53, %49 ], [ %35, %31 ]
  %46 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %15, align 8
  %47 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %46, i64 %20, i32 0, i64 %32
  store i64 %45, i64* %47, align 8
  %48 = icmp eq i64 %45, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %44
  %50 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %17, align 8
  %51 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %50, i64 %20, i32 0, i32 0
  %52 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %51, align 8
  %53 = add i64 %45, -1
  %54 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %52, i64 %53, i32 0, i64 %32
  %55 = load float, float* %54, align 4
  %56 = fcmp ult float %55, %40
  br i1 %56, label %57, label %44

57:                                               ; preds = %49, %44, %31
  %58 = add nuw nsw i64 %32, 1
  %59 = icmp eq i64 %58, 65
  br i1 %59, label %24, label %31

60:                                               ; preds = %24, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc28SignalDependentErleEstimator23UpdateCorrectionFactorsEN3rtc9ArrayViewIKfLl65EEENS2_IKNSt3__15arrayIfLm65EEELln4711EEES9_RKNS5_6vectorIbNS5_9allocatorIbEEEE(%"class.webrtc::SignalDependentErleEstimator"* nocapture readonly, float*, %"struct.std::__1::array.4"*, i64, %"struct.std::__1::array.4"*, i64, %"class.std::__1::vector.66"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"struct.std::__1::array.0", align 16
  %9 = alloca %"struct.std::__1::array.0", align 16
  %10 = alloca %"struct.std::__1::array.0", align 16
  %11 = alloca %"struct.std::__1::array.77", align 8
  %12 = alloca %"struct.std::__1::array.0", align 4
  %13 = alloca %"struct.std::__1::array.79", align 1
  %14 = getelementptr inbounds %"class.std::__1::vector.66", %"class.std::__1::vector.66"* %6, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %145, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.std::__1::vector.66", %"class.std::__1::vector.66"* %6, i64 0, i32 0
  %19 = bitcast %"struct.std::__1::array.0"* %8 to i8*
  %20 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %8, i64 0, i32 0, i64 0
  %21 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %8, i64 0, i32 0, i64 1
  %22 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %8, i64 0, i32 0, i64 2
  %23 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %8, i64 0, i32 0, i64 3
  %24 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %8, i64 0, i32 0, i64 4
  %25 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %8, i64 0, i32 0, i64 5
  %26 = bitcast %"struct.std::__1::array.0"* %9 to i8*
  %27 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %9, i64 0, i32 0, i64 0
  %28 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %9, i64 0, i32 0, i64 1
  %29 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %9, i64 0, i32 0, i64 2
  %30 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %9, i64 0, i32 0, i64 3
  %31 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %9, i64 0, i32 0, i64 4
  %32 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %9, i64 0, i32 0, i64 5
  %33 = bitcast %"struct.std::__1::array.0"* %10 to i8*
  %34 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %10, i64 0, i32 0, i64 0
  %35 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %10, i64 0, i32 0, i64 1
  %36 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %10, i64 0, i32 0, i64 2
  %37 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %10, i64 0, i32 0, i64 3
  %38 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %10, i64 0, i32 0, i64 4
  %39 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %10, i64 0, i32 0, i64 5
  %40 = bitcast %"struct.std::__1::array.77"* %11 to i8*
  %41 = getelementptr inbounds %"struct.std::__1::array.77", %"struct.std::__1::array.77"* %11, i64 0, i32 0, i64 0
  %42 = getelementptr inbounds %"struct.std::__1::array.77", %"struct.std::__1::array.77"* %11, i64 0, i32 0, i64 1
  %43 = getelementptr inbounds %"struct.std::__1::array.77", %"struct.std::__1::array.77"* %11, i64 0, i32 0, i64 2
  %44 = getelementptr inbounds %"struct.std::__1::array.77", %"struct.std::__1::array.77"* %11, i64 0, i32 0, i64 3
  %45 = getelementptr inbounds %"struct.std::__1::array.77", %"struct.std::__1::array.77"* %11, i64 0, i32 0, i64 4
  %46 = getelementptr inbounds %"struct.std::__1::array.77", %"struct.std::__1::array.77"* %11, i64 0, i32 0, i64 5
  %47 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 15, i32 0, i32 0
  %48 = bitcast %"struct.std::__1::array.0"* %12 to i8*
  %49 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %12, i64 0, i32 0, i64 0
  %50 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %12, i64 0, i32 0, i64 1
  %51 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %12, i64 0, i32 0, i64 2
  %52 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %12, i64 0, i32 0, i64 3
  %53 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %12, i64 0, i32 0, i64 4
  %54 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %12, i64 0, i32 0, i64 5
  %55 = getelementptr inbounds %"struct.std::__1::array.79", %"struct.std::__1::array.79"* %13, i64 0, i32 0, i64 0
  %56 = getelementptr inbounds %"struct.std::__1::array.79", %"struct.std::__1::array.79"* %13, i64 0, i32 0, i64 1
  %57 = getelementptr inbounds %"struct.std::__1::array.79", %"struct.std::__1::array.79"* %13, i64 0, i32 0, i64 2
  %58 = getelementptr inbounds %"struct.std::__1::array.79", %"struct.std::__1::array.79"* %13, i64 0, i32 0, i64 3
  %59 = getelementptr inbounds %"struct.std::__1::array.79", %"struct.std::__1::array.79"* %13, i64 0, i32 0, i64 4
  %60 = getelementptr inbounds %"struct.std::__1::array.79", %"struct.std::__1::array.79"* %13, i64 0, i32 0, i64 5
  %61 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 14, i32 0, i32 0
  %62 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 11, i32 0, i32 0
  %63 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 0
  %64 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 12, i32 0, i32 0
  %65 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 13, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %8, i64 0, i32 0, i64 3
  %67 = bitcast float* %66 to i8*
  %68 = bitcast %"struct.std::__1::array.0"* %9 to i8*
  %69 = getelementptr inbounds float, float* %1, i64 1
  %70 = bitcast %"struct.std::__1::array.0"* %10 to i8*
  %71 = getelementptr inbounds float, float* %1, i64 2
  %72 = getelementptr inbounds float, float* %1, i64 3
  %73 = getelementptr inbounds float, float* %1, i64 4
  %74 = getelementptr inbounds float, float* %1, i64 5
  %75 = getelementptr inbounds float, float* %1, i64 6
  %76 = getelementptr inbounds float, float* %1, i64 7
  %77 = getelementptr inbounds float, float* %1, i64 8
  %78 = getelementptr inbounds float, float* %1, i64 9
  %79 = getelementptr inbounds float, float* %1, i64 10
  %80 = getelementptr inbounds float, float* %1, i64 11
  %81 = getelementptr inbounds float, float* %1, i64 12
  %82 = getelementptr inbounds float, float* %1, i64 13
  %83 = getelementptr inbounds float, float* %1, i64 14
  %84 = getelementptr inbounds float, float* %1, i64 15
  %85 = getelementptr inbounds float, float* %1, i64 16
  %86 = getelementptr inbounds float, float* %1, i64 17
  %87 = getelementptr inbounds float, float* %1, i64 18
  %88 = getelementptr inbounds float, float* %1, i64 19
  %89 = getelementptr inbounds float, float* %1, i64 20
  %90 = getelementptr inbounds float, float* %1, i64 21
  %91 = getelementptr inbounds float, float* %1, i64 22
  %92 = getelementptr inbounds float, float* %1, i64 23
  %93 = getelementptr inbounds float, float* %1, i64 24
  %94 = getelementptr inbounds float, float* %1, i64 25
  %95 = getelementptr inbounds float, float* %1, i64 26
  %96 = getelementptr inbounds float, float* %1, i64 27
  %97 = getelementptr inbounds float, float* %1, i64 28
  %98 = getelementptr inbounds float, float* %1, i64 29
  %99 = getelementptr inbounds float, float* %1, i64 30
  %100 = getelementptr inbounds float, float* %1, i64 31
  %101 = getelementptr inbounds float, float* %1, i64 32
  %102 = getelementptr inbounds float, float* %1, i64 33
  %103 = getelementptr inbounds float, float* %1, i64 34
  %104 = getelementptr inbounds float, float* %1, i64 35
  %105 = getelementptr inbounds float, float* %1, i64 36
  %106 = getelementptr inbounds float, float* %1, i64 37
  %107 = getelementptr inbounds float, float* %1, i64 38
  %108 = getelementptr inbounds float, float* %1, i64 39
  %109 = getelementptr inbounds float, float* %1, i64 40
  %110 = getelementptr inbounds float, float* %1, i64 41
  %111 = getelementptr inbounds float, float* %1, i64 42
  %112 = getelementptr inbounds float, float* %1, i64 43
  %113 = getelementptr inbounds float, float* %1, i64 44
  %114 = getelementptr inbounds float, float* %1, i64 45
  %115 = getelementptr inbounds float, float* %1, i64 46
  %116 = getelementptr inbounds float, float* %1, i64 47
  %117 = getelementptr inbounds float, float* %1, i64 48
  %118 = getelementptr inbounds float, float* %1, i64 49
  %119 = getelementptr inbounds float, float* %1, i64 50
  %120 = getelementptr inbounds float, float* %1, i64 51
  %121 = getelementptr inbounds float, float* %1, i64 52
  %122 = getelementptr inbounds float, float* %1, i64 53
  %123 = getelementptr inbounds float, float* %1, i64 54
  %124 = getelementptr inbounds float, float* %1, i64 55
  %125 = getelementptr inbounds float, float* %1, i64 56
  %126 = getelementptr inbounds float, float* %1, i64 57
  %127 = getelementptr inbounds float, float* %1, i64 58
  %128 = getelementptr inbounds float, float* %1, i64 59
  %129 = getelementptr inbounds float, float* %1, i64 60
  %130 = getelementptr inbounds float, float* %1, i64 61
  %131 = getelementptr inbounds float, float* %1, i64 62
  %132 = getelementptr inbounds float, float* %1, i64 63
  %133 = getelementptr inbounds float, float* %1, i64 64
  %134 = bitcast %"struct.std::__1::array.77"* %11 to i8*
  %135 = bitcast %"struct.std::__1::array.0"* %12 to i8*
  %136 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 0
  %137 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 1
  %138 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 2
  %139 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 3
  %140 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 4
  %141 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 5
  %142 = bitcast %"struct.std::__1::array.0"* %8 to <4 x float>*
  %143 = bitcast %"struct.std::__1::array.0"* %9 to <4 x float>*
  %144 = bitcast %"struct.std::__1::array.0"* %10 to <4 x float>*
  br label %146

145:                                              ; preds = %1159, %7
  ret void

146:                                              ; preds = %17, %1159
  %147 = phi i64 [ %15, %17 ], [ %1160, %1159 ]
  %148 = phi i64 [ 0, %17 ], [ %1161, %1159 ]
  %149 = load i64*, i64** %18, align 8
  %150 = lshr i64 %148, 6
  %151 = getelementptr inbounds i64, i64* %149, i64 %150
  %152 = and i64 %148, 63
  %153 = shl i64 1, %152
  %154 = load i64, i64* %151, align 8
  %155 = and i64 %154, %153
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %1159, label %157

157:                                              ; preds = %146
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %67, i8 -1, i64 12, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %68, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %70, i8 -1, i64 24, i1 false)
  %158 = load float, float* %69, align 4
  %159 = load float, float* %71, align 4
  %160 = load float, float* %72, align 4
  %161 = load float, float* %73, align 4
  %162 = load float, float* %74, align 4
  %163 = load float, float* %75, align 4
  %164 = load float, float* %76, align 4
  %165 = load float, float* %77, align 4
  %166 = fadd float %165, 0.000000e+00
  %167 = load float, float* %78, align 4
  %168 = load float, float* %79, align 4
  %169 = load float, float* %80, align 4
  %170 = load float, float* %81, align 4
  %171 = load float, float* %82, align 4
  %172 = load float, float* %83, align 4
  %173 = load float, float* %84, align 4
  %174 = load float, float* %85, align 4
  %175 = fadd float %174, 0.000000e+00
  %176 = load float, float* %86, align 4
  %177 = load float, float* %87, align 4
  %178 = load float, float* %88, align 4
  %179 = load float, float* %89, align 4
  %180 = load float, float* %90, align 4
  %181 = load float, float* %91, align 4
  %182 = load float, float* %92, align 4
  %183 = load float, float* %93, align 4
  %184 = fadd float %183, 0.000000e+00
  %185 = load float, float* %94, align 4
  %186 = insertelement <4 x float> undef, float %158, i32 0
  %187 = insertelement <4 x float> %186, float %166, i32 1
  %188 = insertelement <4 x float> %187, float %175, i32 2
  %189 = insertelement <4 x float> %188, float %184, i32 3
  %190 = insertelement <4 x float> <float 0.000000e+00, float undef, float undef, float undef>, float %167, i32 1
  %191 = insertelement <4 x float> %190, float %176, i32 2
  %192 = insertelement <4 x float> %191, float %185, i32 3
  %193 = fadd <4 x float> %189, %192
  %194 = load float, float* %95, align 4
  %195 = insertelement <4 x float> undef, float %159, i32 0
  %196 = insertelement <4 x float> %195, float %168, i32 1
  %197 = insertelement <4 x float> %196, float %177, i32 2
  %198 = insertelement <4 x float> %197, float %194, i32 3
  %199 = fadd <4 x float> %193, %198
  %200 = load float, float* %96, align 4
  %201 = insertelement <4 x float> undef, float %160, i32 0
  %202 = insertelement <4 x float> %201, float %169, i32 1
  %203 = insertelement <4 x float> %202, float %178, i32 2
  %204 = insertelement <4 x float> %203, float %200, i32 3
  %205 = fadd <4 x float> %199, %204
  %206 = load float, float* %97, align 4
  %207 = insertelement <4 x float> undef, float %161, i32 0
  %208 = insertelement <4 x float> %207, float %170, i32 1
  %209 = insertelement <4 x float> %208, float %179, i32 2
  %210 = insertelement <4 x float> %209, float %206, i32 3
  %211 = fadd <4 x float> %205, %210
  %212 = load float, float* %98, align 4
  %213 = insertelement <4 x float> undef, float %162, i32 0
  %214 = insertelement <4 x float> %213, float %171, i32 1
  %215 = insertelement <4 x float> %214, float %180, i32 2
  %216 = insertelement <4 x float> %215, float %212, i32 3
  %217 = fadd <4 x float> %211, %216
  %218 = load float, float* %99, align 4
  %219 = insertelement <4 x float> undef, float %163, i32 0
  %220 = insertelement <4 x float> %219, float %172, i32 1
  %221 = insertelement <4 x float> %220, float %181, i32 2
  %222 = insertelement <4 x float> %221, float %218, i32 3
  %223 = fadd <4 x float> %217, %222
  %224 = load float, float* %100, align 4
  %225 = insertelement <4 x float> undef, float %164, i32 0
  %226 = insertelement <4 x float> %225, float %173, i32 1
  %227 = insertelement <4 x float> %226, float %182, i32 2
  %228 = insertelement <4 x float> %227, float %224, i32 3
  %229 = fadd <4 x float> %223, %228
  store <4 x float> %229, <4 x float>* %142, align 16
  %230 = load float, float* %101, align 4
  %231 = fadd float %230, 0.000000e+00
  %232 = load float, float* %102, align 4
  %233 = fadd float %231, %232
  %234 = load float, float* %103, align 4
  %235 = fadd float %233, %234
  %236 = load float, float* %104, align 4
  %237 = fadd float %235, %236
  %238 = load float, float* %105, align 4
  %239 = fadd float %237, %238
  %240 = load float, float* %106, align 4
  %241 = fadd float %239, %240
  %242 = load float, float* %107, align 4
  %243 = fadd float %241, %242
  %244 = load float, float* %108, align 4
  %245 = fadd float %243, %244
  %246 = load float, float* %109, align 4
  %247 = fadd float %245, %246
  %248 = load float, float* %110, align 4
  %249 = fadd float %247, %248
  %250 = load float, float* %111, align 4
  %251 = fadd float %249, %250
  %252 = load float, float* %112, align 4
  %253 = fadd float %251, %252
  %254 = load float, float* %113, align 4
  %255 = fadd float %253, %254
  %256 = load float, float* %114, align 4
  %257 = fadd float %255, %256
  %258 = load float, float* %115, align 4
  %259 = fadd float %257, %258
  %260 = load float, float* %116, align 4
  %261 = fadd float %259, %260
  store float %261, float* %24, align 16
  %262 = load float, float* %117, align 4
  %263 = fadd float %262, 0.000000e+00
  %264 = load float, float* %118, align 4
  %265 = fadd float %263, %264
  %266 = load float, float* %119, align 4
  %267 = fadd float %265, %266
  %268 = load float, float* %120, align 4
  %269 = fadd float %267, %268
  %270 = load float, float* %121, align 4
  %271 = fadd float %269, %270
  %272 = load float, float* %122, align 4
  %273 = fadd float %271, %272
  %274 = load float, float* %123, align 4
  %275 = fadd float %273, %274
  %276 = load float, float* %124, align 4
  %277 = fadd float %275, %276
  %278 = load float, float* %125, align 4
  %279 = fadd float %277, %278
  %280 = load float, float* %126, align 4
  %281 = fadd float %279, %280
  %282 = load float, float* %127, align 4
  %283 = fadd float %281, %282
  %284 = load float, float* %128, align 4
  %285 = fadd float %283, %284
  %286 = load float, float* %129, align 4
  %287 = fadd float %285, %286
  %288 = load float, float* %130, align 4
  %289 = fadd float %287, %288
  %290 = load float, float* %131, align 4
  %291 = fadd float %289, %290
  %292 = load float, float* %132, align 4
  %293 = fadd float %291, %292
  %294 = load float, float* %133, align 4
  %295 = fadd float %293, %294
  store float %295, float* %25, align 4
  %296 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 1
  %297 = load float, float* %296, align 4
  %298 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 2
  %299 = load float, float* %298, align 4
  %300 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 3
  %301 = load float, float* %300, align 4
  %302 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 4
  %303 = load float, float* %302, align 4
  %304 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 5
  %305 = load float, float* %304, align 4
  %306 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 6
  %307 = load float, float* %306, align 4
  %308 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 7
  %309 = load float, float* %308, align 4
  %310 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 8
  %311 = load float, float* %310, align 4
  %312 = fadd float %311, 0.000000e+00
  %313 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 9
  %314 = load float, float* %313, align 4
  %315 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 10
  %316 = load float, float* %315, align 4
  %317 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 11
  %318 = load float, float* %317, align 4
  %319 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 12
  %320 = load float, float* %319, align 4
  %321 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 13
  %322 = load float, float* %321, align 4
  %323 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 14
  %324 = load float, float* %323, align 4
  %325 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 15
  %326 = load float, float* %325, align 4
  %327 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 16
  %328 = load float, float* %327, align 4
  %329 = fadd float %328, 0.000000e+00
  %330 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 17
  %331 = load float, float* %330, align 4
  %332 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 18
  %333 = load float, float* %332, align 4
  %334 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 19
  %335 = load float, float* %334, align 4
  %336 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 20
  %337 = load float, float* %336, align 4
  %338 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 21
  %339 = load float, float* %338, align 4
  %340 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 22
  %341 = load float, float* %340, align 4
  %342 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 23
  %343 = load float, float* %342, align 4
  %344 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 24
  %345 = load float, float* %344, align 4
  %346 = fadd float %345, 0.000000e+00
  %347 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 25
  %348 = load float, float* %347, align 4
  %349 = insertelement <4 x float> undef, float %297, i32 0
  %350 = insertelement <4 x float> %349, float %312, i32 1
  %351 = insertelement <4 x float> %350, float %329, i32 2
  %352 = insertelement <4 x float> %351, float %346, i32 3
  %353 = insertelement <4 x float> <float 0.000000e+00, float undef, float undef, float undef>, float %314, i32 1
  %354 = insertelement <4 x float> %353, float %331, i32 2
  %355 = insertelement <4 x float> %354, float %348, i32 3
  %356 = fadd <4 x float> %352, %355
  %357 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 26
  %358 = load float, float* %357, align 4
  %359 = insertelement <4 x float> undef, float %299, i32 0
  %360 = insertelement <4 x float> %359, float %316, i32 1
  %361 = insertelement <4 x float> %360, float %333, i32 2
  %362 = insertelement <4 x float> %361, float %358, i32 3
  %363 = fadd <4 x float> %356, %362
  %364 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 27
  %365 = load float, float* %364, align 4
  %366 = insertelement <4 x float> undef, float %301, i32 0
  %367 = insertelement <4 x float> %366, float %318, i32 1
  %368 = insertelement <4 x float> %367, float %335, i32 2
  %369 = insertelement <4 x float> %368, float %365, i32 3
  %370 = fadd <4 x float> %363, %369
  %371 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 28
  %372 = load float, float* %371, align 4
  %373 = insertelement <4 x float> undef, float %303, i32 0
  %374 = insertelement <4 x float> %373, float %320, i32 1
  %375 = insertelement <4 x float> %374, float %337, i32 2
  %376 = insertelement <4 x float> %375, float %372, i32 3
  %377 = fadd <4 x float> %370, %376
  %378 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 29
  %379 = load float, float* %378, align 4
  %380 = insertelement <4 x float> undef, float %305, i32 0
  %381 = insertelement <4 x float> %380, float %322, i32 1
  %382 = insertelement <4 x float> %381, float %339, i32 2
  %383 = insertelement <4 x float> %382, float %379, i32 3
  %384 = fadd <4 x float> %377, %383
  %385 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 30
  %386 = load float, float* %385, align 4
  %387 = insertelement <4 x float> undef, float %307, i32 0
  %388 = insertelement <4 x float> %387, float %324, i32 1
  %389 = insertelement <4 x float> %388, float %341, i32 2
  %390 = insertelement <4 x float> %389, float %386, i32 3
  %391 = fadd <4 x float> %384, %390
  %392 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 31
  %393 = load float, float* %392, align 4
  %394 = insertelement <4 x float> undef, float %309, i32 0
  %395 = insertelement <4 x float> %394, float %326, i32 1
  %396 = insertelement <4 x float> %395, float %343, i32 2
  %397 = insertelement <4 x float> %396, float %393, i32 3
  %398 = fadd <4 x float> %391, %397
  store <4 x float> %398, <4 x float>* %143, align 16
  %399 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 32
  %400 = load float, float* %399, align 4
  %401 = fadd float %400, 0.000000e+00
  %402 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 33
  %403 = load float, float* %402, align 4
  %404 = fadd float %401, %403
  %405 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 34
  %406 = load float, float* %405, align 4
  %407 = fadd float %404, %406
  %408 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 35
  %409 = load float, float* %408, align 4
  %410 = fadd float %407, %409
  %411 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 36
  %412 = load float, float* %411, align 4
  %413 = fadd float %410, %412
  %414 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 37
  %415 = load float, float* %414, align 4
  %416 = fadd float %413, %415
  %417 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 38
  %418 = load float, float* %417, align 4
  %419 = fadd float %416, %418
  %420 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 39
  %421 = load float, float* %420, align 4
  %422 = fadd float %419, %421
  %423 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 40
  %424 = load float, float* %423, align 4
  %425 = fadd float %422, %424
  %426 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 41
  %427 = load float, float* %426, align 4
  %428 = fadd float %425, %427
  %429 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 42
  %430 = load float, float* %429, align 4
  %431 = fadd float %428, %430
  %432 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 43
  %433 = load float, float* %432, align 4
  %434 = fadd float %431, %433
  %435 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 44
  %436 = load float, float* %435, align 4
  %437 = fadd float %434, %436
  %438 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 45
  %439 = load float, float* %438, align 4
  %440 = fadd float %437, %439
  %441 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 46
  %442 = load float, float* %441, align 4
  %443 = fadd float %440, %442
  %444 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 47
  %445 = load float, float* %444, align 4
  %446 = fadd float %443, %445
  store float %446, float* %31, align 16
  %447 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 48
  %448 = load float, float* %447, align 4
  %449 = fadd float %448, 0.000000e+00
  %450 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 49
  %451 = load float, float* %450, align 4
  %452 = fadd float %449, %451
  %453 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 50
  %454 = load float, float* %453, align 4
  %455 = fadd float %452, %454
  %456 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 51
  %457 = load float, float* %456, align 4
  %458 = fadd float %455, %457
  %459 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 52
  %460 = load float, float* %459, align 4
  %461 = fadd float %458, %460
  %462 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 53
  %463 = load float, float* %462, align 4
  %464 = fadd float %461, %463
  %465 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 54
  %466 = load float, float* %465, align 4
  %467 = fadd float %464, %466
  %468 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 55
  %469 = load float, float* %468, align 4
  %470 = fadd float %467, %469
  %471 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 56
  %472 = load float, float* %471, align 4
  %473 = fadd float %470, %472
  %474 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 57
  %475 = load float, float* %474, align 4
  %476 = fadd float %473, %475
  %477 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 58
  %478 = load float, float* %477, align 4
  %479 = fadd float %476, %478
  %480 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 59
  %481 = load float, float* %480, align 4
  %482 = fadd float %479, %481
  %483 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 60
  %484 = load float, float* %483, align 4
  %485 = fadd float %482, %484
  %486 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 61
  %487 = load float, float* %486, align 4
  %488 = fadd float %485, %487
  %489 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 62
  %490 = load float, float* %489, align 4
  %491 = fadd float %488, %490
  %492 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 63
  %493 = load float, float* %492, align 4
  %494 = fadd float %491, %493
  %495 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %4, i64 %148, i32 0, i64 64
  %496 = load float, float* %495, align 4
  %497 = fadd float %494, %496
  store float %497, float* %32, align 4
  %498 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 1
  %499 = load float, float* %498, align 4
  %500 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 2
  %501 = load float, float* %500, align 4
  %502 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 3
  %503 = load float, float* %502, align 4
  %504 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 4
  %505 = load float, float* %504, align 4
  %506 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 5
  %507 = load float, float* %506, align 4
  %508 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 6
  %509 = load float, float* %508, align 4
  %510 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 7
  %511 = load float, float* %510, align 4
  %512 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 8
  %513 = load float, float* %512, align 4
  %514 = fadd float %513, 0.000000e+00
  %515 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 9
  %516 = load float, float* %515, align 4
  %517 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 10
  %518 = load float, float* %517, align 4
  %519 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 11
  %520 = load float, float* %519, align 4
  %521 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 12
  %522 = load float, float* %521, align 4
  %523 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 13
  %524 = load float, float* %523, align 4
  %525 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 14
  %526 = load float, float* %525, align 4
  %527 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 15
  %528 = load float, float* %527, align 4
  %529 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 16
  %530 = load float, float* %529, align 4
  %531 = fadd float %530, 0.000000e+00
  %532 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 17
  %533 = load float, float* %532, align 4
  %534 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 18
  %535 = load float, float* %534, align 4
  %536 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 19
  %537 = load float, float* %536, align 4
  %538 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 20
  %539 = load float, float* %538, align 4
  %540 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 21
  %541 = load float, float* %540, align 4
  %542 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 22
  %543 = load float, float* %542, align 4
  %544 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 23
  %545 = load float, float* %544, align 4
  %546 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 24
  %547 = load float, float* %546, align 4
  %548 = fadd float %547, 0.000000e+00
  %549 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 25
  %550 = load float, float* %549, align 4
  %551 = insertelement <4 x float> undef, float %499, i32 0
  %552 = insertelement <4 x float> %551, float %514, i32 1
  %553 = insertelement <4 x float> %552, float %531, i32 2
  %554 = insertelement <4 x float> %553, float %548, i32 3
  %555 = insertelement <4 x float> <float 0.000000e+00, float undef, float undef, float undef>, float %516, i32 1
  %556 = insertelement <4 x float> %555, float %533, i32 2
  %557 = insertelement <4 x float> %556, float %550, i32 3
  %558 = fadd <4 x float> %554, %557
  %559 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 26
  %560 = load float, float* %559, align 4
  %561 = insertelement <4 x float> undef, float %501, i32 0
  %562 = insertelement <4 x float> %561, float %518, i32 1
  %563 = insertelement <4 x float> %562, float %535, i32 2
  %564 = insertelement <4 x float> %563, float %560, i32 3
  %565 = fadd <4 x float> %558, %564
  %566 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 27
  %567 = load float, float* %566, align 4
  %568 = insertelement <4 x float> undef, float %503, i32 0
  %569 = insertelement <4 x float> %568, float %520, i32 1
  %570 = insertelement <4 x float> %569, float %537, i32 2
  %571 = insertelement <4 x float> %570, float %567, i32 3
  %572 = fadd <4 x float> %565, %571
  %573 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 28
  %574 = load float, float* %573, align 4
  %575 = insertelement <4 x float> undef, float %505, i32 0
  %576 = insertelement <4 x float> %575, float %522, i32 1
  %577 = insertelement <4 x float> %576, float %539, i32 2
  %578 = insertelement <4 x float> %577, float %574, i32 3
  %579 = fadd <4 x float> %572, %578
  %580 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 29
  %581 = load float, float* %580, align 4
  %582 = insertelement <4 x float> undef, float %507, i32 0
  %583 = insertelement <4 x float> %582, float %524, i32 1
  %584 = insertelement <4 x float> %583, float %541, i32 2
  %585 = insertelement <4 x float> %584, float %581, i32 3
  %586 = fadd <4 x float> %579, %585
  %587 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 30
  %588 = load float, float* %587, align 4
  %589 = insertelement <4 x float> undef, float %509, i32 0
  %590 = insertelement <4 x float> %589, float %526, i32 1
  %591 = insertelement <4 x float> %590, float %543, i32 2
  %592 = insertelement <4 x float> %591, float %588, i32 3
  %593 = fadd <4 x float> %586, %592
  %594 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 31
  %595 = load float, float* %594, align 4
  %596 = insertelement <4 x float> undef, float %511, i32 0
  %597 = insertelement <4 x float> %596, float %528, i32 1
  %598 = insertelement <4 x float> %597, float %545, i32 2
  %599 = insertelement <4 x float> %598, float %595, i32 3
  %600 = fadd <4 x float> %593, %599
  store <4 x float> %600, <4 x float>* %144, align 16
  %601 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 32
  %602 = load float, float* %601, align 4
  %603 = fadd float %602, 0.000000e+00
  %604 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 33
  %605 = load float, float* %604, align 4
  %606 = fadd float %603, %605
  %607 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 34
  %608 = load float, float* %607, align 4
  %609 = fadd float %606, %608
  %610 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 35
  %611 = load float, float* %610, align 4
  %612 = fadd float %609, %611
  %613 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 36
  %614 = load float, float* %613, align 4
  %615 = fadd float %612, %614
  %616 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 37
  %617 = load float, float* %616, align 4
  %618 = fadd float %615, %617
  %619 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 38
  %620 = load float, float* %619, align 4
  %621 = fadd float %618, %620
  %622 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 39
  %623 = load float, float* %622, align 4
  %624 = fadd float %621, %623
  %625 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 40
  %626 = load float, float* %625, align 4
  %627 = fadd float %624, %626
  %628 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 41
  %629 = load float, float* %628, align 4
  %630 = fadd float %627, %629
  %631 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 42
  %632 = load float, float* %631, align 4
  %633 = fadd float %630, %632
  %634 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 43
  %635 = load float, float* %634, align 4
  %636 = fadd float %633, %635
  %637 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 44
  %638 = load float, float* %637, align 4
  %639 = fadd float %636, %638
  %640 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 45
  %641 = load float, float* %640, align 4
  %642 = fadd float %639, %641
  %643 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 46
  %644 = load float, float* %643, align 4
  %645 = fadd float %642, %644
  %646 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 47
  %647 = load float, float* %646, align 4
  %648 = fadd float %645, %647
  store float %648, float* %38, align 16
  %649 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 48
  %650 = load float, float* %649, align 4
  %651 = fadd float %650, 0.000000e+00
  %652 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 49
  %653 = load float, float* %652, align 4
  %654 = fadd float %651, %653
  %655 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 50
  %656 = load float, float* %655, align 4
  %657 = fadd float %654, %656
  %658 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 51
  %659 = load float, float* %658, align 4
  %660 = fadd float %657, %659
  %661 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 52
  %662 = load float, float* %661, align 4
  %663 = fadd float %660, %662
  %664 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 53
  %665 = load float, float* %664, align 4
  %666 = fadd float %663, %665
  %667 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 54
  %668 = load float, float* %667, align 4
  %669 = fadd float %666, %668
  %670 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 55
  %671 = load float, float* %670, align 4
  %672 = fadd float %669, %671
  %673 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 56
  %674 = load float, float* %673, align 4
  %675 = fadd float %672, %674
  %676 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 57
  %677 = load float, float* %676, align 4
  %678 = fadd float %675, %677
  %679 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 58
  %680 = load float, float* %679, align 4
  %681 = fadd float %678, %680
  %682 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 59
  %683 = load float, float* %682, align 4
  %684 = fadd float %681, %683
  %685 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 60
  %686 = load float, float* %685, align 4
  %687 = fadd float %684, %686
  %688 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 61
  %689 = load float, float* %688, align 4
  %690 = fadd float %687, %689
  %691 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 62
  %692 = load float, float* %691, align 4
  %693 = fadd float %690, %692
  %694 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 63
  %695 = load float, float* %694, align 4
  %696 = fadd float %693, %695
  %697 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %2, i64 %148, i32 0, i64 64
  %698 = load float, float* %697, align 4
  %699 = fadd float %696, %698
  store float %699, float* %39, align 4
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %40) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 -86, i64 48, i1 false)
  %700 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %47, align 8
  %701 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 8
  %702 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 2
  %703 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 1
  %704 = load i64, i64* %702, align 8
  %705 = load i64, i64* %703, align 8
  %706 = icmp ult i64 %704, %705
  %707 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 3
  %708 = load i64, i64* %707, align 8
  %709 = select i1 %706, i64 %704, i64 %705
  %710 = icmp ult i64 %708, %709
  %711 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 4
  %712 = load i64, i64* %711, align 8
  %713 = select i1 %710, i64 %708, i64 %709
  %714 = icmp ult i64 %712, %713
  %715 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 5
  %716 = load i64, i64* %715, align 8
  %717 = select i1 %714, i64 %712, i64 %713
  %718 = icmp ult i64 %716, %717
  %719 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 6
  %720 = load i64, i64* %719, align 8
  %721 = select i1 %718, i64 %716, i64 %717
  %722 = icmp ult i64 %720, %721
  %723 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 7
  %724 = load i64, i64* %723, align 8
  %725 = select i1 %722, i64 %720, i64 %721
  %726 = icmp ult i64 %724, %725
  %727 = select i1 %726, i64 %724, i64 %725
  store i64 %727, i64* %41, align 8
  %728 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 16
  %729 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 9
  %730 = load i64, i64* %729, align 8
  %731 = load i64, i64* %701, align 8
  %732 = icmp ult i64 %730, %731
  %733 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 10
  %734 = load i64, i64* %733, align 8
  %735 = select i1 %732, i64 %730, i64 %731
  %736 = icmp ult i64 %734, %735
  %737 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 11
  %738 = load i64, i64* %737, align 8
  %739 = select i1 %736, i64 %734, i64 %735
  %740 = icmp ult i64 %738, %739
  %741 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 12
  %742 = load i64, i64* %741, align 8
  %743 = select i1 %740, i64 %738, i64 %739
  %744 = icmp ult i64 %742, %743
  %745 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 13
  %746 = load i64, i64* %745, align 8
  %747 = select i1 %744, i64 %742, i64 %743
  %748 = icmp ult i64 %746, %747
  %749 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 14
  %750 = load i64, i64* %749, align 8
  %751 = select i1 %748, i64 %746, i64 %747
  %752 = icmp ult i64 %750, %751
  %753 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 15
  %754 = load i64, i64* %753, align 8
  %755 = select i1 %752, i64 %750, i64 %751
  %756 = icmp ult i64 %754, %755
  %757 = select i1 %756, i64 %754, i64 %755
  store i64 %757, i64* %42, align 8
  %758 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 24
  %759 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 17
  %760 = load i64, i64* %759, align 8
  %761 = load i64, i64* %728, align 8
  %762 = icmp ult i64 %760, %761
  %763 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 18
  %764 = load i64, i64* %763, align 8
  %765 = select i1 %762, i64 %760, i64 %761
  %766 = icmp ult i64 %764, %765
  %767 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 19
  %768 = load i64, i64* %767, align 8
  %769 = select i1 %766, i64 %764, i64 %765
  %770 = icmp ult i64 %768, %769
  %771 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 20
  %772 = load i64, i64* %771, align 8
  %773 = select i1 %770, i64 %768, i64 %769
  %774 = icmp ult i64 %772, %773
  %775 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 21
  %776 = load i64, i64* %775, align 8
  %777 = select i1 %774, i64 %772, i64 %773
  %778 = icmp ult i64 %776, %777
  %779 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 22
  %780 = load i64, i64* %779, align 8
  %781 = select i1 %778, i64 %776, i64 %777
  %782 = icmp ult i64 %780, %781
  %783 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 23
  %784 = load i64, i64* %783, align 8
  %785 = select i1 %782, i64 %780, i64 %781
  %786 = icmp ult i64 %784, %785
  %787 = select i1 %786, i64 %784, i64 %785
  store i64 %787, i64* %43, align 8
  %788 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 32
  %789 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 25
  %790 = load i64, i64* %789, align 8
  %791 = load i64, i64* %758, align 8
  %792 = icmp ult i64 %790, %791
  %793 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 26
  %794 = load i64, i64* %793, align 8
  %795 = select i1 %792, i64 %790, i64 %791
  %796 = icmp ult i64 %794, %795
  %797 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 27
  %798 = load i64, i64* %797, align 8
  %799 = select i1 %796, i64 %794, i64 %795
  %800 = icmp ult i64 %798, %799
  %801 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 28
  %802 = load i64, i64* %801, align 8
  %803 = select i1 %800, i64 %798, i64 %799
  %804 = icmp ult i64 %802, %803
  %805 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 29
  %806 = load i64, i64* %805, align 8
  %807 = select i1 %804, i64 %802, i64 %803
  %808 = icmp ult i64 %806, %807
  %809 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 30
  %810 = load i64, i64* %809, align 8
  %811 = select i1 %808, i64 %806, i64 %807
  %812 = icmp ult i64 %810, %811
  %813 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 31
  %814 = load i64, i64* %813, align 8
  %815 = select i1 %812, i64 %810, i64 %811
  %816 = icmp ult i64 %814, %815
  %817 = select i1 %816, i64 %814, i64 %815
  store i64 %817, i64* %44, align 8
  %818 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 48
  %819 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 33
  %820 = load i64, i64* %819, align 8
  %821 = load i64, i64* %788, align 8
  %822 = icmp ult i64 %820, %821
  %823 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 34
  %824 = load i64, i64* %823, align 8
  %825 = select i1 %822, i64 %820, i64 %821
  %826 = icmp ult i64 %824, %825
  %827 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 35
  %828 = load i64, i64* %827, align 8
  %829 = select i1 %826, i64 %824, i64 %825
  %830 = icmp ult i64 %828, %829
  %831 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 36
  %832 = load i64, i64* %831, align 8
  %833 = select i1 %830, i64 %828, i64 %829
  %834 = icmp ult i64 %832, %833
  %835 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 37
  %836 = load i64, i64* %835, align 8
  %837 = select i1 %834, i64 %832, i64 %833
  %838 = icmp ult i64 %836, %837
  %839 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 38
  %840 = load i64, i64* %839, align 8
  %841 = select i1 %838, i64 %836, i64 %837
  %842 = icmp ult i64 %840, %841
  %843 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 39
  %844 = load i64, i64* %843, align 8
  %845 = select i1 %842, i64 %840, i64 %841
  %846 = icmp ult i64 %844, %845
  %847 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 40
  %848 = load i64, i64* %847, align 8
  %849 = select i1 %846, i64 %844, i64 %845
  %850 = icmp ult i64 %848, %849
  %851 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 41
  %852 = load i64, i64* %851, align 8
  %853 = select i1 %850, i64 %848, i64 %849
  %854 = icmp ult i64 %852, %853
  %855 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 42
  %856 = load i64, i64* %855, align 8
  %857 = select i1 %854, i64 %852, i64 %853
  %858 = icmp ult i64 %856, %857
  %859 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 43
  %860 = load i64, i64* %859, align 8
  %861 = select i1 %858, i64 %856, i64 %857
  %862 = icmp ult i64 %860, %861
  %863 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 44
  %864 = load i64, i64* %863, align 8
  %865 = select i1 %862, i64 %860, i64 %861
  %866 = icmp ult i64 %864, %865
  %867 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 45
  %868 = load i64, i64* %867, align 8
  %869 = select i1 %866, i64 %864, i64 %865
  %870 = icmp ult i64 %868, %869
  %871 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 46
  %872 = load i64, i64* %871, align 8
  %873 = select i1 %870, i64 %868, i64 %869
  %874 = icmp ult i64 %872, %873
  %875 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 47
  %876 = load i64, i64* %875, align 8
  %877 = select i1 %874, i64 %872, i64 %873
  %878 = icmp ult i64 %876, %877
  %879 = select i1 %878, i64 %876, i64 %877
  store i64 %879, i64* %45, align 8
  %880 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 49
  %881 = load i64, i64* %880, align 8
  %882 = load i64, i64* %818, align 8
  %883 = icmp ult i64 %881, %882
  %884 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 50
  %885 = load i64, i64* %884, align 8
  %886 = select i1 %883, i64 %881, i64 %882
  %887 = icmp ult i64 %885, %886
  %888 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 51
  %889 = load i64, i64* %888, align 8
  %890 = select i1 %887, i64 %885, i64 %886
  %891 = icmp ult i64 %889, %890
  %892 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 52
  %893 = load i64, i64* %892, align 8
  %894 = select i1 %891, i64 %889, i64 %890
  %895 = icmp ult i64 %893, %894
  %896 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 53
  %897 = load i64, i64* %896, align 8
  %898 = select i1 %895, i64 %893, i64 %894
  %899 = icmp ult i64 %897, %898
  %900 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 54
  %901 = load i64, i64* %900, align 8
  %902 = select i1 %899, i64 %897, i64 %898
  %903 = icmp ult i64 %901, %902
  %904 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 55
  %905 = load i64, i64* %904, align 8
  %906 = select i1 %903, i64 %901, i64 %902
  %907 = icmp ult i64 %905, %906
  %908 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 56
  %909 = load i64, i64* %908, align 8
  %910 = select i1 %907, i64 %905, i64 %906
  %911 = icmp ult i64 %909, %910
  %912 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 57
  %913 = load i64, i64* %912, align 8
  %914 = select i1 %911, i64 %909, i64 %910
  %915 = icmp ult i64 %913, %914
  %916 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 58
  %917 = load i64, i64* %916, align 8
  %918 = select i1 %915, i64 %913, i64 %914
  %919 = icmp ult i64 %917, %918
  %920 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 59
  %921 = load i64, i64* %920, align 8
  %922 = select i1 %919, i64 %917, i64 %918
  %923 = icmp ult i64 %921, %922
  %924 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 60
  %925 = load i64, i64* %924, align 8
  %926 = select i1 %923, i64 %921, i64 %922
  %927 = icmp ult i64 %925, %926
  %928 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 61
  %929 = load i64, i64* %928, align 8
  %930 = select i1 %927, i64 %925, i64 %926
  %931 = icmp ult i64 %929, %930
  %932 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 62
  %933 = load i64, i64* %932, align 8
  %934 = select i1 %931, i64 %929, i64 %930
  %935 = icmp ult i64 %933, %934
  %936 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 63
  %937 = load i64, i64* %936, align 8
  %938 = select i1 %935, i64 %933, i64 %934
  %939 = icmp ult i64 %937, %938
  %940 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %700, i64 %148, i32 0, i64 64
  %941 = load i64, i64* %940, align 8
  %942 = select i1 %939, i64 %937, i64 %938
  %943 = icmp ult i64 %941, %942
  %944 = select i1 %943, i64 %941, i64 %942
  store i64 %944, i64* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #6
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %55) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %55, i8 0, i64 6, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %135, i8 0, i64 24, i1 false)
  %945 = load float, float* %20, align 16
  %946 = fcmp ogt float %945, 0x4184FCEEE0000000
  br i1 %946, label %947, label %957

947:                                              ; preds = %157
  %948 = load float, float* %27, align 16
  %949 = fcmp ogt float %948, 0.000000e+00
  br i1 %949, label %950, label %957

950:                                              ; preds = %947
  %951 = load float, float* %34, align 16
  %952 = fdiv float %951, %948
  store float %952, float* %49, align 4
  store i8 1, i8* %55, align 1
  %953 = load %"struct.std::__1::array.33"*, %"struct.std::__1::array.33"** %61, align 8
  %954 = getelementptr inbounds %"struct.std::__1::array.33", %"struct.std::__1::array.33"* %953, i64 %148, i32 0, i64 0
  %955 = load i32, i32* %954, align 4
  %956 = add nsw i32 %955, 1
  store i32 %956, i32* %954, align 4
  br label %957

957:                                              ; preds = %157, %947, %950
  %958 = phi i8 [ 0, %157 ], [ 0, %947 ], [ 1, %950 ]
  %959 = phi float [ 0.000000e+00, %157 ], [ 0.000000e+00, %947 ], [ %952, %950 ]
  %960 = load float, float* %21, align 4
  %961 = fcmp ogt float %960, 0x4184FCEEE0000000
  br i1 %961, label %1163, label %1173

962:                                              ; preds = %1222, %994
  %963 = phi i8 [ %1000, %994 ], [ %958, %1222 ]
  %964 = phi float [ %998, %994 ], [ %959, %1222 ]
  %965 = phi i64 [ %996, %994 ], [ %727, %1222 ]
  %966 = phi i64 [ %992, %994 ], [ 0, %1222 ]
  %967 = load %"class.std::__1::vector.19"*, %"class.std::__1::vector.19"** %62, align 8
  %968 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %967, i64 %148, i32 0, i32 0
  %969 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %968, align 8
  %970 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %969, i64 %965, i32 0, i64 %966
  %971 = load float, float* %970, align 4
  %972 = fcmp ogt float %964, %971
  %973 = select i1 %972, float 0x3FA99999A0000000, float 0x3FB99999A0000000
  %974 = icmp ne i8 %963, 0
  %975 = uitofp i1 %974 to float
  %976 = fmul float %973, %975
  %977 = fsub float %964, %971
  %978 = fmul float %977, %976
  %979 = fadd float %971, %978
  store float %979, float* %970, align 4
  %980 = load %"class.std::__1::vector.19"*, %"class.std::__1::vector.19"** %62, align 8
  %981 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %980, i64 %148, i32 0, i32 0
  %982 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %981, align 8
  %983 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %982, i64 %965, i32 0, i64 %966
  %984 = load float, float* %983, align 4
  %985 = load float, float* %63, align 8
  %986 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 5, i32 0, i64 %966
  %987 = load float, float* %986, align 4
  %988 = fcmp ole float %984, %985
  %989 = fcmp oge float %984, %987
  %990 = select i1 %989, float %987, float %984
  %991 = select i1 %988, float %985, float %990
  store float %991, float* %983, align 4
  %992 = add nuw nsw i64 %966, 1
  %993 = icmp eq i64 %992, 6
  br i1 %993, label %1001, label %994

994:                                              ; preds = %962
  %995 = getelementptr inbounds %"struct.std::__1::array.77", %"struct.std::__1::array.77"* %11, i64 0, i32 0, i64 %992
  %996 = load i64, i64* %995, align 8
  %997 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %12, i64 0, i32 0, i64 %992
  %998 = load float, float* %997, align 4
  %999 = getelementptr inbounds %"struct.std::__1::array.79", %"struct.std::__1::array.79"* %13, i64 0, i32 0, i64 %992
  %1000 = load i8, i8* %999, align 1, !range !25
  br label %962

1001:                                             ; preds = %962
  %1002 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %64, align 8
  %1003 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %1002, i64 %148, i32 0, i64 0
  %1004 = load float, float* %1003, align 4
  %1005 = fcmp ogt float %959, %1004
  %1006 = select i1 %1005, float 0x3FA99999A0000000, float 0x3FB99999A0000000
  %1007 = icmp ne i8 %958, 0
  %1008 = uitofp i1 %1007 to float
  %1009 = fmul float %1006, %1008
  %1010 = fsub float %959, %1004
  %1011 = fmul float %1010, %1009
  %1012 = fadd float %1004, %1011
  store float %1012, float* %1003, align 4
  %1013 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %64, align 8
  %1014 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %1013, i64 %148, i32 0, i64 0
  %1015 = load float, float* %1014, align 4
  %1016 = load float, float* %63, align 8
  %1017 = load float, float* %136, align 4
  %1018 = fcmp ole float %1015, %1016
  %1019 = fcmp oge float %1015, %1017
  %1020 = select i1 %1019, float %1017, float %1015
  %1021 = select i1 %1018, float %1016, float %1020
  store float %1021, float* %1014, align 4
  %1022 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %64, align 8
  %1023 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %1022, i64 %148, i32 0, i64 1
  %1024 = load float, float* %1023, align 4
  %1025 = fcmp ogt float %1175, %1024
  %1026 = select i1 %1025, float 0x3FA99999A0000000, float 0x3FB99999A0000000
  %1027 = icmp ne i8 %1174, 0
  %1028 = uitofp i1 %1027 to float
  %1029 = fmul float %1026, %1028
  %1030 = fsub float %1175, %1024
  %1031 = fmul float %1030, %1029
  %1032 = fadd float %1024, %1031
  store float %1032, float* %1023, align 4
  %1033 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %64, align 8
  %1034 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %1033, i64 %148, i32 0, i64 1
  %1035 = load float, float* %1034, align 4
  %1036 = load float, float* %63, align 8
  %1037 = load float, float* %137, align 4
  %1038 = fcmp ole float %1035, %1036
  %1039 = fcmp oge float %1035, %1037
  %1040 = select i1 %1039, float %1037, float %1035
  %1041 = select i1 %1038, float %1036, float %1040
  store float %1041, float* %1034, align 4
  %1042 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %64, align 8
  %1043 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %1042, i64 %148, i32 0, i64 2
  %1044 = load float, float* %1043, align 4
  %1045 = fcmp ogt float %1190, %1044
  %1046 = select i1 %1045, float 0x3FA99999A0000000, float 0x3FB99999A0000000
  %1047 = icmp ne i8 %1189, 0
  %1048 = uitofp i1 %1047 to float
  %1049 = fmul float %1046, %1048
  %1050 = fsub float %1190, %1044
  %1051 = fmul float %1050, %1049
  %1052 = fadd float %1044, %1051
  store float %1052, float* %1043, align 4
  %1053 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %64, align 8
  %1054 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %1053, i64 %148, i32 0, i64 2
  %1055 = load float, float* %1054, align 4
  %1056 = load float, float* %63, align 8
  %1057 = load float, float* %138, align 4
  %1058 = fcmp ole float %1055, %1056
  %1059 = fcmp oge float %1055, %1057
  %1060 = select i1 %1059, float %1057, float %1055
  %1061 = select i1 %1058, float %1056, float %1060
  store float %1061, float* %1054, align 4
  %1062 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %64, align 8
  %1063 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %1062, i64 %148, i32 0, i64 3
  %1064 = load float, float* %1063, align 4
  %1065 = fcmp ogt float %1205, %1064
  %1066 = select i1 %1065, float 0x3FA99999A0000000, float 0x3FB99999A0000000
  %1067 = icmp ne i8 %1204, 0
  %1068 = uitofp i1 %1067 to float
  %1069 = fmul float %1066, %1068
  %1070 = fsub float %1205, %1064
  %1071 = fmul float %1070, %1069
  %1072 = fadd float %1064, %1071
  store float %1072, float* %1063, align 4
  %1073 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %64, align 8
  %1074 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %1073, i64 %148, i32 0, i64 3
  %1075 = load float, float* %1074, align 4
  %1076 = load float, float* %63, align 8
  %1077 = load float, float* %139, align 4
  %1078 = fcmp ole float %1075, %1076
  %1079 = fcmp oge float %1075, %1077
  %1080 = select i1 %1079, float %1077, float %1075
  %1081 = select i1 %1078, float %1076, float %1080
  store float %1081, float* %1074, align 4
  %1082 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %64, align 8
  %1083 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %1082, i64 %148, i32 0, i64 4
  %1084 = load float, float* %1083, align 4
  %1085 = fcmp ogt float %1219, %1084
  %1086 = select i1 %1085, float 0x3FA99999A0000000, float 0x3FB99999A0000000
  %1087 = icmp ne i8 %1218, 0
  %1088 = uitofp i1 %1087 to float
  %1089 = fmul float %1086, %1088
  %1090 = fsub float %1219, %1084
  %1091 = fmul float %1090, %1089
  %1092 = fadd float %1084, %1091
  store float %1092, float* %1083, align 4
  %1093 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %64, align 8
  %1094 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %1093, i64 %148, i32 0, i64 4
  %1095 = load float, float* %1094, align 4
  %1096 = load float, float* %63, align 8
  %1097 = load float, float* %140, align 4
  %1098 = fcmp ole float %1095, %1096
  %1099 = fcmp oge float %1095, %1097
  %1100 = select i1 %1099, float %1097, float %1095
  %1101 = select i1 %1098, float %1096, float %1100
  store float %1101, float* %1094, align 4
  %1102 = load float, float* %54, align 4
  %1103 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %64, align 8
  %1104 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %1103, i64 %148, i32 0, i64 5
  %1105 = load float, float* %1104, align 4
  %1106 = fcmp ogt float %1102, %1105
  %1107 = select i1 %1106, float 0x3FA99999A0000000, float 0x3FB99999A0000000
  %1108 = load i8, i8* %60, align 1, !range !25
  %1109 = icmp ne i8 %1108, 0
  %1110 = uitofp i1 %1109 to float
  %1111 = fmul float %1107, %1110
  %1112 = fsub float %1102, %1105
  %1113 = fmul float %1112, %1111
  %1114 = fadd float %1105, %1113
  store float %1114, float* %1104, align 4
  %1115 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %64, align 8
  %1116 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %1115, i64 %148, i32 0, i64 5
  %1117 = load float, float* %1116, align 4
  %1118 = load float, float* %63, align 8
  %1119 = load float, float* %141, align 4
  %1120 = fcmp ole float %1117, %1118
  %1121 = fcmp oge float %1117, %1119
  %1122 = select i1 %1121, float %1119, float %1117
  %1123 = select i1 %1120, float %1118, float %1122
  store float %1123, float* %1116, align 4
  br label %1126

1124:                                             ; preds = %1156
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %55) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %40) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #6
  %1125 = load i64, i64* %14, align 8
  br label %1159

1126:                                             ; preds = %1156, %1001
  %1127 = phi i64 [ %1157, %1156 ], [ 0, %1001 ]
  %1128 = getelementptr inbounds %"struct.std::__1::array.79", %"struct.std::__1::array.79"* %13, i64 0, i32 0, i64 %1127
  %1129 = load i8, i8* %1128, align 1, !range !25
  %1130 = icmp eq i8 %1129, 0
  br i1 %1130, label %1156, label %1131

1131:                                             ; preds = %1126
  %1132 = load %"struct.std::__1::array.33"*, %"struct.std::__1::array.33"** %61, align 8
  %1133 = getelementptr inbounds %"struct.std::__1::array.33", %"struct.std::__1::array.33"* %1132, i64 %148, i32 0, i64 %1127
  %1134 = load i32, i32* %1133, align 4
  %1135 = icmp sgt i32 %1134, 50
  br i1 %1135, label %1136, label %1156

1136:                                             ; preds = %1131
  %1137 = getelementptr inbounds %"struct.std::__1::array.77", %"struct.std::__1::array.77"* %11, i64 0, i32 0, i64 %1127
  %1138 = load i64, i64* %1137, align 8
  %1139 = load %"class.std::__1::vector.19"*, %"class.std::__1::vector.19"** %62, align 8
  %1140 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %1139, i64 %148, i32 0, i32 0
  %1141 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %1140, align 8
  %1142 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %1141, i64 %1138, i32 0, i64 %1127
  %1143 = load float, float* %1142, align 4
  %1144 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %64, align 8
  %1145 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %1144, i64 %148, i32 0, i64 %1127
  %1146 = load float, float* %1145, align 4
  %1147 = fdiv float %1143, %1146
  %1148 = load %"class.std::__1::vector.19"*, %"class.std::__1::vector.19"** %65, align 8
  %1149 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %1148, i64 %148, i32 0, i32 0
  %1150 = load %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"** %1149, align 8
  %1151 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %1150, i64 %1138, i32 0, i64 %1127
  %1152 = load float, float* %1151, align 4
  %1153 = fsub float %1147, %1152
  %1154 = fmul float %1153, 0x3FB99999A0000000
  %1155 = fadd float %1152, %1154
  store float %1155, float* %1151, align 4
  br label %1156

1156:                                             ; preds = %1126, %1136, %1131
  %1157 = add nuw nsw i64 %1127, 1
  %1158 = icmp eq i64 %1157, 6
  br i1 %1158, label %1124, label %1126

1159:                                             ; preds = %146, %1124
  %1160 = phi i64 [ %147, %146 ], [ %1125, %1124 ]
  %1161 = add nuw i64 %148, 1
  %1162 = icmp ult i64 %1161, %1160
  br i1 %1162, label %146, label %145

1163:                                             ; preds = %957
  %1164 = load float, float* %28, align 4
  %1165 = fcmp ogt float %1164, 0.000000e+00
  br i1 %1165, label %1166, label %1173

1166:                                             ; preds = %1163
  %1167 = load float, float* %35, align 4
  %1168 = fdiv float %1167, %1164
  store float %1168, float* %50, align 4
  store i8 1, i8* %56, align 1
  %1169 = load %"struct.std::__1::array.33"*, %"struct.std::__1::array.33"** %61, align 8
  %1170 = getelementptr inbounds %"struct.std::__1::array.33", %"struct.std::__1::array.33"* %1169, i64 %148, i32 0, i64 1
  %1171 = load i32, i32* %1170, align 4
  %1172 = add nsw i32 %1171, 1
  store i32 %1172, i32* %1170, align 4
  br label %1173

1173:                                             ; preds = %1166, %1163, %957
  %1174 = phi i8 [ 1, %1166 ], [ 0, %1163 ], [ 0, %957 ]
  %1175 = phi float [ %1168, %1166 ], [ 0.000000e+00, %1163 ], [ 0.000000e+00, %957 ]
  %1176 = load float, float* %22, align 8
  %1177 = fcmp ogt float %1176, 0x4184FCEEE0000000
  br i1 %1177, label %1178, label %1188

1178:                                             ; preds = %1173
  %1179 = load float, float* %29, align 8
  %1180 = fcmp ogt float %1179, 0.000000e+00
  br i1 %1180, label %1181, label %1188

1181:                                             ; preds = %1178
  %1182 = load float, float* %36, align 8
  %1183 = fdiv float %1182, %1179
  store float %1183, float* %51, align 4
  store i8 1, i8* %57, align 1
  %1184 = load %"struct.std::__1::array.33"*, %"struct.std::__1::array.33"** %61, align 8
  %1185 = getelementptr inbounds %"struct.std::__1::array.33", %"struct.std::__1::array.33"* %1184, i64 %148, i32 0, i64 2
  %1186 = load i32, i32* %1185, align 4
  %1187 = add nsw i32 %1186, 1
  store i32 %1187, i32* %1185, align 4
  br label %1188

1188:                                             ; preds = %1181, %1178, %1173
  %1189 = phi i8 [ 1, %1181 ], [ 0, %1178 ], [ 0, %1173 ]
  %1190 = phi float [ %1183, %1181 ], [ 0.000000e+00, %1178 ], [ 0.000000e+00, %1173 ]
  %1191 = load float, float* %23, align 4
  %1192 = fcmp ogt float %1191, 0x4184FCEEE0000000
  br i1 %1192, label %1193, label %1203

1193:                                             ; preds = %1188
  %1194 = load float, float* %30, align 4
  %1195 = fcmp ogt float %1194, 0.000000e+00
  br i1 %1195, label %1196, label %1203

1196:                                             ; preds = %1193
  %1197 = load float, float* %37, align 4
  %1198 = fdiv float %1197, %1194
  store float %1198, float* %52, align 4
  store i8 1, i8* %58, align 1
  %1199 = load %"struct.std::__1::array.33"*, %"struct.std::__1::array.33"** %61, align 8
  %1200 = getelementptr inbounds %"struct.std::__1::array.33", %"struct.std::__1::array.33"* %1199, i64 %148, i32 0, i64 3
  %1201 = load i32, i32* %1200, align 4
  %1202 = add nsw i32 %1201, 1
  store i32 %1202, i32* %1200, align 4
  br label %1203

1203:                                             ; preds = %1196, %1193, %1188
  %1204 = phi i8 [ 1, %1196 ], [ 0, %1193 ], [ 0, %1188 ]
  %1205 = phi float [ %1198, %1196 ], [ 0.000000e+00, %1193 ], [ 0.000000e+00, %1188 ]
  %1206 = load float, float* %24, align 16
  %1207 = fcmp ogt float %1206, 0x4184FCEEE0000000
  br i1 %1207, label %1208, label %1217

1208:                                             ; preds = %1203
  %1209 = load float, float* %31, align 16
  %1210 = fcmp ogt float %1209, 0.000000e+00
  br i1 %1210, label %1211, label %1217

1211:                                             ; preds = %1208
  %1212 = fdiv float %648, %1209
  store float %1212, float* %53, align 4
  store i8 1, i8* %59, align 1
  %1213 = load %"struct.std::__1::array.33"*, %"struct.std::__1::array.33"** %61, align 8
  %1214 = getelementptr inbounds %"struct.std::__1::array.33", %"struct.std::__1::array.33"* %1213, i64 %148, i32 0, i64 4
  %1215 = load i32, i32* %1214, align 4
  %1216 = add nsw i32 %1215, 1
  store i32 %1216, i32* %1214, align 4
  br label %1217

1217:                                             ; preds = %1211, %1208, %1203
  %1218 = phi i8 [ 1, %1211 ], [ 0, %1208 ], [ 0, %1203 ]
  %1219 = phi float [ %1212, %1211 ], [ 0.000000e+00, %1208 ], [ 0.000000e+00, %1203 ]
  %1220 = load float, float* %25, align 4
  %1221 = fcmp ogt float %1220, 0x4184FCEEE0000000
  br i1 %1221, label %1223, label %1222

1222:                                             ; preds = %1226, %1223, %1217
  br label %962

1223:                                             ; preds = %1217
  %1224 = load float, float* %32, align 4
  %1225 = fcmp ogt float %1224, 0.000000e+00
  br i1 %1225, label %1226, label %1222

1226:                                             ; preds = %1223
  %1227 = fdiv float %699, %1224
  store float %1227, float* %54, align 4
  store i8 1, i8* %60, align 1
  %1228 = load %"struct.std::__1::array.33"*, %"struct.std::__1::array.33"** %61, align 8
  %1229 = getelementptr inbounds %"struct.std::__1::array.33", %"struct.std::__1::array.33"* %1228, i64 %148, i32 0, i64 5
  %1230 = load i32, i32* %1229, align 4
  %1231 = add nsw i32 %1230, 1
  store i32 %1231, i32* %1229, align 4
  br label %1222
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden void @_ZNK6webrtc28SignalDependentErleEstimator4DumpERKNSt3__110unique_ptrINS_13ApmDataDumperENS1_14default_deleteIS3_EEEE(%"class.webrtc::SignalDependentErleEstimator"* nocapture, %"class.std::__1::unique_ptr"* nocapture dereferenceable(8)) local_unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc28SignalDependentErleEstimator35ComputeEchoEstimatePerFilterSectionERKNS_12RenderBufferEN3rtc9ArrayViewIKNSt3__16vectorINS6_5arrayIfLm65EEENS6_9allocatorIS9_EEEELln4711EEE(%"class.webrtc::SignalDependentErleEstimator"* nocapture readonly, %"class.webrtc::RenderBuffer"* nocapture readonly dereferenceable(32), %"class.std::__1::vector.2"*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.std::__1::array.4", align 16
  %6 = bitcast %"struct.std::__1::array.4"* %5 to i8*
  %7 = alloca %"struct.std::__1::array.4", align 16
  %8 = bitcast %"struct.std::__1::array.4"* %7 to i8*
  %9 = getelementptr inbounds %"class.webrtc::RenderBuffer", %"class.webrtc::RenderBuffer"* %1, i64 0, i32 1
  %10 = load %"struct.webrtc::SpectrumBuffer"*, %"struct.webrtc::SpectrumBuffer"** %9, align 8
  %11 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %12, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::array.4"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.2"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 260
  %20 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 10
  %21 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 10, i32 0, i32 1
  %22 = bitcast %"class.std::__1::vector.2"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.10"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = sdiv exact i64 %26, 24
  %28 = uitofp i64 %19 to float
  %29 = fdiv float 1.000000e+00, %28
  %30 = icmp eq i64 %26, 0
  br i1 %30, label %162, label %31

31:                                               ; preds = %4
  %32 = getelementptr inbounds %"class.webrtc::RenderBuffer", %"class.webrtc::RenderBuffer"* %1, i64 0, i32 2
  %33 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 6, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %10, i64 0, i32 0
  %35 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 0
  %37 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 0
  %38 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 65
  %39 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 65
  %40 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %20, i64 0, i32 0, i32 0
  %41 = load i64, i64* %35, align 8
  %42 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 1
  %43 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 1
  %44 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 64
  %46 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 64
  %47 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 0
  %48 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 64
  %49 = bitcast %"struct.std::__1::array.4"* %7 to <4 x float>*
  %50 = bitcast %"struct.std::__1::array.4"* %7 to <4 x float>*
  %51 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 4
  %52 = bitcast float* %51 to <4 x float>*
  %53 = bitcast float* %51 to <4 x float>*
  %54 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 8
  %55 = bitcast float* %54 to <4 x float>*
  %56 = bitcast float* %54 to <4 x float>*
  %57 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 12
  %58 = bitcast float* %57 to <4 x float>*
  %59 = bitcast float* %57 to <4 x float>*
  %60 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 16
  %61 = bitcast float* %60 to <4 x float>*
  %62 = bitcast float* %60 to <4 x float>*
  %63 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 20
  %64 = bitcast float* %63 to <4 x float>*
  %65 = bitcast float* %63 to <4 x float>*
  %66 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 24
  %67 = bitcast float* %66 to <4 x float>*
  %68 = bitcast float* %66 to <4 x float>*
  %69 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 28
  %70 = bitcast float* %69 to <4 x float>*
  %71 = bitcast float* %69 to <4 x float>*
  %72 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 32
  %73 = bitcast float* %72 to <4 x float>*
  %74 = bitcast float* %72 to <4 x float>*
  %75 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 36
  %76 = bitcast float* %75 to <4 x float>*
  %77 = bitcast float* %75 to <4 x float>*
  %78 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 40
  %79 = bitcast float* %78 to <4 x float>*
  %80 = bitcast float* %78 to <4 x float>*
  %81 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 44
  %82 = bitcast float* %81 to <4 x float>*
  %83 = bitcast float* %81 to <4 x float>*
  %84 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 48
  %85 = bitcast float* %84 to <4 x float>*
  %86 = bitcast float* %84 to <4 x float>*
  %87 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 52
  %88 = bitcast float* %87 to <4 x float>*
  %89 = bitcast float* %87 to <4 x float>*
  %90 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 56
  %91 = bitcast float* %90 to <4 x float>*
  %92 = bitcast float* %90 to <4 x float>*
  %93 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 60
  %94 = bitcast float* %93 to <4 x float>*
  %95 = bitcast float* %93 to <4 x float>*
  %96 = ptrtoint float* %45 to i64
  %97 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 64
  %98 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 64
  %99 = bitcast %"struct.std::__1::array.4"* %5 to <4 x float>*
  %100 = bitcast %"struct.std::__1::array.4"* %7 to <4 x float>*
  %101 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 4
  %102 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 4
  %103 = bitcast float* %102 to <4 x float>*
  %104 = bitcast float* %101 to <4 x float>*
  %105 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 8
  %106 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 8
  %107 = bitcast float* %106 to <4 x float>*
  %108 = bitcast float* %105 to <4 x float>*
  %109 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 12
  %110 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 12
  %111 = bitcast float* %110 to <4 x float>*
  %112 = bitcast float* %109 to <4 x float>*
  %113 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 16
  %114 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 16
  %115 = bitcast float* %114 to <4 x float>*
  %116 = bitcast float* %113 to <4 x float>*
  %117 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 20
  %118 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 20
  %119 = bitcast float* %118 to <4 x float>*
  %120 = bitcast float* %117 to <4 x float>*
  %121 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 24
  %122 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 24
  %123 = bitcast float* %122 to <4 x float>*
  %124 = bitcast float* %121 to <4 x float>*
  %125 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 28
  %126 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 28
  %127 = bitcast float* %126 to <4 x float>*
  %128 = bitcast float* %125 to <4 x float>*
  %129 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 32
  %130 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 32
  %131 = bitcast float* %130 to <4 x float>*
  %132 = bitcast float* %129 to <4 x float>*
  %133 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 36
  %134 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 36
  %135 = bitcast float* %134 to <4 x float>*
  %136 = bitcast float* %133 to <4 x float>*
  %137 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 40
  %138 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 40
  %139 = bitcast float* %138 to <4 x float>*
  %140 = bitcast float* %137 to <4 x float>*
  %141 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 44
  %142 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 44
  %143 = bitcast float* %142 to <4 x float>*
  %144 = bitcast float* %141 to <4 x float>*
  %145 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 48
  %146 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 48
  %147 = bitcast float* %146 to <4 x float>*
  %148 = bitcast float* %145 to <4 x float>*
  %149 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 52
  %150 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 52
  %151 = bitcast float* %150 to <4 x float>*
  %152 = bitcast float* %149 to <4 x float>*
  %153 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 56
  %154 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 56
  %155 = bitcast float* %154 to <4 x float>*
  %156 = bitcast float* %153 to <4 x float>*
  %157 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %7, i64 0, i32 0, i64 60
  %158 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 60
  %159 = bitcast float* %158 to <4 x float>*
  %160 = bitcast float* %157 to <4 x float>*
  %161 = ptrtoint float* %46 to i64
  br label %163

162:                                              ; preds = %574, %4
  ret void

163:                                              ; preds = %31, %574
  %164 = phi i64 [ %41, %31 ], [ %575, %574 ]
  %165 = phi i64 [ 0, %31 ], [ %576, %574 ]
  %166 = load i32, i32* %34, align 8
  %167 = icmp eq i64 %164, 0
  br i1 %167, label %184, label %168

168:                                              ; preds = %163
  %169 = load %"struct.webrtc::FftBuffer"*, %"struct.webrtc::FftBuffer"** %32, align 8
  %170 = getelementptr inbounds %"struct.webrtc::FftBuffer", %"struct.webrtc::FftBuffer"* %169, i64 0, i32 3
  %171 = load i32, i32* %170, align 4
  %172 = load i64*, i64** %33, align 8
  %173 = load i64, i64* %172, align 8
  %174 = trunc i64 %173 to i32
  %175 = add i32 %171, %174
  %176 = add i32 %175, %166
  %177 = srem i32 %176, %166
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %2, i64 %165
  %180 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %2, i64 %165, i32 0, i32 1
  %181 = bitcast %"struct.std::__1::array.4"** %180 to i64*
  %182 = bitcast %"class.std::__1::vector.2"* %179 to i64*
  %183 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %179, i64 0, i32 0, i32 0
  br label %187

184:                                              ; preds = %374, %163
  %185 = phi i64 [ %164, %163 ], [ %375, %374 ]
  %186 = icmp ugt i64 %185, 1
  br i1 %186, label %578, label %574

187:                                              ; preds = %377, %168
  %188 = phi i64* [ %172, %168 ], [ %378, %377 ]
  %189 = phi i64 [ 0, %168 ], [ %192, %377 ]
  %190 = phi i64 [ %178, %168 ], [ %221, %377 ]
  %191 = add i64 %189, 1
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %6) #6
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 260, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 260, i1 false)
  %192 = add nuw i64 %189, 1
  %193 = getelementptr inbounds i64, i64* %188, i64 %192
  %194 = load i64, i64* %181, align 8
  %195 = load i64, i64* %182, align 8
  %196 = sub i64 %194, %195
  %197 = sdiv exact i64 %196, 260
  %198 = load i64, i64* %193, align 8
  %199 = icmp ult i64 %197, %198
  %200 = select i1 %199, i64 %197, i64 %198
  %201 = getelementptr inbounds i64, i64* %188, i64 %189
  %202 = load i64, i64* %201, align 8
  %203 = icmp ult i64 %202, %200
  br i1 %203, label %204, label %220

204:                                              ; preds = %187
  %205 = add nuw i64 %202, 1
  br label %206

206:                                              ; preds = %204, %527
  %207 = phi i64 [ 0, %204 ], [ %538, %527 ]
  %208 = phi i64 [ %202, %204 ], [ %536, %527 ]
  %209 = phi i64 [ %190, %204 ], [ %535, %527 ]
  %210 = add i64 %202, %207
  %211 = add i64 %205, %207
  %212 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %11, align 8
  %213 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %212, i64 %209
  %214 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %212, i64 %209, i32 0, i32 1
  %215 = bitcast %"struct.std::__1::array.4"** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"class.std::__1::vector.2"* %213 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = icmp eq i64 %216, %218
  br i1 %219, label %389, label %379

220:                                              ; preds = %527, %187
  %221 = phi i64 [ %190, %187 ], [ %535, %527 ]
  %222 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %40, align 8
  %223 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %222, i64 %165, i32 0, i32 0
  %224 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %223, align 8
  %225 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 0
  %226 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189
  %227 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %191
  %228 = icmp ult %"struct.std::__1::array.4"* %226, %42
  %229 = icmp ult %"struct.std::__1::array.4"* %5, %227
  %230 = and i1 %228, %229
  %231 = icmp ult %"struct.std::__1::array.4"* %226, %43
  %232 = icmp ult %"struct.std::__1::array.4"* %7, %227
  %233 = and i1 %231, %232
  %234 = or i1 %230, %233
  br i1 %234, label %317, label %235

235:                                              ; preds = %220
  %236 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 64
  %237 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 0
  %238 = load <4 x float>, <4 x float>* %99, align 16, !alias.scope !40
  %239 = load <4 x float>, <4 x float>* %100, align 16, !alias.scope !43
  %240 = fmul <4 x float> %238, %239
  %241 = bitcast float* %237 to <4 x float>*
  store <4 x float> %240, <4 x float>* %241, align 4, !alias.scope !45, !noalias !47
  %242 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 4
  %243 = load <4 x float>, <4 x float>* %103, align 16, !alias.scope !40
  %244 = load <4 x float>, <4 x float>* %104, align 16, !alias.scope !43
  %245 = fmul <4 x float> %243, %244
  %246 = bitcast float* %242 to <4 x float>*
  store <4 x float> %245, <4 x float>* %246, align 4, !alias.scope !45, !noalias !47
  %247 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 8
  %248 = load <4 x float>, <4 x float>* %107, align 16, !alias.scope !40
  %249 = load <4 x float>, <4 x float>* %108, align 16, !alias.scope !43
  %250 = fmul <4 x float> %248, %249
  %251 = bitcast float* %247 to <4 x float>*
  store <4 x float> %250, <4 x float>* %251, align 4, !alias.scope !45, !noalias !47
  %252 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 12
  %253 = load <4 x float>, <4 x float>* %111, align 16, !alias.scope !40
  %254 = load <4 x float>, <4 x float>* %112, align 16, !alias.scope !43
  %255 = fmul <4 x float> %253, %254
  %256 = bitcast float* %252 to <4 x float>*
  store <4 x float> %255, <4 x float>* %256, align 4, !alias.scope !45, !noalias !47
  %257 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 16
  %258 = load <4 x float>, <4 x float>* %115, align 16, !alias.scope !40
  %259 = load <4 x float>, <4 x float>* %116, align 16, !alias.scope !43
  %260 = fmul <4 x float> %258, %259
  %261 = bitcast float* %257 to <4 x float>*
  store <4 x float> %260, <4 x float>* %261, align 4, !alias.scope !45, !noalias !47
  %262 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 20
  %263 = load <4 x float>, <4 x float>* %119, align 16, !alias.scope !40
  %264 = load <4 x float>, <4 x float>* %120, align 16, !alias.scope !43
  %265 = fmul <4 x float> %263, %264
  %266 = bitcast float* %262 to <4 x float>*
  store <4 x float> %265, <4 x float>* %266, align 4, !alias.scope !45, !noalias !47
  %267 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 24
  %268 = load <4 x float>, <4 x float>* %123, align 16, !alias.scope !40
  %269 = load <4 x float>, <4 x float>* %124, align 16, !alias.scope !43
  %270 = fmul <4 x float> %268, %269
  %271 = bitcast float* %267 to <4 x float>*
  store <4 x float> %270, <4 x float>* %271, align 4, !alias.scope !45, !noalias !47
  %272 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 28
  %273 = load <4 x float>, <4 x float>* %127, align 16, !alias.scope !40
  %274 = load <4 x float>, <4 x float>* %128, align 16, !alias.scope !43
  %275 = fmul <4 x float> %273, %274
  %276 = bitcast float* %272 to <4 x float>*
  store <4 x float> %275, <4 x float>* %276, align 4, !alias.scope !45, !noalias !47
  %277 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 32
  %278 = load <4 x float>, <4 x float>* %131, align 16, !alias.scope !40
  %279 = load <4 x float>, <4 x float>* %132, align 16, !alias.scope !43
  %280 = fmul <4 x float> %278, %279
  %281 = bitcast float* %277 to <4 x float>*
  store <4 x float> %280, <4 x float>* %281, align 4, !alias.scope !45, !noalias !47
  %282 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 36
  %283 = load <4 x float>, <4 x float>* %135, align 16, !alias.scope !40
  %284 = load <4 x float>, <4 x float>* %136, align 16, !alias.scope !43
  %285 = fmul <4 x float> %283, %284
  %286 = bitcast float* %282 to <4 x float>*
  store <4 x float> %285, <4 x float>* %286, align 4, !alias.scope !45, !noalias !47
  %287 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 40
  %288 = load <4 x float>, <4 x float>* %139, align 16, !alias.scope !40
  %289 = load <4 x float>, <4 x float>* %140, align 16, !alias.scope !43
  %290 = fmul <4 x float> %288, %289
  %291 = bitcast float* %287 to <4 x float>*
  store <4 x float> %290, <4 x float>* %291, align 4, !alias.scope !45, !noalias !47
  %292 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 44
  %293 = load <4 x float>, <4 x float>* %143, align 16, !alias.scope !40
  %294 = load <4 x float>, <4 x float>* %144, align 16, !alias.scope !43
  %295 = fmul <4 x float> %293, %294
  %296 = bitcast float* %292 to <4 x float>*
  store <4 x float> %295, <4 x float>* %296, align 4, !alias.scope !45, !noalias !47
  %297 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 48
  %298 = load <4 x float>, <4 x float>* %147, align 16, !alias.scope !40
  %299 = load <4 x float>, <4 x float>* %148, align 16, !alias.scope !43
  %300 = fmul <4 x float> %298, %299
  %301 = bitcast float* %297 to <4 x float>*
  store <4 x float> %300, <4 x float>* %301, align 4, !alias.scope !45, !noalias !47
  %302 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 52
  %303 = load <4 x float>, <4 x float>* %151, align 16, !alias.scope !40
  %304 = load <4 x float>, <4 x float>* %152, align 16, !alias.scope !43
  %305 = fmul <4 x float> %303, %304
  %306 = bitcast float* %302 to <4 x float>*
  store <4 x float> %305, <4 x float>* %306, align 4, !alias.scope !45, !noalias !47
  %307 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 56
  %308 = load <4 x float>, <4 x float>* %155, align 16, !alias.scope !40
  %309 = load <4 x float>, <4 x float>* %156, align 16, !alias.scope !43
  %310 = fmul <4 x float> %308, %309
  %311 = bitcast float* %307 to <4 x float>*
  store <4 x float> %310, <4 x float>* %311, align 4, !alias.scope !45, !noalias !47
  %312 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %224, i64 %189, i32 0, i64 60
  %313 = load <4 x float>, <4 x float>* %159, align 16, !alias.scope !40
  %314 = load <4 x float>, <4 x float>* %160, align 16, !alias.scope !43
  %315 = fmul <4 x float> %313, %314
  %316 = bitcast float* %312 to <4 x float>*
  store <4 x float> %315, <4 x float>* %316, align 4, !alias.scope !45, !noalias !47
  br label %317

317:                                              ; preds = %235, %220
  %318 = phi float* [ %225, %220 ], [ %236, %235 ]
  %319 = phi float* [ %37, %220 ], [ %98, %235 ]
  %320 = phi float* [ %36, %220 ], [ %97, %235 ]
  %321 = ptrtoint float* %320 to i64
  %322 = sub i64 %161, %321
  %323 = lshr i64 %322, 2
  %324 = add nuw nsw i64 %323, 1
  %325 = and i64 %324, 3
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %340, label %327

327:                                              ; preds = %317, %327
  %328 = phi float* [ %337, %327 ], [ %318, %317 ]
  %329 = phi float* [ %336, %327 ], [ %319, %317 ]
  %330 = phi float* [ %335, %327 ], [ %320, %317 ]
  %331 = phi i64 [ %338, %327 ], [ %325, %317 ]
  %332 = load float, float* %330, align 4
  %333 = load float, float* %329, align 4
  %334 = fmul float %332, %333
  store float %334, float* %328, align 4
  %335 = getelementptr inbounds float, float* %330, i64 1
  %336 = getelementptr inbounds float, float* %329, i64 1
  %337 = getelementptr inbounds float, float* %328, i64 1
  %338 = add i64 %331, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %327, !llvm.loop !48

340:                                              ; preds = %327, %317
  %341 = phi float* [ %318, %317 ], [ %337, %327 ]
  %342 = phi float* [ %319, %317 ], [ %336, %327 ]
  %343 = phi float* [ %320, %317 ], [ %335, %327 ]
  %344 = icmp ult i64 %322, 12
  br i1 %344, label %374, label %345

345:                                              ; preds = %340, %345
  %346 = phi float* [ %372, %345 ], [ %341, %340 ]
  %347 = phi float* [ %371, %345 ], [ %342, %340 ]
  %348 = phi float* [ %370, %345 ], [ %343, %340 ]
  %349 = load float, float* %348, align 4
  %350 = load float, float* %347, align 4
  %351 = fmul float %349, %350
  store float %351, float* %346, align 4
  %352 = getelementptr inbounds float, float* %348, i64 1
  %353 = getelementptr inbounds float, float* %347, i64 1
  %354 = getelementptr inbounds float, float* %346, i64 1
  %355 = load float, float* %352, align 4
  %356 = load float, float* %353, align 4
  %357 = fmul float %355, %356
  store float %357, float* %354, align 4
  %358 = getelementptr inbounds float, float* %348, i64 2
  %359 = getelementptr inbounds float, float* %347, i64 2
  %360 = getelementptr inbounds float, float* %346, i64 2
  %361 = load float, float* %358, align 4
  %362 = load float, float* %359, align 4
  %363 = fmul float %361, %362
  store float %363, float* %360, align 4
  %364 = getelementptr inbounds float, float* %348, i64 3
  %365 = getelementptr inbounds float, float* %347, i64 3
  %366 = getelementptr inbounds float, float* %346, i64 3
  %367 = load float, float* %364, align 4
  %368 = load float, float* %365, align 4
  %369 = fmul float %367, %368
  store float %369, float* %366, align 4
  %370 = getelementptr inbounds float, float* %348, i64 4
  %371 = getelementptr inbounds float, float* %347, i64 4
  %372 = getelementptr inbounds float, float* %346, i64 4
  %373 = icmp eq float* %370, %39
  br i1 %373, label %374, label %345, !llvm.loop !49

374:                                              ; preds = %345, %340
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %6) #6
  %375 = load i64, i64* %35, align 8
  %376 = icmp ult i64 %192, %375
  br i1 %376, label %377, label %184

377:                                              ; preds = %374
  %378 = load i64*, i64** %33, align 8
  br label %187

379:                                              ; preds = %206, %539
  %380 = phi %"class.std::__1::vector.2"* [ %541, %539 ], [ %212, %206 ]
  %381 = phi i64 [ %540, %539 ], [ 0, %206 ]
  %382 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %380, i64 %209, i32 0, i32 0
  %383 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %382, align 8
  %384 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %383, i64 %381, i32 0, i64 0
  %385 = load float, float* %384, align 4
  %386 = fmul float %29, %385
  %387 = load float, float* %47, align 16
  %388 = fadd float %387, %386
  store float %388, float* %47, align 16
  br label %551

389:                                              ; preds = %539, %206
  %390 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %183, align 8
  %391 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 0
  %392 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %210
  %393 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %211
  %394 = icmp ult %"struct.std::__1::array.4"* %7, %393
  %395 = icmp ult %"struct.std::__1::array.4"* %392, %44
  %396 = and i1 %394, %395
  br i1 %396, label %479, label %397

397:                                              ; preds = %389
  %398 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 64
  %399 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 0
  %400 = load <4 x float>, <4 x float>* %49, align 16, !alias.scope !50, !noalias !53
  %401 = bitcast float* %399 to <4 x float>*
  %402 = load <4 x float>, <4 x float>* %401, align 4, !alias.scope !53
  %403 = fadd <4 x float> %400, %402
  store <4 x float> %403, <4 x float>* %50, align 16, !alias.scope !50, !noalias !53
  %404 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 4
  %405 = load <4 x float>, <4 x float>* %52, align 16, !alias.scope !50, !noalias !53
  %406 = bitcast float* %404 to <4 x float>*
  %407 = load <4 x float>, <4 x float>* %406, align 4, !alias.scope !53
  %408 = fadd <4 x float> %405, %407
  store <4 x float> %408, <4 x float>* %53, align 16, !alias.scope !50, !noalias !53
  %409 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 8
  %410 = load <4 x float>, <4 x float>* %55, align 16, !alias.scope !50, !noalias !53
  %411 = bitcast float* %409 to <4 x float>*
  %412 = load <4 x float>, <4 x float>* %411, align 4, !alias.scope !53
  %413 = fadd <4 x float> %410, %412
  store <4 x float> %413, <4 x float>* %56, align 16, !alias.scope !50, !noalias !53
  %414 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 12
  %415 = load <4 x float>, <4 x float>* %58, align 16, !alias.scope !50, !noalias !53
  %416 = bitcast float* %414 to <4 x float>*
  %417 = load <4 x float>, <4 x float>* %416, align 4, !alias.scope !53
  %418 = fadd <4 x float> %415, %417
  store <4 x float> %418, <4 x float>* %59, align 16, !alias.scope !50, !noalias !53
  %419 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 16
  %420 = load <4 x float>, <4 x float>* %61, align 16, !alias.scope !50, !noalias !53
  %421 = bitcast float* %419 to <4 x float>*
  %422 = load <4 x float>, <4 x float>* %421, align 4, !alias.scope !53
  %423 = fadd <4 x float> %420, %422
  store <4 x float> %423, <4 x float>* %62, align 16, !alias.scope !50, !noalias !53
  %424 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 20
  %425 = load <4 x float>, <4 x float>* %64, align 16, !alias.scope !50, !noalias !53
  %426 = bitcast float* %424 to <4 x float>*
  %427 = load <4 x float>, <4 x float>* %426, align 4, !alias.scope !53
  %428 = fadd <4 x float> %425, %427
  store <4 x float> %428, <4 x float>* %65, align 16, !alias.scope !50, !noalias !53
  %429 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 24
  %430 = load <4 x float>, <4 x float>* %67, align 16, !alias.scope !50, !noalias !53
  %431 = bitcast float* %429 to <4 x float>*
  %432 = load <4 x float>, <4 x float>* %431, align 4, !alias.scope !53
  %433 = fadd <4 x float> %430, %432
  store <4 x float> %433, <4 x float>* %68, align 16, !alias.scope !50, !noalias !53
  %434 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 28
  %435 = load <4 x float>, <4 x float>* %70, align 16, !alias.scope !50, !noalias !53
  %436 = bitcast float* %434 to <4 x float>*
  %437 = load <4 x float>, <4 x float>* %436, align 4, !alias.scope !53
  %438 = fadd <4 x float> %435, %437
  store <4 x float> %438, <4 x float>* %71, align 16, !alias.scope !50, !noalias !53
  %439 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 32
  %440 = load <4 x float>, <4 x float>* %73, align 16, !alias.scope !50, !noalias !53
  %441 = bitcast float* %439 to <4 x float>*
  %442 = load <4 x float>, <4 x float>* %441, align 4, !alias.scope !53
  %443 = fadd <4 x float> %440, %442
  store <4 x float> %443, <4 x float>* %74, align 16, !alias.scope !50, !noalias !53
  %444 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 36
  %445 = load <4 x float>, <4 x float>* %76, align 16, !alias.scope !50, !noalias !53
  %446 = bitcast float* %444 to <4 x float>*
  %447 = load <4 x float>, <4 x float>* %446, align 4, !alias.scope !53
  %448 = fadd <4 x float> %445, %447
  store <4 x float> %448, <4 x float>* %77, align 16, !alias.scope !50, !noalias !53
  %449 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 40
  %450 = load <4 x float>, <4 x float>* %79, align 16, !alias.scope !50, !noalias !53
  %451 = bitcast float* %449 to <4 x float>*
  %452 = load <4 x float>, <4 x float>* %451, align 4, !alias.scope !53
  %453 = fadd <4 x float> %450, %452
  store <4 x float> %453, <4 x float>* %80, align 16, !alias.scope !50, !noalias !53
  %454 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 44
  %455 = load <4 x float>, <4 x float>* %82, align 16, !alias.scope !50, !noalias !53
  %456 = bitcast float* %454 to <4 x float>*
  %457 = load <4 x float>, <4 x float>* %456, align 4, !alias.scope !53
  %458 = fadd <4 x float> %455, %457
  store <4 x float> %458, <4 x float>* %83, align 16, !alias.scope !50, !noalias !53
  %459 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 48
  %460 = load <4 x float>, <4 x float>* %85, align 16, !alias.scope !50, !noalias !53
  %461 = bitcast float* %459 to <4 x float>*
  %462 = load <4 x float>, <4 x float>* %461, align 4, !alias.scope !53
  %463 = fadd <4 x float> %460, %462
  store <4 x float> %463, <4 x float>* %86, align 16, !alias.scope !50, !noalias !53
  %464 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 52
  %465 = load <4 x float>, <4 x float>* %88, align 16, !alias.scope !50, !noalias !53
  %466 = bitcast float* %464 to <4 x float>*
  %467 = load <4 x float>, <4 x float>* %466, align 4, !alias.scope !53
  %468 = fadd <4 x float> %465, %467
  store <4 x float> %468, <4 x float>* %89, align 16, !alias.scope !50, !noalias !53
  %469 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 56
  %470 = load <4 x float>, <4 x float>* %91, align 16, !alias.scope !50, !noalias !53
  %471 = bitcast float* %469 to <4 x float>*
  %472 = load <4 x float>, <4 x float>* %471, align 4, !alias.scope !53
  %473 = fadd <4 x float> %470, %472
  store <4 x float> %473, <4 x float>* %92, align 16, !alias.scope !50, !noalias !53
  %474 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %390, i64 %208, i32 0, i64 60
  %475 = load <4 x float>, <4 x float>* %94, align 16, !alias.scope !50, !noalias !53
  %476 = bitcast float* %474 to <4 x float>*
  %477 = load <4 x float>, <4 x float>* %476, align 4, !alias.scope !53
  %478 = fadd <4 x float> %475, %477
  store <4 x float> %478, <4 x float>* %95, align 16, !alias.scope !50, !noalias !53
  br label %479

479:                                              ; preds = %397, %389
  %480 = phi float* [ %37, %389 ], [ %48, %397 ]
  %481 = phi float* [ %391, %389 ], [ %398, %397 ]
  %482 = ptrtoint float* %480 to i64
  %483 = sub i64 %96, %482
  %484 = lshr i64 %483, 2
  %485 = add nuw nsw i64 %484, 1
  %486 = and i64 %485, 3
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %499, label %488

488:                                              ; preds = %479, %488
  %489 = phi float* [ %495, %488 ], [ %480, %479 ]
  %490 = phi float* [ %496, %488 ], [ %481, %479 ]
  %491 = phi i64 [ %497, %488 ], [ %486, %479 ]
  %492 = load float, float* %489, align 4
  %493 = load float, float* %490, align 4
  %494 = fadd float %492, %493
  store float %494, float* %489, align 4
  %495 = getelementptr inbounds float, float* %489, i64 1
  %496 = getelementptr inbounds float, float* %490, i64 1
  %497 = add i64 %491, -1
  %498 = icmp eq i64 %497, 0
  br i1 %498, label %499, label %488, !llvm.loop !55

499:                                              ; preds = %488, %479
  %500 = phi float* [ %480, %479 ], [ %495, %488 ]
  %501 = phi float* [ %481, %479 ], [ %496, %488 ]
  %502 = icmp ult i64 %483, 12
  br i1 %502, label %527, label %503

503:                                              ; preds = %499, %503
  %504 = phi float* [ %524, %503 ], [ %500, %499 ]
  %505 = phi float* [ %525, %503 ], [ %501, %499 ]
  %506 = load float, float* %504, align 4
  %507 = load float, float* %505, align 4
  %508 = fadd float %506, %507
  store float %508, float* %504, align 4
  %509 = getelementptr inbounds float, float* %504, i64 1
  %510 = getelementptr inbounds float, float* %505, i64 1
  %511 = load float, float* %509, align 4
  %512 = load float, float* %510, align 4
  %513 = fadd float %511, %512
  store float %513, float* %509, align 4
  %514 = getelementptr inbounds float, float* %504, i64 2
  %515 = getelementptr inbounds float, float* %505, i64 2
  %516 = load float, float* %514, align 4
  %517 = load float, float* %515, align 4
  %518 = fadd float %516, %517
  store float %518, float* %514, align 4
  %519 = getelementptr inbounds float, float* %504, i64 3
  %520 = getelementptr inbounds float, float* %505, i64 3
  %521 = load float, float* %519, align 4
  %522 = load float, float* %520, align 4
  %523 = fadd float %521, %522
  store float %523, float* %519, align 4
  %524 = getelementptr inbounds float, float* %504, i64 4
  %525 = getelementptr inbounds float, float* %505, i64 4
  %526 = icmp eq float* %524, %38
  br i1 %526, label %527, label %503, !llvm.loop !56

527:                                              ; preds = %503, %499
  %528 = trunc i64 %209 to i32
  %529 = load i32, i32* %34, align 8
  %530 = add nsw i32 %529, -1
  %531 = icmp sgt i32 %530, %528
  %532 = shl i64 %209, 32
  %533 = add i64 %532, 4294967296
  %534 = ashr exact i64 %533, 32
  %535 = select i1 %531, i64 %534, i64 0
  %536 = add nuw i64 %208, 1
  %537 = icmp ult i64 %536, %200
  %538 = add i64 %207, 1
  br i1 %537, label %206, label %220

539:                                              ; preds = %551
  %540 = add nuw i64 %381, 1
  %541 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %11, align 8
  %542 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %541, i64 %209
  %543 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %541, i64 %209, i32 0, i32 1
  %544 = bitcast %"struct.std::__1::array.4"** %543 to i64*
  %545 = load i64, i64* %544, align 8
  %546 = bitcast %"class.std::__1::vector.2"* %542 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = sub i64 %545, %547
  %549 = sdiv exact i64 %548, 260
  %550 = icmp ult i64 %540, %549
  br i1 %550, label %379, label %389

551:                                              ; preds = %551, %379
  %552 = phi i64 [ 1, %379 ], [ %572, %551 ]
  %553 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %11, align 8
  %554 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %553, i64 %209, i32 0, i32 0
  %555 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %554, align 8
  %556 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %555, i64 %381, i32 0, i64 %552
  %557 = load float, float* %556, align 4
  %558 = fmul float %29, %557
  %559 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 %552
  %560 = load float, float* %559, align 4
  %561 = fadd float %560, %558
  store float %561, float* %559, align 4
  %562 = add nuw nsw i64 %552, 1
  %563 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %11, align 8
  %564 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %563, i64 %209, i32 0, i32 0
  %565 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %564, align 8
  %566 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %565, i64 %381, i32 0, i64 %562
  %567 = load float, float* %566, align 4
  %568 = fmul float %29, %567
  %569 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %5, i64 0, i32 0, i64 %562
  %570 = load float, float* %569, align 4
  %571 = fadd float %570, %568
  store float %571, float* %569, align 4
  %572 = add nuw nsw i64 %552, 2
  %573 = icmp eq i64 %572, 65
  br i1 %573, label %539, label %551

574:                                              ; preds = %607, %184
  %575 = phi i64 [ %185, %184 ], [ %612, %607 ]
  %576 = add nuw i64 %165, 1
  %577 = icmp ult i64 %576, %27
  br i1 %577, label %163, label %162

578:                                              ; preds = %184, %607
  %579 = phi i64 [ %611, %607 ], [ 1, %184 ]
  %580 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %40, align 8
  %581 = add i64 %579, -1
  %582 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %580, i64 %165, i32 0, i32 0
  %583 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %582, align 8
  %584 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %583, i64 %579, i32 0, i64 64
  %585 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %583, i64 %581, i32 0, i64 64
  br label %586

586:                                              ; preds = %586, %578
  %587 = phi i64 [ 0, %578 ], [ %605, %586 ]
  %588 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %583, i64 %579, i32 0, i64 %587
  %589 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %583, i64 %581, i32 0, i64 %587
  %590 = bitcast float* %589 to <2 x float>*
  %591 = load <2 x float>, <2 x float>* %590, align 4
  %592 = bitcast float* %588 to <2 x float>*
  %593 = load <2 x float>, <2 x float>* %592, align 4
  %594 = fadd <2 x float> %591, %593
  %595 = bitcast float* %588 to <2 x float>*
  store <2 x float> %594, <2 x float>* %595, align 4
  %596 = or i64 %587, 2
  %597 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %583, i64 %579, i32 0, i64 %596
  %598 = getelementptr %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %583, i64 %581, i32 0, i64 %596
  %599 = bitcast float* %598 to <2 x float>*
  %600 = load <2 x float>, <2 x float>* %599, align 4
  %601 = bitcast float* %597 to <2 x float>*
  %602 = load <2 x float>, <2 x float>* %601, align 4
  %603 = fadd <2 x float> %600, %602
  %604 = bitcast float* %597 to <2 x float>*
  store <2 x float> %603, <2 x float>* %604, align 4
  %605 = add nuw nsw i64 %587, 4
  %606 = icmp eq i64 %605, 64
  br i1 %606, label %607, label %586, !llvm.loop !57

607:                                              ; preds = %586
  %608 = load float, float* %585, align 4
  %609 = load float, float* %584, align 4
  %610 = fadd float %608, %609
  store float %610, float* %584, align 4
  %611 = add nuw i64 %579, 1
  %612 = load i64, i64* %35, align 8
  %613 = icmp ult i64 %611, %612
  br i1 %613, label %578, label %574
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc28SignalDependentErleEstimator27ComputeActiveFilterSectionsEv(%"class.webrtc::SignalDependentErleEstimator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 15
  %3 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 15, i32 0, i32 1
  %4 = bitcast %"struct.std::__1::array"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.39"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %2, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %0, i64 0, i32 10, i32 0, i32 0
  br label %14

13:                                               ; preds = %20, %1
  ret void

14:                                               ; preds = %9, %20
  %15 = phi i64 [ %7, %9 ], [ %23, %20 ]
  %16 = phi i64 [ 0, %9 ], [ %21, %20 ]
  %17 = inttoptr i64 %15 to %"struct.std::__1::array"*
  %18 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %17, i64 %16
  %19 = bitcast %"struct.std::__1::array"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 520, i1 false)
  br label %27

20:                                               ; preds = %56
  %21 = add nuw i64 %16, 1
  %22 = load i64, i64* %4, align 8
  %23 = load i64, i64* %6, align 8
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 520
  %26 = icmp ult i64 %21, %25
  br i1 %26, label %14, label %13

27:                                               ; preds = %56, %14
  %28 = phi i64 [ %57, %56 ], [ 0, %14 ]
  %29 = load i64, i64* %11, align 8
  %30 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %12, align 8
  %31 = add i64 %29, -1
  %32 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %30, i64 %16, i32 0, i32 0
  %33 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %33, i64 %31, i32 0, i64 %28
  %35 = load float, float* %34, align 4
  %36 = fmul float %35, 0x3FECCCCCC0000000
  %37 = icmp eq i64 %29, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %27
  %39 = add i64 %29, -1
  %40 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %33, i64 %39, i32 0, i64 %28
  %41 = load float, float* %40, align 4
  %42 = fcmp ult float %41, %36
  br i1 %42, label %56, label %43

43:                                               ; preds = %38, %48
  %44 = phi i64 [ %52, %48 ], [ %39, %38 ]
  %45 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %10, align 8
  %46 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %45, i64 %16, i32 0, i64 %28
  store i64 %44, i64* %46, align 8
  %47 = icmp eq i64 %44, 0
  br i1 %47, label %56, label %48

48:                                               ; preds = %43
  %49 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %12, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %49, i64 %16, i32 0, i32 0
  %51 = load %"struct.std::__1::array.4"*, %"struct.std::__1::array.4"** %50, align 8
  %52 = add i64 %44, -1
  %53 = getelementptr inbounds %"struct.std::__1::array.4", %"struct.std::__1::array.4"* %51, i64 %52, i32 0, i64 %28
  %54 = load float, float* %53, align 4
  %55 = fcmp ult float %54, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %48, %43, %38, %27
  %57 = add nuw nsw i64 %28, 1
  %58 = icmp eq i64 %57, 65
  br i1 %58, label %20, label %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6webrtc12_GLOBAL__N_114FormSubbandMapEv: argument 0"}
!4 = distinct !{!4, !"_ZN6webrtc12_GLOBAL__N_114FormSubbandMapEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6webrtc12_GLOBAL__N_118SetMaxErleSubbandsEffm: argument 0"}
!7 = distinct !{!7, !"_ZN6webrtc12_GLOBAL__N_118SetMaxErleSubbandsEffm"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !13, !9}
!13 = !{!"llvm.loop.unroll.runtime.disable"}
!14 = distinct !{!14, !9}
!15 = distinct !{!15, !11}
!16 = distinct !{!16, !13, !9}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN6webrtc12_GLOBAL__N_121SetSectionsBoundariesEmmm: argument 0"}
!19 = distinct !{!19, !"_ZN6webrtc12_GLOBAL__N_121SetSectionsBoundariesEmmm"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6webrtc12_GLOBAL__N_124DefineFilterSectionSizesEmmm: argument 0"}
!22 = distinct !{!22, !"_ZN6webrtc12_GLOBAL__N_124DefineFilterSectionSizesEmmm"}
!23 = !{!21, !18}
!24 = distinct !{!24, !11}
!25 = !{i8 0, i8 2}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !11}
!32 = distinct !{!32, !9}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !11}
!39 = distinct !{!39, !9}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = !{!46}
!46 = distinct !{!46, !42}
!47 = !{!41, !44}
!48 = distinct !{!48, !11}
!49 = distinct !{!49, !9}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !11}
!56 = distinct !{!56, !9}
!57 = distinct !{!57, !9}
