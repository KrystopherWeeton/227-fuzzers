; ModuleID = '../../ui/events/ozone/layout/stub/stub_keyboard_layout_engine.cc'
source_filename = "../../ui/events/ozone/layout/stub/stub_keyboard_layout_engine.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::StubKeyboardLayoutEngine" = type { %"class.ui::KeyboardLayoutEngine" }
%"class.ui::KeyboardLayoutEngine" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.ui::DomKey" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZTVN2ui24StubKeyboardLayoutEngineE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::StubKeyboardLayoutEngine"*)* @_ZN2ui24StubKeyboardLayoutEngineD2Ev to i8*), i8* bitcast (void (%"class.ui::StubKeyboardLayoutEngine"*)* @_ZN2ui24StubKeyboardLayoutEngineD0Ev to i8*), i8* bitcast (i1 (%"class.ui::StubKeyboardLayoutEngine"*)* @_ZNK2ui24StubKeyboardLayoutEngine19CanSetCurrentLayoutEv to i8*), i8* bitcast (i1 (%"class.ui::StubKeyboardLayoutEngine"*, %"class.std::__1::basic_string"*)* @_ZN2ui24StubKeyboardLayoutEngine22SetCurrentLayoutByNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.ui::StubKeyboardLayoutEngine"*, i8*, i64)* @_ZN2ui24StubKeyboardLayoutEngine26SetCurrentLayoutFromBufferEPKcm to i8*), i8* bitcast (i1 (%"class.ui::StubKeyboardLayoutEngine"*)* @_ZNK2ui24StubKeyboardLayoutEngine18UsesISOLevel5ShiftEv to i8*), i8* bitcast (i1 (%"class.ui::StubKeyboardLayoutEngine"*)* @_ZNK2ui24StubKeyboardLayoutEngine9UsesAltGrEv to i8*), i8* bitcast (i1 (%"class.ui::StubKeyboardLayoutEngine"*, i32, i32, %"class.ui::DomKey"*, i32*)* @_ZNK2ui24StubKeyboardLayoutEngine6LookupENS_7DomCodeEiPNS_6DomKeyEPNS_12KeyboardCodeE to i8*), i8* bitcast (void (%"class.ui::StubKeyboardLayoutEngine"*, %"class.base::OnceCallback"*)* @_ZN2ui24StubKeyboardLayoutEngine22SetInitCallbackForTestEN4base12OnceCallbackIFvvEEE to i8*)] }, align 8

@_ZN2ui24StubKeyboardLayoutEngineC1Ev = hidden unnamed_addr alias void (%"class.ui::StubKeyboardLayoutEngine"*), void (%"class.ui::StubKeyboardLayoutEngine"*)* @_ZN2ui24StubKeyboardLayoutEngineC2Ev
@_ZN2ui24StubKeyboardLayoutEngineD1Ev = hidden unnamed_addr alias void (%"class.ui::StubKeyboardLayoutEngine"*), void (%"class.ui::StubKeyboardLayoutEngine"*)* @_ZN2ui24StubKeyboardLayoutEngineD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui24StubKeyboardLayoutEngineC2Ev(%"class.ui::StubKeyboardLayoutEngine"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::StubKeyboardLayoutEngine", %"class.ui::StubKeyboardLayoutEngine"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2ui24StubKeyboardLayoutEngineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui24StubKeyboardLayoutEngineD2Ev(%"class.ui::StubKeyboardLayoutEngine"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui24StubKeyboardLayoutEngineD0Ev(%"class.ui::StubKeyboardLayoutEngine"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::StubKeyboardLayoutEngine"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui24StubKeyboardLayoutEngine19CanSetCurrentLayoutEv(%"class.ui::StubKeyboardLayoutEngine"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2ui24StubKeyboardLayoutEngine22SetCurrentLayoutByNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.ui::StubKeyboardLayoutEngine"* nocapture readnone, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24)) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2ui24StubKeyboardLayoutEngine26SetCurrentLayoutFromBufferEPKcm(%"class.ui::StubKeyboardLayoutEngine"* nocapture readnone, i8* nocapture readnone, i64) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui24StubKeyboardLayoutEngine18UsesISOLevel5ShiftEv(%"class.ui::StubKeyboardLayoutEngine"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui24StubKeyboardLayoutEngine9UsesAltGrEv(%"class.ui::StubKeyboardLayoutEngine"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui24StubKeyboardLayoutEngine6LookupENS_7DomCodeEiPNS_6DomKeyEPNS_12KeyboardCodeE(%"class.ui::StubKeyboardLayoutEngine"* nocapture readnone, i32, i32, %"class.ui::DomKey"*, i32*) unnamed_addr #2 align 2 {
  %6 = tail call zeroext i1 @_ZN2ui23DomCodeToUsLayoutDomKeyENS_7DomCodeEiPNS_6DomKeyEPNS_12KeyboardCodeE(i32 %1, i32 %2, %"class.ui::DomKey"* %3, i32* %4) #8
  ret i1 %6
}

declare zeroext i1 @_ZN2ui23DomCodeToUsLayoutDomKeyENS_7DomCodeEiPNS_6DomKeyEPNS_12KeyboardCodeE(i32, i32, %"class.ui::DomKey"*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui24StubKeyboardLayoutEngine22SetInitCallbackForTestEN4base12OnceCallbackIFvvEEE(%"class.ui::StubKeyboardLayoutEngine"* nocapture readnone, %"class.base::OnceCallback"* nocapture) unnamed_addr #2 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %10 = inttoptr i64 %7 to %"class.base::internal::BindStateBase"*
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*)**
  %13 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* %10) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
