; ModuleID = '../../third_party/blink/renderer/core/editing/editing_behavior.cc'
source_filename = "../../third_party/blink/renderer/core/editing/editing_behavior.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::HashMap" = type { %"class.WTF::HashTable.254" }
%"class.WTF::HashTable.254" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, i8* }
%"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" = type { i32, i32, i8* }
%"struct.blink::(anonymous namespace)::KeyboardCodeKeyPressEntry" = type { i32, i32, i8* }
%"struct.blink::(anonymous namespace)::DomKeyKeyDownEntry" = type { i8*, i32, i8* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::EditingBehavior" = type { i32 }
%"class.blink::KeyboardEvent" = type { %"class.blink::UIEventWithKeyState.base", %"class.std::__1::unique_ptr.215", %"class.WTF::String", %"class.WTF::String", i32, i8, i32, i32 }
%"class.blink::UIEventWithKeyState.base" = type <{ %"class.blink::UIEvent", i32 }>
%"class.blink::UIEvent" = type { %"class.blink::Event", %"class.blink::Member.5", i32, %"class.blink::Member.213" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.1", %"class.blink::Member.3", %"class.base::TimeTicks" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::EventTarget"* }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::Event"* }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.16", %"class.blink::Member.18", %"class.blink::Member.20", %"class.blink::Member.22", i8, %"class.WTF::Vector.24" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.11" }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::HeapVector.13"* }
%"class.blink::HeapVector.13" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.14"* }
%"class.WTF::Vector.14" = type opaque
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.224", %"class.blink::Member.226", %"class.blink::Member.5", i8, i32, i8, i32, %"class.blink::Member.228", %"class.blink::Member.18", %"class.blink::FrameLifecycle", %"class.blink::Member.16", %"class.blink::Member.16", %"class.blink::Member.16", %"class.blink::Member.16", %"class.blink::Member.16", %"class.blink::Member.16", %"class.blink::Member.230", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.238", i8, %"class.base::UnguessableToken", %"class.absl::optional.240", %"class.absl::optional.245", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.16", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.224" = type { %"class.blink::MemberBase.225" }
%"class.blink::MemberBase.225" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.226" = type { %"class.blink::MemberBase.227" }
%"class.blink::MemberBase.227" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.228" = type { %"class.blink::MemberBase.229" }
%"class.blink::MemberBase.229" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.16", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.232"*, %"struct.std::__1::pair.232"*, %"class.std::__1::__compressed_pair.233" }
%"struct.std::__1::pair.232" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::pair.232"* }
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.240" = type { %"class.absl::optional_internal::optional_data.241" }
%"class.absl::optional_internal::optional_data.241" = type { %"class.absl::optional_internal::optional_data_base.242" }
%"class.absl::optional_internal::optional_data_base.242" = type { %"class.absl::optional_internal::optional_data_dtor_base.243" }
%"class.absl::optional_internal::optional_data_dtor_base.243" = type { i8, %union.anon.244 }
%union.anon.244 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.37 }
%union.anon.37 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.245" = type { %"class.absl::optional_internal::optional_data.246" }
%"class.absl::optional_internal::optional_data.246" = type { %"class.absl::optional_internal::optional_data_base.247" }
%"class.absl::optional_internal::optional_data_base.247" = type { %"class.absl::optional_internal::optional_data_dtor_base.248" }
%"class.absl::optional_internal::optional_data_dtor_base.248" = type { i8, %union.anon.249 }
%union.anon.249 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.250 }
%class.scoped_refptr.250 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.24" = type { %"class.WTF::VectorBuffer.25" }
%"class.WTF::VectorBuffer.25" = type { %"class.WTF::VectorBufferBase.26" }
%"class.WTF::VectorBufferBase.26" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.205" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.27, %"class.std::__1::unique_ptr.155", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.33, i32 }>
%class.scoped_refptr.27 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.33, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.121", %"class.absl::optional.126", %"class.absl::optional.83", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.146", i8, [7 x i8], %class.scoped_refptr.33, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.45", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.51 }
%class.scoped_refptr.51 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.52", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.52" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.53" }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.33, %"class.std::__1::unique_ptr.60", %"class.absl::optional.69", %"struct.std::__1::atomic.79", i8, i8, i8, i8, i32, i32, %"class.absl::optional.83", %"class.std::__1::unique_ptr.88", i8, i64, %class.scoped_refptr.117, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.120" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.58 }
%class.scoped_refptr.58 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.59", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.59" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.33, i8, %"class.mojo::ScopedHandleBase.63", %class.scoped_refptr.64, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.65" }
%"class.mojo::ScopedHandleBase.63" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.64 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.65" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.69" = type { %"class.absl::optional_internal::optional_data.70" }
%"class.absl::optional_internal::optional_data.70" = type { %"class.absl::optional_internal::optional_data_base.71" }
%"class.absl::optional_internal::optional_data_base.71" = type { %"class.absl::optional_internal::optional_data_dtor_base.72" }
%"class.absl::optional_internal::optional_data_dtor_base.72" = type { i8, %union.anon.73 }
%union.anon.73 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.74", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.74" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__cxx_atomic_impl.81" }
%"struct.std::__1::__cxx_atomic_impl.81" = type { %"struct.std::__1::__cxx_atomic_base_impl.82" }
%"struct.std::__1::__cxx_atomic_base_impl.82" = type { i8 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.91", i8, i64, %class.scoped_refptr.92, %class.scoped_refptr.113 }
%"class.base::RepeatingCallback.91" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.92 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.102", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.93 }
%class.scoped_refptr.93 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { i64 }
%"class.std::__1::map.102" = type { %"class.std::__1::__tree.103" }
%"class.std::__1::__tree.103" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%class.scoped_refptr.113 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.117 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.118 }
%class.scoped_refptr.118 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.221", [4 x i8], %"class.base::RepeatingCallback.158", %class.scoped_refptr.33, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.221" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.158" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.119 }
%class.scoped_refptr.119 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.120" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.121" = type { %"class.absl::optional_internal::optional_data.122" }
%"class.absl::optional_internal::optional_data.122" = type { %"class.absl::optional_internal::optional_data_base.123" }
%"class.absl::optional_internal::optional_data_base.123" = type { %"class.absl::optional_internal::optional_data_dtor_base.124" }
%"class.absl::optional_internal::optional_data_dtor_base.124" = type { i8, %union.anon.125 }
%union.anon.125 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.126" = type { %"class.absl::optional_internal::optional_data.127" }
%"class.absl::optional_internal::optional_data.127" = type { %"class.absl::optional_internal::optional_data_base.128" }
%"class.absl::optional_internal::optional_data_base.128" = type { %"class.absl::optional_internal::optional_data_dtor_base.129" }
%"class.absl::optional_internal::optional_data_dtor_base.129" = type { i8, [7 x i8], %union.anon.130 }
%union.anon.130 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.83" = type { %"class.absl::optional_internal::optional_data.84" }
%"class.absl::optional_internal::optional_data.84" = type { %"class.absl::optional_internal::optional_data_base.85" }
%"class.absl::optional_internal::optional_data_base.85" = type { %"class.absl::optional_internal::optional_data_dtor_base.86" }
%"class.absl::optional_internal::optional_data_dtor_base.86" = type { i8, %union.anon.87 }
%union.anon.87 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.131 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.131 = type { %"class.std::__1::map.134" }
%"class.std::__1::map.134" = type { %"class.std::__1::__tree.135" }
%"class.std::__1::__tree.135" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.145"*, i64 }
%"class.std::__1::unique_ptr.145" = type opaque
%"class.std::__1::map.146" = type { %"class.std::__1::__tree.147" }
%"class.std::__1::__tree.147" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.158", %"class.base::OnceCallback.159", %"class.absl::optional.160", %"class.absl::optional.165", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.172", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.180", %"class.std::__1::map.191", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.200", i8, %class.scoped_refptr.33, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.201" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.159" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.160" = type { %"class.absl::optional_internal::optional_data.161" }
%"class.absl::optional_internal::optional_data.161" = type { %"class.absl::optional_internal::optional_data_base.162" }
%"class.absl::optional_internal::optional_data_base.162" = type { %"class.absl::optional_internal::optional_data_dtor_base.163" }
%"class.absl::optional_internal::optional_data_dtor_base.163" = type { i8, %union.anon.164 }
%union.anon.164 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.165" = type { %"class.absl::optional_internal::optional_data.166" }
%"class.absl::optional_internal::optional_data.166" = type { %"class.absl::optional_internal::optional_data_base.167" }
%"class.absl::optional_internal::optional_data_base.167" = type { %"class.absl::optional_internal::optional_data_dtor_base.168" }
%"class.absl::optional_internal::optional_data_dtor_base.168" = type { i8, %union.anon.169 }
%union.anon.169 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.33, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.170" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.170" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.171 }
%class.scoped_refptr.171 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.175", %class.scoped_refptr.176 }
%"class.base::RepeatingCallback.175" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.176 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.180" = type { %"class.std::__1::__tree.181" }
%"class.std::__1::__tree.181" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::map.191" = type { %"class.std::__1::__tree.192" }
%"class.std::__1::__tree.192" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.193", %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.base::OnceCallback.200" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.201" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.33 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.34" }>
%"class.base::RefCountedThreadSafe.34" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.213" = type { %"class.blink::MemberBase.214" }
%"class.blink::MemberBase.214" = type { %"class.blink::InputDeviceCapabilities"* }
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::WebKeyboardEvent"* }
%"class.blink::WebKeyboardEvent" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiPKcEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EEjRKS3_EENS_18HashTableAddResultISE_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiPKcEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiPKcEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS9_IS3_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS4_jSF_ = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZZNK5blink15EditingBehavior17InterpretKeyEventERKNS_13KeyboardEventEE21key_down_commands_map = internal unnamed_addr global %"class.WTF::HashMap"* null, align 8
@_ZZNK5blink15EditingBehavior17InterpretKeyEventERKNS_13KeyboardEventEE22key_press_commands_map = internal unnamed_addr global %"class.WTF::HashMap"* null, align 8
@_ZN5blink12_GLOBAL__N_127kKeyboardCodeKeyDownEntriesE = internal constant [57 x %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry"] [%"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 37, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 37, i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 37, i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 37, i32 3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 39, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 39, i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 39, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 39, i32 3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 38, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 38, i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 33, i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 40, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 40, i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 34, i32 1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.14, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 38, i32 2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 38, i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.16, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 40, i32 2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 40, i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.18, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 33, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 34, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 36, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 36, i32 1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.22, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 36, i32 2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 36, i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.24, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 35, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 35, i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.26, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 35, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 35, i32 3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.28, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 8, i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 8, i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 46, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 8, i32 2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 46, i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 66, i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 73, i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 85, i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 27, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 190, i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 9, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 9, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 13, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 13, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 13, i32 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 13, i32 5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 13, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 45, i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 45, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 46, i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 67, i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 86, i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 86, i32 3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 88, i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 65, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 90, i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 90, i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 89, i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry" { i32 45, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0) }], align 16
@_ZN5blink12_GLOBAL__N_128kKeyboardCodeKeyPressEntriesE = internal constant [4 x %"struct.blink::(anonymous namespace)::KeyboardCodeKeyPressEntry"] [%"struct.blink::(anonymous namespace)::KeyboardCodeKeyPressEntry" { i32 9, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyPressEntry" { i32 9, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyPressEntry" { i32 13, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::KeyboardCodeKeyPressEntry" { i32 13, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i32 0, i32 0) }], align 16
@.str.1 = private unnamed_addr constant [9 x i8] c"MoveLeft\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"MoveLeftAndModifySelection\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"MoveWordLeft\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"MoveWordLeftAndModifySelection\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"MoveRight\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"MoveRightAndModifySelection\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"MoveWordRight\00", align 1
@.str.8 = private unnamed_addr constant [32 x i8] c"MoveWordRightAndModifySelection\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"MoveUp\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c"MoveUpAndModifySelection\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"MovePageUpAndModifySelection\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"MoveDown\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"MoveDownAndModifySelection\00", align 1
@.str.14 = private unnamed_addr constant [31 x i8] c"MovePageDownAndModifySelection\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"MoveParagraphBackward\00", align 1
@.str.16 = private unnamed_addr constant [40 x i8] c"MoveParagraphBackwardAndModifySelection\00", align 1
@.str.17 = private unnamed_addr constant [21 x i8] c"MoveParagraphForward\00", align 1
@.str.18 = private unnamed_addr constant [39 x i8] c"MoveParagraphForwardAndModifySelection\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"MovePageUp\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"MovePageDown\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"MoveToBeginningOfLine\00", align 1
@.str.22 = private unnamed_addr constant [40 x i8] c"MoveToBeginningOfLineAndModifySelection\00", align 1
@.str.23 = private unnamed_addr constant [26 x i8] c"MoveToBeginningOfDocument\00", align 1
@.str.24 = private unnamed_addr constant [44 x i8] c"MoveToBeginningOfDocumentAndModifySelection\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"MoveToEndOfLine\00", align 1
@.str.26 = private unnamed_addr constant [34 x i8] c"MoveToEndOfLineAndModifySelection\00", align 1
@.str.27 = private unnamed_addr constant [20 x i8] c"MoveToEndOfDocument\00", align 1
@.str.28 = private unnamed_addr constant [38 x i8] c"MoveToEndOfDocumentAndModifySelection\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"DeleteBackward\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"DeleteForward\00", align 1
@.str.31 = private unnamed_addr constant [19 x i8] c"DeleteWordBackward\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"DeleteWordForward\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"ToggleBold\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"ToggleItalic\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"ToggleUnderline\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"Cancel\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"InsertTab\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"InsertBacktab\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"InsertNewline\00", align 1
@.str.40 = private unnamed_addr constant [16 x i8] c"InsertLineBreak\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"Copy\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"Paste\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"Cut\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"PasteAndMatchStyle\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"SelectAll\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"Undo\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"Redo\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"OverWrite\00", align 1
@_ZN5blink12_GLOBAL__N_121kDomKeyKeyDownEntriesE = internal unnamed_addr constant [3 x %"struct.blink::(anonymous namespace)::DomKeyKeyDownEntry"] [%"struct.blink::(anonymous namespace)::DomKeyKeyDownEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::DomKeyKeyDownEntry" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::DomKeyKeyDownEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0) }], align 16
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIiPKcNS_7IntHashIiEENS_10HashTraitsIiEENS6_IS3_EENS_18PartitionAllocatorEEEEES3_v = private unnamed_addr constant [176 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashMap<int, const char *, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<const char *>, WTF::PartitionAllocator>]\00", align 1
@.str.49 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.50 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiPKcEEEES3_v = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, const char *>]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK5blink15EditingBehavior17InterpretKeyEventERKNS_13KeyboardEventE(%"class.blink::EditingBehavior"* nocapture readnone, %"class.blink::KeyboardEvent"* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.blink::WebKeyboardEvent"*, %"class.blink::WebKeyboardEvent"** %7, align 8
  %9 = icmp eq %"class.blink::WebKeyboardEvent"* %8, null
  br i1 %9, label %263, label %10

10:                                               ; preds = %2
  %11 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** @_ZZNK5blink15EditingBehavior17InterpretKeyEventERKNS_13KeyboardEventEE21key_down_commands_map, align 8
  %12 = icmp eq %"class.WTF::HashMap"* %11, null
  br i1 %12, label %13, label %60

13:                                               ; preds = %10
  %14 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([176 x i8], [176 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIiPKcNS_7IntHashIiEENS_10HashTraitsIiEENS6_IS3_EENS_18PartitionAllocatorEEEEES3_v, i64 0, i64 0)) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #5
  store i8* %14, i8** bitcast (%"class.WTF::HashMap"** @_ZZNK5blink15EditingBehavior17InterpretKeyEventERKNS_13KeyboardEventEE21key_down_commands_map to i8**), align 8
  %15 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([176 x i8], [176 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIiPKcNS_7IntHashIiEENS_10HashTraitsIiEENS6_IS3_EENS_18PartitionAllocatorEEEEES3_v, i64 0, i64 0)) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #5
  store i8* %15, i8** bitcast (%"class.WTF::HashMap"** @_ZZNK5blink15EditingBehavior17InterpretKeyEventERKNS_13KeyboardEventEE22key_press_commands_map to i8**), align 8
  %16 = bitcast i32* %5 to i8*
  br label %25

17:                                               ; preds = %46
  %18 = bitcast i32* %6 to i8*
  %19 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** @_ZZNK5blink15EditingBehavior17InterpretKeyEventERKNS_13KeyboardEventEE22key_press_commands_map, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #5
  store i32 9, i32* %6, align 4
  %20 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %19, i64 0, i32 0
  %21 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPKcEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EEjRKS3_EENS_18HashTableAddResultISE_S4_EEOT0_OT1_(%"class.WTF::HashTable.254"* %20, i32* nonnull dereferenceable(4) %6, i8** dereferenceable(8) getelementptr inbounds ([4 x %"struct.blink::(anonymous namespace)::KeyboardCodeKeyPressEntry"], [4 x %"struct.blink::(anonymous namespace)::KeyboardCodeKeyPressEntry"]* @_ZN5blink12_GLOBAL__N_128kKeyboardCodeKeyPressEntriesE, i64 0, i64 0, i32 2)) #5
  %22 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %21, 1
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %49, label %53

25:                                               ; preds = %13, %46
  %26 = phi %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry"* [ getelementptr inbounds ([57 x %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry"], [57 x %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry"]* @_ZN5blink12_GLOBAL__N_127kKeyboardCodeKeyDownEntriesE, i64 0, i64 0), %13 ], [ %47, %46 ]
  %27 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** @_ZZNK5blink15EditingBehavior17InterpretKeyEventERKNS_13KeyboardEventEE21key_down_commands_map, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #5
  %28 = getelementptr inbounds %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry", %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry"* %26, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = shl i32 %29, 16
  %31 = getelementptr inbounds %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry", %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry"* %26, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = or i32 %30, %32
  store i32 %33, i32* %5, align 4
  %34 = getelementptr inbounds %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry", %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry"* %26, i64 0, i32 2
  %35 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %27, i64 0, i32 0
  %36 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPKcEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EEjRKS3_EENS_18HashTableAddResultISE_S4_EEOT0_OT1_(%"class.WTF::HashTable.254"* %35, i32* nonnull dereferenceable(4) %5, i8** dereferenceable(8) %34) #5
  %37 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %36, 1
  %38 = and i8 %37, 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %25
  %41 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %36, 0
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %41, i64 0, i32 1
  %43 = bitcast i8** %34 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast i8** %42 to i64*
  store i64 %44, i64* %45, align 8
  br label %46

46:                                               ; preds = %25, %40
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #5
  %47 = getelementptr inbounds %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry", %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry"* %26, i64 1
  %48 = icmp eq %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry"* %47, getelementptr inbounds ([57 x %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry"], [57 x %"struct.blink::(anonymous namespace)::KeyboardCodeKeyDownEntry"]* @_ZN5blink12_GLOBAL__N_127kKeyboardCodeKeyDownEntriesE, i64 1, i64 0)
  br i1 %48, label %17, label %25

49:                                               ; preds = %17
  %50 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %21, 0
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 0, i32 1
  %52 = bitcast i8** %51 to i64*
  store i64 ptrtoint ([10 x i8]* @.str.37 to i64), i64* %52, align 8
  br label %53

53:                                               ; preds = %17, %49
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #5
  %54 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** @_ZZNK5blink15EditingBehavior17InterpretKeyEventERKNS_13KeyboardEventEE22key_press_commands_map, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #5
  store i32 65545, i32* %6, align 4
  %55 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %54, i64 0, i32 0
  %56 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPKcEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EEjRKS3_EENS_18HashTableAddResultISE_S4_EEOT0_OT1_(%"class.WTF::HashTable.254"* %55, i32* nonnull dereferenceable(4) %6, i8** dereferenceable(8) getelementptr inbounds ([4 x %"struct.blink::(anonymous namespace)::KeyboardCodeKeyPressEntry"], [4 x %"struct.blink::(anonymous namespace)::KeyboardCodeKeyPressEntry"]* @_ZN5blink12_GLOBAL__N_128kKeyboardCodeKeyPressEntriesE, i64 0, i64 1, i32 2)) #5
  %57 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %56, 1
  %58 = and i8 %57, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %265, label %269

60:                                               ; preds = %291, %10
  %61 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %8, i64 0, i32 0, i32 5
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 15
  %64 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %8, i64 0, i32 0, i32 4
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 7
  %67 = shl nuw nsw i32 %63, 16
  br i1 %66, label %68, label %196

68:                                               ; preds = %60
  %69 = call i32 @_ZNK5blink13KeyboardEvent7keyCodeEv(%"class.blink::KeyboardEvent"* %1) #5
  %70 = or i32 %69, %67
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %136, label %72

72:                                               ; preds = %68
  %73 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** @_ZZNK5blink15EditingBehavior17InterpretKeyEventERKNS_13KeyboardEventEE21key_down_commands_map, align 8
  %74 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %73, i64 0, i32 0, i32 0
  %75 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %74, align 8
  %76 = icmp eq %"struct.WTF::KeyValuePair"* %75, null
  br i1 %76, label %136, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %73, i64 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, -1
  %81 = zext i32 %80 to i64
  %82 = shl i32 %70, 15
  %83 = xor i32 %82, -1
  %84 = add i32 %70, %83
  %85 = lshr i32 %84, 10
  %86 = xor i32 %85, %84
  %87 = mul i32 %86, 9
  %88 = lshr i32 %87, 6
  %89 = xor i32 %88, %87
  %90 = shl i32 %89, 11
  %91 = xor i32 %90, -1
  %92 = add i32 %89, %91
  %93 = lshr i32 %92, 16
  %94 = xor i32 %93, %92
  %95 = and i32 %80, %94
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 %96
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %97, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, %70
  br i1 %100, label %129, label %101

101:                                              ; preds = %77
  %102 = xor i32 %94, -1
  %103 = lshr i32 %92, 23
  %104 = add i32 %103, %102
  %105 = shl i32 %104, 12
  %106 = xor i32 %105, %104
  %107 = lshr i32 %106, 7
  %108 = xor i32 %107, %106
  %109 = shl i32 %108, 2
  %110 = xor i32 %109, %108
  %111 = lshr i32 %110, 20
  %112 = xor i32 %111, %110
  %113 = or i32 %112, 1
  %114 = zext i32 %113 to i64
  br label %115

115:                                              ; preds = %120, %101
  %116 = phi i32 [ %99, %101 ], [ %127, %120 ]
  %117 = phi i64 [ %96, %101 ], [ %124, %120 ]
  %118 = phi i64 [ 0, %101 ], [ %122, %120 ]
  %119 = icmp eq i32 %116, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %115
  %121 = icmp eq i64 %118, 0
  %122 = select i1 %121, i64 %114, i64 %118
  %123 = add i64 %122, %117
  %124 = and i64 %123, %81
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 %124
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %125, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, %70
  br i1 %128, label %129, label %115

129:                                              ; preds = %120, %77
  %130 = phi %"struct.WTF::KeyValuePair"* [ %97, %77 ], [ %125, %120 ]
  %131 = icmp eq %"struct.WTF::KeyValuePair"* %130, null
  br i1 %131, label %136, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %130, i64 0, i32 1
  %134 = load i8*, i8** %133, align 8
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %263

136:                                              ; preds = %115, %72, %129, %68, %132
  %137 = bitcast %"class.WTF::StringView"* %3 to i8*
  %138 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 3, i32 0, i32 0
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %141 = bitcast i8** %140 to %"class.WTF::StringImpl"**
  %142 = bitcast %"class.WTF::StringView"* %3 to i64*
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %144 = bitcast %"class.WTF::StringView"* %4 to i8*
  %145 = bitcast %"class.WTF::StringView"* %4 to i64*
  %146 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %147 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #5
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %150, label %152

150:                                              ; preds = %136
  store i8* null, i8** %140, align 8
  %151 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %151, i64* %142, align 8
  br label %156

152:                                              ; preds = %136
  store %"class.WTF::StringImpl"* %148, %"class.WTF::StringImpl"** %139, align 8
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 1
  store %"class.WTF::StringImpl"* %155, %"class.WTF::StringImpl"** %141, align 8
  br label %156

156:                                              ; preds = %152, %150
  %157 = phi i32 [ %154, %152 ], [ 0, %150 ]
  store i32 %157, i32* %143, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #5
  %158 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %158, i64* %145, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i64 0, i64 0), i8** %146, align 8
  store i32 4, i32* %147, align 8
  %159 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #5
  %160 = icmp eq i32 %63, 0
  %161 = and i1 %160, %159
  br i1 %161, label %165, label %162

162:                                              ; preds = %156
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #5
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %174, label %169

165:                                              ; preds = %191, %176, %156
  %166 = phi %"struct.blink::(anonymous namespace)::DomKeyKeyDownEntry"* [ getelementptr inbounds ([3 x %"struct.blink::(anonymous namespace)::DomKeyKeyDownEntry"], [3 x %"struct.blink::(anonymous namespace)::DomKeyKeyDownEntry"]* @_ZN5blink12_GLOBAL__N_121kDomKeyKeyDownEntriesE, i64 0, i64 0), %156 ], [ getelementptr inbounds ([3 x %"struct.blink::(anonymous namespace)::DomKeyKeyDownEntry"], [3 x %"struct.blink::(anonymous namespace)::DomKeyKeyDownEntry"]* @_ZN5blink12_GLOBAL__N_121kDomKeyKeyDownEntriesE, i64 0, i64 1), %176 ], [ getelementptr inbounds ([3 x %"struct.blink::(anonymous namespace)::DomKeyKeyDownEntry"], [3 x %"struct.blink::(anonymous namespace)::DomKeyKeyDownEntry"]* @_ZN5blink12_GLOBAL__N_121kDomKeyKeyDownEntriesE, i64 0, i64 2), %191 ]
  %167 = getelementptr inbounds %"struct.blink::(anonymous namespace)::DomKeyKeyDownEntry", %"struct.blink::(anonymous namespace)::DomKeyKeyDownEntry"* %166, i64 0, i32 2
  %168 = load i8*, i8** %167, align 8
  br label %263

169:                                              ; preds = %162
  store %"class.WTF::StringImpl"* %163, %"class.WTF::StringImpl"** %139, align 8
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 1
  store %"class.WTF::StringImpl"* %172, %"class.WTF::StringImpl"** %141, align 8
  %173 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %176

174:                                              ; preds = %162
  store i8* null, i8** %140, align 8
  %175 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %175, i64* %142, align 8
  br label %176

176:                                              ; preds = %174, %169
  %177 = phi i64 [ %173, %169 ], [ %175, %174 ]
  %178 = phi i32 [ %171, %169 ], [ 0, %174 ]
  store i32 %178, i32* %143, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #5
  store i64 %177, i64* %145, align 8
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i8** %146, align 8
  store i32 3, i32* %147, align 8
  %179 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #5
  %180 = and i1 %160, %179
  br i1 %180, label %165, label %181

181:                                              ; preds = %176
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #5
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %189, label %184

184:                                              ; preds = %181
  store %"class.WTF::StringImpl"* %182, %"class.WTF::StringImpl"** %139, align 8
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 1
  store %"class.WTF::StringImpl"* %187, %"class.WTF::StringImpl"** %141, align 8
  %188 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %191

189:                                              ; preds = %181
  store i8* null, i8** %140, align 8
  %190 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %190, i64* %142, align 8
  br label %191

191:                                              ; preds = %189, %184
  %192 = phi i64 [ %188, %184 ], [ %190, %189 ]
  %193 = phi i32 [ %186, %184 ], [ 0, %189 ]
  store i32 %193, i32* %143, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #5
  store i64 %192, i64* %145, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0), i8** %146, align 8
  store i32 5, i32* %147, align 8
  %194 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #5
  %195 = and i1 %160, %194
  br i1 %195, label %165, label %263

196:                                              ; preds = %60
  %197 = call i32 @_ZNK5blink13KeyboardEvent8charCodeEv(%"class.blink::KeyboardEvent"* %1) #5
  %198 = or i32 %197, %67
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %263, label %200

200:                                              ; preds = %196
  %201 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** @_ZZNK5blink15EditingBehavior17InterpretKeyEventERKNS_13KeyboardEventEE22key_press_commands_map, align 8
  %202 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %201, i64 0, i32 0, i32 0
  %203 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %202, align 8
  %204 = icmp eq %"struct.WTF::KeyValuePair"* %203, null
  br i1 %204, label %263, label %205

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %201, i64 0, i32 0, i32 1
  %207 = load i32, i32* %206, align 8
  %208 = add i32 %207, -1
  %209 = zext i32 %208 to i64
  %210 = shl i32 %198, 15
  %211 = xor i32 %210, -1
  %212 = add i32 %198, %211
  %213 = lshr i32 %212, 10
  %214 = xor i32 %213, %212
  %215 = mul i32 %214, 9
  %216 = lshr i32 %215, 6
  %217 = xor i32 %216, %215
  %218 = shl i32 %217, 11
  %219 = xor i32 %218, -1
  %220 = add i32 %217, %219
  %221 = lshr i32 %220, 16
  %222 = xor i32 %221, %220
  %223 = and i32 %208, %222
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %203, i64 %224
  %226 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %225, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, %198
  br i1 %228, label %257, label %229

229:                                              ; preds = %205
  %230 = xor i32 %222, -1
  %231 = lshr i32 %220, 23
  %232 = add i32 %231, %230
  %233 = shl i32 %232, 12
  %234 = xor i32 %233, %232
  %235 = lshr i32 %234, 7
  %236 = xor i32 %235, %234
  %237 = shl i32 %236, 2
  %238 = xor i32 %237, %236
  %239 = lshr i32 %238, 20
  %240 = xor i32 %239, %238
  %241 = or i32 %240, 1
  %242 = zext i32 %241 to i64
  br label %243

243:                                              ; preds = %248, %229
  %244 = phi i32 [ %227, %229 ], [ %255, %248 ]
  %245 = phi i64 [ %224, %229 ], [ %252, %248 ]
  %246 = phi i64 [ 0, %229 ], [ %250, %248 ]
  %247 = icmp eq i32 %244, 0
  br i1 %247, label %263, label %248

248:                                              ; preds = %243
  %249 = icmp eq i64 %246, 0
  %250 = select i1 %249, i64 %242, i64 %246
  %251 = add i64 %250, %245
  %252 = and i64 %251, %209
  %253 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %203, i64 %252
  %254 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %253, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  %256 = icmp eq i32 %255, %198
  br i1 %256, label %257, label %243

257:                                              ; preds = %248, %205
  %258 = phi %"struct.WTF::KeyValuePair"* [ %225, %205 ], [ %253, %248 ]
  %259 = icmp eq %"struct.WTF::KeyValuePair"* %258, null
  br i1 %259, label %263, label %260

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %258, i64 0, i32 1
  %262 = load i8*, i8** %261, align 8
  br label %263

263:                                              ; preds = %243, %196, %200, %257, %260, %132, %165, %191, %2
  %264 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %2 ], [ %134, %132 ], [ %168, %165 ], [ null, %191 ], [ null, %196 ], [ %262, %260 ], [ null, %257 ], [ null, %200 ], [ null, %243 ]
  ret i8* %264

265:                                              ; preds = %53
  %266 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %56, 0
  %267 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %266, i64 0, i32 1
  %268 = bitcast i8** %267 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.38 to i64), i64* %268, align 8
  br label %269

269:                                              ; preds = %265, %53
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #5
  %270 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** @_ZZNK5blink15EditingBehavior17InterpretKeyEventERKNS_13KeyboardEventEE22key_press_commands_map, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #5
  store i32 13, i32* %6, align 4
  %271 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %270, i64 0, i32 0
  %272 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPKcEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EEjRKS3_EENS_18HashTableAddResultISE_S4_EEOT0_OT1_(%"class.WTF::HashTable.254"* %271, i32* nonnull dereferenceable(4) %6, i8** dereferenceable(8) getelementptr inbounds ([4 x %"struct.blink::(anonymous namespace)::KeyboardCodeKeyPressEntry"], [4 x %"struct.blink::(anonymous namespace)::KeyboardCodeKeyPressEntry"]* @_ZN5blink12_GLOBAL__N_128kKeyboardCodeKeyPressEntriesE, i64 0, i64 2, i32 2)) #5
  %273 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %272, 1
  %274 = and i8 %273, 1
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %276, label %280

276:                                              ; preds = %269
  %277 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %272, 0
  %278 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %277, i64 0, i32 1
  %279 = bitcast i8** %278 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.39 to i64), i64* %279, align 8
  br label %280

280:                                              ; preds = %276, %269
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #5
  %281 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** @_ZZNK5blink15EditingBehavior17InterpretKeyEventERKNS_13KeyboardEventEE22key_press_commands_map, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #5
  store i32 65549, i32* %6, align 4
  %282 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %281, i64 0, i32 0
  %283 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPKcEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EEjRKS3_EENS_18HashTableAddResultISE_S4_EEOT0_OT1_(%"class.WTF::HashTable.254"* %282, i32* nonnull dereferenceable(4) %6, i8** dereferenceable(8) getelementptr inbounds ([4 x %"struct.blink::(anonymous namespace)::KeyboardCodeKeyPressEntry"], [4 x %"struct.blink::(anonymous namespace)::KeyboardCodeKeyPressEntry"]* @_ZN5blink12_GLOBAL__N_128kKeyboardCodeKeyPressEntriesE, i64 0, i64 3, i32 2)) #5
  %284 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %283, 1
  %285 = and i8 %284, 1
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %287, label %291

287:                                              ; preds = %280
  %288 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %283, 0
  %289 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %288, i64 0, i32 1
  %290 = bitcast i8** %289 to i64*
  store i64 ptrtoint ([16 x i8]* @.str.40 to i64), i64* %290, align 8
  br label %291

291:                                              ; preds = %287, %280
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #5
  br label %60
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZNK5blink13KeyboardEvent7keyCodeEv(%"class.blink::KeyboardEvent"*) local_unnamed_addr #2

declare i32 @_ZNK5blink13KeyboardEvent8charCodeEv(%"class.blink::KeyboardEvent"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink15EditingBehavior21ShouldInsertCharacterERKNS_13KeyboardEventE(%"class.blink::EditingBehavior"* nocapture readnone, %"class.blink::KeyboardEvent"* nocapture readonly dereferenceable(176)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::WebKeyboardEvent"*, %"class.blink::WebKeyboardEvent"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %4, i64 0, i32 7, i64 1
  %6 = load i16, i16* %5, align 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %4, i64 0, i32 7, i64 0
  %10 = load i16, i16* %9, align 2
  %11 = icmp ult i16 %10, 32
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br label %17

17:                                               ; preds = %8, %12, %2
  %18 = phi i1 [ true, %2 ], [ false, %8 ], [ %16, %12 ]
  ret i1 %18
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPKcEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EEjRKS3_EENS_18HashTableAddResultISE_S4_EEOT0_OT1_(%"class.WTF::HashTable.254"*, i32* dereferenceable(4), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPKcEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.254"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %98, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #5
  %72 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  %84 = bitcast i8** %2 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast i8** %83 to i64*
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %87, align 4
  %90 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, %89
  %93 = shl i32 %92, 1
  %94 = load i32, i32* %12, align 8
  %95 = icmp ult i32 %93, %94
  br i1 %95, label %98, label %96

96:                                               ; preds = %79
  %97 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPKcEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.254"* %0, %"struct.WTF::KeyValuePair"* %81)
  br label %98

98:                                               ; preds = %50, %79, %96
  %99 = phi i8 [ 1, %79 ], [ 1, %96 ], [ 0, %50 ]
  %100 = phi %"struct.WTF::KeyValuePair"* [ %81, %79 ], [ %97, %96 ], [ %52, %50 ]
  %101 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %100, 0
  %102 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %101, i8 %99, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %102
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPKcEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS9_IS3_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.254"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #5
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.49, i64 0, i64 0), i8* %22, i8* %23) #5
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.50, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #5
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiPKcEEEES3_v, i64 0, i64 0)) #5
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #5
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPKcEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS9_IS3_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS4_jSF_(%"class.WTF::HashTable.254"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #5
  ret %"struct.WTF::KeyValuePair"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPKcEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS9_IS3_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS4_jSF_(%"class.WTF::HashTable.254"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.254"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %31

18:                                               ; preds = %117
  %19 = bitcast %"class.WTF::HashTable.254"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %118, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %121, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #5
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair"* %23

31:                                               ; preds = %13, %117
  %32 = phi i64 [ %17, %13 ], [ %118, %117 ]
  %33 = phi i32 [ %7, %13 ], [ %119, %117 ]
  %34 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %120, %117 ]
  %35 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %121, %117 ]
  %36 = phi i32 [ 0, %13 ], [ %122, %117 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, 1
  %42 = icmp ult i32 %41, 2
  br i1 %42, label %117, label %43

43:                                               ; preds = %31
  %44 = shl i32 %40, 15
  %45 = xor i32 %44, -1
  %46 = add i32 %40, %45
  %47 = lshr i32 %46, 10
  %48 = xor i32 %47, %46
  %49 = mul i32 %48, 9
  %50 = lshr i32 %49, 6
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 11
  %53 = xor i32 %52, -1
  %54 = add i32 %51, %53
  %55 = lshr i32 %54, 16
  %56 = xor i32 %55, %54
  %57 = and i32 %56, %14
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %58
  %60 = ptrtoint %"struct.WTF::KeyValuePair"* %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %81, label %64

64:                                               ; preds = %43
  %65 = xor i32 %56, -1
  %66 = lshr i32 %54, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %87

78:                                               ; preds = %94
  %79 = ptrtoint %"struct.WTF::KeyValuePair"* %101 to i64
  %80 = inttoptr i64 %96 to %"struct.WTF::KeyValuePair"*
  br label %81

81:                                               ; preds = %78, %43
  %82 = phi i64 [ %79, %78 ], [ %60, %43 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %80, %78 ], [ null, %43 ]
  %84 = icmp eq %"struct.WTF::KeyValuePair"* %83, null
  %85 = ptrtoint %"struct.WTF::KeyValuePair"* %83 to i64
  %86 = select i1 %84, i64 %82, i64 %85
  br label %106

87:                                               ; preds = %94, %64
  %88 = phi i64 [ 0, %64 ], [ %96, %94 ]
  %89 = phi i32 [ %62, %64 ], [ %104, %94 ]
  %90 = phi i64 [ %60, %64 ], [ %102, %94 ]
  %91 = phi i64 [ %58, %64 ], [ %100, %94 ]
  %92 = phi i64 [ 0, %64 ], [ %98, %94 ]
  %93 = icmp eq i32 %89, %40
  br i1 %93, label %106, label %94

94:                                               ; preds = %87
  %95 = icmp eq i32 %89, -1
  %96 = select i1 %95, i64 %90, i64 %88
  %97 = icmp eq i64 %92, 0
  %98 = select i1 %97, i64 %77, i64 %92
  %99 = add i64 %98, %91
  %100 = and i64 %99, %15
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %100
  %102 = ptrtoint %"struct.WTF::KeyValuePair"* %101 to i64
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %78, label %87

106:                                              ; preds = %87, %81
  %107 = phi i64 [ %86, %81 ], [ %90, %87 ]
  %108 = inttoptr i64 %107 to %"struct.WTF::KeyValuePair"*
  %109 = inttoptr i64 %107 to i8*
  %110 = bitcast %"struct.WTF::KeyValuePair"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 16, i1 false) #5
  %111 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %111, i64 %37
  %113 = icmp eq %"struct.WTF::KeyValuePair"* %112, %3
  %114 = select i1 %113, %"struct.WTF::KeyValuePair"* %108, %"struct.WTF::KeyValuePair"* %35
  %115 = load i32, i32* %6, align 8
  %116 = ptrtoint %"struct.WTF::KeyValuePair"* %111 to i64
  br label %117

117:                                              ; preds = %31, %106
  %118 = phi i64 [ %32, %31 ], [ %116, %106 ]
  %119 = phi i32 [ %33, %31 ], [ %115, %106 ]
  %120 = phi %"struct.WTF::KeyValuePair"* [ %34, %31 ], [ %111, %106 ]
  %121 = phi %"struct.WTF::KeyValuePair"* [ %35, %31 ], [ %114, %106 ]
  %122 = add i32 %36, 1
  %123 = icmp eq i32 %122, %119
  br i1 %123, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
