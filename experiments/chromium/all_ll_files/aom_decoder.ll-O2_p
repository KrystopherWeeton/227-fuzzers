; ModuleID = '../../third_party/libaom/source/libaom/aom/src/aom_decoder.c'
source_filename = "../../third_party/libaom/source/libaom/aom/src/aom_decoder.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.aom_codec_ctx = type { i8*, %struct.aom_codec_iface*, i32, i8*, i64, %union.anon.0, %struct.aom_codec_priv* }
%union.anon.0 = type { %struct.aom_codec_dec_cfg* }
%struct.aom_codec_priv = type { i8*, i64, %struct.anon.1 }
%struct.anon.1 = type { %struct.aom_fixed_buf, i32, i32, %struct.aom_codec_cx_pkt }
%struct.aom_fixed_buf = type { i8*, i64 }
%struct.aom_codec_cx_pkt = type { i32, %union.anon }
%union.anon = type { %struct.aom_psnr_pkt }
%struct.aom_psnr_pkt = type { [4 x i32], [4 x i64], [4 x double], [4 x i32], [4 x i64], [4 x double] }
%struct.aom_codec_iface = type { i8*, i32, i64, i32 (%struct.aom_codec_ctx*)*, i32 (%struct.aom_codec_alg_priv*)*, %struct.aom_codec_ctrl_fn_map*, %struct.aom_codec_dec_iface, %struct.aom_codec_enc_iface, i32 (%struct.aom_codec_alg_priv*, i8*, i8*)* }
%struct.aom_codec_alg_priv = type opaque
%struct.aom_codec_ctrl_fn_map = type { i32, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.aom_codec_dec_iface = type { i32 (i8*, i64, %struct.aom_codec_stream_info*)*, i32 (%struct.aom_codec_alg_priv*, %struct.aom_codec_stream_info*)*, i32 (%struct.aom_codec_alg_priv*, i8*, i64, i8*)*, %struct.aom_image* (%struct.aom_codec_alg_priv*, i8**)*, i32 (%struct.aom_codec_alg_priv*, i32 (i8*, i64, %struct.aom_codec_frame_buffer*)*, i32 (i8*, %struct.aom_codec_frame_buffer*)*, i8*)* }
%struct.aom_codec_stream_info = type { i32, i32, i32, i32, i32, i32 }
%struct.aom_image = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i8*], [3 x i32], i64, i32, i32, i32, i8*, i8*, i32, i32, %struct.aom_metadata_array*, i8* }
%struct.aom_metadata_array = type opaque
%struct.aom_codec_frame_buffer = type { i8*, i64, i8* }
%struct.aom_codec_enc_iface = type { i32, %struct.aom_codec_enc_cfg*, i32 (%struct.aom_codec_alg_priv*, %struct.aom_image*, i64, i64, i64)*, %struct.aom_codec_cx_pkt* (%struct.aom_codec_alg_priv*, i8**)*, i32 (%struct.aom_codec_alg_priv*, %struct.aom_codec_enc_cfg*)*, %struct.aom_fixed_buf* (%struct.aom_codec_alg_priv*)*, %struct.aom_image* (%struct.aom_codec_alg_priv*)* }
%struct.aom_codec_enc_cfg = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.aom_rational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.aom_fixed_buf, %struct.aom_fixed_buf, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [64 x i32], [64 x i32], i32, [5 x i32], %struct.cfg_options }
%struct.aom_rational = type { i32, i32 }
%struct.cfg_options = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.aom_codec_dec_cfg = type { i32, i32, i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_codec_dec_init_ver(%struct.aom_codec_ctx*, %struct.aom_codec_iface*, %struct.aom_codec_dec_cfg*, i64, i32) local_unnamed_addr #0 {
  %6 = icmp eq i32 %4, 22
  br i1 %6, label %7, label %43

7:                                                ; preds = %5
  %8 = icmp ne %struct.aom_codec_ctx* %0, null
  %9 = icmp ne %struct.aom_codec_iface* %1, null
  %10 = and i1 %8, %9
  br i1 %10, label %11, label %43

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 7
  br i1 %14, label %15, label %46

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %1, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %46, label %20

20:                                               ; preds = %15
  %21 = bitcast %struct.aom_codec_ctx* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 56, i1 false)
  %22 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 1
  store %struct.aom_codec_iface* %1, %struct.aom_codec_iface** %22, align 8
  %23 = bitcast %struct.aom_codec_iface* %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %struct.aom_codec_ctx* %0 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 6
  store %struct.aom_codec_priv* null, %struct.aom_codec_priv** %26, align 8
  %27 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 4
  store i64 %3, i64* %27, align 8
  %28 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 5, i32 0
  store %struct.aom_codec_dec_cfg* %2, %struct.aom_codec_dec_cfg** %28, align 8
  %29 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %1, i64 0, i32 3
  %30 = load i32 (%struct.aom_codec_ctx*)*, i32 (%struct.aom_codec_ctx*)** %29, align 8
  %31 = tail call i32 %30(%struct.aom_codec_ctx* nonnull %0) #3
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %46, label %33

33:                                               ; preds = %20
  %34 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %26, align 8
  %35 = icmp eq %struct.aom_codec_priv* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %34, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %33, %36
  %40 = phi i8* [ %38, %36 ], [ null, %33 ]
  %41 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 3
  store i8* %40, i8** %41, align 8
  %42 = tail call i32 @aom_codec_destroy(%struct.aom_codec_ctx* nonnull %0) #3
  br label %46

43:                                               ; preds = %7, %5
  %44 = phi i32 [ 3, %5 ], [ 8, %7 ]
  %45 = icmp eq %struct.aom_codec_ctx* %0, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %39, %20, %11, %15, %43
  %47 = phi i32 [ %44, %43 ], [ 4, %15 ], [ 3, %11 ], [ 0, %20 ], [ %31, %39 ]
  %48 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 %47, i32* %48, align 8
  br label %49

49:                                               ; preds = %43, %46
  %50 = phi i32 [ %44, %43 ], [ %47, %46 ]
  ret i32 %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @aom_codec_destroy(%struct.aom_codec_ctx*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_codec_peek_stream_info(%struct.aom_codec_iface* readonly, i8*, i64, %struct.aom_codec_stream_info*) local_unnamed_addr #0 {
  %5 = icmp ne %struct.aom_codec_iface* %0, null
  %6 = icmp ne i8* %1, null
  %7 = and i1 %5, %6
  %8 = icmp ne i64 %2, 0
  %9 = and i1 %7, %8
  %10 = icmp ne %struct.aom_codec_stream_info* %3, null
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %18

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.aom_codec_stream_info, %struct.aom_codec_stream_info* %3, i64 0, i32 0
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %struct.aom_codec_stream_info, %struct.aom_codec_stream_info* %3, i64 0, i32 1
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %0, i64 0, i32 6, i32 0
  %16 = load i32 (i8*, i64, %struct.aom_codec_stream_info*)*, i32 (i8*, i64, %struct.aom_codec_stream_info*)** %15, align 8
  %17 = tail call i32 %16(i8* nonnull %1, i64 %2, %struct.aom_codec_stream_info* nonnull %3) #3
  br label %18

18:                                               ; preds = %4, %12
  %19 = phi i32 [ %17, %12 ], [ 8, %4 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_codec_get_stream_info(%struct.aom_codec_ctx*, %struct.aom_codec_stream_info*) local_unnamed_addr #0 {
  %3 = icmp ne %struct.aom_codec_ctx* %0, null
  %4 = icmp ne %struct.aom_codec_stream_info* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %23

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 1
  %8 = load %struct.aom_codec_iface*, %struct.aom_codec_iface** %7, align 8
  %9 = icmp eq %struct.aom_codec_iface* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 6
  %12 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %11, align 8
  %13 = icmp eq %struct.aom_codec_priv* %12, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.aom_codec_stream_info, %struct.aom_codec_stream_info* %1, i64 0, i32 0
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %struct.aom_codec_stream_info, %struct.aom_codec_stream_info* %1, i64 0, i32 1
  store i32 0, i32* %16, align 4
  %17 = load %struct.aom_codec_iface*, %struct.aom_codec_iface** %7, align 8
  %18 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %17, i64 0, i32 6, i32 1
  %19 = load i32 (%struct.aom_codec_alg_priv*, %struct.aom_codec_stream_info*)*, i32 (%struct.aom_codec_alg_priv*, %struct.aom_codec_stream_info*)** %18, align 8
  %20 = bitcast %struct.aom_codec_priv** %11 to %struct.aom_codec_alg_priv**
  %21 = load %struct.aom_codec_alg_priv*, %struct.aom_codec_alg_priv** %20, align 8
  %22 = tail call i32 %19(%struct.aom_codec_alg_priv* %21, %struct.aom_codec_stream_info* nonnull %1) #3
  br label %23

23:                                               ; preds = %6, %10, %2, %14
  %24 = phi i32 [ %22, %14 ], [ 8, %2 ], [ 1, %10 ], [ 1, %6 ]
  br i1 %3, label %25, label %27

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 %24, i32* %26, align 8
  br label %27

27:                                               ; preds = %23, %25
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_codec_decode(%struct.aom_codec_ctx*, i8*, i64, i8*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.aom_codec_ctx* %0, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 1
  %8 = load %struct.aom_codec_iface*, %struct.aom_codec_iface** %7, align 8
  %9 = icmp eq %struct.aom_codec_iface* %8, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 6
  %12 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %11, align 8
  %13 = icmp eq %struct.aom_codec_priv* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %struct.aom_codec_priv* %12 to %struct.aom_codec_alg_priv*
  %16 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %8, i64 0, i32 6, i32 2
  %17 = load i32 (%struct.aom_codec_alg_priv*, i8*, i64, i8*)*, i32 (%struct.aom_codec_alg_priv*, i8*, i64, i8*)** %16, align 8
  %18 = tail call i32 %17(%struct.aom_codec_alg_priv* nonnull %15, i8* %1, i64 %2, i8* %3) #3
  br label %19

19:                                               ; preds = %6, %10, %14
  %20 = phi i32 [ 1, %6 ], [ 1, %10 ], [ %18, %14 ]
  %21 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 %20, i32* %21, align 8
  br label %22

22:                                               ; preds = %4, %19
  %23 = phi i32 [ %20, %19 ], [ 8, %4 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.aom_image* @aom_codec_get_frame(%struct.aom_codec_ctx* readonly, i8**) local_unnamed_addr #0 {
  %3 = icmp ne %struct.aom_codec_ctx* %0, null
  %4 = icmp ne i8** %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %19

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 1
  %8 = load %struct.aom_codec_iface*, %struct.aom_codec_iface** %7, align 8
  %9 = icmp eq %struct.aom_codec_iface* %8, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 6
  %12 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %11, align 8
  %13 = icmp eq %struct.aom_codec_priv* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %struct.aom_codec_priv* %12 to %struct.aom_codec_alg_priv*
  %16 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %8, i64 0, i32 6, i32 3
  %17 = load %struct.aom_image* (%struct.aom_codec_alg_priv*, i8**)*, %struct.aom_image* (%struct.aom_codec_alg_priv*, i8**)** %16, align 8
  %18 = tail call %struct.aom_image* %17(%struct.aom_codec_alg_priv* nonnull %15, i8** nonnull %1) #3
  br label %19

19:                                               ; preds = %2, %6, %10, %14
  %20 = phi %struct.aom_image* [ %18, %14 ], [ null, %10 ], [ null, %6 ], [ null, %2 ]
  ret %struct.aom_image* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_codec_set_frame_buffer_functions(%struct.aom_codec_ctx*, i32 (i8*, i64, %struct.aom_codec_frame_buffer*)*, i32 (i8*, %struct.aom_codec_frame_buffer*)*, i8*) local_unnamed_addr #0 {
  %5 = icmp ne %struct.aom_codec_ctx* %0, null
  %6 = icmp ne i32 (i8*, i64, %struct.aom_codec_frame_buffer*)* %1, null
  %7 = and i1 %5, %6
  %8 = icmp ne i32 (i8*, %struct.aom_codec_frame_buffer*)* %2, null
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %28

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 1
  %12 = load %struct.aom_codec_iface*, %struct.aom_codec_iface** %11, align 8
  %13 = icmp eq %struct.aom_codec_iface* %12, null
  br i1 %13, label %28, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 6
  %16 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %15, align 8
  %17 = icmp eq %struct.aom_codec_priv* %16, null
  %18 = bitcast %struct.aom_codec_priv* %16 to %struct.aom_codec_alg_priv*
  br i1 %17, label %28, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %12, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 2097152
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %12, i64 0, i32 6, i32 4
  %26 = load i32 (%struct.aom_codec_alg_priv*, i32 (i8*, i64, %struct.aom_codec_frame_buffer*)*, i32 (i8*, %struct.aom_codec_frame_buffer*)*, i8*)*, i32 (%struct.aom_codec_alg_priv*, i32 (i8*, i64, %struct.aom_codec_frame_buffer*)*, i32 (i8*, %struct.aom_codec_frame_buffer*)*, i8*)** %25, align 8
  %27 = tail call i32 %26(%struct.aom_codec_alg_priv* nonnull %18, i32 (i8*, i64, %struct.aom_codec_frame_buffer*)* nonnull %1, i32 (i8*, %struct.aom_codec_frame_buffer*)* nonnull %2, i8* %3) #3
  br label %28

28:                                               ; preds = %19, %10, %14, %4, %24
  %29 = phi i32 [ %27, %24 ], [ 8, %4 ], [ 1, %14 ], [ 1, %10 ], [ 4, %19 ]
  br i1 %5, label %30, label %32

30:                                               ; preds = %28
  %31 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 %29, i32* %31, align 8
  br label %32

32:                                               ; preds = %28, %30
  ret i32 %29
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
