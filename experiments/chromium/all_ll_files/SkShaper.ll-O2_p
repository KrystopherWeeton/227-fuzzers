; ModuleID = '../../third_party/skia/modules/skshaper/src/SkShaper.cpp'
source_filename = "../../third_party/skia/modules/skshaper/src/SkShaper.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkShaper = type { i32 (...)** }
%class.sk_sp = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkShaper::BiDiRunIterator" = type { %"class.SkShaper::RunIterator" }
%"class.SkShaper::RunIterator" = type { i32 (...)** }
%"class.SkShaper::ScriptRunIterator" = type { %"class.SkShaper::RunIterator" }
%"class.SkShaper::FontRunIterator" = type { %"class.SkShaper::RunIterator" }
%class.SkFont = type <{ %class.sk_sp.34, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.34 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.35" }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i8 }
%class.FontMgrRunIterator = type { %"class.SkShaper::FontRunIterator", i8*, i8*, i8*, %class.sk_sp, %class.SkFont, %class.SkFont, %class.SkFont*, i8*, %class.SkFontStyle, %"class.SkShaper::LanguageRunIterator"* }
%"class.SkShaper::LanguageRunIterator" = type { %"class.SkShaper::RunIterator" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.SkString = type { %class.sk_sp.57 }
%class.sk_sp.57 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTextBlobBuilderRunHandler = type <{ %"class.SkShaper::RunHandler", %class.SkTextBlobBuilder, i8*, i32*, i32, i32, float, float, float, %struct.SkPoint, %struct.SkPoint, [4 x i8] }>
%"class.SkShaper::RunHandler" = type { i32 (...)** }
%class.SkTextBlobBuilder = type { %class.SkAutoTMalloc, i64, i64, %struct.SkRect, i32, i8, i64, %"struct.SkTextBlobBuilder::RunBuffer" }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.64" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { i8* }
%"struct.SkTextBlobBuilder::RunBuffer" = type { i16*, float*, i8*, i32* }
%struct.SkPoint = type { float, float }
%"struct.SkShaper::RunHandler::RunInfo" = type { %class.SkFont*, i8, %struct.SkPoint, i64, %"struct.SkShaper::RunHandler::Range" }
%"struct.SkShaper::RunHandler::Range" = type { i64, i64 }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%"struct.SkShaper::RunHandler::Buffer" = type { i16*, %struct.SkPoint*, %struct.SkPoint*, i32*, %struct.SkPoint }
%class.sk_sp.68 = type { %class.SkTextBlob* }
%class.SkTextBlob = type { %class.SkNVRefCnt, %struct.SkRect, i32, %"struct.std::__1::atomic.69" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { i32 }
%"class.SkShaper::TrivialBiDiRunIterator" = type { %"class.SkShaper::TrivialRunIterator.base", i8, [6 x i8] }
%"class.SkShaper::TrivialRunIterator.base" = type <{ %"class.SkShaper::BiDiRunIterator", i64, i8 }>
%"class.SkShaper::TrivialRunIterator" = type <{ %"class.SkShaper::BiDiRunIterator", i64, i8, [7 x i8] }>
%"class.SkShaper::TrivialScriptRunIterator" = type { %"class.SkShaper::TrivialRunIterator.base.24", i32 }
%"class.SkShaper::TrivialRunIterator.base.24" = type <{ %"class.SkShaper::ScriptRunIterator", i64, i8 }>
%"class.SkShaper::TrivialRunIterator.23" = type <{ %"class.SkShaper::ScriptRunIterator", i64, i8, [7 x i8] }>
%"class.SkShaper::TrivialLanguageRunIterator" = type { %"class.SkShaper::TrivialRunIterator.base.56", %class.SkString }
%"class.SkShaper::TrivialRunIterator.base.56" = type <{ %"class.SkShaper::LanguageRunIterator", i64, i8 }>
%"class.SkShaper::TrivialRunIterator.55" = type <{ %"class.SkShaper::LanguageRunIterator", i64, i8, [7 x i8] }>

$_ZN27SkTextBlobBuilderRunHandlerD2Ev = comdat any

$_ZN27SkTextBlobBuilderRunHandlerD0Ev = comdat any

$_ZN8SkShaper22TrivialBiDiRunIteratorD0Ev = comdat any

$_ZN8SkShaper18TrivialRunIteratorINS_15BiDiRunIteratorEE7consumeEv = comdat any

$_ZNK8SkShaper18TrivialRunIteratorINS_15BiDiRunIteratorEE15endOfCurrentRunEv = comdat any

$_ZNK8SkShaper18TrivialRunIteratorINS_15BiDiRunIteratorEE5atEndEv = comdat any

$_ZNK8SkShaper22TrivialBiDiRunIterator12currentLevelEv = comdat any

$_ZN8SkShaper24TrivialScriptRunIteratorD0Ev = comdat any

$_ZN8SkShaper18TrivialRunIteratorINS_17ScriptRunIteratorEE7consumeEv = comdat any

$_ZNK8SkShaper18TrivialRunIteratorINS_17ScriptRunIteratorEE15endOfCurrentRunEv = comdat any

$_ZNK8SkShaper18TrivialRunIteratorINS_17ScriptRunIteratorEE5atEndEv = comdat any

$_ZNK8SkShaper24TrivialScriptRunIterator13currentScriptEv = comdat any

$_ZN18FontMgrRunIteratorD2Ev = comdat any

$_ZN18FontMgrRunIteratorD0Ev = comdat any

$_ZN18FontMgrRunIterator7consumeEv = comdat any

$_ZNK18FontMgrRunIterator15endOfCurrentRunEv = comdat any

$_ZNK18FontMgrRunIterator5atEndEv = comdat any

$_ZNK18FontMgrRunIterator11currentFontEv = comdat any

$_ZN8SkShaper11RunIteratorD2Ev = comdat any

$_ZN18FontMgrRunIteratorC2EPKcmRK6SkFont5sk_spI9SkFontMgrES1_11SkFontStylePKN8SkShaper19LanguageRunIteratorE = comdat any

$_ZN8SkShaper26TrivialLanguageRunIteratorD2Ev = comdat any

$_ZN8SkShaper26TrivialLanguageRunIteratorD0Ev = comdat any

$_ZN8SkShaper18TrivialRunIteratorINS_19LanguageRunIteratorEE7consumeEv = comdat any

$_ZNK8SkShaper18TrivialRunIteratorINS_19LanguageRunIteratorEE15endOfCurrentRunEv = comdat any

$_ZNK8SkShaper18TrivialRunIteratorINS_19LanguageRunIteratorEE5atEndEv = comdat any

$_ZNK8SkShaper26TrivialLanguageRunIterator15currentLanguageEv = comdat any

$_ZTVN8SkShaper22TrivialBiDiRunIteratorE = comdat any

$_ZTVN8SkShaper24TrivialScriptRunIteratorE = comdat any

$_ZTV18FontMgrRunIterator = comdat any

$_ZTVN8SkShaper26TrivialLanguageRunIteratorE = comdat any

@_ZTV8SkShaper = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkShaper*)* @_ZN8SkShaperD2Ev to i8*), i8* bitcast (void (%class.SkShaper*)* @_ZN8SkShaperD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTV27SkTextBlobBuilderRunHandler = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkTextBlobBuilderRunHandler*)* @_ZN27SkTextBlobBuilderRunHandlerD2Ev to i8*), i8* bitcast (void (%class.SkTextBlobBuilderRunHandler*)* @_ZN27SkTextBlobBuilderRunHandlerD0Ev to i8*), i8* bitcast (void (%class.SkTextBlobBuilderRunHandler*)* @_ZN27SkTextBlobBuilderRunHandler9beginLineEv to i8*), i8* bitcast (void (%class.SkTextBlobBuilderRunHandler*, %"struct.SkShaper::RunHandler::RunInfo"*)* @_ZN27SkTextBlobBuilderRunHandler7runInfoERKN8SkShaper10RunHandler7RunInfoE to i8*), i8* bitcast (void (%class.SkTextBlobBuilderRunHandler*)* @_ZN27SkTextBlobBuilderRunHandler13commitRunInfoEv to i8*), i8* bitcast (void (%"struct.SkShaper::RunHandler::Buffer"*, %class.SkTextBlobBuilderRunHandler*, %"struct.SkShaper::RunHandler::RunInfo"*)* @_ZN27SkTextBlobBuilderRunHandler9runBufferERKN8SkShaper10RunHandler7RunInfoE to i8*), i8* bitcast (void (%class.SkTextBlobBuilderRunHandler*, %"struct.SkShaper::RunHandler::RunInfo"*)* @_ZN27SkTextBlobBuilderRunHandler15commitRunBufferERKN8SkShaper10RunHandler7RunInfoE to i8*), i8* bitcast (void (%class.SkTextBlobBuilderRunHandler*)* @_ZN27SkTextBlobBuilderRunHandler10commitLineEv to i8*)] }, align 8
@_ZTVN8SkShaper22TrivialBiDiRunIteratorE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkShaper::RunIterator"*)* @_ZN8SkShaper11RunIteratorD2Ev to i8*), i8* bitcast (void (%"class.SkShaper::TrivialBiDiRunIterator"*)* @_ZN8SkShaper22TrivialBiDiRunIteratorD0Ev to i8*), i8* bitcast (void (%"class.SkShaper::TrivialRunIterator"*)* @_ZN8SkShaper18TrivialRunIteratorINS_15BiDiRunIteratorEE7consumeEv to i8*), i8* bitcast (i64 (%"class.SkShaper::TrivialRunIterator"*)* @_ZNK8SkShaper18TrivialRunIteratorINS_15BiDiRunIteratorEE15endOfCurrentRunEv to i8*), i8* bitcast (i1 (%"class.SkShaper::TrivialRunIterator"*)* @_ZNK8SkShaper18TrivialRunIteratorINS_15BiDiRunIteratorEE5atEndEv to i8*), i8* bitcast (i8 (%"class.SkShaper::TrivialBiDiRunIterator"*)* @_ZNK8SkShaper22TrivialBiDiRunIterator12currentLevelEv to i8*)] }, comdat, align 8
@_ZTVN8SkShaper24TrivialScriptRunIteratorE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkShaper::RunIterator"*)* @_ZN8SkShaper11RunIteratorD2Ev to i8*), i8* bitcast (void (%"class.SkShaper::TrivialScriptRunIterator"*)* @_ZN8SkShaper24TrivialScriptRunIteratorD0Ev to i8*), i8* bitcast (void (%"class.SkShaper::TrivialRunIterator.23"*)* @_ZN8SkShaper18TrivialRunIteratorINS_17ScriptRunIteratorEE7consumeEv to i8*), i8* bitcast (i64 (%"class.SkShaper::TrivialRunIterator.23"*)* @_ZNK8SkShaper18TrivialRunIteratorINS_17ScriptRunIteratorEE15endOfCurrentRunEv to i8*), i8* bitcast (i1 (%"class.SkShaper::TrivialRunIterator.23"*)* @_ZNK8SkShaper18TrivialRunIteratorINS_17ScriptRunIteratorEE5atEndEv to i8*), i8* bitcast (i32 (%"class.SkShaper::TrivialScriptRunIterator"*)* @_ZNK8SkShaper24TrivialScriptRunIterator13currentScriptEv to i8*)] }, comdat, align 8
@_ZTV18FontMgrRunIterator = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.FontMgrRunIterator*)* @_ZN18FontMgrRunIteratorD2Ev to i8*), i8* bitcast (void (%class.FontMgrRunIterator*)* @_ZN18FontMgrRunIteratorD0Ev to i8*), i8* bitcast (void (%class.FontMgrRunIterator*)* @_ZN18FontMgrRunIterator7consumeEv to i8*), i8* bitcast (i64 (%class.FontMgrRunIterator*)* @_ZNK18FontMgrRunIterator15endOfCurrentRunEv to i8*), i8* bitcast (i1 (%class.FontMgrRunIterator*)* @_ZNK18FontMgrRunIterator5atEndEv to i8*), i8* bitcast (%class.SkFont* (%class.FontMgrRunIterator*)* @_ZNK18FontMgrRunIterator11currentFontEv to i8*)] }, comdat, align 8
@_ZTVN8SkShaper26TrivialLanguageRunIteratorE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkShaper::TrivialLanguageRunIterator"*)* @_ZN8SkShaper26TrivialLanguageRunIteratorD2Ev to i8*), i8* bitcast (void (%"class.SkShaper::TrivialLanguageRunIterator"*)* @_ZN8SkShaper26TrivialLanguageRunIteratorD0Ev to i8*), i8* bitcast (void (%"class.SkShaper::TrivialRunIterator.55"*)* @_ZN8SkShaper18TrivialRunIteratorINS_19LanguageRunIteratorEE7consumeEv to i8*), i8* bitcast (i64 (%"class.SkShaper::TrivialRunIterator.55"*)* @_ZNK8SkShaper18TrivialRunIteratorINS_19LanguageRunIteratorEE15endOfCurrentRunEv to i8*), i8* bitcast (i1 (%"class.SkShaper::TrivialRunIterator.55"*)* @_ZNK8SkShaper18TrivialRunIteratorINS_19LanguageRunIteratorEE5atEndEv to i8*), i8* bitcast (i8* (%"class.SkShaper::TrivialLanguageRunIterator"*)* @_ZNK8SkShaper26TrivialLanguageRunIterator15currentLanguageEv to i8*)] }, comdat, align 8

@_ZN8SkShaperD1Ev = hidden unnamed_addr alias void (%class.SkShaper*), void (%class.SkShaper*)* @_ZN8SkShaperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkShaper* @_ZN8SkShaper4MakeE5sk_spI9SkFontMgrE(%class.sk_sp* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = tail call %class.SkShaper* @_ZN8SkShaper13MakePrimitiveEv() #12
  ret %class.SkShaper* %2
}

declare %class.SkShaper* @_ZN8SkShaper13MakePrimitiveEv() local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8SkShaper11PurgeCachesEv() local_unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkShaper::BiDiRunIterator"* @_ZN8SkShaper19MakeBiDiRunIteratorEPKcmh(i8* nocapture readnone, i64, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 24) #13
  %5 = bitcast i8* %4 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i64*
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 16
  %9 = icmp eq i64 %1, 0
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8SkShaper22TrivialBiDiRunIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 17
  store i8 %2, i8* %11, align 1
  %12 = bitcast i8* %4 to %"class.SkShaper::BiDiRunIterator"*
  ret %"class.SkShaper::BiDiRunIterator"* %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkShaper::ScriptRunIterator"* @_ZN8SkShaper21MakeScriptRunIteratorEPKcmj(i8* nocapture readnone, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 24) #13
  %5 = bitcast i8* %4 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i64*
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 16
  %9 = icmp eq i64 %1, 0
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8SkShaper24TrivialScriptRunIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 20
  %12 = bitcast i8* %11 to i32*
  store i32 %2, i32* %12, align 4
  %13 = bitcast i8* %4 to %"class.SkShaper::ScriptRunIterator"*
  ret %"class.SkShaper::ScriptRunIterator"* %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8SkShaperC2Ev(%class.SkShaper* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkShaper, %class.SkShaper* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8SkShaper, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8SkShaperD2Ev(%class.SkShaper* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN8SkShaperD0Ev(%class.SkShaper* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkShaper::FontRunIterator"* @_ZN8SkShaper22MakeFontMgrRunIteratorEPKcmRK6SkFont5sk_spI9SkFontMgrE(i8*, i64, %class.SkFont* dereferenceable(24), %class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %class.sk_sp.34, align 8
  %7 = tail call i8* @_Znwm(i64 120) #13
  %8 = bitcast i8* %7 to %class.FontMgrRunIterator*
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %10 = bitcast %class.sk_sp* %3 to i64*
  %11 = load i64, i64* %10, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %9, align 8
  %12 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = bitcast %class.sk_sp* %5 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast %class.sk_sp.34* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  call void @_ZNK6SkFont20refTypefaceOrDefaultEv(%class.sk_sp.34* nonnull sret %6, %class.SkFont* %2) #12
  %15 = getelementptr inbounds %class.sk_sp.34, %class.sk_sp.34* %6, i64 0, i32 0
  %16 = load %class.SkTypeface*, %class.SkTypeface** %15, align 8
  %17 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %16, i64 0, i32 2, i32 0
  %18 = load i32, i32* %17, align 4
  call void @_ZN18FontMgrRunIteratorC2EPKcmRK6SkFont5sk_spI9SkFontMgrES1_11SkFontStylePKN8SkShaper19LanguageRunIteratorE(%class.FontMgrRunIterator* nonnull %8, i8* %0, i64 %1, %class.SkFont* dereferenceable(24) %2, %class.sk_sp* nonnull %5, i8* null, i32 %18, %"class.SkShaper::LanguageRunIterator"* null) #12
  %19 = load %class.SkTypeface*, %class.SkTypeface** %15, align 8
  %20 = icmp eq %class.SkTypeface* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkTypeface* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkTypeface* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  call void %30(%class.SkRefCntBase* nonnull %26) #12
  br label %31

31:                                               ; preds = %25, %21, %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %32 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %33 = load %class.SkFontMgr*, %class.SkFontMgr** %32, align 8
  %34 = icmp eq %class.SkFontMgr* %33, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %33, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = bitcast %class.SkFontMgr* %33 to %class.SkRefCntBase*
  %41 = bitcast %class.SkFontMgr* %33 to void (%class.SkRefCntBase*)***
  %42 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, i64 2
  %44 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, align 8
  call void %44(%class.SkRefCntBase* nonnull %40) #12
  br label %45

45:                                               ; preds = %39, %35, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  %46 = bitcast i8* %7 to %"class.SkShaper::FontRunIterator"*
  ret %"class.SkShaper::FontRunIterator"* %46
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkShaper::FontRunIterator"* @_ZN8SkShaper22MakeFontMgrRunIteratorEPKcmRK6SkFont5sk_spI9SkFontMgrES1_11SkFontStylePKNS_19LanguageRunIteratorE(i8*, i64, %class.SkFont* dereferenceable(24), %class.sk_sp* nocapture, i8*, i32, %"class.SkShaper::LanguageRunIterator"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.sk_sp, align 8
  %9 = bitcast %class.sk_sp* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = tail call i8* @_Znwm(i64 120) #13
  %11 = bitcast i8* %10 to %class.FontMgrRunIterator*
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %13 = bitcast %class.sk_sp* %3 to i64*
  %14 = load i64, i64* %13, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %12, align 8
  %15 = bitcast %class.sk_sp* %8 to i64*
  store i64 %14, i64* %15, align 8
  call void @_ZN18FontMgrRunIteratorC2EPKcmRK6SkFont5sk_spI9SkFontMgrES1_11SkFontStylePKN8SkShaper19LanguageRunIteratorE(%class.FontMgrRunIterator* nonnull %11, i8* %0, i64 %1, %class.SkFont* dereferenceable(24) %2, %class.sk_sp* nonnull %8, i8* %4, i32 %5, %"class.SkShaper::LanguageRunIterator"* %6) #12
  %16 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  %17 = load %class.SkFontMgr*, %class.SkFontMgr** %16, align 8
  %18 = icmp eq %class.SkFontMgr* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = bitcast %class.SkFontMgr* %17 to %class.SkRefCntBase*
  %25 = bitcast %class.SkFontMgr* %17 to void (%class.SkRefCntBase*)***
  %26 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, i64 2
  %28 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, align 8
  call void %28(%class.SkRefCntBase* nonnull %24) #12
  br label %29

29:                                               ; preds = %23, %19, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  %30 = bitcast i8* %10 to %"class.SkShaper::FontRunIterator"*
  ret %"class.SkShaper::FontRunIterator"* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkShaper::LanguageRunIterator"* @_ZN8SkShaper26MakeStdLanguageRunIteratorEPKcm(i8* nocapture readnone, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  call void @_ZNSt3__16localeC1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @_ZNKSt3__16locale4nameEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::locale"* nonnull %4) #12
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = select i1 %10, i8* %12, i8* %5
  %14 = call i8* @_Znwm(i64 32) #13
  %15 = bitcast i8* %14 to i32 (...)***
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = bitcast i8* %16 to i64*
  store i64 %1, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %14, i64 16
  %19 = icmp eq i64 %1, 0
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %18, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8SkShaper26TrivialLanguageRunIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 24
  %22 = bitcast i8* %21 to %class.SkString*
  call void @_ZN8SkStringC1EPKc(%class.SkString* %22, i8* %13) #12
  %23 = load i8, i8* %8, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %2
  %26 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %2, %25
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  %28 = bitcast i8* %14 to %"class.SkShaper::LanguageRunIterator"*
  ret %"class.SkShaper::LanguageRunIterator"* %28
}

; Function Attrs: nounwind
declare void @_ZNSt3__16localeC1Ev(%"class.std::__1::locale"*) unnamed_addr #7

declare void @_ZNKSt3__16locale4nameEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::locale"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN27SkTextBlobBuilderRunHandler9beginLineEv(%class.SkTextBlobBuilderRunHandler* nocapture) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 10
  %3 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 9
  %4 = bitcast %struct.SkPoint* %2 to i64*
  %5 = bitcast %struct.SkPoint* %3 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 4
  %7 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 6
  store float 0.000000e+00, float* %7, align 8
  %8 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 7
  store float 0.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 8
  store float 0.000000e+00, float* %9, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27SkTextBlobBuilderRunHandler7runInfoERKN8SkShaper10RunHandler7RunInfoE(%class.SkTextBlobBuilderRunHandler* nocapture, %"struct.SkShaper::RunHandler::RunInfo"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkFontMetrics, align 4
  %4 = bitcast %struct.SkFontMetrics* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #12
  %5 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %3, i64 0, i32 0
  store i32 -1431655766, i32* %5, align 4
  %6 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %3, i64 0, i32 1
  %7 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %3, i64 0, i32 2
  %8 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %3, i64 0, i32 3
  %9 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %3, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %1, i64 0, i32 0
  %11 = bitcast float* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 -1, i64 60, i1 false)
  %12 = load %class.SkFont*, %class.SkFont** %10, align 8
  %13 = call float @_ZNK6SkFont10getMetricsEP13SkFontMetrics(%class.SkFont* %12, %struct.SkFontMetrics* nonnull %3) #12
  %14 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 6
  %15 = load float, float* %7, align 4
  %16 = load float, float* %14, align 4
  %17 = fcmp olt float %15, %16
  %18 = select i1 %17, float %15, float %16
  store float %18, float* %14, align 8
  %19 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 7
  %20 = load float, float* %19, align 4
  %21 = load float, float* %8, align 4
  %22 = fcmp olt float %20, %21
  %23 = select i1 %22, float %21, float %20
  store float %23, float* %19, align 4
  %24 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 8
  %25 = load float, float* %24, align 4
  %26 = load float, float* %9, align 4
  %27 = fcmp olt float %25, %26
  %28 = select i1 %27, float %26, float %25
  store float %28, float* %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #12
  ret void
}

declare float @_ZNK6SkFont10getMetricsEP13SkFontMetrics(%class.SkFont*, %struct.SkFontMetrics*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN27SkTextBlobBuilderRunHandler13commitRunInfoEv(%class.SkTextBlobBuilderRunHandler* nocapture) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 6
  %3 = load float, float* %2, align 8
  %4 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 9, i32 1
  %5 = load float, float* %4, align 4
  %6 = fsub float %5, %3
  store float %6, float* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27SkTextBlobBuilderRunHandler9runBufferERKN8SkShaper10RunHandler7RunInfoE(%"struct.SkShaper::RunHandler::Buffer"* noalias nocapture sret, %class.SkTextBlobBuilderRunHandler*, %"struct.SkShaper::RunHandler::RunInfo"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %2, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, 2147483648
  %7 = trunc i64 %5 to i32
  %8 = select i1 %6, i32 %7, i32 2147483647
  %9 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %2, i64 0, i32 4
  %10 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %2, i64 0, i32 4, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, 2147483648
  %13 = trunc i64 %11 to i32
  %14 = select i1 %12, i32 %13, i32 2147483647
  %15 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %1, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %2, i64 0, i32 0
  %17 = load %class.SkFont*, %class.SkFont** %16, align 8
  %18 = tail call dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder15allocRunTextPosERK6SkFontiiPK6SkRect(%class.SkTextBlobBuilder* %15, %class.SkFont* dereferenceable(24) %17, i32 %8, i32 %14, %struct.SkRect* null) #12
  %19 = getelementptr inbounds %"struct.SkTextBlobBuilder::RunBuffer", %"struct.SkTextBlobBuilder::RunBuffer"* %18, i64 0, i32 2
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %1, i64 0, i32 2
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"struct.SkShaper::RunHandler::Range", %"struct.SkShaper::RunHandler::Range"* %9, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %24, i64 %28
  %30 = sext i32 %14 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* align 1 %29, i64 %30, i1 false)
  br label %31

31:                                               ; preds = %22, %3, %26
  %32 = getelementptr inbounds %"struct.SkTextBlobBuilder::RunBuffer", %"struct.SkTextBlobBuilder::RunBuffer"* %18, i64 0, i32 3
  %33 = bitcast i32** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %1, i64 0, i32 3
  %36 = bitcast i32** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %1, i64 0, i32 5
  store i32 %8, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.SkShaper::RunHandler::Range", %"struct.SkShaper::RunHandler::Range"* %9, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %1, i64 0, i32 4
  store i32 %40, i32* %41, align 8
  %42 = bitcast %"struct.SkTextBlobBuilder::RunBuffer"* %18 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 8
  %44 = bitcast %"struct.SkShaper::RunHandler::Buffer"* %0 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %44, align 8
  %45 = getelementptr inbounds %"struct.SkShaper::RunHandler::Buffer", %"struct.SkShaper::RunHandler::Buffer"* %0, i64 0, i32 2
  store %struct.SkPoint* null, %struct.SkPoint** %45, align 8
  %46 = getelementptr inbounds %"struct.SkShaper::RunHandler::Buffer", %"struct.SkShaper::RunHandler::Buffer"* %0, i64 0, i32 3
  %47 = load i64, i64* %33, align 8
  %48 = bitcast i32** %46 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.SkShaper::RunHandler::Buffer", %"struct.SkShaper::RunHandler::Buffer"* %0, i64 0, i32 4
  %50 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %1, i64 0, i32 9
  %51 = bitcast %struct.SkPoint* %50 to i64*
  %52 = bitcast %struct.SkPoint* %49 to i64*
  %53 = load i64, i64* %51, align 4
  store i64 %53, i64* %52, align 8
  ret void
}

declare dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder15allocRunTextPosERK6SkFontiiPK6SkRect(%class.SkTextBlobBuilder*, %class.SkFont* dereferenceable(24), i32, i32, %struct.SkRect*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN27SkTextBlobBuilderRunHandler15commitRunBufferERKN8SkShaper10RunHandler7RunInfoE(%class.SkTextBlobBuilderRunHandler* nocapture, %"struct.SkShaper::RunHandler::RunInfo"* nocapture readonly dereferenceable(48)) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 4
  %8 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 3
  br label %20

9:                                                ; preds = %20, %2
  %10 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %1, i64 0, i32 2, i32 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 9, i32 0
  %13 = load float, float* %12, align 4
  %14 = fadd float %11, %13
  store float %14, float* %12, align 4
  %15 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %1, i64 0, i32 2, i32 1
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 9, i32 1
  %18 = load float, float* %17, align 4
  %19 = fadd float %16, %18
  store float %19, float* %17, align 4
  ret void

20:                                               ; preds = %6, %20
  %21 = phi i64 [ 0, %6 ], [ %27, %20 ]
  %22 = load i32, i32* %7, align 8
  %23 = load i32*, i32** %8, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %21
  %25 = load i32, i32* %24, align 4
  %26 = sub i32 %25, %22
  store i32 %26, i32* %24, align 4
  %27 = add nuw nsw i64 %21, 1
  %28 = load i32, i32* %3, align 4
  %29 = sext i32 %28 to i64
  %30 = icmp slt i64 %27, %29
  br i1 %30, label %20, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27SkTextBlobBuilderRunHandler10commitLineEv(%class.SkTextBlobBuilderRunHandler* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 7
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 8
  %5 = load float, float* %4, align 8
  %6 = fadd float %3, %5
  %7 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 6
  %8 = load float, float* %7, align 8
  %9 = fsub float %6, %8
  %10 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 10, i32 0
  %11 = load float, float* %10, align 4
  %12 = fadd float %11, 0.000000e+00
  store float %12, float* %10, align 4
  %13 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 10, i32 1
  %14 = load float, float* %13, align 4
  %15 = fadd float %9, %14
  store float %15, float* %13, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27SkTextBlobBuilderRunHandler8makeBlobEv(%class.sk_sp.68* noalias sret, %class.SkTextBlobBuilderRunHandler*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %1, i64 0, i32 1
  tail call void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.68* sret %0, %class.SkTextBlobBuilder* %3) #12
  ret void
}

declare void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.68* sret, %class.SkTextBlobBuilder*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27SkTextBlobBuilderRunHandlerD2Ev(%class.SkTextBlobBuilderRunHandler*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV27SkTextBlobBuilderRunHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 1
  tail call void @_ZN17SkTextBlobBuilderD1Ev(%class.SkTextBlobBuilder* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27SkTextBlobBuilderRunHandlerD0Ev(%class.SkTextBlobBuilderRunHandler*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV27SkTextBlobBuilderRunHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkTextBlobBuilderRunHandler, %class.SkTextBlobBuilderRunHandler* %0, i64 0, i32 1
  tail call void @_ZN17SkTextBlobBuilderD1Ev(%class.SkTextBlobBuilder* %3) #12
  %4 = bitcast %class.SkTextBlobBuilderRunHandler* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN17SkTextBlobBuilderD1Ev(%class.SkTextBlobBuilder*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkShaper22TrivialBiDiRunIteratorD0Ev(%"class.SkShaper::TrivialBiDiRunIterator"*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %"class.SkShaper::TrivialBiDiRunIterator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkShaper18TrivialRunIteratorINS_15BiDiRunIteratorEE7consumeEv(%"class.SkShaper::TrivialRunIterator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkShaper::TrivialRunIterator", %"class.SkShaper::TrivialRunIterator"* %0, i64 0, i32 2
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK8SkShaper18TrivialRunIteratorINS_15BiDiRunIteratorEE15endOfCurrentRunEv(%"class.SkShaper::TrivialRunIterator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkShaper::TrivialRunIterator", %"class.SkShaper::TrivialRunIterator"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkShaper::TrivialRunIterator", %"class.SkShaper::TrivialRunIterator"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ]
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8SkShaper18TrivialRunIteratorINS_15BiDiRunIteratorEE5atEndEv(%"class.SkShaper::TrivialRunIterator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkShaper::TrivialRunIterator", %"class.SkShaper::TrivialRunIterator"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK8SkShaper22TrivialBiDiRunIterator12currentLevelEv(%"class.SkShaper::TrivialBiDiRunIterator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkShaper::TrivialBiDiRunIterator", %"class.SkShaper::TrivialBiDiRunIterator"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 1
  ret i8 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkShaper24TrivialScriptRunIteratorD0Ev(%"class.SkShaper::TrivialScriptRunIterator"*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %"class.SkShaper::TrivialScriptRunIterator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkShaper18TrivialRunIteratorINS_17ScriptRunIteratorEE7consumeEv(%"class.SkShaper::TrivialRunIterator.23"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkShaper::TrivialRunIterator.23", %"class.SkShaper::TrivialRunIterator.23"* %0, i64 0, i32 2
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK8SkShaper18TrivialRunIteratorINS_17ScriptRunIteratorEE15endOfCurrentRunEv(%"class.SkShaper::TrivialRunIterator.23"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkShaper::TrivialRunIterator.23", %"class.SkShaper::TrivialRunIterator.23"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkShaper::TrivialRunIterator.23", %"class.SkShaper::TrivialRunIterator.23"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ]
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8SkShaper18TrivialRunIteratorINS_17ScriptRunIteratorEE5atEndEv(%"class.SkShaper::TrivialRunIterator.23"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkShaper::TrivialRunIterator.23", %"class.SkShaper::TrivialRunIterator.23"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK8SkShaper24TrivialScriptRunIterator13currentScriptEv(%"class.SkShaper::TrivialScriptRunIterator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkShaper::TrivialScriptRunIterator", %"class.SkShaper::TrivialScriptRunIterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare void @_ZNK6SkFont20refTypefaceOrDefaultEv(%class.sk_sp.34* sret, %class.SkFont*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18FontMgrRunIteratorD2Ev(%class.FontMgrRunIterator*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV18FontMgrRunIterator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %class.SkTypeface*, %class.SkTypeface** %3, align 8
  %5 = icmp eq %class.SkTypeface* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkTypeface* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkTypeface* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #12
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 5, i32 0, i32 0
  %18 = load %class.SkTypeface*, %class.SkTypeface** %17, align 8
  %19 = icmp eq %class.SkTypeface* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkTypeface* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkTypeface* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #12
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 4, i32 0
  %32 = load %class.SkFontMgr*, %class.SkFontMgr** %31, align 8
  %33 = icmp eq %class.SkFontMgr* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkFontMgr* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkFontMgr* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #12
  br label %44

44:                                               ; preds = %30, %34, %38
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18FontMgrRunIteratorD0Ev(%class.FontMgrRunIterator*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV18FontMgrRunIterator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %class.SkTypeface*, %class.SkTypeface** %3, align 8
  %5 = icmp eq %class.SkTypeface* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkTypeface* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkTypeface* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #12
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 5, i32 0, i32 0
  %18 = load %class.SkTypeface*, %class.SkTypeface** %17, align 8
  %19 = icmp eq %class.SkTypeface* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkTypeface* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkTypeface* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #12
  br label %30

30:                                               ; preds = %24, %20, %16
  %31 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 4, i32 0
  %32 = load %class.SkFontMgr*, %class.SkFontMgr** %31, align 8
  %33 = icmp eq %class.SkFontMgr* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkFontMgr* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkFontMgr* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #12
  br label %44

44:                                               ; preds = %30, %34, %38
  %45 = bitcast %class.FontMgrRunIterator* %0 to i8*
  tail call void @_ZdlPv(i8* %45) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18FontMgrRunIterator7consumeEv(%class.FontMgrRunIterator*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca %class.sk_sp.34, align 8
  %4 = alloca i8*, align 8
  %5 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i32 @_ZN5SkUTF8NextUTF8EPPKcS1_(i8** %5, i8* %7) #12
  %9 = icmp slt i32 %8, 0
  %10 = select i1 %9, i32 65533, i32 %8
  %11 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 5
  %12 = tail call zeroext i16 @_ZNK6SkFont14unicharToGlyphEi(%class.SkFont* %11, i32 %10) #12
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 7
  store %class.SkFont* %11, %class.SkFont** %15, align 8
  br label %84

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 6
  %18 = getelementptr inbounds %class.SkFont, %class.SkFont* %17, i64 0, i32 0, i32 0
  %19 = load %class.SkTypeface*, %class.SkTypeface** %18, align 8
  %20 = icmp eq %class.SkTypeface* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = tail call zeroext i16 @_ZNK6SkFont14unicharToGlyphEi(%class.SkFont* %17, i32 %10) #12
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 7
  store %class.SkFont* %17, %class.SkFont** %25, align 8
  br label %84

26:                                               ; preds = %21, %16
  %27 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  %28 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 10
  %29 = load %"class.SkShaper::LanguageRunIterator"*, %"class.SkShaper::LanguageRunIterator"** %28, align 8
  %30 = icmp eq %"class.SkShaper::LanguageRunIterator"* %29, null
  br i1 %30, label %40, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.SkShaper::LanguageRunIterator"* %29 to i8* (%"class.SkShaper::LanguageRunIterator"*)***
  %33 = load i8* (%"class.SkShaper::LanguageRunIterator"*)**, i8* (%"class.SkShaper::LanguageRunIterator"*)*** %32, align 8
  %34 = getelementptr inbounds i8* (%"class.SkShaper::LanguageRunIterator"*)*, i8* (%"class.SkShaper::LanguageRunIterator"*)** %33, i64 5
  %35 = load i8* (%"class.SkShaper::LanguageRunIterator"*)*, i8* (%"class.SkShaper::LanguageRunIterator"*)** %34, align 8
  %36 = tail call i8* %35(%"class.SkShaper::LanguageRunIterator"* nonnull %29) #12
  %37 = load %"class.SkShaper::LanguageRunIterator"*, %"class.SkShaper::LanguageRunIterator"** %28, align 8
  %38 = icmp ne %"class.SkShaper::LanguageRunIterator"* %37, null
  %39 = zext i1 %38 to i32
  br label %40

40:                                               ; preds = %26, %31
  %41 = phi i32 [ %39, %31 ], [ 0, %26 ]
  %42 = phi i8* [ %36, %31 ], [ null, %26 ]
  store i8* %42, i8** %2, align 8
  %43 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 4, i32 0
  %44 = load %class.SkFontMgr*, %class.SkFontMgr** %43, align 8
  %45 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 8
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 9
  %48 = call %class.SkTypeface* @_ZNK9SkFontMgr25matchFamilyStyleCharacterEPKcRK11SkFontStylePS1_ii(%class.SkFontMgr* %44, i8* %46, %class.SkFontStyle* dereferenceable(4) %47, i8** nonnull %2, i32 %41, i32 %10) #12
  %49 = icmp eq %class.SkTypeface* %48, null
  br i1 %49, label %81, label %50

50:                                               ; preds = %40
  %51 = ptrtoint %class.SkTypeface* %48 to i64
  %52 = bitcast %class.sk_sp.34* %3 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 1 monotonic
  %55 = load %class.SkTypeface*, %class.SkTypeface** %18, align 8
  store %class.SkTypeface* %48, %class.SkTypeface** %18, align 8
  %56 = icmp eq %class.SkTypeface* %55, null
  br i1 %56, label %67, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %55, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 -1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %67

61:                                               ; preds = %57
  %62 = bitcast %class.SkTypeface* %55 to %class.SkRefCntBase*
  %63 = bitcast %class.SkTypeface* %55 to void (%class.SkRefCntBase*)***
  %64 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, i64 2
  %66 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, align 8
  call void %66(%class.SkRefCntBase* nonnull %62) #12
  br label %67

67:                                               ; preds = %50, %57, %61
  %68 = getelementptr inbounds %class.sk_sp.34, %class.sk_sp.34* %3, i64 0, i32 0
  %69 = load %class.SkTypeface*, %class.SkTypeface** %68, align 8
  %70 = icmp eq %class.SkTypeface* %69, null
  br i1 %70, label %81, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %69, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %81

75:                                               ; preds = %71
  %76 = bitcast %class.SkTypeface* %69 to %class.SkRefCntBase*
  %77 = bitcast %class.SkTypeface* %69 to void (%class.SkRefCntBase*)***
  %78 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %77, align 8
  %79 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, i64 2
  %80 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, align 8
  call void %80(%class.SkRefCntBase* nonnull %76) #12
  br label %81

81:                                               ; preds = %40, %67, %71, %75
  %82 = phi %class.SkFont* [ %17, %75 ], [ %17, %71 ], [ %17, %67 ], [ %11, %40 ]
  %83 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 7
  store %class.SkFont* %82, %class.SkFont** %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %84

84:                                               ; preds = %24, %81, %14
  %85 = load i8*, i8** %5, align 8
  %86 = load i8*, i8** %6, align 8
  %87 = icmp ult i8* %85, %86
  br i1 %87, label %88, label %152

88:                                               ; preds = %84
  %89 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 7
  %90 = getelementptr inbounds %class.SkFont, %class.SkFont* %11, i64 0, i32 0, i32 0
  %91 = bitcast i8** %4 to i8*
  %92 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 10
  %93 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 4, i32 0
  %94 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 8
  %95 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 9
  br label %96

96:                                               ; preds = %88, %148
  %97 = phi i8* [ %86, %88 ], [ %150, %148 ]
  %98 = phi i8* [ %85, %88 ], [ %149, %148 ]
  %99 = call i32 @_ZN5SkUTF8NextUTF8EPPKcS1_(i8** %5, i8* %97) #12
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 65533, i32 %99
  %102 = load %class.SkFont*, %class.SkFont** %89, align 8
  %103 = getelementptr inbounds %class.SkFont, %class.SkFont* %102, i64 0, i32 0, i32 0
  %104 = load %class.SkTypeface*, %class.SkTypeface** %103, align 8
  %105 = load %class.SkTypeface*, %class.SkTypeface** %90, align 8
  %106 = icmp eq %class.SkTypeface* %104, %105
  br i1 %106, label %113, label %107

107:                                              ; preds = %96
  %108 = call zeroext i16 @_ZNK6SkFont14unicharToGlyphEi(%class.SkFont* %11, i32 %101) #12
  %109 = icmp eq i16 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %107
  %111 = load %class.SkFont*, %class.SkFont** %89, align 8
  br label %113

112:                                              ; preds = %107
  store i8* %98, i8** %5, align 8
  br label %152

113:                                              ; preds = %110, %96
  %114 = phi %class.SkFont* [ %111, %110 ], [ %102, %96 ]
  %115 = call zeroext i16 @_ZNK6SkFont14unicharToGlyphEi(%class.SkFont* %114, i32 %101) #12
  %116 = icmp eq i16 %115, 0
  br i1 %116, label %117, label %148

117:                                              ; preds = %113
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %118 = load %"class.SkShaper::LanguageRunIterator"*, %"class.SkShaper::LanguageRunIterator"** %92, align 8
  %119 = icmp eq %"class.SkShaper::LanguageRunIterator"* %118, null
  br i1 %119, label %127, label %120

120:                                              ; preds = %117
  %121 = bitcast %"class.SkShaper::LanguageRunIterator"* %118 to i8* (%"class.SkShaper::LanguageRunIterator"*)***
  %122 = load i8* (%"class.SkShaper::LanguageRunIterator"*)**, i8* (%"class.SkShaper::LanguageRunIterator"*)*** %121, align 8
  %123 = getelementptr inbounds i8* (%"class.SkShaper::LanguageRunIterator"*)*, i8* (%"class.SkShaper::LanguageRunIterator"*)** %122, i64 5
  %124 = load i8* (%"class.SkShaper::LanguageRunIterator"*)*, i8* (%"class.SkShaper::LanguageRunIterator"*)** %123, align 8
  %125 = call i8* %124(%"class.SkShaper::LanguageRunIterator"* nonnull %118) #12
  %126 = load %"class.SkShaper::LanguageRunIterator"*, %"class.SkShaper::LanguageRunIterator"** %92, align 8
  br label %127

127:                                              ; preds = %117, %120
  %128 = phi %"class.SkShaper::LanguageRunIterator"* [ %126, %120 ], [ null, %117 ]
  %129 = phi i8* [ %125, %120 ], [ null, %117 ]
  store i8* %129, i8** %4, align 8
  %130 = icmp ne %"class.SkShaper::LanguageRunIterator"* %128, null
  %131 = zext i1 %130 to i32
  %132 = load %class.SkFontMgr*, %class.SkFontMgr** %93, align 8
  %133 = load i8*, i8** %94, align 8
  %134 = call %class.SkTypeface* @_ZNK9SkFontMgr25matchFamilyStyleCharacterEPKcRK11SkFontStylePS1_ii(%class.SkFontMgr* %132, i8* %133, %class.SkFontStyle* dereferenceable(4) %95, i8** nonnull %4, i32 %131, i32 %101) #12
  %135 = icmp eq %class.SkTypeface* %134, null
  br i1 %135, label %147, label %136

136:                                              ; preds = %127
  store i8* %98, i8** %5, align 8
  %137 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %134, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = atomicrmw add i32* %137, i32 -1 acq_rel
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %146

140:                                              ; preds = %136
  %141 = bitcast %class.SkTypeface* %134 to %class.SkRefCntBase*
  %142 = bitcast %class.SkTypeface* %134 to void (%class.SkRefCntBase*)***
  %143 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %142, align 8
  %144 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %143, i64 2
  %145 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %144, align 8
  call void %145(%class.SkRefCntBase* nonnull %141) #12
  br label %146

146:                                              ; preds = %136, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #12
  br label %152

147:                                              ; preds = %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #12
  br label %148

148:                                              ; preds = %113, %147
  %149 = load i8*, i8** %5, align 8
  %150 = load i8*, i8** %6, align 8
  %151 = icmp ult i8* %149, %150
  br i1 %151, label %96, label %152

152:                                              ; preds = %148, %84, %146, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK18FontMgrRunIterator15endOfCurrentRunEv(%class.FontMgrRunIterator*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 2
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %4, %7
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18FontMgrRunIterator5atEndEv(%class.FontMgrRunIterator*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %class.SkFont* @_ZNK18FontMgrRunIterator11currentFontEv(%class.FontMgrRunIterator*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 7
  %3 = load %class.SkFont*, %class.SkFont** %2, align 8
  ret %class.SkFont* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkShaper11RunIteratorD2Ev(%"class.SkShaper::RunIterator"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i16 @_ZNK6SkFont14unicharToGlyphEi(%class.SkFont*, i32) local_unnamed_addr #1

declare %class.SkTypeface* @_ZNK9SkFontMgr25matchFamilyStyleCharacterEPKcRK11SkFontStylePS1_ii(%class.SkFontMgr*, i8*, %class.SkFontStyle* dereferenceable(4), i8**, i32, i32) local_unnamed_addr #1

declare i32 @_ZN5SkUTF8NextUTF8EPPKcS1_(i8**, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18FontMgrRunIteratorC2EPKcmRK6SkFont5sk_spI9SkFontMgrES1_11SkFontStylePKN8SkShaper19LanguageRunIteratorE(%class.FontMgrRunIterator*, i8*, i64, %class.SkFont* dereferenceable(24), %class.sk_sp*, i8*, i32, %"class.SkShaper::LanguageRunIterator"*) unnamed_addr #0 comdat align 2 {
  %9 = alloca %class.sk_sp.34, align 8
  %10 = alloca %class.sk_sp.34, align 8
  %11 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV18FontMgrRunIterator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 1
  store i8* %1, i8** %12, align 8
  %13 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 2
  store i8* %1, i8** %13, align 8
  %14 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 3
  %15 = getelementptr inbounds i8, i8* %1, i64 %2
  store i8* %15, i8** %14, align 8
  %16 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 4
  %17 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %18 = bitcast %class.sk_sp* %4 to i64*
  %19 = load i64, i64* %18, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %17, align 8
  %20 = bitcast %class.sk_sp* %16 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 5
  %22 = getelementptr inbounds %class.SkFont, %class.SkFont* %21, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 0, i32 0
  %24 = load %class.SkTypeface*, %class.SkTypeface** %23, align 8
  %25 = icmp eq %class.SkTypeface* %24, null
  br i1 %25, label %26, label %31

26:                                               ; preds = %8
  store %class.SkTypeface* %24, %class.SkTypeface** %22, align 8
  %27 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 5, i32 1
  %28 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 1
  %29 = bitcast float* %27 to i8*
  %30 = bitcast float* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 15, i1 false) #12
  br label %40

31:                                               ; preds = %8
  %32 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic
  store %class.SkTypeface* %24, %class.SkTypeface** %22, align 8
  %34 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 5, i32 1
  %35 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 1
  %36 = bitcast float* %34 to i8*
  %37 = bitcast float* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 15, i1 false) #12
  %38 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 1 monotonic
  br label %40

40:                                               ; preds = %26, %31
  %41 = phi i8* [ %29, %26 ], [ %36, %31 ]
  %42 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 6, i32 0, i32 0
  store %class.SkTypeface* %24, %class.SkTypeface** %42, align 8
  %43 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 6, i32 1
  %44 = bitcast float* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %41, i64 15, i1 false) #12
  %45 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 7
  store %class.SkFont* null, %class.SkFont** %45, align 8
  %46 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 8
  store i8* %5, i8** %46, align 8
  %47 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 9, i32 0
  store i32 %6, i32* %47, align 8
  %48 = getelementptr inbounds %class.FontMgrRunIterator, %class.FontMgrRunIterator* %0, i64 0, i32 10
  store %"class.SkShaper::LanguageRunIterator"* %7, %"class.SkShaper::LanguageRunIterator"** %48, align 8
  call void @_ZNK6SkFont20refTypefaceOrDefaultEv(%class.sk_sp.34* nonnull sret %9, %class.SkFont* %3) #12
  %49 = getelementptr inbounds %class.SkFont, %class.SkFont* %21, i64 0, i32 0
  %50 = icmp eq %class.sk_sp.34* %49, %9
  br i1 %50, label %71, label %51

51:                                               ; preds = %40
  %52 = getelementptr inbounds %class.sk_sp.34, %class.sk_sp.34* %9, i64 0, i32 0
  %53 = load %class.SkTypeface*, %class.SkTypeface** %52, align 8
  %54 = icmp eq %class.SkTypeface* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %53, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 1 monotonic
  br label %58

58:                                               ; preds = %55, %51
  %59 = load %class.SkTypeface*, %class.SkTypeface** %22, align 8
  store %class.SkTypeface* %53, %class.SkTypeface** %22, align 8
  %60 = icmp eq %class.SkTypeface* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %59, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = bitcast %class.SkTypeface* %59 to %class.SkRefCntBase*
  %67 = bitcast %class.SkTypeface* %59 to void (%class.SkRefCntBase*)***
  %68 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, i64 2
  %70 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, align 8
  call void %70(%class.SkRefCntBase* nonnull %66) #12
  br label %71

71:                                               ; preds = %40, %58, %61, %65
  %72 = getelementptr inbounds %class.sk_sp.34, %class.sk_sp.34* %9, i64 0, i32 0
  %73 = load %class.SkTypeface*, %class.SkTypeface** %72, align 8
  %74 = icmp eq %class.SkTypeface* %73, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %73, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = bitcast %class.SkTypeface* %73 to %class.SkRefCntBase*
  %81 = bitcast %class.SkTypeface* %73 to void (%class.SkRefCntBase*)***
  %82 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, i64 2
  %84 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, align 8
  call void %84(%class.SkRefCntBase* nonnull %80) #12
  br label %85

85:                                               ; preds = %71, %75, %79
  %86 = getelementptr inbounds %class.sk_sp.34, %class.sk_sp.34* %10, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %86, align 8
  %87 = load %class.SkTypeface*, %class.SkTypeface** %42, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %42, align 8
  %88 = icmp eq %class.SkTypeface* %87, null
  br i1 %88, label %112, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %87, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %99

93:                                               ; preds = %89
  %94 = bitcast %class.SkTypeface* %87 to %class.SkRefCntBase*
  %95 = bitcast %class.SkTypeface* %87 to void (%class.SkRefCntBase*)***
  %96 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %95, align 8
  %97 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, i64 2
  %98 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %97, align 8
  call void %98(%class.SkRefCntBase* nonnull %94) #12
  br label %99

99:                                               ; preds = %89, %93
  %100 = load %class.SkTypeface*, %class.SkTypeface** %86, align 8
  %101 = icmp eq %class.SkTypeface* %100, null
  br i1 %101, label %112, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %100, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw add i32* %103, i32 -1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %112

106:                                              ; preds = %102
  %107 = bitcast %class.SkTypeface* %100 to %class.SkRefCntBase*
  %108 = bitcast %class.SkTypeface* %100 to void (%class.SkRefCntBase*)***
  %109 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %108, align 8
  %110 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, i64 2
  %111 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %110, align 8
  call void %111(%class.SkRefCntBase* nonnull %107) #12
  br label %112

112:                                              ; preds = %85, %99, %102, %106
  ret void
}

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkShaper26TrivialLanguageRunIteratorD2Ev(%"class.SkShaper::TrivialLanguageRunIterator"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkShaper::TrivialLanguageRunIterator", %"class.SkShaper::TrivialLanguageRunIterator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8SkShaper26TrivialLanguageRunIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkShaper::TrivialLanguageRunIterator", %"class.SkShaper::TrivialLanguageRunIterator"* %0, i64 0, i32 1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkShaper26TrivialLanguageRunIteratorD0Ev(%"class.SkShaper::TrivialLanguageRunIterator"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkShaper::TrivialLanguageRunIterator", %"class.SkShaper::TrivialLanguageRunIterator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8SkShaper26TrivialLanguageRunIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkShaper::TrivialLanguageRunIterator", %"class.SkShaper::TrivialLanguageRunIterator"* %0, i64 0, i32 1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %3) #12
  %4 = bitcast %"class.SkShaper::TrivialLanguageRunIterator"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkShaper18TrivialRunIteratorINS_19LanguageRunIteratorEE7consumeEv(%"class.SkShaper::TrivialRunIterator.55"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkShaper::TrivialRunIterator.55", %"class.SkShaper::TrivialRunIterator.55"* %0, i64 0, i32 2
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK8SkShaper18TrivialRunIteratorINS_19LanguageRunIteratorEE15endOfCurrentRunEv(%"class.SkShaper::TrivialRunIterator.55"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkShaper::TrivialRunIterator.55", %"class.SkShaper::TrivialRunIterator.55"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkShaper::TrivialRunIterator.55", %"class.SkShaper::TrivialRunIterator.55"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ]
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8SkShaper18TrivialRunIteratorINS_19LanguageRunIteratorEE5atEndEv(%"class.SkShaper::TrivialRunIterator.55"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkShaper::TrivialRunIterator.55", %"class.SkShaper::TrivialRunIterator.55"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8SkShaper26TrivialLanguageRunIterator15currentLanguageEv(%"class.SkShaper::TrivialLanguageRunIterator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkShaper::TrivialLanguageRunIterator", %"class.SkShaper::TrivialLanguageRunIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %2, align 8
  %4 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %3, i64 0, i32 2
  ret i8* %4
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
