; ModuleID = '../../third_party/skia/src/sksl/SkSLPool.cpp'
source_filename = "../../third_party/skia/src/sksl/SkSLPool.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrMemoryPool = type { %class.GrBlockAllocator }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"class.SkSL::Pool" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrMemoryPool* }

@_ZN4SkSLL8sMemPoolE = internal thread_local unnamed_addr global %class.GrMemoryPool* null, align 8

@_ZN4SkSL4PoolD1Ev = hidden unnamed_addr alias void (%"class.SkSL::Pool"*), void (%"class.SkSL::Pool"*)* @_ZN4SkSL4PoolD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL4PoolD2Ev(%"class.SkSL::Pool"* nocapture) unnamed_addr #0 align 2 {
  %2 = load %class.GrMemoryPool*, %class.GrMemoryPool** @_ZN4SkSLL8sMemPoolE, align 8
  %3 = getelementptr inbounds %"class.SkSL::Pool", %"class.SkSL::Pool"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.GrMemoryPool*, %class.GrMemoryPool** %3, align 8
  %5 = icmp eq %class.GrMemoryPool* %2, %4
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store %class.GrMemoryPool* null, %class.GrMemoryPool** @_ZN4SkSLL8sMemPoolE, align 8
  br label %7

7:                                                ; preds = %6, %1
  tail call void @_ZNK12GrMemoryPool11reportLeaksEv(%class.GrMemoryPool* %4) #7
  %8 = load %class.GrMemoryPool*, %class.GrMemoryPool** %3, align 8
  store %class.GrMemoryPool* null, %class.GrMemoryPool** %3, align 8
  %9 = icmp eq %class.GrMemoryPool* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  tail call void @_ZN12GrMemoryPoolD1Ev(%class.GrMemoryPool* nonnull %8) #7
  %11 = bitcast %class.GrMemoryPool* %8 to i8*
  tail call void @_ZdlPv(i8* nonnull %11) #7
  br label %12

12:                                               ; preds = %7, %10
  ret void
}

declare void @_ZNK12GrMemoryPool11reportLeaksEv(%class.GrMemoryPool*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Pool"* @_ZN4SkSL4Pool6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 8) #8
  %2 = bitcast i8* %1 to %"class.SkSL::Pool"*
  %3 = bitcast i8* %1 to i64*
  %4 = tail call %class.GrMemoryPool* @_ZN12GrMemoryPool4MakeEmm(i64 65536, i64 32768) #7
  %5 = ptrtoint %class.GrMemoryPool* %4 to i64
  store i64 %5, i64* %3, align 8
  ret %"class.SkSL::Pool"* %2
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare %class.GrMemoryPool* @_ZN12GrMemoryPool4MakeEmm(i64, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4SkSL4Pool10IsAttachedEv() local_unnamed_addr #3 align 2 {
  %1 = load %class.GrMemoryPool*, %class.GrMemoryPool** @_ZN4SkSLL8sMemPoolE, align 8
  %2 = icmp ne %class.GrMemoryPool* %1, null
  ret i1 %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4SkSL4Pool14attachToThreadEv(%"class.SkSL::Pool"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.SkSL::Pool"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  store i64 %3, i64* bitcast (%class.GrMemoryPool** @_ZN4SkSLL8sMemPoolE to i64*), align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL4Pool16detachFromThreadEv(%"class.SkSL::Pool"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = load %class.GrMemoryPool*, %class.GrMemoryPool** @_ZN4SkSLL8sMemPoolE, align 8
  %3 = getelementptr inbounds %class.GrMemoryPool, %class.GrMemoryPool* %2, i64 0, i32 0
  tail call void @_ZN16GrBlockAllocator17resetScratchSpaceEv(%class.GrBlockAllocator* %3) #7
  store %class.GrMemoryPool* null, %class.GrMemoryPool** @_ZN4SkSLL8sMemPoolE, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #0 align 2 {
  %2 = load %class.GrMemoryPool*, %class.GrMemoryPool** @_ZN4SkSLL8sMemPoolE, align 8
  %3 = icmp eq %class.GrMemoryPool* %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = tail call i8* @_ZN12GrMemoryPool8allocateEm(%class.GrMemoryPool* nonnull %2, i64 %0) #7
  br label %8

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 %0) #7
  br label %8

8:                                                ; preds = %6, %4
  %9 = phi i8* [ %5, %4 ], [ %7, %6 ]
  ret i8* %9
}

declare i8* @_ZN12GrMemoryPool8allocateEm(%class.GrMemoryPool*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #0 align 2 {
  %2 = load %class.GrMemoryPool*, %class.GrMemoryPool** @_ZN4SkSLL8sMemPoolE, align 8
  %3 = icmp eq %class.GrMemoryPool* %2, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %1
  tail call void @_ZN12GrMemoryPool7releaseEPv(%class.GrMemoryPool* nonnull %2, i8* %0) #7
  br label %6

5:                                                ; preds = %1
  tail call void @_ZdlPv(i8* %0) #7
  br label %6

6:                                                ; preds = %5, %4
  ret void
}

declare void @_ZN12GrMemoryPool7releaseEPv(%class.GrMemoryPool*, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN16GrBlockAllocator17resetScratchSpaceEv(%class.GrBlockAllocator*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12GrMemoryPoolD1Ev(%class.GrMemoryPool*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
