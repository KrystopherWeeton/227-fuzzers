; ModuleID = '../../third_party/webrtc/modules/audio_coding/neteq/expand.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/neteq/expand.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::Expand" = type { i32 (...)**, %"class.webrtc::RandomVector"*, %"class.webrtc::SyncBuffer"*, i8, i32, i64, i32, %"class.webrtc::BackgroundNoise"*, %"class.webrtc::StatisticsCalculator"*, i64, i64, [3 x i64], i32, i32, i8, i64, %"class.std::__1::unique_ptr.25" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.webrtc::Expand::ChannelParameters"* }
%"struct.webrtc::Expand::ChannelParameters" = type { i16, [7 x i16], [6 x i16], i16, i16, i16, i16, %"class.webrtc::AudioVector", %"class.webrtc::AudioVector", i8, i32 }
%"class.webrtc::AudioVector" = type { i32 (...)**, %"class.std::__1::unique_ptr", i64, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i16* }
%"class.webrtc::BackgroundNoise" = type <{ i32 (...)**, i64, %"class.std::__1::unique_ptr.4", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.webrtc::BackgroundNoise::ChannelParameters"* }
%"struct.webrtc::BackgroundNoise::ChannelParameters" = type { i32, i32, i32, i32, [8 x i16], [9 x i16], i16, i16, i16 }
%"class.webrtc::SyncBuffer" = type { %"class.webrtc::AudioMultiVector", i64, i32, i64 }
%"class.webrtc::AudioMultiVector" = type { i32 (...)**, %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.webrtc::AudioVector"**, %"class.webrtc::AudioVector"**, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.webrtc::AudioVector"** }
%"class.webrtc::RandomVector" = type <{ i32, i16, [2 x i8] }>
%"class.webrtc::StatisticsCalculator" = type <{ i32 (...)**, %"struct.webrtc::NetEqLifetimeStatistics", %"struct.webrtc::NetEqOperationsAndState", i64, i64, i64, i64, i64, i64, i64, i32, [4 x i8], %"class.std::__1::deque", i32, [4 x i8], i64, %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", %"class.webrtc::StatisticsCalculator::PeriodicUmaAverage", %"class.webrtc::StatisticsCalculator::PeriodicUmaCount", i8, [7 x i8] }>
%"struct.webrtc::NetEqLifetimeStatistics" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32 }
%"struct.webrtc::NetEqOperationsAndState" = type <{ i64, i64, i64, i64, i64, i64, i64, i8, [7 x i8] }>
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.15" }
%"struct.std::__1::__split_buffer" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i32** }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i64 }
%"class.webrtc::StatisticsCalculator::PeriodicUmaAverage" = type <{ %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger.base", [4 x i8], double, i32, [4 x i8] }>
%"class.webrtc::StatisticsCalculator::PeriodicUmaLogger.base" = type <{ i32 (...)**, %"class.std::__1::basic_string", i32, i32, i32 }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webrtc::StatisticsCalculator::PeriodicUmaCount" = type { %"class.webrtc::StatisticsCalculator::PeriodicUmaLogger.base", i32 }
%"struct.webrtc::ExpandFactory" = type { i32 (...)** }

$_ZN6webrtc13ExpandFactoryD2Ev = comdat any

$_ZN6webrtc13ExpandFactoryD0Ev = comdat any

@_ZTVN6webrtc6ExpandE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::Expand"*)* @_ZN6webrtc6ExpandD2Ev to i8*), i8* bitcast (void (%"class.webrtc::Expand"*)* @_ZN6webrtc6ExpandD0Ev to i8*), i8* bitcast (void (%"class.webrtc::Expand"*)* @_ZN6webrtc6Expand5ResetEv to i8*), i8* bitcast (i32 (%"class.webrtc::Expand"*, %"class.webrtc::AudioMultiVector"*)* @_ZN6webrtc6Expand7ProcessEPNS_16AudioMultiVectorE to i8*), i8* bitcast (void (%"class.webrtc::Expand"*)* @_ZN6webrtc6Expand33SetParametersForNormalAfterExpandEv to i8*), i8* bitcast (void (%"class.webrtc::Expand"*)* @_ZN6webrtc6Expand32SetParametersForMergeAfterExpandEv to i8*), i8* bitcast (i64 (%"class.webrtc::Expand"*)* @_ZNK6webrtc6Expand14overlap_lengthEv to i8*)] }, align 8
@WebRtcSpl_ScaleAndAddVectorsWithRound = external local_unnamed_addr constant i32 (i16*, i16, i16*, i16, i32, i16*, i64)*, align 8
@WebRtcSpl_MaxAbsValueW16 = external local_unnamed_addr constant i16 (i16*, i64)*, align 8
@WebRtcSpl_CrossCorrelation = external local_unnamed_addr constant void (i32*, i16*, i16*, i64, i64, i32, i32)*, align 8
@_ZN6webrtc12RandomVector12kRandomTableE = external local_unnamed_addr constant [256 x i16], align 16
@_ZN6webrtc9DspHelper18kDownsample8kHzTblE = external constant [3 x i16], align 2
@_ZN6webrtc9DspHelper19kDownsample16kHzTblE = external constant [5 x i16], align 2
@_ZN6webrtc9DspHelper19kDownsample32kHzTblE = external constant [7 x i16], align 2
@_ZN6webrtc9DspHelper19kDownsample48kHzTblE = external constant [7 x i16], align 2
@WebRtcSpl_DownsampleFast = external local_unnamed_addr constant i32 (i16*, i64, i16*, i64, i16*, i64, i32, i64)*, align 8
@WebRtcSpl_MaxAbsValueW32 = external local_unnamed_addr constant i32 (i32*, i64)*, align 8
@_ZTVN6webrtc13ExpandFactoryE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.webrtc::ExpandFactory"*)* @_ZN6webrtc13ExpandFactoryD2Ev to i8*), i8* bitcast (void (%"struct.webrtc::ExpandFactory"*)* @_ZN6webrtc13ExpandFactoryD0Ev to i8*), i8* bitcast (%"class.webrtc::Expand"* (%"struct.webrtc::ExpandFactory"*, %"class.webrtc::BackgroundNoise"*, %"class.webrtc::SyncBuffer"*, %"class.webrtc::RandomVector"*, %"class.webrtc::StatisticsCalculator"*, i32, i64)* @_ZNK6webrtc13ExpandFactory6CreateEPNS_15BackgroundNoiseEPNS_10SyncBufferEPNS_12RandomVectorEPNS_20StatisticsCalculatorEim to i8*)] }, align 8

@_ZN6webrtc6ExpandC1EPNS_15BackgroundNoiseEPNS_10SyncBufferEPNS_12RandomVectorEPNS_20StatisticsCalculatorEim = hidden unnamed_addr alias void (%"class.webrtc::Expand"*, %"class.webrtc::BackgroundNoise"*, %"class.webrtc::SyncBuffer"*, %"class.webrtc::RandomVector"*, %"class.webrtc::StatisticsCalculator"*, i32, i64), void (%"class.webrtc::Expand"*, %"class.webrtc::BackgroundNoise"*, %"class.webrtc::SyncBuffer"*, %"class.webrtc::RandomVector"*, %"class.webrtc::StatisticsCalculator"*, i32, i64)* @_ZN6webrtc6ExpandC2EPNS_15BackgroundNoiseEPNS_10SyncBufferEPNS_12RandomVectorEPNS_20StatisticsCalculatorEim
@_ZN6webrtc6ExpandD1Ev = hidden unnamed_addr alias void (%"class.webrtc::Expand"*), void (%"class.webrtc::Expand"*)* @_ZN6webrtc6ExpandD2Ev
@_ZN6webrtc6Expand17ChannelParametersC1Ev = hidden unnamed_addr alias void (%"struct.webrtc::Expand::ChannelParameters"*), void (%"struct.webrtc::Expand::ChannelParameters"*)* @_ZN6webrtc6Expand17ChannelParametersC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc6ExpandC2EPNS_15BackgroundNoiseEPNS_10SyncBufferEPNS_12RandomVectorEPNS_20StatisticsCalculatorEim(%"class.webrtc::Expand"*, %"class.webrtc::BackgroundNoise"*, %"class.webrtc::SyncBuffer"*, %"class.webrtc::RandomVector"*, %"class.webrtc::StatisticsCalculator"*, i32, i64) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6webrtc6ExpandE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 1
  store %"class.webrtc::RandomVector"* %3, %"class.webrtc::RandomVector"** %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 2
  store %"class.webrtc::SyncBuffer"* %2, %"class.webrtc::SyncBuffer"** %10, align 8
  %11 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 3
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 4
  store i32 %5, i32* %12, align 4
  %13 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 5
  store i64 %6, i64* %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 6
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 7
  store %"class.webrtc::BackgroundNoise"* %1, %"class.webrtc::BackgroundNoise"** %15, align 8
  %16 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 8
  store %"class.webrtc::StatisticsCalculator"* %4, %"class.webrtc::StatisticsCalculator"** %16, align 8
  %17 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 9
  %18 = sdiv i32 %5, 1600
  %19 = sext i32 %18 to i64
  store i64 %19, i64* %17, align 8
  %20 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 12
  %21 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 15
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 16
  %23 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %6, i64 128)
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = or i64 %25, 8
  %27 = select i1 %24, i64 -1, i64 %26
  %28 = bitcast i32* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 9, i1 false)
  %29 = tail call i8* @_Znam(i64 %27) #9
  %30 = bitcast i8* %29 to i64*
  store i64 %6, i64* %30, align 16
  %31 = getelementptr inbounds i8, i8* %29, i64 8
  %32 = bitcast i8* %31 to %"struct.webrtc::Expand::ChannelParameters"*
  %33 = icmp eq i64 %6, 0
  br i1 %33, label %52, label %34

34:                                               ; preds = %7
  %35 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %32, i64 %6
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi %"struct.webrtc::Expand::ChannelParameters"* [ %32, %34 ], [ %47, %36 ]
  %38 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %37, i64 0, i32 0
  store i16 16384, i16* %38, align 8
  %39 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %37, i64 0, i32 3
  %40 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %37, i64 0, i32 7
  %41 = bitcast i16* %39 to i64*
  store i64 0, i64* %41, align 4
  tail call void @_ZN6webrtc11AudioVectorC1Ev(%"class.webrtc::AudioVector"* %40) #10
  %42 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %37, i64 0, i32 8
  tail call void @_ZN6webrtc11AudioVectorC1Ev(%"class.webrtc::AudioVector"* %42) #10
  %43 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %37, i64 0, i32 9
  store i8 0, i8* %43, align 8
  %44 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %37, i64 0, i32 10
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %37, i64 0, i32 1, i64 0
  %46 = bitcast i16* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %46, i8 0, i64 26, i1 false) #10
  %47 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %37, i64 1
  %48 = icmp eq %"struct.webrtc::Expand::ChannelParameters"* %47, %35
  br i1 %48, label %49, label %36

49:                                               ; preds = %36
  %50 = bitcast %"class.webrtc::Expand"* %0 to void (%"class.webrtc::Expand"*)***
  %51 = load void (%"class.webrtc::Expand"*)**, void (%"class.webrtc::Expand"*)*** %50, align 8
  br label %52

52:                                               ; preds = %7, %49
  %53 = phi void (%"class.webrtc::Expand"*)** [ %51, %49 ], [ bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6webrtc6ExpandE, i64 0, inrange i32 0, i64 2) to void (%"class.webrtc::Expand"*)**), %7 ]
  %54 = ptrtoint i8* %31 to i64
  %55 = bitcast %"class.std::__1::unique_ptr.25"* %22 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 11, i64 0
  %57 = bitcast i64* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false)
  %58 = getelementptr inbounds void (%"class.webrtc::Expand"*)*, void (%"class.webrtc::Expand"*)** %53, i64 2
  %59 = load void (%"class.webrtc::Expand"*)*, void (%"class.webrtc::Expand"*)** %58, align 8
  tail call void %59(%"class.webrtc::Expand"* %0) #10
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc6ExpandD2Ev(%"class.webrtc::Expand"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6webrtc6ExpandE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %4 = load %"struct.webrtc::Expand::ChannelParameters"*, %"struct.webrtc::Expand::ChannelParameters"** %3, align 8
  store %"struct.webrtc::Expand::ChannelParameters"* null, %"struct.webrtc::Expand::ChannelParameters"** %3, align 8
  %5 = icmp eq %"struct.webrtc::Expand::ChannelParameters"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %4, i64 -1, i32 9
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %4, i64 %9
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi %"struct.webrtc::Expand::ChannelParameters"* [ %15, %13 ], [ %12, %11 ]
  %15 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %14, i64 -1
  %16 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %14, i64 -1, i32 8
  tail call void @_ZN6webrtc11AudioVectorD1Ev(%"class.webrtc::AudioVector"* %16) #10
  %17 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %14, i64 -1, i32 7
  tail call void @_ZN6webrtc11AudioVectorD1Ev(%"class.webrtc::AudioVector"* %17) #10
  %18 = icmp eq %"struct.webrtc::Expand::ChannelParameters"* %15, %4
  br i1 %18, label %19, label %13

19:                                               ; preds = %13, %6
  tail call void @_ZdaPv(i8* %7) #9
  br label %20

20:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc6ExpandD0Ev(%"class.webrtc::Expand"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6webrtc6ExpandE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %4 = load %"struct.webrtc::Expand::ChannelParameters"*, %"struct.webrtc::Expand::ChannelParameters"** %3, align 8
  store %"struct.webrtc::Expand::ChannelParameters"* null, %"struct.webrtc::Expand::ChannelParameters"** %3, align 8
  %5 = icmp eq %"struct.webrtc::Expand::ChannelParameters"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %4, i64 -1, i32 9
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %4, i64 %9
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi %"struct.webrtc::Expand::ChannelParameters"* [ %15, %13 ], [ %12, %11 ]
  %15 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %14, i64 -1
  %16 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %14, i64 -1, i32 8
  tail call void @_ZN6webrtc11AudioVectorD1Ev(%"class.webrtc::AudioVector"* %16) #10
  %17 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %14, i64 -1, i32 7
  tail call void @_ZN6webrtc11AudioVectorD1Ev(%"class.webrtc::AudioVector"* %17) #10
  %18 = icmp eq %"struct.webrtc::Expand::ChannelParameters"* %15, %4
  br i1 %18, label %19, label %13

19:                                               ; preds = %13, %6
  tail call void @_ZdaPv(i8* %7) #9
  br label %20

20:                                               ; preds = %1, %19
  %21 = bitcast %"class.webrtc::Expand"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc6Expand5ResetEv(%"class.webrtc::Expand"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 3
  store i8 1, i8* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 6
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 10
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 5
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  br label %11

10:                                               ; preds = %11, %1
  ret void

11:                                               ; preds = %8, %11
  %12 = phi i64 [ 0, %8 ], [ %17, %11 ]
  %13 = load %"struct.webrtc::Expand::ChannelParameters"*, %"struct.webrtc::Expand::ChannelParameters"** %9, align 8
  %14 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %13, i64 %12, i32 7
  tail call void @_ZN6webrtc11AudioVector5ClearEv(%"class.webrtc::AudioVector"* %14) #10
  %15 = load %"struct.webrtc::Expand::ChannelParameters"*, %"struct.webrtc::Expand::ChannelParameters"** %9, align 8
  %16 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %15, i64 %12, i32 8
  tail call void @_ZN6webrtc11AudioVector5ClearEv(%"class.webrtc::AudioVector"* %16) #10
  %17 = add nuw i64 %12, 1
  %18 = load i64, i64* %5, align 8
  %19 = icmp ult i64 %17, %18
  br i1 %19, label %11, label %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN6webrtc11AudioVector5ClearEv(%"class.webrtc::AudioVector"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc6Expand7ProcessEPNS_16AudioMultiVectorE(%"class.webrtc::Expand"*, %"class.webrtc::AudioMultiVector"*) unnamed_addr #0 align 2 {
  %3 = alloca [750 x i16], align 16
  %4 = alloca [750 x i16], align 16
  %5 = alloca [3600 x i16], align 16
  %6 = alloca [758 x i16], align 16
  %7 = bitcast [750 x i16]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1500, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 1500, i1 false)
  %8 = bitcast [750 x i16]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1500, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 1500, i1 false)
  %9 = bitcast [3600 x i16]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 7200, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 7200, i1 false)
  %10 = getelementptr inbounds [3600 x i16], [3600 x i16]* %5, i64 0, i64 0
  %11 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 9
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds [3600 x i16], [3600 x i16]* %5, i64 0, i64 %12
  %14 = bitcast [758 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1516, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 1516, i1 false)
  %15 = getelementptr inbounds [758 x i16], [758 x i16]* %6, i64 0, i64 0
  %16 = getelementptr inbounds [758 x i16], [758 x i16]* %6, i64 0, i64 6
  %17 = getelementptr inbounds [758 x i16], [758 x i16]* %6, i64 0, i64 8
  %18 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = sdiv i32 %19, 8000
  %21 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 3
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds [750 x i16], [750 x i16]* %3, i64 0, i64 0
  call void @_ZN6webrtc6Expand13AnalyzeSignalEPs(%"class.webrtc::Expand"* %0, i16* nonnull %25)
  store i8 0, i8* %21, align 8
  %26 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 15
  store i64 0, i64* %26, align 8
  br label %43

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 10
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %43, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 1
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i64 [ 0, %31 ], [ %41, %33 ]
  %35 = sub i64 %29, %34
  %36 = icmp ult i64 %35, 256
  %37 = select i1 %36, i64 %35, i64 256
  %38 = load %"class.webrtc::RandomVector"*, %"class.webrtc::RandomVector"** %32, align 8
  call void @_ZN6webrtc12RandomVector21IncreaseSeedIncrementEs(%"class.webrtc::RandomVector"* %38, i16 signext 2) #10
  %39 = load %"class.webrtc::RandomVector"*, %"class.webrtc::RandomVector"** %32, align 8
  %40 = getelementptr inbounds [750 x i16], [750 x i16]* %3, i64 0, i64 %34
  call void @_ZN6webrtc12RandomVector8GenerateEmPs(%"class.webrtc::RandomVector"* %39, i64 %37, i16* %40) #10
  %41 = add i64 %37, %34
  %42 = icmp ult i64 %41, %29
  br i1 %42, label %33, label %43

43:                                               ; preds = %33, %27, %24
  %44 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 13
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 12
  %47 = load i32, i32* %46, align 8
  %48 = add nsw i32 %47, %45
  store i32 %48, i32* %44, align 4
  %49 = icmp slt i32 %48, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %43
  %51 = icmp eq i32 %48, 1
  br i1 %51, label %54, label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ 1, %43 ], [ -1, %50 ]
  store i32 %53, i32* %46, align 8
  br label %54

54:                                               ; preds = %52, %50
  %55 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 10
  %56 = load i64, i64* %55, align 8
  %57 = load i64, i64* %11, align 8
  %58 = sext i32 %48 to i64
  %59 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 11, i64 %58
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %56, %60
  %62 = add i64 %60, %57
  %63 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 5
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %94, label %66

66:                                               ; preds = %54
  %67 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %68 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %62, i64 2)
  %69 = extractvalue { i64, i1 } %68, 1
  %70 = extractvalue { i64, i1 } %68, 0
  %71 = select i1 %69, i64 -1, i64 %70
  %72 = load i32 (i16*, i16, i16*, i16, i32, i16*, i64)*, i32 (i16*, i16, i16*, i16, i32, i16*, i64)** @WebRtcSpl_ScaleAndAddVectorsWithRound, align 8
  %73 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 2
  %74 = bitcast %"class.webrtc::SyncBuffer"** %73 to %"class.webrtc::AudioMultiVector"**
  %75 = getelementptr inbounds [750 x i16], [750 x i16]* %4, i64 0, i64 0
  %76 = getelementptr inbounds [750 x i16], [750 x i16]* %3, i64 0, i64 0
  %77 = getelementptr inbounds [758 x i16], [758 x i16]* %6, i64 0, i64 %60
  %78 = bitcast i16* %77 to i8*
  %79 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 14
  %80 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 6
  %81 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 7
  %82 = icmp eq i64 %60, 0
  %83 = bitcast %"class.webrtc::AudioMultiVector"* %1 to void (%"class.webrtc::AudioMultiVector"*, i64)***
  %84 = add i64 %60, -16
  %85 = lshr i64 %84, 4
  %86 = add nuw nsw i64 %85, 1
  %87 = icmp ult i64 %60, 16
  %88 = and i64 %60, -16
  %89 = and i64 %86, 1
  %90 = icmp eq i64 %85, 0
  %91 = sub nuw nsw i64 %86, %89
  %92 = icmp eq i64 %89, 0
  %93 = icmp eq i64 %60, %88
  br label %113

94:                                               ; preds = %415, %54
  %95 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 6
  %96 = load i32, i32* %95, align 8
  %97 = icmp sgt i32 %96, 199
  %98 = add nsw i32 %96, 1
  %99 = select i1 %97, i32 200, i32 %98
  store i32 %99, i32* %95, align 8
  %100 = bitcast %"class.webrtc::AudioMultiVector"* %1 to i64 (%"class.webrtc::AudioMultiVector"*)***
  %101 = load i64 (%"class.webrtc::AudioMultiVector"*)**, i64 (%"class.webrtc::AudioMultiVector"*)*** %100, align 8
  %102 = getelementptr inbounds i64 (%"class.webrtc::AudioMultiVector"*)*, i64 (%"class.webrtc::AudioMultiVector"*)** %101, i64 15
  %103 = load i64 (%"class.webrtc::AudioMultiVector"*)*, i64 (%"class.webrtc::AudioMultiVector"*)** %102, align 8
  %104 = call i64 %103(%"class.webrtc::AudioMultiVector"* %1) #10
  %105 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 15
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, %104
  %108 = load i32, i32* %18, align 4
  %109 = shl nsw i32 %108, 1
  %110 = sext i32 %109 to i64
  %111 = icmp ugt i64 %107, %110
  %112 = select i1 %111, i64 %110, i64 %107
  store i64 %112, i64* %105, align 8
  call void @llvm.lifetime.end.p0i8(i64 1516, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 7200, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 1500, i8* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 1500, i8* nonnull %7) #10
  ret i32 0

113:                                              ; preds = %424, %66
  %114 = phi i32 [ %48, %66 ], [ %425, %424 ]
  %115 = phi i64 [ 0, %66 ], [ %421, %424 ]
  %116 = load %"struct.webrtc::Expand::ChannelParameters"*, %"struct.webrtc::Expand::ChannelParameters"** %67, align 8
  switch i32 %114, label %135 [
    i32 0, label %117
    i32 1, label %119
    i32 2, label %127
  ]

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 7
  call void @_ZNK6webrtc11AudioVector6CopyToEmmPs(%"class.webrtc::AudioVector"* %118, i64 %62, i64 %61, i16* nonnull %10) #10
  br label %135

119:                                              ; preds = %113
  %120 = call i8* @_Znam(i64 %71) #9
  %121 = bitcast i8* %120 to i16*
  %122 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 7
  call void @_ZNK6webrtc11AudioVector6CopyToEmmPs(%"class.webrtc::AudioVector"* %122, i64 %62, i64 %61, i16* nonnull %121) #10
  %123 = call i8* @_Znam(i64 %71) #9
  %124 = bitcast i8* %123 to i16*
  %125 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 8
  call void @_ZNK6webrtc11AudioVector6CopyToEmmPs(%"class.webrtc::AudioVector"* %125, i64 %62, i64 %61, i16* nonnull %124) #10
  %126 = call i32 %72(i16* nonnull %121, i16 signext 3, i16* nonnull %124, i16 signext 1, i32 2, i16* nonnull %10, i64 %62) #10
  call void @_ZdaPv(i8* nonnull %123) #9
  call void @_ZdaPv(i8* nonnull %120) #9
  br label %135

127:                                              ; preds = %113
  %128 = call i8* @_Znam(i64 %71) #9
  %129 = bitcast i8* %128 to i16*
  %130 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 7
  call void @_ZNK6webrtc11AudioVector6CopyToEmmPs(%"class.webrtc::AudioVector"* %130, i64 %62, i64 %61, i16* nonnull %129) #10
  %131 = call i8* @_Znam(i64 %71) #9
  %132 = bitcast i8* %131 to i16*
  %133 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 8
  call void @_ZNK6webrtc11AudioVector6CopyToEmmPs(%"class.webrtc::AudioVector"* %133, i64 %62, i64 %61, i16* nonnull %132) #10
  %134 = call i32 %72(i16* nonnull %129, i16 signext 1, i16* nonnull %132, i16 signext 1, i32 1, i16* nonnull %10, i64 %62) #10
  call void @_ZdaPv(i8* nonnull %131) #9
  call void @_ZdaPv(i8* nonnull %128) #9
  br label %135

135:                                              ; preds = %113, %119, %127, %117
  %136 = load i32, i32* %18, align 4
  switch i32 %136, label %139 [
    i32 8000, label %140
    i32 16000, label %137
    i32 32000, label %138
  ]

137:                                              ; preds = %135
  br label %140

138:                                              ; preds = %135
  br label %140

139:                                              ; preds = %135
  br label %140

140:                                              ; preds = %135, %137, %139, %138
  %141 = phi i32 [ 29789, %137 ], [ 31208, %138 ], [ 31711, %139 ], [ 27307, %135 ]
  %142 = phi i32 [ -2979, %137 ], [ -1560, %138 ], [ -1057, %139 ], [ -5461, %135 ]
  %143 = phi i32 [ 2979, %137 ], [ 1560, %138 ], [ 1057, %139 ], [ 5461, %135 ]
  %144 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 0
  %145 = load i16, i16* %144, align 8
  %146 = icmp sgt i16 %145, 819
  br i1 %146, label %147, label %216

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 6
  %149 = load i16, i16* %148, align 2
  %150 = icmp sgt i16 %149, 8192
  br i1 %150, label %151, label %216

151:                                              ; preds = %147
  %152 = load %"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"** %74, align 8
  %153 = bitcast %"class.webrtc::AudioMultiVector"* %152 to i64 (%"class.webrtc::AudioMultiVector"*)***
  %154 = load i64 (%"class.webrtc::AudioMultiVector"*)**, i64 (%"class.webrtc::AudioMultiVector"*)*** %153, align 8
  %155 = getelementptr inbounds i64 (%"class.webrtc::AudioMultiVector"*)*, i64 (%"class.webrtc::AudioMultiVector"*)** %154, i64 15
  %156 = load i64 (%"class.webrtc::AudioMultiVector"*)*, i64 (%"class.webrtc::AudioMultiVector"*)** %155, align 8
  %157 = call i64 %156(%"class.webrtc::AudioMultiVector"* %152) #10
  %158 = load i64, i64* %11, align 8
  %159 = sub i64 %157, %158
  %160 = icmp eq i64 %158, 0
  br i1 %160, label %216, label %161

161:                                              ; preds = %151, %161
  %162 = phi i64 [ %213, %161 ], [ 0, %151 ]
  %163 = phi i32 [ %212, %161 ], [ %143, %151 ]
  %164 = phi i32 [ %211, %161 ], [ %141, %151 ]
  %165 = load %"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"** %74, align 8
  %166 = call dereferenceable(40) %"class.webrtc::AudioVector"* @_ZN6webrtc16AudioMultiVectorixEm(%"class.webrtc::AudioMultiVector"* %165, i64 %115) #10
  %167 = add i64 %162, %159
  %168 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %166, i64 0, i32 3
  %169 = load i64, i64* %168, align 8
  %170 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %166, i64 0, i32 2
  %171 = load i64, i64* %170, align 8
  %172 = add i64 %169, %167
  %173 = icmp ult i64 %172, %171
  %174 = select i1 %173, i64 0, i64 %171
  %175 = sub i64 %172, %174
  %176 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %166, i64 0, i32 1, i32 0, i32 0, i32 0
  %177 = load i16*, i16** %176, align 8
  %178 = getelementptr inbounds i16, i16* %177, i64 %175
  %179 = load i16, i16* %178, align 2
  %180 = sext i16 %179 to i32
  %181 = shl i32 %164, 16
  %182 = ashr exact i32 %181, 16
  %183 = mul nsw i32 %182, %180
  %184 = load i16, i16* %144, align 8
  %185 = sext i16 %184 to i32
  %186 = getelementptr inbounds [3600 x i16], [3600 x i16]* %5, i64 0, i64 %162
  %187 = load i16, i16* %186, align 2
  %188 = sext i16 %187 to i32
  %189 = mul nsw i32 %188, %185
  %190 = ashr i32 %189, 14
  %191 = shl i32 %163, 16
  %192 = ashr exact i32 %191, 16
  %193 = mul nsw i32 %190, %192
  %194 = add nsw i32 %183, 16384
  %195 = add i32 %194, %193
  %196 = lshr i32 %195, 15
  %197 = trunc i32 %196 to i16
  %198 = load %"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"** %74, align 8
  %199 = call dereferenceable(40) %"class.webrtc::AudioVector"* @_ZN6webrtc16AudioMultiVectorixEm(%"class.webrtc::AudioMultiVector"* %198, i64 %115) #10
  %200 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %199, i64 0, i32 3
  %201 = load i64, i64* %200, align 8
  %202 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %199, i64 0, i32 2
  %203 = load i64, i64* %202, align 8
  %204 = add i64 %201, %167
  %205 = icmp ult i64 %204, %203
  %206 = select i1 %205, i64 0, i64 %203
  %207 = sub i64 %204, %206
  %208 = getelementptr inbounds %"class.webrtc::AudioVector", %"class.webrtc::AudioVector"* %199, i64 0, i32 1, i32 0, i32 0, i32 0
  %209 = load i16*, i16** %208, align 8
  %210 = getelementptr inbounds i16, i16* %209, i64 %207
  store i16 %197, i16* %210, align 2
  %211 = add nsw i32 %182, %142
  %212 = add nsw i32 %192, %143
  %213 = add nuw i64 %162, 1
  %214 = load i64, i64* %11, align 8
  %215 = icmp ult i64 %213, %214
  br i1 %215, label %161, label %216

216:                                              ; preds = %161, %151, %140, %147
  %217 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 2, i64 0
  %218 = bitcast i16* %217 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %14, i8* align 8 %218, i64 12, i1 false)
  %219 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 4
  %220 = load i16, i16* %219, align 2
  %221 = icmp sgt i16 %220, 0
  %222 = sext i16 %220 to i32
  %223 = add nsw i32 %222, -1
  %224 = shl i32 1, %223
  %225 = select i1 %221, i32 %224, i32 0
  %226 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 3
  %227 = load i16, i16* %226, align 4
  call void @WebRtcSpl_AffineTransformVector(i16* nonnull %75, i16* nonnull %76, i16 signext %227, i32 %225, i16 signext %220, i64 %60) #10
  %228 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 1, i64 0
  call void @WebRtcSpl_FilterARFastQ12(i16* nonnull %75, i16* %16, i16* %228, i64 7, i64 %60) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 2 %78, i64 12, i1 false)
  %229 = load i64, i64* %55, align 8
  %230 = trunc i64 %229 to i32
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %237, label %232

232:                                              ; preds = %216
  %233 = ashr i32 %230, 31
  %234 = xor i32 %233, %230
  %235 = call i32 @llvm.ctlz.i32(i32 %234, i1 false) #10, !range !3
  %236 = add nsw i32 %235, -1
  br label %237

237:                                              ; preds = %216, %232
  %238 = phi i32 [ %236, %232 ], [ 0, %216 ]
  %239 = sub nsw i32 26, %238
  %240 = lshr i32 256, %239
  %241 = trunc i32 %240 to i16
  %242 = load i8, i8* %79, align 8, !range !2
  %243 = icmp eq i8 %242, 0
  %244 = select i1 %243, i16 %241, i16 0
  %245 = add nsw i32 %238, -18
  %246 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 6
  %247 = load i16, i16* %246, align 2
  %248 = sext i16 %247 to i32
  %249 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 5
  %250 = load i16, i16* %249, align 8
  %251 = sext i16 %250 to i32
  %252 = sub nsw i32 %248, %251
  %253 = ashr i32 %252, %245
  %254 = sext i32 %253 to i64
  %255 = icmp ult i64 %60, %254
  %256 = select i1 %255, i64 %60, i64 %254
  call void @_ZN6webrtc9DspHelper9CrossFadeEPKsS2_mPssS3_(i16* %13, i16* %16, i64 %256, i16* %246, i16 signext %244, i16* nonnull %10) #10
  %257 = icmp ugt i64 %60, %254
  br i1 %257, label %258, label %272

258:                                              ; preds = %237
  %259 = icmp eq i16 %244, 0
  br i1 %259, label %260, label %262

260:                                              ; preds = %258
  %261 = load i16, i16* %246, align 2
  br label %264

262:                                              ; preds = %258
  %263 = load i16, i16* %249, align 8
  store i16 %263, i16* %246, align 2
  br label %264

264:                                              ; preds = %260, %262
  %265 = phi i16 [ %261, %260 ], [ %263, %262 ]
  %266 = sub i16 16384, %265
  %267 = getelementptr inbounds i16, i16* %13, i64 %256
  %268 = getelementptr inbounds i16, i16* %16, i64 %256
  %269 = getelementptr inbounds [3600 x i16], [3600 x i16]* %5, i64 0, i64 %256
  %270 = sub i64 %60, %256
  %271 = call i32 %72(i16* %267, i16 signext %265, i16* %268, i16 signext %266, i32 14, i16* %269, i64 %270) #10
  br label %272

272:                                              ; preds = %264, %237
  %273 = load i32, i32* %80, align 8
  %274 = icmp eq i32 %273, 3
  br i1 %274, label %275, label %282

275:                                              ; preds = %272
  %276 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 10
  %277 = sdiv i32 1049, %20
  %278 = load i32, i32* %276, align 4
  %279 = icmp slt i32 %278, %277
  %280 = select i1 %279, i32 %277, i32 %278
  store i32 %280, i32* %276, align 4
  %281 = load i32, i32* %80, align 8
  br label %282

282:                                              ; preds = %275, %272
  %283 = phi i32 [ %281, %275 ], [ %273, %272 ]
  %284 = icmp eq i32 %283, 7
  br i1 %284, label %285, label %292

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 10
  %287 = sdiv i32 2097, %20
  %288 = load i32, i32* %286, align 4
  %289 = icmp slt i32 %288, %287
  %290 = select i1 %289, i32 %287, i32 %288
  store i32 %290, i32* %286, align 4
  %291 = load i32, i32* %80, align 8
  br label %292

292:                                              ; preds = %285, %282
  %293 = phi i32 [ %291, %285 ], [ %283, %282 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %299

295:                                              ; preds = %292
  %296 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 9
  %297 = load i8, i8* %296, align 8, !range !2
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %299, label %330

299:                                              ; preds = %295, %292
  %300 = load i16, i16* %144, align 8
  call void @WebRtcSpl_AffineTransformVector(i16* nonnull %10, i16* nonnull %10, i16 signext %300, i32 8192, i16 signext 14, i64 %60) #10
  %301 = load i8, i8* %79, align 8, !range !2
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %303, label %330

303:                                              ; preds = %299
  %304 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %116, i64 %115, i32 10
  %305 = load i32, i32* %304, align 4
  call void @_ZN6webrtc9DspHelper10MuteSignalEPsim(i16* nonnull %10, i32 %305, i64 %60) #10
  %306 = load i32, i32* %304, align 4
  %307 = sext i32 %306 to i64
  %308 = mul i64 %60, %307
  %309 = add i64 %308, 8192
  %310 = lshr i64 %309, 6
  %311 = shl i64 %310, 16
  %312 = trunc i64 %311 to i32
  %313 = sub i32 1073741824, %312
  %314 = ashr exact i32 %313, 16
  %315 = load i16, i16* %144, align 8
  %316 = sext i16 %315 to i32
  %317 = mul nsw i32 %314, %316
  %318 = add nsw i32 %317, 8192
  %319 = lshr i32 %318, 14
  %320 = trunc i32 %319 to i16
  %321 = load i32, i32* %80, align 8
  %322 = icmp sgt i32 %321, 3
  br i1 %322, label %323, label %327

323:                                              ; preds = %303
  %324 = shl i32 %319, 16
  %325 = ashr exact i32 %324, 16
  %326 = icmp slt i32 %325, %316
  br i1 %326, label %327, label %328

327:                                              ; preds = %323, %303
  br label %328

328:                                              ; preds = %323, %327
  %329 = phi i16 [ %320, %327 ], [ 0, %323 ]
  store i16 %329, i16* %144, align 8
  br label %330

330:                                              ; preds = %299, %295, %328
  %331 = load %"class.webrtc::BackgroundNoise"*, %"class.webrtc::BackgroundNoise"** %81, align 8
  %332 = load %"struct.webrtc::Expand::ChannelParameters"*, %"struct.webrtc::Expand::ChannelParameters"** %67, align 8
  %333 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %332, i64 %115, i32 10
  %334 = load i32, i32* %333, align 4
  %335 = load i32, i32* %80, align 8
  %336 = icmp sgt i32 %335, 199
  call void @_ZN6webrtc15BackgroundNoise23GenerateBackgroundNoiseEN3rtc9ArrayViewIKsLln4711EEEmibmPs(%"class.webrtc::BackgroundNoise"* %331, i16* nonnull %76, i64 750, i64 %115, i32 %334, i1 zeroext %336, i64 %60, i16* nonnull %15) #10
  br i1 %82, label %400, label %337

337:                                              ; preds = %330
  br i1 %87, label %338, label %340

338:                                              ; preds = %399, %337
  %339 = phi i64 [ 0, %337 ], [ %88, %399 ]
  br label %402

340:                                              ; preds = %337
  br i1 %90, label %380, label %341

341:                                              ; preds = %340, %341
  %342 = phi i64 [ %377, %341 ], [ 0, %340 ]
  %343 = phi i64 [ %378, %341 ], [ %91, %340 ]
  %344 = getelementptr inbounds [3600 x i16], [3600 x i16]* %5, i64 0, i64 %342
  %345 = bitcast i16* %344 to <8 x i16>*
  %346 = load <8 x i16>, <8 x i16>* %345, align 16
  %347 = getelementptr inbounds i16, i16* %344, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  %349 = load <8 x i16>, <8 x i16>* %348, align 16
  %350 = getelementptr inbounds i16, i16* %17, i64 %342
  %351 = bitcast i16* %350 to <8 x i16>*
  %352 = load <8 x i16>, <8 x i16>* %351, align 16
  %353 = getelementptr inbounds i16, i16* %350, i64 8
  %354 = bitcast i16* %353 to <8 x i16>*
  %355 = load <8 x i16>, <8 x i16>* %354, align 16
  %356 = add <8 x i16> %352, %346
  %357 = add <8 x i16> %355, %349
  %358 = bitcast i16* %344 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %358, align 16
  %359 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %357, <8 x i16>* %359, align 16
  %360 = or i64 %342, 16
  %361 = getelementptr inbounds [3600 x i16], [3600 x i16]* %5, i64 0, i64 %360
  %362 = bitcast i16* %361 to <8 x i16>*
  %363 = load <8 x i16>, <8 x i16>* %362, align 16
  %364 = getelementptr inbounds i16, i16* %361, i64 8
  %365 = bitcast i16* %364 to <8 x i16>*
  %366 = load <8 x i16>, <8 x i16>* %365, align 16
  %367 = getelementptr inbounds i16, i16* %17, i64 %360
  %368 = bitcast i16* %367 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 16
  %370 = getelementptr inbounds i16, i16* %367, i64 8
  %371 = bitcast i16* %370 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 16
  %373 = add <8 x i16> %369, %363
  %374 = add <8 x i16> %372, %366
  %375 = bitcast i16* %361 to <8 x i16>*
  store <8 x i16> %373, <8 x i16>* %375, align 16
  %376 = bitcast i16* %364 to <8 x i16>*
  store <8 x i16> %374, <8 x i16>* %376, align 16
  %377 = add i64 %342, 32
  %378 = add i64 %343, -2
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %380, label %341, !llvm.loop !4

380:                                              ; preds = %341, %340
  %381 = phi i64 [ 0, %340 ], [ %377, %341 ]
  br i1 %92, label %399, label %382

382:                                              ; preds = %380
  %383 = getelementptr inbounds [3600 x i16], [3600 x i16]* %5, i64 0, i64 %381
  %384 = bitcast i16* %383 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 16
  %386 = getelementptr inbounds i16, i16* %383, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 16
  %389 = getelementptr inbounds i16, i16* %17, i64 %381
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 16
  %392 = getelementptr inbounds i16, i16* %389, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 16
  %395 = add <8 x i16> %391, %385
  %396 = add <8 x i16> %394, %388
  %397 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %395, <8 x i16>* %397, align 16
  %398 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %398, align 16
  br label %399

399:                                              ; preds = %380, %382
  br i1 %93, label %400, label %338

400:                                              ; preds = %402, %399, %330
  %401 = icmp eq i64 %115, 0
  br i1 %401, label %411, label %415

402:                                              ; preds = %338, %402
  %403 = phi i64 [ %409, %402 ], [ %339, %338 ]
  %404 = getelementptr inbounds [3600 x i16], [3600 x i16]* %5, i64 0, i64 %403
  %405 = load i16, i16* %404, align 2
  %406 = getelementptr inbounds i16, i16* %17, i64 %403
  %407 = load i16, i16* %406, align 2
  %408 = add i16 %407, %405
  store i16 %408, i16* %404, align 2
  %409 = add nuw i64 %403, 1
  %410 = icmp eq i64 %409, %60
  br i1 %410, label %400, label %402, !llvm.loop !6

411:                                              ; preds = %400
  %412 = load void (%"class.webrtc::AudioMultiVector"*, i64)**, void (%"class.webrtc::AudioMultiVector"*, i64)*** %83, align 8
  %413 = getelementptr inbounds void (%"class.webrtc::AudioMultiVector"*, i64)*, void (%"class.webrtc::AudioMultiVector"*, i64)** %412, i64 16
  %414 = load void (%"class.webrtc::AudioMultiVector"*, i64)*, void (%"class.webrtc::AudioMultiVector"*, i64)** %413, align 8
  call void %414(%"class.webrtc::AudioMultiVector"* %1, i64 %60) #10
  br label %415

415:                                              ; preds = %400, %411
  %416 = call dereferenceable(40) %"class.webrtc::AudioVector"* @_ZN6webrtc16AudioMultiVectorixEm(%"class.webrtc::AudioMultiVector"* %1, i64 %115) #10
  %417 = bitcast %"class.webrtc::AudioVector"* %416 to void (%"class.webrtc::AudioVector"*, i16*, i64, i64)***
  %418 = load void (%"class.webrtc::AudioVector"*, i16*, i64, i64)**, void (%"class.webrtc::AudioVector"*, i16*, i64, i64)*** %417, align 8
  %419 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i16*, i64, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64, i64)** %418, i64 16
  %420 = load void (%"class.webrtc::AudioVector"*, i16*, i64, i64)*, void (%"class.webrtc::AudioVector"*, i16*, i64, i64)** %419, align 8
  call void %420(%"class.webrtc::AudioVector"* %416, i16* nonnull %10, i64 %60, i64 0) #10
  %421 = add nuw i64 %115, 1
  %422 = load i64, i64* %63, align 8
  %423 = icmp ult i64 %421, %422
  br i1 %423, label %424, label %94

424:                                              ; preds = %415
  %425 = load i32, i32* %44, align 4
  br label %113
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc6Expand13AnalyzeSignalEPs(%"class.webrtc::Expand"*, i16*) local_unnamed_addr #0 align 2 {
  %3 = alloca [7 x i32], align 16
  %4 = alloca [6 x i16], align 2
  %5 = alloca [612 x i16], align 16
  %6 = alloca [3 x i64], align 16
  %7 = alloca [3 x i16], align 2
  %8 = alloca [3 x i64], align 16
  %9 = alloca [3 x i16], align 2
  %10 = alloca [595 x i32], align 16
  %11 = alloca [3 x i32], align 4
  %12 = alloca [758 x i16], align 16
  %13 = bitcast [7 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %13) #10
  %14 = getelementptr inbounds [7 x i32], [7 x i32]* %3, i64 0, i64 0
  %15 = bitcast [6 x i16]* %4 to i8*
  %16 = bitcast [7 x i32]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 28, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %15) #10
  %17 = getelementptr inbounds [6 x i16], [6 x i16]* %4, i64 0, i64 0
  %18 = bitcast [612 x i16]* %5 to i8*
  %19 = bitcast [6 x i16]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %19, i8 -86, i64 12, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1224, i8* nonnull %18) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 1224, i1 false)
  %20 = bitcast [3 x i64]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  %21 = getelementptr inbounds [3 x i64], [3 x i64]* %6, i64 0, i64 0
  %22 = getelementptr inbounds [3 x i64], [3 x i64]* %6, i64 0, i64 1
  %23 = getelementptr inbounds [3 x i64], [3 x i64]* %6, i64 0, i64 2
  %24 = bitcast [3 x i16]* %7 to i8*
  %25 = bitcast [3 x i64]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %24) #10
  %26 = getelementptr inbounds [3 x i16], [3 x i16]* %7, i64 0, i64 0
  store i16 -21846, i16* %26, align 2
  %27 = getelementptr inbounds [3 x i16], [3 x i16]* %7, i64 0, i64 1
  store i16 -21846, i16* %27, align 2
  %28 = getelementptr inbounds [3 x i16], [3 x i16]* %7, i64 0, i64 2
  store i16 -21846, i16* %28, align 2
  %29 = bitcast [3 x i64]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  %30 = getelementptr inbounds [3 x i64], [3 x i64]* %8, i64 0, i64 0
  %31 = getelementptr inbounds [3 x i64], [3 x i64]* %8, i64 0, i64 1
  %32 = getelementptr inbounds [3 x i64], [3 x i64]* %8, i64 0, i64 2
  %33 = bitcast [3 x i16]* %9 to i8*
  %34 = bitcast [3 x i64]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %33) #10
  %35 = getelementptr inbounds [3 x i16], [3 x i16]* %9, i64 0, i64 0
  store i16 -21846, i16* %35, align 2
  %36 = getelementptr inbounds [3 x i16], [3 x i16]* %9, i64 0, i64 1
  store i16 -21846, i16* %36, align 2
  %37 = getelementptr inbounds [3 x i16], [3 x i16]* %9, i64 0, i64 2
  store i16 -21846, i16* %37, align 2
  %38 = bitcast [595 x i32]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2380, i8* nonnull %38) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 -86, i64 2380, i1 false)
  %39 = bitcast [3 x i32]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %39) #10
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* %11, i64 0, i64 0
  store i32 -1431655766, i32* %40, align 4
  %41 = getelementptr inbounds [3 x i32], [3 x i32]* %11, i64 0, i64 1
  store i32 -1431655766, i32* %41, align 4
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* %11, i64 0, i64 2
  store i32 -1431655766, i32* %42, align 4
  %43 = bitcast [758 x i16]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1516, i8* nonnull %43) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %43, i8 -86, i64 1516, i1 false)
  %44 = getelementptr inbounds [758 x i16], [758 x i16]* %12, i64 0, i64 6
  %45 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 4
  %46 = load i32, i32* %45, align 4
  %47 = sdiv i32 %46, 8000
  %48 = shl nsw i32 %47, 2
  %49 = sext i32 %48 to i64
  %50 = mul nsw i32 %47, 20
  %51 = sext i32 %50 to i64
  %52 = mul nsw i32 %47, 120
  %53 = sext i32 %52 to i64
  %54 = sext i32 %47 to i64
  %55 = mul nsw i64 %54, 20
  %56 = mul nsw i64 %54, 160
  %57 = shl nsw i32 %47, 8
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 2
  %60 = bitcast %"class.webrtc::SyncBuffer"** %59 to %"class.webrtc::AudioMultiVector"**
  %61 = load %"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"** %60, align 8
  %62 = bitcast %"class.webrtc::AudioMultiVector"* %61 to i64 (%"class.webrtc::AudioMultiVector"*)***
  %63 = load i64 (%"class.webrtc::AudioMultiVector"*)**, i64 (%"class.webrtc::AudioMultiVector"*)*** %62, align 8
  %64 = getelementptr inbounds i64 (%"class.webrtc::AudioMultiVector"*)*, i64 (%"class.webrtc::AudioMultiVector"*)** %63, i64 15
  %65 = load i64 (%"class.webrtc::AudioMultiVector"*)*, i64 (%"class.webrtc::AudioMultiVector"*)** %64, align 8
  %66 = tail call i64 %65(%"class.webrtc::AudioMultiVector"* %61) #10
  %67 = sub i64 %66, %58
  %68 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %58, i64 2)
  %69 = extractvalue { i64, i1 } %68, 1
  %70 = extractvalue { i64, i1 } %68, 0
  %71 = select i1 %69, i64 -1, i64 %70
  %72 = tail call i8* @_Znam(i64 %71) #9
  %73 = bitcast i8* %72 to i16*
  %74 = load %"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"** %60, align 8
  %75 = tail call dereferenceable(40) %"class.webrtc::AudioVector"* @_ZN6webrtc16AudioMultiVectorixEm(%"class.webrtc::AudioMultiVector"* %74, i64 0) #10
  %76 = bitcast %"class.webrtc::AudioVector"* %75 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %77 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %77, i64 4
  %79 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %78, align 8
  tail call void %79(%"class.webrtc::AudioVector"* %75, i64 %58, i64 %67, i16* nonnull %73) #10
  %80 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 12
  store i32 1, i32* %80, align 8
  %81 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 13
  store i32 -1, i32* %81, align 4
  %82 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 14
  store i8 0, i8* %82, align 8
  %83 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 1
  %84 = load %"class.webrtc::RandomVector"*, %"class.webrtc::RandomVector"** %83, align 8
  %85 = getelementptr inbounds %"class.webrtc::RandomVector", %"class.webrtc::RandomVector"* %84, i64 0, i32 1
  store i16 1, i16* %85, align 4
  %86 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 6
  store i32 0, i32* %86, align 8
  %87 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 5
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %103, label %90

90:                                               ; preds = %2
  %91 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 7
  br label %93

93:                                               ; preds = %93, %90
  %94 = phi i64 [ 0, %90 ], [ %100, %93 ]
  %95 = load %"struct.webrtc::Expand::ChannelParameters"*, %"struct.webrtc::Expand::ChannelParameters"** %91, align 8
  %96 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %95, i64 %94, i32 6
  store i16 16384, i16* %96, align 2
  %97 = load %"struct.webrtc::Expand::ChannelParameters"*, %"struct.webrtc::Expand::ChannelParameters"** %91, align 8
  %98 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %97, i64 %94, i32 0
  store i16 16384, i16* %98, align 8
  %99 = load %"class.webrtc::BackgroundNoise"*, %"class.webrtc::BackgroundNoise"** %92, align 8
  tail call void @_ZN6webrtc15BackgroundNoise13SetMuteFactorEms(%"class.webrtc::BackgroundNoise"* %99, i64 %94, i16 signext 0) #10
  %100 = add nuw i64 %94, 1
  %101 = load i64, i64* %87, align 8
  %102 = icmp ult i64 %100, %101
  br i1 %102, label %93, label %103

103:                                              ; preds = %93, %2
  %104 = getelementptr inbounds [612 x i16], [612 x i16]* %5, i64 0, i64 0
  call void @_ZNK6webrtc6Expand11CorrelationEPKsmPs(%"class.webrtc::Expand"* %0, i16* nonnull %73, i64 %58, i16* nonnull %104)
  call void @_ZN6webrtc9DspHelper13PeakDetectionEPsmmiPmS1_(i16* nonnull %104, i64 51, i64 3, i32 %47, i64* nonnull %21, i16* nonnull %26) #10
  %105 = bitcast [3 x i64]* %6 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 16
  %107 = insertelement <2 x i64> undef, i64 %51, i32 0
  %108 = shufflevector <2 x i64> %107, <2 x i64> undef, <2 x i32> zeroinitializer
  %109 = add <2 x i64> %106, %108
  %110 = bitcast [3 x i64]* %6 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %110, align 16
  %111 = load i64, i64* %23, align 16
  %112 = add i64 %111, %51
  store i64 %112, i64* %23, align 16
  %113 = add nsw i64 %53, -1
  %114 = sub nsw i64 %58, %55
  %115 = getelementptr inbounds i16, i16* %73, i64 %114
  %116 = extractelement <2 x i64> %109, i32 0
  %117 = sub i64 %116, %49
  %118 = icmp ugt i64 %117, %51
  %119 = select i1 %118, i64 %117, i64 %51
  %120 = add i64 %116, %49
  %121 = icmp ult i64 %120, %113
  %122 = select i1 %121, i64 %120, i64 %113
  %123 = call i64 @_ZN6webrtc9DspHelper13MinDistortionEPKsmmmPi(i16* %115, i64 %119, i64 %122, i64 %55, i32* nonnull %40) #10
  store i64 %123, i64* %30, align 16
  %124 = load i32, i32* %40, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %132, label %126

126:                                              ; preds = %103
  %127 = ashr i32 %124, 31
  %128 = xor i32 %127, %124
  %129 = call i32 @llvm.ctlz.i32(i32 %128, i1 false) #10, !range !3
  %130 = sub nsw i32 17, %129
  %131 = icmp ugt i32 %128, 32767
  br i1 %131, label %132, label %134

132:                                              ; preds = %103, %126
  %133 = phi i32 [ %130, %126 ], [ 16, %103 ]
  br label %134

134:                                              ; preds = %126, %132
  %135 = phi i32 [ %133, %132 ], [ 0, %126 ]
  %136 = load i64, i64* %22, align 8
  %137 = sub i64 %136, %49
  %138 = icmp ugt i64 %137, %51
  %139 = select i1 %138, i64 %137, i64 %51
  %140 = add i64 %136, %49
  %141 = icmp ult i64 %140, %113
  %142 = select i1 %141, i64 %140, i64 %113
  %143 = call i64 @_ZN6webrtc9DspHelper13MinDistortionEPKsmmmPi(i16* %115, i64 %139, i64 %142, i64 %55, i32* %41) #10
  store i64 %143, i64* %31, align 8
  %144 = load i32, i32* %41, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %539, label %534

146:                                              ; preds = %503
  %147 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %148 = load i16 (i16*, i64)*, i16 (i16*, i64)** @WebRtcSpl_MaxAbsValueW16, align 8
  %149 = sub i64 %58, %520
  %150 = sub i64 %149, %522
  %151 = sub i64 %150, %531
  %152 = getelementptr inbounds i16, i16* %73, i64 %151
  %153 = add i64 %522, -1
  %154 = add i64 %153, %520
  %155 = add i64 %154, %531
  %156 = trunc i64 %520 to i32
  %157 = icmp eq i32 %156, 0
  %158 = ashr i32 %156, 31
  %159 = xor i32 %158, %156
  %160 = call i32 @llvm.ctlz.i32(i32 %159, i1 false) #10, !range !3
  %161 = load void (i32*, i16*, i16*, i64, i64, i32, i32)*, void (i32*, i16*, i16*, i64, i64, i32, i32)** @WebRtcSpl_CrossCorrelation, align 8
  %162 = getelementptr inbounds [595 x i32], [595 x i32]* %10, i64 0, i64 0
  %163 = getelementptr inbounds i16, i16* %73, i64 %149
  %164 = getelementptr inbounds i16, i16* %73, i64 %150
  %165 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 9
  %166 = sub i64 0, %508
  %167 = icmp eq i64 %508, %510
  %168 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 11, i64 0
  %169 = add i64 %510, %508
  %170 = lshr i64 %169, 1
  %171 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 11, i64 1
  %172 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 11, i64 2
  %173 = sub nsw i64 %58, %56
  %174 = or i64 %56, 6
  %175 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %174, i64 2)
  %176 = extractvalue { i64, i1 } %175, 1
  %177 = extractvalue { i64, i1 } %175, 0
  %178 = select i1 %176, i64 -1, i64 %177
  %179 = shl nsw i64 %174, 1
  %180 = getelementptr inbounds i16, i16* %73, i64 %173
  %181 = bitcast i16* %180 to i8*
  %182 = mul nsw i64 %54, 320
  %183 = icmp ult i64 %508, 40
  %184 = zext i1 %183 to i64
  %185 = shl i64 %508, %184
  %186 = add i64 %185, 30
  %187 = icmp ult i64 %186, 257
  %188 = bitcast i16* %1 to i8*
  %189 = add i64 %185, -226
  %190 = getelementptr inbounds i16, i16* %1, i64 256
  %191 = shl i64 %186, 1
  %192 = add nsw i64 %58, -6
  %193 = getelementptr inbounds i16, i16* %73, i64 %192
  %194 = bitcast i16* %193 to i8*
  %195 = add nsw i64 %58, -128
  %196 = add nsw i64 %58, -134
  %197 = getelementptr inbounds i16, i16* %73, i64 %196
  %198 = bitcast i16* %197 to i8*
  %199 = getelementptr inbounds i16, i16* %73, i64 %195
  %200 = trunc i64 %508 to i16
  %201 = sub nuw nsw i32 32, %160
  %202 = select i1 %157, i32 31, i32 %201
  %203 = select i1 %521, i64 -1, i64 1
  %204 = add i64 %169, %203
  %205 = lshr i64 %204, 1
  br label %222

206:                                              ; preds = %558
  %207 = sext i16 %564 to i32
  %208 = sext i16 %562 to i32
  %209 = shl nsw i32 %207, 16
  %210 = sdiv i32 %209, %208
  br label %214

211:                                              ; preds = %558
  %212 = icmp eq i16 %564, 0
  %213 = select i1 %212, i32 0, i32 2147483647
  br label %214

214:                                              ; preds = %211, %206
  %215 = phi i32 [ %210, %206 ], [ %213, %211 ]
  %216 = icmp eq i32 %215, -2147483648
  %217 = sext i1 %216 to i64
  %218 = load i16, i16* %36, align 2
  %219 = icmp sgt i16 %218, 0
  %220 = load i16, i16* %27, align 2
  br i1 %219, label %482, label %479

221:                                              ; preds = %473, %503
  call void @_ZdaPv(i8* nonnull %72) #9
  call void @llvm.lifetime.end.p0i8(i64 1516, i8* nonnull %43) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 2380, i8* nonnull %38) #10
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 1224, i8* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %13) #10
  ret void

222:                                              ; preds = %146, %473
  %223 = phi i64 [ 0, %146 ], [ %476, %473 ]
  %224 = load %"struct.webrtc::Expand::ChannelParameters"*, %"struct.webrtc::Expand::ChannelParameters"** %147, align 8
  %225 = icmp eq i64 %223, 0
  br i1 %225, label %233, label %226

226:                                              ; preds = %222
  %227 = load %"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"** %60, align 8
  %228 = call dereferenceable(40) %"class.webrtc::AudioVector"* @_ZN6webrtc16AudioMultiVectorixEm(%"class.webrtc::AudioMultiVector"* %227, i64 %223) #10
  %229 = bitcast %"class.webrtc::AudioVector"* %228 to void (%"class.webrtc::AudioVector"*, i64, i64, i16*)***
  %230 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)**, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*** %229, align 8
  %231 = getelementptr inbounds void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %230, i64 4
  %232 = load void (%"class.webrtc::AudioVector"*, i64, i64, i16*)*, void (%"class.webrtc::AudioVector"*, i64, i64, i16*)** %231, align 8
  call void %232(%"class.webrtc::AudioVector"* %228, i64 %58, i64 %67, i16* nonnull %73) #10
  br label %233

233:                                              ; preds = %222, %226
  %234 = call signext i16 %148(i16* %152, i64 %155) #10
  %235 = sext i16 %234 to i32
  %236 = mul nsw i32 %235, %235
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %241, label %238

238:                                              ; preds = %233
  %239 = call i32 @llvm.ctlz.i32(i32 %236, i1 false) #10, !range !3
  %240 = add nsw i32 %239, -1
  br label %241

241:                                              ; preds = %233, %238
  %242 = phi i32 [ %240, %238 ], [ 0, %233 ]
  %243 = sub nsw i32 31, %242
  %244 = add nsw i32 %202, %243
  %245 = icmp sgt i32 %244, 31
  %246 = select i1 %245, i32 %244, i32 31
  %247 = add nsw i32 %246, -31
  call void %161(i32* nonnull %162, i16* %163, i16* %164, i64 %520, i64 %531, i32 %247, i32 -1) #10
  %248 = call i64 @WebRtcSpl_MaxIndexW32(i32* nonnull %162, i64 %531) #10
  %249 = getelementptr inbounds [595 x i32], [595 x i32]* %10, i64 0, i64 %248
  %250 = load i32, i32* %249, align 4
  %251 = call i32 @WebRtcSpl_DotProductWithScale(i16* %163, i16* %163, i64 %520, i32 %247) #10
  %252 = sub i64 %150, %248
  %253 = getelementptr inbounds i16, i16* %73, i64 %252
  %254 = call i32 @WebRtcSpl_DotProductWithScale(i16* %253, i16* %253, i64 %520, i32 %247) #10
  %255 = icmp sgt i32 %251, 0
  %256 = icmp sgt i32 %254, 0
  %257 = and i1 %255, %256
  br i1 %257, label %258, label %290

258:                                              ; preds = %241
  %259 = lshr i32 %251, 31
  %260 = xor i32 %259, %251
  %261 = call i32 @llvm.ctlz.i32(i32 %260, i1 false) #10, !range !3
  %262 = sub nsw i32 17, %261
  %263 = icmp sgt i32 %262, 0
  %264 = select i1 %263, i32 %262, i32 0
  %265 = lshr i32 %254, 31
  %266 = xor i32 %265, %254
  %267 = call i32 @llvm.ctlz.i32(i32 %266, i1 false) #10, !range !3
  %268 = sub nsw i32 17, %267
  %269 = icmp sgt i32 %268, 0
  %270 = select i1 %269, i32 %268, i32 0
  %271 = add nuw nsw i32 %270, %264
  %272 = and i32 %271, 1
  %273 = add nuw nsw i32 %272, %264
  %274 = lshr i32 %251, %273
  %275 = lshr i32 %254, %270
  %276 = mul nsw i32 %274, %275
  %277 = call i32 @WebRtcSpl_SqrtFloor(i32 %276) #10
  %278 = trunc i32 %277 to i16
  %279 = add nuw nsw i32 %273, %270
  %280 = lshr i32 %279, 1
  %281 = sub nsw i32 14, %280
  %282 = icmp ult i32 %279, 30
  %283 = shl i32 %250, %281
  %284 = add nsw i32 %280, -14
  %285 = ashr i32 %250, %284
  %286 = select i1 %282, i32 %283, i32 %285
  %287 = call i32 @WebRtcSpl_DivW32W16(i32 %286, i16 signext %278) #10
  %288 = icmp slt i32 %287, 16384
  %289 = select i1 %288, i32 %287, i32 16384
  br label %290

290:                                              ; preds = %241, %258
  %291 = phi i32 [ %289, %258 ], [ 0, %241 ]
  %292 = load i64, i64* %513, align 8
  %293 = load i64, i64* %165, align 8
  %294 = add i64 %293, %292
  %295 = sub i64 %58, %294
  %296 = getelementptr inbounds i16, i16* %73, i64 %295
  %297 = getelementptr inbounds i16, i16* %296, i64 %166
  %298 = call i32 @WebRtcSpl_DotProductWithScale(i16* %296, i16* %296, i64 %294, i32 %247) #10
  %299 = call i32 @WebRtcSpl_DotProductWithScale(i16* %297, i16* %297, i64 %294, i32 %247) #10
  %300 = sdiv i32 %298, 4
  %301 = icmp slt i32 %300, %299
  %302 = sdiv i32 %299, 4
  %303 = icmp sgt i32 %298, %302
  %304 = and i1 %301, %303
  br i1 %304, label %305, label %343

305:                                              ; preds = %290
  %306 = icmp eq i32 %299, 0
  br i1 %306, label %312, label %307

307:                                              ; preds = %305
  %308 = ashr i32 %299, 31
  %309 = xor i32 %308, %299
  %310 = call i32 @llvm.ctlz.i32(i32 %309, i1 false) #10, !range !3
  %311 = add nsw i32 %310, -1
  br label %312

312:                                              ; preds = %305, %307
  %313 = phi i32 [ %311, %307 ], [ 0, %305 ]
  %314 = sub nsw i32 16, %313
  %315 = icmp sgt i32 %314, 0
  %316 = select i1 %315, i32 %314, i32 0
  %317 = add nsw i32 %316, -13
  %318 = sub nsw i32 13, %316
  %319 = icmp slt i32 %316, 14
  %320 = shl i32 %298, %318
  %321 = ashr i32 %298, %317
  %322 = select i1 %319, i32 %320, i32 %321
  %323 = ashr i32 %299, %316
  %324 = trunc i32 %323 to i16
  %325 = call i32 @WebRtcSpl_DivW32W16(i32 %322, i16 signext %324) #10
  %326 = shl i32 %325, 13
  %327 = call i32 @WebRtcSpl_SqrtFloor(i32 %326) #10
  %328 = trunc i32 %327 to i16
  %329 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %224, i64 %223, i32 7
  call void @_ZN6webrtc11AudioVector5ClearEv(%"class.webrtc::AudioVector"* %329) #10
  call void @_ZN6webrtc11AudioVector8PushBackEPKsm(%"class.webrtc::AudioVector"* %329, i16* %296, i64 %294) #10
  %330 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %224, i64 %223, i32 8
  call void @_ZN6webrtc11AudioVector5ClearEv(%"class.webrtc::AudioVector"* %330) #10
  %331 = call i64 @_ZNK6webrtc11AudioVector4SizeEv(%"class.webrtc::AudioVector"* %330) #10
  %332 = icmp ult i64 %331, %294
  br i1 %332, label %333, label %336

333:                                              ; preds = %312
  %334 = call i64 @_ZNK6webrtc11AudioVector4SizeEv(%"class.webrtc::AudioVector"* %330) #10
  %335 = sub i64 %294, %334
  call void @_ZN6webrtc11AudioVector6ExtendEm(%"class.webrtc::AudioVector"* %330, i64 %335) #10
  br label %336

336:                                              ; preds = %333, %312
  %337 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %294, i64 2)
  %338 = extractvalue { i64, i1 } %337, 1
  %339 = extractvalue { i64, i1 } %337, 0
  %340 = select i1 %338, i64 -1, i64 %339
  %341 = call i8* @_Znam(i64 %340) #9
  %342 = bitcast i8* %341 to i16*
  call void @WebRtcSpl_AffineTransformVector(i16* nonnull %342, i16* %297, i16 signext %328, i32 4096, i16 signext 13, i64 %294) #10
  call void @_ZN6webrtc11AudioVector11OverwriteAtEPKsmm(%"class.webrtc::AudioVector"* %330, i16* nonnull %342, i64 %294, i64 0) #10
  call void @_ZdaPv(i8* nonnull %341) #9
  br label %349

343:                                              ; preds = %290
  %344 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %224, i64 %223, i32 7
  call void @_ZN6webrtc11AudioVector5ClearEv(%"class.webrtc::AudioVector"* %344) #10
  call void @_ZN6webrtc11AudioVector8PushBackEPKsm(%"class.webrtc::AudioVector"* %344, i16* %296, i64 %294) #10
  %345 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %224, i64 %223, i32 8
  call void @_ZNK6webrtc11AudioVector6CopyToEPS0_(%"class.webrtc::AudioVector"* %344, %"class.webrtc::AudioVector"* %345) #10
  %346 = icmp eq i32 %299, 0
  %347 = or i1 %301, %346
  %348 = select i1 %347, i16 4096, i16 16384
  br label %349

349:                                              ; preds = %343, %336
  %350 = phi i16 [ %328, %336 ], [ %348, %343 ]
  store i64 %508, i64* %168, align 8
  br i1 %167, label %351, label %352

351:                                              ; preds = %349
  store i64 %508, i64* %171, align 8
  br label %353

352:                                              ; preds = %349
  store i64 %170, i64* %171, align 8
  br label %353

353:                                              ; preds = %352, %351
  %354 = phi i64 [ %508, %351 ], [ %205, %352 ]
  store i64 %354, i64* %172, align 8
  %355 = call i8* @_Znam(i64 %178) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %355, i8 0, i64 %179, i1 false)
  %356 = getelementptr inbounds i8, i8* %355, i64 12
  %357 = bitcast i8* %356 to i16*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %356, i8* align 2 %181, i64 %182, i1 false)
  %358 = call i32 @_ZN6webrtc29CrossCorrelationWithAutoShiftEPKsS1_mmiPi(i16* %357, i16* %357, i64 %56, i64 7, i32 -1, i32* nonnull %14) #10
  call void @_ZdaPv(i8* nonnull %355) #9
  %359 = load i32, i32* %14, align 16
  %360 = icmp sgt i32 %359, 0
  br i1 %360, label %361, label %367

361:                                              ; preds = %353
  %362 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %224, i64 %223, i32 1, i64 0
  %363 = call signext i16 @WebRtcSpl_LevinsonDurbin(i32* nonnull %14, i16* %362, i16* nonnull %17, i64 6) #10
  %364 = icmp eq i16 %363, 1
  br i1 %364, label %367, label %365

365:                                              ; preds = %361
  store i16 4096, i16* %362, align 2
  %366 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %224, i64 %223, i32 1, i64 1
  call void @WebRtcSpl_MemSetW16(i16* %366, i16 signext 0, i64 6) #10
  br label %367

367:                                              ; preds = %365, %361, %353
  br i1 %225, label %368, label %373

368:                                              ; preds = %367
  br i1 %187, label %369, label %370

369:                                              ; preds = %368
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %188, i8* align 16 bitcast ([256 x i16]* @_ZN6webrtc12RandomVector12kRandomTableE to i8*), i64 %191, i1 false)
  br label %373

370:                                              ; preds = %368
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %188, i8* align 16 bitcast ([256 x i16]* @_ZN6webrtc12RandomVector12kRandomTableE to i8*), i64 512, i1 false)
  %371 = load %"class.webrtc::RandomVector"*, %"class.webrtc::RandomVector"** %83, align 8
  call void @_ZN6webrtc12RandomVector21IncreaseSeedIncrementEs(%"class.webrtc::RandomVector"* %371, i16 signext 2) #10
  %372 = load %"class.webrtc::RandomVector"*, %"class.webrtc::RandomVector"** %83, align 8
  call void @_ZN6webrtc12RandomVector8GenerateEmPs(%"class.webrtc::RandomVector"* %372, i64 %189, i16* %190) #10
  br label %373

373:                                              ; preds = %369, %370, %367
  %374 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %224, i64 %223, i32 2, i64 0
  %375 = bitcast i16* %374 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %375, i8* align 2 %194, i64 12, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %43, i8* align 2 %198, i64 12, i1 false)
  %376 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %224, i64 %223, i32 1, i64 0
  call void @WebRtcSpl_FilterMAFastQ12(i16* %199, i16* %44, i16* %376, i64 7, i64 128) #10
  %377 = call signext i16 %148(i16* %44, i64 128) #10
  %378 = sext i16 %377 to i32
  %379 = icmp eq i16 %377, 32767
  %380 = zext i1 %379 to i32
  %381 = add nsw i32 %380, %378
  %382 = call i32 @llvm.ctlz.i32(i32 %381, i1 false) #10, !range !3
  %383 = shl nuw nsw i32 %382, 1
  %384 = sub nsw i32 40, %383
  %385 = icmp sgt i32 %384, 0
  %386 = select i1 %385, i32 %384, i32 0
  %387 = call i32 @WebRtcSpl_DotProductWithScale(i16* %44, i16* %44, i64 128, i32 %386) #10
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %395, label %389

389:                                              ; preds = %373
  %390 = ashr i32 %387, 31
  %391 = xor i32 %390, %387
  %392 = call i32 @llvm.ctlz.i32(i32 %391, i1 false) #10, !range !3
  %393 = trunc i32 %392 to i16
  %394 = add nsw i16 %393, -1
  br label %395

395:                                              ; preds = %373, %389
  %396 = phi i16 [ %394, %389 ], [ 0, %373 ]
  %397 = add nsw i16 %396, -3
  %398 = and i16 %397, 1
  %399 = xor i16 %398, 1
  %400 = add nsw i16 %399, %397
  %401 = sext i16 %400 to i32
  %402 = icmp sgt i16 %400, -1
  %403 = shl i32 %387, %401
  %404 = sub nsw i32 0, %401
  %405 = ashr i32 %387, %404
  %406 = select i1 %402, i32 %403, i32 %405
  %407 = call i32 @WebRtcSpl_SqrtFloor(i32 %406) #10
  %408 = trunc i32 %407 to i16
  %409 = sub nsw i32 7, %386
  %410 = add nsw i32 %409, %401
  %411 = sdiv i32 %410, 2
  %412 = trunc i32 %411 to i16
  %413 = add i16 %412, 13
  %414 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %224, i64 %223, i32 4
  store i16 %413, i16* %414, align 2
  %415 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %224, i64 %223, i32 3
  store i16 %408, i16* %415, align 4
  %416 = icmp sgt i32 %291, 7875
  br i1 %416, label %417, label %437

417:                                              ; preds = %395
  %418 = shl i32 %291, 16
  %419 = ashr exact i32 %418, 16
  %420 = ashr exact i32 %418, 14
  %421 = mul i32 %420, %419
  %422 = ashr i32 %421, 16
  %423 = mul nsw i32 %419, 19931
  %424 = add nsw i32 %423, -84852736
  %425 = mul nsw i32 %422, -16422
  %426 = add nsw i32 %424, %425
  %427 = mul i32 %420, %422
  %428 = ashr i32 %427, 16
  %429 = mul nsw i32 %428, 5776
  %430 = add nsw i32 %426, %429
  %431 = sdiv i32 %430, 4096
  %432 = icmp slt i32 %431, 16384
  %433 = select i1 %432, i32 %431, i32 16384
  %434 = trunc i32 %433 to i16
  %435 = icmp sgt i16 %434, 0
  %436 = select i1 %435, i16 %434, i16 0
  br label %437

437:                                              ; preds = %395, %417
  %438 = phi i16 [ %436, %417 ], [ 0, %395 ]
  %439 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %224, i64 %223, i32 5
  store i16 %438, i16* %439, align 8
  %440 = sext i16 %350 to i32
  %441 = icmp sgt i16 %350, 12288
  br i1 %441, label %442, label %458

442:                                              ; preds = %437
  %443 = sext i16 %350 to i64
  %444 = mul i64 %508, %443
  %445 = lshr i64 %444, 8
  %446 = icmp ult i64 %445, 32767
  %447 = select i1 %446, i64 %445, i64 32767
  %448 = trunc i64 %447 to i16
  %449 = shl nsw i32 %440, 12
  %450 = add nsw i32 %449, -33554432
  %451 = call i32 @WebRtcSpl_DivW32W16(i32 %450, i16 signext %448) #10
  %452 = icmp sgt i16 %350, 14746
  %453 = select i1 %452, i32 1, i32 4
  %454 = select i1 %452, i32 2, i32 8
  %455 = add nsw i32 %451, %453
  %456 = sdiv i32 %455, %454
  %457 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %224, i64 %223, i32 10
  store i32 %456, i32* %457, align 4
  br label %473

458:                                              ; preds = %437
  %459 = shl nsw i32 %440, 7
  %460 = sub nsw i32 1048576, %459
  %461 = call i32 @WebRtcSpl_DivW32W16(i32 %460, i16 signext %200) #10
  %462 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %224, i64 %223, i32 10
  store i32 %461, i32* %462, align 4
  %463 = load i16, i16* %439, align 8
  %464 = icmp slt i16 %463, 13108
  br i1 %464, label %465, label %469

465:                                              ; preds = %458
  %466 = sdiv i32 5243, %47
  %467 = icmp slt i32 %466, %461
  %468 = select i1 %467, i32 %461, i32 %466
  br label %471

469:                                              ; preds = %458
  %470 = icmp sgt i16 %350, 8028
  br i1 %470, label %471, label %473

471:                                              ; preds = %469, %465
  %472 = phi i32 [ %468, %465 ], [ 0, %469 ]
  store i32 %472, i32* %462, align 4
  br label %473

473:                                              ; preds = %469, %471, %442
  %474 = phi i8 [ 1, %442 ], [ 0, %471 ], [ 0, %469 ]
  %475 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %224, i64 %223, i32 9
  store i8 %474, i8* %475, align 8
  %476 = add nuw i64 %223, 1
  %477 = load i64, i64* %87, align 8
  %478 = icmp ult i64 %476, %477
  br i1 %478, label %222, label %221

479:                                              ; preds = %214
  %480 = icmp eq i16 %220, 0
  %481 = select i1 %480, i32 0, i32 2147483647
  br label %487

482:                                              ; preds = %214
  %483 = sext i16 %220 to i32
  %484 = sext i16 %218 to i32
  %485 = shl nsw i32 %483, 16
  %486 = sdiv i32 %485, %484
  br label %487

487:                                              ; preds = %482, %479
  %488 = phi i32 [ %486, %482 ], [ %481, %479 ]
  %489 = icmp sgt i32 %488, %215
  %490 = select i1 %489, i64 1, i64 %217
  %491 = select i1 %489, i32 %488, i32 %215
  %492 = load i16, i16* %37, align 2
  %493 = icmp sgt i16 %492, 0
  %494 = load i16, i16* %28, align 2
  br i1 %493, label %498, label %495

495:                                              ; preds = %487
  %496 = icmp eq i16 %494, 0
  %497 = select i1 %496, i32 0, i32 2147483647
  br label %503

498:                                              ; preds = %487
  %499 = sext i16 %494 to i32
  %500 = sext i16 %492 to i32
  %501 = shl nsw i32 %499, 16
  %502 = sdiv i32 %501, %500
  br label %503

503:                                              ; preds = %498, %495
  %504 = phi i32 [ %502, %498 ], [ %497, %495 ]
  %505 = icmp sgt i32 %504, %491
  %506 = select i1 %505, i64 2, i64 %490
  %507 = getelementptr inbounds [3 x i64], [3 x i64]* %8, i64 0, i64 %506
  %508 = load i64, i64* %507, align 8
  %509 = getelementptr inbounds [3 x i64], [3 x i64]* %6, i64 0, i64 %506
  %510 = load i64, i64* %509, align 8
  %511 = icmp ult i64 %508, %510
  %512 = select i1 %511, i64 %510, i64 %508
  %513 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 10
  store i64 %512, i64* %513, align 8
  %514 = add i64 %508, 10
  %515 = icmp ugt i64 %514, %53
  %516 = mul nsw i32 %47, 60
  %517 = sext i32 %516 to i64
  %518 = select i1 %515, i64 %53, i64 %514
  %519 = icmp ult i64 %518, %517
  %520 = select i1 %519, i64 %517, i64 %518
  %521 = icmp ugt i64 %508, %510
  %522 = select i1 %521, i64 %510, i64 %508
  %523 = sub i64 %508, %510
  %524 = trunc i64 %523 to i32
  %525 = shl i32 %524, 16
  %526 = ashr exact i32 %525, 16
  %527 = icmp slt i32 %526, 0
  %528 = sub nsw i32 0, %526
  %529 = select i1 %527, i32 %528, i32 %526
  %530 = add nuw nsw i32 %529, 1
  %531 = zext i32 %530 to i64
  %532 = load i64, i64* %87, align 8
  %533 = icmp eq i64 %532, 0
  br i1 %533, label %221, label %146

534:                                              ; preds = %134
  %535 = ashr i32 %144, 31
  %536 = xor i32 %535, %144
  %537 = call i32 @llvm.ctlz.i32(i32 %536, i1 false) #10, !range !3
  %538 = sub nsw i32 17, %537
  br label %539

539:                                              ; preds = %534, %134
  %540 = phi i32 [ %538, %534 ], [ 16, %134 ]
  %541 = icmp slt i32 %540, %135
  %542 = select i1 %541, i32 %135, i32 %540
  %543 = load i64, i64* %23, align 16
  %544 = sub i64 %543, %49
  %545 = icmp ugt i64 %544, %51
  %546 = select i1 %545, i64 %544, i64 %51
  %547 = add i64 %543, %49
  %548 = icmp ult i64 %547, %113
  %549 = select i1 %548, i64 %547, i64 %113
  %550 = call i64 @_ZN6webrtc9DspHelper13MinDistortionEPKsmmmPi(i16* %115, i64 %546, i64 %549, i64 %55, i32* %42) #10
  store i64 %550, i64* %32, align 16
  %551 = load i32, i32* %42, align 4
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %558, label %553

553:                                              ; preds = %539
  %554 = ashr i32 %551, 31
  %555 = xor i32 %554, %551
  %556 = call i32 @llvm.ctlz.i32(i32 %555, i1 false) #10, !range !3
  %557 = sub nsw i32 17, %556
  br label %558

558:                                              ; preds = %553, %539
  %559 = phi i32 [ %557, %553 ], [ 16, %539 ]
  %560 = icmp slt i32 %559, %542
  %561 = select i1 %560, i32 %542, i32 %559
  call void @WebRtcSpl_VectorBitShiftW32ToW16(i16* nonnull %35, i64 3, i32* nonnull %40, i32 %561) #10
  %562 = load i16, i16* %35, align 2
  %563 = icmp sgt i16 %562, 0
  %564 = load i16, i16* %26, align 2
  br i1 %563, label %206, label %211
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc6Expand20GenerateRandomVectorEsmPs(%"class.webrtc::Expand"* nocapture readonly, i16 signext, i64, i16*) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 1
  br label %8

8:                                                ; preds = %6, %8
  %9 = phi i64 [ 0, %6 ], [ %16, %8 ]
  %10 = sub i64 %2, %9
  %11 = icmp ult i64 %10, 256
  %12 = select i1 %11, i64 %10, i64 256
  %13 = load %"class.webrtc::RandomVector"*, %"class.webrtc::RandomVector"** %7, align 8
  tail call void @_ZN6webrtc12RandomVector21IncreaseSeedIncrementEs(%"class.webrtc::RandomVector"* %13, i16 signext %1) #10
  %14 = load %"class.webrtc::RandomVector"*, %"class.webrtc::RandomVector"** %7, align 8
  %15 = getelementptr inbounds i16, i16* %3, i64 %9
  tail call void @_ZN6webrtc12RandomVector8GenerateEmPs(%"class.webrtc::RandomVector"* %14, i64 %12, i16* %15) #10
  %16 = add i64 %12, %9
  %17 = icmp ult i64 %16, %2
  br i1 %17, label %8, label %18

18:                                               ; preds = %8, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc6Expand14UpdateLagIndexEv(%"class.webrtc::Expand"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 13
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 12
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, %3
  store i32 %6, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = icmp eq i32 %6, 1
  br i1 %9, label %12, label %10

10:                                               ; preds = %8, %1
  %11 = phi i32 [ 1, %1 ], [ -1, %8 ]
  store i32 %11, i32* %4, align 8
  br label %12

12:                                               ; preds = %10, %8
  ret void
}

declare void @_ZNK6webrtc11AudioVector6CopyToEmmPs(%"class.webrtc::AudioVector"*, i64, i64, i16*) unnamed_addr #5

declare dereferenceable(40) %"class.webrtc::AudioVector"* @_ZN6webrtc16AudioMultiVectorixEm(%"class.webrtc::AudioMultiVector"*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @WebRtcSpl_AffineTransformVector(i16*, i16*, i16 signext, i32, i16 signext, i64) local_unnamed_addr #5

declare void @WebRtcSpl_FilterARFastQ12(i16*, i16*, i16*, i64, i64) local_unnamed_addr #5

declare void @_ZN6webrtc9DspHelper9CrossFadeEPKsS2_mPssS3_(i16*, i16*, i64, i16*, i16 signext, i16*) local_unnamed_addr #5

declare void @_ZN6webrtc9DspHelper10MuteSignalEPsim(i16*, i32, i64) local_unnamed_addr #5

declare void @_ZN6webrtc15BackgroundNoise23GenerateBackgroundNoiseEN3rtc9ArrayViewIKsLln4711EEEmibmPs(%"class.webrtc::BackgroundNoise"*, i16*, i64, i64, i32, i1 zeroext, i64, i16*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6webrtc6Expand14TooManyExpandsEv(%"class.webrtc::Expand"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 199
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc6Expand33SetParametersForNormalAfterExpandEv(%"class.webrtc::Expand"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 13
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 12
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 14
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 8
  %6 = load %"class.webrtc::StatisticsCalculator"*, %"class.webrtc::StatisticsCalculator"** %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 15
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %"class.webrtc::StatisticsCalculator"* %6 to void (%"class.webrtc::StatisticsCalculator"*, i32, i32)***
  %13 = load void (%"class.webrtc::StatisticsCalculator"*, i32, i32)**, void (%"class.webrtc::StatisticsCalculator"*, i32, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.webrtc::StatisticsCalculator"*, i32, i32)*, void (%"class.webrtc::StatisticsCalculator"*, i32, i32)** %13, i64 6
  %15 = load void (%"class.webrtc::StatisticsCalculator"*, i32, i32)*, void (%"class.webrtc::StatisticsCalculator"*, i32, i32)** %14, align 8
  tail call void %15(%"class.webrtc::StatisticsCalculator"* %6, i32 %9, i32 %11) #10
  %16 = load %"class.webrtc::StatisticsCalculator"*, %"class.webrtc::StatisticsCalculator"** %5, align 8
  %17 = load i32, i32* %10, align 4
  tail call void @_ZN6webrtc20StatisticsCalculator14EndExpandEventEi(%"class.webrtc::StatisticsCalculator"* %16, i32 %17) #10
  ret void
}

declare void @_ZN6webrtc20StatisticsCalculator14EndExpandEventEi(%"class.webrtc::StatisticsCalculator"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc6Expand32SetParametersForMergeAfterExpandEv(%"class.webrtc::Expand"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 13
  store i32 -1, i32* %2, align 4
  %3 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 12
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 14
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 8
  %6 = load %"class.webrtc::StatisticsCalculator"*, %"class.webrtc::StatisticsCalculator"** %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  tail call void @_ZN6webrtc20StatisticsCalculator14EndExpandEventEi(%"class.webrtc::StatisticsCalculator"* %6, i32 %8) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc6Expand5MutedEv(%"class.webrtc::Expand"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %24

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 14
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %24

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %15 = load %"struct.webrtc::Expand::ChannelParameters"*, %"struct.webrtc::Expand::ChannelParameters"** %14, align 8
  br label %18

16:                                               ; preds = %18
  %17 = icmp ult i64 %23, %11
  br i1 %17, label %18, label %24

18:                                               ; preds = %13, %16
  %19 = phi i64 [ 0, %13 ], [ %23, %16 ]
  %20 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %15, i64 %19, i32 0
  %21 = load i16, i16* %20, align 8
  %22 = icmp eq i16 %21, 0
  %23 = add nuw i64 %19, 1
  br i1 %22, label %16, label %24

24:                                               ; preds = %18, %16, %9, %5, %1
  %25 = phi i1 [ false, %1 ], [ false, %5 ], [ true, %9 ], [ false, %18 ], [ true, %16 ]
  ret i1 %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc6Expand14overlap_lengthEv(%"class.webrtc::Expand"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 9
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc6Expand27InitializeForAnExpandPeriodEv(%"class.webrtc::Expand"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 12
  store i32 1, i32* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 13
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 14
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 1
  %6 = load %"class.webrtc::RandomVector"*, %"class.webrtc::RandomVector"** %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::RandomVector", %"class.webrtc::RandomVector"* %6, i64 0, i32 1
  store i16 1, i16* %7, align 4
  %8 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 6
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 7
  br label %16

15:                                               ; preds = %16, %1
  ret void

16:                                               ; preds = %12, %16
  %17 = phi i64 [ 0, %12 ], [ %23, %16 ]
  %18 = load %"struct.webrtc::Expand::ChannelParameters"*, %"struct.webrtc::Expand::ChannelParameters"** %13, align 8
  %19 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %18, i64 %17, i32 6
  store i16 16384, i16* %19, align 2
  %20 = load %"struct.webrtc::Expand::ChannelParameters"*, %"struct.webrtc::Expand::ChannelParameters"** %13, align 8
  %21 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %20, i64 %17, i32 0
  store i16 16384, i16* %21, align 8
  %22 = load %"class.webrtc::BackgroundNoise"*, %"class.webrtc::BackgroundNoise"** %14, align 8
  tail call void @_ZN6webrtc15BackgroundNoise13SetMuteFactorEms(%"class.webrtc::BackgroundNoise"* %22, i64 %17, i16 signext 0) #10
  %23 = add nuw i64 %17, 1
  %24 = load i64, i64* %9, align 8
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %16, label %15
}

declare void @_ZN6webrtc15BackgroundNoise13SetMuteFactorEms(%"class.webrtc::BackgroundNoise"*, i64, i16 signext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc6Expand11CorrelationEPKsmPs(%"class.webrtc::Expand"* nocapture readonly, i16*, i64, i16*) local_unnamed_addr #0 align 2 {
  %5 = alloca [124 x i16], align 16
  %6 = alloca [54 x i32], align 16
  %7 = getelementptr inbounds %"class.webrtc::Expand", %"class.webrtc::Expand"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %11 [
    i32 8000, label %12
    i32 16000, label %9
    i32 32000, label %10
  ]

9:                                                ; preds = %4
  br label %12

10:                                               ; preds = %4
  br label %12

11:                                               ; preds = %4
  br label %12

12:                                               ; preds = %4, %9, %11, %10
  %13 = phi i16 [ 4, %9 ], [ 8, %10 ], [ 12, %11 ], [ 2, %4 ]
  %14 = phi i64 [ 5, %9 ], [ 7, %10 ], [ 7, %11 ], [ 3, %4 ]
  %15 = phi i16* [ getelementptr inbounds ([5 x i16], [5 x i16]* @_ZN6webrtc9DspHelper19kDownsample16kHzTblE, i64 0, i64 0), %9 ], [ getelementptr inbounds ([7 x i16], [7 x i16]* @_ZN6webrtc9DspHelper19kDownsample32kHzTblE, i64 0, i64 0), %10 ], [ getelementptr inbounds ([7 x i16], [7 x i16]* @_ZN6webrtc9DspHelper19kDownsample48kHzTblE, i64 0, i64 0), %11 ], [ getelementptr inbounds ([3 x i16], [3 x i16]* @_ZN6webrtc9DspHelper18kDownsample8kHzTblE, i64 0, i64 0), %4 ]
  %16 = bitcast [124 x i16]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 248, i1 false)
  %17 = load i32 (i16*, i64, i16*, i64, i16*, i64, i32, i64)*, i32 (i16*, i64, i16*, i64, i16*, i64, i32, i64)** @WebRtcSpl_DownsampleFast, align 8
  %18 = getelementptr inbounds i16, i16* %1, i64 %2
  %19 = mul nuw nsw i16 %13, 124
  %20 = zext i16 %19 to i64
  %21 = sub nsw i64 0, %20
  %22 = getelementptr inbounds i16, i16* %18, i64 %21
  %23 = getelementptr inbounds [124 x i16], [124 x i16]* %5, i64 0, i64 0
  %24 = zext i16 %13 to i32
  %25 = call i32 %17(i16* %22, i64 %20, i16* nonnull %23, i64 124, i16* nonnull %15, i64 %14, i32 %24, i64 0) #10
  %26 = load i16 (i16*, i64)*, i16 (i16*, i64)** @WebRtcSpl_MaxAbsValueW16, align 8
  %27 = call signext i16 %26(i16* nonnull %23, i64 124) #10
  %28 = sext i16 %27 to i32
  %29 = icmp eq i16 %27, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %12
  %31 = ashr i32 %28, 31
  %32 = xor i32 %31, %28
  %33 = call i32 @llvm.ctlz.i32(i32 %32, i1 false) #10, !range !3
  %34 = trunc i32 %33 to i16
  %35 = sub nsw i16 17, %34
  br label %36

36:                                               ; preds = %12, %30
  %37 = phi i16 [ %35, %30 ], [ 16, %12 ]
  call void @WebRtcSpl_VectorBitShiftW16(i16* nonnull %23, i64 124, i16* nonnull %23, i16 signext %37) #10
  %38 = bitcast [54 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %38) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 -86, i64 216, i1 false)
  %39 = getelementptr inbounds [124 x i16], [124 x i16]* %5, i64 0, i64 64
  %40 = getelementptr inbounds [124 x i16], [124 x i16]* %5, i64 0, i64 54
  %41 = getelementptr inbounds [54 x i32], [54 x i32]* %6, i64 0, i64 0
  %42 = call i32 @_ZN6webrtc29CrossCorrelationWithAutoShiftEPKsS1_mmiPi(i16* %39, i16* %40, i64 60, i64 54, i32 -1, i32* nonnull %41) #10
  %43 = load i32 (i32*, i64)*, i32 (i32*, i64)** @WebRtcSpl_MaxAbsValueW32, align 8
  %44 = call i32 %43(i32* nonnull %41, i64 54) #10
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %36
  %47 = ashr i32 %44, 31
  %48 = xor i32 %47, %44
  %49 = call i32 @llvm.ctlz.i32(i32 %48, i1 false) #10, !range !3
  %50 = sub nsw i32 19, %49
  %51 = icmp ugt i32 %48, 8191
  br i1 %51, label %52, label %54

52:                                               ; preds = %36, %46
  %53 = phi i32 [ %50, %46 ], [ 18, %36 ]
  br label %54

54:                                               ; preds = %46, %52
  %55 = phi i32 [ %53, %52 ], [ 0, %46 ]
  call void @WebRtcSpl_VectorBitShiftW32ToW16(i16* %3, i64 54, i32* nonnull %41, i32 %55) #10
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %38) #10
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %16) #10
  ret void
}

declare void @_ZN6webrtc9DspHelper13PeakDetectionEPsmmiPmS1_(i16*, i64, i64, i32, i64*, i16*) local_unnamed_addr #5

declare i64 @_ZN6webrtc9DspHelper13MinDistortionEPKsmmmPi(i16*, i64, i64, i64, i32*) local_unnamed_addr #5

declare void @WebRtcSpl_VectorBitShiftW32ToW16(i16*, i64, i32*, i32) local_unnamed_addr #5

declare i64 @WebRtcSpl_MaxIndexW32(i32*, i64) local_unnamed_addr #5

declare i32 @WebRtcSpl_DotProductWithScale(i16*, i16*, i64, i32) local_unnamed_addr #5

declare i32 @WebRtcSpl_SqrtFloor(i32) local_unnamed_addr #5

declare i32 @WebRtcSpl_DivW32W16(i32, i16 signext) local_unnamed_addr #5

declare void @_ZN6webrtc11AudioVector8PushBackEPKsm(%"class.webrtc::AudioVector"*, i16*, i64) unnamed_addr #5

declare i64 @_ZNK6webrtc11AudioVector4SizeEv(%"class.webrtc::AudioVector"*) unnamed_addr #5

declare void @_ZN6webrtc11AudioVector6ExtendEm(%"class.webrtc::AudioVector"*, i64) unnamed_addr #5

declare void @_ZN6webrtc11AudioVector11OverwriteAtEPKsmm(%"class.webrtc::AudioVector"*, i16*, i64, i64) unnamed_addr #5

declare void @_ZNK6webrtc11AudioVector6CopyToEPS0_(%"class.webrtc::AudioVector"*, %"class.webrtc::AudioVector"*) unnamed_addr #5

declare i32 @_ZN6webrtc29CrossCorrelationWithAutoShiftEPKsS1_mmiPi(i16*, i16*, i64, i64, i32, i32*) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

declare signext i16 @WebRtcSpl_LevinsonDurbin(i32*, i16*, i16*, i64) local_unnamed_addr #5

declare void @WebRtcSpl_MemSetW16(i16*, i16 signext, i64) local_unnamed_addr #5

declare void @_ZN6webrtc12RandomVector21IncreaseSeedIncrementEs(%"class.webrtc::RandomVector"*, i16 signext) local_unnamed_addr #5

declare void @_ZN6webrtc12RandomVector8GenerateEmPs(%"class.webrtc::RandomVector"*, i64, i16*) local_unnamed_addr #5

declare void @WebRtcSpl_FilterMAFastQ12(i16*, i16*, i16*, i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc6Expand17ChannelParametersC2Ev(%"struct.webrtc::Expand::ChannelParameters"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %0, i64 0, i32 0
  store i16 16384, i16* %2, align 8
  %3 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %0, i64 0, i32 7
  %5 = bitcast i16* %3 to i64*
  store i64 0, i64* %5, align 4
  tail call void @_ZN6webrtc11AudioVectorC1Ev(%"class.webrtc::AudioVector"* %4) #10
  %6 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %0, i64 0, i32 8
  tail call void @_ZN6webrtc11AudioVectorC1Ev(%"class.webrtc::AudioVector"* %6) #10
  %7 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %0, i64 0, i32 9
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %0, i64 0, i32 10
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %0, i64 0, i32 1, i64 0
  %10 = bitcast i16* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %10, i8 0, i64 26, i1 false)
  ret void
}

declare void @_ZN6webrtc11AudioVectorC1Ev(%"class.webrtc::AudioVector"*) unnamed_addr #5

declare void @WebRtcSpl_VectorBitShiftW16(i16*, i64, i16*, i16 signext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.webrtc::Expand"* @_ZNK6webrtc13ExpandFactory6CreateEPNS_15BackgroundNoiseEPNS_10SyncBufferEPNS_12RandomVectorEPNS_20StatisticsCalculatorEim(%"struct.webrtc::ExpandFactory"* nocapture readnone, %"class.webrtc::BackgroundNoise"*, %"class.webrtc::SyncBuffer"*, %"class.webrtc::RandomVector"*, %"class.webrtc::StatisticsCalculator"*, i32, i64) unnamed_addr #0 align 2 {
  %8 = tail call i8* @_Znwm(i64 136) #9
  %9 = bitcast i8* %8 to %"class.webrtc::Expand"*
  %10 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6webrtc6ExpandE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to %"class.webrtc::RandomVector"**
  store %"class.webrtc::RandomVector"* %3, %"class.webrtc::RandomVector"** %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 16
  %14 = bitcast i8* %13 to %"class.webrtc::SyncBuffer"**
  store %"class.webrtc::SyncBuffer"* %2, %"class.webrtc::SyncBuffer"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 24
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds i8, i8* %8, i64 28
  %17 = bitcast i8* %16 to i32*
  store i32 %5, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %8, i64 32
  %19 = bitcast i8* %18 to i64*
  store i64 %6, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %8, i64 40
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %8, i64 48
  %23 = bitcast i8* %22 to %"class.webrtc::BackgroundNoise"**
  store %"class.webrtc::BackgroundNoise"* %1, %"class.webrtc::BackgroundNoise"** %23, align 8
  %24 = getelementptr inbounds i8, i8* %8, i64 56
  %25 = bitcast i8* %24 to %"class.webrtc::StatisticsCalculator"**
  store %"class.webrtc::StatisticsCalculator"* %4, %"class.webrtc::StatisticsCalculator"** %25, align 8
  %26 = getelementptr inbounds i8, i8* %8, i64 64
  %27 = bitcast i8* %26 to i64*
  %28 = sdiv i32 %5, 1600
  %29 = sext i32 %28 to i64
  store i64 %29, i64* %27, align 8
  %30 = getelementptr inbounds i8, i8* %8, i64 104
  %31 = getelementptr inbounds i8, i8* %8, i64 120
  %32 = bitcast i8* %31 to i64*
  store i64 0, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %8, i64 128
  %34 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %6, i64 128) #10
  %35 = extractvalue { i64, i1 } %34, 1
  %36 = extractvalue { i64, i1 } %34, 0
  %37 = or i64 %36, 8
  %38 = select i1 %35, i64 -1, i64 %37
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 9, i1 false) #10
  %39 = tail call i8* @_Znam(i64 %38) #9
  %40 = bitcast i8* %39 to i64*
  store i64 %6, i64* %40, align 16
  %41 = getelementptr inbounds i8, i8* %39, i64 8
  %42 = bitcast i8* %41 to %"struct.webrtc::Expand::ChannelParameters"*
  %43 = icmp eq i64 %6, 0
  br i1 %43, label %62, label %44

44:                                               ; preds = %7
  %45 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %42, i64 %6
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi %"struct.webrtc::Expand::ChannelParameters"* [ %42, %44 ], [ %57, %46 ]
  %48 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %47, i64 0, i32 0
  store i16 16384, i16* %48, align 8
  %49 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %47, i64 0, i32 3
  %50 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %47, i64 0, i32 7
  %51 = bitcast i16* %49 to i64*
  store i64 0, i64* %51, align 4
  tail call void @_ZN6webrtc11AudioVectorC1Ev(%"class.webrtc::AudioVector"* %50) #10
  %52 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %47, i64 0, i32 8
  tail call void @_ZN6webrtc11AudioVectorC1Ev(%"class.webrtc::AudioVector"* %52) #10
  %53 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %47, i64 0, i32 9
  store i8 0, i8* %53, align 8
  %54 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %47, i64 0, i32 10
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %47, i64 0, i32 1, i64 0
  %56 = bitcast i16* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %56, i8 0, i64 26, i1 false) #10
  %57 = getelementptr inbounds %"struct.webrtc::Expand::ChannelParameters", %"struct.webrtc::Expand::ChannelParameters"* %47, i64 1
  %58 = icmp eq %"struct.webrtc::Expand::ChannelParameters"* %57, %45
  br i1 %58, label %59, label %46

59:                                               ; preds = %46
  %60 = bitcast i8* %8 to void (%"class.webrtc::Expand"*)***
  %61 = load void (%"class.webrtc::Expand"*)**, void (%"class.webrtc::Expand"*)*** %60, align 8
  br label %62

62:                                               ; preds = %7, %59
  %63 = phi void (%"class.webrtc::Expand"*)** [ %61, %59 ], [ bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6webrtc6ExpandE, i64 0, inrange i32 0, i64 2) to void (%"class.webrtc::Expand"*)**), %7 ]
  %64 = ptrtoint i8* %41 to i64
  %65 = bitcast i8* %33 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds i8, i8* %8, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #10
  %67 = getelementptr inbounds void (%"class.webrtc::Expand"*)*, void (%"class.webrtc::Expand"*)** %63, i64 2
  %68 = load void (%"class.webrtc::Expand"*)*, void (%"class.webrtc::Expand"*)** %67, align 8
  tail call void %68(%"class.webrtc::Expand"* nonnull %9) #10
  ret %"class.webrtc::Expand"* %9
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc13ExpandFactoryD2Ev(%"struct.webrtc::ExpandFactory"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc13ExpandFactoryD0Ev(%"struct.webrtc::ExpandFactory"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.webrtc::ExpandFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN6webrtc11AudioVectorD1Ev(%"class.webrtc::AudioVector"*) unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i32 0, i32 33}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.isvectorized", i32 1}
!6 = distinct !{!6, !7, !5}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
