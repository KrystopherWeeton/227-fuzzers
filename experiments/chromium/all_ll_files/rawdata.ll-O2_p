; ModuleID = '../../third_party/libavif/src/src/rawdata.c'
source_filename = "../../third_party/libavif/src/src/rawdata.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.avifRWData = type { i8*, i64 }

; Function Attrs: nounwind ssp uwtable
define hidden void @avifRWDataRealloc(%struct.avifRWData* nocapture, i64) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.avifRWData, %struct.avifRWData* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.avifRWData, %struct.avifRWData* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = tail call i8* @avifAlloc(i64 %1) #3
  store i8* %9, i8** %7, align 8
  store i64 %1, i64* %3, align 8
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = icmp ult i64 %4, %1
  %13 = select i1 %12, i64 %4, i64 %1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 %8, i64 %13, i1 false)
  tail call void @avifFree(i8* %8) #3
  br label %14

14:                                               ; preds = %11, %6, %2
  ret void
}

declare i8* @avifAlloc(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @avifFree(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @avifRWDataSet(%struct.avifRWData* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.avifRWData, %struct.avifRWData* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, %2
  br i1 %8, label %17, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.avifRWData, %struct.avifRWData* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = tail call i8* @avifAlloc(i64 %2) #3
  store i8* %12, i8** %10, align 8
  store i64 %2, i64* %6, align 8
  %13 = icmp eq i64 %7, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = icmp ult i64 %7, %2
  %16 = select i1 %15, i64 %7, i64 %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %11, i64 %16, i1 false) #3
  tail call void @avifFree(i8* %11) #3
  br label %17

17:                                               ; preds = %5, %9, %14
  %18 = getelementptr inbounds %struct.avifRWData, %struct.avifRWData* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 %1, i64 %2, i1 false)
  br label %24

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.avifRWData, %struct.avifRWData* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @avifFree(i8* %22) #3
  %23 = bitcast %struct.avifRWData* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #3
  br label %24

24:                                               ; preds = %20, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @avifRWDataFree(%struct.avifRWData* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.avifRWData, %struct.avifRWData* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  tail call void @avifFree(i8* %3) #3
  %4 = bitcast %struct.avifRWData* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
