; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/common/setupintrarecon.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/common/setupintrarecon.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_setup_intra_recon(%struct.yv12_buffer_config* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 13
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 -1
  %5 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = sub nsw i64 0, %7
  %9 = getelementptr inbounds i8, i8* %4, i64 %8
  %10 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 5
  %13 = sext i32 %12 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %9, i8 127, i64 %13, i1 false)
  %14 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %28

17:                                               ; preds = %1, %17
  %18 = phi i32 [ %25, %17 ], [ 0, %1 ]
  %19 = load i8*, i8** %2, align 8
  %20 = load i32, i32* %5, align 8
  %21 = mul nsw i32 %20, %18
  %22 = add nsw i32 %21, -1
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %19, i64 %23
  store i8 -127, i8* %24, align 1
  %25 = add nuw nsw i32 %18, 1
  %26 = load i32, i32* %14, align 4
  %27 = icmp slt i32 %25, %26
  br i1 %27, label %17, label %28

28:                                               ; preds = %17, %1
  %29 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 14
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 -1
  %32 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 9
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  %35 = sub nsw i64 0, %34
  %36 = getelementptr inbounds i8, i8* %31, i64 %35
  %37 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 5
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, 5
  %40 = sext i32 %39 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %36, i8 127, i64 %40, i1 false)
  %41 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %55

44:                                               ; preds = %28, %44
  %45 = phi i32 [ %52, %44 ], [ 0, %28 ]
  %46 = load i8*, i8** %29, align 8
  %47 = load i32, i32* %32, align 4
  %48 = mul nsw i32 %47, %45
  %49 = add nsw i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %46, i64 %50
  store i8 -127, i8* %51, align 1
  %52 = add nuw nsw i32 %45, 1
  %53 = load i32, i32* %41, align 8
  %54 = icmp slt i32 %52, %53
  br i1 %54, label %44, label %55

55:                                               ; preds = %44, %28
  %56 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 15
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 -1
  %59 = load i32, i32* %32, align 4
  %60 = sext i32 %59 to i64
  %61 = sub nsw i64 0, %60
  %62 = getelementptr inbounds i8, i8* %58, i64 %61
  %63 = load i32, i32* %37, align 4
  %64 = add nsw i32 %63, 5
  %65 = sext i32 %64 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %62, i8 127, i64 %65, i1 false)
  %66 = load i32, i32* %41, align 8
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %68, label %79

68:                                               ; preds = %55, %68
  %69 = phi i32 [ %76, %68 ], [ 0, %55 ]
  %70 = load i8*, i8** %56, align 8
  %71 = load i32, i32* %32, align 4
  %72 = mul nsw i32 %71, %69
  %73 = add nsw i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %70, i64 %74
  store i8 -127, i8* %75, align 1
  %76 = add nuw nsw i32 %69, 1
  %77 = load i32, i32* %41, align 8
  %78 = icmp slt i32 %76, %77
  br i1 %78, label %68, label %79

79:                                               ; preds = %68, %55
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_setup_intra_recon_top_line(%struct.yv12_buffer_config* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 13
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 -1
  %5 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = sub nsw i64 0, %7
  %9 = getelementptr inbounds i8, i8* %4, i64 %8
  %10 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 5
  %13 = sext i32 %12 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %9, i8 127, i64 %13, i1 false)
  %14 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 14
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 -1
  %17 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 9
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = sub nsw i64 0, %19
  %21 = getelementptr inbounds i8, i8* %16, i64 %20
  %22 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 5
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %23, 5
  %25 = sext i32 %24 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %21, i8 127, i64 %25, i1 false)
  %26 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 15
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 -1
  %29 = load i32, i32* %17, align 4
  %30 = sext i32 %29 to i64
  %31 = sub nsw i64 0, %30
  %32 = getelementptr inbounds i8, i8* %28, i64 %31
  %33 = load i32, i32* %22, align 4
  %34 = add nsw i32 %33, 5
  %35 = sext i32 %34 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %32, i8 127, i64 %35, i1 false)
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
