; ModuleID = '../../gpu/vulkan/vulkan_image_linux.cc'
source_filename = "../../gpu/vulkan/vulkan_image_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.VkDrmFormatModifierPropertiesEXT = type { i64, i32, i32 }
%"class.gpu::VulkanImage" = type { %"class.gpu::VulkanDeviceQueue"*, %"class.gfx::Size", i32, i32, i32, i64, i32, i32, i32, i32, %"class.absl::optional", %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i32, %class.scoped_refptr, i64, i64, %"struct.std::__1::array" }
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon }
%union.anon = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.VkImage_T = type opaque
%struct.VkDeviceMemory_T = type opaque
%class.scoped_refptr = type { %"class.gfx::NativePixmap"* }
%"class.gfx::NativePixmap" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::array" = type { [4 x %struct.VkSubresourceLayout] }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.gpu::VulkanDeviceQueue" = type { %"class.base::internal::flat_tree", %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %struct.VkInstance_T*, %struct.VmaAllocator_T*, %"class.std::__1::unique_ptr.3", %struct.VkPhysicalDeviceFeatures2, i8, %struct.VkPhysicalDeviceProtectedMemoryFeatures }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.0" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.base::BasicStringPiece"* }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%struct.VkInstance_T = type opaque
%struct.VmaAllocator_T = type opaque
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.gpu::VulkanFenceHelper"* }
%"class.gpu::VulkanFenceHelper" = type opaque
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProtectedMemoryFeatures = type { i32, i8*, i32 }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { i64*, i64*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64* }
%struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT = type { i32, i8*, i64, i32, i32, i32* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkDrmFormatModifierPropertiesListEXT = type { i32, i8*, i32, %struct.VkDrmFormatModifierPropertiesEXT* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %struct.VkDrmFormatModifierPropertiesEXT*, %struct.VkDrmFormatModifierPropertiesEXT*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %struct.VkDrmFormatModifierPropertiesEXT* }
%struct.VkImageDrmFormatModifierListCreateInfoEXT = type { i32, i8*, i32, i64* }
%struct.VkImageDrmFormatModifierPropertiesEXT = type { i32, i8*, i64 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%"struct.gpu::VulkanFunctionPointers" = type { i8*, %"class.gpu::VulkanFunctionPointers::VulkanFunction", %"class.gpu::VulkanFunctionPointers::VulkanFunction.33", %"class.gpu::VulkanFunctionPointers::VulkanFunction.34", %"class.gpu::VulkanFunctionPointers::VulkanFunction.35", %"class.gpu::VulkanFunctionPointers::VulkanFunction.36", %"class.gpu::VulkanFunctionPointers::VulkanFunction.37", %"class.gpu::VulkanFunctionPointers::VulkanFunction.38", %"class.gpu::VulkanFunctionPointers::VulkanFunction.39", %"class.gpu::VulkanFunctionPointers::VulkanFunction.40", %"class.gpu::VulkanFunctionPointers::VulkanFunction.41", %"class.gpu::VulkanFunctionPointers::VulkanFunction.42", %"class.gpu::VulkanFunctionPointers::VulkanFunction.43", %"class.gpu::VulkanFunctionPointers::VulkanFunction.44", %"class.gpu::VulkanFunctionPointers::VulkanFunction.45", %"class.gpu::VulkanFunctionPointers::VulkanFunction.46", %"class.gpu::VulkanFunctionPointers::VulkanFunction.47", %"class.gpu::VulkanFunctionPointers::VulkanFunction.48", %"class.gpu::VulkanFunctionPointers::VulkanFunction.49", %"class.gpu::VulkanFunctionPointers::VulkanFunction.50", %"class.gpu::VulkanFunctionPointers::VulkanFunction.51", %"class.gpu::VulkanFunctionPointers::VulkanFunction.52", %"class.gpu::VulkanFunctionPointers::VulkanFunction.53", %"class.gpu::VulkanFunctionPointers::VulkanFunction.54", %"class.gpu::VulkanFunctionPointers::VulkanFunction.55", %"class.gpu::VulkanFunctionPointers::VulkanFunction.56", %"class.gpu::VulkanFunctionPointers::VulkanFunction.57", %"class.gpu::VulkanFunctionPointers::VulkanFunction.58", %"class.gpu::VulkanFunctionPointers::VulkanFunction.59", %"class.gpu::VulkanFunctionPointers::VulkanFunction.60", %"class.gpu::VulkanFunctionPointers::VulkanFunction.61", %"class.gpu::VulkanFunctionPointers::VulkanFunction.62", %"class.gpu::VulkanFunctionPointers::VulkanFunction.63", %"class.gpu::VulkanFunctionPointers::VulkanFunction.64", %"class.gpu::VulkanFunctionPointers::VulkanFunction.65", %"class.gpu::VulkanFunctionPointers::VulkanFunction.66", %"class.gpu::VulkanFunctionPointers::VulkanFunction.67", %"class.gpu::VulkanFunctionPointers::VulkanFunction.68", %"class.gpu::VulkanFunctionPointers::VulkanFunction.69", %"class.gpu::VulkanFunctionPointers::VulkanFunction.70", %"class.gpu::VulkanFunctionPointers::VulkanFunction.71", %"class.gpu::VulkanFunctionPointers::VulkanFunction.72", %"class.gpu::VulkanFunctionPointers::VulkanFunction.73", %"class.gpu::VulkanFunctionPointers::VulkanFunction.74", %"class.gpu::VulkanFunctionPointers::VulkanFunction.75", %"class.gpu::VulkanFunctionPointers::VulkanFunction.76", %"class.gpu::VulkanFunctionPointers::VulkanFunction.77", %"class.gpu::VulkanFunctionPointers::VulkanFunction.78", %"class.gpu::VulkanFunctionPointers::VulkanFunction.79", %"class.gpu::VulkanFunctionPointers::VulkanFunction.80", %"class.gpu::VulkanFunctionPointers::VulkanFunction.81", %"class.gpu::VulkanFunctionPointers::VulkanFunction.82", %"class.gpu::VulkanFunctionPointers::VulkanFunction.83", %"class.gpu::VulkanFunctionPointers::VulkanFunction.84", %"class.gpu::VulkanFunctionPointers::VulkanFunction.85", %"class.gpu::VulkanFunctionPointers::VulkanFunction.86", %"class.gpu::VulkanFunctionPointers::VulkanFunction.87", %"class.gpu::VulkanFunctionPointers::VulkanFunction.88", %"class.gpu::VulkanFunctionPointers::VulkanFunction.89", %"class.gpu::VulkanFunctionPointers::VulkanFunction.90", %"class.gpu::VulkanFunctionPointers::VulkanFunction.91", %"class.gpu::VulkanFunctionPointers::VulkanFunction.92", %"class.gpu::VulkanFunctionPointers::VulkanFunction.93", %"class.gpu::VulkanFunctionPointers::VulkanFunction.94", %"class.gpu::VulkanFunctionPointers::VulkanFunction.95", %"class.gpu::VulkanFunctionPointers::VulkanFunction.96", %"class.gpu::VulkanFunctionPointers::VulkanFunction.97", %"class.gpu::VulkanFunctionPointers::VulkanFunction.98", %"class.gpu::VulkanFunctionPointers::VulkanFunction.99", %"class.gpu::VulkanFunctionPointers::VulkanFunction.100", %"class.gpu::VulkanFunctionPointers::VulkanFunction.101", %"class.gpu::VulkanFunctionPointers::VulkanFunction.102", %"class.gpu::VulkanFunctionPointers::VulkanFunction.103", %"class.gpu::VulkanFunctionPointers::VulkanFunction.104", %"class.gpu::VulkanFunctionPointers::VulkanFunction.100", %"class.gpu::VulkanFunctionPointers::VulkanFunction.105", %"class.gpu::VulkanFunctionPointers::VulkanFunction.106", %"class.gpu::VulkanFunctionPointers::VulkanFunction.107", %"class.gpu::VulkanFunctionPointers::VulkanFunction.108", %"class.gpu::VulkanFunctionPointers::VulkanFunction.109", %"class.gpu::VulkanFunctionPointers::VulkanFunction.110", %"class.gpu::VulkanFunctionPointers::VulkanFunction.111", %"class.gpu::VulkanFunctionPointers::VulkanFunction.112", %"class.gpu::VulkanFunctionPointers::VulkanFunction.113", %"class.gpu::VulkanFunctionPointers::VulkanFunction.114", %"class.gpu::VulkanFunctionPointers::VulkanFunction.115", %"class.gpu::VulkanFunctionPointers::VulkanFunction.116", %"class.gpu::VulkanFunctionPointers::VulkanFunction.117", %"class.gpu::VulkanFunctionPointers::VulkanFunction.118", %"class.gpu::VulkanFunctionPointers::VulkanFunction.119", %"class.gpu::VulkanFunctionPointers::VulkanFunction.120", %"class.gpu::VulkanFunctionPointers::VulkanFunction.121", %"class.gpu::VulkanFunctionPointers::VulkanFunction.122", %"class.gpu::VulkanFunctionPointers::VulkanFunction.123", %"class.gpu::VulkanFunctionPointers::VulkanFunction.124", %"class.gpu::VulkanFunctionPointers::VulkanFunction.125", %"class.gpu::VulkanFunctionPointers::VulkanFunction.126", %"class.gpu::VulkanFunctionPointers::VulkanFunction.127", %"class.gpu::VulkanFunctionPointers::VulkanFunction.128", %"class.gpu::VulkanFunctionPointers::VulkanFunction.129", %"class.gpu::VulkanFunctionPointers::VulkanFunction.130" }
%"class.gpu::VulkanFunctionPointers::VulkanFunction" = type { void ()* (%struct.VkInstance_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.33" = type { i32 (i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.34" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.35" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.36" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.37" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.38" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.39" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.40" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.41" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.42" = type { void ()* (%struct.VkDevice_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.43" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.44" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.45" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.46" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.47" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.48" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.49" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.50" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.51" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.52" = type { void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)* }
%struct.VkSurfaceKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.53" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)* }
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.54" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)* }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.55" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.56" = type { i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* }
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.57" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.58" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkCommandBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.59" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.60" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.61" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.62" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.63" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.64" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.65" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.66" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.67" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.68" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.69" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.70" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.71" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.72" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.73" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.74" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.75" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.76" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.77" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.78" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.79" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkPipelineCache_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.80" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.81" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.82" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.83" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.84" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphore_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.85" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.86" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.87" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.88" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.89" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.90" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.91" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.92" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.93" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.94" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.95" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.96" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.97" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.98" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.99" = type { i32 (%struct.VkDevice_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.101" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.102" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.103" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.104" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.100" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.105" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.106" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.107" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.108" = type { void (%struct.VkDevice_T*, %struct.VkDeviceQueueInfo2*, %struct.VkQueue_T**)* }
%struct.VkDeviceQueueInfo2 = type { i32, i8*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.109" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.110" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.111" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.112" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.113" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.114" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.115" = type { i32 (%struct.VkQueue_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.116" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.117" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.118" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.119" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.120" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.121" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.122" = type { i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)* }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.123" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.124" = type { i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)* }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.125" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)* }
%struct.VkSwapchainKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.126" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.127" = type { void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.128" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.129" = type { i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.130" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)* }
%"struct.gfx::GpuMemoryBufferHandle" = type { i32, %"class.gfx::GenericSharedMemoryId", %"class.base::UnsafeSharedMemoryRegion", i32, i32, %"struct.gfx::NativePixmapHandle" }
%"class.gfx::GenericSharedMemoryId" = type { i32 }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.gfx::NativePixmapHandle" = type { %"class.std::__1::vector.18", i64 }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"*, %"class.std::__1::__compressed_pair.20" }
%"struct.gfx::NativePixmapPlane" = type { i32, i64, i64, %"class.base::ScopedGeneric" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.gfx::NativePixmapPlane"* }
%struct.VkExternalMemoryImageCreateInfo = type { i32, i8*, i32 }
%struct.VkImportMemoryFdInfoKHR = type { i32, i8*, i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorI32VkDrmFormatModifierPropertiesEXTNS_9allocatorIS1_EEE8__appendEm = comdat any

@.str = private unnamed_addr constant [33 x i8] c"VK_EXT_image_drm_format_modifier\00", align 1
@__const._ZN3gpu11VulkanImage35InitializeFromGpuMemoryBufferHandleEPNS_17VulkanDeviceQueueEN3gfx21GpuMemoryBufferHandleERKNS3_4SizeE8VkFormatjj13VkImageTiling.external_image_create_info = private unnamed_addr constant { i32, [4 x i8], i8*, i32, [4 x i8] } { i32 1000072001, [4 x i8] zeroinitializer, i8* null, i32 512, [4 x i8] zeroinitializer }, align 8
@__const._ZN3gpu11VulkanImage40InitializeWithExternalMemoryAndModifiersEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatNSt3__16vectorImNS8_9allocatorImEEEEjj.modifier_props_list = private unnamed_addr constant { i32, [4 x i8], i8*, i32, [4 x i8], %struct.VkDrmFormatModifierPropertiesEXT* } { i32 1000158000, [4 x i8] zeroinitializer, i8* null, i32 0, [4 x i8] zeroinitializer, %struct.VkDrmFormatModifierPropertiesEXT* null }, align 8
@__const._ZN3gpu11VulkanImage40InitializeWithExternalMemoryAndModifiersEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatNSt3__16vectorImNS8_9allocatorImEEEEjj.image_modifier_props = private unnamed_addr constant { i32, [4 x i8], i8*, i64 } { i32 1000158005, [4 x i8] zeroinitializer, i8* null, i64 0 }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::VulkanImage"* @_ZN3gpu11VulkanImage36CreateWithExternalMemoryAndModifiersEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatNSt3__16vectorImNS8_9allocatorImEEEEjj(%"class.gpu::VulkanDeviceQueue"*, %"class.gfx::Size"* dereferenceable(8), i32, %"class.std::__1::vector.11"* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::vector.11", align 16
  %8 = tail call i8* @_Znwm(i64 312) #8
  %9 = bitcast i8* %8 to %"class.gpu::VulkanImage"*
  tail call void @_ZN3gpu11VulkanImageC1EN4base7PassKeyIS0_EE(%"class.gpu::VulkanImage"* nonnull %9) #9
  %10 = ptrtoint i8* %8 to i64
  %11 = bitcast %"class.std::__1::vector.11"* %3 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 8
  %13 = bitcast %"class.std::__1::vector.11"* %7 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %13, align 16
  %14 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast i64** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast i64** %17 to i64*
  store i64 %16, i64* %18, align 16
  %19 = bitcast %"class.std::__1::vector.11"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #9
  %20 = call zeroext i1 @_ZN3gpu11VulkanImage40InitializeWithExternalMemoryAndModifiersEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatNSt3__16vectorImNS8_9allocatorImEEEEjj(%"class.gpu::VulkanImage"* nonnull %9, %"class.gpu::VulkanDeviceQueue"* %0, %"class.gfx::Size"* dereferenceable(8) %1, i32 %2, %"class.std::__1::vector.11"* nonnull %7, i32 %4, i32 %5)
  %21 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %7, i64 0, i32 0, i32 0
  %22 = load i64*, i64** %21, align 16
  %23 = icmp eq i64* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %7, i64 0, i32 0, i32 1
  %26 = bitcast i64** %25 to i64*
  %27 = ptrtoint i64* %22 to i64
  store i64 %27, i64* %26, align 8
  %28 = bitcast i64* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #8
  br label %29

29:                                               ; preds = %6, %24
  br i1 %20, label %31, label %30

30:                                               ; preds = %29
  tail call void @_ZN3gpu11VulkanImageD1Ev(%"class.gpu::VulkanImage"* nonnull %9) #9
  tail call void @_ZdlPv(i8* nonnull %8) #8
  br label %31

31:                                               ; preds = %29, %30
  %32 = phi i64 [ 0, %30 ], [ %10, %29 ]
  %33 = inttoptr i64 %32 to %"class.gpu::VulkanImage"*
  ret %"class.gpu::VulkanImage"* %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu11VulkanImage40InitializeWithExternalMemoryAndModifiersEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatNSt3__16vectorImNS8_9allocatorImEEEEjj(%"class.gpu::VulkanImage"*, %"class.gpu::VulkanDeviceQueue"*, %"class.gfx::Size"* dereferenceable(8), i32, %"class.std::__1::vector.11"* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT, align 8
  %9 = alloca %struct.VkPhysicalDeviceImageFormatInfo2, align 8
  %10 = alloca %struct.VkImageFormatProperties2, align 8
  %11 = alloca %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT, align 8
  %12 = alloca %struct.VkPhysicalDeviceImageFormatInfo2, align 8
  %13 = alloca %struct.VkImageFormatProperties2, align 8
  %14 = alloca %struct.VkDrmFormatModifierPropertiesListEXT, align 8
  %15 = alloca %struct.VkFormatProperties2, align 8
  %16 = alloca %"class.std::__1::vector.25", align 8
  %17 = alloca %struct.VkImageDrmFormatModifierListCreateInfoEXT, align 8
  %18 = alloca %struct.VkImageDrmFormatModifierPropertiesEXT, align 8
  %19 = alloca %struct.VkImageSubresource, align 4
  %20 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %1, i64 0, i32 1
  %21 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %20, align 8
  %22 = bitcast %struct.VkDrmFormatModifierPropertiesListEXT* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 bitcast ({ i32, [4 x i8], i8*, i32, [4 x i8], %struct.VkDrmFormatModifierPropertiesEXT* }* @__const._ZN3gpu11VulkanImage40InitializeWithExternalMemoryAndModifiersEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatNSt3__16vectorImNS8_9allocatorImEEEEjj.modifier_props_list to i8*), i64 32, i1 false)
  %23 = bitcast %struct.VkFormatProperties2* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false)
  %24 = getelementptr inbounds %struct.VkFormatProperties2, %struct.VkFormatProperties2* %15, i64 0, i32 0
  store i32 1000059002, i32* %24, align 8
  %25 = getelementptr inbounds %struct.VkFormatProperties2, %struct.VkFormatProperties2* %15, i64 0, i32 1
  %26 = bitcast i8** %25 to %struct.VkDrmFormatModifierPropertiesListEXT**
  store %struct.VkDrmFormatModifierPropertiesListEXT* %14, %struct.VkDrmFormatModifierPropertiesListEXT** %26, align 8
  %27 = getelementptr inbounds %struct.VkFormatProperties2, %struct.VkFormatProperties2* %15, i64 0, i32 2, i32 0
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %struct.VkFormatProperties2, %struct.VkFormatProperties2* %15, i64 0, i32 2, i32 1
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %struct.VkFormatProperties2, %struct.VkFormatProperties2* %15, i64 0, i32 2, i32 2
  store i32 0, i32* %29, align 8
  %30 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #9
  %31 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %30, i64 0, i32 14, i32 0
  %32 = load void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)** %31, align 8
  call void %32(%struct.VkPhysicalDevice_T* %21, i32 %3, %struct.VkFormatProperties2* nonnull %15) #9
  %33 = bitcast %"class.std::__1::vector.25"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %16, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %16, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #9
  %36 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesListEXT, %struct.VkDrmFormatModifierPropertiesListEXT* %14, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = bitcast %struct.VkDrmFormatModifierPropertiesEXT** %35 to i64*
  %39 = icmp eq i32 %37, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %7
  %41 = zext i32 %37 to i64
  %42 = bitcast %"class.std::__1::vector.25"* %16 to i64*
  call void @_ZNSt3__16vectorI32VkDrmFormatModifierPropertiesEXTNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.25"* nonnull %16, i64 %41) #9
  %43 = load i64, i64* %42, align 8
  br label %44

44:                                               ; preds = %7, %40
  %45 = phi i64 [ %43, %40 ], [ 0, %7 ]
  %46 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesListEXT, %struct.VkDrmFormatModifierPropertiesListEXT* %14, i64 0, i32 3
  %47 = bitcast %struct.VkDrmFormatModifierPropertiesEXT** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #9
  %49 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %48, i64 0, i32 14, i32 0
  %50 = load void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)** %49, align 8
  call void %50(%struct.VkPhysicalDevice_T* %21, i32 %3, %struct.VkFormatProperties2* nonnull %15) #9
  %51 = load %struct.VkDrmFormatModifierPropertiesEXT*, %struct.VkDrmFormatModifierPropertiesEXT** %34, align 8
  %52 = load %struct.VkDrmFormatModifierPropertiesEXT*, %struct.VkDrmFormatModifierPropertiesEXT** %35, align 8
  %53 = bitcast %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT* %11 to i8*
  %54 = icmp eq %struct.VkDrmFormatModifierPropertiesEXT* %51, %52
  br i1 %54, label %84, label %55

55:                                               ; preds = %44
  %56 = bitcast %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT* %11 to i64*
  %57 = getelementptr inbounds %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT, %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT* %11, i64 0, i32 1
  %58 = getelementptr inbounds %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT, %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT* %11, i64 0, i32 2
  %59 = getelementptr inbounds %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT, %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT* %11, i64 0, i32 3
  %60 = bitcast %struct.VkPhysicalDeviceImageFormatInfo2* %12 to i8*
  %61 = bitcast i32* %59 to i8*
  %62 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %12, i64 0, i32 0
  %63 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %12, i64 0, i32 1
  %64 = bitcast i8** %63 to %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT**
  %65 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %12, i64 0, i32 2
  %66 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %12, i64 0, i32 3
  %67 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %12, i64 0, i32 4
  %68 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %12, i64 0, i32 5
  %69 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %12, i64 0, i32 6
  %70 = bitcast %struct.VkImageFormatProperties2* %13 to i8*
  %71 = getelementptr inbounds %struct.VkImageFormatProperties2, %struct.VkImageFormatProperties2* %13, i64 0, i32 0
  br label %72

72:                                               ; preds = %81, %55
  %73 = phi %struct.VkDrmFormatModifierPropertiesEXT* [ %51, %55 ], [ %82, %81 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %53) #9
  store i64 -6148914693099670734, i64* %56, align 8
  store i8* null, i8** %57, align 8
  %74 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %73, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %58, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 40, i1 false) #9
  store i32 1000059004, i32* %62, align 8
  store %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT* %11, %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT** %64, align 8
  store i32 %3, i32* %65, align 8
  store i32 1, i32* %66, align 4
  store i32 1000158000, i32* %67, align 8
  store i32 %5, i32* %68, align 4
  store i32 %6, i32* %69, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %70) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 48, i1 false) #9
  store i32 1000059003, i32* %71, align 8
  %76 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #9
  %77 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %76, i64 0, i32 15, i32 0
  %78 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)** %77, align 8
  %79 = call i32 %78(%struct.VkPhysicalDevice_T* %21, %struct.VkPhysicalDeviceImageFormatInfo2* nonnull %12, %struct.VkImageFormatProperties2* nonnull %13) #9
  %80 = icmp eq i32 %79, 0
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %70) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %53) #9
  br i1 %80, label %81, label %84

81:                                               ; preds = %72
  %82 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %73, i64 1
  %83 = icmp eq %struct.VkDrmFormatModifierPropertiesEXT* %82, %52
  br i1 %83, label %131, label %72

84:                                               ; preds = %72, %44
  %85 = phi %struct.VkDrmFormatModifierPropertiesEXT* [ %51, %44 ], [ %73, %72 ]
  %86 = ptrtoint %struct.VkDrmFormatModifierPropertiesEXT* %85 to i64
  %87 = icmp eq %struct.VkDrmFormatModifierPropertiesEXT* %85, %52
  br i1 %87, label %131, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %85, i64 1
  %90 = icmp eq %struct.VkDrmFormatModifierPropertiesEXT* %89, %52
  br i1 %90, label %131, label %91

91:                                               ; preds = %88
  %92 = bitcast %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT* %8 to i8*
  %93 = bitcast %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT* %8 to i64*
  %94 = getelementptr inbounds %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT, %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT* %8, i64 0, i32 1
  %95 = getelementptr inbounds %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT, %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT* %8, i64 0, i32 2
  %96 = getelementptr inbounds %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT, %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT* %8, i64 0, i32 3
  %97 = bitcast %struct.VkPhysicalDeviceImageFormatInfo2* %9 to i8*
  %98 = bitcast i32* %96 to i8*
  %99 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %9, i64 0, i32 0
  %100 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %9, i64 0, i32 1
  %101 = bitcast i8** %100 to %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT**
  %102 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %9, i64 0, i32 2
  %103 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %9, i64 0, i32 3
  %104 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %9, i64 0, i32 4
  %105 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %9, i64 0, i32 5
  %106 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %9, i64 0, i32 6
  %107 = bitcast %struct.VkImageFormatProperties2* %10 to i8*
  %108 = getelementptr inbounds %struct.VkImageFormatProperties2, %struct.VkImageFormatProperties2* %10, i64 0, i32 0
  br label %109

109:                                              ; preds = %125, %91
  %110 = phi %struct.VkDrmFormatModifierPropertiesEXT* [ %89, %91 ], [ %127, %125 ]
  %111 = phi i64 [ %86, %91 ], [ %126, %125 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %92) #9
  store i64 -6148914693099670734, i64* %93, align 8
  store i8* null, i8** %94, align 8
  %112 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %110, i64 0, i32 0
  %113 = load i64, i64* %112, align 8
  store i64 %113, i64* %95, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %97) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 40, i1 false) #9
  store i32 1000059004, i32* %99, align 8
  store %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT* %8, %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT** %101, align 8
  store i32 %3, i32* %102, align 8
  store i32 1, i32* %103, align 4
  store i32 1000158000, i32* %104, align 8
  store i32 %5, i32* %105, align 4
  store i32 %6, i32* %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %107) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 0, i64 48, i1 false) #9
  store i32 1000059003, i32* %108, align 8
  %114 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #9
  %115 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %114, i64 0, i32 15, i32 0
  %116 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)** %115, align 8
  %117 = call i32 %116(%struct.VkPhysicalDevice_T* %21, %struct.VkPhysicalDeviceImageFormatInfo2* nonnull %9, %struct.VkImageFormatProperties2* nonnull %10) #9
  %118 = icmp eq i32 %117, 0
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %107) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %97) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %92) #9
  br i1 %118, label %119, label %125

119:                                              ; preds = %109
  %120 = inttoptr i64 %111 to %struct.VkDrmFormatModifierPropertiesEXT*
  %121 = inttoptr i64 %111 to i8*
  %122 = bitcast %struct.VkDrmFormatModifierPropertiesEXT* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 16, i1 false) #9
  %123 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %120, i64 1
  %124 = ptrtoint %struct.VkDrmFormatModifierPropertiesEXT* %123 to i64
  br label %125

125:                                              ; preds = %119, %109
  %126 = phi i64 [ %111, %109 ], [ %124, %119 ]
  %127 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %110, i64 1
  %128 = icmp eq %struct.VkDrmFormatModifierPropertiesEXT* %127, %52
  br i1 %128, label %129, label %109

129:                                              ; preds = %125
  %130 = inttoptr i64 %126 to %struct.VkDrmFormatModifierPropertiesEXT*
  br label %131

131:                                              ; preds = %81, %129, %88, %84
  %132 = phi %struct.VkDrmFormatModifierPropertiesEXT* [ %52, %84 ], [ %85, %88 ], [ %130, %129 ], [ %52, %81 ]
  %133 = load %struct.VkDrmFormatModifierPropertiesEXT*, %struct.VkDrmFormatModifierPropertiesEXT** %35, align 8
  %134 = icmp eq %struct.VkDrmFormatModifierPropertiesEXT* %132, %133
  br i1 %134, label %136, label %135

135:                                              ; preds = %131
  store %struct.VkDrmFormatModifierPropertiesEXT* %132, %struct.VkDrmFormatModifierPropertiesEXT** %35, align 8
  br label %136

136:                                              ; preds = %131, %135
  %137 = load %struct.VkDrmFormatModifierPropertiesEXT*, %struct.VkDrmFormatModifierPropertiesEXT** %34, align 8
  %138 = icmp eq %struct.VkDrmFormatModifierPropertiesEXT* %137, %132
  br i1 %138, label %279, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %4, i64 0, i32 0, i32 0
  %141 = load i64*, i64** %140, align 8
  %142 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %4, i64 0, i32 0, i32 1
  %143 = load i64*, i64** %142, align 8
  %144 = icmp eq i64* %141, %143
  %145 = ptrtoint i64* %143 to i64
  br i1 %144, label %160, label %146

146:                                              ; preds = %139, %157
  %147 = phi i64* [ %158, %157 ], [ %141, %139 ]
  %148 = load i64, i64* %147, align 8
  br label %151

149:                                              ; preds = %151
  %150 = icmp eq %struct.VkDrmFormatModifierPropertiesEXT* %156, %132
  br i1 %150, label %160, label %151

151:                                              ; preds = %149, %146
  %152 = phi %struct.VkDrmFormatModifierPropertiesEXT* [ %156, %149 ], [ %137, %146 ]
  %153 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %152, i64 0, i32 0
  %154 = load i64, i64* %153, align 8
  %155 = icmp eq i64 %154, %148
  %156 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %152, i64 1
  br i1 %155, label %157, label %149

157:                                              ; preds = %151
  %158 = getelementptr inbounds i64, i64* %147, i64 1
  %159 = icmp eq i64* %158, %143
  br i1 %159, label %205, label %146

160:                                              ; preds = %149, %139
  %161 = phi i64* [ %141, %139 ], [ %147, %149 ]
  %162 = icmp eq i64* %161, %143
  br i1 %162, label %205, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds i64, i64* %161, i64 1
  %165 = icmp eq i64* %164, %143
  br i1 %165, label %198, label %166

166:                                              ; preds = %163
  %167 = ptrtoint i64* %161 to i64
  br label %168

168:                                              ; preds = %191, %166
  %169 = phi %struct.VkDrmFormatModifierPropertiesEXT* [ %193, %191 ], [ %132, %166 ]
  %170 = phi %struct.VkDrmFormatModifierPropertiesEXT* [ %192, %191 ], [ %137, %166 ]
  %171 = phi i64* [ %189, %191 ], [ %164, %166 ]
  %172 = phi i64 [ %188, %191 ], [ %167, %166 ]
  %173 = load i64, i64* %171, align 8
  %174 = icmp eq %struct.VkDrmFormatModifierPropertiesEXT* %170, %169
  br i1 %174, label %187, label %177

175:                                              ; preds = %177
  %176 = icmp eq %struct.VkDrmFormatModifierPropertiesEXT* %182, %169
  br i1 %176, label %187, label %177

177:                                              ; preds = %168, %175
  %178 = phi %struct.VkDrmFormatModifierPropertiesEXT* [ %182, %175 ], [ %170, %168 ]
  %179 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %178, i64 0, i32 0
  %180 = load i64, i64* %179, align 8
  %181 = icmp eq i64 %180, %173
  %182 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %178, i64 1
  br i1 %181, label %183, label %175

183:                                              ; preds = %177
  %184 = inttoptr i64 %172 to i64*
  store i64 %173, i64* %184, align 8
  %185 = getelementptr inbounds i64, i64* %184, i64 1
  %186 = ptrtoint i64* %185 to i64
  br label %187

187:                                              ; preds = %175, %183, %168
  %188 = phi i64 [ %186, %183 ], [ %172, %168 ], [ %172, %175 ]
  %189 = getelementptr inbounds i64, i64* %171, i64 1
  %190 = icmp eq i64* %189, %143
  br i1 %190, label %194, label %191

191:                                              ; preds = %187
  %192 = load %struct.VkDrmFormatModifierPropertiesEXT*, %struct.VkDrmFormatModifierPropertiesEXT** %34, align 8
  %193 = load %struct.VkDrmFormatModifierPropertiesEXT*, %struct.VkDrmFormatModifierPropertiesEXT** %35, align 8
  br label %168

194:                                              ; preds = %187
  %195 = inttoptr i64 %188 to i64*
  %196 = load i64*, i64** %142, align 8
  %197 = ptrtoint i64* %196 to i64
  br label %198

198:                                              ; preds = %194, %163
  %199 = phi i64 [ %145, %163 ], [ %197, %194 ]
  %200 = phi i64* [ %143, %163 ], [ %196, %194 ]
  %201 = phi i64* [ %161, %163 ], [ %195, %194 ]
  %202 = icmp eq i64* %201, %200
  br i1 %202, label %205, label %203

203:                                              ; preds = %198
  store i64* %201, i64** %142, align 8
  %204 = ptrtoint i64* %201 to i64
  br label %205

205:                                              ; preds = %157, %160, %198, %203
  %206 = phi i64 [ %145, %160 ], [ %199, %198 ], [ %204, %203 ], [ %145, %157 ]
  %207 = phi i64* [ %143, %160 ], [ %200, %198 ], [ %201, %203 ], [ %143, %157 ]
  %208 = load i64*, i64** %140, align 8
  %209 = icmp eq i64* %208, %207
  br i1 %209, label %276, label %210

210:                                              ; preds = %205
  %211 = ptrtoint i64* %208 to i64
  %212 = bitcast %struct.VkImageDrmFormatModifierListCreateInfoEXT* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %212) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %212, i8 -86, i64 24, i1 false)
  %213 = getelementptr inbounds %struct.VkImageDrmFormatModifierListCreateInfoEXT, %struct.VkImageDrmFormatModifierListCreateInfoEXT* %17, i64 0, i32 0
  store i32 1000158003, i32* %213, align 8
  %214 = getelementptr inbounds %struct.VkImageDrmFormatModifierListCreateInfoEXT, %struct.VkImageDrmFormatModifierListCreateInfoEXT* %17, i64 0, i32 1
  store i8* null, i8** %214, align 8
  %215 = getelementptr inbounds %struct.VkImageDrmFormatModifierListCreateInfoEXT, %struct.VkImageDrmFormatModifierListCreateInfoEXT* %17, i64 0, i32 2
  %216 = sub i64 %206, %211
  %217 = lshr exact i64 %216, 3
  %218 = trunc i64 %217 to i32
  store i32 %218, i32* %215, align 8
  %219 = getelementptr inbounds %struct.VkImageDrmFormatModifierListCreateInfoEXT, %struct.VkImageDrmFormatModifierListCreateInfoEXT* %17, i64 0, i32 3
  store i64* %208, i64** %219, align 8
  %220 = call zeroext i1 @_ZN3gpu11VulkanImage28InitializeWithExternalMemoryEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_(%"class.gpu::VulkanImage"* %0, %"class.gpu::VulkanDeviceQueue"* %1, %"class.gfx::Size"* dereferenceable(8) %2, i32 %3, i32 %5, i32 %6, i32 1000158000, i8* nonnull %212, i8* null) #9
  br i1 %220, label %221, label %274

221:                                              ; preds = %210
  %222 = bitcast %struct.VkImageDrmFormatModifierPropertiesEXT* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %222) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %222, i8* align 8 bitcast ({ i32, [4 x i8], i8*, i64 }* @__const._ZN3gpu11VulkanImage40InitializeWithExternalMemoryAndModifiersEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatNSt3__16vectorImNS8_9allocatorImEEEEjj.image_modifier_props to i8*), i64 24, i1 false)
  %223 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %1, i64 0, i32 5
  %224 = load %struct.VkDevice_T*, %struct.VkDevice_T** %223, align 8
  %225 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 11
  %226 = load %struct.VkImage_T*, %struct.VkImage_T** %225, align 8
  %227 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #9
  %228 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %227, i64 0, i32 100, i32 0
  %229 = load i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)** %228, align 8
  %230 = call i32 %229(%struct.VkDevice_T* %224, %struct.VkImage_T* %226, %struct.VkImageDrmFormatModifierPropertiesEXT* nonnull %18) #9
  %231 = getelementptr inbounds %struct.VkImageDrmFormatModifierPropertiesEXT, %struct.VkImageDrmFormatModifierPropertiesEXT* %18, i64 0, i32 2
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 15
  store i64 %232, i64* %233, align 8
  %234 = load %struct.VkDrmFormatModifierPropertiesEXT*, %struct.VkDrmFormatModifierPropertiesEXT** %34, align 8
  %235 = load %struct.VkDrmFormatModifierPropertiesEXT*, %struct.VkDrmFormatModifierPropertiesEXT** %35, align 8
  %236 = icmp eq %struct.VkDrmFormatModifierPropertiesEXT* %234, %235
  br i1 %236, label %250, label %237

237:                                              ; preds = %221, %247
  %238 = phi %struct.VkDrmFormatModifierPropertiesEXT* [ %248, %247 ], [ %234, %221 ]
  %239 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %238, i64 0, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = icmp eq i64 %240, %232
  br i1 %241, label %242, label %247

242:                                              ; preds = %237
  %243 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %238, i64 0, i32 1
  %244 = load i32, i32* %243, align 8
  %245 = zext i32 %244 to i64
  %246 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 16
  store i64 %245, i64* %246, align 8
  br label %250

247:                                              ; preds = %237
  %248 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %238, i64 1
  %249 = icmp eq %struct.VkDrmFormatModifierPropertiesEXT* %248, %235
  br i1 %249, label %250, label %237

250:                                              ; preds = %247, %221, %242
  %251 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 16
  %252 = load i64, i64* %251, align 8
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %259, label %254

254:                                              ; preds = %250
  %255 = bitcast %struct.VkImageSubresource* %19 to i8*
  %256 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %19, i64 0, i32 0
  %257 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %19, i64 0, i32 1
  %258 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %19, i64 0, i32 2
  br label %260

259:                                              ; preds = %260, %250
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %222) #9
  br label %274

260:                                              ; preds = %254, %260
  %261 = phi i64 [ 0, %254 ], [ %271, %260 ]
  %262 = phi i32 [ 0, %254 ], [ %270, %260 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %255) #9
  %263 = shl i32 16, %262
  store i32 %263, i32* %256, align 4
  store i32 0, i32* %257, align 4
  store i32 0, i32* %258, align 4
  %264 = load %struct.VkDevice_T*, %struct.VkDevice_T** %223, align 8
  %265 = load %struct.VkImage_T*, %struct.VkImage_T** %225, align 8
  %266 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 17, i32 0, i64 %261
  %267 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #9
  %268 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %267, i64 0, i32 82, i32 0
  %269 = load void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)** %268, align 8
  call void %269(%struct.VkDevice_T* %264, %struct.VkImage_T* %265, %struct.VkImageSubresource* nonnull %19, %struct.VkSubresourceLayout* %266) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %255) #9
  %270 = add i32 %262, 1
  %271 = zext i32 %270 to i64
  %272 = load i64, i64* %251, align 8
  %273 = icmp ugt i64 %272, %271
  br i1 %273, label %260, label %259

274:                                              ; preds = %210, %259
  %275 = phi i1 [ true, %259 ], [ false, %210 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %212) #9
  br label %276

276:                                              ; preds = %274, %205
  %277 = phi i1 [ false, %205 ], [ %275, %274 ]
  %278 = load %struct.VkDrmFormatModifierPropertiesEXT*, %struct.VkDrmFormatModifierPropertiesEXT** %34, align 8
  br label %279

279:                                              ; preds = %276, %136
  %280 = phi %struct.VkDrmFormatModifierPropertiesEXT* [ %278, %276 ], [ %132, %136 ]
  %281 = phi i1 [ %277, %276 ], [ false, %136 ]
  %282 = icmp eq %struct.VkDrmFormatModifierPropertiesEXT* %280, null
  br i1 %282, label %286, label %283

283:                                              ; preds = %279
  %284 = ptrtoint %struct.VkDrmFormatModifierPropertiesEXT* %280 to i64
  store i64 %284, i64* %38, align 8
  %285 = bitcast %struct.VkDrmFormatModifierPropertiesEXT* %280 to i8*
  call void @_ZdlPv(i8* %285) #8
  br label %286

286:                                              ; preds = %279, %283
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #9
  ret i1 %281
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu11VulkanImage35InitializeFromGpuMemoryBufferHandleEPNS_17VulkanDeviceQueueEN3gfx21GpuMemoryBufferHandleERKNS3_4SizeE8VkFormatjj13VkImageTiling(%"class.gpu::VulkanImage"*, %"class.gpu::VulkanDeviceQueue"*, %"struct.gfx::GpuMemoryBufferHandle"*, %"class.gfx::Size"* dereferenceable(8), i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = alloca %struct.VkExternalMemoryImageCreateInfo, align 8
  %11 = alloca %struct.VkImageDrmFormatModifierListCreateInfoEXT, align 8
  %12 = alloca %struct.VkImportMemoryFdInfoKHR, align 8
  %13 = getelementptr inbounds %"struct.gfx::GpuMemoryBufferHandle", %"struct.gfx::GpuMemoryBufferHandle"* %2, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 3
  br i1 %15, label %16, label %58

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"struct.gfx::GpuMemoryBufferHandle", %"struct.gfx::GpuMemoryBufferHandle"* %2, i64 0, i32 5, i32 0, i32 0, i32 0
  %18 = load %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"** %17, align 8
  %19 = getelementptr inbounds %"struct.gfx::NativePixmapPlane", %"struct.gfx::NativePixmapPlane"* %18, i64 0, i32 3
  %20 = getelementptr inbounds %"struct.gfx::NativePixmapPlane", %"struct.gfx::NativePixmapPlane"* %18, i64 0, i32 3, i32 1, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %58, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"struct.gfx::GpuMemoryBufferHandle", %"struct.gfx::GpuMemoryBufferHandle"* %2, i64 0, i32 5, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 72057594037927935
  br i1 %26, label %33, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %1, i64 0, i32 0
  %29 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #9
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8** %30, align 8
  %31 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  store i64 32, i64* %31, align 8
  %32 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* dereferenceable(24) %28, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #9
  br label %33

33:                                               ; preds = %23, %27
  %34 = phi i1 [ false, %23 ], [ %32, %27 ]
  %35 = bitcast %struct.VkExternalMemoryImageCreateInfo* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 8 bitcast ({ i32, [4 x i8], i8*, i32, [4 x i8] }* @__const._ZN3gpu11VulkanImage35InitializeFromGpuMemoryBufferHandleEPNS_17VulkanDeviceQueueEN3gfx21GpuMemoryBufferHandleERKNS3_4SizeE8VkFormatjj13VkImageTiling.external_image_create_info to i8*), i64 24, i1 false)
  %36 = bitcast %struct.VkImageDrmFormatModifierListCreateInfoEXT* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  %37 = getelementptr inbounds %struct.VkImageDrmFormatModifierListCreateInfoEXT, %struct.VkImageDrmFormatModifierListCreateInfoEXT* %11, i64 0, i32 0
  store i32 1000158003, i32* %37, align 8
  %38 = getelementptr inbounds %struct.VkImageDrmFormatModifierListCreateInfoEXT, %struct.VkImageDrmFormatModifierListCreateInfoEXT* %11, i64 0, i32 1
  store i8* null, i8** %38, align 8
  %39 = getelementptr inbounds %struct.VkImageDrmFormatModifierListCreateInfoEXT, %struct.VkImageDrmFormatModifierListCreateInfoEXT* %11, i64 0, i32 2
  store i32 1, i32* %39, align 8
  %40 = getelementptr inbounds %struct.VkImageDrmFormatModifierListCreateInfoEXT, %struct.VkImageDrmFormatModifierListCreateInfoEXT* %11, i64 0, i32 3
  store i64* %24, i64** %40, align 8
  br i1 %34, label %41, label %44

41:                                               ; preds = %33
  %42 = getelementptr inbounds %struct.VkExternalMemoryImageCreateInfo, %struct.VkExternalMemoryImageCreateInfo* %10, i64 0, i32 1
  %43 = bitcast i8** %42 to %struct.VkImageDrmFormatModifierListCreateInfoEXT**
  store %struct.VkImageDrmFormatModifierListCreateInfoEXT* %11, %struct.VkImageDrmFormatModifierListCreateInfoEXT** %43, align 8
  br label %44

44:                                               ; preds = %41, %33
  %45 = bitcast %struct.VkImportMemoryFdInfoKHR* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #9
  %46 = bitcast %struct.VkImportMemoryFdInfoKHR* %12 to i64*
  store i64 -6148914691236517206, i64* %46, align 8
  %47 = getelementptr inbounds %struct.VkImportMemoryFdInfoKHR, %struct.VkImportMemoryFdInfoKHR* %12, i64 0, i32 0
  store i32 1000074000, i32* %47, align 8
  %48 = getelementptr inbounds %struct.VkImportMemoryFdInfoKHR, %struct.VkImportMemoryFdInfoKHR* %12, i64 0, i32 1
  store i8* null, i8** %48, align 8
  %49 = getelementptr inbounds %struct.VkImportMemoryFdInfoKHR, %struct.VkImportMemoryFdInfoKHR* %12, i64 0, i32 2
  store i32 512, i32* %49, align 8
  %50 = getelementptr inbounds %struct.VkImportMemoryFdInfoKHR, %struct.VkImportMemoryFdInfoKHR* %12, i64 0, i32 3
  %51 = load i32, i32* %20, align 4
  store i32 %51, i32* %50, align 4
  %52 = call zeroext i1 @_ZN3gpu11VulkanImage10InitializeEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_PK20VkMemoryRequirements(%"class.gpu::VulkanImage"* %0, %"class.gpu::VulkanDeviceQueue"* %1, %"class.gfx::Size"* dereferenceable(8) %3, i32 %4, i32 %5, i32 %6, i32 %7, i8* nonnull %35, i8* nonnull %45, %struct.VkMemoryRequirements* null) #9
  br i1 %52, label %53, label %57

53:                                               ; preds = %44
  %54 = load i32, i32* %20, align 8
  store i32 -1, i32* %20, align 8
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %19, i32 %54) #9
  br label %57

57:                                               ; preds = %56, %53, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #9
  br label %58

58:                                               ; preds = %16, %57, %8
  %59 = phi i1 [ false, %8 ], [ %52, %57 ], [ false, %16 ]
  ret i1 %59
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN3gpu11VulkanImage10InitializeEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_PK20VkMemoryRequirements(%"class.gpu::VulkanImage"*, %"class.gpu::VulkanDeviceQueue"*, %"class.gfx::Size"* dereferenceable(8), i32, i32, i32, i32, i8*, i8*, %struct.VkMemoryRequirements*) local_unnamed_addr #2

declare zeroext i1 @_ZN3gpu11VulkanImage28InitializeWithExternalMemoryEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_(%"class.gpu::VulkanImage"*, %"class.gpu::VulkanDeviceQueue"*, %"class.gfx::Size"* dereferenceable(8), i32, i32, i32, i32, i8*, i8*) local_unnamed_addr #2

declare %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() local_unnamed_addr #2

declare void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN3gpu11VulkanImageC1EN4base7PassKeyIS0_EE(%"class.gpu::VulkanImage"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu11VulkanImageD1Ev(%"class.gpu::VulkanImage"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* dereferenceable(24), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI32VkDrmFormatModifierPropertiesEXTNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.25"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %struct.VkDrmFormatModifierPropertiesEXT** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %struct.VkDrmFormatModifierPropertiesEXT** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %struct.VkDrmFormatModifierPropertiesEXT*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %13, i64 %18, i32 0
  %20 = bitcast i64* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 16
  %25 = and i64 %24, -16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #9
  %26 = ptrtoint %struct.VkDrmFormatModifierPropertiesEXT* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.25"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 4
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 1152921504606846975
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.25"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #10
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 4
  %41 = icmp ult i64 %40, 576460752303423487
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 3
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 1152921504606846975
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #10
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 1152921504606846975, %38 ]
  %52 = shl i64 %51, 4
  %53 = tail call i8* @_Znwm(i64 %52) #8
  %54 = bitcast i8* %53 to %struct.VkDrmFormatModifierPropertiesEXT*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %struct.VkDrmFormatModifierPropertiesEXT* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %57, i64 %33
  %59 = bitcast %struct.VkDrmFormatModifierPropertiesEXT* %58 to i8*
  %60 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %57, i64 %56
  %61 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %58, i64 %1
  %62 = shl nsw i64 %1, 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %struct.VkDrmFormatModifierPropertiesEXT* %60 to i64
  %64 = ptrtoint %struct.VkDrmFormatModifierPropertiesEXT* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 0
  %66 = load %struct.VkDrmFormatModifierPropertiesEXT*, %struct.VkDrmFormatModifierPropertiesEXT** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %struct.VkDrmFormatModifierPropertiesEXT* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 4
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %struct.VkDrmFormatModifierPropertiesEXT, %struct.VkDrmFormatModifierPropertiesEXT* %58, i64 %71
  %73 = ptrtoint %struct.VkDrmFormatModifierPropertiesEXT* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %struct.VkDrmFormatModifierPropertiesEXT* %72 to i8*
  %77 = bitcast %struct.VkDrmFormatModifierPropertiesEXT* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #9
  %78 = load %struct.VkDrmFormatModifierPropertiesEXT*, %struct.VkDrmFormatModifierPropertiesEXT** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %struct.VkDrmFormatModifierPropertiesEXT* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %struct.VkDrmFormatModifierPropertiesEXT* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %struct.VkDrmFormatModifierPropertiesEXT* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #8
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
