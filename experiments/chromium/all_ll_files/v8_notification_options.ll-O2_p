; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_notification_options.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_notification_options.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.420" }
%"struct.std::__1::atomic.420" = type { %"struct.std::__1::__atomic_base.421" }
%"struct.std::__1::__atomic_base.421" = type { %"struct.std::__1::__atomic_base.422" }
%"struct.std::__1::__atomic_base.422" = type { %"struct.std::__1::__cxx_atomic_impl.423" }
%"struct.std::__1::__cxx_atomic_impl.423" = type { %"struct.std::__1::__cxx_atomic_base_impl.424" }
%"struct.std::__1::__cxx_atomic_base_impl.424" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.145", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.186", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.126", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist.99"* }
%"class.blink::Worklist.99" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.106", %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.118", %"class.std::__1::__compressed_pair.120", [4 x i8] }>
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108", %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { i64 }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { float }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.129", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.138" }
%"class.WTF::Vector.138" = type { %"class.WTF::VectorBuffer.139" }
%"class.WTF::VectorBuffer.139" = type { %"class.WTF::VectorBufferBase.140" }
%"class.WTF::VectorBufferBase.140" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.153" }
%"class.WTF::VectorBuffer.153" = type { %"class.WTF::VectorBufferBase.154" }
%"class.WTF::VectorBufferBase.154" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.167" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.85"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.197" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.185 }
%class.scoped_refptr.185 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__cxx_atomic_impl.188" }
%"struct.std::__1::__cxx_atomic_impl.188" = type { %"struct.std::__1::__cxx_atomic_base_impl.189" }
%"struct.std::__1::__cxx_atomic_base_impl.189" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.12" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.12" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.12" = type { %"class.v8::TracedReference.13" }
%"class.v8::TracedReference.13" = type { %"class.v8::BasicTracedReference.14" }
%"class.v8::BasicTracedReference.14" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.blink::NotificationOptions" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, %"class.blink::HeapVector", %"class.WTF::String", %"class.WTF::String", %"class.blink::ScriptValue", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, %"class.blink::Member.190", i8, %"class.WTF::String", i64, %"class.blink::UnsignedLongOrUnsignedLongSequence" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::NotificationAction"* }
%"class.blink::NotificationAction" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference", %class.scoped_refptr.3 }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.3 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::TimestampTrigger"* }
%"class.blink::TimestampTrigger" = type { %"class.blink::ScriptWrappable", i64 }
%"class.blink::UnsignedLongOrUnsignedLongSequence" = type { i32, i32, %"class.WTF::Vector.192" }
%"class.WTF::Vector.192" = type { %"class.WTF::VectorBuffer.193" }
%"class.WTF::VectorBuffer.193" = type { %"class.WTF::VectorBufferBase.194" }
%"class.WTF::VectorBufferBase.194" = type { i32*, i32, i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.275" }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { i8* }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.306", %"class.WTF::HashMap.306", %"class.WTF::HashMap.311", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.363", %"class.blink::Persistent.369", i8, i8, i8, %"class.WTF::Vector.371", %"class.std::__1::unique_ptr.376", %"class.blink::Persistent.382", %"class.blink::Persistent.386", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.288", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.294", %"class.std::__1::unique_ptr.300", i32, i32 }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.306" = type { %"class.WTF::HashTable.307" }
%"class.WTF::HashTable.307" = type <{ %"struct.WTF::KeyValuePair.310"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.310" = type opaque
%"class.WTF::HashMap.311" = type { %"class.WTF::HashTable.312" }
%"class.WTF::HashTable.312" = type <{ %"struct.WTF::KeyValuePair.315"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.315" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.324", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.319", i8* }
%"class.WTF::HashMap.319" = type { %"class.WTF::HashTable.320" }
%"class.WTF::HashTable.320" = type <{ %"struct.WTF::KeyValuePair.323"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.323" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.324" = type { %"class.v8::PersistentValueMapBase.325" }
%"class.v8::PersistentValueMapBase.325" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.326", i8* }
%"class.WTF::HashMap.326" = type { %"class.WTF::HashTable.327" }
%"class.WTF::HashTable.327" = type <{ %"struct.WTF::KeyValuePair.330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.330" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.331", %"class.WTF::String", %"class.std::__1::unique_ptr.333" }
%"class.WTF::RefCounted.331" = type { %"class.base::RefCounted.332" }
%"class.base::RefCounted.332" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.347", %"class.WTF::Vector.353", i8, i32 }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.WTF::Vector.339"* }
%"class.WTF::Vector.339" = type { %"class.WTF::VectorBuffer.340" }
%"class.WTF::VectorBuffer.340" = type { %"class.WTF::VectorBufferBase.341" }
%"class.WTF::VectorBufferBase.341" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.353" = type { %"class.WTF::VectorBuffer.354" }
%"class.WTF::VectorBuffer.354" = type { %"class.WTF::VectorBufferBase.341", [32 x i8] }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent.369" = type { %"class.blink::PersistentBase.370" }
%"class.blink::PersistentBase.370" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.403, %"class.blink::Member.404", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.403 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.369" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector.371" = type { %"class.WTF::VectorBuffer.372" }
%"class.WTF::VectorBuffer.372" = type { %"class.WTF::VectorBufferBase.373" }
%"class.WTF::VectorBufferBase.373" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.382" = type { %"class.blink::PersistentBase.383" }
%"class.blink::PersistentBase.383" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.386" = type { %"class.blink::PersistentBase.387" }
%"class.blink::PersistentBase.387" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.390", i64 }
%"class.blink::HeapVector.390" = type { %"class.WTF::Vector.393" }
%"class.WTF::Vector.393" = type { %"class.WTF::VectorBuffer.394" }
%"class.WTF::VectorBuffer.394" = type { %"class.WTF::VectorBufferBase.395" }
%"class.WTF::VectorBufferBase.395" = type { %"struct.std::__1::pair.396"*, i32, i32 }
%"struct.std::__1::pair.396" = type { %"class.blink::UntracedMember", %"class.blink::Member.398" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.406" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.243", i32, i8, [3 x i8], %"class.blink::HeapVector.245", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.253", %"class.blink::Member.255", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.264", %"class.blink::Member.270", %"class.blink::Member.272", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.204" }
%"class.blink::HeapHashMap.204" = type { %"class.WTF::HashMap.207" }
%"class.WTF::HashMap.207" = type { %"class.WTF::HashTable.208" }
%"class.WTF::HashTable.208" = type <{ %"struct.WTF::KeyValuePair.210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.210" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.216" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.213" }
%"class.WTF::HashTable.213" = type <{ %"class.blink::WeakMember.215"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.215" = type opaque
%"class.blink::Supplementable.216" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.217" }
%"class.blink::HeapHashMap.217" = type { %"class.WTF::HashMap.220" }
%"class.WTF::HashMap.220" = type { %"class.WTF::HashTable.221" }
%"class.WTF::HashTable.221" = type <{ %"struct.WTF::KeyValuePair.223"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.223" = type { i8*, %"class.blink::Member.284" }
%"class.blink::Member.284" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.286" }
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.224, %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231", %"class.blink::Member.237", i32, [4 x i8], %"class.WTF::HashSet.239", i32, i32 }
%class.scoped_refptr.224 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.239" = type { %"class.WTF::HashTable.240" }
%"class.WTF::HashTable.240" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.243" = type { %"class.blink::MemberBase.244" }
%"class.blink::MemberBase.244" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.245" = type { %"class.WTF::Vector.248" }
%"class.WTF::Vector.248" = type { %"class.WTF::VectorBuffer.249" }
%"class.WTF::VectorBuffer.249" = type { %"class.WTF::VectorBufferBase.250" }
%"class.WTF::VectorBufferBase.250" = type { %"class.blink::Member.251"*, i32, i32 }
%"class.blink::Member.251" = type opaque
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.257", i32, i32 }
%"class.blink::HeapHashMap.257" = type { %"class.WTF::HashMap.260" }
%"class.WTF::HashMap.260" = type { %"class.WTF::HashTable.261" }
%"class.WTF::HashTable.261" = type <{ %"struct.WTF::KeyValuePair.263"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.263" = type opaque
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.v8::String" = type { i8 }
%"class.v8::Boolean" = type { i8 }
%"class.v8::Uint32" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.202", %"class.v8::Local", %"class.v8::Local.281", %"class.v8::Local.281", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.202" = type { %"class.v8::Object"* }
%"class.v8::Local.281" = type { %"class.v8::String"* }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.v8::Array" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Number" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.460 }
%union.anon.460 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18NotificationActionEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_18NotificationActionEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_18NotificationActionEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18NotificationActionEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_18NotificationActionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18NotificationActionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18NotificationActionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18NotificationActionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_18NotificationActionEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blink21V8NotificationOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_19NotificationOptionsERNS_14ExceptionStateEE12kValidValues = internal constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"ltr\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"rtl\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"NotificationDirection\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"member showTrigger is not of type TimestampTrigger.\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZZN5blinkL32eternalV8NotificationOptionsKeysEPN2v87IsolateEE5kKeys = internal constant [15 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0)], align 16
@.str.6 = private unnamed_addr constant [8 x i8] c"actions\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"badge\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"body\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"dir\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"icon\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"image\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"lang\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"renotify\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"requireInteraction\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"showTrigger\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"silent\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"tag\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"timestamp\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"vibrate\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 15, i8** getelementptr inbounds ([15 x i8*], [15 x i8*]* @_ZZN5blinkL32eternalV8NotificationOptionsKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@.str.21 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.23 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase38is_notification_content_image_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.25 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.26 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.27 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.28 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.29 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.30 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.31 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.33 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18NotificationActionEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [177 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::NotificationAction>, WTF::VectorTraits<blink::Member<blink::NotificationAction> > >]\00", align 1
@.str.34 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.35 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink18V8TimestampTrigger18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21V8NotificationOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_19NotificationOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::NotificationOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.blink::HeapVector", align 8
  %7 = alloca %"class.blink::V8StringResource", align 8
  %8 = alloca %"class.blink::ScriptValue", align 8
  %9 = alloca %"class.blink::ScriptValue", align 8
  %10 = alloca %"class.blink::V8StringResource", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.blink::V8StringResource", align 8
  %14 = alloca %"class.blink::V8StringResource", align 8
  %15 = alloca %"class.blink::UnsignedLongOrUnsignedLongSequence", align 8
  %16 = icmp eq %"class.v8::Value"* %1, null
  br i1 %16, label %1755, label %17

17:                                               ; preds = %4
  %18 = bitcast %"class.v8::Value"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 1
  br i1 %21, label %22, label %38

22:                                               ; preds = %17
  %23 = add i64 %19, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %19, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %31, 67
  br i1 %32, label %33, label %38

33:                                               ; preds = %22
  %34 = add i64 %19, 23
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = ashr i32 %36, 1
  switch i32 %37, label %38 [
    i32 5, label %1755
    i32 3, label %1755
  ]

38:                                               ; preds = %33, %22, %17
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #8
  br i1 %39, label %41, label %40

40:                                               ; preds = %38
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #8
  br label %1755

41:                                               ; preds = %38
  %42 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %43 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to %"class.blink::V8PerIsolateData"**
  %46 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %45, align 8
  %47 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %46, i8* bitcast ([15 x i8*]* @_ZZN5blinkL32eternalV8NotificationOptionsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.406"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.406"*)) #8
  %48 = extractvalue { i64, %"class.v8::Eternal"* } %47, 1
  %49 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %49) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #8
  %50 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #8
  %51 = call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %50) #8
  %52 = bitcast %"class.v8::Eternal"* %48 to %"class.v8::Value"**
  %53 = load %"class.v8::Value"*, %"class.v8::Value"** %52, align 8
  %54 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %53) #8
  %55 = icmp eq %"class.v8::Value"* %54, null
  br i1 %55, label %56, label %62

56:                                               ; preds = %41
  %57 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %58 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %59 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %59, i64 5
  %61 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %60, align 8
  call void %61(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %57) #8
  br label %1754

62:                                               ; preds = %41
  %63 = bitcast %"class.v8::Value"* %54 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, 3
  %66 = icmp eq i64 %65, 1
  br i1 %66, label %67, label %84

67:                                               ; preds = %62
  %68 = add i64 %64, -1
  %69 = inttoptr i64 %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = and i64 %64, -4294967296
  %72 = zext i32 %70 to i64
  %73 = or i64 %71, %72
  %74 = add i64 %73, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 67
  br i1 %77, label %78, label %84

78:                                               ; preds = %67
  %79 = add i64 %64, 23
  %80 = inttoptr i64 %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, -2
  %83 = icmp eq i32 %82, 10
  br i1 %83, label %92, label %84

84:                                               ; preds = %67, %62, %78
  %85 = bitcast %"class.blink::HeapVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #8
  %86 = bitcast %"class.blink::HeapVector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18NotificationActionEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* nonnull sret %6, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %54, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %87 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %84
  call void @_ZN5blink19NotificationOptions10setActionsERKNS_10HeapVectorINS_6MemberINS_18NotificationActionEEELj0EEE(%"class.blink::NotificationOptions"* %2, %"class.blink::HeapVector"* nonnull dereferenceable(16) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #8
  br label %92

91:                                               ; preds = %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #8
  br label %1754

92:                                               ; preds = %90, %78
  %93 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 1, i32 0
  %94 = bitcast %"class.v8::Name"** %93 to %"class.v8::Value"**
  %95 = load %"class.v8::Value"*, %"class.v8::Value"** %94, align 8
  %96 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %95) #8
  %97 = icmp eq %"class.v8::Value"* %96, null
  br i1 %97, label %98, label %104

98:                                               ; preds = %92
  %99 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %100 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %101 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %101, i64 5
  %103 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %102, align 8
  call void %103(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %99) #8
  br label %1754

104:                                              ; preds = %92
  %105 = bitcast %"class.v8::Value"* %96 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = and i64 %106, 3
  %108 = icmp eq i64 %107, 1
  br i1 %108, label %109, label %126

109:                                              ; preds = %104
  %110 = add i64 %106, -1
  %111 = inttoptr i64 %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = and i64 %106, -4294967296
  %114 = zext i32 %112 to i64
  %115 = or i64 %113, %114
  %116 = add i64 %115, 7
  %117 = inttoptr i64 %116 to i16*
  %118 = load i16, i16* %117, align 2
  %119 = icmp eq i16 %118, 67
  br i1 %119, label %120, label %126

120:                                              ; preds = %109
  %121 = add i64 %106, 23
  %122 = inttoptr i64 %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = and i32 %123, -2
  %125 = icmp eq i32 %124, 10
  br i1 %125, label %262, label %126

126:                                              ; preds = %109, %104, %120
  %127 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %96, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %158, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %146

136:                                              ; preds = %129
  %137 = zext i32 %135 to i33
  %138 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %137, i33 1) #8
  %139 = extractvalue { i33, i1 } %138, 1
  %140 = extractvalue { i33, i1 } %138, 0
  %141 = icmp slt i33 %140, 0
  %142 = or i1 %139, %141
  br i1 %142, label %143, label %144, !prof !2

143:                                              ; preds = %136
  call void @llvm.trap() #8
  unreachable

144:                                              ; preds = %136
  %145 = trunc i33 %140 to i32
  store i32 %145, i32* %134, align 4
  br label %146

146:                                              ; preds = %129, %144
  %147 = phi i32 [ %145, %144 ], [ %135, %129 ]
  %148 = load atomic i32, i32* %130 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %153 = add i32 %147, -1
  store i32 %153, i32* %152, align 4
  br label %154

154:                                              ; preds = %151, %146
  %155 = phi i32 [ %153, %151 ], [ %147, %146 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #8
  br label %158

158:                                              ; preds = %126, %154, %157
  %159 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %160 = load i32, i32* %159, align 8
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %248

162:                                              ; preds = %158
  br i1 %128, label %180, label %163

163:                                              ; preds = %162
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %182

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = zext i32 %170 to i33
  %172 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %171, i33 1) #8
  %173 = extractvalue { i33, i1 } %172, 1
  %174 = extractvalue { i33, i1 } %172, 0
  %175 = icmp slt i33 %174, 0
  %176 = or i1 %173, %175
  br i1 %176, label %177, label %178, !prof !2

177:                                              ; preds = %168
  call void @llvm.trap() #8
  unreachable

178:                                              ; preds = %168
  %179 = trunc i33 %174 to i32
  store i32 %179, i32* %169, align 4
  br label %182

180:                                              ; preds = %162
  %181 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 7
  br label %199

182:                                              ; preds = %163, %178
  %183 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 7
  %184 = load atomic i32, i32* %164 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %199

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i33
  %191 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %190, i33 1) #8
  %192 = extractvalue { i33, i1 } %191, 1
  %193 = extractvalue { i33, i1 } %191, 0
  %194 = icmp slt i33 %193, 0
  %195 = or i1 %192, %194
  br i1 %195, label %196, label %197, !prof !2

196:                                              ; preds = %187
  call void @llvm.trap() #8
  unreachable

197:                                              ; preds = %187
  %198 = trunc i33 %193 to i32
  store i32 %198, i32* %188, align 4
  br label %199

199:                                              ; preds = %180, %197, %182
  %200 = phi i1 [ false, %197 ], [ false, %182 ], [ true, %180 ]
  %201 = phi %"class.WTF::String"* [ %183, %197 ], [ %183, %182 ], [ %181, %180 ]
  %202 = ptrtoint %"class.WTF::StringImpl"* %127 to i64
  %203 = bitcast %"class.WTF::String"* %201 to i64*
  %204 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 7, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  store i64 %202, i64* %203, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %199
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #8
  br label %220

220:                                              ; preds = %199, %216, %219
  br i1 %200, label %234, label %221

221:                                              ; preds = %220
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  br i1 %225, label %228, label %230

228:                                              ; preds = %221
  %229 = add i32 %227, -1
  store i32 %229, i32* %226, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = phi i32 [ %229, %228 ], [ %227, %221 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %230
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #8
  br label %234

234:                                              ; preds = %233, %230, %220
  br i1 %128, label %262, label %235

235:                                              ; preds = %234
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %235
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %235
  %245 = phi i32 [ %243, %242 ], [ %241, %235 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %262

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #8
  br label %262

248:                                              ; preds = %158
  br i1 %128, label %1754, label %249

249:                                              ; preds = %248
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  br i1 %253, label %256, label %258

256:                                              ; preds = %249
  %257 = add i32 %255, -1
  store i32 %257, i32* %254, align 4
  br label %258

258:                                              ; preds = %256, %249
  %259 = phi i32 [ %257, %256 ], [ %255, %249 ]
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %1754

261:                                              ; preds = %258
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #8
  br label %1754

262:                                              ; preds = %247, %244, %234, %120
  %263 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 2, i32 0
  %264 = bitcast %"class.v8::Name"** %263 to %"class.v8::Value"**
  %265 = load %"class.v8::Value"*, %"class.v8::Value"** %264, align 8
  %266 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %265) #8
  %267 = icmp eq %"class.v8::Value"* %266, null
  br i1 %267, label %268, label %274

268:                                              ; preds = %262
  %269 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %270 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %271 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %270, align 8
  %272 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %271, i64 5
  %273 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %272, align 8
  call void %273(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %269) #8
  br label %1754

274:                                              ; preds = %262
  %275 = bitcast %"class.v8::Value"* %266 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = and i64 %276, 3
  %278 = icmp eq i64 %277, 1
  br i1 %278, label %279, label %296

279:                                              ; preds = %274
  %280 = add i64 %276, -1
  %281 = inttoptr i64 %280 to i32*
  %282 = load i32, i32* %281, align 4
  %283 = and i64 %276, -4294967296
  %284 = zext i32 %282 to i64
  %285 = or i64 %283, %284
  %286 = add i64 %285, 7
  %287 = inttoptr i64 %286 to i16*
  %288 = load i16, i16* %287, align 2
  %289 = icmp eq i16 %288, 67
  br i1 %289, label %290, label %296

290:                                              ; preds = %279
  %291 = add i64 %276, 23
  %292 = inttoptr i64 %291 to i32*
  %293 = load i32, i32* %292, align 4
  %294 = and i32 %293, -2
  %295 = icmp eq i32 %294, 10
  br i1 %295, label %436, label %296

296:                                              ; preds = %279, %274, %290
  %297 = bitcast %"class.blink::V8StringResource"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %297) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %297, i8 -86, i64 152, i1 false)
  %298 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %266, %"class.v8::Value"** %298, align 8
  %299 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 1
  store i32 0, i32* %299, align 8
  %300 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %300, align 8
  %301 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1
  %302 = bitcast %"class.std::__1::unique_ptr.275"* %301 to i64*
  store i64 0, i64* %302, align 8
  %303 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %7, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %303, label %304, label %414

304:                                              ; preds = %296
  %305 = load %"class.v8::Value"*, %"class.v8::Value"** %298, align 8
  %306 = icmp eq %"class.v8::Value"* %305, null
  br i1 %306, label %307, label %331, !prof !2

307:                                              ; preds = %304
  %308 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %309 = icmp eq %"class.WTF::StringImpl"* %308, null
  br i1 %309, label %310, label %312

310:                                              ; preds = %307
  %311 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 8
  br label %356

312:                                              ; preds = %307
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load atomic i32, i32* %313 monotonic, align 4
  %315 = and i32 %314, 2
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %329

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 0
  %319 = load i32, i32* %318, align 4
  %320 = zext i32 %319 to i33
  %321 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %320, i33 1) #8
  %322 = extractvalue { i33, i1 } %321, 1
  %323 = extractvalue { i33, i1 } %321, 0
  %324 = icmp slt i33 %323, 0
  %325 = or i1 %322, %324
  br i1 %325, label %326, label %327, !prof !2

326:                                              ; preds = %317
  call void @llvm.trap() #8
  unreachable

327:                                              ; preds = %317
  %328 = trunc i33 %323 to i32
  store i32 %328, i32* %318, align 4
  br label %329

329:                                              ; preds = %312, %327
  %330 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 8
  br label %337

331:                                              ; preds = %304
  %332 = bitcast %"class.v8::Value"* %305 to %"class.v8::String"*
  %333 = load i32, i32* %299, align 8
  %334 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %332, i32 %333) #8
  %335 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 8
  %336 = icmp eq %"class.WTF::StringImpl"* %334, null
  br i1 %336, label %356, label %337

337:                                              ; preds = %329, %331
  %338 = phi %"class.WTF::String"* [ %330, %329 ], [ %335, %331 ]
  %339 = phi %"class.WTF::StringImpl"* [ %308, %329 ], [ %334, %331 ]
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %339, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = and i32 %341, 2
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %356

344:                                              ; preds = %337
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %339, i64 0, i32 0
  %346 = load i32, i32* %345, align 4
  %347 = zext i32 %346 to i33
  %348 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %347, i33 1) #8
  %349 = extractvalue { i33, i1 } %348, 1
  %350 = extractvalue { i33, i1 } %348, 0
  %351 = icmp slt i33 %350, 0
  %352 = or i1 %349, %351
  br i1 %352, label %353, label %354, !prof !2

353:                                              ; preds = %344
  call void @llvm.trap() #8
  unreachable

354:                                              ; preds = %344
  %355 = trunc i33 %350 to i32
  store i32 %355, i32* %345, align 4
  br label %356

356:                                              ; preds = %310, %354, %337, %331
  %357 = phi i1 [ false, %354 ], [ false, %337 ], [ true, %331 ], [ true, %310 ]
  %358 = phi %"class.WTF::String"* [ %338, %354 ], [ %338, %337 ], [ %335, %331 ], [ %311, %310 ]
  %359 = phi %"class.WTF::StringImpl"* [ %339, %354 ], [ %339, %337 ], [ null, %331 ], [ null, %310 ]
  %360 = ptrtoint %"class.WTF::StringImpl"* %359 to i64
  %361 = bitcast %"class.WTF::String"* %358 to i64*
  %362 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %358, i64 0, i32 0, i32 0
  %363 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %362, align 8
  store i64 %360, i64* %361, align 8
  %364 = icmp eq %"class.WTF::StringImpl"* %363, null
  br i1 %364, label %378, label %365

365:                                              ; preds = %356
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %367 = load atomic i32, i32* %366 monotonic, align 4
  %368 = and i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 0
  %371 = load i32, i32* %370, align 4
  br i1 %369, label %372, label %374

372:                                              ; preds = %365
  %373 = add i32 %371, -1
  store i32 %373, i32* %370, align 4
  br label %374

374:                                              ; preds = %372, %365
  %375 = phi i32 [ %373, %372 ], [ %371, %365 ]
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %378

377:                                              ; preds = %374
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %363) #8
  br label %378

378:                                              ; preds = %356, %374, %377
  br i1 %357, label %392, label %379

379:                                              ; preds = %378
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %381 = load atomic i32, i32* %380 monotonic, align 4
  %382 = and i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 0
  %385 = load i32, i32* %384, align 4
  br i1 %383, label %386, label %388

386:                                              ; preds = %379
  %387 = add i32 %385, -1
  store i32 %387, i32* %384, align 4
  br label %388

388:                                              ; preds = %386, %379
  %389 = phi i32 [ %387, %386 ], [ %385, %379 ]
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %392

391:                                              ; preds = %388
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %359) #8
  br label %392

392:                                              ; preds = %378, %388, %391
  %393 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %394 = load i8*, i8** %393, align 8
  store i8* null, i8** %393, align 8
  %395 = icmp eq i8* %394, null
  br i1 %395, label %397, label %396

396:                                              ; preds = %392
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %394) #8
  br label %397

397:                                              ; preds = %396, %392
  %398 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %399 = icmp eq %"class.WTF::StringImpl"* %398, null
  br i1 %399, label %413, label %400

400:                                              ; preds = %397
  %401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %402 = load atomic i32, i32* %401 monotonic, align 4
  %403 = and i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 0
  %406 = load i32, i32* %405, align 4
  br i1 %404, label %407, label %409

407:                                              ; preds = %400
  %408 = add i32 %406, -1
  store i32 %408, i32* %405, align 4
  br label %409

409:                                              ; preds = %407, %400
  %410 = phi i32 [ %408, %407 ], [ %406, %400 ]
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %413

412:                                              ; preds = %409
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %398) #8
  br label %413

413:                                              ; preds = %397, %409, %412
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %297) #8
  br label %436

414:                                              ; preds = %296
  %415 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %416 = load i8*, i8** %415, align 8
  store i8* null, i8** %415, align 8
  %417 = icmp eq i8* %416, null
  br i1 %417, label %419, label %418

418:                                              ; preds = %414
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %416) #8
  br label %419

419:                                              ; preds = %418, %414
  %420 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %421 = icmp eq %"class.WTF::StringImpl"* %420, null
  br i1 %421, label %435, label %422

422:                                              ; preds = %419
  %423 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %420, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %424 = load atomic i32, i32* %423 monotonic, align 4
  %425 = and i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %420, i64 0, i32 0
  %428 = load i32, i32* %427, align 4
  br i1 %426, label %429, label %431

429:                                              ; preds = %422
  %430 = add i32 %428, -1
  store i32 %430, i32* %427, align 4
  br label %431

431:                                              ; preds = %429, %422
  %432 = phi i32 [ %430, %429 ], [ %428, %422 ]
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %434, label %435

434:                                              ; preds = %431
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %420) #8
  br label %435

435:                                              ; preds = %419, %431, %434
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %297) #8
  br label %1754

436:                                              ; preds = %413, %290
  %437 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 3, i32 0
  %438 = bitcast %"class.v8::Name"** %437 to %"class.v8::Value"**
  %439 = load %"class.v8::Value"*, %"class.v8::Value"** %438, align 8
  %440 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %439) #8
  %441 = icmp eq %"class.v8::Value"* %440, null
  br i1 %441, label %442, label %448

442:                                              ; preds = %436
  %443 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %444 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %445 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %444, align 8
  %446 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %445, i64 5
  %447 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %446, align 8
  call void %447(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %443) #8
  br label %1754

448:                                              ; preds = %436
  %449 = bitcast %"class.v8::Value"* %440 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = and i64 %450, 3
  %452 = icmp eq i64 %451, 1
  br i1 %452, label %453, label %470

453:                                              ; preds = %448
  %454 = add i64 %450, -1
  %455 = inttoptr i64 %454 to i32*
  %456 = load i32, i32* %455, align 4
  %457 = and i64 %450, -4294967296
  %458 = zext i32 %456 to i64
  %459 = or i64 %457, %458
  %460 = add i64 %459, 7
  %461 = inttoptr i64 %460 to i16*
  %462 = load i16, i16* %461, align 2
  %463 = icmp eq i16 %462, 67
  br i1 %463, label %464, label %470

464:                                              ; preds = %453
  %465 = add i64 %450, 23
  %466 = inttoptr i64 %465 to i32*
  %467 = load i32, i32* %466, align 4
  %468 = and i32 %467, -2
  %469 = icmp eq i32 %468, 10
  br i1 %469, label %514, label %470

470:                                              ; preds = %453, %448, %464
  %471 = bitcast %"class.blink::ScriptValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %471) #8
  %472 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 0
  %473 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %474 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 1, i32 0
  %475 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1
  %476 = bitcast %"class.blink::WorldSafeV8Reference"* %475 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %476, i8 -86, i64 16, i1 false)
  store %"class.v8::Isolate"* %0, %"class.v8::Isolate"** %472, align 8
  %477 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %477, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %440) #8
  %478 = bitcast %"class.blink::ScriptValue"* %8 to i64*
  %479 = load i64, i64* %478, align 8
  %480 = bitcast %"class.blink::ScriptValue"* %9 to i64*
  store i64 %479, i64* %480, align 8
  %481 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %9, i64 0, i32 1
  %482 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %481, i64 0, i32 0
  %483 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %481, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %483, align 8
  %484 = load i64*, i64** %473, align 8
  %485 = icmp eq i64* %484, null
  br i1 %485, label %487, label %486

486:                                              ; preds = %470
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %473, i64** %483) #8
  br label %487

487:                                              ; preds = %486, %470
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %482) #8
  %488 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %474, align 8
  %489 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %9, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %488, %"class.blink::DOMWrapperWorld"** %489, align 8
  %490 = icmp eq %"class.blink::DOMWrapperWorld"* %488, null
  br i1 %490, label %493, label %491

491:                                              ; preds = %487
  %492 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %488, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %492) #8
  br label %493

493:                                              ; preds = %487, %491
  call void @_ZN5blink19NotificationOptions7setDataENS_11ScriptValueE(%"class.blink::NotificationOptions"* %2, %"class.blink::ScriptValue"* nonnull %9) #8
  %494 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %489, align 8
  %495 = icmp eq %"class.blink::DOMWrapperWorld"* %494, null
  br i1 %495, label %503, label %496

496:                                              ; preds = %493
  %497 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %494, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %497) #8
  %498 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %494, i64 0, i32 0, i32 0, i32 0, i32 0
  %499 = load i32, i32* %498, align 4
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %503

501:                                              ; preds = %496
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %494) #8
  %502 = bitcast %"class.blink::DOMWrapperWorld"* %494 to i8*
  call void @free(i8* %502) #8
  br label %503

503:                                              ; preds = %493, %496, %501
  %504 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %474, align 8
  %505 = icmp eq %"class.blink::DOMWrapperWorld"* %504, null
  br i1 %505, label %513, label %506

506:                                              ; preds = %503
  %507 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %504, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %507) #8
  %508 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %504, i64 0, i32 0, i32 0, i32 0, i32 0
  %509 = load i32, i32* %508, align 4
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %513

511:                                              ; preds = %506
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %504) #8
  %512 = bitcast %"class.blink::DOMWrapperWorld"* %504 to i8*
  call void @free(i8* %512) #8
  br label %513

513:                                              ; preds = %503, %506, %511
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %471) #8
  br label %514

514:                                              ; preds = %464, %513
  %515 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 4, i32 0
  %516 = bitcast %"class.v8::Name"** %515 to %"class.v8::Value"**
  %517 = load %"class.v8::Value"*, %"class.v8::Value"** %516, align 8
  %518 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %517) #8
  %519 = icmp eq %"class.v8::Value"* %518, null
  br i1 %519, label %520, label %526

520:                                              ; preds = %514
  %521 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %522 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %523 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %522, align 8
  %524 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %523, i64 5
  %525 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %524, align 8
  call void %525(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %521) #8
  br label %1754

526:                                              ; preds = %514
  %527 = bitcast %"class.v8::Value"* %518 to i64*
  %528 = load i64, i64* %527, align 8
  %529 = and i64 %528, 3
  %530 = icmp eq i64 %529, 1
  br i1 %530, label %531, label %548

531:                                              ; preds = %526
  %532 = add i64 %528, -1
  %533 = inttoptr i64 %532 to i32*
  %534 = load i32, i32* %533, align 4
  %535 = and i64 %528, -4294967296
  %536 = zext i32 %534 to i64
  %537 = or i64 %535, %536
  %538 = add i64 %537, 7
  %539 = inttoptr i64 %538 to i16*
  %540 = load i16, i16* %539, align 2
  %541 = icmp eq i16 %540, 67
  br i1 %541, label %542, label %548

542:                                              ; preds = %531
  %543 = add i64 %528, 23
  %544 = inttoptr i64 %543 to i32*
  %545 = load i32, i32* %544, align 4
  %546 = and i32 %545, -2
  %547 = icmp eq i32 %546, 10
  br i1 %547, label %754, label %548

548:                                              ; preds = %531, %526, %542
  %549 = bitcast %"class.blink::V8StringResource"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %549) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %549, i8 -86, i64 152, i1 false)
  %550 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %518, %"class.v8::Value"** %550, align 8
  %551 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 1
  store i32 0, i32* %551, align 8
  %552 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %552, align 8
  %553 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1
  %554 = bitcast %"class.std::__1::unique_ptr.275"* %553 to i64*
  store i64 0, i64* %554, align 8
  %555 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %10, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %555, label %556, label %732

556:                                              ; preds = %548
  %557 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %557) #8
  %558 = load %"class.v8::Value"*, %"class.v8::Value"** %550, align 8
  %559 = icmp eq %"class.v8::Value"* %558, null
  br i1 %559, label %564, label %560, !prof !2

560:                                              ; preds = %556
  %561 = bitcast %"class.v8::Value"* %558 to %"class.v8::String"*
  %562 = load i32, i32* %551, align 8
  %563 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %561, i32 %562) #8
  br label %584

564:                                              ; preds = %556
  %565 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %552, align 8
  %566 = icmp eq %"class.WTF::StringImpl"* %565, null
  br i1 %566, label %584, label %567

567:                                              ; preds = %564
  %568 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %569 = load atomic i32, i32* %568 monotonic, align 4
  %570 = and i32 %569, 2
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %572, label %584

572:                                              ; preds = %567
  %573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 0
  %574 = load i32, i32* %573, align 4
  %575 = zext i32 %574 to i33
  %576 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %575, i33 1) #8
  %577 = extractvalue { i33, i1 } %576, 1
  %578 = extractvalue { i33, i1 } %576, 0
  %579 = icmp slt i33 %578, 0
  %580 = or i1 %577, %579
  br i1 %580, label %581, label %582, !prof !2

581:                                              ; preds = %572
  call void @llvm.trap() #8
  unreachable

582:                                              ; preds = %572
  %583 = trunc i33 %578 to i32
  store i32 %583, i32* %573, align 4
  br label %584

584:                                              ; preds = %560, %564, %567, %582
  %585 = phi %"class.WTF::StringImpl"* [ %563, %560 ], [ null, %564 ], [ %565, %567 ], [ %565, %582 ]
  %586 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %585, %"class.WTF::StringImpl"** %586, align 8
  %587 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %587) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i64 21) #8
  %588 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %11, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink21V8NotificationOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_19NotificationOptionsERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %589 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %590 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %589, align 8
  %591 = icmp eq %"class.WTF::StringImpl"* %590, null
  br i1 %591, label %605, label %592

592:                                              ; preds = %584
  %593 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %590, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %594 = load atomic i32, i32* %593 monotonic, align 4
  %595 = and i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %590, i64 0, i32 0
  %598 = load i32, i32* %597, align 4
  br i1 %596, label %599, label %601

599:                                              ; preds = %592
  %600 = add i32 %598, -1
  store i32 %600, i32* %597, align 4
  br label %601

601:                                              ; preds = %599, %592
  %602 = phi i32 [ %600, %599 ], [ %598, %592 ]
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %604, label %605

604:                                              ; preds = %601
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %590) #8
  br label %605

605:                                              ; preds = %584, %601, %604
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %587) #8
  %606 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %586, align 8
  %607 = icmp eq %"class.WTF::StringImpl"* %606, null
  br i1 %607, label %621, label %608

608:                                              ; preds = %605
  %609 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %606, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %610 = load atomic i32, i32* %609 monotonic, align 4
  %611 = and i32 %610, 2
  %612 = icmp eq i32 %611, 0
  %613 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %606, i64 0, i32 0
  %614 = load i32, i32* %613, align 4
  br i1 %612, label %615, label %617

615:                                              ; preds = %608
  %616 = add i32 %614, -1
  store i32 %616, i32* %613, align 4
  br label %617

617:                                              ; preds = %615, %608
  %618 = phi i32 [ %616, %615 ], [ %614, %608 ]
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %620, label %621

620:                                              ; preds = %617
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %606) #8
  br label %621

621:                                              ; preds = %605, %617, %620
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %557) #8
  br i1 %588, label %622, label %732

622:                                              ; preds = %621
  %623 = load %"class.v8::Value"*, %"class.v8::Value"** %550, align 8
  %624 = icmp eq %"class.v8::Value"* %623, null
  br i1 %624, label %625, label %649, !prof !2

625:                                              ; preds = %622
  %626 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %552, align 8
  %627 = icmp eq %"class.WTF::StringImpl"* %626, null
  br i1 %627, label %628, label %630

628:                                              ; preds = %625
  %629 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 10
  br label %674

630:                                              ; preds = %625
  %631 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %626, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %632 = load atomic i32, i32* %631 monotonic, align 4
  %633 = and i32 %632, 2
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %635, label %647

635:                                              ; preds = %630
  %636 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %626, i64 0, i32 0
  %637 = load i32, i32* %636, align 4
  %638 = zext i32 %637 to i33
  %639 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %638, i33 1) #8
  %640 = extractvalue { i33, i1 } %639, 1
  %641 = extractvalue { i33, i1 } %639, 0
  %642 = icmp slt i33 %641, 0
  %643 = or i1 %640, %642
  br i1 %643, label %644, label %645, !prof !2

644:                                              ; preds = %635
  call void @llvm.trap() #8
  unreachable

645:                                              ; preds = %635
  %646 = trunc i33 %641 to i32
  store i32 %646, i32* %636, align 4
  br label %647

647:                                              ; preds = %630, %645
  %648 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 10
  br label %655

649:                                              ; preds = %622
  %650 = bitcast %"class.v8::Value"* %623 to %"class.v8::String"*
  %651 = load i32, i32* %551, align 8
  %652 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %650, i32 %651) #8
  %653 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 10
  %654 = icmp eq %"class.WTF::StringImpl"* %652, null
  br i1 %654, label %674, label %655

655:                                              ; preds = %647, %649
  %656 = phi %"class.WTF::String"* [ %648, %647 ], [ %653, %649 ]
  %657 = phi %"class.WTF::StringImpl"* [ %626, %647 ], [ %652, %649 ]
  %658 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %657, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %659 = load atomic i32, i32* %658 monotonic, align 4
  %660 = and i32 %659, 2
  %661 = icmp eq i32 %660, 0
  br i1 %661, label %662, label %674

662:                                              ; preds = %655
  %663 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %657, i64 0, i32 0
  %664 = load i32, i32* %663, align 4
  %665 = zext i32 %664 to i33
  %666 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %665, i33 1) #8
  %667 = extractvalue { i33, i1 } %666, 1
  %668 = extractvalue { i33, i1 } %666, 0
  %669 = icmp slt i33 %668, 0
  %670 = or i1 %667, %669
  br i1 %670, label %671, label %672, !prof !2

671:                                              ; preds = %662
  call void @llvm.trap() #8
  unreachable

672:                                              ; preds = %662
  %673 = trunc i33 %668 to i32
  store i32 %673, i32* %663, align 4
  br label %674

674:                                              ; preds = %628, %672, %655, %649
  %675 = phi i1 [ false, %672 ], [ false, %655 ], [ true, %649 ], [ true, %628 ]
  %676 = phi %"class.WTF::String"* [ %656, %672 ], [ %656, %655 ], [ %653, %649 ], [ %629, %628 ]
  %677 = phi %"class.WTF::StringImpl"* [ %657, %672 ], [ %657, %655 ], [ null, %649 ], [ null, %628 ]
  %678 = ptrtoint %"class.WTF::StringImpl"* %677 to i64
  %679 = bitcast %"class.WTF::String"* %676 to i64*
  %680 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %676, i64 0, i32 0, i32 0
  %681 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %680, align 8
  store i64 %678, i64* %679, align 8
  %682 = icmp eq %"class.WTF::StringImpl"* %681, null
  br i1 %682, label %696, label %683

683:                                              ; preds = %674
  %684 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %681, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %685 = load atomic i32, i32* %684 monotonic, align 4
  %686 = and i32 %685, 2
  %687 = icmp eq i32 %686, 0
  %688 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %681, i64 0, i32 0
  %689 = load i32, i32* %688, align 4
  br i1 %687, label %690, label %692

690:                                              ; preds = %683
  %691 = add i32 %689, -1
  store i32 %691, i32* %688, align 4
  br label %692

692:                                              ; preds = %690, %683
  %693 = phi i32 [ %691, %690 ], [ %689, %683 ]
  %694 = icmp eq i32 %693, 0
  br i1 %694, label %695, label %696

695:                                              ; preds = %692
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %681) #8
  br label %696

696:                                              ; preds = %674, %692, %695
  br i1 %675, label %710, label %697

697:                                              ; preds = %696
  %698 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %677, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %699 = load atomic i32, i32* %698 monotonic, align 4
  %700 = and i32 %699, 2
  %701 = icmp eq i32 %700, 0
  %702 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %677, i64 0, i32 0
  %703 = load i32, i32* %702, align 4
  br i1 %701, label %704, label %706

704:                                              ; preds = %697
  %705 = add i32 %703, -1
  store i32 %705, i32* %702, align 4
  br label %706

706:                                              ; preds = %704, %697
  %707 = phi i32 [ %705, %704 ], [ %703, %697 ]
  %708 = icmp eq i32 %707, 0
  br i1 %708, label %709, label %710

709:                                              ; preds = %706
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %677) #8
  br label %710

710:                                              ; preds = %696, %706, %709
  %711 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %712 = load i8*, i8** %711, align 8
  store i8* null, i8** %711, align 8
  %713 = icmp eq i8* %712, null
  br i1 %713, label %715, label %714

714:                                              ; preds = %710
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %712) #8
  br label %715

715:                                              ; preds = %714, %710
  %716 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %552, align 8
  %717 = icmp eq %"class.WTF::StringImpl"* %716, null
  br i1 %717, label %731, label %718

718:                                              ; preds = %715
  %719 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %716, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %720 = load atomic i32, i32* %719 monotonic, align 4
  %721 = and i32 %720, 2
  %722 = icmp eq i32 %721, 0
  %723 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %716, i64 0, i32 0
  %724 = load i32, i32* %723, align 4
  br i1 %722, label %725, label %727

725:                                              ; preds = %718
  %726 = add i32 %724, -1
  store i32 %726, i32* %723, align 4
  br label %727

727:                                              ; preds = %725, %718
  %728 = phi i32 [ %726, %725 ], [ %724, %718 ]
  %729 = icmp eq i32 %728, 0
  br i1 %729, label %730, label %731

730:                                              ; preds = %727
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %716) #8
  br label %731

731:                                              ; preds = %715, %727, %730
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %549) #8
  br label %754

732:                                              ; preds = %621, %548
  %733 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %734 = load i8*, i8** %733, align 8
  store i8* null, i8** %733, align 8
  %735 = icmp eq i8* %734, null
  br i1 %735, label %737, label %736

736:                                              ; preds = %732
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %734) #8
  br label %737

737:                                              ; preds = %736, %732
  %738 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %552, align 8
  %739 = icmp eq %"class.WTF::StringImpl"* %738, null
  br i1 %739, label %753, label %740

740:                                              ; preds = %737
  %741 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %738, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %742 = load atomic i32, i32* %741 monotonic, align 4
  %743 = and i32 %742, 2
  %744 = icmp eq i32 %743, 0
  %745 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %738, i64 0, i32 0
  %746 = load i32, i32* %745, align 4
  br i1 %744, label %747, label %749

747:                                              ; preds = %740
  %748 = add i32 %746, -1
  store i32 %748, i32* %745, align 4
  br label %749

749:                                              ; preds = %747, %740
  %750 = phi i32 [ %748, %747 ], [ %746, %740 ]
  %751 = icmp eq i32 %750, 0
  br i1 %751, label %752, label %753

752:                                              ; preds = %749
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %738) #8
  br label %753

753:                                              ; preds = %737, %749, %752
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %549) #8
  br label %1754

754:                                              ; preds = %731, %542
  %755 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 5, i32 0
  %756 = bitcast %"class.v8::Name"** %755 to %"class.v8::Value"**
  %757 = load %"class.v8::Value"*, %"class.v8::Value"** %756, align 8
  %758 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %757) #8
  %759 = icmp eq %"class.v8::Value"* %758, null
  br i1 %759, label %760, label %766

760:                                              ; preds = %754
  %761 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %762 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %763 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %762, align 8
  %764 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %763, i64 5
  %765 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %764, align 8
  call void %765(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %761) #8
  br label %1754

766:                                              ; preds = %754
  %767 = bitcast %"class.v8::Value"* %758 to i64*
  %768 = load i64, i64* %767, align 8
  %769 = and i64 %768, 3
  %770 = icmp eq i64 %769, 1
  br i1 %770, label %771, label %788

771:                                              ; preds = %766
  %772 = add i64 %768, -1
  %773 = inttoptr i64 %772 to i32*
  %774 = load i32, i32* %773, align 4
  %775 = and i64 %768, -4294967296
  %776 = zext i32 %774 to i64
  %777 = or i64 %775, %776
  %778 = add i64 %777, 7
  %779 = inttoptr i64 %778 to i16*
  %780 = load i16, i16* %779, align 2
  %781 = icmp eq i16 %780, 67
  br i1 %781, label %782, label %788

782:                                              ; preds = %771
  %783 = add i64 %768, 23
  %784 = inttoptr i64 %783 to i32*
  %785 = load i32, i32* %784, align 4
  %786 = and i32 %785, -2
  %787 = icmp eq i32 %786, 10
  br i1 %787, label %924, label %788

788:                                              ; preds = %771, %766, %782
  %789 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %758, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %790 = icmp eq %"class.WTF::StringImpl"* %789, null
  br i1 %790, label %820, label %791

791:                                              ; preds = %788
  %792 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %793 = load atomic i32, i32* %792 monotonic, align 4
  %794 = and i32 %793, 2
  %795 = icmp eq i32 %794, 0
  %796 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 0
  %797 = load i32, i32* %796, align 4
  br i1 %795, label %798, label %808

798:                                              ; preds = %791
  %799 = zext i32 %797 to i33
  %800 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %799, i33 1) #8
  %801 = extractvalue { i33, i1 } %800, 1
  %802 = extractvalue { i33, i1 } %800, 0
  %803 = icmp slt i33 %802, 0
  %804 = or i1 %801, %803
  br i1 %804, label %805, label %806, !prof !2

805:                                              ; preds = %798
  call void @llvm.trap() #8
  unreachable

806:                                              ; preds = %798
  %807 = trunc i33 %802 to i32
  store i32 %807, i32* %796, align 4
  br label %808

808:                                              ; preds = %791, %806
  %809 = phi i32 [ %807, %806 ], [ %797, %791 ]
  %810 = load atomic i32, i32* %792 monotonic, align 4
  %811 = and i32 %810, 2
  %812 = icmp eq i32 %811, 0
  br i1 %812, label %813, label %816

813:                                              ; preds = %808
  %814 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 0
  %815 = add i32 %809, -1
  store i32 %815, i32* %814, align 4
  br label %816

816:                                              ; preds = %813, %808
  %817 = phi i32 [ %815, %813 ], [ %809, %808 ]
  %818 = icmp eq i32 %817, 0
  br i1 %818, label %819, label %820

819:                                              ; preds = %816
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %789) #8
  br label %820

820:                                              ; preds = %788, %816, %819
  %821 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %822 = load i32, i32* %821, align 8
  %823 = icmp eq i32 %822, 0
  br i1 %823, label %824, label %910

824:                                              ; preds = %820
  br i1 %790, label %842, label %825

825:                                              ; preds = %824
  %826 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %827 = load atomic i32, i32* %826 monotonic, align 4
  %828 = and i32 %827, 2
  %829 = icmp eq i32 %828, 0
  br i1 %829, label %830, label %844

830:                                              ; preds = %825
  %831 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 0
  %832 = load i32, i32* %831, align 4
  %833 = zext i32 %832 to i33
  %834 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %833, i33 1) #8
  %835 = extractvalue { i33, i1 } %834, 1
  %836 = extractvalue { i33, i1 } %834, 0
  %837 = icmp slt i33 %836, 0
  %838 = or i1 %835, %837
  br i1 %838, label %839, label %840, !prof !2

839:                                              ; preds = %830
  call void @llvm.trap() #8
  unreachable

840:                                              ; preds = %830
  %841 = trunc i33 %836 to i32
  store i32 %841, i32* %831, align 4
  br label %844

842:                                              ; preds = %824
  %843 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 11
  br label %861

844:                                              ; preds = %825, %840
  %845 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 11
  %846 = load atomic i32, i32* %826 monotonic, align 4
  %847 = and i32 %846, 2
  %848 = icmp eq i32 %847, 0
  br i1 %848, label %849, label %861

849:                                              ; preds = %844
  %850 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 0
  %851 = load i32, i32* %850, align 4
  %852 = zext i32 %851 to i33
  %853 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %852, i33 1) #8
  %854 = extractvalue { i33, i1 } %853, 1
  %855 = extractvalue { i33, i1 } %853, 0
  %856 = icmp slt i33 %855, 0
  %857 = or i1 %854, %856
  br i1 %857, label %858, label %859, !prof !2

858:                                              ; preds = %849
  call void @llvm.trap() #8
  unreachable

859:                                              ; preds = %849
  %860 = trunc i33 %855 to i32
  store i32 %860, i32* %850, align 4
  br label %861

861:                                              ; preds = %842, %859, %844
  %862 = phi i1 [ false, %859 ], [ false, %844 ], [ true, %842 ]
  %863 = phi %"class.WTF::String"* [ %845, %859 ], [ %845, %844 ], [ %843, %842 ]
  %864 = ptrtoint %"class.WTF::StringImpl"* %789 to i64
  %865 = bitcast %"class.WTF::String"* %863 to i64*
  %866 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 11, i32 0, i32 0
  %867 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %866, align 8
  store i64 %864, i64* %865, align 8
  %868 = icmp eq %"class.WTF::StringImpl"* %867, null
  br i1 %868, label %882, label %869

869:                                              ; preds = %861
  %870 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %867, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %871 = load atomic i32, i32* %870 monotonic, align 4
  %872 = and i32 %871, 2
  %873 = icmp eq i32 %872, 0
  %874 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %867, i64 0, i32 0
  %875 = load i32, i32* %874, align 4
  br i1 %873, label %876, label %878

876:                                              ; preds = %869
  %877 = add i32 %875, -1
  store i32 %877, i32* %874, align 4
  br label %878

878:                                              ; preds = %876, %869
  %879 = phi i32 [ %877, %876 ], [ %875, %869 ]
  %880 = icmp eq i32 %879, 0
  br i1 %880, label %881, label %882

881:                                              ; preds = %878
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %867) #8
  br label %882

882:                                              ; preds = %861, %878, %881
  br i1 %862, label %896, label %883

883:                                              ; preds = %882
  %884 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %885 = load atomic i32, i32* %884 monotonic, align 4
  %886 = and i32 %885, 2
  %887 = icmp eq i32 %886, 0
  %888 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 0
  %889 = load i32, i32* %888, align 4
  br i1 %887, label %890, label %892

890:                                              ; preds = %883
  %891 = add i32 %889, -1
  store i32 %891, i32* %888, align 4
  br label %892

892:                                              ; preds = %890, %883
  %893 = phi i32 [ %891, %890 ], [ %889, %883 ]
  %894 = icmp eq i32 %893, 0
  br i1 %894, label %895, label %896

895:                                              ; preds = %892
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %789) #8
  br label %896

896:                                              ; preds = %895, %892, %882
  br i1 %790, label %924, label %897

897:                                              ; preds = %896
  %898 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %899 = load atomic i32, i32* %898 monotonic, align 4
  %900 = and i32 %899, 2
  %901 = icmp eq i32 %900, 0
  %902 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 0
  %903 = load i32, i32* %902, align 4
  br i1 %901, label %904, label %906

904:                                              ; preds = %897
  %905 = add i32 %903, -1
  store i32 %905, i32* %902, align 4
  br label %906

906:                                              ; preds = %904, %897
  %907 = phi i32 [ %905, %904 ], [ %903, %897 ]
  %908 = icmp eq i32 %907, 0
  br i1 %908, label %909, label %924

909:                                              ; preds = %906
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %789) #8
  br label %924

910:                                              ; preds = %820
  br i1 %790, label %1754, label %911

911:                                              ; preds = %910
  %912 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %913 = load atomic i32, i32* %912 monotonic, align 4
  %914 = and i32 %913, 2
  %915 = icmp eq i32 %914, 0
  %916 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 0
  %917 = load i32, i32* %916, align 4
  br i1 %915, label %918, label %920

918:                                              ; preds = %911
  %919 = add i32 %917, -1
  store i32 %919, i32* %916, align 4
  br label %920

920:                                              ; preds = %918, %911
  %921 = phi i32 [ %919, %918 ], [ %917, %911 ]
  %922 = icmp eq i32 %921, 0
  br i1 %922, label %923, label %1754

923:                                              ; preds = %920
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %789) #8
  br label %1754

924:                                              ; preds = %909, %906, %896, %782
  %925 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 7, i32 0
  %926 = bitcast %"class.v8::Name"** %925 to %"class.v8::Value"**
  %927 = load %"class.v8::Value"*, %"class.v8::Value"** %926, align 8
  %928 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %927) #8
  %929 = icmp eq %"class.v8::Value"* %928, null
  br i1 %929, label %930, label %936

930:                                              ; preds = %924
  %931 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %932 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %933 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %932, align 8
  %934 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %933, i64 5
  %935 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %934, align 8
  call void %935(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %931) #8
  br label %1754

936:                                              ; preds = %924
  %937 = bitcast %"class.v8::Value"* %928 to i64*
  %938 = load i64, i64* %937, align 8
  %939 = and i64 %938, 3
  %940 = icmp eq i64 %939, 1
  br i1 %940, label %941, label %958

941:                                              ; preds = %936
  %942 = add i64 %938, -1
  %943 = inttoptr i64 %942 to i32*
  %944 = load i32, i32* %943, align 4
  %945 = and i64 %938, -4294967296
  %946 = zext i32 %944 to i64
  %947 = or i64 %945, %946
  %948 = add i64 %947, 7
  %949 = inttoptr i64 %948 to i16*
  %950 = load i16, i16* %949, align 2
  %951 = icmp eq i16 %950, 67
  br i1 %951, label %952, label %958

952:                                              ; preds = %941
  %953 = add i64 %938, 23
  %954 = inttoptr i64 %953 to i32*
  %955 = load i32, i32* %954, align 4
  %956 = and i32 %955, -2
  %957 = icmp eq i32 %956, 10
  br i1 %957, label %1098, label %958

958:                                              ; preds = %941, %936, %952
  %959 = bitcast %"class.blink::V8StringResource"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %959) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %959, i8 -86, i64 152, i1 false)
  %960 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %928, %"class.v8::Value"** %960, align 8
  %961 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 1
  store i32 0, i32* %961, align 8
  %962 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %962, align 8
  %963 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 3, i32 1
  %964 = bitcast %"class.std::__1::unique_ptr.275"* %963 to i64*
  store i64 0, i64* %964, align 8
  %965 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %13, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %965, label %966, label %1076

966:                                              ; preds = %958
  %967 = load %"class.v8::Value"*, %"class.v8::Value"** %960, align 8
  %968 = icmp eq %"class.v8::Value"* %967, null
  br i1 %968, label %969, label %993, !prof !2

969:                                              ; preds = %966
  %970 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %962, align 8
  %971 = icmp eq %"class.WTF::StringImpl"* %970, null
  br i1 %971, label %972, label %974

972:                                              ; preds = %969
  %973 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 13
  br label %1018

974:                                              ; preds = %969
  %975 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %970, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %976 = load atomic i32, i32* %975 monotonic, align 4
  %977 = and i32 %976, 2
  %978 = icmp eq i32 %977, 0
  br i1 %978, label %979, label %991

979:                                              ; preds = %974
  %980 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %970, i64 0, i32 0
  %981 = load i32, i32* %980, align 4
  %982 = zext i32 %981 to i33
  %983 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %982, i33 1) #8
  %984 = extractvalue { i33, i1 } %983, 1
  %985 = extractvalue { i33, i1 } %983, 0
  %986 = icmp slt i33 %985, 0
  %987 = or i1 %984, %986
  br i1 %987, label %988, label %989, !prof !2

988:                                              ; preds = %979
  call void @llvm.trap() #8
  unreachable

989:                                              ; preds = %979
  %990 = trunc i33 %985 to i32
  store i32 %990, i32* %980, align 4
  br label %991

991:                                              ; preds = %974, %989
  %992 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 13
  br label %999

993:                                              ; preds = %966
  %994 = bitcast %"class.v8::Value"* %967 to %"class.v8::String"*
  %995 = load i32, i32* %961, align 8
  %996 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %994, i32 %995) #8
  %997 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 13
  %998 = icmp eq %"class.WTF::StringImpl"* %996, null
  br i1 %998, label %1018, label %999

999:                                              ; preds = %991, %993
  %1000 = phi %"class.WTF::String"* [ %992, %991 ], [ %997, %993 ]
  %1001 = phi %"class.WTF::StringImpl"* [ %970, %991 ], [ %996, %993 ]
  %1002 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1001, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1003 = load atomic i32, i32* %1002 monotonic, align 4
  %1004 = and i32 %1003, 2
  %1005 = icmp eq i32 %1004, 0
  br i1 %1005, label %1006, label %1018

1006:                                             ; preds = %999
  %1007 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1001, i64 0, i32 0
  %1008 = load i32, i32* %1007, align 4
  %1009 = zext i32 %1008 to i33
  %1010 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1009, i33 1) #8
  %1011 = extractvalue { i33, i1 } %1010, 1
  %1012 = extractvalue { i33, i1 } %1010, 0
  %1013 = icmp slt i33 %1012, 0
  %1014 = or i1 %1011, %1013
  br i1 %1014, label %1015, label %1016, !prof !2

1015:                                             ; preds = %1006
  call void @llvm.trap() #8
  unreachable

1016:                                             ; preds = %1006
  %1017 = trunc i33 %1012 to i32
  store i32 %1017, i32* %1007, align 4
  br label %1018

1018:                                             ; preds = %972, %1016, %999, %993
  %1019 = phi i1 [ false, %1016 ], [ false, %999 ], [ true, %993 ], [ true, %972 ]
  %1020 = phi %"class.WTF::String"* [ %1000, %1016 ], [ %1000, %999 ], [ %997, %993 ], [ %973, %972 ]
  %1021 = phi %"class.WTF::StringImpl"* [ %1001, %1016 ], [ %1001, %999 ], [ null, %993 ], [ null, %972 ]
  %1022 = ptrtoint %"class.WTF::StringImpl"* %1021 to i64
  %1023 = bitcast %"class.WTF::String"* %1020 to i64*
  %1024 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1020, i64 0, i32 0, i32 0
  %1025 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1024, align 8
  store i64 %1022, i64* %1023, align 8
  %1026 = icmp eq %"class.WTF::StringImpl"* %1025, null
  br i1 %1026, label %1040, label %1027

1027:                                             ; preds = %1018
  %1028 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1025, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1029 = load atomic i32, i32* %1028 monotonic, align 4
  %1030 = and i32 %1029, 2
  %1031 = icmp eq i32 %1030, 0
  %1032 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1025, i64 0, i32 0
  %1033 = load i32, i32* %1032, align 4
  br i1 %1031, label %1034, label %1036

1034:                                             ; preds = %1027
  %1035 = add i32 %1033, -1
  store i32 %1035, i32* %1032, align 4
  br label %1036

1036:                                             ; preds = %1034, %1027
  %1037 = phi i32 [ %1035, %1034 ], [ %1033, %1027 ]
  %1038 = icmp eq i32 %1037, 0
  br i1 %1038, label %1039, label %1040

1039:                                             ; preds = %1036
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1025) #8
  br label %1040

1040:                                             ; preds = %1018, %1036, %1039
  br i1 %1019, label %1054, label %1041

1041:                                             ; preds = %1040
  %1042 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1021, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1043 = load atomic i32, i32* %1042 monotonic, align 4
  %1044 = and i32 %1043, 2
  %1045 = icmp eq i32 %1044, 0
  %1046 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1021, i64 0, i32 0
  %1047 = load i32, i32* %1046, align 4
  br i1 %1045, label %1048, label %1050

1048:                                             ; preds = %1041
  %1049 = add i32 %1047, -1
  store i32 %1049, i32* %1046, align 4
  br label %1050

1050:                                             ; preds = %1048, %1041
  %1051 = phi i32 [ %1049, %1048 ], [ %1047, %1041 ]
  %1052 = icmp eq i32 %1051, 0
  br i1 %1052, label %1053, label %1054

1053:                                             ; preds = %1050
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1021) #8
  br label %1054

1054:                                             ; preds = %1040, %1050, %1053
  %1055 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1056 = load i8*, i8** %1055, align 8
  store i8* null, i8** %1055, align 8
  %1057 = icmp eq i8* %1056, null
  br i1 %1057, label %1059, label %1058

1058:                                             ; preds = %1054
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1056) #8
  br label %1059

1059:                                             ; preds = %1058, %1054
  %1060 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %962, align 8
  %1061 = icmp eq %"class.WTF::StringImpl"* %1060, null
  br i1 %1061, label %1075, label %1062

1062:                                             ; preds = %1059
  %1063 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1060, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1064 = load atomic i32, i32* %1063 monotonic, align 4
  %1065 = and i32 %1064, 2
  %1066 = icmp eq i32 %1065, 0
  %1067 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1060, i64 0, i32 0
  %1068 = load i32, i32* %1067, align 4
  br i1 %1066, label %1069, label %1071

1069:                                             ; preds = %1062
  %1070 = add i32 %1068, -1
  store i32 %1070, i32* %1067, align 4
  br label %1071

1071:                                             ; preds = %1069, %1062
  %1072 = phi i32 [ %1070, %1069 ], [ %1068, %1062 ]
  %1073 = icmp eq i32 %1072, 0
  br i1 %1073, label %1074, label %1075

1074:                                             ; preds = %1071
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1060) #8
  br label %1075

1075:                                             ; preds = %1059, %1071, %1074
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %959) #8
  br label %1098

1076:                                             ; preds = %958
  %1077 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1078 = load i8*, i8** %1077, align 8
  store i8* null, i8** %1077, align 8
  %1079 = icmp eq i8* %1078, null
  br i1 %1079, label %1081, label %1080

1080:                                             ; preds = %1076
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1078) #8
  br label %1081

1081:                                             ; preds = %1080, %1076
  %1082 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %962, align 8
  %1083 = icmp eq %"class.WTF::StringImpl"* %1082, null
  br i1 %1083, label %1097, label %1084

1084:                                             ; preds = %1081
  %1085 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1082, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1086 = load atomic i32, i32* %1085 monotonic, align 4
  %1087 = and i32 %1086, 2
  %1088 = icmp eq i32 %1087, 0
  %1089 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1082, i64 0, i32 0
  %1090 = load i32, i32* %1089, align 4
  br i1 %1088, label %1091, label %1093

1091:                                             ; preds = %1084
  %1092 = add i32 %1090, -1
  store i32 %1092, i32* %1089, align 4
  br label %1093

1093:                                             ; preds = %1091, %1084
  %1094 = phi i32 [ %1092, %1091 ], [ %1090, %1084 ]
  %1095 = icmp eq i32 %1094, 0
  br i1 %1095, label %1096, label %1097

1096:                                             ; preds = %1093
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1082) #8
  br label %1097

1097:                                             ; preds = %1081, %1093, %1096
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %959) #8
  br label %1754

1098:                                             ; preds = %1075, %952
  %1099 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 8, i32 0
  %1100 = bitcast %"class.v8::Name"** %1099 to %"class.v8::Value"**
  %1101 = load %"class.v8::Value"*, %"class.v8::Value"** %1100, align 8
  %1102 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %1101) #8
  %1103 = icmp eq %"class.v8::Value"* %1102, null
  br i1 %1103, label %1104, label %1110

1104:                                             ; preds = %1098
  %1105 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1106 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1107 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1106, align 8
  %1108 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1107, i64 5
  %1109 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1108, align 8
  call void %1109(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1105) #8
  br label %1754

1110:                                             ; preds = %1098
  %1111 = bitcast %"class.v8::Value"* %1102 to i64*
  %1112 = load i64, i64* %1111, align 8
  %1113 = and i64 %1112, 3
  %1114 = icmp eq i64 %1113, 1
  br i1 %1114, label %1115, label %1132

1115:                                             ; preds = %1110
  %1116 = add i64 %1112, -1
  %1117 = inttoptr i64 %1116 to i32*
  %1118 = load i32, i32* %1117, align 4
  %1119 = and i64 %1112, -4294967296
  %1120 = zext i32 %1118 to i64
  %1121 = or i64 %1119, %1120
  %1122 = add i64 %1121, 7
  %1123 = inttoptr i64 %1122 to i16*
  %1124 = load i16, i16* %1123, align 2
  %1125 = icmp eq i16 %1124, 67
  br i1 %1125, label %1126, label %1132

1126:                                             ; preds = %1115
  %1127 = add i64 %1112, 23
  %1128 = inttoptr i64 %1127 to i32*
  %1129 = load i32, i32* %1128, align 4
  %1130 = and i32 %1129, -2
  %1131 = icmp eq i32 %1130, 10
  br i1 %1131, label %1148, label %1132

1132:                                             ; preds = %1115, %1110, %1126
  %1133 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %1102) #8
  br i1 %1133, label %1134, label %1137, !prof !3

1134:                                             ; preds = %1132
  %1135 = bitcast %"class.v8::Value"* %1102 to %"class.v8::Boolean"*
  %1136 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %1135) #8
  br label %1139

1137:                                             ; preds = %1132
  %1138 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %1102, %"class.v8::Isolate"* %0) #8
  br label %1139

1139:                                             ; preds = %1134, %1137
  %1140 = phi i1 [ %1136, %1134 ], [ %1138, %1137 ]
  %1141 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1142 = load i32, i32* %1141, align 8
  %1143 = icmp eq i32 %1142, 0
  br i1 %1143, label %1144, label %1754

1144:                                             ; preds = %1139
  %1145 = zext i1 %1140 to i8
  %1146 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 14
  store i8 %1145, i8* %1146, align 8
  %1147 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 2
  store i8 1, i8* %1147, align 1
  br label %1148

1148:                                             ; preds = %1144, %1126
  %1149 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 9, i32 0
  %1150 = bitcast %"class.v8::Name"** %1149 to %"class.v8::Value"**
  %1151 = load %"class.v8::Value"*, %"class.v8::Value"** %1150, align 8
  %1152 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %1151) #8
  %1153 = icmp eq %"class.v8::Value"* %1152, null
  br i1 %1153, label %1154, label %1160

1154:                                             ; preds = %1148
  %1155 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1156 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1157 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1156, align 8
  %1158 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1157, i64 5
  %1159 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1158, align 8
  call void %1159(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1155) #8
  br label %1754

1160:                                             ; preds = %1148
  %1161 = bitcast %"class.v8::Value"* %1152 to i64*
  %1162 = load i64, i64* %1161, align 8
  %1163 = and i64 %1162, 3
  %1164 = icmp eq i64 %1163, 1
  br i1 %1164, label %1165, label %1182

1165:                                             ; preds = %1160
  %1166 = add i64 %1162, -1
  %1167 = inttoptr i64 %1166 to i32*
  %1168 = load i32, i32* %1167, align 4
  %1169 = and i64 %1162, -4294967296
  %1170 = zext i32 %1168 to i64
  %1171 = or i64 %1169, %1170
  %1172 = add i64 %1171, 7
  %1173 = inttoptr i64 %1172 to i16*
  %1174 = load i16, i16* %1173, align 2
  %1175 = icmp eq i16 %1174, 67
  br i1 %1175, label %1176, label %1182

1176:                                             ; preds = %1165
  %1177 = add i64 %1162, 23
  %1178 = inttoptr i64 %1177 to i32*
  %1179 = load i32, i32* %1178, align 4
  %1180 = and i32 %1179, -2
  %1181 = icmp eq i32 %1180, 10
  br i1 %1181, label %1198, label %1182

1182:                                             ; preds = %1165, %1160, %1176
  %1183 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %1152) #8
  br i1 %1183, label %1184, label %1187, !prof !3

1184:                                             ; preds = %1182
  %1185 = bitcast %"class.v8::Value"* %1152 to %"class.v8::Boolean"*
  %1186 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %1185) #8
  br label %1189

1187:                                             ; preds = %1182
  %1188 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %1152, %"class.v8::Isolate"* %0) #8
  br label %1189

1189:                                             ; preds = %1184, %1187
  %1190 = phi i1 [ %1186, %1184 ], [ %1188, %1187 ]
  %1191 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1192 = load i32, i32* %1191, align 8
  %1193 = icmp eq i32 %1192, 0
  br i1 %1193, label %1194, label %1754

1194:                                             ; preds = %1189
  %1195 = zext i1 %1190 to i8
  %1196 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 15
  store i8 %1195, i8* %1196, align 1
  %1197 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 3
  store i8 1, i8* %1197, align 2
  br label %1198

1198:                                             ; preds = %1194, %1176
  %1199 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 11, i32 0
  %1200 = bitcast %"class.v8::Name"** %1199 to %"class.v8::Value"**
  %1201 = load %"class.v8::Value"*, %"class.v8::Value"** %1200, align 8
  %1202 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %1201) #8
  %1203 = icmp eq %"class.v8::Value"* %1202, null
  br i1 %1203, label %1204, label %1210

1204:                                             ; preds = %1198
  %1205 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1206 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1207 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1206, align 8
  %1208 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1207, i64 5
  %1209 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1208, align 8
  call void %1209(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1205) #8
  br label %1754

1210:                                             ; preds = %1198
  %1211 = bitcast %"class.v8::Value"* %1202 to i64*
  %1212 = load i64, i64* %1211, align 8
  %1213 = and i64 %1212, 3
  %1214 = icmp eq i64 %1213, 1
  br i1 %1214, label %1215, label %1232

1215:                                             ; preds = %1210
  %1216 = add i64 %1212, -1
  %1217 = inttoptr i64 %1216 to i32*
  %1218 = load i32, i32* %1217, align 4
  %1219 = and i64 %1212, -4294967296
  %1220 = zext i32 %1218 to i64
  %1221 = or i64 %1219, %1220
  %1222 = add i64 %1221, 7
  %1223 = inttoptr i64 %1222 to i16*
  %1224 = load i16, i16* %1223, align 2
  %1225 = icmp eq i16 %1224, 67
  br i1 %1225, label %1226, label %1232

1226:                                             ; preds = %1215
  %1227 = add i64 %1212, 23
  %1228 = inttoptr i64 %1227 to i32*
  %1229 = load i32, i32* %1228, align 4
  %1230 = and i32 %1229, -2
  %1231 = icmp eq i32 %1230, 10
  br i1 %1231, label %1248, label %1232

1232:                                             ; preds = %1215, %1210, %1226
  %1233 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %1202) #8
  br i1 %1233, label %1234, label %1237, !prof !3

1234:                                             ; preds = %1232
  %1235 = bitcast %"class.v8::Value"* %1202 to %"class.v8::Boolean"*
  %1236 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %1235) #8
  br label %1239

1237:                                             ; preds = %1232
  %1238 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %1202, %"class.v8::Isolate"* %0) #8
  br label %1239

1239:                                             ; preds = %1234, %1237
  %1240 = phi i1 [ %1236, %1234 ], [ %1238, %1237 ]
  %1241 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1242 = load i32, i32* %1241, align 8
  %1243 = icmp eq i32 %1242, 0
  br i1 %1243, label %1244, label %1754

1244:                                             ; preds = %1239
  %1245 = zext i1 %1240 to i8
  %1246 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 17
  store i8 %1245, i8* %1246, align 8
  %1247 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 4
  store i8 1, i8* %1247, align 1
  br label %1248

1248:                                             ; preds = %1244, %1226
  %1249 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 12, i32 0
  %1250 = bitcast %"class.v8::Name"** %1249 to %"class.v8::Value"**
  %1251 = load %"class.v8::Value"*, %"class.v8::Value"** %1250, align 8
  %1252 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %1251) #8
  %1253 = icmp eq %"class.v8::Value"* %1252, null
  br i1 %1253, label %1254, label %1260

1254:                                             ; preds = %1248
  %1255 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1256 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1257 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1256, align 8
  %1258 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1257, i64 5
  %1259 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1258, align 8
  call void %1259(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1255) #8
  br label %1754

1260:                                             ; preds = %1248
  %1261 = bitcast %"class.v8::Value"* %1252 to i64*
  %1262 = load i64, i64* %1261, align 8
  %1263 = and i64 %1262, 3
  %1264 = icmp eq i64 %1263, 1
  br i1 %1264, label %1265, label %1282

1265:                                             ; preds = %1260
  %1266 = add i64 %1262, -1
  %1267 = inttoptr i64 %1266 to i32*
  %1268 = load i32, i32* %1267, align 4
  %1269 = and i64 %1262, -4294967296
  %1270 = zext i32 %1268 to i64
  %1271 = or i64 %1269, %1270
  %1272 = add i64 %1271, 7
  %1273 = inttoptr i64 %1272 to i16*
  %1274 = load i16, i16* %1273, align 2
  %1275 = icmp eq i16 %1274, 67
  br i1 %1275, label %1276, label %1282

1276:                                             ; preds = %1265
  %1277 = add i64 %1262, 23
  %1278 = inttoptr i64 %1277 to i32*
  %1279 = load i32, i32* %1278, align 4
  %1280 = and i32 %1279, -2
  %1281 = icmp eq i32 %1280, 10
  br i1 %1281, label %1422, label %1282

1282:                                             ; preds = %1265, %1260, %1276
  %1283 = bitcast %"class.blink::V8StringResource"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1283) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1283, i8 -86, i64 152, i1 false)
  %1284 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1252, %"class.v8::Value"** %1284, align 8
  %1285 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 1
  store i32 0, i32* %1285, align 8
  %1286 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1286, align 8
  %1287 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 3, i32 1
  %1288 = bitcast %"class.std::__1::unique_ptr.275"* %1287 to i64*
  store i64 0, i64* %1288, align 8
  %1289 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %14, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1289, label %1290, label %1400

1290:                                             ; preds = %1282
  %1291 = load %"class.v8::Value"*, %"class.v8::Value"** %1284, align 8
  %1292 = icmp eq %"class.v8::Value"* %1291, null
  br i1 %1292, label %1293, label %1317, !prof !2

1293:                                             ; preds = %1290
  %1294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1286, align 8
  %1295 = icmp eq %"class.WTF::StringImpl"* %1294, null
  br i1 %1295, label %1296, label %1298

1296:                                             ; preds = %1293
  %1297 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 18
  br label %1342

1298:                                             ; preds = %1293
  %1299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1294, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1300 = load atomic i32, i32* %1299 monotonic, align 4
  %1301 = and i32 %1300, 2
  %1302 = icmp eq i32 %1301, 0
  br i1 %1302, label %1303, label %1315

1303:                                             ; preds = %1298
  %1304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1294, i64 0, i32 0
  %1305 = load i32, i32* %1304, align 4
  %1306 = zext i32 %1305 to i33
  %1307 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1306, i33 1) #8
  %1308 = extractvalue { i33, i1 } %1307, 1
  %1309 = extractvalue { i33, i1 } %1307, 0
  %1310 = icmp slt i33 %1309, 0
  %1311 = or i1 %1308, %1310
  br i1 %1311, label %1312, label %1313, !prof !2

1312:                                             ; preds = %1303
  call void @llvm.trap() #8
  unreachable

1313:                                             ; preds = %1303
  %1314 = trunc i33 %1309 to i32
  store i32 %1314, i32* %1304, align 4
  br label %1315

1315:                                             ; preds = %1298, %1313
  %1316 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 18
  br label %1323

1317:                                             ; preds = %1290
  %1318 = bitcast %"class.v8::Value"* %1291 to %"class.v8::String"*
  %1319 = load i32, i32* %1285, align 8
  %1320 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1318, i32 %1319) #8
  %1321 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 18
  %1322 = icmp eq %"class.WTF::StringImpl"* %1320, null
  br i1 %1322, label %1342, label %1323

1323:                                             ; preds = %1315, %1317
  %1324 = phi %"class.WTF::String"* [ %1316, %1315 ], [ %1321, %1317 ]
  %1325 = phi %"class.WTF::StringImpl"* [ %1294, %1315 ], [ %1320, %1317 ]
  %1326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1325, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1327 = load atomic i32, i32* %1326 monotonic, align 4
  %1328 = and i32 %1327, 2
  %1329 = icmp eq i32 %1328, 0
  br i1 %1329, label %1330, label %1342

1330:                                             ; preds = %1323
  %1331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1325, i64 0, i32 0
  %1332 = load i32, i32* %1331, align 4
  %1333 = zext i32 %1332 to i33
  %1334 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1333, i33 1) #8
  %1335 = extractvalue { i33, i1 } %1334, 1
  %1336 = extractvalue { i33, i1 } %1334, 0
  %1337 = icmp slt i33 %1336, 0
  %1338 = or i1 %1335, %1337
  br i1 %1338, label %1339, label %1340, !prof !2

1339:                                             ; preds = %1330
  call void @llvm.trap() #8
  unreachable

1340:                                             ; preds = %1330
  %1341 = trunc i33 %1336 to i32
  store i32 %1341, i32* %1331, align 4
  br label %1342

1342:                                             ; preds = %1296, %1340, %1323, %1317
  %1343 = phi i1 [ false, %1340 ], [ false, %1323 ], [ true, %1317 ], [ true, %1296 ]
  %1344 = phi %"class.WTF::String"* [ %1324, %1340 ], [ %1324, %1323 ], [ %1321, %1317 ], [ %1297, %1296 ]
  %1345 = phi %"class.WTF::StringImpl"* [ %1325, %1340 ], [ %1325, %1323 ], [ null, %1317 ], [ null, %1296 ]
  %1346 = ptrtoint %"class.WTF::StringImpl"* %1345 to i64
  %1347 = bitcast %"class.WTF::String"* %1344 to i64*
  %1348 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1344, i64 0, i32 0, i32 0
  %1349 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1348, align 8
  store i64 %1346, i64* %1347, align 8
  %1350 = icmp eq %"class.WTF::StringImpl"* %1349, null
  br i1 %1350, label %1364, label %1351

1351:                                             ; preds = %1342
  %1352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1349, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1353 = load atomic i32, i32* %1352 monotonic, align 4
  %1354 = and i32 %1353, 2
  %1355 = icmp eq i32 %1354, 0
  %1356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1349, i64 0, i32 0
  %1357 = load i32, i32* %1356, align 4
  br i1 %1355, label %1358, label %1360

1358:                                             ; preds = %1351
  %1359 = add i32 %1357, -1
  store i32 %1359, i32* %1356, align 4
  br label %1360

1360:                                             ; preds = %1358, %1351
  %1361 = phi i32 [ %1359, %1358 ], [ %1357, %1351 ]
  %1362 = icmp eq i32 %1361, 0
  br i1 %1362, label %1363, label %1364

1363:                                             ; preds = %1360
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1349) #8
  br label %1364

1364:                                             ; preds = %1342, %1360, %1363
  br i1 %1343, label %1378, label %1365

1365:                                             ; preds = %1364
  %1366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1345, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1367 = load atomic i32, i32* %1366 monotonic, align 4
  %1368 = and i32 %1367, 2
  %1369 = icmp eq i32 %1368, 0
  %1370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1345, i64 0, i32 0
  %1371 = load i32, i32* %1370, align 4
  br i1 %1369, label %1372, label %1374

1372:                                             ; preds = %1365
  %1373 = add i32 %1371, -1
  store i32 %1373, i32* %1370, align 4
  br label %1374

1374:                                             ; preds = %1372, %1365
  %1375 = phi i32 [ %1373, %1372 ], [ %1371, %1365 ]
  %1376 = icmp eq i32 %1375, 0
  br i1 %1376, label %1377, label %1378

1377:                                             ; preds = %1374
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1345) #8
  br label %1378

1378:                                             ; preds = %1364, %1374, %1377
  %1379 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1380 = load i8*, i8** %1379, align 8
  store i8* null, i8** %1379, align 8
  %1381 = icmp eq i8* %1380, null
  br i1 %1381, label %1383, label %1382

1382:                                             ; preds = %1378
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1380) #8
  br label %1383

1383:                                             ; preds = %1382, %1378
  %1384 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1286, align 8
  %1385 = icmp eq %"class.WTF::StringImpl"* %1384, null
  br i1 %1385, label %1399, label %1386

1386:                                             ; preds = %1383
  %1387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1384, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1388 = load atomic i32, i32* %1387 monotonic, align 4
  %1389 = and i32 %1388, 2
  %1390 = icmp eq i32 %1389, 0
  %1391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1384, i64 0, i32 0
  %1392 = load i32, i32* %1391, align 4
  br i1 %1390, label %1393, label %1395

1393:                                             ; preds = %1386
  %1394 = add i32 %1392, -1
  store i32 %1394, i32* %1391, align 4
  br label %1395

1395:                                             ; preds = %1393, %1386
  %1396 = phi i32 [ %1394, %1393 ], [ %1392, %1386 ]
  %1397 = icmp eq i32 %1396, 0
  br i1 %1397, label %1398, label %1399

1398:                                             ; preds = %1395
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1384) #8
  br label %1399

1399:                                             ; preds = %1383, %1395, %1398
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1283) #8
  br label %1422

1400:                                             ; preds = %1282
  %1401 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1402 = load i8*, i8** %1401, align 8
  store i8* null, i8** %1401, align 8
  %1403 = icmp eq i8* %1402, null
  br i1 %1403, label %1405, label %1404

1404:                                             ; preds = %1400
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1402) #8
  br label %1405

1405:                                             ; preds = %1404, %1400
  %1406 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1286, align 8
  %1407 = icmp eq %"class.WTF::StringImpl"* %1406, null
  br i1 %1407, label %1421, label %1408

1408:                                             ; preds = %1405
  %1409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1406, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1410 = load atomic i32, i32* %1409 monotonic, align 4
  %1411 = and i32 %1410, 2
  %1412 = icmp eq i32 %1411, 0
  %1413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1406, i64 0, i32 0
  %1414 = load i32, i32* %1413, align 4
  br i1 %1412, label %1415, label %1417

1415:                                             ; preds = %1408
  %1416 = add i32 %1414, -1
  store i32 %1416, i32* %1413, align 4
  br label %1417

1417:                                             ; preds = %1415, %1408
  %1418 = phi i32 [ %1416, %1415 ], [ %1414, %1408 ]
  %1419 = icmp eq i32 %1418, 0
  br i1 %1419, label %1420, label %1421

1420:                                             ; preds = %1417
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1406) #8
  br label %1421

1421:                                             ; preds = %1405, %1417, %1420
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1283) #8
  br label %1754

1422:                                             ; preds = %1399, %1276
  %1423 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 13, i32 0
  %1424 = bitcast %"class.v8::Name"** %1423 to %"class.v8::Value"**
  %1425 = load %"class.v8::Value"*, %"class.v8::Value"** %1424, align 8
  %1426 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %1425) #8
  %1427 = icmp eq %"class.v8::Value"* %1426, null
  br i1 %1427, label %1428, label %1434

1428:                                             ; preds = %1422
  %1429 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1430 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1431 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1430, align 8
  %1432 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1431, i64 5
  %1433 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1432, align 8
  call void %1433(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1429) #8
  br label %1754

1434:                                             ; preds = %1422
  %1435 = bitcast %"class.v8::Value"* %1426 to i64*
  %1436 = load i64, i64* %1435, align 8
  %1437 = and i64 %1436, 3
  %1438 = icmp eq i64 %1437, 1
  br i1 %1438, label %1439, label %1456

1439:                                             ; preds = %1434
  %1440 = add i64 %1436, -1
  %1441 = inttoptr i64 %1440 to i32*
  %1442 = load i32, i32* %1441, align 4
  %1443 = and i64 %1436, -4294967296
  %1444 = zext i32 %1442 to i64
  %1445 = or i64 %1443, %1444
  %1446 = add i64 %1445, 7
  %1447 = inttoptr i64 %1446 to i16*
  %1448 = load i16, i16* %1447, align 2
  %1449 = icmp eq i16 %1448, 67
  br i1 %1449, label %1450, label %1456

1450:                                             ; preds = %1439
  %1451 = add i64 %1436, 23
  %1452 = inttoptr i64 %1451 to i32*
  %1453 = load i32, i32* %1452, align 4
  %1454 = and i32 %1453, -2
  %1455 = icmp eq i32 %1454, 10
  br i1 %1455, label %1478, label %1456

1456:                                             ; preds = %1439, %1434, %1450
  %1457 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %1426) #8
  br i1 %1457, label %1458, label %1462, !prof !3

1458:                                             ; preds = %1456
  %1459 = bitcast %"class.v8::Value"* %1426 to %"class.v8::Uint32"*
  %1460 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %1459) #8
  %1461 = zext i32 %1460 to i64
  br label %1470

1462:                                             ; preds = %1456
  %1463 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %1426) #8
  br i1 %1463, label %1464, label %1468, !prof !3

1464:                                             ; preds = %1462
  %1465 = bitcast %"class.v8::Value"* %1426 to %"class.v8::Int32"*
  %1466 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %1465) #8
  %1467 = sext i32 %1466 to i64
  br label %1470

1468:                                             ; preds = %1462
  %1469 = call i64 @_ZN5blink12ToUInt64SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1426, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %1470

1470:                                             ; preds = %1458, %1464, %1468
  %1471 = phi i64 [ %1461, %1458 ], [ %1467, %1464 ], [ %1469, %1468 ]
  %1472 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1473 = load i32, i32* %1472, align 8
  %1474 = icmp eq i32 %1473, 0
  br i1 %1474, label %1475, label %1754

1475:                                             ; preds = %1470
  %1476 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 19
  store i64 %1471, i64* %1476, align 8
  %1477 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 5
  store i8 1, i8* %1477, align 4
  br label %1478

1478:                                             ; preds = %1475, %1450
  %1479 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 14, i32 0
  %1480 = bitcast %"class.v8::Name"** %1479 to %"class.v8::Value"**
  %1481 = load %"class.v8::Value"*, %"class.v8::Value"** %1480, align 8
  %1482 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %1481) #8
  %1483 = icmp eq %"class.v8::Value"* %1482, null
  br i1 %1483, label %1484, label %1490

1484:                                             ; preds = %1478
  %1485 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1486 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1487 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1486, align 8
  %1488 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1487, i64 5
  %1489 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1488, align 8
  call void %1489(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1485) #8
  br label %1754

1490:                                             ; preds = %1478
  %1491 = bitcast %"class.v8::Value"* %1482 to i64*
  %1492 = load i64, i64* %1491, align 8
  %1493 = and i64 %1492, 3
  %1494 = icmp eq i64 %1493, 1
  br i1 %1494, label %1495, label %1512

1495:                                             ; preds = %1490
  %1496 = add i64 %1492, -1
  %1497 = inttoptr i64 %1496 to i32*
  %1498 = load i32, i32* %1497, align 4
  %1499 = and i64 %1492, -4294967296
  %1500 = zext i32 %1498 to i64
  %1501 = or i64 %1499, %1500
  %1502 = add i64 %1501, 7
  %1503 = inttoptr i64 %1502 to i16*
  %1504 = load i16, i16* %1503, align 2
  %1505 = icmp eq i16 %1504, 67
  br i1 %1505, label %1506, label %1512

1506:                                             ; preds = %1495
  %1507 = add i64 %1492, 23
  %1508 = inttoptr i64 %1507 to i32*
  %1509 = load i32, i32* %1508, align 4
  %1510 = and i32 %1509, -2
  %1511 = icmp eq i32 %1510, 10
  br i1 %1511, label %1520, label %1512

1512:                                             ; preds = %1495, %1490, %1506
  %1513 = bitcast %"class.blink::UnsignedLongOrUnsignedLongSequence"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1513) #8
  %1514 = bitcast %"class.blink::UnsignedLongOrUnsignedLongSequence"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1514, i8 -86, i64 24, i1 false)
  call void @_ZN5blink34UnsignedLongOrUnsignedLongSequenceC1Ev(%"class.blink::UnsignedLongOrUnsignedLongSequence"* nonnull %15) #8
  call void @_ZN5blink36V8UnsignedLongOrUnsignedLongSequence6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_34UnsignedLongOrUnsignedLongSequenceENS_23UnionTypeConversionModeERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1482, %"class.blink::UnsignedLongOrUnsignedLongSequence"* nonnull dereferenceable(24) %15, i32 1, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1515 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1516 = load i32, i32* %1515, align 8
  %1517 = icmp eq i32 %1516, 0
  br i1 %1517, label %1518, label %1519

1518:                                             ; preds = %1512
  call void @_ZN5blink19NotificationOptions10setVibrateERKNS_34UnsignedLongOrUnsignedLongSequenceE(%"class.blink::NotificationOptions"* %2, %"class.blink::UnsignedLongOrUnsignedLongSequence"* nonnull dereferenceable(24) %15) #8
  call void @_ZN5blink34UnsignedLongOrUnsignedLongSequenceD1Ev(%"class.blink::UnsignedLongOrUnsignedLongSequence"* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1513) #8
  br label %1520

1519:                                             ; preds = %1512
  call void @_ZN5blink34UnsignedLongOrUnsignedLongSequenceD1Ev(%"class.blink::UnsignedLongOrUnsignedLongSequence"* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1513) #8
  br label %1754

1520:                                             ; preds = %1518, %1506
  %1521 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_notification_content_image_enabled_E, align 1, !range !4
  %1522 = icmp eq i8 %1521, 0
  br i1 %1522, label %1682, label %1523

1523:                                             ; preds = %1520
  %1524 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 6, i32 0
  %1525 = bitcast %"class.v8::Name"** %1524 to %"class.v8::Value"**
  %1526 = load %"class.v8::Value"*, %"class.v8::Value"** %1525, align 8
  %1527 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %1526) #8
  %1528 = icmp eq %"class.v8::Value"* %1527, null
  br i1 %1528, label %1529, label %1535

1529:                                             ; preds = %1523
  %1530 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1531 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1532 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1531, align 8
  %1533 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1532, i64 5
  %1534 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1533, align 8
  call void %1534(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1530) #8
  br label %1754

1535:                                             ; preds = %1523
  %1536 = bitcast %"class.v8::Value"* %1527 to i64*
  %1537 = load i64, i64* %1536, align 8
  %1538 = and i64 %1537, 3
  %1539 = icmp eq i64 %1538, 1
  br i1 %1539, label %1540, label %1557

1540:                                             ; preds = %1535
  %1541 = add i64 %1537, -1
  %1542 = inttoptr i64 %1541 to i32*
  %1543 = load i32, i32* %1542, align 4
  %1544 = and i64 %1537, -4294967296
  %1545 = zext i32 %1543 to i64
  %1546 = or i64 %1544, %1545
  %1547 = add i64 %1546, 7
  %1548 = inttoptr i64 %1547 to i16*
  %1549 = load i16, i16* %1548, align 2
  %1550 = icmp eq i16 %1549, 67
  br i1 %1550, label %1551, label %1557

1551:                                             ; preds = %1540
  %1552 = add i64 %1537, 23
  %1553 = inttoptr i64 %1552 to i32*
  %1554 = load i32, i32* %1553, align 4
  %1555 = and i32 %1554, -2
  %1556 = icmp eq i32 %1555, 10
  br i1 %1556, label %1682, label %1557

1557:                                             ; preds = %1540, %1535, %1551
  %1558 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1527, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %1559 = icmp eq %"class.WTF::StringImpl"* %1558, null
  br i1 %1559, label %1589, label %1560

1560:                                             ; preds = %1557
  %1561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1558, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1562 = load atomic i32, i32* %1561 monotonic, align 4
  %1563 = and i32 %1562, 2
  %1564 = icmp eq i32 %1563, 0
  %1565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1558, i64 0, i32 0
  %1566 = load i32, i32* %1565, align 4
  br i1 %1564, label %1567, label %1577

1567:                                             ; preds = %1560
  %1568 = zext i32 %1566 to i33
  %1569 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1568, i33 1) #8
  %1570 = extractvalue { i33, i1 } %1569, 1
  %1571 = extractvalue { i33, i1 } %1569, 0
  %1572 = icmp slt i33 %1571, 0
  %1573 = or i1 %1570, %1572
  br i1 %1573, label %1574, label %1575, !prof !2

1574:                                             ; preds = %1567
  call void @llvm.trap() #8
  unreachable

1575:                                             ; preds = %1567
  %1576 = trunc i33 %1571 to i32
  store i32 %1576, i32* %1565, align 4
  br label %1577

1577:                                             ; preds = %1560, %1575
  %1578 = phi i32 [ %1576, %1575 ], [ %1566, %1560 ]
  %1579 = load atomic i32, i32* %1561 monotonic, align 4
  %1580 = and i32 %1579, 2
  %1581 = icmp eq i32 %1580, 0
  br i1 %1581, label %1582, label %1585

1582:                                             ; preds = %1577
  %1583 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1558, i64 0, i32 0
  %1584 = add i32 %1578, -1
  store i32 %1584, i32* %1583, align 4
  br label %1585

1585:                                             ; preds = %1582, %1577
  %1586 = phi i32 [ %1584, %1582 ], [ %1578, %1577 ]
  %1587 = icmp eq i32 %1586, 0
  br i1 %1587, label %1588, label %1589

1588:                                             ; preds = %1585
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1558) #8
  br label %1589

1589:                                             ; preds = %1557, %1585, %1588
  %1590 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1591 = load i32, i32* %1590, align 8
  %1592 = icmp eq i32 %1591, 0
  br i1 %1592, label %1593, label %1665

1593:                                             ; preds = %1589
  br i1 %1559, label %1611, label %1594

1594:                                             ; preds = %1593
  %1595 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1558, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1596 = load atomic i32, i32* %1595 monotonic, align 4
  %1597 = and i32 %1596, 2
  %1598 = icmp eq i32 %1597, 0
  br i1 %1598, label %1599, label %1613

1599:                                             ; preds = %1594
  %1600 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1558, i64 0, i32 0
  %1601 = load i32, i32* %1600, align 4
  %1602 = zext i32 %1601 to i33
  %1603 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1602, i33 1) #8
  %1604 = extractvalue { i33, i1 } %1603, 1
  %1605 = extractvalue { i33, i1 } %1603, 0
  %1606 = icmp slt i33 %1605, 0
  %1607 = or i1 %1604, %1606
  br i1 %1607, label %1608, label %1609, !prof !2

1608:                                             ; preds = %1599
  call void @llvm.trap() #8
  unreachable

1609:                                             ; preds = %1599
  %1610 = trunc i33 %1605 to i32
  store i32 %1610, i32* %1600, align 4
  br label %1613

1611:                                             ; preds = %1593
  %1612 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 12
  br label %1630

1613:                                             ; preds = %1594, %1609
  %1614 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 12
  %1615 = load atomic i32, i32* %1595 monotonic, align 4
  %1616 = and i32 %1615, 2
  %1617 = icmp eq i32 %1616, 0
  br i1 %1617, label %1618, label %1630

1618:                                             ; preds = %1613
  %1619 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1558, i64 0, i32 0
  %1620 = load i32, i32* %1619, align 4
  %1621 = zext i32 %1620 to i33
  %1622 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1621, i33 1) #8
  %1623 = extractvalue { i33, i1 } %1622, 1
  %1624 = extractvalue { i33, i1 } %1622, 0
  %1625 = icmp slt i33 %1624, 0
  %1626 = or i1 %1623, %1625
  br i1 %1626, label %1627, label %1628, !prof !2

1627:                                             ; preds = %1618
  call void @llvm.trap() #8
  unreachable

1628:                                             ; preds = %1618
  %1629 = trunc i33 %1624 to i32
  store i32 %1629, i32* %1619, align 4
  br label %1630

1630:                                             ; preds = %1611, %1628, %1613
  %1631 = phi i1 [ false, %1628 ], [ false, %1613 ], [ true, %1611 ]
  %1632 = phi %"class.WTF::String"* [ %1614, %1628 ], [ %1614, %1613 ], [ %1612, %1611 ]
  %1633 = ptrtoint %"class.WTF::StringImpl"* %1558 to i64
  %1634 = bitcast %"class.WTF::String"* %1632 to i64*
  %1635 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 12, i32 0, i32 0
  %1636 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1635, align 8
  store i64 %1633, i64* %1634, align 8
  %1637 = icmp eq %"class.WTF::StringImpl"* %1636, null
  br i1 %1637, label %1651, label %1638

1638:                                             ; preds = %1630
  %1639 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1636, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1640 = load atomic i32, i32* %1639 monotonic, align 4
  %1641 = and i32 %1640, 2
  %1642 = icmp eq i32 %1641, 0
  %1643 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1636, i64 0, i32 0
  %1644 = load i32, i32* %1643, align 4
  br i1 %1642, label %1645, label %1647

1645:                                             ; preds = %1638
  %1646 = add i32 %1644, -1
  store i32 %1646, i32* %1643, align 4
  br label %1647

1647:                                             ; preds = %1645, %1638
  %1648 = phi i32 [ %1646, %1645 ], [ %1644, %1638 ]
  %1649 = icmp eq i32 %1648, 0
  br i1 %1649, label %1650, label %1651

1650:                                             ; preds = %1647
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1636) #8
  br label %1651

1651:                                             ; preds = %1630, %1647, %1650
  br i1 %1631, label %1665, label %1652

1652:                                             ; preds = %1651
  %1653 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1558, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1654 = load atomic i32, i32* %1653 monotonic, align 4
  %1655 = and i32 %1654, 2
  %1656 = icmp eq i32 %1655, 0
  %1657 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1558, i64 0, i32 0
  %1658 = load i32, i32* %1657, align 4
  br i1 %1656, label %1659, label %1661

1659:                                             ; preds = %1652
  %1660 = add i32 %1658, -1
  store i32 %1660, i32* %1657, align 4
  br label %1661

1661:                                             ; preds = %1659, %1652
  %1662 = phi i32 [ %1660, %1659 ], [ %1658, %1652 ]
  %1663 = icmp eq i32 %1662, 0
  br i1 %1663, label %1664, label %1665

1664:                                             ; preds = %1661
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1558) #8
  br label %1665

1665:                                             ; preds = %1589, %1651, %1661, %1664
  %1666 = phi i32 [ 1, %1589 ], [ 0, %1651 ], [ 0, %1661 ], [ 0, %1664 ]
  br i1 %1559, label %1680, label %1667

1667:                                             ; preds = %1665
  %1668 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1558, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1669 = load atomic i32, i32* %1668 monotonic, align 4
  %1670 = and i32 %1669, 2
  %1671 = icmp eq i32 %1670, 0
  %1672 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1558, i64 0, i32 0
  %1673 = load i32, i32* %1672, align 4
  br i1 %1671, label %1674, label %1676

1674:                                             ; preds = %1667
  %1675 = add i32 %1673, -1
  store i32 %1675, i32* %1672, align 4
  br label %1676

1676:                                             ; preds = %1674, %1667
  %1677 = phi i32 [ %1675, %1674 ], [ %1673, %1667 ]
  %1678 = icmp eq i32 %1677, 0
  br i1 %1678, label %1679, label %1680

1679:                                             ; preds = %1676
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1558) #8
  br label %1680

1680:                                             ; preds = %1665, %1676, %1679
  %1681 = icmp eq i32 %1666, 0
  br i1 %1681, label %1682, label %1754

1682:                                             ; preds = %1520, %1680, %1551
  %1683 = icmp eq %"class.blink::ExecutionContext"* %51, null
  %1684 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %51, i64 0, i32 4
  %1685 = select i1 %1683, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %1684
  %1686 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase27NotificationTriggersEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %1685) #8
  br i1 %1686, label %1687, label %1754

1687:                                             ; preds = %1682
  %1688 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 10, i32 0
  %1689 = bitcast %"class.v8::Name"** %1688 to %"class.v8::Value"**
  %1690 = load %"class.v8::Value"*, %"class.v8::Value"** %1689, align 8
  %1691 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %1690) #8
  %1692 = icmp eq %"class.v8::Value"* %1691, null
  br i1 %1692, label %1693, label %1699

1693:                                             ; preds = %1687
  %1694 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1695 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1696 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1695, align 8
  %1697 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1696, i64 5
  %1698 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1697, align 8
  call void %1698(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1694) #8
  br label %1754

1699:                                             ; preds = %1687
  %1700 = bitcast %"class.v8::Value"* %1691 to i64*
  %1701 = load i64, i64* %1700, align 8
  %1702 = and i64 %1701, 3
  %1703 = icmp eq i64 %1702, 1
  br i1 %1703, label %1704, label %1721

1704:                                             ; preds = %1699
  %1705 = add i64 %1701, -1
  %1706 = inttoptr i64 %1705 to i32*
  %1707 = load i32, i32* %1706, align 4
  %1708 = and i64 %1701, -4294967296
  %1709 = zext i32 %1707 to i64
  %1710 = or i64 %1708, %1709
  %1711 = add i64 %1710, 7
  %1712 = inttoptr i64 %1711 to i16*
  %1713 = load i16, i16* %1712, align 2
  %1714 = icmp eq i16 %1713, 67
  br i1 %1714, label %1715, label %1721

1715:                                             ; preds = %1704
  %1716 = add i64 %1701, 23
  %1717 = inttoptr i64 %1716 to i32*
  %1718 = load i32, i32* %1717, align 4
  %1719 = and i32 %1718, -2
  %1720 = icmp eq i32 %1719, 10
  br i1 %1720, label %1754, label %1721

1721:                                             ; preds = %1704, %1699, %1715
  %1722 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %45, align 8
  %1723 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1722, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink18V8TimestampTrigger18wrapper_type_info_E, %"class.v8::Value"* nonnull %1691) #8
  br i1 %1723, label %1724, label %1745

1724:                                             ; preds = %1721
  %1725 = load i64, i64* %1700, align 8
  %1726 = add i64 %1725, -1
  %1727 = inttoptr i64 %1726 to i32*
  %1728 = load i32, i32* %1727, align 4
  %1729 = and i64 %1725, -4294967296
  %1730 = zext i32 %1728 to i64
  %1731 = or i64 %1729, %1730
  %1732 = add i64 %1731, 7
  %1733 = inttoptr i64 %1732 to i16*
  %1734 = load i16, i16* %1733, align 2
  switch i16 %1734, label %1739 [
    i16 1057, label %1735
    i16 1056, label %1735
    i16 1040, label %1735
  ]

1735:                                             ; preds = %1724, %1724, %1724
  %1736 = add i64 %1725, 19
  %1737 = inttoptr i64 %1736 to i8**
  %1738 = load i8*, i8** %1737, align 1
  br label %1742

1739:                                             ; preds = %1724
  %1740 = bitcast %"class.v8::Value"* %1691 to %"class.v8::Object"*
  %1741 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* nonnull %1740, i32 1) #8
  br label %1742

1742:                                             ; preds = %1735, %1739
  %1743 = phi i8* [ %1738, %1735 ], [ %1741, %1739 ]
  %1744 = icmp eq i8* %1743, null
  br i1 %1744, label %1745, label %1746

1745:                                             ; preds = %1721, %1742
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0)) #8
  br label %1754

1746:                                             ; preds = %1742
  %1747 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %2, i64 0, i32 16
  %1748 = ptrtoint i8* %1743 to i64
  %1749 = bitcast %"class.blink::Member.190"* %1747 to i64*
  store atomic i64 %1748, i64* %1749 monotonic, align 8
  %1750 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1751 = icmp eq i32 %1750, 0
  br i1 %1751, label %1754, label %1752

1752:                                             ; preds = %1746
  %1753 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %1743) #8
  br label %1754

1754:                                             ; preds = %923, %920, %910, %261, %258, %248, %1470, %1239, %1189, %1139, %1680, %1529, %98, %442, %760, %1104, %1204, %1428, %1693, %1715, %1745, %1746, %1752, %1682, %1519, %1484, %1421, %1254, %1154, %1097, %930, %753, %520, %435, %268, %91, %56
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %49) #8
  br label %1755

1755:                                             ; preds = %33, %33, %4, %1754, %40
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18NotificationActionEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #8
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_18NotificationActionEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #8
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.27, i64 0, i64 0)) #8
  %12 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.28, i64 0, i64 0)) #8
  %26 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_18NotificationActionEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #8
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare void @_ZN5blink19NotificationOptions10setActionsERKNS_10HeapVectorINS_6MemberINS_18NotificationActionEEELj0EEE(%"class.blink::NotificationOptions"*, %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.blink::V8StringResource", align 8
  %6 = bitcast %"class.blink::V8StringResource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 152, i1 false)
  %7 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.275"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %5) #8
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false) #8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #8
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %16 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #8
  %17 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %16) #8
  %18 = ptrtoint %"class.v8::String"* %17 to i64
  %19 = bitcast %"class.blink::V8StringResource"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = icmp eq %"class.v8::String"* %17, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #8
  br label %28

22:                                               ; preds = %13
  %23 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #8
  %24 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %25 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %25, i64 5
  %27 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %26, align 8
  call void %27(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %23) #8
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #8
  br label %58

28:                                               ; preds = %3, %21
  %29 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %35, label %31, !prof !2

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %29 to %"class.v8::String"*
  %33 = load i32, i32* %8, align 8
  %34 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %32, i32 %33) #8
  br label %55

35:                                               ; preds = %28
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %31, %35, %38, %53
  %56 = phi %"class.WTF::StringImpl"* [ %34, %31 ], [ null, %35 ], [ %36, %38 ], [ %36, %53 ]
  %57 = call %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"* %56) #8
  br label %58

58:                                               ; preds = %55, %22
  %59 = phi %"class.WTF::StringImpl"* [ %57, %55 ], [ null, %22 ]
  %60 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  store i8* null, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %64, label %63

63:                                               ; preds = %58
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %61) #8
  br label %64

64:                                               ; preds = %63, %58
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #8
  br label %80

80:                                               ; preds = %64, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #8
  ret %"class.WTF::StringImpl"* %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = tail call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* %0)
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #8
  %7 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false) #8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %6) #8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::Value"*, %"class.v8::Value"** %8, align 8
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #8
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %9, %"class.v8::Context"* %10) #8
  %12 = ptrtoint %"class.v8::String"* %11 to i64
  %13 = bitcast %"class.blink::V8StringResource"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %"class.v8::String"* %11, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %3) #8
  %17 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %18 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, i64 5
  %20 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %19, align 8
  call void %20(%"class.blink::ExceptionState"* %1, %"class.v8::Value"* %16) #8
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi i1 [ false, %15 ], [ true, %5 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #8
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi i1 [ true, %2 ], [ %22, %21 ]
  ret i1 %24
}

declare void @_ZN5blink19NotificationOptions7setDataENS_11ScriptValueE(%"class.blink::NotificationOptions"*, %"class.blink::ScriptValue"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink34UnsignedLongOrUnsignedLongSequenceC1Ev(%"class.blink::UnsignedLongOrUnsignedLongSequence"*) unnamed_addr #1

declare void @_ZN5blink36V8UnsignedLongOrUnsignedLongSequence6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_34UnsignedLongOrUnsignedLongSequenceENS_23UnionTypeConversionModeERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::UnsignedLongOrUnsignedLongSequence"* dereferenceable(24), i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink19NotificationOptions10setVibrateERKNS_34UnsignedLongOrUnsignedLongSequenceE(%"class.blink::NotificationOptions"*, %"class.blink::UnsignedLongOrUnsignedLongSequence"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink34UnsignedLongOrUnsignedLongSequenceD1Ev(%"class.blink::UnsignedLongOrUnsignedLongSequence"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase27NotificationTriggersEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink19NotificationOptions8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::NotificationOptions"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #8
  %5 = tail call zeroext i1 @_ZN5blink23toV8NotificationOptionsEPKNS_19NotificationOptionsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::NotificationOptions"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23toV8NotificationOptionsEPKNS_19NotificationOptionsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::NotificationOptions"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.blink::ScriptValue", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %18 = add i64 %17, 8
  %19 = inttoptr i64 %18 to %"class.blink::V8PerIsolateData"**
  %20 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %19, align 8
  %21 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %20, i8* bitcast ([15 x i8*]* @_ZZN5blinkL32eternalV8NotificationOptionsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.406"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.406"*)) #8
  %22 = extractvalue { i64, %"class.v8::Eternal"* } %21, 1
  %23 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #8
  %24 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %23) #8
  %25 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 1
  %26 = load i8, i8* %25, align 8, !range !4
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 6
  %30 = tail call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_18NotificationActionEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector"* dereferenceable(16) %29, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  br label %35

31:                                               ; preds = %4
  %32 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8
  %33 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 16, i1 false)
  %34 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_18NotificationActionEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector"* nonnull dereferenceable(16) %5, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8
  br label %35

35:                                               ; preds = %28, %31
  %36 = phi %"class.v8::Array"* [ %30, %28 ], [ %34, %31 ]
  %37 = bitcast %"class.v8::Array"* %36 to %"class.v8::Value"*
  %38 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %22, i64 0, i32 0
  %39 = load %"class.v8::Name"*, %"class.v8::Name"** %38, align 8
  %40 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %23, %"class.v8::Name"* %39, %"class.v8::Value"* %37) #8
  %41 = trunc i16 %40 to i8
  %42 = icmp ne i8 %41, 0
  %43 = icmp ugt i16 %40, 255
  %44 = and i1 %43, %42
  br i1 %44, label %45, label %480

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 7, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %67, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #8
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 1
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %56 = bitcast i8** %55 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %53, i32* %57, align 8
  %58 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #8
  %59 = bitcast %"class.v8::String"* %58 to %"class.v8::Value"*
  %60 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %22, i64 1, i32 0
  %61 = load %"class.v8::Name"*, %"class.v8::Name"** %60, align 8
  %62 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %23, %"class.v8::Name"* %61, %"class.v8::Value"* %59) #8
  %63 = trunc i16 %62 to i8
  %64 = icmp ne i8 %63, 0
  %65 = icmp ugt i16 %62, 255
  %66 = and i1 %65, %64
  br i1 %66, label %67, label %480

67:                                               ; preds = %45, %49
  %68 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 8, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %79, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #8
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %73, align 8
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 1
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %78 = bitcast i8** %77 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %78, align 8
  br label %96

79:                                               ; preds = %67
  %80 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #8
  %81 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %85, label %89

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %86, align 8
  %87 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %88 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %87, i64* %88, align 8
  br label %96

89:                                               ; preds = %79
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 1
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %95 = bitcast i8** %94 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %95, align 8
  br label %96

96:                                               ; preds = %89, %85, %71
  %97 = phi %"class.WTF::StringView"* [ %7, %71 ], [ %8, %85 ], [ %8, %89 ]
  %98 = phi i32 [ %75, %71 ], [ 0, %85 ], [ %92, %89 ]
  %99 = phi i8* [ %72, %71 ], [ %80, %85 ], [ %80, %89 ]
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %97, i64 0, i32 2
  store i32 %98, i32* %100, align 8
  %101 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %97)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #8
  %102 = bitcast %"class.v8::String"* %101 to %"class.v8::Value"*
  %103 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %22, i64 2, i32 0
  %104 = load %"class.v8::Name"*, %"class.v8::Name"** %103, align 8
  %105 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %23, %"class.v8::Name"* %104, %"class.v8::Value"* %102) #8
  %106 = trunc i16 %105 to i8
  %107 = icmp ne i8 %106, 0
  %108 = icmp ugt i16 %105, 255
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %480

110:                                              ; preds = %96
  %111 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 9, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i64*, i64** %111, align 8
  %113 = icmp eq i64* %112, null
  br i1 %113, label %173, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 9
  %116 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %115) #8
  %117 = icmp eq %"class.v8::Value"* %116, null
  br i1 %117, label %140, label %118

118:                                              ; preds = %114
  %119 = bitcast %"class.v8::Value"* %116 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = and i64 %120, 3
  %122 = icmp eq i64 %121, 1
  br i1 %122, label %123, label %140

123:                                              ; preds = %118
  %124 = add i64 %120, -1
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = and i64 %120, -4294967296
  %128 = zext i32 %126 to i64
  %129 = or i64 %127, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load i16, i16* %131, align 2
  %133 = icmp eq i16 %132, 67
  br i1 %133, label %134, label %140

134:                                              ; preds = %123
  %135 = add i64 %120, 23
  %136 = inttoptr i64 %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = and i32 %137, -2
  %139 = icmp eq i32 %138, 10
  br i1 %139, label %173, label %140

140:                                              ; preds = %134, %123, %118, %114
  %141 = bitcast %"class.blink::ScriptValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #8
  %142 = bitcast %"class.blink::ScriptValue"* %115 to i64*
  %143 = load i64, i64* %142, align 8, !noalias !5
  %144 = bitcast %"class.blink::ScriptValue"* %9 to i64*
  store i64 %143, i64* %144, align 8, !alias.scope !5
  %145 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %9, i64 0, i32 1
  %146 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %145, i64 0, i32 0
  %147 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %147, align 8, !alias.scope !5
  %148 = icmp eq %"class.blink::ScriptValue"* %115, %9
  br i1 %148, label %153, label %149

149:                                              ; preds = %140
  %150 = load i64*, i64** %111, align 8, !noalias !5
  %151 = icmp eq i64* %150, null
  br i1 %151, label %153, label %152

152:                                              ; preds = %149
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %111, i64** %147) #8
  br label %153

153:                                              ; preds = %152, %149, %140
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %146) #8
  %154 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 9, i32 1, i32 1, i32 0
  %155 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %154, align 8, !noalias !5
  %156 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %9, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %155, %"class.blink::DOMWrapperWorld"** %156, align 8, !alias.scope !5
  %157 = icmp eq %"class.blink::DOMWrapperWorld"* %155, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %155, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %159) #8
  br label %160

160:                                              ; preds = %153, %158
  %161 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %9) #8
  %162 = ptrtoint %"class.v8::Value"* %161 to i64
  %163 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %156, align 8
  %164 = icmp eq %"class.blink::DOMWrapperWorld"* %163, null
  br i1 %164, label %172, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %163, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %166) #8
  %167 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %163, i64 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %165
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %163) #8
  %171 = bitcast %"class.blink::DOMWrapperWorld"* %163 to i8*
  call void @free(i8* %171) #8
  br label %172

172:                                              ; preds = %160, %165, %170
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #8
  br label %175

173:                                              ; preds = %134, %110
  %174 = add i64 %17, 176
  br label %175

175:                                              ; preds = %172, %173
  %176 = phi i64 [ %162, %172 ], [ %174, %173 ]
  %177 = inttoptr i64 %176 to %"class.v8::Value"*
  %178 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %22, i64 3, i32 0
  %179 = load %"class.v8::Name"*, %"class.v8::Name"** %178, align 8
  %180 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %23, %"class.v8::Name"* %179, %"class.v8::Value"* %177) #8
  %181 = trunc i16 %180 to i8
  %182 = icmp ne i8 %181, 0
  %183 = icmp ugt i16 %180, 255
  %184 = and i1 %183, %182
  br i1 %184, label %185, label %480

185:                                              ; preds = %175
  %186 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 10, i32 0, i32 0
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %199, label %189

189:                                              ; preds = %185
  %190 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #8
  %191 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %187, %"class.WTF::StringImpl"** %191, align 8
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 1
  %195 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %196 = bitcast i8** %195 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %194, %"class.WTF::StringImpl"** %196, align 8
  %197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %193, i32* %197, align 8
  %198 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #8
  br label %203

199:                                              ; preds = %185
  %200 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32 0, i32 4) #8
  %201 = icmp eq %"class.v8::String"* %200, null
  br i1 %201, label %202, label %203, !prof !2

202:                                              ; preds = %199
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %203

203:                                              ; preds = %202, %199, %189
  %204 = phi %"class.v8::String"* [ %198, %189 ], [ %200, %199 ], [ null, %202 ]
  %205 = bitcast %"class.v8::String"* %204 to %"class.v8::Value"*
  %206 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %22, i64 4, i32 0
  %207 = load %"class.v8::Name"*, %"class.v8::Name"** %206, align 8
  %208 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %23, %"class.v8::Name"* %207, %"class.v8::Value"* %205) #8
  %209 = trunc i16 %208 to i8
  %210 = icmp ne i8 %209, 0
  %211 = icmp ugt i16 %208, 255
  %212 = and i1 %211, %210
  br i1 %212, label %213, label %480

213:                                              ; preds = %203
  %214 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 11, i32 0, i32 0
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %235, label %217

217:                                              ; preds = %213
  %218 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #8
  %219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %219, align 8
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 1
  %223 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %224 = bitcast i8** %223 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %224, align 8
  %225 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %221, i32* %225, align 8
  %226 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #8
  %227 = bitcast %"class.v8::String"* %226 to %"class.v8::Value"*
  %228 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %22, i64 5, i32 0
  %229 = load %"class.v8::Name"*, %"class.v8::Name"** %228, align 8
  %230 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %23, %"class.v8::Name"* %229, %"class.v8::Value"* %227) #8
  %231 = trunc i16 %230 to i8
  %232 = icmp ne i8 %231, 0
  %233 = icmp ugt i16 %230, 255
  %234 = and i1 %233, %232
  br i1 %234, label %235, label %480

235:                                              ; preds = %213, %217
  %236 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 13, i32 0, i32 0
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %236, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %247, label %239

239:                                              ; preds = %235
  %240 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %240) #8
  %241 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %237, %"class.WTF::StringImpl"** %241, align 8
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 1
  %243 = load i32, i32* %242, align 4
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 1
  %245 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %246 = bitcast i8** %245 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %244, %"class.WTF::StringImpl"** %246, align 8
  br label %264

247:                                              ; preds = %235
  %248 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %248) #8
  %249 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %250 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %249, i64 0, i32 0, i32 0
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %251, null
  br i1 %252, label %253, label %257

253:                                              ; preds = %247
  %254 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %254, align 8
  %255 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %256 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %255, i64* %256, align 8
  br label %264

257:                                              ; preds = %247
  %258 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %251, %"class.WTF::StringImpl"** %258, align 8
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 1
  %260 = load i32, i32* %259, align 4
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 1
  %262 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %263 = bitcast i8** %262 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %261, %"class.WTF::StringImpl"** %263, align 8
  br label %264

264:                                              ; preds = %257, %253, %239
  %265 = phi %"class.WTF::StringView"* [ %12, %239 ], [ %13, %253 ], [ %13, %257 ]
  %266 = phi i32 [ %243, %239 ], [ 0, %253 ], [ %260, %257 ]
  %267 = phi i8* [ %240, %239 ], [ %248, %253 ], [ %248, %257 ]
  %268 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %265, i64 0, i32 2
  store i32 %266, i32* %268, align 8
  %269 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %265)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %267) #8
  %270 = bitcast %"class.v8::String"* %269 to %"class.v8::Value"*
  %271 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %22, i64 7, i32 0
  %272 = load %"class.v8::Name"*, %"class.v8::Name"** %271, align 8
  %273 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %23, %"class.v8::Name"* %272, %"class.v8::Value"* %270) #8
  %274 = trunc i16 %273 to i8
  %275 = icmp ne i8 %274, 0
  %276 = icmp ugt i16 %273, 255
  %277 = and i1 %276, %275
  br i1 %277, label %278, label %480

278:                                              ; preds = %264
  %279 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 2
  %280 = load i8, i8* %279, align 1, !range !4
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %288, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 14
  %284 = load i8, i8* %283, align 8, !range !4
  %285 = icmp eq i8 %284, 0
  %286 = select i1 %285, i64 192, i64 184
  %287 = add i64 %286, %17
  br label %290

288:                                              ; preds = %278
  %289 = add i64 %17, 192
  br label %290

290:                                              ; preds = %282, %288
  %291 = phi i64 [ %287, %282 ], [ %289, %288 ]
  %292 = inttoptr i64 %291 to %"class.v8::Value"*
  %293 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %22, i64 8, i32 0
  %294 = load %"class.v8::Name"*, %"class.v8::Name"** %293, align 8
  %295 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %23, %"class.v8::Name"* %294, %"class.v8::Value"* %292) #8
  %296 = trunc i16 %295 to i8
  %297 = icmp ne i8 %296, 0
  %298 = icmp ugt i16 %295, 255
  %299 = and i1 %298, %297
  br i1 %299, label %300, label %480

300:                                              ; preds = %290
  %301 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 3
  %302 = load i8, i8* %301, align 2, !range !4
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %310, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 15
  %306 = load i8, i8* %305, align 1, !range !4
  %307 = icmp eq i8 %306, 0
  %308 = select i1 %307, i64 192, i64 184
  %309 = add i64 %308, %17
  br label %312

310:                                              ; preds = %300
  %311 = add i64 %17, 192
  br label %312

312:                                              ; preds = %304, %310
  %313 = phi i64 [ %309, %304 ], [ %311, %310 ]
  %314 = inttoptr i64 %313 to %"class.v8::Value"*
  %315 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %22, i64 9, i32 0
  %316 = load %"class.v8::Name"*, %"class.v8::Name"** %315, align 8
  %317 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %23, %"class.v8::Name"* %316, %"class.v8::Value"* %314) #8
  %318 = trunc i16 %317 to i8
  %319 = icmp ne i8 %318, 0
  %320 = icmp ugt i16 %317, 255
  %321 = and i1 %320, %319
  br i1 %321, label %322, label %480

322:                                              ; preds = %312
  %323 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 4
  %324 = load i8, i8* %323, align 1, !range !4
  %325 = icmp eq i8 %324, 0
  br i1 %325, label %332, label %326

326:                                              ; preds = %322
  %327 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 17
  %328 = load i8, i8* %327, align 8, !range !4
  %329 = icmp eq i8 %328, 0
  %330 = select i1 %329, i64 192, i64 184
  %331 = add i64 %330, %17
  br label %334

332:                                              ; preds = %322
  %333 = add i64 %17, 192
  br label %334

334:                                              ; preds = %326, %332
  %335 = phi i64 [ %331, %326 ], [ %333, %332 ]
  %336 = inttoptr i64 %335 to %"class.v8::Value"*
  %337 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %22, i64 11, i32 0
  %338 = load %"class.v8::Name"*, %"class.v8::Name"** %337, align 8
  %339 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %23, %"class.v8::Name"* %338, %"class.v8::Value"* %336) #8
  %340 = trunc i16 %339 to i8
  %341 = icmp ne i8 %340, 0
  %342 = icmp ugt i16 %339, 255
  %343 = and i1 %342, %341
  br i1 %343, label %344, label %480

344:                                              ; preds = %334
  %345 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 18, i32 0, i32 0
  %346 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %345, align 8
  %347 = icmp eq %"class.WTF::StringImpl"* %346, null
  br i1 %347, label %356, label %348

348:                                              ; preds = %344
  %349 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %349) #8
  %350 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %346, %"class.WTF::StringImpl"** %350, align 8
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %346, i64 0, i32 1
  %352 = load i32, i32* %351, align 4
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %346, i64 1
  %354 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %355 = bitcast i8** %354 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %353, %"class.WTF::StringImpl"** %355, align 8
  br label %373

356:                                              ; preds = %344
  %357 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %357) #8
  %358 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %359 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %358, i64 0, i32 0, i32 0
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  %361 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %361, label %362, label %366

362:                                              ; preds = %356
  %363 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %363, align 8
  %364 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %365 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %364, i64* %365, align 8
  br label %373

366:                                              ; preds = %356
  %367 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %360, %"class.WTF::StringImpl"** %367, align 8
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 1
  %369 = load i32, i32* %368, align 4
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 1
  %371 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %372 = bitcast i8** %371 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %370, %"class.WTF::StringImpl"** %372, align 8
  br label %373

373:                                              ; preds = %366, %362, %348
  %374 = phi %"class.WTF::StringView"* [ %14, %348 ], [ %15, %362 ], [ %15, %366 ]
  %375 = phi i32 [ %352, %348 ], [ 0, %362 ], [ %369, %366 ]
  %376 = phi i8* [ %349, %348 ], [ %357, %362 ], [ %357, %366 ]
  %377 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %374, i64 0, i32 2
  store i32 %375, i32* %377, align 8
  %378 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %374)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %376) #8
  %379 = bitcast %"class.v8::String"* %378 to %"class.v8::Value"*
  %380 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %22, i64 12, i32 0
  %381 = load %"class.v8::Name"*, %"class.v8::Name"** %380, align 8
  %382 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %23, %"class.v8::Name"* %381, %"class.v8::Value"* %379) #8
  %383 = trunc i16 %382 to i8
  %384 = icmp ne i8 %383, 0
  %385 = icmp ugt i16 %382, 255
  %386 = and i1 %385, %384
  br i1 %386, label %387, label %480

387:                                              ; preds = %373
  %388 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 5
  %389 = load i8, i8* %388, align 4, !range !4
  %390 = icmp eq i8 %389, 0
  br i1 %390, label %404, label %391

391:                                              ; preds = %387
  %392 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 19
  %393 = load i64, i64* %392, align 8
  %394 = uitofp i64 %393 to double
  %395 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %394) #8
  %396 = bitcast %"class.v8::Number"* %395 to %"class.v8::Value"*
  %397 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %22, i64 13, i32 0
  %398 = load %"class.v8::Name"*, %"class.v8::Name"** %397, align 8
  %399 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %23, %"class.v8::Name"* %398, %"class.v8::Value"* %396) #8
  %400 = trunc i16 %399 to i8
  %401 = icmp ne i8 %400, 0
  %402 = icmp ugt i16 %399, 255
  %403 = and i1 %402, %401
  br i1 %403, label %404, label %480

404:                                              ; preds = %387, %391
  %405 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 20, i32 0
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %418, label %408

408:                                              ; preds = %404
  %409 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 20
  %410 = call %"class.v8::Value"* @_ZN5blink4ToV8ERKNS_34UnsignedLongOrUnsignedLongSequenceEN2v85LocalINS3_6ObjectEEEPNS3_7IsolateE(%"class.blink::UnsignedLongOrUnsignedLongSequence"* dereferenceable(24) %409, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %411 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %22, i64 14, i32 0
  %412 = load %"class.v8::Name"*, %"class.v8::Name"** %411, align 8
  %413 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %23, %"class.v8::Name"* %412, %"class.v8::Value"* %410) #8
  %414 = trunc i16 %413 to i8
  %415 = icmp ne i8 %414, 0
  %416 = icmp ugt i16 %413, 255
  %417 = and i1 %416, %415
  br i1 %417, label %418, label %480

418:                                              ; preds = %404, %408
  %419 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_notification_content_image_enabled_E, align 1, !range !4
  %420 = icmp eq i8 %419, 0
  br i1 %420, label %443, label %421

421:                                              ; preds = %418
  %422 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 12, i32 0, i32 0
  %423 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %422, align 8
  %424 = icmp eq %"class.WTF::StringImpl"* %423, null
  br i1 %424, label %443, label %425

425:                                              ; preds = %421
  %426 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %426) #8
  %427 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %423, %"class.WTF::StringImpl"** %427, align 8
  %428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %423, i64 0, i32 1
  %429 = load i32, i32* %428, align 4
  %430 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %423, i64 1
  %431 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %432 = bitcast i8** %431 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %430, %"class.WTF::StringImpl"** %432, align 8
  %433 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %429, i32* %433, align 8
  %434 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %16)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %426) #8
  %435 = bitcast %"class.v8::String"* %434 to %"class.v8::Value"*
  %436 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %22, i64 6, i32 0
  %437 = load %"class.v8::Name"*, %"class.v8::Name"** %436, align 8
  %438 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %23, %"class.v8::Name"* %437, %"class.v8::Value"* %435) #8
  %439 = trunc i16 %438 to i8
  %440 = icmp ne i8 %439, 0
  %441 = icmp ugt i16 %438, 255
  %442 = and i1 %441, %440
  br i1 %442, label %443, label %480

443:                                              ; preds = %421, %418, %425
  %444 = icmp eq %"class.blink::ExecutionContext"* %24, null
  %445 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %24, i64 0, i32 4
  %446 = select i1 %444, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %445
  %447 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase27NotificationTriggersEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %446) #8
  br i1 %447, label %448, label %480

448:                                              ; preds = %443
  %449 = getelementptr inbounds %"class.blink::NotificationOptions", %"class.blink::NotificationOptions"* %0, i64 0, i32 16, i32 0, i32 0
  %450 = load %"class.blink::TimestampTrigger"*, %"class.blink::TimestampTrigger"** %449, align 8
  %451 = icmp eq %"class.blink::TimestampTrigger"* %450, null
  br i1 %451, label %479, label %452

452:                                              ; preds = %448
  %453 = getelementptr inbounds %"class.blink::TimestampTrigger", %"class.blink::TimestampTrigger"* %450, i64 0, i32 0
  %454 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %453, %"class.v8::Isolate"* %3) #8
  %455 = ptrtoint %"class.v8::Object"* %454 to i64
  %456 = icmp eq %"class.v8::Object"* %454, null
  br i1 %456, label %457, label %469

457:                                              ; preds = %452
  %458 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %2) #8
  %459 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %458) #8
  %460 = bitcast %"class.blink::TimestampTrigger"* %450 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %461 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %460, align 8
  %462 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %461, i64 7
  %463 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %462, align 8
  %464 = call %"class.v8::Value"* %463(%"class.blink::ScriptWrappable"* nonnull %453, %"class.blink::ScriptState"* %459) #8
  %465 = icmp eq %"class.v8::Value"* %464, null
  br i1 %465, label %466, label %467, !prof !2

466:                                              ; preds = %457
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %467

467:                                              ; preds = %466, %457
  %468 = ptrtoint %"class.v8::Value"* %464 to i64
  br label %469

469:                                              ; preds = %452, %467
  %470 = phi i64 [ %468, %467 ], [ %455, %452 ]
  %471 = inttoptr i64 %470 to %"class.v8::Value"*
  %472 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %22, i64 10, i32 0
  %473 = load %"class.v8::Name"*, %"class.v8::Name"** %472, align 8
  %474 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %23, %"class.v8::Name"* %473, %"class.v8::Value"* %471) #8
  %475 = trunc i16 %474 to i8
  %476 = icmp ne i8 %475, 0
  %477 = icmp ugt i16 %474, 255
  %478 = and i1 %477, %476
  br i1 %478, label %479, label %480

479:                                              ; preds = %448, %469
  br label %480

480:                                              ; preds = %49, %175, %217, %290, %334, %391, %469, %425, %443, %479, %408, %373, %312, %264, %203, %96, %35
  %481 = phi i1 [ false, %35 ], [ false, %49 ], [ false, %96 ], [ false, %175 ], [ false, %203 ], [ false, %217 ], [ false, %264 ], [ false, %290 ], [ false, %312 ], [ false, %334 ], [ false, %373 ], [ false, %391 ], [ false, %408 ], [ true, %479 ], [ true, %443 ], [ false, %425 ], [ false, %469 ]
  ret i1 %481
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #8
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #8
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #8
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #8
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #1

declare %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN5blink4ToV8ERKNS_34UnsignedLongOrUnsignedLongSequenceEN2v85LocalINS3_6ObjectEEEPNS3_7IsolateE(%"class.blink::UnsignedLongOrUnsignedLongSequence"* dereferenceable(24), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NotificationOptions"* @_ZN5blink17NativeValueTraitsINS_19NotificationOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 168) #8
  %5 = bitcast i8* %4 to %"class.blink::NotificationOptions"*
  tail call void @_ZN5blink19NotificationOptionsC1Ev(%"class.blink::NotificationOptions"* %5) #8
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink21V8NotificationOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_19NotificationOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::NotificationOptions"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::NotificationOptions"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.406"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #8
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %9) #8
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #8
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #8
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #8
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.3* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #8
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #8
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #8
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #8
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #8
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #8
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #8
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.3* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #8
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #8
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #8
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.21, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0)) #8
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.21, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.23, i64 0, i64 0)) #8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8)) local_unnamed_addr #1

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference.12"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #8
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #8
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference.12"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #8
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %47, %"class.blink::ScriptWrappable"* %0) #8
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference.12"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #8
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare void @_ZN5blink19NotificationOptionsC1Ev(%"class.blink::NotificationOptions"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_18NotificationActionEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.blink::NotificationAction"*, align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 16777216
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29, i64 0, i64 0)) #8
  %12 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %112

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #8
  %18 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  %19 = icmp eq i32 %8, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %13
  %21 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18NotificationActionEEEEEmm(i64 %9) #8
  %22 = lshr i64 %21, 3
  %23 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %22) #8
  %24 = ptrtoint %"class.blink::HeapVectorBacking"* %23 to i64
  %25 = bitcast %"class.blink::HeapVector"* %5 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = trunc i64 %22 to i32
  store i32 %26, i32* %16, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %23, i64 0, i32 0
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #8
  br label %32

32:                                               ; preds = %13, %20, %29
  %33 = phi i32 [ 0, %13 ], [ %26, %20 ], [ %26, %29 ]
  %34 = phi i64 [ 0, %13 ], [ %24, %20 ], [ %24, %29 ]
  %35 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %36 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #8
  %37 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::HeapVector"* %5 to i64*
  br label %90

41:                                               ; preds = %32
  %42 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %43 = bitcast %"class.blink::NotificationAction"** %7 to i8*
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %45

45:                                               ; preds = %41, %81
  %46 = phi i32 [ 0, %41 ], [ %82, %81 ]
  %47 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %42, %"class.v8::Context"* %35, i32 %46) #8
  %48 = icmp eq %"class.v8::Value"* %47, null
  br i1 %48, label %49, label %56

49:                                               ; preds = %45
  %50 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %51 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %52 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %52, i64 5
  %54 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %53, align 8
  call void %54(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %50) #8
  %55 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  br label %111

56:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  %57 = call %"class.blink::NotificationAction"* @_ZN5blink17NativeValueTraitsINS_18NotificationActionEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %47, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  store %"class.blink::NotificationAction"* %57, %"class.blink::NotificationAction"** %7, align 8
  %58 = load i32, i32* %44, align 8
  %59 = icmp eq i32 %58, 0
  %60 = ptrtoint %"class.blink::NotificationAction"* %57 to i64
  br i1 %59, label %61, label %79

61:                                               ; preds = %56
  %62 = load i32, i32* %17, align 4
  %63 = load i32, i32* %16, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %78, label %65, !prof !2

65:                                               ; preds = %61
  %66 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %67 = zext i32 %62 to i64
  %68 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %66, i64 %67
  %69 = bitcast %"class.blink::Member"* %68 to i64*
  store atomic i64 %60, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = bitcast %"class.blink::NotificationAction"* %57 to i8*
  %74 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #8
  br label %75

75:                                               ; preds = %72, %65
  %76 = load i32, i32* %17, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %17, align 4
  br label %81

78:                                               ; preds = %61
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18NotificationActionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"* nonnull %18, %"class.blink::NotificationAction"** nonnull dereferenceable(8) %7) #8
  br label %81

79:                                               ; preds = %56
  %80 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  br label %111

81:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %82 = add nuw i32 %46, 1
  %83 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %84 = icmp ult i32 %82, %83
  br i1 %84, label %45, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.blink::HeapVector"* %5 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = load i32, i32* %16, align 8
  %89 = load i32, i32* %17, align 4
  br label %90

90:                                               ; preds = %39, %85
  %91 = phi i64* [ %40, %39 ], [ %86, %85 ]
  %92 = phi i32 [ 0, %39 ], [ %89, %85 ]
  %93 = phi i32 [ %33, %39 ], [ %88, %85 ]
  %94 = phi i64 [ %34, %39 ], [ %87, %85 ]
  %95 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %97 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store i64 0, i64* %97, align 8
  %98 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store atomic i64 0, i64* %91 monotonic, align 8
  store atomic i64 %94, i64* %98 monotonic, align 8
  store i32 %93, i32* %95, align 8
  store i32 0, i32* %16, align 8
  store i32 %92, i32* %96, align 4
  store i32 0, i32* %17, align 4
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %90
  %102 = inttoptr i64 %94 to i8*
  %103 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %102) #8
  br label %104

104:                                              ; preds = %101, %90
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %104
  %108 = bitcast %"class.blink::HeapVector"* %5 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %109) #8
  br label %111

111:                                              ; preds = %49, %79, %107, %104
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br label %112

112:                                              ; preds = %111, %11
  ret void
}

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_18NotificationActionEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.blink::NotificationAction"*, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #8
  %9 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #8
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %13, label %14, label %50

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.blink::NotificationAction"** %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  br label %19

19:                                               ; preds = %14, %48
  %20 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %21 = icmp eq %"class.v8::Value"* %20, null
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %19
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %23

23:                                               ; preds = %19, %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %24 = call %"class.blink::NotificationAction"* @_ZN5blink17NativeValueTraitsINS_18NotificationActionEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %20, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  store %"class.blink::NotificationAction"* %24, %"class.blink::NotificationAction"** %6, align 8
  %25 = load i32, i32* %17, align 8
  %26 = icmp eq i32 %25, 0
  %27 = ptrtoint %"class.blink::NotificationAction"* %24 to i64
  br i1 %26, label %30, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %77

30:                                               ; preds = %23
  %31 = load i32, i32* %12, align 4
  %32 = load i32, i32* %11, align 8
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %47, label %34, !prof !2

34:                                               ; preds = %30
  %35 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %35, i64 %36
  %38 = bitcast %"class.blink::Member"* %37 to i64*
  store atomic i64 %27, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.blink::NotificationAction"* %24 to i8*
  %43 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #8
  br label %44

44:                                               ; preds = %41, %34
  %45 = load i32, i32* %12, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %12, align 4
  br label %48

47:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18NotificationActionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"* nonnull %18, %"class.blink::NotificationAction"** nonnull dereferenceable(8) %6) #8
  br label %48

48:                                               ; preds = %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %49 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %49, label %19, label %50

50:                                               ; preds = %48, %4
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  br label %77

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %59 = bitcast %"class.blink::HeapVector"* %5 to i64*
  %60 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store i64 0, i64* %60, align 8
  %61 = load i64, i64* %59, align 8
  %62 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = load i32, i32* %11, align 8
  store i32 %63, i32* %57, align 8
  store i32 0, i32* %11, align 8
  %64 = load i32, i32* %12, align 4
  store i32 %64, i32* %58, align 4
  store i32 0, i32* %12, align 4
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %56
  %68 = inttoptr i64 %61 to i8*
  %69 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %68) #8
  br label %70

70:                                               ; preds = %67, %56
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.blink::HeapVector"* %5 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #8
  br label %77

77:                                               ; preds = %73, %70, %28, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #1

declare %"class.blink::NotificationAction"* @_ZN5blink17NativeValueTraitsINS_18NotificationActionEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18NotificationActionEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.31, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.33, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([177 x i8], [177 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18NotificationActionEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18NotificationActionEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18NotificationActionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::NotificationAction"*
  %4 = bitcast i8* %1 to void (%"class.blink::NotificationAction"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::NotificationAction"*, %"class.blink::Visitor"*)**, void (%"class.blink::NotificationAction"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::NotificationAction"*, %"class.blink::Visitor"*)*, void (%"class.blink::NotificationAction"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::NotificationAction"*, %"class.blink::Visitor"*)*, void (%"class.blink::NotificationAction"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::NotificationAction"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18NotificationActionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::NotificationAction"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18NotificationActionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::NotificationAction"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #8
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18NotificationActionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18NotificationActionEEEEEmm(i64 %11) #8
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #8
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #8
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #8
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.34, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.35, i64 0, i64 0)) #8
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18NotificationActionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18NotificationActionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #8
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18NotificationActionEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18NotificationActionEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #8
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #8
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #8
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !8

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !3

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #8
  br i1 %22, label %23, label %80, !prof !3

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #8
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #8
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #8
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #8
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #8
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #8
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #1

declare i64 @_ZN5blink12ToUInt64SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_18NotificationActionEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #8
  %6 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.460* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #8
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !3

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #8
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #8
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #8
  %27 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !3

30:                                               ; preds = %25
  call void @llvm.trap() #8
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #8
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #8
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #8
  %35 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Member"*, %"class.blink::Member"** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %75, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  %43 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %44 = add i64 %43, 176
  %45 = inttoptr i64 %44 to %"class.v8::Value"*
  %46 = add i64 %43, 160
  br label %47

47:                                               ; preds = %41, %71
  %48 = phi i32 [ 0, %41 ], [ %72, %71 ]
  %49 = phi %"class.blink::Member"* [ %36, %41 ], [ %73, %71 ]
  %50 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.blink::NotificationAction"*, %"class.blink::NotificationAction"** %50, align 8
  %52 = icmp eq %"class.blink::NotificationAction"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::NotificationAction", %"class.blink::NotificationAction"* %51, i64 0, i32 0
  %55 = bitcast %"class.blink::NotificationAction"* %51 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %56 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %56, i64 2
  %58 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %57, align 8
  %59 = call %"class.v8::Value"* %58(%"class.blink::IDLDictionaryBase"* nonnull %54, %"class.v8::Object"* %42, %"class.v8::Isolate"* %2) #8
  br label %60

60:                                               ; preds = %47, %53
  %61 = phi %"class.v8::Value"* [ %59, %53 ], [ %45, %47 ]
  %62 = ptrtoint %"class.v8::Value"* %61 to i64
  %63 = icmp eq %"class.v8::Value"* %61, null
  %64 = select i1 %63, i64 %46, i64 %62
  %65 = inttoptr i64 %64 to %"class.v8::Value"*
  %66 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %34, i32 %48, %"class.v8::Value"* %65) #8
  %67 = trunc i16 %66 to i8
  %68 = icmp eq i8 %67, 0
  %69 = icmp ult i16 %66, 256
  %70 = or i1 %69, %68
  br i1 %70, label %75, label %71, !prof !9

71:                                               ; preds = %60
  %72 = add i32 %48, 1
  %73 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %49, i64 1
  %74 = icmp eq %"class.blink::Member"* %73, %39
  br i1 %74, label %75, label %47

75:                                               ; preds = %71, %60, %31
  %76 = phi i64 [ %33, %31 ], [ 0, %60 ], [ %33, %71 ]
  %77 = load i8, i8* %5, align 8, !range !4
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %81 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %80, align 8
  %82 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %83 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %82) #8
  %84 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %81, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %83, %"class.blink::RuntimeCallTimer"** %84, align 8
  store i8 0, i8* %5, align 8
  br label %85

85:                                               ; preds = %75, %79
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #8
  %86 = inttoptr i64 %76 to %"class.v8::Array"*
  ret %"class.v8::Array"* %86
}

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #1

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #1

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink19NotificationOptions4dataEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink19NotificationOptions4dataEv"}
!8 = !{!"branch_weights", i32 2146410443, i32 1073205}
!9 = !{!"branch_weights", i32 2002, i32 2000}
