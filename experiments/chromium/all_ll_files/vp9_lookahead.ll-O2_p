; ModuleID = '../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_lookahead.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_lookahead.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.lookahead_ctx = type { i32, i32, i32, i32, i32, %struct.lookahead_entry* }
%struct.lookahead_entry = type { %struct.yv12_buffer_config, i64, i64, i32, i64 }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_lookahead_destroy(%struct.lookahead_ctx*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.lookahead_ctx* %0, null
  br i1 %2, label %26, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 5
  %5 = load %struct.lookahead_entry*, %struct.lookahead_entry** %4, align 8
  %6 = icmp eq %struct.lookahead_entry* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %7, %11
  %12 = phi i64 [ %16, %11 ], [ 0, %7 ]
  %13 = phi %struct.lookahead_entry* [ %20, %11 ], [ %5, %7 ]
  %14 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %13, i64 %12, i32 0
  %15 = tail call i32 @vpx_free_frame_buffer(%struct.yv12_buffer_config* %14) #7
  %16 = add nuw nsw i64 %12, 1
  %17 = load i32, i32* %8, align 8
  %18 = sext i32 %17 to i64
  %19 = icmp slt i64 %16, %18
  %20 = load %struct.lookahead_entry*, %struct.lookahead_entry** %4, align 8
  br i1 %19, label %11, label %21

21:                                               ; preds = %11, %7
  %22 = phi %struct.lookahead_entry* [ %5, %7 ], [ %20, %11 ]
  %23 = bitcast %struct.lookahead_entry* %22 to i8*
  tail call void @free(i8* %23) #7
  br label %24

24:                                               ; preds = %3, %21
  %25 = bitcast %struct.lookahead_ctx* %0 to i8*
  tail call void @free(i8* %25) #7
  br label %26

26:                                               ; preds = %1, %24
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @vpx_free_frame_buffer(%struct.yv12_buffer_config*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.lookahead_ctx* @vp9_lookahead_init(i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp slt i32 %5, 25
  %8 = select i1 %7, i32 %5, i32 25
  %9 = icmp sgt i32 %8, 1
  %10 = select i1 %9, i32 %8, i32 1
  %11 = add nuw nsw i32 %10, 1
  %12 = tail call noalias i8* @calloc(i64 1, i64 32) #7
  %13 = bitcast i8* %12 to %struct.lookahead_ctx*
  %14 = icmp eq i8* %12, null
  br i1 %14, label %43, label %15

15:                                               ; preds = %6
  %16 = bitcast i8* %12 to i32*
  store i32 %11, i32* %16, align 8
  %17 = zext i32 %11 to i64
  %18 = tail call noalias i8* @calloc(i64 %17, i64 192) #7
  %19 = getelementptr inbounds i8, i8* %12, i64 24
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = icmp eq i8* %18, null
  %22 = bitcast i8* %18 to %struct.lookahead_entry*
  br i1 %21, label %42, label %23

23:                                               ; preds = %15
  %24 = zext i32 %10 to i64
  br label %28

25:                                               ; preds = %28
  %26 = add nuw nsw i64 %29, 1
  %27 = icmp ult i64 %29, %24
  br i1 %27, label %28, label %43

28:                                               ; preds = %25, %23
  %29 = phi i64 [ %26, %25 ], [ 0, %23 ]
  %30 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %22, i64 %29, i32 0
  %31 = tail call i32 @vpx_alloc_frame_buffer(%struct.yv12_buffer_config* %30, i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 160, i32 0) #7
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %25, label %33

33:                                               ; preds = %28
  %34 = zext i32 %11 to i64
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ %39, %35 ], [ 0, %33 ]
  %37 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %22, i64 %36, i32 0
  %38 = tail call i32 @vpx_free_frame_buffer(%struct.yv12_buffer_config* %37) #7
  %39 = add nuw nsw i64 %36, 1
  %40 = icmp eq i64 %39, %34
  br i1 %40, label %41, label %35

41:                                               ; preds = %35
  tail call void @free(i8* %18) #7
  br label %42

42:                                               ; preds = %15, %41
  tail call void @free(i8* %12) #7
  br label %43

43:                                               ; preds = %25, %6, %42
  %44 = phi %struct.lookahead_ctx* [ null, %42 ], [ %13, %6 ], [ %13, %25 ]
  ret %struct.lookahead_ctx* %44
}

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #4

declare i32 @vpx_alloc_frame_buffer(%struct.yv12_buffer_config*, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp9_lookahead_full(%struct.lookahead_ctx* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 2
  %5 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %4, %6
  %8 = zext i1 %7 to i32
  ret i32 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp9_lookahead_next_show_idx(%struct.lookahead_ctx* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_lookahead_push(%struct.lookahead_ctx* nocapture, %struct.yv12_buffer_config*, i64, i64, i32, i64) local_unnamed_addr #0 {
  %7 = alloca %struct.yv12_buffer_config, align 8
  %8 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 7
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 8
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 21
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 22
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, 2
  %23 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %22, %24
  br i1 %25, label %101, label %26

26:                                               ; preds = %6
  %27 = add nsw i32 %21, 1
  store i32 %27, i32* %20, align 4
  %28 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 5
  %31 = load %struct.lookahead_entry*, %struct.lookahead_entry** %30, align 8
  %32 = sext i32 %29 to i64
  %33 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32
  %34 = add nsw i32 %29, 1
  %35 = icmp slt i32 %34, %24
  %36 = select i1 %35, i32 0, i32 %24
  %37 = sub nsw i32 %34, %36
  store i32 %37, i32* %28, align 4
  %38 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %33, i64 0, i32 0
  %39 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %9, %40
  br i1 %41, label %42, label %54

42:                                               ; preds = %26
  %43 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %11, %44
  br i1 %45, label %46, label %54

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 0, i32 7
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %13, %48
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 0, i32 8
  %52 = load i32, i32* %51, align 8
  %53 = icmp ne i32 %15, %52
  br label %54

54:                                               ; preds = %46, %42, %26, %50
  %55 = phi i1 [ true, %46 ], [ true, %42 ], [ true, %26 ], [ %53, %50 ]
  %56 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %33, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = icmp sgt i32 %9, %57
  br i1 %58, label %71, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %11, %61
  br i1 %62, label %71, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 0, i32 5
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %13, %65
  br i1 %66, label %71, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 0, i32 6
  %69 = load i32, i32* %68, align 8
  %70 = icmp sgt i32 %15, %69
  br i1 %70, label %71, label %79

71:                                               ; preds = %54, %59, %63, %67
  %72 = bitcast %struct.yv12_buffer_config* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %72) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 160, i1 false)
  %73 = call i32 @vpx_alloc_frame_buffer(%struct.yv12_buffer_config* nonnull %7, i32 %9, i32 %11, i32 %17, i32 %19, i32 %4, i32 160, i32 0) #7
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %71
  %76 = call i32 @vpx_free_frame_buffer(%struct.yv12_buffer_config* %38) #7
  %77 = bitcast %struct.lookahead_entry* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* nonnull align 8 %72, i64 160, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %72) #7
  br label %92

78:                                               ; preds = %71
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %72) #7
  br label %101

79:                                               ; preds = %67
  br i1 %55, label %80, label %92

80:                                               ; preds = %79
  %81 = load i32, i32* %8, align 8
  store i32 %81, i32* %39, align 8
  %82 = load i32, i32* %10, align 4
  %83 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 0, i32 3
  store i32 %82, i32* %83, align 4
  %84 = load i32, i32* %12, align 4
  %85 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 0, i32 7
  store i32 %84, i32* %85, align 4
  %86 = load i32, i32* %14, align 8
  %87 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 0, i32 8
  store i32 %86, i32* %87, align 8
  %88 = load i32, i32* %16, align 8
  %89 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 0, i32 21
  store i32 %88, i32* %89, align 8
  %90 = load i32, i32* %18, align 4
  %91 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 0, i32 22
  store i32 %90, i32* %91, align 4
  br label %92

92:                                               ; preds = %75, %79, %80
  call void @vp9_copy_and_extend_frame(%struct.yv12_buffer_config* %1, %struct.yv12_buffer_config* %38) #7
  %93 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 1
  store i64 %2, i64* %93, align 8
  %94 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 2
  store i64 %3, i64* %94, align 8
  %95 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 4
  store i64 %5, i64* %95, align 8
  %96 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 4
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %31, i64 %32, i32 3
  store i32 %97, i32* %98, align 8
  %99 = load i32, i32* %96, align 8
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %96, align 8
  br label %101

101:                                              ; preds = %6, %78, %92
  %102 = phi i32 [ 0, %92 ], [ 1, %78 ], [ 1, %6 ]
  ret i32 %102
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @vp9_copy_and_extend_frame(%struct.yv12_buffer_config*, %struct.yv12_buffer_config*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.lookahead_entry* @vp9_lookahead_pop(%struct.lookahead_ctx*, i32) local_unnamed_addr #6 {
  %3 = icmp eq %struct.lookahead_ctx* %0, null
  br i1 %3, label %27, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %27, label %8

8:                                                ; preds = %4
  %9 = icmp ne i32 %1, 0
  %10 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, -1
  %13 = icmp eq i32 %6, %12
  %14 = or i1 %9, %13
  br i1 %14, label %15, label %27

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 5
  %19 = load %struct.lookahead_entry*, %struct.lookahead_entry** %18, align 8
  %20 = sext i32 %17 to i64
  %21 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %19, i64 %20
  %22 = add nsw i32 %17, 1
  %23 = icmp slt i32 %22, %11
  %24 = select i1 %23, i32 0, i32 %11
  %25 = sub nsw i32 %22, %24
  store i32 %25, i32* %16, align 4
  %26 = add nsw i32 %6, -1
  store i32 %26, i32* %5, align 4
  br label %27

27:                                               ; preds = %8, %4, %2, %15
  %28 = phi %struct.lookahead_entry* [ %21, %15 ], [ null, %4 ], [ null, %2 ], [ null, %8 ]
  ret %struct.lookahead_entry* %28
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.lookahead_entry* @vp9_lookahead_peek(%struct.lookahead_ctx* nocapture readonly, i32) local_unnamed_addr #5 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %21

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, %1
  br i1 %7, label %8, label %38

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, %1
  %12 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %11, %13
  %15 = select i1 %14, i32 0, i32 %13
  %16 = sub nsw i32 %11, %15
  %17 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 5
  %18 = load %struct.lookahead_entry*, %struct.lookahead_entry** %17, align 8
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %18, i64 %19
  br label %38

21:                                               ; preds = %2
  %22 = icmp eq i32 %1, -1
  br i1 %22, label %23, label %38

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = add nsw i32 %25, -1
  %27 = icmp slt i32 %25, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = add nsw i32 %30, %26
  br label %32

32:                                               ; preds = %28, %23
  %33 = phi i32 [ %31, %28 ], [ %26, %23 ]
  %34 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 5
  %35 = load %struct.lookahead_entry*, %struct.lookahead_entry** %34, align 8
  %36 = sext i32 %33 to i64
  %37 = getelementptr inbounds %struct.lookahead_entry, %struct.lookahead_entry* %35, i64 %36
  br label %38

38:                                               ; preds = %32, %21, %4, %8
  %39 = phi %struct.lookahead_entry* [ %20, %8 ], [ null, %4 ], [ %37, %32 ], [ null, %21 ]
  ret %struct.lookahead_entry* %39
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp9_lookahead_depth(%struct.lookahead_ctx* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.lookahead_ctx, %struct.lookahead_ctx* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
