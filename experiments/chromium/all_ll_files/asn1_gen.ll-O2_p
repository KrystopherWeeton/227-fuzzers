; ModuleID = '../../third_party/boringssl/src/crypto/x509/asn1_gen.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/asn1_gen.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.tag_name_st = type { i8*, i32, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.conf_st = type opaque
%struct.v3_ext_ctx = type { i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_req_st*, %struct.X509_crl_st*, %struct.X509V3_CONF_METHOD_st*, i8* }
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type { %struct.stack_st_GENERAL_SUBTREE*, %struct.stack_st_GENERAL_SUBTREE* }
%struct.stack_st_GENERAL_SUBTREE = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.X509_req_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type { %struct.DIST_POINT_NAME_st*, i32, i32, %struct.asn1_string_st*, i32, i32 }
%struct.DIST_POINT_NAME_st = type { i32, %union.anon.0, %struct.X509_name_st* }
%union.anon.0 = type { %struct.stack_st_GENERAL_NAME* }
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.X509V3_CONF_METHOD_st = type { i8* (i8*, i8*, i8*)*, %struct.stack_st_CONF_VALUE* (i8*, i8*)*, void (i8*, i8*)*, void (i8*, %struct.stack_st_CONF_VALUE*)* }
%struct.stack_st_CONF_VALUE = type opaque
%struct.conf_value_st = type { i8*, i8*, i8* }
%struct.tag_exp_arg = type { i32, i32, i32, i32, i8*, [20 x %struct.tag_exp_type], i32 }
%struct.tag_exp_type = type { i32, i32, i32, i32, i64 }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.stack_st_ASN1_TYPE = type opaque
%struct.v3_ext_method = type { i32, i32, %struct.ASN1_ITEM_st*, i8* ()*, void (i8*)*, i8* (i8*, i8**, i64)*, i32 (i8*, i8**)*, i8* (%struct.v3_ext_method*, i8*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*, i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, i8* }
%struct.ASN1_ITEM_st = type opaque
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }

@.str = private unnamed_addr constant [55 x i8] c"../../third_party/boringssl/src/crypto/x509/asn1_gen.c\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"tag=\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"UTF8\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"HEX\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"BITLIST\00", align 1
@asn1_str2tag.tntmp = internal unnamed_addr global %struct.tag_name_st* null, align 8
@asn1_str2tag.tnst = internal constant [49 x %struct.tag_name_st] [%struct.tag_name_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i32 4, i32 1 }, %struct.tag_name_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i32 7, i32 1 }, %struct.tag_name_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i32 4, i32 5 }, %struct.tag_name_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i32 3, i32 2 }, %struct.tag_name_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), i32 7, i32 2 }, %struct.tag_name_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 4, i32 10 }, %struct.tag_name_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), i32 10, i32 10 }, %struct.tag_name_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), i32 3, i32 6 }, %struct.tag_name_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i32 6, i32 6 }, %struct.tag_name_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i32 0, i32 0), i32 7, i32 23 }, %struct.tag_name_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i32 3, i32 23 }, %struct.tag_name_st { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i32 0, i32 0), i32 15, i32 24 }, %struct.tag_name_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i32 0, i32 0), i32 7, i32 24 }, %struct.tag_name_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), i32 3, i32 4 }, %struct.tag_name_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i32 0, i32 0), i32 11, i32 4 }, %struct.tag_name_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i32 0, i32 0), i32 6, i32 3 }, %struct.tag_name_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i32 0, i32 0), i32 9, i32 3 }, %struct.tag_name_st { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i32 0, i32 0), i32 15, i32 28 }, %struct.tag_name_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i32 4, i32 28 }, %struct.tag_name_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), i32 3, i32 22 }, %struct.tag_name_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i32 0, i32 0), i32 9, i32 22 }, %struct.tag_name_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i32 4, i32 12 }, %struct.tag_name_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i32 0, i32 0), i32 10, i32 12 }, %struct.tag_name_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i32 0, i32 0), i32 3, i32 30 }, %struct.tag_name_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i32 0, i32 0), i32 9, i32 30 }, %struct.tag_name_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i32 0, i32 0), i32 13, i32 26 }, %struct.tag_name_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i32 0, i32 0), i32 7, i32 26 }, %struct.tag_name_st { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i32 0, i32 0), i32 15, i32 19 }, %struct.tag_name_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0), i32 9, i32 19 }, %struct.tag_name_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i32 0, i32 0), i32 3, i32 20 }, %struct.tag_name_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i32 0, i32 0), i32 9, i32 20 }, %struct.tag_name_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), i32 13, i32 20 }, %struct.tag_name_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i32 0, i32 0), i32 13, i32 27 }, %struct.tag_name_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i32 0, i32 0), i32 6, i32 27 }, %struct.tag_name_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0), i32 7, i32 18 }, %struct.tag_name_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0), i32 13, i32 18 }, %struct.tag_name_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), i32 8, i32 16 }, %struct.tag_name_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i32 3, i32 16 }, %struct.tag_name_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i32 0, i32 0), i32 3, i32 17 }, %struct.tag_name_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), i32 3, i32 65538 }, %struct.tag_name_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), i32 8, i32 65538 }, %struct.tag_name_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i32 3, i32 65537 }, %struct.tag_name_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i32 0, i32 0), i32 8, i32 65537 }, %struct.tag_name_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48, i32 0, i32 0), i32 7, i32 65541 }, %struct.tag_name_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), i32 7, i32 65542 }, %struct.tag_name_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i32 0, i32 0), i32 7, i32 65543 }, %struct.tag_name_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), i32 7, i32 65540 }, %struct.tag_name_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i32 0, i32 0), i32 4, i32 65544 }, %struct.tag_name_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i32 6, i32 65544 }], align 16
@.str.6 = private unnamed_addr constant [5 x i8] c"BOOL\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"BOOLEAN\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"INT\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"INTEGER\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"ENUM\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"ENUMERATED\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"OID\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"OBJECT\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"UTCTIME\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"UTC\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"GENERALIZEDTIME\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"GENTIME\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"OCT\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"OCTETSTRING\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"BITSTR\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"BITSTRING\00", align 1
@.str.23 = private unnamed_addr constant [16 x i8] c"UNIVERSALSTRING\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"UNIV\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"IA5\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"IA5STRING\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"UTF8String\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"BMP\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"BMPSTRING\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"VISIBLESTRING\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"VISIBLE\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"PRINTABLESTRING\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"PRINTABLE\00", align 1
@.str.34 = private unnamed_addr constant [4 x i8] c"T61\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"T61STRING\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"TELETEXSTRING\00", align 1
@.str.37 = private unnamed_addr constant [14 x i8] c"GeneralString\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"GENSTR\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"NUMERIC\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"NUMERICSTRING\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"SEQUENCE\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"SEQ\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"SET\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"EXP\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"EXPLICIT\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"IMP\00", align 1
@.str.47 = private unnamed_addr constant [9 x i8] c"IMPLICIT\00", align 1
@.str.48 = private unnamed_addr constant [8 x i8] c"OCTWRAP\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"SEQWRAP\00", align 1
@.str.50 = private unnamed_addr constant [8 x i8] c"SETWRAP\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"BITWRAP\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"FORM\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"FORMAT\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"Char=\00", align 1
@.str.55 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"string=\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_type_st* @ASN1_generate_nconf(i8*, %struct.conf_st*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.v3_ext_ctx, align 8
  %6 = bitcast %struct.v3_ext_ctx* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  %7 = icmp eq %struct.conf_st* %1, null
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #7
  store i32 0, i32* %4, align 4
  %10 = call fastcc %struct.asn1_type_st* @generate_v3(i8* %0, %struct.v3_ext_ctx* null, i32 0, i32* nonnull %4) #7
  %11 = load i32, i32* %4, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  tail call void @ERR_put_error(i32 12, i32 0, i32 %11, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 155) #7
  br label %20

14:                                               ; preds = %2
  call void @X509V3_set_nconf(%struct.v3_ext_ctx* nonnull %5, %struct.conf_st* nonnull %1) #7
  %15 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #7
  store i32 0, i32* %3, align 4
  %16 = call fastcc %struct.asn1_type_st* @generate_v3(i8* %0, %struct.v3_ext_ctx* nonnull %5, i32 0, i32* nonnull %3) #7
  %17 = load i32, i32* %3, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  call void @ERR_put_error(i32 12, i32 0, i32 %17, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 155) #7
  br label %20

20:                                               ; preds = %19, %14, %13, %8
  %21 = phi i8* [ %9, %8 ], [ %9, %13 ], [ %15, %14 ], [ %15, %19 ]
  %22 = phi %struct.asn1_type_st* [ %10, %8 ], [ %10, %13 ], [ %16, %14 ], [ %16, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #7
  ret %struct.asn1_type_st* %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_type_st* @ASN1_generate_v3(i8*, %struct.v3_ext_ctx*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7
  store i32 0, i32* %3, align 4
  %5 = call fastcc %struct.asn1_type_st* @generate_v3(i8* %0, %struct.v3_ext_ctx* %1, i32 0, i32* nonnull %3)
  %6 = load i32, i32* %3, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @ERR_put_error(i32 12, i32 0, i32 %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 155) #7
  br label %9

9:                                                ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7
  ret %struct.asn1_type_st* %5
}

declare void @X509V3_set_nconf(%struct.v3_ext_ctx*, %struct.conf_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.asn1_type_st* @generate_v3(i8*, %struct.v3_ext_ctx*, i32, i32* nocapture) unnamed_addr #0 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.conf_value_st, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.tag_exp_arg, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = bitcast %struct.tag_exp_arg* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %16) #7
  %17 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %8, i64 0, i32 2
  %18 = bitcast i32* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 504, i1 false)
  %19 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  store i8* null, i8** %9, align 8
  %20 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %21 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %11, align 8
  %22 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %23 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #7
  store i64 0, i64* %13, align 8
  %24 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #7
  store i32 -1431655766, i32* %14, align 4
  %25 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #7
  store i32 -1431655766, i32* %15, align 4
  %26 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %8, i64 0, i32 0
  store i32 -1, i32* %26, align 8
  %27 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %8, i64 0, i32 1
  store i32 -1, i32* %27, align 4
  %28 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %8, i64 0, i32 3
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %8, i64 0, i32 6
  store i32 0, i32* %29, align 8
  %30 = call i32 @CONF_parse_list(i8* %0, i8 signext 44, i32 1, i32 (i8*, i32, i8*)* nonnull @asn1_cb, i8* nonnull %16) #7
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %4
  store i32 185, i32* %3, align 4
  br label %368

33:                                               ; preds = %4
  %34 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %8, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2
  %37 = icmp eq i32 %36, 16
  br i1 %37, label %38, label %118

38:                                               ; preds = %33
  %39 = icmp eq %struct.v3_ext_ctx* %1, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  store i32 170, i32* %3, align 4
  br label %368

41:                                               ; preds = %38
  %42 = icmp sgt i32 %2, 49
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  store i32 131, i32* %3, align 4
  br label %368

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %8, i64 0, i32 4
  %46 = load i8*, i8** %45, align 8
  %47 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7
  store i8* null, i8** %5, align 8
  %48 = call %struct.stack_st* @sk_new_null() #7
  %49 = bitcast %struct.stack_st* %48 to %struct.stack_st_ASN1_TYPE*
  %50 = icmp ne %struct.stack_st* %48, null
  br i1 %50, label %51, label %104

51:                                               ; preds = %44
  %52 = icmp eq i8* %46, null
  br i1 %52, label %78, label %53

53:                                               ; preds = %51
  %54 = call %struct.stack_st_CONF_VALUE* @X509V3_get_section(%struct.v3_ext_ctx* nonnull %1, i8* nonnull %46) #7
  %55 = icmp eq %struct.stack_st_CONF_VALUE* %54, null
  br i1 %55, label %104, label %56

56:                                               ; preds = %53
  %57 = bitcast %struct.stack_st_CONF_VALUE* %54 to %struct.stack_st*
  %58 = call i64 @sk_num(%struct.stack_st* nonnull %57) #7
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %78, label %60

60:                                               ; preds = %56
  %61 = add nsw i32 %2, 1
  br label %65

62:                                               ; preds = %73
  %63 = call i64 @sk_num(%struct.stack_st* nonnull %57) #7
  %64 = icmp ult i64 %77, %63
  br i1 %64, label %65, label %78

65:                                               ; preds = %60, %62
  %66 = phi i64 [ 0, %60 ], [ %77, %62 ]
  %67 = call i8* @sk_value(%struct.stack_st* nonnull %57, i64 %66) #7
  %68 = getelementptr inbounds i8, i8* %67, i64 16
  %69 = bitcast i8* %68 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = call fastcc %struct.asn1_type_st* @generate_v3(i8* %70, %struct.v3_ext_ctx* nonnull %1, i32 %61, i32* %3) #7
  %72 = icmp eq %struct.asn1_type_st* %71, null
  br i1 %72, label %104, label %73

73:                                               ; preds = %65
  %74 = bitcast %struct.asn1_type_st* %71 to i8*
  %75 = call i64 @sk_push(%struct.stack_st* nonnull %48, i8* nonnull %74) #7
  %76 = icmp eq i64 %75, 0
  %77 = add nuw i64 %66, 1
  br i1 %76, label %104, label %62

78:                                               ; preds = %62, %56, %51
  %79 = phi %struct.stack_st_CONF_VALUE* [ null, %51 ], [ %54, %56 ], [ %54, %62 ]
  %80 = icmp eq i32 %35, 17
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  %82 = call i32 @i2d_ASN1_SET_ANY(%struct.stack_st_ASN1_TYPE* nonnull %49, i8** nonnull %5) #7
  br label %85

83:                                               ; preds = %78
  %84 = call i32 @i2d_ASN1_SEQUENCE_ANY(%struct.stack_st_ASN1_TYPE* nonnull %49, i8** nonnull %5) #7
  br label %85

85:                                               ; preds = %83, %81
  %86 = phi i32 [ %82, %81 ], [ %84, %83 ]
  %87 = icmp slt i32 %86, 0
  br i1 %87, label %104, label %88

88:                                               ; preds = %85
  %89 = call %struct.asn1_type_st* @ASN1_TYPE_new() #7
  %90 = icmp eq %struct.asn1_type_st* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %88
  %92 = call %struct.asn1_string_st* @ASN1_STRING_type_new(i32 %35) #7
  %93 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %89, i64 0, i32 1
  %94 = bitcast %union.anon* %93 to %struct.asn1_string_st**
  store %struct.asn1_string_st* %92, %struct.asn1_string_st** %94, align 8
  %95 = icmp eq %struct.asn1_string_st* %92, null
  br i1 %95, label %104, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %89, i64 0, i32 0
  store i32 %35, i32* %97, align 8
  %98 = bitcast i8** %5 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %92, i64 0, i32 2
  %101 = bitcast i8** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = load %struct.asn1_string_st*, %struct.asn1_string_st** %94, align 8
  %103 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %102, i64 0, i32 0
  store i32 %86, i32* %103, align 8
  store i8* null, i8** %5, align 8
  br label %110

104:                                              ; preds = %73, %65, %91, %88, %85, %53, %44
  %105 = phi %struct.asn1_type_st* [ null, %44 ], [ null, %53 ], [ null, %88 ], [ %89, %91 ], [ null, %85 ], [ null, %65 ], [ null, %73 ]
  %106 = phi %struct.stack_st_CONF_VALUE* [ null, %44 ], [ null, %53 ], [ %79, %88 ], [ %79, %91 ], [ %79, %85 ], [ %54, %65 ], [ %54, %73 ]
  %107 = load i8*, i8** %5, align 8
  %108 = icmp eq i8* %107, null
  br i1 %108, label %110, label %109

109:                                              ; preds = %104
  call void @OPENSSL_free(i8* nonnull %107) #7
  br label %110

110:                                              ; preds = %96, %109, %104
  %111 = phi %struct.stack_st_CONF_VALUE* [ %79, %96 ], [ %106, %109 ], [ %106, %104 ]
  %112 = phi %struct.asn1_type_st* [ %89, %96 ], [ %105, %109 ], [ %105, %104 ]
  br i1 %50, label %113, label %114

113:                                              ; preds = %110
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %48, void (void (i8*)*, i8*)* nonnull @sk_ASN1_TYPE_call_free_func, void (i8*)* bitcast (void (%struct.asn1_type_st*)* @ASN1_TYPE_free to void (i8*)*)) #7
  br label %114

114:                                              ; preds = %113, %110
  %115 = icmp eq %struct.stack_st_CONF_VALUE* %111, null
  br i1 %115, label %117, label %116

116:                                              ; preds = %114
  call void @X509V3_section_free(%struct.v3_ext_ctx* nonnull %1, %struct.stack_st_CONF_VALUE* nonnull %111) #7
  br label %117

117:                                              ; preds = %114, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7
  br label %243

118:                                              ; preds = %33
  %119 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %8, i64 0, i32 4
  %120 = load i8*, i8** %119, align 8
  %121 = load i32, i32* %28, align 4
  %122 = bitcast %struct.conf_value_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #7
  %123 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %6, i64 0, i32 2
  %124 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 24, i1 false) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #7
  store i64 -6148914691236517206, i64* %7, align 8
  %125 = call %struct.asn1_type_st* @ASN1_TYPE_new() #7
  %126 = icmp eq %struct.asn1_type_st* %125, null
  br i1 %126, label %127, label %128

127:                                              ; preds = %118
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 660) #7
  br label %241

128:                                              ; preds = %118
  %129 = icmp eq i8* %120, null
  %130 = select i1 %129, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.55, i64 0, i64 0), i8* %120
  switch i32 %35, label %236 [
    i32 5, label %131
    i32 1, label %135
    i32 2, label %144
    i32 10, label %144
    i32 6, label %153
    i32 23, label %162
    i32 24, label %162
    i32 30, label %182
    i32 19, label %182
    i32 22, label %182
    i32 20, label %182
    i32 12, label %182
    i32 26, label %182
    i32 28, label %182
    i32 27, label %182
    i32 18, label %182
    i32 3, label %193
    i32 4, label %193
  ]

131:                                              ; preds = %128
  %132 = load i8, i8* %130, align 1
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %237, label %134

134:                                              ; preds = %131
  call void @ERR_put_error(i32 12, i32 0, i32 133, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 671) #7
  br label %240

135:                                              ; preds = %128
  %136 = icmp eq i32 %121, 1
  br i1 %136, label %138, label %137

137:                                              ; preds = %135
  call void @ERR_put_error(i32 12, i32 0, i32 161, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 678) #7
  br label %240

138:                                              ; preds = %135
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 0, i64 16, i1 false) #7
  store i8* %130, i8** %123, align 8
  %139 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %125, i64 0, i32 1
  %140 = bitcast %union.anon* %139 to i32*
  %141 = call i32 @X509V3_get_value_bool(%struct.conf_value_st* nonnull %6, i32* %140) #7
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %237

143:                                              ; preds = %138
  call void @ERR_put_error(i32 12, i32 0, i32 125, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 685) #7
  br label %239

144:                                              ; preds = %128, %128
  %145 = icmp eq i32 %121, 1
  br i1 %145, label %147, label %146

146:                                              ; preds = %144
  call void @ERR_put_error(i32 12, i32 0, i32 139, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 693) #7
  br label %240

147:                                              ; preds = %144
  %148 = call %struct.asn1_string_st* @s2i_ASN1_INTEGER(%struct.v3_ext_method* null, i8* %130) #7
  %149 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %125, i64 0, i32 1
  %150 = bitcast %union.anon* %149 to %struct.asn1_string_st**
  store %struct.asn1_string_st* %148, %struct.asn1_string_st** %150, align 8
  %151 = icmp eq %struct.asn1_string_st* %148, null
  br i1 %151, label %152, label %237

152:                                              ; preds = %147
  call void @ERR_put_error(i32 12, i32 0, i32 130, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 697) #7
  br label %239

153:                                              ; preds = %128
  %154 = icmp eq i32 %121, 1
  br i1 %154, label %156, label %155

155:                                              ; preds = %153
  call void @ERR_put_error(i32 12, i32 0, i32 165, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 704) #7
  br label %240

156:                                              ; preds = %153
  %157 = call %struct.asn1_object_st* @OBJ_txt2obj(i8* %130, i32 0) #7
  %158 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %125, i64 0, i32 1
  %159 = bitcast %union.anon* %158 to %struct.asn1_object_st**
  store %struct.asn1_object_st* %157, %struct.asn1_object_st** %159, align 8
  %160 = icmp eq %struct.asn1_object_st* %157, null
  br i1 %160, label %161, label %237

161:                                              ; preds = %156
  call void @ERR_put_error(i32 12, i32 0, i32 134, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 708) #7
  br label %239

162:                                              ; preds = %128, %128
  %163 = icmp eq i32 %121, 1
  br i1 %163, label %165, label %164

164:                                              ; preds = %162
  call void @ERR_put_error(i32 12, i32 0, i32 176, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 716) #7
  br label %240

165:                                              ; preds = %162
  %166 = call %struct.asn1_string_st* @ASN1_STRING_new() #7
  %167 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %125, i64 0, i32 1
  %168 = bitcast %union.anon* %167 to %struct.asn1_string_st**
  store %struct.asn1_string_st* %166, %struct.asn1_string_st** %168, align 8
  %169 = icmp eq %struct.asn1_string_st* %166, null
  br i1 %169, label %170, label %171

170:                                              ; preds = %165
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 720) #7
  br label %239

171:                                              ; preds = %165
  %172 = call i32 @ASN1_STRING_set(%struct.asn1_string_st* nonnull %166, i8* %130, i32 -1) #7
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 724) #7
  br label %239

175:                                              ; preds = %171
  %176 = load %struct.asn1_string_st*, %struct.asn1_string_st** %168, align 8
  %177 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %176, i64 0, i32 1
  store i32 %35, i32* %177, align 4
  %178 = load %struct.asn1_string_st*, %struct.asn1_string_st** %168, align 8
  %179 = call i32 @ASN1_TIME_check(%struct.asn1_string_st* %178) #7
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %237

181:                                              ; preds = %175
  call void @ERR_put_error(i32 12, i32 0, i32 138, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 729) #7
  br label %239

182:                                              ; preds = %128, %128, %128, %128, %128, %128, %128, %128, %128
  switch i32 %121, label %184 [
    i32 1, label %185
    i32 2, label %183
  ]

183:                                              ; preds = %182
  br label %185

184:                                              ; preds = %182
  call void @ERR_put_error(i32 12, i32 0, i32 127, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 750) #7
  br label %240

185:                                              ; preds = %183, %182
  %186 = phi i32 [ 4096, %183 ], [ 4097, %182 ]
  %187 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %125, i64 0, i32 1
  %188 = bitcast %union.anon* %187 to %struct.asn1_string_st**
  %189 = call i64 @ASN1_tag2bit(i32 %35) #7
  %190 = call i32 @ASN1_mbstring_copy(%struct.asn1_string_st** %188, i8* %130, i32 -1, i32 %186, i64 %189) #7
  %191 = icmp slt i32 %190, 1
  br i1 %191, label %192, label %237

192:                                              ; preds = %185
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 756) #7
  br label %239

193:                                              ; preds = %128, %128
  %194 = call %struct.asn1_string_st* @ASN1_STRING_new() #7
  %195 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %125, i64 0, i32 1
  %196 = bitcast %union.anon* %195 to %struct.asn1_string_st**
  store %struct.asn1_string_st* %194, %struct.asn1_string_st** %196, align 8
  %197 = icmp eq %struct.asn1_string_st* %194, null
  br i1 %197, label %198, label %199

198:                                              ; preds = %193
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 767) #7
  br label %240

199:                                              ; preds = %193
  switch i32 %121, label %215 [
    i32 3, label %200
    i32 1, label %213
  ]

200:                                              ; preds = %199
  %201 = call i8* @x509v3_hex_to_bytes(i8* %130, i64* nonnull %7) #7
  %202 = icmp eq i8* %201, null
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @ERR_put_error(i32 12, i32 0, i32 128, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 774) #7
  br label %239

204:                                              ; preds = %200
  %205 = load %struct.asn1_string_st*, %struct.asn1_string_st** %196, align 8
  %206 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %205, i64 0, i32 2
  store i8* %201, i8** %206, align 8
  %207 = load i64, i64* %7, align 8
  %208 = trunc i64 %207 to i32
  %209 = load %struct.asn1_string_st*, %struct.asn1_string_st** %196, align 8
  %210 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %209, i64 0, i32 0
  store i32 %208, i32* %210, align 8
  %211 = load %struct.asn1_string_st*, %struct.asn1_string_st** %196, align 8
  %212 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %211, i64 0, i32 1
  store i32 %35, i32* %212, align 4
  br label %225

213:                                              ; preds = %199
  %214 = call i32 @ASN1_STRING_set(%struct.asn1_string_st* nonnull %194, i8* %130, i32 -1) #7
  br label %225

215:                                              ; preds = %199
  %216 = icmp eq i32 %121, 4
  %217 = icmp eq i32 %35, 3
  %218 = and i1 %217, %216
  br i1 %218, label %219, label %224

219:                                              ; preds = %215
  %220 = bitcast %struct.asn1_string_st* %194 to i8*
  %221 = call i32 @CONF_parse_list(i8* %130, i8 signext 44, i32 1, i32 (i8*, i32, i8*)* nonnull @bitstr_cb, i8* nonnull %220) #7
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %237

223:                                              ; preds = %219
  call void @ERR_put_error(i32 12, i32 0, i32 151, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 788) #7
  br label %239

224:                                              ; preds = %215
  call void @ERR_put_error(i32 12, i32 0, i32 124, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 794) #7
  br label %240

225:                                              ; preds = %213, %204
  %226 = icmp eq i32 %35, 3
  br i1 %226, label %227, label %237

227:                                              ; preds = %225
  %228 = load %struct.asn1_string_st*, %struct.asn1_string_st** %196, align 8
  %229 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %228, i64 0, i32 3
  %230 = load i64, i64* %229, align 8
  %231 = and i64 %230, -16
  store i64 %231, i64* %229, align 8
  %232 = load %struct.asn1_string_st*, %struct.asn1_string_st** %196, align 8
  %233 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %232, i64 0, i32 3
  %234 = load i64, i64* %233, align 8
  %235 = or i64 %234, 8
  store i64 %235, i64* %233, align 8
  br label %237

236:                                              ; preds = %128
  call void @ERR_put_error(i32 12, i32 0, i32 188, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 807) #7
  br label %239

237:                                              ; preds = %227, %225, %219, %185, %175, %156, %147, %138, %131
  %238 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %125, i64 0, i32 0
  store i32 %35, i32* %238, align 8
  br label %241

239:                                              ; preds = %236, %223, %203, %192, %181, %174, %170, %161, %152, %143
  call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i64 0, i64 0), i8* %130) #7
  br label %240

240:                                              ; preds = %239, %224, %198, %184, %164, %155, %146, %137, %134
  call void @ASN1_TYPE_free(%struct.asn1_type_st* nonnull %125) #7
  br label %241

241:                                              ; preds = %127, %237, %240
  %242 = phi %struct.asn1_type_st* [ null, %240 ], [ %125, %237 ], [ null, %127 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #7
  br label %243

243:                                              ; preds = %241, %117
  %244 = phi %struct.asn1_type_st* [ %112, %117 ], [ %242, %241 ]
  %245 = icmp eq %struct.asn1_type_st* %244, null
  br i1 %245, label %368, label %246

246:                                              ; preds = %243
  %247 = load i32, i32* %26, align 8
  %248 = icmp eq i32 %247, -1
  %249 = load i32, i32* %29, align 8
  %250 = icmp eq i32 %249, 0
  %251 = and i1 %248, %250
  br i1 %251, label %368, label %252

252:                                              ; preds = %246
  %253 = call i32 @i2d_ASN1_TYPE(%struct.asn1_type_st* nonnull %244, i8** nonnull %9) #7
  call void @ASN1_TYPE_free(%struct.asn1_type_st* nonnull %244) #7
  %254 = bitcast i8** %9 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast i8** %10 to i64*
  store i64 %255, i64* %256, align 8
  %257 = load i32, i32* %26, align 8
  %258 = icmp eq i32 %257, -1
  br i1 %258, label %282, label %259

259:                                              ; preds = %252
  %260 = sext i32 %253 to i64
  %261 = call i32 @ASN1_get_object(i8** nonnull %10, i64* nonnull %13, i32* nonnull %14, i32* nonnull %15, i64 %260) #7
  %262 = trunc i32 %261 to i8
  %263 = icmp slt i8 %262, 0
  br i1 %263, label %359, label %264

264:                                              ; preds = %259
  %265 = load i64, i64* %256, align 8
  %266 = load i64, i64* %254, align 8
  %267 = sub i64 %266, %265
  %268 = trunc i64 %267 to i32
  %269 = add i32 %253, %268
  %270 = and i32 %261, 1
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %273, label %272

272:                                              ; preds = %264
  store i64 0, i64* %13, align 8
  br label %277

273:                                              ; preds = %264
  %274 = and i32 %261, 32
  %275 = load i64, i64* %13, align 8
  %276 = trunc i64 %275 to i32
  br label %277

277:                                              ; preds = %273, %272
  %278 = phi i32 [ 0, %272 ], [ %276, %273 ]
  %279 = phi i32 [ 2, %272 ], [ %274, %273 ]
  %280 = load i32, i32* %26, align 8
  %281 = call i32 @ASN1_object_size(i32 0, i32 %278, i32 %280) #7
  br label %282

282:                                              ; preds = %252, %277
  %283 = phi i32 [ %281, %277 ], [ %253, %252 ]
  %284 = phi i32 [ %269, %277 ], [ %253, %252 ]
  %285 = phi i32 [ %279, %277 ], [ 0, %252 ]
  %286 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %8, i64 0, i32 5, i64 0
  %287 = load i32, i32* %29, align 8
  %288 = icmp sgt i32 %287, 0
  br i1 %288, label %289, label %308

289:                                              ; preds = %282
  %290 = sext i32 %287 to i64
  %291 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %8, i64 0, i32 5, i64 %290
  br label %292

292:                                              ; preds = %289, %292
  %293 = phi %struct.tag_exp_type* [ %296, %292 ], [ %291, %289 ]
  %294 = phi i32 [ %304, %292 ], [ %283, %289 ]
  %295 = phi i32 [ %305, %292 ], [ 0, %289 ]
  %296 = getelementptr inbounds %struct.tag_exp_type, %struct.tag_exp_type* %293, i64 -1
  %297 = getelementptr inbounds %struct.tag_exp_type, %struct.tag_exp_type* %293, i64 -1, i32 3
  %298 = load i32, i32* %297, align 4
  %299 = add nsw i32 %298, %294
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds %struct.tag_exp_type, %struct.tag_exp_type* %293, i64 -1, i32 4
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %struct.tag_exp_type, %struct.tag_exp_type* %296, i64 0, i32 0
  %303 = load i32, i32* %302, align 8
  %304 = call i32 @ASN1_object_size(i32 0, i32 %299, i32 %303) #7
  %305 = add nuw nsw i32 %295, 1
  %306 = load i32, i32* %29, align 8
  %307 = icmp slt i32 %305, %306
  br i1 %307, label %292, label %308

308:                                              ; preds = %292, %282
  %309 = phi i32 [ %283, %282 ], [ %304, %292 ]
  %310 = sext i32 %309 to i64
  %311 = call i8* @OPENSSL_malloc(i64 %310) #7
  %312 = icmp eq i8* %311, null
  br i1 %312, label %359, label %313

313:                                              ; preds = %308
  store i8* %311, i8** %11, align 8
  %314 = load i32, i32* %29, align 8
  %315 = icmp sgt i32 %314, 0
  br i1 %315, label %316, label %339

316:                                              ; preds = %313, %334
  %317 = phi i32 [ %335, %334 ], [ 0, %313 ]
  %318 = phi %struct.tag_exp_type* [ %336, %334 ], [ %286, %313 ]
  %319 = getelementptr inbounds %struct.tag_exp_type, %struct.tag_exp_type* %318, i64 0, i32 2
  %320 = load i32, i32* %319, align 8
  %321 = getelementptr inbounds %struct.tag_exp_type, %struct.tag_exp_type* %318, i64 0, i32 4
  %322 = load i64, i64* %321, align 8
  %323 = trunc i64 %322 to i32
  %324 = getelementptr inbounds %struct.tag_exp_type, %struct.tag_exp_type* %318, i64 0, i32 0
  %325 = load i32, i32* %324, align 8
  %326 = getelementptr inbounds %struct.tag_exp_type, %struct.tag_exp_type* %318, i64 0, i32 1
  %327 = load i32, i32* %326, align 4
  call void @ASN1_put_object(i8** nonnull %11, i32 %320, i32 %323, i32 %325, i32 %327) #7
  %328 = getelementptr inbounds %struct.tag_exp_type, %struct.tag_exp_type* %318, i64 0, i32 3
  %329 = load i32, i32* %328, align 4
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %334, label %331

331:                                              ; preds = %316
  %332 = load i8*, i8** %11, align 8
  %333 = getelementptr inbounds i8, i8* %332, i64 1
  store i8* %333, i8** %11, align 8
  store i8 0, i8* %332, align 1
  br label %334

334:                                              ; preds = %316, %331
  %335 = add nuw nsw i32 %317, 1
  %336 = getelementptr inbounds %struct.tag_exp_type, %struct.tag_exp_type* %318, i64 1
  %337 = load i32, i32* %29, align 8
  %338 = icmp slt i32 %335, %337
  br i1 %338, label %316, label %339

339:                                              ; preds = %334, %313
  %340 = load i32, i32* %26, align 8
  %341 = icmp eq i32 %340, -1
  br i1 %341, label %351, label %342

342:                                              ; preds = %339
  %343 = load i32, i32* %27, align 4
  %344 = icmp eq i32 %343, 0
  %345 = and i32 %340, -2
  %346 = icmp eq i32 %345, 16
  %347 = and i1 %346, %344
  %348 = select i1 %347, i32 32, i32 %285
  %349 = load i64, i64* %13, align 8
  %350 = trunc i64 %349 to i32
  call void @ASN1_put_object(i8** nonnull %11, i32 %348, i32 %350, i32 %340, i32 %343) #7
  br label %351

351:                                              ; preds = %339, %342
  %352 = icmp eq i32 %284, 0
  br i1 %352, label %357, label %353

353:                                              ; preds = %351
  %354 = sext i32 %284 to i64
  %355 = load i8*, i8** %10, align 8
  %356 = load i8*, i8** %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %356, i8* align 1 %355, i64 %354, i1 false) #7
  br label %357

357:                                              ; preds = %351, %353
  store i8* %311, i8** %12, align 8
  %358 = call %struct.asn1_type_st* @d2i_ASN1_TYPE(%struct.asn1_type_st** null, i8** nonnull %12, i64 %310) #7
  br label %359

359:                                              ; preds = %308, %259, %357
  %360 = phi %struct.asn1_type_st* [ null, %259 ], [ %358, %357 ], [ null, %308 ]
  %361 = phi i8* [ null, %259 ], [ %311, %357 ], [ null, %308 ]
  %362 = load i8*, i8** %9, align 8
  %363 = icmp eq i8* %362, null
  br i1 %363, label %365, label %364

364:                                              ; preds = %359
  call void @OPENSSL_free(i8* nonnull %362) #7
  br label %365

365:                                              ; preds = %359, %364
  %366 = icmp eq i8* %361, null
  br i1 %366, label %368, label %367

367:                                              ; preds = %365
  call void @OPENSSL_free(i8* nonnull %361) #7
  br label %368

368:                                              ; preds = %367, %365, %246, %243, %43, %40, %32
  %369 = phi %struct.asn1_type_st* [ null, %32 ], [ null, %43 ], [ null, %40 ], [ null, %243 ], [ %244, %246 ], [ %360, %365 ], [ %360, %367 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %16) #7
  ret %struct.asn1_type_st* %369
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare i32 @CONF_parse_list(i8*, i8 signext, i32, i32 (i8*, i32, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @asn1_cb(i8*, i32, i8*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i8* %2 to %struct.tag_exp_arg*
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7
  store i32 -1431655766, i32* %4, align 4
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #7
  store i32 -1431655766, i32* %5, align 4
  %9 = icmp eq i8* %0, null
  br i1 %9, label %231, label %10

10:                                               ; preds = %3
  %11 = icmp sgt i32 %1, 0
  br i1 %11, label %14, label %30

12:                                               ; preds = %14
  %13 = icmp eq i32 %20, %1
  br i1 %13, label %30, label %14

14:                                               ; preds = %10, %12
  %15 = phi i8* [ %19, %12 ], [ %0, %10 ]
  %16 = phi i32 [ %20, %12 ], [ 0, %10 ]
  %17 = load i8, i8* %15, align 1
  %18 = icmp eq i8 %17, 58
  %19 = getelementptr inbounds i8, i8* %15, i64 1
  %20 = add nuw nsw i32 %16, 1
  br i1 %18, label %21, label %12

21:                                               ; preds = %14
  %22 = ptrtoint i8* %19 to i64
  %23 = ptrtoint i8* %0 to i64
  %24 = sub i64 %23, %22
  %25 = trunc i64 %24 to i32
  %26 = add i32 %25, %1
  %27 = ptrtoint i8* %15 to i64
  %28 = sub i64 %27, %23
  %29 = trunc i64 %28 to i32
  br label %30

30:                                               ; preds = %12, %10, %21
  %31 = phi i32 [ %29, %21 ], [ %1, %10 ], [ %1, %12 ]
  %32 = phi i32 [ %26, %21 ], [ 0, %10 ], [ 0, %12 ]
  %33 = phi i8* [ %19, %21 ], [ null, %10 ], [ null, %12 ]
  %34 = icmp eq i32 %31, -1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = tail call i64 @strlen(i8* nonnull %0) #8
  %37 = trunc i64 %36 to i32
  br label %38

38:                                               ; preds = %35, %30
  %39 = phi i32 [ %37, %35 ], [ %31, %30 ]
  %40 = sext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %38
  %42 = phi i32 [ 0, %38 ], [ %53, %52 ]
  %43 = phi %struct.tag_name_st* [ getelementptr inbounds ([49 x %struct.tag_name_st], [49 x %struct.tag_name_st]* @asn1_str2tag.tnst, i64 0, i64 0), %38 ], [ %54, %52 ]
  %44 = getelementptr inbounds %struct.tag_name_st, %struct.tag_name_st* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %39, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.tag_name_st, %struct.tag_name_st* %43, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = tail call i32 @strncmp(i8* %49, i8* nonnull %0, i64 %40) #8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %47, %41
  %53 = add nuw nsw i32 %42, 1
  %54 = getelementptr inbounds %struct.tag_name_st, %struct.tag_name_st* %43, i64 1
  store %struct.tag_name_st* %54, %struct.tag_name_st** @asn1_str2tag.tntmp, align 8
  %55 = icmp eq i32 %53, 49
  br i1 %55, label %60, label %41

56:                                               ; preds = %47
  %57 = getelementptr inbounds %struct.tag_name_st, %struct.tag_name_st* %43, i64 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, -1
  br i1 %59, label %60, label %61

60:                                               ; preds = %52, %56
  tail call void @ERR_put_error(i32 12, i32 0, i32 185, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 329) #7
  tail call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %0) #7
  br label %231

61:                                               ; preds = %56
  %62 = and i32 %58, 65536
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %76

64:                                               ; preds = %61
  %65 = getelementptr inbounds i8, i8* %2, i64 8
  %66 = bitcast i8* %65 to i32*
  store i32 %58, i32* %66, align 8
  %67 = getelementptr inbounds i8, i8* %2, i64 16
  %68 = bitcast i8* %67 to i8**
  store i8* %33, i8** %68, align 8
  %69 = icmp eq i8* %33, null
  br i1 %69, label %70, label %231

70:                                               ; preds = %64
  %71 = sext i32 %31 to i64
  %72 = getelementptr inbounds i8, i8* %0, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %231, label %75

75:                                               ; preds = %70
  tail call void @ERR_put_error(i32 12, i32 0, i32 155, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 340) #7
  br label %231

76:                                               ; preds = %61
  switch i32 %58, label %230 [
    i32 65537, label %77
    i32 65538, label %87
    i32 65542, label %110
    i32 65543, label %133
    i32 65540, label %156
    i32 65541, label %179
    i32 65544, label %202
  ]

77:                                               ; preds = %76
  %78 = bitcast i8* %2 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %82, label %81

81:                                               ; preds = %77
  tail call void @ERR_put_error(i32 12, i32 0, i32 131, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 351) #7
  br label %231

82:                                               ; preds = %77
  %83 = getelementptr inbounds i8, i8* %2, i64 4
  %84 = bitcast i8* %83 to i32*
  %85 = tail call fastcc i32 @parse_tagging(i8* %33, i32 %32, i32* %78, i32* %84)
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %231, label %230

87:                                               ; preds = %76
  %88 = call fastcc i32 @parse_tagging(i8* %33, i32 %32, i32* nonnull %4, i32* nonnull %5)
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %231, label %90

90:                                               ; preds = %87
  %91 = load i32, i32* %4, align 4
  %92 = load i32, i32* %5, align 4
  %93 = bitcast i8* %2 to i32*
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, -1
  br i1 %95, label %97, label %96

96:                                               ; preds = %90
  tail call void @ERR_put_error(i32 12, i32 0, i32 129, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 542) #7
  br label %231

97:                                               ; preds = %90
  %98 = getelementptr inbounds i8, i8* %2, i64 504
  %99 = bitcast i8* %98 to i32*
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 20
  br i1 %101, label %102, label %103

102:                                              ; preds = %97
  tail call void @ERR_put_error(i32 12, i32 0, i32 110, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 547) #7
  br label %231

103:                                              ; preds = %97
  %104 = add nsw i32 %100, 1
  store i32 %104, i32* %99, align 8
  %105 = sext i32 %100 to i64
  %106 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %105, i32 0
  store i32 %91, i32* %106, align 8
  %107 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %105, i32 1
  store i32 %92, i32* %107, align 4
  %108 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %105, i32 2
  store i32 1, i32* %108, align 8
  %109 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %105, i32 3
  store i32 0, i32* %109, align 4
  br label %230

110:                                              ; preds = %76
  %111 = bitcast i8* %2 to i32*
  %112 = load i32, i32* %111, align 8
  %113 = getelementptr inbounds i8, i8* %2, i64 504
  %114 = bitcast i8* %113 to i32*
  %115 = load i32, i32* %114, align 8
  %116 = icmp eq i32 %115, 20
  br i1 %116, label %117, label %118

117:                                              ; preds = %110
  tail call void @ERR_put_error(i32 12, i32 0, i32 110, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 547) #7
  br label %231

118:                                              ; preds = %110
  %119 = icmp eq i32 %112, -1
  %120 = add nsw i32 %115, 1
  store i32 %120, i32* %114, align 8
  %121 = sext i32 %115 to i64
  %122 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %121, i32 0
  br i1 %119, label %128, label %123

123:                                              ; preds = %118
  store i32 %112, i32* %122, align 8
  %124 = getelementptr inbounds i8, i8* %2, i64 4
  %125 = bitcast i8* %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %121, i32 1
  store i32 %126, i32* %127, align 4
  store i32 -1, i32* %111, align 8
  store i32 -1, i32* %125, align 4
  br label %130

128:                                              ; preds = %118
  store i32 16, i32* %122, align 8
  %129 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %121, i32 1
  store i32 0, i32* %129, align 4
  br label %130

130:                                              ; preds = %123, %128
  %131 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %121, i32 2
  store i32 1, i32* %131, align 8
  %132 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %121, i32 3
  store i32 0, i32* %132, align 4
  br label %230

133:                                              ; preds = %76
  %134 = bitcast i8* %2 to i32*
  %135 = load i32, i32* %134, align 8
  %136 = getelementptr inbounds i8, i8* %2, i64 504
  %137 = bitcast i8* %136 to i32*
  %138 = load i32, i32* %137, align 8
  %139 = icmp eq i32 %138, 20
  br i1 %139, label %140, label %141

140:                                              ; preds = %133
  tail call void @ERR_put_error(i32 12, i32 0, i32 110, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 547) #7
  br label %231

141:                                              ; preds = %133
  %142 = icmp eq i32 %135, -1
  %143 = add nsw i32 %138, 1
  store i32 %143, i32* %137, align 8
  %144 = sext i32 %138 to i64
  %145 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %144, i32 0
  br i1 %142, label %151, label %146

146:                                              ; preds = %141
  store i32 %135, i32* %145, align 8
  %147 = getelementptr inbounds i8, i8* %2, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %144, i32 1
  store i32 %149, i32* %150, align 4
  store i32 -1, i32* %134, align 8
  store i32 -1, i32* %148, align 4
  br label %153

151:                                              ; preds = %141
  store i32 17, i32* %145, align 8
  %152 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %144, i32 1
  store i32 0, i32* %152, align 4
  br label %153

153:                                              ; preds = %146, %151
  %154 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %144, i32 2
  store i32 1, i32* %154, align 8
  %155 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %144, i32 3
  store i32 0, i32* %155, align 4
  br label %230

156:                                              ; preds = %76
  %157 = bitcast i8* %2 to i32*
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds i8, i8* %2, i64 504
  %160 = bitcast i8* %159 to i32*
  %161 = load i32, i32* %160, align 8
  %162 = icmp eq i32 %161, 20
  br i1 %162, label %163, label %164

163:                                              ; preds = %156
  tail call void @ERR_put_error(i32 12, i32 0, i32 110, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 547) #7
  br label %231

164:                                              ; preds = %156
  %165 = icmp eq i32 %158, -1
  %166 = add nsw i32 %161, 1
  store i32 %166, i32* %160, align 8
  %167 = sext i32 %161 to i64
  %168 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %167, i32 0
  br i1 %165, label %174, label %169

169:                                              ; preds = %164
  store i32 %158, i32* %168, align 8
  %170 = getelementptr inbounds i8, i8* %2, i64 4
  %171 = bitcast i8* %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %167, i32 1
  store i32 %172, i32* %173, align 4
  store i32 -1, i32* %157, align 8
  store i32 -1, i32* %171, align 4
  br label %176

174:                                              ; preds = %164
  store i32 3, i32* %168, align 8
  %175 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %167, i32 1
  store i32 0, i32* %175, align 4
  br label %176

176:                                              ; preds = %169, %174
  %177 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %167, i32 2
  store i32 0, i32* %177, align 8
  %178 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %167, i32 3
  store i32 1, i32* %178, align 4
  br label %230

179:                                              ; preds = %76
  %180 = bitcast i8* %2 to i32*
  %181 = load i32, i32* %180, align 8
  %182 = getelementptr inbounds i8, i8* %2, i64 504
  %183 = bitcast i8* %182 to i32*
  %184 = load i32, i32* %183, align 8
  %185 = icmp eq i32 %184, 20
  br i1 %185, label %186, label %187

186:                                              ; preds = %179
  tail call void @ERR_put_error(i32 12, i32 0, i32 110, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 547) #7
  br label %231

187:                                              ; preds = %179
  %188 = icmp eq i32 %181, -1
  %189 = add nsw i32 %184, 1
  store i32 %189, i32* %183, align 8
  %190 = sext i32 %184 to i64
  %191 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %190, i32 0
  br i1 %188, label %197, label %192

192:                                              ; preds = %187
  store i32 %181, i32* %191, align 8
  %193 = getelementptr inbounds i8, i8* %2, i64 4
  %194 = bitcast i8* %193 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %190, i32 1
  store i32 %195, i32* %196, align 4
  store i32 -1, i32* %180, align 8
  store i32 -1, i32* %194, align 4
  br label %199

197:                                              ; preds = %187
  store i32 4, i32* %191, align 8
  %198 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %190, i32 1
  store i32 0, i32* %198, align 4
  br label %199

199:                                              ; preds = %192, %197
  %200 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %190, i32 2
  store i32 0, i32* %200, align 8
  %201 = getelementptr inbounds %struct.tag_exp_arg, %struct.tag_exp_arg* %6, i64 0, i32 5, i64 %190, i32 3
  store i32 0, i32* %201, align 4
  br label %230

202:                                              ; preds = %76
  %203 = icmp eq i8* %33, null
  br i1 %203, label %204, label %205

204:                                              ; preds = %202
  tail call void @ERR_put_error(i32 12, i32 0, i32 182, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 388) #7
  br label %231

205:                                              ; preds = %202
  %206 = tail call i32 @strncmp(i8* nonnull %33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #8
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %211

208:                                              ; preds = %205
  %209 = getelementptr inbounds i8, i8* %2, i64 12
  %210 = bitcast i8* %209 to i32*
  store i32 1, i32* %210, align 4
  br label %230

211:                                              ; preds = %205
  %212 = tail call i32 @strncmp(i8* nonnull %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #8
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %211
  %215 = getelementptr inbounds i8, i8* %2, i64 12
  %216 = bitcast i8* %215 to i32*
  store i32 2, i32* %216, align 4
  br label %230

217:                                              ; preds = %211
  %218 = tail call i32 @strncmp(i8* nonnull %33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3) #8
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %223

220:                                              ; preds = %217
  %221 = getelementptr inbounds i8, i8* %2, i64 12
  %222 = bitcast i8* %221 to i32*
  store i32 3, i32* %222, align 4
  br label %230

223:                                              ; preds = %217
  %224 = tail call i32 @strncmp(i8* nonnull %33, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i64 7) #8
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %229

226:                                              ; preds = %223
  %227 = getelementptr inbounds i8, i8* %2, i64 12
  %228 = bitcast i8* %227 to i32*
  store i32 4, i32* %228, align 4
  br label %230

229:                                              ; preds = %223
  tail call void @ERR_put_error(i32 12, i32 0, i32 182, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 400) #7
  br label %231

230:                                              ; preds = %199, %176, %153, %130, %103, %82, %208, %220, %226, %214, %76
  br label %231

231:                                              ; preds = %96, %102, %186, %163, %140, %117, %87, %82, %64, %70, %3, %230, %229, %204, %81, %75, %60
  %232 = phi i32 [ -1, %60 ], [ 1, %230 ], [ -1, %229 ], [ -1, %204 ], [ -1, %81 ], [ -1, %75 ], [ -1, %3 ], [ 0, %70 ], [ 0, %64 ], [ -1, %82 ], [ -1, %87 ], [ -1, %117 ], [ -1, %140 ], [ -1, %163 ], [ -1, %186 ], [ -1, %102 ], [ -1, %96 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7
  ret i32 %232
}

declare i32 @i2d_ASN1_TYPE(%struct.asn1_type_st*, i8**) local_unnamed_addr #2

declare void @ASN1_TYPE_free(%struct.asn1_type_st*) #2

declare i32 @ASN1_get_object(i8**, i64*, i32*, i32*, i64) local_unnamed_addr #2

declare i32 @ASN1_object_size(i32, i32, i32) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare void @ASN1_put_object(i8**, i32, i32, i32, i32) local_unnamed_addr #2

declare %struct.asn1_type_st* @d2i_ASN1_TYPE(%struct.asn1_type_st**, i8**, i64) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare void @ERR_add_error_data(i32, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @parse_tagging(i8*, i32, i32* nocapture, i32* nocapture) unnamed_addr #0 {
  %5 = alloca [2 x i8], align 1
  %6 = alloca i8*, align 8
  %7 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %7) #7
  store i8 -86, i8* %7, align 1
  %8 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 1
  store i8 -86, i8* %8, align 1
  %9 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %10 = icmp eq i8* %0, null
  br i1 %10, label %43, label %11

11:                                               ; preds = %4
  %12 = call i64 @strtoul(i8* nonnull %0, i8** nonnull %6, i32 10) #7
  %13 = load i8*, i8** %6, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %13, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %15
  %19 = sext i32 %1 to i64
  %20 = getelementptr inbounds i8, i8* %0, i64 %19
  %21 = icmp ugt i8* %13, %20
  br i1 %21, label %43, label %22

22:                                               ; preds = %15, %11, %18
  %23 = icmp slt i64 %12, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %22
  tail call void @ERR_put_error(i32 12, i32 0, i32 145, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 423) #7
  br label %43

25:                                               ; preds = %22
  %26 = trunc i64 %12 to i32
  store i32 %26, i32* %2, align 4
  br i1 %14, label %42, label %27

27:                                               ; preds = %25
  %28 = ptrtoint i8* %13 to i64
  %29 = ptrtoint i8* %0 to i64
  %30 = sub i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = sub i32 0, %1
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %42, label %34

34:                                               ; preds = %27
  %35 = load i8, i8* %13, align 1
  %36 = sext i8 %35 to i32
  switch i32 %36, label %41 [
    i32 85, label %37
    i32 65, label %38
    i32 80, label %39
    i32 67, label %40
  ]

37:                                               ; preds = %34
  store i32 0, i32* %3, align 4
  br label %43

38:                                               ; preds = %34
  store i32 64, i32* %3, align 4
  br label %43

39:                                               ; preds = %34
  store i32 192, i32* %3, align 4
  br label %43

40:                                               ; preds = %34
  store i32 128, i32* %3, align 4
  br label %43

41:                                               ; preds = %34
  store i8 %35, i8* %7, align 1
  store i8 0, i8* %8, align 1
  tail call void @ERR_put_error(i32 12, i32 0, i32 144, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 454) #7
  call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i64 0, i64 0), i8* nonnull %7) #7
  br label %43

42:                                               ; preds = %27, %25
  store i32 128, i32* %3, align 4
  br label %43

43:                                               ; preds = %42, %40, %39, %38, %37, %18, %4, %41, %24
  %44 = phi i32 [ 0, %24 ], [ 0, %41 ], [ 0, %4 ], [ 0, %18 ], [ 1, %37 ], [ 1, %38 ], [ 1, %39 ], [ 1, %40 ], [ 1, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %7) #7
  ret i32 %44
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i64 @strtoul(i8* readonly, i8** nocapture, i32) local_unnamed_addr #5

declare %struct.stack_st_CONF_VALUE* @X509V3_get_section(%struct.v3_ext_ctx*, i8*) local_unnamed_addr #2

declare i32 @i2d_ASN1_SET_ANY(%struct.stack_st_ASN1_TYPE*, i8**) local_unnamed_addr #2

declare i32 @i2d_ASN1_SEQUENCE_ANY(%struct.stack_st_ASN1_TYPE*, i8**) local_unnamed_addr #2

declare %struct.asn1_type_st* @ASN1_TYPE_new() local_unnamed_addr #2

declare %struct.asn1_string_st* @ASN1_STRING_type_new(i32) local_unnamed_addr #2

declare void @X509V3_section_free(%struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*) local_unnamed_addr #2

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_ASN1_TYPE_call_free_func(void (i8*)* nocapture, i8*) #6 {
  %3 = bitcast void (i8*)* %0 to void (%struct.asn1_type_st*)*
  %4 = bitcast i8* %1 to %struct.asn1_type_st*
  tail call void %3(%struct.asn1_type_st* %4) #7
  ret void
}

declare i32 @X509V3_get_value_bool(%struct.conf_value_st*, i32*) local_unnamed_addr #2

declare %struct.asn1_string_st* @s2i_ASN1_INTEGER(%struct.v3_ext_method*, i8*) local_unnamed_addr #2

declare %struct.asn1_object_st* @OBJ_txt2obj(i8*, i32) local_unnamed_addr #2

declare %struct.asn1_string_st* @ASN1_STRING_new() local_unnamed_addr #2

declare i32 @ASN1_STRING_set(%struct.asn1_string_st*, i8*, i32) local_unnamed_addr #2

declare i32 @ASN1_TIME_check(%struct.asn1_string_st*) local_unnamed_addr #2

declare i32 @ASN1_mbstring_copy(%struct.asn1_string_st**, i8*, i32, i32, i64) local_unnamed_addr #2

declare i64 @ASN1_tag2bit(i32) local_unnamed_addr #2

declare i8* @x509v3_hex_to_bytes(i8*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @bitstr_cb(i8*, i32, i8*) #0 {
  %4 = alloca i8*, align 8
  %5 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %6 = icmp eq i8* %0, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %3
  %8 = call i64 @strtoul(i8* nonnull %0, i8** nonnull %4, i32 10) #7
  %9 = load i8*, i8** %4, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = load i8, i8* %9, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %11
  %15 = sext i32 %1 to i64
  %16 = getelementptr inbounds i8, i8* %0, i64 %15
  %17 = icmp eq i8* %9, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %14, %11, %7
  %19 = icmp slt i64 %8, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %18
  tail call void @ERR_put_error(i32 12, i32 0, i32 145, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 834) #7
  br label %27

21:                                               ; preds = %18
  %22 = bitcast i8* %2 to %struct.asn1_string_st*
  %23 = trunc i64 %8 to i32
  %24 = tail call i32 @ASN1_BIT_STRING_set_bit(%struct.asn1_string_st* %22, i32 %23, i32 1) #7
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %21
  tail call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 838) #7
  br label %27

27:                                               ; preds = %21, %14, %3, %26, %20
  %28 = phi i32 [ 0, %20 ], [ 0, %26 ], [ 0, %3 ], [ 0, %14 ], [ 1, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  ret i32 %28
}

declare i32 @ASN1_BIT_STRING_set_bit(%struct.asn1_string_st*, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
