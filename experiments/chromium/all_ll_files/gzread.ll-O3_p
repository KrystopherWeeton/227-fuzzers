; ModuleID = '../../third_party/zlib/gzread.c'
source_filename = "../../third_party/zlib/gzread.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.gzFile_s = type { i32, i8*, i64 }
%struct.gz_state = type { %struct.gzFile_s, i32, i32, i8*, i32, i32, i8*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i32, i32, i8*, %struct.z_stream_s }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque

@.str = private unnamed_addr constant [31 x i8] c"request does not fit in an int\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"request does not fit in a size_t\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"out of room to push characters\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"unexpected end of file\00", align 1
@.str.4 = private unnamed_addr constant [39 x i8] c"internal error: inflate stream corrupt\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"compressed data error\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"1.2.11\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_gzread(%struct.gzFile_s*, i8*, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.gzFile_s* %0, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %3
  %6 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 7247
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 17
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %24 [
    i32 0, label %13
    i32 -5, label %13
  ]

13:                                               ; preds = %10, %10
  %14 = icmp slt i32 %2, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @Cr_z_gz_error(%struct.gz_state* nonnull %6, i32 -2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #8
  br label %24

16:                                               ; preds = %13
  %17 = zext i32 %2 to i64
  %18 = tail call fastcc i64 @gz_read(%struct.gz_state* nonnull %6, i8* %1, i64 %17)
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = load i32, i32* %11, align 4
  switch i32 %22, label %24 [
    i32 0, label %23
    i32 -5, label %23
  ]

23:                                               ; preds = %21, %21, %16
  br label %24

24:                                               ; preds = %21, %5, %10, %3, %23, %15
  %25 = phi i32 [ -1, %15 ], [ %19, %23 ], [ -1, %3 ], [ -1, %10 ], [ -1, %5 ], [ -1, %21 ]
  ret i32 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @Cr_z_gz_error(%struct.gz_state*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @gz_read(%struct.gz_state*, i8*, i64) unnamed_addr #0 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %137, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 16
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %47, label %9

9:                                                ; preds = %5
  store i32 0, i32* %6, align 8
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 15
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 1
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 11
  br label %19

19:                                               ; preds = %44, %14
  %20 = phi i64 [ %11, %14 ], [ %45, %44 ]
  %21 = load i32, i32* %15, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %35, label %23

23:                                               ; preds = %19
  %24 = zext i32 %21 to i64
  %25 = icmp slt i64 %20, %24
  %26 = trunc i64 %20 to i32
  %27 = select i1 %25, i32 %26, i32 %21
  %28 = sub i32 %21, %27
  store i32 %28, i32* %15, align 8
  %29 = load i8*, i8** %16, align 8
  %30 = zext i32 %27 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  store i8* %31, i8** %16, align 8
  %32 = load i64, i64* %17, align 8
  %33 = add nsw i64 %32, %30
  store i64 %33, i64* %17, align 8
  %34 = sub nsw i64 %20, %30
  br label %44

35:                                               ; preds = %19
  %36 = load i32, i32* %18, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = load i32, i32* %12, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %38, %35
  %42 = tail call fastcc i32 @gz_fetch(%struct.gz_state* %0) #8
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %137, label %44

44:                                               ; preds = %41, %23
  %45 = phi i64 [ %34, %23 ], [ %20, %41 ]
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %19

47:                                               ; preds = %44, %38, %9, %5
  %48 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 11
  %51 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 1
  %52 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 9
  %53 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  %54 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 4
  %55 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 3
  %56 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 2
  %57 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 2
  br label %58

58:                                               ; preds = %132, %47
  %59 = phi i8* [ %1, %47 ], [ %133, %132 ]
  %60 = phi i64 [ %2, %47 ], [ %134, %132 ]
  %61 = phi i64 [ 0, %47 ], [ %135, %132 ]
  %62 = icmp ult i64 %60, 4294967295
  %63 = select i1 %62, i64 %60, i64 4294967295
  %64 = trunc i64 %63 to i32
  %65 = load i32, i32* %48, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %76, label %67

67:                                               ; preds = %58
  %68 = icmp ult i32 %65, %64
  %69 = select i1 %68, i32 %65, i32 %64
  %70 = load i8*, i8** %49, align 8
  %71 = zext i32 %69 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %70, i64 %71, i1 false)
  %72 = load i8*, i8** %49, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %71
  store i8* %73, i8** %49, align 8
  %74 = load i32, i32* %48, align 8
  %75 = sub i32 %74, %69
  store i32 %75, i32* %48, align 8
  br label %124

76:                                               ; preds = %58
  %77 = load i32, i32* %50, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %76
  %80 = load i32, i32* %51, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %79
  %83 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 12
  store i32 1, i32* %83, align 4
  br label %137

84:                                               ; preds = %76, %79
  %85 = load i32, i32* %52, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %91, label %87

87:                                               ; preds = %84
  %88 = load i32, i32* %53, align 8
  %89 = shl i32 %88, 1
  %90 = icmp ugt i32 %89, %64
  br i1 %90, label %91, label %94

91:                                               ; preds = %87, %84
  %92 = tail call fastcc i32 @gz_fetch(%struct.gz_state* %0)
  %93 = icmp eq i32 %92, -1
  br i1 %93, label %137, label %132

94:                                               ; preds = %87
  %95 = icmp eq i32 %85, 1
  br i1 %95, label %96, label %119

96:                                               ; preds = %94, %108
  %97 = phi i32 [ %109, %108 ], [ 0, %94 ]
  %98 = sub i32 %64, %97
  %99 = icmp ult i32 %98, 1073741824
  %100 = select i1 %99, i32 %98, i32 1073741824
  %101 = load i32, i32* %56, align 4
  %102 = zext i32 %97 to i64
  %103 = getelementptr inbounds i8, i8* %59, i64 %102
  %104 = zext i32 %100 to i64
  %105 = tail call i64 @read(i32 %101, i8* %103, i64 %104) #8
  %106 = trunc i64 %105 to i32
  %107 = icmp slt i32 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %96
  %109 = add i32 %97, %106
  %110 = icmp ult i32 %109, %64
  br i1 %110, label %96, label %124

111:                                              ; preds = %96
  %112 = trunc i64 %105 to i32
  %113 = icmp slt i32 %112, 0
  br i1 %113, label %115, label %114

114:                                              ; preds = %111
  store i32 1, i32* %50, align 8
  br label %124

115:                                              ; preds = %111
  %116 = tail call i32* @__errno_location() #9
  %117 = load i32, i32* %116, align 4
  %118 = tail call i8* @strerror(i32 %117) #8
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -1, i8* %118) #8
  br label %137

119:                                              ; preds = %94
  store i32 %64, i32* %54, align 8
  store i8* %59, i8** %55, align 8
  %120 = tail call fastcc i32 @gz_decomp(%struct.gz_state* %0)
  %121 = icmp eq i32 %120, -1
  br i1 %121, label %137, label %122

122:                                              ; preds = %119
  %123 = load i32, i32* %48, align 8
  store i32 0, i32* %48, align 8
  br label %124

124:                                              ; preds = %108, %114, %122, %67
  %125 = phi i32 [ %123, %122 ], [ %69, %67 ], [ %97, %114 ], [ %109, %108 ]
  %126 = zext i32 %125 to i64
  %127 = sub i64 %60, %126
  %128 = getelementptr inbounds i8, i8* %59, i64 %126
  %129 = add i64 %61, %126
  %130 = load i64, i64* %57, align 8
  %131 = add nsw i64 %130, %126
  store i64 %131, i64* %57, align 8
  br label %132

132:                                              ; preds = %91, %124
  %133 = phi i8* [ %128, %124 ], [ %59, %91 ]
  %134 = phi i64 [ %127, %124 ], [ %60, %91 ]
  %135 = phi i64 [ %129, %124 ], [ %61, %91 ]
  %136 = icmp eq i64 %134, 0
  br i1 %136, label %137, label %58

137:                                              ; preds = %41, %132, %119, %91, %115, %82, %3
  %138 = phi i64 [ 0, %3 ], [ 0, %115 ], [ %61, %82 ], [ %135, %132 ], [ 0, %119 ], [ 0, %91 ], [ 0, %41 ]
  ret i64 %138
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @Cr_z_gzfread(i8*, i64, i64, %struct.gzFile_s*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.gzFile_s* %3, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %4
  %7 = bitcast %struct.gzFile_s* %3 to %struct.gz_state*
  %8 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %3, i64 1, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 7247
  br i1 %10, label %11, label %26

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 17
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %26 [
    i32 0, label %14
    i32 -5, label %14
  ]

14:                                               ; preds = %11, %11
  %15 = mul i64 %2, %1
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %14
  %18 = udiv i64 %15, %1
  %19 = icmp eq i64 %18, %2
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @Cr_z_gz_error(%struct.gz_state* nonnull %7, i32 -2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %26

21:                                               ; preds = %17
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %21
  %24 = tail call fastcc i64 @gz_read(%struct.gz_state* nonnull %7, i8* %0, i64 %15)
  %25 = udiv i64 %24, %1
  br label %26

26:                                               ; preds = %14, %23, %21, %6, %11, %4, %20
  %27 = phi i64 [ 0, %20 ], [ 0, %4 ], [ 0, %11 ], [ 0, %6 ], [ %25, %23 ], [ 0, %21 ], [ 0, %14 ]
  ret i64 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_gzgetc(%struct.gzFile_s*) local_unnamed_addr #0 {
  %2 = alloca [1 x i8], align 1
  %3 = getelementptr inbounds [1 x i8], [1 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #8
  store i8 -86, i8* %3, align 1
  %4 = icmp eq %struct.gzFile_s* %0, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 7247
  br i1 %9, label %10, label %34

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 17
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %34 [
    i32 0, label %13
    i32 -5, label %13
  ]

13:                                               ; preds = %10, %10
  %14 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = add i32 %15, -1
  store i32 %18, i32* %14, align 8
  %19 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 1
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %24, i8** %22, align 8
  %25 = load i8, i8* %23, align 1
  %26 = zext i8 %25 to i32
  br label %34

27:                                               ; preds = %13
  %28 = call fastcc i64 @gz_read(%struct.gz_state* nonnull %6, i8* nonnull %3, i64 1)
  %29 = trunc i64 %28 to i32
  %30 = icmp slt i32 %29, 1
  %31 = load i8, i8* %3, align 1
  %32 = zext i8 %31 to i32
  %33 = select i1 %30, i32 -1, i32 %32
  br label %34

34:                                               ; preds = %5, %10, %1, %27, %17
  %35 = phi i32 [ %26, %17 ], [ %33, %27 ], [ -1, %1 ], [ -1, %10 ], [ -1, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #8
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_gzgetc_(%struct.gzFile_s*) local_unnamed_addr #0 {
  %2 = alloca [1 x i8], align 1
  %3 = getelementptr inbounds [1 x i8], [1 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #8
  store i8 -86, i8* %3, align 1
  %4 = icmp eq %struct.gzFile_s* %0, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 7247
  br i1 %9, label %10, label %34

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 17
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %34 [
    i32 0, label %13
    i32 -5, label %13
  ]

13:                                               ; preds = %10, %10
  %14 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = add i32 %15, -1
  store i32 %18, i32* %14, align 8
  %19 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 1
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %24, i8** %22, align 8
  %25 = load i8, i8* %23, align 1
  %26 = zext i8 %25 to i32
  br label %34

27:                                               ; preds = %13
  %28 = call fastcc i64 @gz_read(%struct.gz_state* nonnull %6, i8* nonnull %3, i64 1) #8
  %29 = trunc i64 %28 to i32
  %30 = icmp slt i32 %29, 1
  %31 = load i8, i8* %3, align 1
  %32 = zext i8 %31 to i32
  %33 = select i1 %30, i32 -1, i32 %32
  br label %34

34:                                               ; preds = %1, %5, %10, %17, %27
  %35 = phi i32 [ %26, %17 ], [ %33, %27 ], [ -1, %1 ], [ -1, %10 ], [ -1, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #8
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_gzungetc(i32, %struct.gzFile_s*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.gzFile_s* %1, null
  br i1 %3, label %120, label %4

4:                                                ; preds = %2
  %5 = bitcast %struct.gzFile_s* %1 to %struct.gz_state*
  %6 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 1, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 7247
  br i1 %8, label %9, label %120

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 17
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %120 [
    i32 0, label %12
    i32 -5, label %12
  ]

12:                                               ; preds = %9, %9
  %13 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 4, i32 1
  %14 = bitcast i8** %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %60, label %17

17:                                               ; preds = %12
  store i32 0, i32* %14, align 8
  %18 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 4
  %19 = bitcast %struct.gzFile_s* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 5, i32 1
  %22 = bitcast i8** %21 to i32*
  %23 = icmp eq i64 %20, 0
  br i1 %23, label %58, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 0
  %26 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 1
  %27 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 2
  %28 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 3, i32 1
  %29 = bitcast i8** %28 to i32*
  br label %30

30:                                               ; preds = %55, %24
  %31 = phi i64 [ %20, %24 ], [ %56, %55 ]
  %32 = load i32, i32* %25, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %30
  %35 = zext i32 %32 to i64
  %36 = icmp slt i64 %31, %35
  %37 = trunc i64 %31 to i32
  %38 = select i1 %36, i32 %37, i32 %32
  %39 = sub i32 %32, %38
  store i32 %39, i32* %25, align 8
  %40 = load i8*, i8** %26, align 8
  %41 = zext i32 %38 to i64
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  store i8* %42, i8** %26, align 8
  %43 = load i64, i64* %27, align 8
  %44 = add nsw i64 %43, %41
  store i64 %44, i64* %27, align 8
  %45 = sub nsw i64 %31, %41
  br label %55

46:                                               ; preds = %30
  %47 = load i32, i32* %29, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %46
  %50 = load i32, i32* %22, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %49, %46
  %53 = tail call fastcc i32 @gz_fetch(%struct.gz_state* nonnull %5) #8
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %120, label %55

55:                                               ; preds = %52, %34
  %56 = phi i64 [ %45, %34 ], [ %31, %52 ]
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %30

58:                                               ; preds = %49, %55, %17
  %59 = icmp slt i32 %0, 0
  br i1 %59, label %120, label %62

60:                                               ; preds = %12
  %61 = icmp slt i32 %0, 0
  br i1 %61, label %120, label %62

62:                                               ; preds = %58, %60
  %63 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %82

66:                                               ; preds = %62
  store i32 1, i32* %63, align 8
  %67 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 2, i32 1
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 1, i32 2
  %70 = bitcast i64* %69 to i32*
  %71 = load i32, i32* %70, align 8
  %72 = shl i32 %71, 1
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %68, i64 %73
  %75 = getelementptr inbounds i8, i8* %74, i64 -1
  %76 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 1
  store i8* %75, i8** %76, align 8
  %77 = trunc i32 %0 to i8
  store i8 %77, i8* %75, align 1
  %78 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 2
  %79 = load i64, i64* %78, align 8
  %80 = add nsw i64 %79, -1
  store i64 %80, i64* %78, align 8
  %81 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 12
  store i32 0, i32* %81, align 4
  br label %120

82:                                               ; preds = %62
  %83 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 1, i32 2
  %84 = bitcast i64* %83 to i32*
  %85 = load i32, i32* %84, align 8
  %86 = shl i32 %85, 1
  %87 = icmp eq i32 %64, %86
  br i1 %87, label %88, label %89

88:                                               ; preds = %82
  tail call void @Cr_z_gz_error(%struct.gz_state* nonnull %5, i32 -3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0)) #8
  br label %120

89:                                               ; preds = %82
  %90 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 1
  %91 = load i8*, i8** %90, align 8
  %92 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 2, i32 1
  %93 = load i8*, i8** %92, align 8
  %94 = icmp eq i8* %91, %93
  br i1 %94, label %95, label %110

95:                                               ; preds = %89
  %96 = zext i32 %86 to i64
  %97 = getelementptr inbounds i8, i8* %91, i64 %96
  %98 = zext i32 %64 to i64
  %99 = getelementptr inbounds i8, i8* %91, i64 %98
  br label %100

100:                                              ; preds = %95, %100
  %101 = phi i8* [ %105, %100 ], [ %97, %95 ]
  %102 = phi i8* [ %103, %100 ], [ %99, %95 ]
  %103 = getelementptr inbounds i8, i8* %102, i64 -1
  %104 = load i8, i8* %103, align 1
  %105 = getelementptr inbounds i8, i8* %101, i64 -1
  store i8 %104, i8* %105, align 1
  %106 = load i8*, i8** %92, align 8
  %107 = icmp ugt i8* %103, %106
  br i1 %107, label %100, label %108

108:                                              ; preds = %100
  %109 = load i32, i32* %63, align 8
  store i8* %105, i8** %90, align 8
  br label %110

110:                                              ; preds = %108, %89
  %111 = phi i8* [ %105, %108 ], [ %91, %89 ]
  %112 = phi i32 [ %109, %108 ], [ %64, %89 ]
  %113 = add i32 %112, 1
  store i32 %113, i32* %63, align 8
  %114 = getelementptr inbounds i8, i8* %111, i64 -1
  store i8* %114, i8** %90, align 8
  %115 = trunc i32 %0 to i8
  store i8 %115, i8* %114, align 1
  %116 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %1, i64 0, i32 2
  %117 = load i64, i64* %116, align 8
  %118 = add nsw i64 %117, -1
  store i64 %118, i64* %116, align 8
  %119 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 12
  store i32 0, i32* %119, align 4
  br label %120

120:                                              ; preds = %52, %60, %58, %4, %9, %2, %110, %88, %66
  %121 = phi i32 [ %0, %66 ], [ -1, %88 ], [ %0, %110 ], [ -1, %2 ], [ -1, %9 ], [ -1, %4 ], [ -1, %58 ], [ -1, %60 ], [ -1, %52 ]
  ret i32 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @Cr_z_gzgets(%struct.gzFile_s*, i8*, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.gzFile_s* %0, null
  %5 = icmp eq i8* %1, null
  %6 = or i1 %4, %5
  %7 = icmp slt i32 %2, 1
  %8 = or i1 %6, %7
  br i1 %8, label %113, label %9

9:                                                ; preds = %3
  %10 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %11 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 7247
  br i1 %13, label %14, label %113

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %10, i64 0, i32 17
  %16 = load i32, i32* %15, align 4
  switch i32 %16, label %113 [
    i32 0, label %17
    i32 -5, label %17
  ]

17:                                               ; preds = %14, %14
  %18 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %19 = bitcast i8** %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %63, label %22

22:                                               ; preds = %17
  store i32 0, i32* %19, align 8
  %23 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4
  %24 = bitcast %struct.gzFile_s* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %27 = bitcast i8** %26 to i32*
  %28 = icmp eq i64 %25, 0
  br i1 %28, label %63, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  %31 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 1
  %32 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %33 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 3, i32 1
  %34 = bitcast i8** %33 to i32*
  br label %35

35:                                               ; preds = %60, %29
  %36 = phi i64 [ %25, %29 ], [ %61, %60 ]
  %37 = load i32, i32* %30, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %35
  %40 = zext i32 %37 to i64
  %41 = icmp slt i64 %36, %40
  %42 = trunc i64 %36 to i32
  %43 = select i1 %41, i32 %42, i32 %37
  %44 = sub i32 %37, %43
  store i32 %44, i32* %30, align 8
  %45 = load i8*, i8** %31, align 8
  %46 = zext i32 %43 to i64
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  store i8* %47, i8** %31, align 8
  %48 = load i64, i64* %32, align 8
  %49 = add nsw i64 %48, %46
  store i64 %49, i64* %32, align 8
  %50 = sub nsw i64 %36, %46
  br label %60

51:                                               ; preds = %35
  %52 = load i32, i32* %34, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %51
  %55 = load i32, i32* %27, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %54, %51
  %58 = tail call fastcc i32 @gz_fetch(%struct.gz_state* %10) #8
  %59 = icmp eq i32 %58, -1
  br i1 %59, label %113, label %60

60:                                               ; preds = %57, %39
  %61 = phi i64 [ %50, %39 ], [ %36, %57 ]
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %35

63:                                               ; preds = %60, %54, %22, %17
  %64 = add i32 %2, -1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %113, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  %68 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 1
  %69 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %70 = load i32, i32* %67, align 8
  br label %71

71:                                               ; preds = %66, %84
  %72 = phi i32 [ %100, %84 ], [ %70, %66 ]
  %73 = phi i8* [ %106, %84 ], [ %1, %66 ]
  %74 = phi i32 [ %105, %84 ], [ %64, %66 ]
  %75 = icmp eq i32 %72, 0
  br i1 %75, label %76, label %84

76:                                               ; preds = %71
  %77 = tail call fastcc i32 @gz_fetch(%struct.gz_state* %10)
  %78 = icmp eq i32 %77, -1
  br i1 %78, label %113, label %79

79:                                               ; preds = %76
  %80 = load i32, i32* %67, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %79
  %83 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %10, i64 0, i32 12
  store i32 1, i32* %83, align 4
  br label %109

84:                                               ; preds = %71, %79
  %85 = phi i32 [ %80, %79 ], [ %72, %71 ]
  %86 = icmp ugt i32 %85, %74
  %87 = select i1 %86, i32 %74, i32 %85
  %88 = load i8*, i8** %68, align 8
  %89 = zext i32 %87 to i64
  %90 = tail call i8* @memchr(i8* %88, i32 10, i64 %89) #10
  %91 = icmp eq i8* %90, null
  %92 = ptrtoint i8* %90 to i64
  %93 = ptrtoint i8* %88 to i64
  %94 = sub i64 %92, %93
  %95 = trunc i64 %94 to i32
  %96 = add i32 %95, 1
  %97 = select i1 %91, i32 %87, i32 %96
  %98 = zext i32 %97 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %73, i8* align 1 %88, i64 %98, i1 false)
  %99 = load i32, i32* %67, align 8
  %100 = sub i32 %99, %97
  store i32 %100, i32* %67, align 8
  %101 = load i8*, i8** %68, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 %98
  store i8* %102, i8** %68, align 8
  %103 = load i64, i64* %69, align 8
  %104 = add nsw i64 %103, %98
  store i64 %104, i64* %69, align 8
  %105 = sub i32 %74, %97
  %106 = getelementptr inbounds i8, i8* %73, i64 %98
  %107 = icmp ne i32 %105, 0
  %108 = and i1 %91, %107
  br i1 %108, label %71, label %109

109:                                              ; preds = %84, %82
  %110 = phi i8* [ %73, %82 ], [ %106, %84 ]
  %111 = icmp eq i8* %110, %1
  br i1 %111, label %113, label %112

112:                                              ; preds = %109
  store i8 0, i8* %110, align 1
  br label %113

113:                                              ; preds = %57, %76, %63, %109, %9, %14, %3, %112
  %114 = phi i8* [ %1, %112 ], [ null, %3 ], [ null, %14 ], [ null, %9 ], [ null, %109 ], [ null, %63 ], [ null, %76 ], [ null, %57 ]
  ret i8* %114
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @gz_fetch(%struct.gz_state*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 9
  %3 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  %4 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 4
  %5 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 7
  %6 = bitcast i8** %5 to i64*
  %7 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 3
  %8 = bitcast i8** %7 to i64*
  %9 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 11
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 1
  br label %12

12:                                               ; preds = %65, %1
  %13 = load i32, i32* %2, align 4
  switch i32 %13, label %59 [
    i32 0, label %14
    i32 1, label %20
    i32 2, label %53
  ]

14:                                               ; preds = %12
  %15 = tail call fastcc i32 @gz_look(%struct.gz_state* %0)
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %69, label %17

17:                                               ; preds = %14
  %18 = load i32, i32* %2, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %69, label %59

20:                                               ; preds = %12
  %21 = load i8*, i8** %5, align 8
  %22 = load i32, i32* %3, align 8
  %23 = shl i32 %22, 1
  store i32 0, i32* %9, align 4
  %24 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 2
  br label %25

25:                                               ; preds = %37, %20
  %26 = phi i32 [ %39, %37 ], [ 0, %20 ]
  %27 = sub i32 %23, %26
  %28 = icmp ult i32 %27, 1073741824
  %29 = select i1 %28, i32 %27, i32 1073741824
  %30 = load i32, i32* %24, align 4
  %31 = zext i32 %26 to i64
  %32 = getelementptr inbounds i8, i8* %21, i64 %31
  %33 = zext i32 %29 to i64
  %34 = tail call i64 @read(i32 %30, i8* %32, i64 %33) #8
  %35 = trunc i64 %34 to i32
  %36 = icmp slt i32 %35, 1
  br i1 %36, label %41, label %37

37:                                               ; preds = %25
  %38 = load i32, i32* %9, align 4
  %39 = add i32 %38, %35
  store i32 %39, i32* %9, align 4
  %40 = icmp ult i32 %39, %23
  br i1 %40, label %25, label %49

41:                                               ; preds = %25
  %42 = trunc i64 %34 to i32
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  store i32 1, i32* %10, align 8
  br label %49

45:                                               ; preds = %41
  %46 = tail call i32* @__errno_location() #9
  %47 = load i32, i32* %46, align 4
  %48 = tail call i8* @strerror(i32 %47) #8
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -1, i8* %48) #8
  br label %69

49:                                               ; preds = %37, %44
  %50 = load i64, i64* %6, align 8
  %51 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 1
  %52 = bitcast i8** %51 to i64*
  store i64 %50, i64* %52, align 8
  br label %69

53:                                               ; preds = %12
  %54 = load i32, i32* %3, align 8
  %55 = shl i32 %54, 1
  store i32 %55, i32* %4, align 8
  %56 = load i64, i64* %6, align 8
  store i64 %56, i64* %8, align 8
  %57 = tail call fastcc i32 @gz_decomp(%struct.gz_state* %0)
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %69, label %59

59:                                               ; preds = %12, %17, %53
  %60 = load i32, i32* %9, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %69

62:                                               ; preds = %59
  %63 = load i32, i32* %10, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62, %66
  br label %12

66:                                               ; preds = %62
  %67 = load i32, i32* %11, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %65

69:                                               ; preds = %59, %66, %53, %17, %14, %45, %49
  %70 = phi i32 [ 0, %49 ], [ -1, %45 ], [ 0, %59 ], [ 0, %66 ], [ -1, %53 ], [ 0, %17 ], [ -1, %14 ]
  ret i32 %70
}

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_gzdirect(%struct.gzFile_s*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %5 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 7247
  br i1 %7, label %8, label %18

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 9
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = tail call fastcc i32 @gz_look(%struct.gz_state* nonnull %4)
  br label %18

18:                                               ; preds = %16, %12, %8, %3
  %19 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2, i32 2
  %20 = bitcast i64* %19 to i32*
  %21 = load i32, i32* %20, align 8
  br label %22

22:                                               ; preds = %1, %18
  %23 = phi i32 [ %21, %18 ], [ 0, %1 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @gz_look(%struct.gz_state*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19
  %3 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %31

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = tail call noalias i8* @malloc(i64 %9) #8
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 6
  store i8* %10, i8** %11, align 8
  %12 = shl i32 %8, 1
  %13 = zext i32 %12 to i64
  %14 = tail call noalias i8* @malloc(i64 %13) #8
  %15 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 7
  store i8* %14, i8** %15, align 8
  %16 = icmp eq i8* %10, null
  %17 = icmp eq i8* %14, null
  %18 = or i1 %16, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %6
  tail call void @free(i8* %14) #8
  %20 = load i8*, i8** %11, align 8
  tail call void @free(i8* %20) #8
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0)) #8
  br label %124

21:                                               ; preds = %6
  store i32 %8, i32* %3, align 8
  %22 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 8
  %23 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 1
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %2, i64 0, i32 0
  store i8* null, i8** %24, align 8
  %25 = bitcast i8* (i8*, i32, i32)** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false)
  %26 = tail call i32 @Cr_z_inflateInit2_(%struct.z_stream_s* %2, i32 31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i32 112) #8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = load i8*, i8** %15, align 8
  tail call void @free(i8* %29) #8
  %30 = load i8*, i8** %11, align 8
  tail call void @free(i8* %30) #8
  store i32 0, i32* %3, align 8
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0)) #8
  br label %124

31:                                               ; preds = %21, %1
  %32 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp ult i32 %33, 2
  br i1 %34, label %35, label %92

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 17
  %37 = load i32, i32* %36, align 4
  switch i32 %37, label %124 [
    i32 0, label %38
    i32 -5, label %38
  ]

38:                                               ; preds = %35, %35
  %39 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 11
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %90

42:                                               ; preds = %38
  %43 = icmp eq i32 %33, 0
  br i1 %43, label %51, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 6
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %2, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = load i8, i8* %48, align 1
  store i8 %49, i8* %46, align 1
  %50 = load i32, i32* %32, align 8
  br label %51

51:                                               ; preds = %44, %42
  %52 = phi i32 [ %50, %44 ], [ 0, %42 ]
  %53 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 6
  %54 = load i8*, i8** %53, align 8
  %55 = zext i32 %52 to i64
  %56 = getelementptr inbounds i8, i8* %54, i64 %55
  %57 = load i32, i32* %3, align 8
  %58 = sub i32 %57, %52
  %59 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 2
  br label %60

60:                                               ; preds = %72, %51
  %61 = phi i32 [ 0, %51 ], [ %73, %72 ]
  %62 = sub i32 %58, %61
  %63 = icmp ult i32 %62, 1073741824
  %64 = select i1 %63, i32 %62, i32 1073741824
  %65 = load i32, i32* %59, align 4
  %66 = zext i32 %61 to i64
  %67 = getelementptr inbounds i8, i8* %56, i64 %66
  %68 = zext i32 %64 to i64
  %69 = tail call i64 @read(i32 %65, i8* %67, i64 %68) #8
  %70 = trunc i64 %69 to i32
  %71 = icmp slt i32 %70, 1
  br i1 %71, label %75, label %72

72:                                               ; preds = %60
  %73 = add i32 %61, %70
  %74 = icmp ult i32 %73, %58
  br i1 %74, label %60, label %83

75:                                               ; preds = %60
  %76 = trunc i64 %69 to i32
  %77 = icmp slt i32 %76, 0
  br i1 %77, label %79, label %78

78:                                               ; preds = %75
  store i32 1, i32* %39, align 8
  br label %83

79:                                               ; preds = %75
  %80 = tail call i32* @__errno_location() #9
  %81 = load i32, i32* %80, align 4
  %82 = tail call i8* @strerror(i32 %81) #8
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -1, i8* %82) #8
  br label %124

83:                                               ; preds = %72, %78
  %84 = phi i32 [ %61, %78 ], [ %73, %72 ]
  %85 = load i32, i32* %32, align 8
  %86 = add i32 %85, %84
  store i32 %86, i32* %32, align 8
  %87 = bitcast i8** %53 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %struct.z_stream_s* %2 to i64*
  store i64 %88, i64* %89, align 8
  br label %90

90:                                               ; preds = %38, %83
  %91 = phi i32 [ %86, %83 ], [ %33, %38 ]
  switch i32 %91, label %92 [
    i32 0, label %124
    i32 1, label %106
  ]

92:                                               ; preds = %90, %31
  %93 = phi i32 [ %33, %31 ], [ %91, %90 ]
  %94 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %2, i64 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = load i8, i8* %95, align 1
  %97 = icmp eq i8 %96, 31
  br i1 %97, label %98, label %106

98:                                               ; preds = %92
  %99 = getelementptr inbounds i8, i8* %95, i64 1
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, -117
  br i1 %101, label %102, label %106

102:                                              ; preds = %98
  %103 = tail call i32 @Cr_z_inflateReset(%struct.z_stream_s* %2) #8
  %104 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 9
  store i32 2, i32* %104, align 4
  %105 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 8
  store i32 0, i32* %105, align 8
  br label %124

106:                                              ; preds = %90, %98, %92
  %107 = phi i32 [ %93, %98 ], [ %93, %92 ], [ %91, %90 ]
  %108 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 8
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  store i32 0, i32* %32, align 8
  %112 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 11
  store i32 1, i32* %112, align 8
  %113 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %113, align 8
  br label %124

114:                                              ; preds = %106
  %115 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 7
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 1
  store i8* %116, i8** %117, align 8
  %118 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %2, i64 0, i32 0
  %119 = load i8*, i8** %118, align 8
  %120 = zext i32 %107 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %119, i64 %120, i1 false)
  %121 = load i32, i32* %32, align 8
  %122 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 0
  store i32 %121, i32* %122, align 8
  store i32 0, i32* %32, align 8
  %123 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 9
  store i32 1, i32* %123, align 4
  store i32 1, i32* %108, align 8
  br label %124

124:                                              ; preds = %90, %79, %35, %114, %111, %102, %28, %19
  %125 = phi i32 [ -1, %19 ], [ -1, %28 ], [ 0, %102 ], [ 0, %111 ], [ 0, %114 ], [ %91, %90 ], [ -1, %35 ], [ -1, %79 ]
  ret i32 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_gzclose_r(%struct.gzFile_s*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %35, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %5 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 7247
  br i1 %7, label %8, label %35

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %10 = bitcast i64* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5
  %15 = bitcast %struct.gzFile_s* %14 to %struct.z_stream_s*
  %16 = tail call i32 @Cr_z_inflateEnd(%struct.z_stream_s* %15) #8
  %17 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2, i32 1
  %18 = load i8*, i8** %17, align 8
  tail call void @free(i8* %18) #8
  %19 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %20 = bitcast %struct.gzFile_s* %19 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @free(i8* %21) #8
  br label %22

22:                                               ; preds = %8, %13
  %23 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 17
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, -5
  %26 = select i1 %25, i32 -5, i32 0
  tail call void @Cr_z_gz_error(%struct.gz_state* nonnull %4, i32 0, i8* null) #8
  %27 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 1
  %28 = load i8*, i8** %27, align 8
  tail call void @free(i8* %28) #8
  %29 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = tail call i32 @close(i32 %30) #8
  %32 = bitcast %struct.gzFile_s* %0 to i8*
  tail call void @free(i8* %32) #8
  %33 = icmp eq i32 %31, 0
  %34 = select i1 %33, i32 %26, i32 -1
  br label %35

35:                                               ; preds = %3, %1, %22
  %36 = phi i32 [ %34, %22 ], [ -2, %1 ], [ -2, %3 ]
  ret i32 %36
}

declare i32 @Cr_z_inflateEnd(%struct.z_stream_s*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare i32 @close(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @gz_decomp(%struct.gz_state*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19
  %3 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 1
  %6 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 17
  %7 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 11
  %8 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 6
  %9 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 2
  %11 = bitcast i8** %8 to i64*
  %12 = bitcast %struct.z_stream_s* %2 to i64*
  br label %13

13:                                               ; preds = %65, %1
  %14 = phi i32 [ 0, %1 ], [ %57, %65 ]
  %15 = load i32, i32* %5, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %56

17:                                               ; preds = %13
  %18 = load i32, i32* %6, align 4
  switch i32 %18, label %84 [
    i32 0, label %19
    i32 -5, label %19
  ]

19:                                               ; preds = %17, %17
  %20 = load i32, i32* %7, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %54

22:                                               ; preds = %19
  %23 = load i8*, i8** %8, align 8
  %24 = load i32, i32* %9, align 8
  br label %25

25:                                               ; preds = %37, %22
  %26 = phi i32 [ 0, %22 ], [ %38, %37 ]
  %27 = sub i32 %24, %26
  %28 = icmp ult i32 %27, 1073741824
  %29 = select i1 %28, i32 %27, i32 1073741824
  %30 = load i32, i32* %10, align 4
  %31 = zext i32 %26 to i64
  %32 = getelementptr inbounds i8, i8* %23, i64 %31
  %33 = zext i32 %29 to i64
  %34 = tail call i64 @read(i32 %30, i8* %32, i64 %33) #8
  %35 = trunc i64 %34 to i32
  %36 = icmp slt i32 %35, 1
  br i1 %36, label %40, label %37

37:                                               ; preds = %25
  %38 = add i32 %26, %35
  %39 = icmp ult i32 %38, %24
  br i1 %39, label %25, label %48

40:                                               ; preds = %25
  %41 = trunc i64 %34 to i32
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  store i32 1, i32* %7, align 8
  br label %48

44:                                               ; preds = %40
  %45 = tail call i32* @__errno_location() #9
  %46 = load i32, i32* %45, align 4
  %47 = tail call i8* @strerror(i32 %46) #8
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -1, i8* %47) #8
  br label %84

48:                                               ; preds = %37, %43
  %49 = phi i32 [ %26, %43 ], [ %38, %37 ]
  %50 = load i32, i32* %5, align 8
  %51 = add i32 %50, %49
  store i32 %51, i32* %5, align 8
  %52 = load i64, i64* %11, align 8
  store i64 %52, i64* %12, align 8
  %53 = icmp eq i32 %51, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %19, %48
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #8
  %55 = load i32, i32* %3, align 8
  br label %70

56:                                               ; preds = %13, %48
  %57 = tail call i32 @Cr_z_inflate(%struct.z_stream_s* %2, i32 0) #8
  switch i32 %57, label %65 [
    i32 -2, label %58
    i32 2, label %58
    i32 -4, label %59
    i32 -3, label %60
  ]

58:                                               ; preds = %56, %56
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0)) #8
  br label %84

59:                                               ; preds = %56
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0)) #8
  br label %84

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 6
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, null
  %64 = select i1 %63, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i8* %62
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -3, i8* %64) #8
  br label %84

65:                                               ; preds = %56
  %66 = load i32, i32* %3, align 8
  %67 = icmp ne i32 %66, 0
  %68 = icmp ne i32 %57, 1
  %69 = and i1 %68, %67
  br i1 %69, label %13, label %70

70:                                               ; preds = %65, %54
  %71 = phi i32 [ %55, %54 ], [ %66, %65 ]
  %72 = phi i32 [ %14, %54 ], [ %57, %65 ]
  %73 = sub i32 %4, %71
  %74 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 0
  store i32 %73, i32* %74, align 8
  %75 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 3
  %76 = load i8*, i8** %75, align 8
  %77 = zext i32 %73 to i64
  %78 = sub nsw i64 0, %77
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 1
  store i8* %79, i8** %80, align 8
  %81 = icmp eq i32 %72, 1
  br i1 %81, label %82, label %84

82:                                               ; preds = %70
  %83 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 9
  store i32 0, i32* %83, align 4
  br label %84

84:                                               ; preds = %17, %44, %70, %82, %60, %59, %58
  %85 = phi i32 [ -1, %58 ], [ -1, %59 ], [ -1, %60 ], [ 0, %82 ], [ 0, %70 ], [ -1, %44 ], [ -1, %17 ]
  ret i32 %85
}

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #6

declare i32 @Cr_z_inflate(%struct.z_stream_s*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

declare i32 @Cr_z_inflateInit2_(%struct.z_stream_s*, i32, i8*, i32) local_unnamed_addr #2

declare i32 @Cr_z_inflateReset(%struct.z_stream_s*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readnone }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
