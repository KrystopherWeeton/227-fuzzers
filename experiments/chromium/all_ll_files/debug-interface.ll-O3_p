; ModuleID = '../../v8/src/debug/debug-interface.cc'
source_filename = "../../v8/src/debug/debug-interface.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.1722" = type { %"struct.std::__1::__atomic_base.1723" }
%"struct.std::__1::__atomic_base.1723" = type { %"struct.std::__1::__atomic_base.1724" }
%"struct.std::__1::__atomic_base.1724" = type { %"struct.std::__1::__cxx_atomic_impl.1725" }
%"struct.std::__1::__cxx_atomic_impl.1725" = type { %"struct.std::__1::__cxx_atomic_base_impl.1726" }
%"struct.std::__1::__cxx_atomic_base_impl.1726" = type { i32 }
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.543" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.141", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.21", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.21", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.21", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.21", i64, i64, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.31", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.163", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.21", i64, i8, %"struct.std::__1::atomic.21", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.167", %"class.std::__1::vector.167", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.470", %"class.std::__1::unique_ptr.476", %"class.std::__1::shared_ptr.482", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.505", %"class.std::__1::unique_ptr.531", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.537", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.550", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.332", i8, [7 x i8], %"class.std::__1::unordered_map.556", %"class.std::__1::unordered_map.582", %"class.std::__1::unordered_map.556", %"class.std::__1::unordered_map.606", %"class.std::__1::vector.634", i8, %"class.std::__1::unique_ptr.641", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.4", %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.18", [4 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26" }
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.647", %"class.std::__1::unique_ptr.668", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.678", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.817", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.830", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.839", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.850", %"struct.std::__1::atomic.154", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.925", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.968"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.980", i32, i8, i8, i32, i32, %"class.std::__1::vector.986", %"class.std::__1::vector.986", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.993", i64, %"class.std::__1::unordered_map.994", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.543", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.162", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1050", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1215", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1249", %"class.std::__1::vector.1253", %"class.std::__1::vector.1253", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.0", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.0" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type { %"class.v8::internal::Isolate"*, i64, %"class.v8::internal::ExternalCallbackScope"* }
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.647" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.141", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.648", %"class.std::__1::unique_ptr.662" }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.651" }
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.std::__1::unique_ptr.653"*, %"class.std::__1::unique_ptr.653"*, %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.1705" }
%"class.std::__1::__compressed_pair.1705" = type { %"struct.std::__1::__compressed_pair_elem.1706" }
%"struct.std::__1::__compressed_pair_elem.1706" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.std::__1::unique_ptr.653"* }
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.671", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.671" = type { %"struct.std::__1::__atomic_base.672" }
%"struct.std::__1::__atomic_base.672" = type { %"struct.std::__1::__cxx_atomic_impl.673" }
%"struct.std::__1::__cxx_atomic_impl.673" = type { %"struct.std::__1::__cxx_atomic_base_impl.674" }
%"struct.std::__1::__cxx_atomic_base_impl.674" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type { %"class.v8::internal::ThreadId", i8*, %"class.v8::internal::ThreadState"*, %"class.v8::internal::ThreadState"*, %"class.v8::internal::ThreadManager"* }
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.678" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.679", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.679" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.680", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.680" = type { %"class.std::__1::__vector_base.681" }
%"class.std::__1::__vector_base.681" = type { %"class.std::__1::unique_ptr.682"*, %"class.std::__1::unique_ptr.682"*, %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::unique_ptr.682" = type opaque
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.std::__1::unique_ptr.682"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.688", %"class.std::__1::unique_ptr.694", %"struct.std::__1::atomic.154", %"class.std::__1::unique_ptr.700", %"class.std::__1::unique_ptr.706", %"class.std::__1::unique_ptr.712", %"class.std::__1::unique_ptr.718", %"class.std::__1::unique_ptr.724", %"class.std::__1::set.730", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.706" = type { %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.730" = type { %"class.std::__1::__tree.731" }
%"class.std::__1::__tree.731" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.732", %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.739" }
%"class.v8::internal::TaggedImpl.739" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.746", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.752", %"class.v8::internal::DetachableVector.753", %"class.v8::internal::DetachableVector.752", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.753" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.752" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.std::__1::unique_ptr.740", %"class.std::__1::unique_ptr.483" }
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.486", %"class.std::__1::set.494" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.486" = type { %"class.std::__1::__tree.487" }
%"class.std::__1::__tree.487" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::set.494" = type { %"class.std::__1::__tree.495" }
%"class.std::__1::__tree.495" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.754", %"class.std::__1::vector.760", %"class.std::__1::unique_ptr.767", %"class.std::__1::vector.774", %"class.std::__1::unique_ptr.781", i64, %"class.std::__1::vector.787", %"class.std::__1::vector.795", %"class.std::__1::vector.803", i8, i8, i32 }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.760" = type { %"class.std::__1::__vector_base.761" }
%"class.std::__1::__vector_base.761" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.762" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.v8::internal::GlobalHandles::NodeSpace.770"* }
%"class.v8::internal::GlobalHandles::NodeSpace.770" = type opaque
%"class.std::__1::vector.774" = type { %"class.std::__1::__vector_base.775" }
%"class.std::__1::__vector_base.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.776" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.787" = type { %"class.std::__1::__vector_base.788" }
%"class.std::__1::__vector_base.788" = type { %"struct.std::__1::pair.789"*, %"struct.std::__1::pair.789"*, %"class.std::__1::__compressed_pair.790" }
%"struct.std::__1::pair.789" = type opaque
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"struct.std::__1::pair.789"* }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"struct.std::__1::pair.797"*, %"struct.std::__1::pair.797"*, %"class.std::__1::__compressed_pair.798" }
%"struct.std::__1::pair.797" = type opaque
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"struct.std::__1::pair.797"* }
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.805" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.810", %"class.std::__1::vector.817" }
%"class.std::__1::vector.810" = type { %"class.std::__1::__vector_base.811" }
%"class.std::__1::__vector_base.811" = type { i64**, i64**, %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { i64** }
%"class.v8::internal::ThreadManager" = type { %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"class.v8::internal::ThreadId", %"class.v8::internal::ThreadState"*, %"class.v8::internal::ThreadState"*, %"class.v8::internal::ThreadState"*, %"class.v8::internal::Isolate"* }
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.824" }
%"class.std::__1::unique_ptr.824" = type { %"class.std::__1::__compressed_pair.825" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type { [512 x i8], %"struct.v8::internal::RegExpStack::ThreadLocal", %"class.v8::internal::Isolate"* }
%"struct.v8::internal::RegExpStack::ThreadLocal" = type <{ i8*, i8*, i64, i64, i8, i8, [6 x i8] }>
%"class.std::__1::vector.817" = type { %"class.std::__1::__vector_base.818" }
%"class.std::__1::__vector_base.818" = type { i32*, i32*, %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.830" = type { %"struct.std::__1::__atomic_base.831" }
%"struct.std::__1::__atomic_base.831" = type { %"struct.std::__1::__cxx_atomic_impl.832" }
%"struct.std::__1::__cxx_atomic_impl.832" = type { %"struct.std::__1::__cxx_atomic_base_impl.833" }
%"struct.std::__1::__cxx_atomic_base_impl.833" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.839" = type { %"struct.std::__1::__atomic_base.840" }
%"struct.std::__1::__atomic_base.840" = type { %"struct.std::__1::__cxx_atomic_impl.841" }
%"struct.std::__1::__cxx_atomic_impl.841" = type { %"struct.std::__1::__cxx_atomic_base_impl.842" }
%"struct.std::__1::__cxx_atomic_base_impl.842" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.846 }
%union.anon.846 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.850" = type { %"class.std::__1::__hash_table.851" }
%"class.std::__1::__hash_table.851" = type <{ %"class.std::__1::unique_ptr.852", %"class.std::__1::__compressed_pair.862", %"class.std::__1::__compressed_pair.867", %"class.std::__1::__compressed_pair.870", [4 x i8] }>
%"class.std::__1::unique_ptr.852" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854", %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"struct.std::__1::__hash_node_base.855"** }
%"struct.std::__1::__hash_node_base.855" = type { %"struct.std::__1::__hash_node_base.855"* }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.std::__1::__bucket_list_deallocator.857" }
%"class.std::__1::__bucket_list_deallocator.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"struct.std::__1::__hash_node_base.855" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::atomic.154" = type { %"struct.std::__1::__atomic_base.155" }
%"struct.std::__1::__atomic_base.155" = type { %"struct.std::__1::__cxx_atomic_impl.156" }
%"struct.std::__1::__cxx_atomic_impl.156" = type { %"struct.std::__1::__cxx_atomic_base_impl.157" }
%"struct.std::__1::__cxx_atomic_base_impl.157" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.876", %"class.v8::internal::Handle.882", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.883", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.883" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.884", %"class.std::__1::vector.890", %"class.std::__1::unique_ptr.898", %"class.std::__1::unique_ptr.904", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.910", %"class.std::__1::vector.916", %"struct.std::__1::pair.924" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.890" = type { %"class.std::__1::__vector_base.891" }
%"class.std::__1::__vector_base.891" = type { %"class.std::__1::unique_ptr.892"*, %"class.std::__1::unique_ptr.892"*, %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::unique_ptr.892" = type opaque
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.std::__1::unique_ptr.892"* }
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.916" = type { %"class.std::__1::__vector_base.917" }
%"class.std::__1::__vector_base.917" = type { %"struct.std::__1::pair.918"*, %"struct.std::__1::pair.918"*, %"class.std::__1::__compressed_pair.919" }
%"struct.std::__1::pair.918" = type opaque
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"struct.std::__1::pair.918"* }
%"struct.std::__1::pair.924" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.2"*, i16, i8*)*, i8* }
%"class.v8::Local.2" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.928", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.928" = type { %"class.std::__1::__hash_table.929" }
%"class.std::__1::__hash_table.929" = type <{ %"class.std::__1::unique_ptr.930", %"class.std::__1::__compressed_pair.940", %"class.std::__1::__compressed_pair.945", %"class.std::__1::__compressed_pair.949", [4 x i8] }>
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932", %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.std::__1::__hash_node_base.933"** }
%"struct.std::__1::__hash_node_base.933" = type { %"struct.std::__1::__hash_node_base.933"* }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.std::__1::__bucket_list_deallocator.935" }
%"class.std::__1::__bucket_list_deallocator.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"struct.std::__1::__hash_node_base.933" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.963" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.957"**, %"struct.std::__1::pair.957"**, %"struct.std::__1::pair.957"**, %"class.std::__1::__compressed_pair.958" }
%"struct.std::__1::pair.957" = type opaque
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"struct.std::__1::pair.957"** }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.968" = type { %"class.std::__1::__vector_base.969" }
%"class.std::__1::__vector_base.969" = type { %"class.v8::internal::Handle.970"*, %"class.v8::internal::Handle.970"*, %"class.std::__1::__compressed_pair.971" }
%"class.v8::internal::Handle.970" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"class.v8::internal::Handle.970"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.976" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.976" = type { %"class.std::__1::__vector_base.977" }
%"class.std::__1::__vector_base.977" = type { %"struct.std::__1::pair.957"*, %"struct.std::__1::pair.957"*, %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"struct.std::__1::pair.957"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.835", i32, %"class.v8::Local.2" }
%"class.v8::Local.835" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.810", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.986" = type { %"class.std::__1::__vector_base.987" }
%"class.std::__1::__vector_base.987" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.988" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.993" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.994" = type { %"class.std::__1::__hash_table.995" }
%"class.std::__1::__hash_table.995" = type <{ %"class.std::__1::unique_ptr.996", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1011", %"class.std::__1::__compressed_pair.1014", [4 x i8] }>
%"class.std::__1::unique_ptr.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.998", %"struct.std::__1::__compressed_pair_elem.1000" }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"struct.std::__1::__hash_node_base.999"** }
%"struct.std::__1::__hash_node_base.999" = type { %"struct.std::__1::__hash_node_base.999"* }
%"struct.std::__1::__compressed_pair_elem.1000" = type { %"class.std::__1::__bucket_list_deallocator.1001" }
%"class.std::__1::__bucket_list_deallocator.1001" = type { %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.1007" }
%"struct.std::__1::__compressed_pair_elem.1007" = type { %"struct.std::__1::__hash_node_base.999" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.162" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1018", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1047", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1048", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1018" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1043, %union.anon.1045, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1043 = type { i64 }
%union.anon.1045 = type { i64 }
%"class.std::__1::weak_ptr.1047" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.21", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.162" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1048" = type { %"class.v8::PersistentBase.1049" }
%"class.v8::PersistentBase.1049" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1019", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1019" = type { %"class.std::__1::__hash_table.1020" }
%"class.std::__1::__hash_table.1020" = type <{ %"class.std::__1::unique_ptr.1021", %"class.std::__1::__compressed_pair.1031", %"class.std::__1::__compressed_pair.1036", %"class.std::__1::__compressed_pair.1039", [4 x i8] }>
%"class.std::__1::unique_ptr.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023", %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"struct.std::__1::__hash_node_base.1024"** }
%"struct.std::__1::__hash_node_base.1024" = type { %"struct.std::__1::__hash_node_base.1024"* }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.std::__1::__bucket_list_deallocator.1026" }
%"class.std::__1::__bucket_list_deallocator.1026" = type { %"class.std::__1::__compressed_pair.1027" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.1032" }
%"struct.std::__1::__compressed_pair_elem.1032" = type { %"struct.std::__1::__hash_node_base.1024" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1079", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1055", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1059", %"class.std::__1::unique_ptr.1065", %"class.std::__1::unique_ptr.476", %"class.std::__1::vector.1071", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1055" = type { %"struct.std::__1::__atomic_base.1056" }
%"struct.std::__1::__atomic_base.1056" = type { %"struct.std::__1::__cxx_atomic_impl.1057" }
%"struct.std::__1::__cxx_atomic_impl.1057" = type { %"struct.std::__1::__cxx_atomic_base_impl.1058" }
%"struct.std::__1::__cxx_atomic_base_impl.1058" = type { i32 }
%"class.std::__1::unique_ptr.1059" = type { %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.810" }
%"class.std::__1::unique_ptr.1065" = type { %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1071" = type { %"class.std::__1::__vector_base.1072" }
%"class.std::__1::__vector_base.1072" = type { %"struct.std::__1::pair.1073"*, %"struct.std::__1::pair.1073"*, %"class.std::__1::__compressed_pair.1074" }
%"struct.std::__1::pair.1073" = type opaque
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.1075" }
%"struct.std::__1::__compressed_pair_elem.1075" = type { %"struct.std::__1::pair.1073"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.21"*, %"class.std::__1::unique_ptr.99" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.40", %"class.std::__1::vector.40", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.42" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.47" }
%"class.std::__1::__hash_table.47" = type <{ %"class.std::__1::unique_ptr.48", %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.65", [4 x i8] }>
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50", %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::__hash_node_base.51"** }
%"struct.std::__1::__hash_node_base.51" = type { %"struct.std::__1::__hash_node_base.51"* }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::__bucket_list_deallocator.53" }
%"class.std::__1::__bucket_list_deallocator.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::__hash_node_base.51" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.26", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.88", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.21"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.26", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.70", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.74" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.76" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.92", i8, [7 x i8] }>
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { i64*, i64*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.21", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1079" = type { %"class.std::__1::__compressed_pair.1080" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.1081" }
%"struct.std::__1::__compressed_pair_elem.1081" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type { %"class.v8::internal::wasm::WasmCodeManager", %"class.v8::internal::AccountingAllocator", %"struct.std::__1::atomic.1096", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.1101", %"class.std::__1::unique_ptr.1129", %"class.std::__1::unique_ptr.1135", %"class.std::__1::unordered_map.1141", %"class.std::__1::unordered_map.1169", %"class.std::__1::shared_ptr.1197", i64, %"class.std::__1::unique_ptr.1198", %"class.v8::internal::wasm::NativeModuleCache" }
%"class.v8::internal::wasm::WasmCodeManager" = type { i64, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", i32, %"class.v8::base::Mutex", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1088" }
%"class.std::__1::__tree.1088" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1089", %"class.std::__1::__compressed_pair.1093" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.1093" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.1096" = type { %"struct.std::__1::__atomic_base.1097" }
%"struct.std::__1::__atomic_base.1097" = type { %"struct.std::__1::__atomic_base.1098" }
%"struct.std::__1::__atomic_base.1098" = type { %"struct.std::__1::__cxx_atomic_impl.1099" }
%"struct.std::__1::__cxx_atomic_impl.1099" = type { %"struct.std::__1::__cxx_atomic_base_impl.1100" }
%"struct.std::__1::__cxx_atomic_base_impl.1100" = type { i32 }
%"class.std::__1::unordered_map.1101" = type { %"class.std::__1::__hash_table.1102" }
%"class.std::__1::__hash_table.1102" = type <{ %"class.std::__1::unique_ptr.1103", %"class.std::__1::__compressed_pair.1113", %"class.std::__1::__compressed_pair.1118", %"class.std::__1::__compressed_pair.1123", [4 x i8] }>
%"class.std::__1::unique_ptr.1103" = type { %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105", %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"struct.std::__1::__hash_node_base.1106"** }
%"struct.std::__1::__hash_node_base.1106" = type { %"struct.std::__1::__hash_node_base.1106"* }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"class.std::__1::__bucket_list_deallocator.1108" }
%"class.std::__1::__bucket_list_deallocator.1108" = type { %"class.std::__1::__compressed_pair.1109" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"struct.std::__1::__hash_node_base.1106" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.1129" = type { %"class.std::__1::__compressed_pair.1130" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"class.v8::internal::CompilationStatistics"* }
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.v8::internal::CodeTracer"* }
%"class.std::__1::unordered_map.1141" = type { %"class.std::__1::__hash_table.1142" }
%"class.std::__1::__hash_table.1142" = type <{ %"class.std::__1::unique_ptr.1143", %"class.std::__1::__compressed_pair.1153", %"class.std::__1::__compressed_pair.1158", %"class.std::__1::__compressed_pair.1163", [4 x i8] }>
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145", %"struct.std::__1::__compressed_pair_elem.1147" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"struct.std::__1::__hash_node_base.1146"** }
%"struct.std::__1::__hash_node_base.1146" = type { %"struct.std::__1::__hash_node_base.1146"* }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"class.std::__1::__bucket_list_deallocator.1148" }
%"class.std::__1::__bucket_list_deallocator.1148" = type { %"class.std::__1::__compressed_pair.1149" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"struct.std::__1::__hash_node_base.1146" }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.1169" = type { %"class.std::__1::__hash_table.1170" }
%"class.std::__1::__hash_table.1170" = type <{ %"class.std::__1::unique_ptr.1171", %"class.std::__1::__compressed_pair.1181", %"class.std::__1::__compressed_pair.1186", %"class.std::__1::__compressed_pair.1191", [4 x i8] }>
%"class.std::__1::unique_ptr.1171" = type { %"class.std::__1::__compressed_pair.1172" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.1173", %"struct.std::__1::__compressed_pair_elem.1175" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"struct.std::__1::__hash_node_base.1174"** }
%"struct.std::__1::__hash_node_base.1174" = type { %"struct.std::__1::__hash_node_base.1174"* }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"class.std::__1::__bucket_list_deallocator.1176" }
%"class.std::__1::__bucket_list_deallocator.1176" = type { %"class.std::__1::__compressed_pair.1177" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.1182" }
%"struct.std::__1::__compressed_pair_elem.1182" = type { %"struct.std::__1::__hash_node_base.1174" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1191" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::shared_ptr.1197" = type { %"class.v8::internal::OperationsBarrier"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::OperationsBarrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", i8, i64 }
%"class.std::__1::unique_ptr.1198" = type { %"class.std::__1::__compressed_pair.1199" }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { %"struct.v8::internal::wasm::WasmEngine::CurrentGCInfo"* }
%"struct.v8::internal::wasm::WasmEngine::CurrentGCInfo" = type opaque
%"class.v8::internal::wasm::NativeModuleCache" = type { %"class.std::__1::map.1204", %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable" }
%"class.std::__1::map.1204" = type { %"class.std::__1::__tree.1205" }
%"class.std::__1::__tree.1205" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1206", %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.1215" = type { %"class.std::__1::__compressed_pair.1216" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1223" }
%"class.std::__1::unordered_map.1223" = type { %"class.std::__1::__hash_table.1224" }
%"class.std::__1::__hash_table.1224" = type <{ %"class.std::__1::unique_ptr.1225", %"class.std::__1::__compressed_pair.1235", %"class.std::__1::__compressed_pair.1240", %"class.std::__1::__compressed_pair.1243", [4 x i8] }>
%"class.std::__1::unique_ptr.1225" = type { %"class.std::__1::__compressed_pair.1226" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227", %"struct.std::__1::__compressed_pair_elem.1229" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"struct.std::__1::__hash_node_base.1228"** }
%"struct.std::__1::__hash_node_base.1228" = type { %"struct.std::__1::__hash_node_base.1228"* }
%"struct.std::__1::__compressed_pair_elem.1229" = type { %"class.std::__1::__bucket_list_deallocator.1230" }
%"class.std::__1::__bucket_list_deallocator.1230" = type { %"class.std::__1::__compressed_pair.1231" }
%"class.std::__1::__compressed_pair.1231" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.1236" }
%"struct.std::__1::__compressed_pair_elem.1236" = type { %"struct.std::__1::__hash_node_base.1228" }
%"class.std::__1::__compressed_pair.1240" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::atomic.1249" = type { %"struct.std::__1::__atomic_base.1250" }
%"struct.std::__1::__atomic_base.1250" = type { %"struct.std::__1::__cxx_atomic_impl.1251" }
%"struct.std::__1::__cxx_atomic_impl.1251" = type { %"struct.std::__1::__cxx_atomic_base_impl.1252" }
%"struct.std::__1::__cxx_atomic_base_impl.1252" = type { %"class.std::__1::vector.1253"* }
%"class.std::__1::vector.1253" = type { %"class.std::__1::__vector_base.1254" }
%"class.std::__1::__vector_base.1254" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1255" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.1256" }
%"struct.std::__1::__compressed_pair_elem.1256" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.105" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"struct.std::__1::pair.107"*, %"struct.std::__1::pair.107"*, %"class.std::__1::__compressed_pair.108" }
%"struct.std::__1::pair.107" = type { i32, i64 }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::pair.107"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.21", i32, %"struct.std::__1::atomic.21", %"class.v8::base::Mutex", %"struct.std::__1::atomic.21" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.113" }
%"class.std::__1::unordered_map.113" = type { %"class.std::__1::__hash_table.114" }
%"class.std::__1::__hash_table.114" = type <{ %"class.std::__1::unique_ptr.115", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.130", %"class.std::__1::__compressed_pair.135", [4 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117", %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base.118"** }
%"struct.std::__1::__hash_node_base.118" = type { %"struct.std::__1::__hash_node_base.118"* }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.std::__1::__bucket_list_deallocator.120" }
%"class.std::__1::__bucket_list_deallocator.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::__hash_node_base.118" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.154", %"struct.std::__1::atomic.158", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.21" }
%"struct.std::__1::atomic.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__cxx_atomic_impl.160" }
%"struct.std::__1::__cxx_atomic_impl.160" = type { %"struct.std::__1::__cxx_atomic_base_impl.161" }
%"struct.std::__1::__cxx_atomic_base_impl.161" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.169" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.289", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.183", %"class.std::__1::vector.184", %"class.std::__1::vector.191", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.183" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.186" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"class.std::__1::unique_ptr.193"*, %"class.std::__1::unique_ptr.193"*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::unique_ptr.193" = type opaque
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::unique_ptr.193"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211", %"class.v8::internal::Worklist.213" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.213" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.215", i8, i64 }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.231" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.183"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.231" = type { %"class.std::__1::__hash_table.232" }
%"class.std::__1::__hash_table.232" = type <{ %"class.std::__1::unique_ptr.233", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.251", [4 x i8] }>
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235", %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base.236"** }
%"struct.std::__1::__hash_node_base.236" = type { %"struct.std::__1::__hash_node_base.236"* }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.std::__1::__bucket_list_deallocator.238" }
%"class.std::__1::__bucket_list_deallocator.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base.236" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.258" }
%"class.std::__1::unordered_map.258" = type { %"class.std::__1::__hash_table.259" }
%"class.std::__1::__hash_table.259" = type <{ %"class.std::__1::unique_ptr.260", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.278", [4 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.263"** }
%"struct.std::__1::__hash_node_base.263" = type { %"struct.std::__1::__hash_node_base.263"* }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::__bucket_list_deallocator.265" }
%"class.std::__1::__bucket_list_deallocator.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.263" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.282" = type { %"class.std::__1::__vector_base.283" }
%"class.std::__1::__vector_base.283" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"struct.std::__1::pair.291"*, %"struct.std::__1::pair.291"*, %"class.std::__1::__compressed_pair.292" }
%"struct.std::__1::pair.291" = type opaque
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.std::__1::pair.291"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.297", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.282"], [3 x %"class.std::__1::vector.282"], i8, %"struct.std::__1::atomic.154", [6 x i8], %"class.std::__1::vector.282", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.307"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.307" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.332", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.325"], %"class.std::__1::unique_ptr.297" }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.364", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.368", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.373" }
%"struct.std::__1::atomic.364" = type { %"struct.std::__1::__atomic_base.365" }
%"struct.std::__1::__atomic_base.365" = type { %"struct.std::__1::__cxx_atomic_impl.366" }
%"struct.std::__1::__cxx_atomic_impl.366" = type { %"struct.std::__1::__cxx_atomic_base_impl.367" }
%"struct.std::__1::__cxx_atomic_base_impl.367" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.368" = type { %"struct.std::__1::__atomic_base.369" }
%"struct.std::__1::__atomic_base.369" = type { %"struct.std::__1::__cxx_atomic_impl.370" }
%"struct.std::__1::__cxx_atomic_impl.370" = type { %"struct.std::__1::__cxx_atomic_base_impl.371" }
%"struct.std::__1::__cxx_atomic_base_impl.371" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.393", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.297", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.154", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.403", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.439" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.482" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.501", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.483", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.501" = type { %"struct.std::__1::__atomic_base.502" }
%"struct.std::__1::__atomic_base.502" = type { %"struct.std::__1::__cxx_atomic_impl.503" }
%"struct.std::__1::__cxx_atomic_impl.503" = type { %"struct.std::__1::__cxx_atomic_base_impl.504" }
%"struct.std::__1::__cxx_atomic_base_impl.504" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.505" = type { %"class.std::__1::__hash_table.506" }
%"class.std::__1::__hash_table.506" = type <{ %"class.std::__1::unique_ptr.507", %"class.std::__1::__compressed_pair.517", %"class.std::__1::__compressed_pair.522", %"class.std::__1::__compressed_pair.525", [4 x i8] }>
%"class.std::__1::unique_ptr.507" = type { %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509", %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"struct.std::__1::__hash_node_base.510"** }
%"struct.std::__1::__hash_node_base.510" = type { %"struct.std::__1::__hash_node_base.510"* }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.std::__1::__bucket_list_deallocator.512" }
%"class.std::__1::__bucket_list_deallocator.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"struct.std::__1::__hash_node_base.510" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.531" = type { %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.543", %"class.std::__1::vector.543" }
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.332" = type { %"class.std::__1::__hash_table.333" }
%"class.std::__1::__hash_table.333" = type <{ %"class.std::__1::unique_ptr.334", %"class.std::__1::__compressed_pair.344", %"class.std::__1::__compressed_pair.349", %"class.std::__1::__compressed_pair.353", [4 x i8] }>
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336", %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::__hash_node_base.337"** }
%"struct.std::__1::__hash_node_base.337" = type { %"struct.std::__1::__hash_node_base.337"* }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.std::__1::__bucket_list_deallocator.339" }
%"class.std::__1::__bucket_list_deallocator.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.std::__1::__hash_node_base.337" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.582" = type { %"class.std::__1::__hash_table.583" }
%"class.std::__1::__hash_table.583" = type <{ %"class.std::__1::unique_ptr.584", %"class.std::__1::__compressed_pair.594", %"class.std::__1::__compressed_pair.599", %"class.std::__1::__compressed_pair.602", [4 x i8] }>
%"class.std::__1::unique_ptr.584" = type { %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586", %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"struct.std::__1::__hash_node_base.587"** }
%"struct.std::__1::__hash_node_base.587" = type { %"struct.std::__1::__hash_node_base.587"* }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.std::__1::__bucket_list_deallocator.589" }
%"class.std::__1::__bucket_list_deallocator.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"struct.std::__1::__hash_node_base.587" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.556" = type { %"class.std::__1::__hash_table.557" }
%"class.std::__1::__hash_table.557" = type <{ %"class.std::__1::unique_ptr.558", %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.576", [4 x i8] }>
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560", %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"struct.std::__1::__hash_node_base.561"** }
%"struct.std::__1::__hash_node_base.561" = type { %"struct.std::__1::__hash_node_base.561"* }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.std::__1::__bucket_list_deallocator.563" }
%"class.std::__1::__bucket_list_deallocator.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.std::__1::__hash_node_base.561" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.606" = type { %"class.std::__1::__hash_table.607" }
%"class.std::__1::__hash_table.607" = type <{ %"class.std::__1::unique_ptr.608", %"class.std::__1::__compressed_pair.618", %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.628", [4 x i8] }>
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610", %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"struct.std::__1::__hash_node_base.611"** }
%"struct.std::__1::__hash_node_base.611" = type { %"struct.std::__1::__hash_node_base.611"* }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.std::__1::__bucket_list_deallocator.613" }
%"class.std::__1::__bucket_list_deallocator.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"struct.std::__1::__hash_node_base.611" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.634" = type { %"class.std::__1::__vector_base.635" }
%"class.std::__1::__vector_base.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.21", i64, %"struct.std::__1::atomic.21" }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.143" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.543" = type { %"class.std::__1::__vector_base.544" }
%"class.std::__1::__vector_base.544" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.v8::internal::Object"* }
%"class.v8::debug::Location" = type <{ i32, i32, i8, [3 x i8] }>
%"class.v8::debug::ConsoleCallArguments" = type { %"class.v8::FunctionCallbackInfo.base", [4 x i8] }
%"class.v8::FunctionCallbackInfo.base" = type <{ i64*, i64*, i32 }>
%"class.v8::internal::BuiltinArguments" = type { %"class.v8::internal::Arguments" }
%"class.v8::internal::Arguments" = type { i64, i64* }
%"class.v8::debug::PostponeInterruptsScope" = type { %"class.std::__1::unique_ptr.1600" }
%"class.std::__1::unique_ptr.1600" = type { %"class.std::__1::__compressed_pair.1601" }
%"class.std::__1::__compressed_pair.1601" = type { %"struct.std::__1::__compressed_pair_elem.1602" }
%"struct.std::__1::__compressed_pair_elem.1602" = type { %"class.v8::internal::PostponeInterruptsScope"* }
%"class.v8::internal::PostponeInterruptsScope" = type { %"class.v8::internal::InterruptsScope" }
%"class.v8::debug::DisableBreakScope" = type { %"class.std::__1::unique_ptr.1606" }
%"class.std::__1::unique_ptr.1606" = type { %"class.std::__1::__compressed_pair.1607" }
%"class.std::__1::__compressed_pair.1607" = type { %"struct.std::__1::__compressed_pair_elem.1608" }
%"struct.std::__1::__compressed_pair_elem.1608" = type { %"class.v8::internal::DisableBreak"* }
%"class.v8::internal::DisableBreak" = type <{ %"class.v8::internal::Debug"*, i8, [7 x i8] }>
%"class.v8::debug::Coverage::ScriptData" = type { %"struct.v8::internal::CoverageScript"*, %"class.std::__1::shared_ptr.1612" }
%"struct.v8::internal::CoverageScript" = type { %"class.v8::internal::Handle.1470", %"class.std::__1::vector.1615" }
%"class.v8::internal::Handle.1470" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::vector.1615" = type { %"class.std::__1::__vector_base.1616" }
%"class.std::__1::__vector_base.1616" = type { %"struct.v8::internal::CoverageFunction"*, %"struct.v8::internal::CoverageFunction"*, %"class.std::__1::__compressed_pair.1624" }
%"struct.v8::internal::CoverageFunction" = type <{ i32, i32, i32, [4 x i8], %"class.v8::internal::Handle.1263", %"class.std::__1::vector.1617", i8, [7 x i8] }>
%"class.v8::internal::Handle.1263" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::vector.1617" = type { %"class.std::__1::__vector_base.1618" }
%"class.std::__1::__vector_base.1618" = type { %"struct.v8::internal::CoverageBlock"*, %"struct.v8::internal::CoverageBlock"*, %"class.std::__1::__compressed_pair.1619" }
%"struct.v8::internal::CoverageBlock" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.1619" = type { %"struct.std::__1::__compressed_pair_elem.1620" }
%"struct.std::__1::__compressed_pair_elem.1620" = type { %"struct.v8::internal::CoverageBlock"* }
%"class.std::__1::__compressed_pair.1624" = type { %"struct.std::__1::__compressed_pair_elem.1625" }
%"struct.std::__1::__compressed_pair_elem.1625" = type { %"struct.v8::internal::CoverageFunction"* }
%"class.std::__1::shared_ptr.1612" = type { %"class.v8::internal::Coverage"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Coverage" = type { %"class.std::__1::vector.1613" }
%"class.std::__1::vector.1613" = type { %"class.std::__1::__vector_base.1614" }
%"class.std::__1::__vector_base.1614" = type { %"struct.v8::internal::CoverageScript"*, %"struct.v8::internal::CoverageScript"*, %"class.std::__1::__compressed_pair.1629" }
%"class.std::__1::__compressed_pair.1629" = type { %"struct.std::__1::__compressed_pair_elem.1630" }
%"struct.std::__1::__compressed_pair_elem.1630" = type { %"struct.v8::internal::CoverageScript"* }
%"class.v8::debug::TypeProfile::ScriptData" = type { %"struct.v8::internal::TypeProfileScript"*, %"class.std::__1::shared_ptr.1647" }
%"struct.v8::internal::TypeProfileScript" = type { %"class.v8::internal::Handle.1470", %"class.std::__1::vector.1650" }
%"class.std::__1::vector.1650" = type { %"class.std::__1::__vector_base.1651" }
%"class.std::__1::__vector_base.1651" = type { %"struct.v8::internal::TypeProfileEntry"*, %"struct.v8::internal::TypeProfileEntry"*, %"class.std::__1::__compressed_pair.1652" }
%"struct.v8::internal::TypeProfileEntry" = type { i32, %"class.std::__1::vector.1640" }
%"class.std::__1::vector.1640" = type { %"class.std::__1::__vector_base.1641" }
%"class.std::__1::__vector_base.1641" = type { %"class.v8::internal::Handle.1263"*, %"class.v8::internal::Handle.1263"*, %"class.std::__1::__compressed_pair.1642" }
%"class.std::__1::__compressed_pair.1642" = type { %"struct.std::__1::__compressed_pair_elem.1643" }
%"struct.std::__1::__compressed_pair_elem.1643" = type { %"class.v8::internal::Handle.1263"* }
%"class.std::__1::__compressed_pair.1652" = type { %"struct.std::__1::__compressed_pair_elem.1653" }
%"struct.std::__1::__compressed_pair_elem.1653" = type { %"struct.v8::internal::TypeProfileEntry"* }
%"class.std::__1::shared_ptr.1647" = type { %"class.v8::internal::TypeProfile"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::TypeProfile" = type { %"class.std::__1::vector.1648" }
%"class.std::__1::vector.1648" = type { %"class.std::__1::__vector_base.1649" }
%"class.std::__1::__vector_base.1649" = type { %"struct.v8::internal::TypeProfileScript"*, %"struct.v8::internal::TypeProfileScript"*, %"class.std::__1::__compressed_pair.1657" }
%"class.std::__1::__compressed_pair.1657" = type { %"struct.std::__1::__compressed_pair_elem.1658" }
%"struct.std::__1::__compressed_pair_elem.1658" = type { %"struct.v8::internal::TypeProfileScript"* }
%"class.v8::StackFrame" = type { i8 }
%"class.v8::internal::Handle<v8::internal::StackFrameInfo>::ObjectRef" = type { %"class.v8::internal::StackFrameInfo" }
%"class.v8::internal::StackFrameInfo" = type { %"class.v8::internal::TorqueGeneratedStackFrameInfo" }
%"class.v8::internal::TorqueGeneratedStackFrameInfo" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }
%"class.v8::Function" = type { i8 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle<v8::internal::WasmInstanceObject>::ObjectRef" = type { %"class.v8::internal::WasmInstanceObject" }
%"class.v8::internal::WasmInstanceObject" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::IncrementalStringBuilder" = type { %"class.v8::internal::Isolate"*, i32, i8, i32, i32, %"class.v8::internal::Handle.1263", %"class.v8::internal::Handle.1263" }
%"struct.v8::internal::wasm::WasmModule" = type { %"class.std::__1::unique_ptr.1268", i32, i32, i8, i8, i8, i8, i8, i32, %"class.std::__1::vector.1274", i32, i32, i32, i32, i32, i32, i32, i32, %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", %"class.std::__1::vector.1288", %"class.std::__1::vector.1296", %"class.std::__1::vector.1303", %"class.std::__1::vector.1310", %"class.std::__1::vector.1317", %"class.std::__1::vector.1324", %"class.std::__1::vector.1331", %"class.std::__1::vector.1338", %"class.std::__1::vector.1345", %"class.std::__1::vector.1352", %"class.std::__1::vector.1365", %"class.std::__1::unordered_map.1372", %"class.v8::internal::wasm::SignatureMap", i8, %"class.v8::internal::wasm::LazilyGeneratedNames", %"struct.v8::internal::wasm::WasmDebugSymbols", %"class.std::__1::unique_ptr.1433" }
%"class.std::__1::unique_ptr.1268" = type { %"class.std::__1::__compressed_pair.1269" }
%"class.std::__1::__compressed_pair.1269" = type { %"struct.std::__1::__compressed_pair_elem.1270" }
%"struct.std::__1::__compressed_pair_elem.1270" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::vector.1274" = type { %"class.std::__1::__vector_base.1275" }
%"class.std::__1::__vector_base.1275" = type { %"struct.v8::internal::wasm::WasmGlobal"*, %"struct.v8::internal::wasm::WasmGlobal"*, %"class.std::__1::__compressed_pair.1283" }
%"struct.v8::internal::wasm::WasmGlobal" = type <{ %"class.v8::internal::wasm::ValueType", i8, [3 x i8], %"class.v8::internal::wasm::WasmInitExpr", %union.anon.1282, i8, i8, [2 x i8] }>
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.v8::internal::wasm::WasmInitExpr" = type { %"union.v8::internal::wasm::WasmInitExpr::Immediate", i32, %"class.std::__1::unique_ptr.1276" }
%"union.v8::internal::wasm::WasmInitExpr::Immediate" = type { i64, [8 x i8] }
%"class.std::__1::unique_ptr.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.1278" }
%"struct.std::__1::__compressed_pair_elem.1278" = type { %"class.v8::internal::wasm::WasmInitExpr"* }
%union.anon.1282 = type { i32 }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.1284" }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %"struct.v8::internal::wasm::WasmGlobal"* }
%"class.v8::internal::wasm::WireBytesRef" = type { i32, i32 }
%"class.std::__1::vector.1288" = type { %"class.std::__1::__vector_base.1289" }
%"class.std::__1::__vector_base.1289" = type { %"struct.v8::internal::wasm::TypeDefinition"*, %"struct.v8::internal::wasm::TypeDefinition"*, %"class.std::__1::__compressed_pair.1291" }
%"struct.v8::internal::wasm::TypeDefinition" = type { %union.anon.1290 }
%union.anon.1290 = type { %"class.v8::internal::Signature"* }
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::wasm::ValueType"* }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1292" }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"struct.v8::internal::wasm::TypeDefinition"* }
%"class.std::__1::vector.1296" = type { %"class.std::__1::__vector_base.1297" }
%"class.std::__1::__vector_base.1297" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1298" }
%"class.std::__1::__compressed_pair.1298" = type { %"struct.std::__1::__compressed_pair_elem.1299" }
%"struct.std::__1::__compressed_pair_elem.1299" = type { i8* }
%"class.std::__1::vector.1303" = type { %"class.std::__1::__vector_base.1304" }
%"class.std::__1::__vector_base.1304" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1305" }
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem.1306" }
%"struct.std::__1::__compressed_pair_elem.1306" = type { i32* }
%"class.std::__1::vector.1310" = type { %"class.std::__1::__vector_base.1311" }
%"class.std::__1::__vector_base.1311" = type { %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"*, %"class.std::__1::__compressed_pair.1312" }
%"struct.v8::internal::wasm::WasmFunction" = type <{ %"class.v8::internal::Signature"*, i32, i32, %"class.v8::internal::wasm::WireBytesRef", i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.1313" }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %"struct.v8::internal::wasm::WasmFunction"* }
%"class.std::__1::vector.1317" = type { %"class.std::__1::__vector_base.1318" }
%"class.std::__1::__vector_base.1318" = type { %"struct.v8::internal::wasm::WasmDataSegment"*, %"struct.v8::internal::wasm::WasmDataSegment"*, %"class.std::__1::__compressed_pair.1319" }
%"struct.v8::internal::wasm::WasmDataSegment" = type <{ %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WireBytesRef", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1319" = type { %"struct.std::__1::__compressed_pair_elem.1320" }
%"struct.std::__1::__compressed_pair_elem.1320" = type { %"struct.v8::internal::wasm::WasmDataSegment"* }
%"class.std::__1::vector.1324" = type { %"class.std::__1::__vector_base.1325" }
%"class.std::__1::__vector_base.1325" = type { %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"*, %"class.std::__1::__compressed_pair.1326" }
%"struct.v8::internal::wasm::WasmTable" = type { %"class.v8::internal::wasm::ValueType", i32, i32, i8, i8, i8, %"class.v8::internal::wasm::WasmInitExpr" }
%"class.std::__1::__compressed_pair.1326" = type { %"struct.std::__1::__compressed_pair_elem.1327" }
%"struct.std::__1::__compressed_pair_elem.1327" = type { %"struct.v8::internal::wasm::WasmTable"* }
%"class.std::__1::vector.1331" = type { %"class.std::__1::__vector_base.1332" }
%"class.std::__1::__vector_base.1332" = type { %"struct.v8::internal::wasm::WasmImport"*, %"struct.v8::internal::wasm::WasmImport"*, %"class.std::__1::__compressed_pair.1333" }
%"struct.v8::internal::wasm::WasmImport" = type { %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"struct.v8::internal::wasm::WasmImport"* }
%"class.std::__1::vector.1338" = type { %"class.std::__1::__vector_base.1339" }
%"class.std::__1::__vector_base.1339" = type { %"struct.v8::internal::wasm::WasmExport"*, %"struct.v8::internal::wasm::WasmExport"*, %"class.std::__1::__compressed_pair.1340" }
%"struct.v8::internal::wasm::WasmExport" = type { %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1340" = type { %"struct.std::__1::__compressed_pair_elem.1341" }
%"struct.std::__1::__compressed_pair_elem.1341" = type { %"struct.v8::internal::wasm::WasmExport"* }
%"class.std::__1::vector.1345" = type { %"class.std::__1::__vector_base.1346" }
%"class.std::__1::__vector_base.1346" = type { %"struct.v8::internal::wasm::WasmException"*, %"struct.v8::internal::wasm::WasmException"*, %"class.std::__1::__compressed_pair.1347" }
%"struct.v8::internal::wasm::WasmException" = type { %"class.v8::internal::Signature"* }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.1348" }
%"struct.std::__1::__compressed_pair_elem.1348" = type { %"struct.v8::internal::wasm::WasmException"* }
%"class.std::__1::vector.1352" = type { %"class.std::__1::__vector_base.1353" }
%"class.std::__1::__vector_base.1353" = type { %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"*, %"class.std::__1::__compressed_pair.1360" }
%"struct.v8::internal::wasm::WasmElemSegment" = type <{ %"class.v8::internal::wasm::ValueType", i32, %"class.v8::internal::wasm::WasmInitExpr", %"class.std::__1::vector.1354", i32, [4 x i8] }>
%"class.std::__1::vector.1354" = type { %"class.std::__1::__vector_base.1355" }
%"class.std::__1::__vector_base.1355" = type { %"class.v8::internal::wasm::WasmInitExpr"*, %"class.v8::internal::wasm::WasmInitExpr"*, %"class.std::__1::__compressed_pair.1356" }
%"class.std::__1::__compressed_pair.1356" = type { %"struct.std::__1::__compressed_pair_elem.1278" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.1361" }
%"struct.std::__1::__compressed_pair_elem.1361" = type { %"struct.v8::internal::wasm::WasmElemSegment"* }
%"class.std::__1::vector.1365" = type { %"class.std::__1::__vector_base.1366" }
%"class.std::__1::__vector_base.1366" = type { %"struct.v8::internal::wasm::WasmCompilationHint"*, %"struct.v8::internal::wasm::WasmCompilationHint"*, %"class.std::__1::__compressed_pair.1367" }
%"struct.v8::internal::wasm::WasmCompilationHint" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.1367" = type { %"struct.std::__1::__compressed_pair_elem.1368" }
%"struct.std::__1::__compressed_pair_elem.1368" = type { %"struct.v8::internal::wasm::WasmCompilationHint"* }
%"class.std::__1::unordered_map.1372" = type { %"class.std::__1::__hash_table.1373" }
%"class.std::__1::__hash_table.1373" = type <{ %"class.std::__1::unique_ptr.1374", %"class.std::__1::__compressed_pair.1384", %"class.std::__1::__compressed_pair.1389", %"class.std::__1::__compressed_pair.1394", [4 x i8] }>
%"class.std::__1::unique_ptr.1374" = type { %"class.std::__1::__compressed_pair.1375" }
%"class.std::__1::__compressed_pair.1375" = type { %"struct.std::__1::__compressed_pair_elem.1376", %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1376" = type { %"struct.std::__1::__hash_node_base.1377"** }
%"struct.std::__1::__hash_node_base.1377" = type { %"struct.std::__1::__hash_node_base.1377"* }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.std::__1::__bucket_list_deallocator.1379" }
%"class.std::__1::__bucket_list_deallocator.1379" = type { %"class.std::__1::__compressed_pair.1380" }
%"class.std::__1::__compressed_pair.1380" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1384" = type { %"struct.std::__1::__compressed_pair_elem.1385" }
%"struct.std::__1::__compressed_pair_elem.1385" = type { %"struct.std::__1::__hash_node_base.1377" }
%"class.std::__1::__compressed_pair.1389" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1394" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::wasm::SignatureMap" = type { i8, [7 x i8], %"class.std::__1::unordered_map.1400" }
%"class.std::__1::unordered_map.1400" = type { %"class.std::__1::__hash_table.1401" }
%"class.std::__1::__hash_table.1401" = type <{ %"class.std::__1::unique_ptr.1402", %"class.std::__1::__compressed_pair.1412", %"class.std::__1::__compressed_pair.1417", %"class.std::__1::__compressed_pair.1420", [4 x i8] }>
%"class.std::__1::unique_ptr.1402" = type { %"class.std::__1::__compressed_pair.1403" }
%"class.std::__1::__compressed_pair.1403" = type { %"struct.std::__1::__compressed_pair_elem.1404", %"struct.std::__1::__compressed_pair_elem.1406" }
%"struct.std::__1::__compressed_pair_elem.1404" = type { %"struct.std::__1::__hash_node_base.1405"** }
%"struct.std::__1::__hash_node_base.1405" = type { %"struct.std::__1::__hash_node_base.1405"* }
%"struct.std::__1::__compressed_pair_elem.1406" = type { %"class.std::__1::__bucket_list_deallocator.1407" }
%"class.std::__1::__bucket_list_deallocator.1407" = type { %"class.std::__1::__compressed_pair.1408" }
%"class.std::__1::__compressed_pair.1408" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1412" = type { %"struct.std::__1::__compressed_pair_elem.1413" }
%"struct.std::__1::__compressed_pair_elem.1413" = type { %"struct.std::__1::__hash_node_base.1405" }
%"class.std::__1::__compressed_pair.1417" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1420" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::wasm::LazilyGeneratedNames" = type { %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.1426" }
%"class.std::__1::unique_ptr.1426" = type { %"class.std::__1::__compressed_pair.1427" }
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem.1428" }
%"struct.std::__1::__compressed_pair_elem.1428" = type { %"class.std::__1::unordered_map.1429"* }
%"class.std::__1::unordered_map.1429" = type opaque
%"struct.v8::internal::wasm::WasmDebugSymbols" = type { i32, %"class.v8::internal::wasm::WireBytesRef" }
%"class.std::__1::unique_ptr.1433" = type { %"class.std::__1::__compressed_pair.1434" }
%"class.std::__1::__compressed_pair.1434" = type { %"struct.std::__1::__compressed_pair_elem.1435" }
%"struct.std::__1::__compressed_pair_elem.1435" = type { %"class.v8::internal::wasm::AsmJsOffsetInformation"* }
%"class.v8::internal::wasm::AsmJsOffsetInformation" = type { %"class.v8::base::Mutex", %"class.v8::internal::OwnedVector", %"class.std::__1::unique_ptr.1442" }
%"class.v8::internal::OwnedVector" = type { %"class.std::__1::unique_ptr.1436", i64 }
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { i8* }
%"class.std::__1::unique_ptr.1442" = type { %"class.std::__1::__compressed_pair.1443" }
%"class.std::__1::__compressed_pair.1443" = type { %"struct.std::__1::__compressed_pair_elem.1444" }
%"struct.std::__1::__compressed_pair_elem.1444" = type { %"struct.v8::internal::wasm::AsmJsOffsets"* }
%"struct.v8::internal::wasm::AsmJsOffsets" = type opaque
%"class.v8::internal::Factory" = type { i8 }
%"class.std::__1::vector.1455" = type { %"class.std::__1::__vector_base.1456" }
%"class.std::__1::__vector_base.1456" = type { %"class.v8::Local.2"*, %"class.v8::Local.2"*, %"class.std::__1::__compressed_pair.1457" }
%"class.std::__1::__compressed_pair.1457" = type { %"struct.std::__1::__compressed_pair_elem.1458" }
%"struct.std::__1::__compressed_pair_elem.1458" = type { %"class.v8::Local.2"* }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1466", %"class.v8::internal::Handle.1452", %"class.v8::internal::Handle.1452", %"class.v8::internal::Handle.1265", %"class.v8::internal::Handle.1452", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1466" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1265" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1452" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::internal::Handle<v8::internal::Context>::ObjectRef" = type { %"class.v8::internal::Context" }
%"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef" = type { %"class.v8::internal::ScopeInfo" }
%"class.v8::internal::ScopeInfo" = type { %"class.v8::internal::TorqueGeneratedScopeInfo" }
%"class.v8::internal::TorqueGeneratedScopeInfo" = type { %"class.v8::internal::HeapObject" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::debug::Script" = type { i8 }
%"class.std::__1::vector.1471" = type { %"class.std::__1::__vector_base.1472" }
%"class.std::__1::__vector_base.1472" = type { %"class.v8::debug::BreakLocation"*, %"class.v8::debug::BreakLocation"*, %"class.std::__1::__compressed_pair.1473" }
%"class.v8::debug::BreakLocation" = type { %"class.v8::debug::Location.base", i32 }
%"class.v8::debug::Location.base" = type <{ i32, i32, i8 }>
%"class.std::__1::__compressed_pair.1473" = type { %"struct.std::__1::__compressed_pair_elem.1474" }
%"struct.std::__1::__compressed_pair_elem.1474" = type { %"class.v8::debug::BreakLocation"* }
%"class.v8::internal::BreakLocation" = type { %"class.v8::internal::Handle.1569", i32, i32, i32, i32 }
%"class.v8::internal::Handle.1569" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::vector.1567" = type { %"class.std::__1::__vector_base.1568" }
%"class.std::__1::__vector_base.1568" = type { %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*, %"class.std::__1::__compressed_pair.1570" }
%"class.std::__1::__compressed_pair.1570" = type { %"struct.std::__1::__compressed_pair_elem.1571" }
%"struct.std::__1::__compressed_pair_elem.1571" = type { %"class.v8::internal::BreakLocation"* }
%"class.std::__1::shared_ptr.1728" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type { %"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::OperationsBarrier::Token", %"class.v8::internal::wasm::WasmCodeAllocator", %"class.v8::internal::wasm::WasmFeatures", %"class.std::__1::shared_ptr.1492", %"class.std::__1::unique_ptr.1493", %"class.std::__1::shared_ptr.1506", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.std::__1::unique_ptr.1507", %"class.std::__1::unique_ptr.1513", %"class.std::__1::unique_ptr.1519", %"class.v8::base::RecursiveMutex", %"class.std::__1::map.1524", %"class.std::__1::vector.1533", %"class.std::__1::unique_ptr.1541", %"class.std::__1::vector.1547", %"class.std::__1::unique_ptr.1554", i8, %"class.std::__1::unique_ptr.1560", i8, i8, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21" }
%"class.v8::internal::OperationsBarrier::Token" = type { %"class.v8::internal::OperationsBarrier"* }
%"class.v8::internal::wasm::WasmCodeAllocator" = type { %"class.v8::internal::wasm::WasmCodeManager"*, %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.std::__1::vector.1486", i32, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.std::__1::shared_ptr.678" }
%"class.v8::internal::wasm::DisjointAllocationPool" = type { %"class.std::__1::set.1478" }
%"class.std::__1::set.1478" = type { %"class.std::__1::__tree.1479" }
%"class.std::__1::__tree.1479" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1480", %"class.std::__1::__compressed_pair.1484" }
%"class.std::__1::__compressed_pair.1480" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.1484" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::vector.1486" = type { %"class.std::__1::__vector_base.1487" }
%"class.std::__1::__vector_base.1487" = type { %"class.v8::internal::VirtualMemory"*, %"class.v8::internal::VirtualMemory"*, %"class.std::__1::__compressed_pair.1488" }
%"class.std::__1::__compressed_pair.1488" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"class.v8::internal::wasm::WasmFeatures" = type { %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.std::__1::shared_ptr.1492" = type { %"struct.v8::internal::wasm::WasmModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::unique_ptr.1493" = type { %"class.std::__1::__compressed_pair.1494" }
%"class.std::__1::__compressed_pair.1494" = type { %"struct.std::__1::__compressed_pair_elem.1495" }
%"struct.std::__1::__compressed_pair_elem.1495" = type { %"class.v8::internal::wasm::WasmModuleSourceMap"* }
%"class.v8::internal::wasm::WasmModuleSourceMap" = type <{ %"class.std::__1::vector.92", %"class.std::__1::vector.1496", %"class.std::__1::vector.92", %"class.std::__1::vector.92", i8, [7 x i8] }>
%"class.std::__1::vector.1496" = type { %"class.std::__1::__vector_base.1497" }
%"class.std::__1::__vector_base.1497" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1498" }
%"class.std::__1::__compressed_pair.1498" = type { %"struct.std::__1::__compressed_pair_elem.1499" }
%"struct.std::__1::__compressed_pair_elem.1499" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::shared_ptr.1506" = type { %"class.v8::internal::OwnedVector"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::WasmCode" = type { %"class.v8::internal::wasm::NativeModule"*, i8*, i8, %"class.std::__1::unique_ptr.1436", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::atomic.1096" }
%"class.std::__1::unique_ptr.1507" = type { %"class.std::__1::__compressed_pair.1508" }
%"class.std::__1::__compressed_pair.1508" = type { %"struct.std::__1::__compressed_pair_elem.1509" }
%"struct.std::__1::__compressed_pair_elem.1509" = type { %"class.v8::internal::wasm::CompilationState"* }
%"class.v8::internal::wasm::CompilationState" = type { i8 }
%"class.std::__1::unique_ptr.1513" = type { %"class.std::__1::__compressed_pair.1514" }
%"class.std::__1::__compressed_pair.1514" = type { %"struct.std::__1::__compressed_pair_elem.1515" }
%"struct.std::__1::__compressed_pair_elem.1515" = type { %"class.v8::internal::wasm::WasmImportWrapperCache"* }
%"class.v8::internal::wasm::WasmImportWrapperCache" = type opaque
%"class.std::__1::unique_ptr.1519" = type { %"class.std::__1::__compressed_pair.1520" }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem.1306" }
%"class.std::__1::map.1524" = type { %"class.std::__1::__tree.1525" }
%"class.std::__1::__tree.1525" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1526", %"class.std::__1::__compressed_pair.1530" }
%"class.std::__1::__compressed_pair.1526" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.1530" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::vector.1533" = type { %"class.std::__1::__vector_base.1534" }
%"class.std::__1::__vector_base.1534" = type { %"class.std::__1::unique_ptr.1535"*, %"class.std::__1::unique_ptr.1535"*, %"class.std::__1::__compressed_pair.1536" }
%"class.std::__1::unique_ptr.1535" = type opaque
%"class.std::__1::__compressed_pair.1536" = type { %"struct.std::__1::__compressed_pair_elem.1537" }
%"struct.std::__1::__compressed_pair_elem.1537" = type { %"class.std::__1::unique_ptr.1535"* }
%"class.std::__1::unique_ptr.1541" = type { %"class.std::__1::__compressed_pair.1542" }
%"class.std::__1::__compressed_pair.1542" = type { %"struct.std::__1::__compressed_pair_elem.1543" }
%"struct.std::__1::__compressed_pair_elem.1543" = type { %"class.v8::internal::wasm::WasmCode"** }
%"class.std::__1::vector.1547" = type { %"class.std::__1::__vector_base.1548" }
%"class.std::__1::__vector_base.1548" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"class.std::__1::__compressed_pair.1549" }
%"struct.v8::internal::wasm::NativeModule::CodeSpaceData" = type { %"class.v8::base::AddressRegion", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"* }
%"class.std::__1::__compressed_pair.1549" = type { %"struct.std::__1::__compressed_pair_elem.1550" }
%"struct.std::__1::__compressed_pair_elem.1550" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"* }
%"class.std::__1::unique_ptr.1554" = type { %"class.std::__1::__compressed_pair.1555" }
%"class.std::__1::__compressed_pair.1555" = type { %"struct.std::__1::__compressed_pair_elem.1556" }
%"struct.std::__1::__compressed_pair_elem.1556" = type { %"class.v8::internal::wasm::DebugInfo"* }
%"class.v8::internal::wasm::DebugInfo" = type opaque
%"class.std::__1::unique_ptr.1560" = type { %"class.std::__1::__compressed_pair.1561" }
%"class.std::__1::__compressed_pair.1561" = type { %"struct.std::__1::__compressed_pair_elem.1562" }
%"struct.std::__1::__compressed_pair_elem.1562" = type { %"class.std::__1::map.1563"* }
%"class.std::__1::map.1563" = type opaque
%"struct.v8::internal::Script::PositionInfo" = type { i32, i32, i32, i32 }
%"struct.v8::debug::LiveEditResult" = type { i32, i8, %"class.v8::Local.1575", %"class.v8::Local.837", i32, i32 }
%"class.v8::Local.1575" = type { %"class.v8::debug::Script"* }
%"class.v8::Local.837" = type { %"class.v8::String"* }
%"class.v8::internal::SharedFunctionInfo::ScriptIterator" = type <{ %"class.v8::internal::Handle.1576", i32, [4 x i8] }>
%"class.v8::internal::Handle.1576" = type { %"class.v8::internal::HandleBase" }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::debug::WasmScript" = type { i8 }
%"struct.v8::internal::wasm::ModuleWireBytes" = type { %"class.v8::internal::Vector.1577" }
%"class.v8::internal::Vector.1577" = type { i8*, i64 }
%"class.std::__1::__sp_mut" = type { i8* }
%"class.v8::PersistentValueVector" = type { %"class.v8::Isolate"*, %"class.std::__1::vector.92" }
%"class.v8::internal::Script::Iterator" = type { %"class.v8::internal::WeakArrayList::Iterator" }
%"class.v8::internal::WeakArrayList::Iterator" = type { i32, %"class.v8::internal::WeakArrayList" }
%"class.v8::internal::WeakArrayList" = type { %"class.v8::internal::TorqueGeneratedWeakArrayList" }
%"class.v8::internal::TorqueGeneratedWeakArrayList" = type { %"class.v8::internal::HeapObject" }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.v8::UnboundScript" = type { i8 }
%"class.v8::InternalEscapableScope" = type { %"class.v8::EscapableHandleScope" }
%"class.v8::EscapableHandleScope" = type { %"class.v8::HandleScope", i64* }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::CallDepthScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::Local", i8, %"class.v8::internal::InterruptsScope", i64 }
%"struct.v8::internal::Compiler::ScriptDetails" = type <{ i32, i32, %"class.v8::internal::MaybeHandle.1465", %"class.v8::internal::MaybeHandle.1465", %"class.v8::internal::MaybeHandle.1463", i32, [4 x i8] }>
%"class.v8::internal::MaybeHandle.1465" = type { i64* }
%"class.v8::internal::MaybeHandle.1463" = type { i64* }
%"class.v8::Extension" = type <{ i32 (...)**, i8*, i64, %"class.v8::String::ExternalOneByteStringResource"*, i32, [4 x i8], i8**, i8, [7 x i8] }>
%"class.v8::internal::ScriptData" = type opaque
%"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef" = type { %"class.v8::internal::HeapObject" }
%"class.v8::debug::WasmValueObject" = type { i8 }
%"class.v8::internal::Factory::JSFunctionBuilder" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1468", %"class.v8::internal::Handle", %"class.v8::internal::MaybeHandle.1589", %"class.v8::internal::MaybeHandle.1590", i8, [7 x i8] }>
%"class.v8::internal::Handle.1468" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::MaybeHandle.1589" = type { i64* }
%"class.v8::internal::MaybeHandle.1590" = type { i64* }
%"class.v8::StackTrace" = type { i8 }
%"class.v8::debug::GeneratorObject" = type { i8 }
%"class.v8::internal::Handle<v8::internal::JSGeneratorObject>::ObjectRef" = type { %"class.v8::internal::JSGeneratorObject" }
%"class.v8::internal::JSGeneratorObject" = type { %"class.v8::internal::TorqueGeneratedJSGeneratorObject" }
%"class.v8::internal::TorqueGeneratedJSGeneratorObject" = type { %"class.v8::internal::JSObject" }
%"class.v8::Script" = type { i8 }
%"class.v8::debug::QueryObjectPredicate" = type { i32 (...)** }
%"class.v8::PersistentValueVector.1597" = type opaque
%"class.v8::PersistentValueVector.1598" = type { %"class.v8::Isolate"*, %"class.std::__1::vector.92" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i8*, i64, %"class.v8::base::TimeDelta"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8::debug::Coverage::BlockData" = type { %"struct.v8::internal::CoverageBlock"*, %"class.std::__1::shared_ptr.1612" }
%"class.v8::debug::Coverage::FunctionData" = type { %"struct.v8::internal::CoverageFunction"*, %"class.std::__1::shared_ptr.1612" }
%"class.v8::debug::Coverage" = type { %"class.std::__1::shared_ptr.1612" }
%"class.v8::debug::TypeProfile::Entry" = type { %"struct.v8::internal::TypeProfileEntry"*, %"class.std::__1::shared_ptr.1647" }
%"class.std::__1::vector.1662" = type { %"class.std::__1::__vector_base.1663" }
%"class.std::__1::__vector_base.1663" = type { %"class.v8::MaybeLocal.967"*, %"class.v8::MaybeLocal.967"*, %"class.std::__1::__compressed_pair.1664" }
%"class.v8::MaybeLocal.967" = type { %"class.v8::String"* }
%"class.std::__1::__compressed_pair.1664" = type { %"struct.std::__1::__compressed_pair_elem.1665" }
%"struct.std::__1::__compressed_pair_elem.1665" = type { %"class.v8::MaybeLocal.967"* }
%"class.std::__1::vector.1670" = type { %"class.std::__1::__vector_base.1671" }
%"class.std::__1::__vector_base.1671" = type { %"class.v8::debug::TypeProfile::Entry"*, %"class.v8::debug::TypeProfile::Entry"*, %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.v8::debug::TypeProfile::Entry"* }
%"class.v8::debug::TypeProfile" = type { %"class.std::__1::shared_ptr.1647" }
%"class.v8::debug::WeakMap" = type { i8 }
%"class.v8::debug::AccessorPair" = type { i8 }
%"class.v8::Message" = type { i8 }
%"class.v8::debug::PropertyIterator" = type { i32 (...)** }
%"class.v8::internal::DebugPropertyIterator" = type <{ %"class.v8::debug::PropertyIterator", %"class.v8::internal::Isolate"*, %"class.v8::internal::PrototypeIterator", i32, [4 x i8], i64, %"class.v8::internal::Handle.1462", i64, i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.v8::internal::PrototypeIterator" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Object", %"class.v8::internal::Handle.970", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::internal::Handle.1462" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__shared_ptr_pointer" = type { %"class.std::__1::__shared_weak_count", %"class.std::__1::__compressed_pair.1743" }
%"class.std::__1::__compressed_pair.1743" = type { %"struct.std::__1::__compressed_pair_elem.1744" }
%"struct.std::__1::__compressed_pair_elem.1744" = type { %"class.std::__1::__compressed_pair.1635" }
%"class.std::__1::__compressed_pair.1635" = type { %"struct.std::__1::__compressed_pair_elem.1636" }
%"struct.std::__1::__compressed_pair_elem.1636" = type { %"class.v8::internal::Coverage"* }
%"class.std::__1::__shared_ptr_pointer.1756" = type { %"class.std::__1::__shared_weak_count", %"class.std::__1::__compressed_pair.1757" }
%"class.std::__1::__compressed_pair.1757" = type { %"struct.std::__1::__compressed_pair_elem.1758" }
%"struct.std::__1::__compressed_pair_elem.1758" = type { %"class.std::__1::__compressed_pair.1679" }
%"class.std::__1::__compressed_pair.1679" = type { %"struct.std::__1::__compressed_pair_elem.1680" }
%"struct.std::__1::__compressed_pair_elem.1680" = type { %"class.v8::internal::TypeProfile"* }

$_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im = comdat any

$_ZN2v814CallDepthScopeILb0EEC2EPNS_8internal7IsolateENS_5LocalINS_7ContextEEE = comdat any

$_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE = comdat any

$_ZN2v88internal23PostponeInterruptsScopeD0Ev = comdat any

$_ZN2v88internal15InterruptsScopeD2Ev = comdat any

$_ZN2v88internal15InterruptsScopeD0Ev = comdat any

$_ZNSt3__16__sortIRPFbRKN2v88internal13BreakLocationES5_EPS3_EEvT0_SA_T_ = comdat any

$_ZNSt3__17__sort4IRPFbRKN2v88internal13BreakLocationES5_EPS3_EEjT0_SA_SA_SA_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbRKN2v88internal13BreakLocationES5_EPS3_EEvT0_SA_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbRKN2v88internal13BreakLocationES5_EPS3_EEbT0_SA_T_ = comdat any

$_ZN2v834DefaultPersistentValueVectorTraits6AppendEPNSt3__16vectorImNS1_9allocatorImEEEEm = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN2v88internal8CoverageENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN2v88internal8CoverageENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN2v88internal8CoverageENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv = comdat any

$_ZNSt3__16vectorIN2v85debug11TypeProfile5EntryENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN2v88internal11TypeProfileENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN2v88internal11TypeProfileENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN2v88internal11TypeProfileENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv = comdat any

$_ZTVN2v88internal23PostponeInterruptsScopeE = comdat any

$_ZTVN2v88internal15InterruptsScopeE = comdat any

$_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal8CoverageENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE = comdat any

$_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal11TypeProfileENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE = comdat any

@.str.1 = private unnamed_addr constant [21 x i8] c"() { [native code] }\00", align 1
@_ZN2v88internal8FLAG_logE = external local_unnamed_addr global i8, align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"v8::debug::GetPrivateMembers\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"key->is_private_name()\00", align 1
@.str.5 = private unnamed_addr constant [40 x i8] c"isolate->debug()->CheckExecutionState()\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"script->line_ends().IsFixedArray()\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"!start.IsEmpty()\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"line_ends->length()\00", align 1
@.str.9 = private unnamed_addr constant [45 x i8] c"current_line_end_index < line_ends->length()\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"script->IsWasm()\00", align 1
@_ZN2v88Function19kLineOffsetNotFoundE = external local_unnamed_addr constant i32, align 4
@_ZN2v88internal29FLAG_expose_inspector_scriptsE = external local_unnamed_addr global i8, align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"v8::debug::AccessorPair::Cast\00", align 1
@.str.13 = private unnamed_addr constant [39 x i8] c"Value is not a v8::debug::AccessorPair\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"v8::debug::WasmValueObject::Cast\00", align 1
@.str.15 = private unnamed_addr constant [42 x i8] c"Value is not a v8::debug::WasmValueObject\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"builtin == kStringToLowerCase\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"obj->is_suspended()\00", align 1
@.str.18 = private unnamed_addr constant [27 x i8] c"value->IsGeneratorObject()\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"v8::WeakMap::Get\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"v8::WeakMap::Set\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"v8::WeakMap::New\00", align 1
@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1722", align 4
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZTVN2v88internal23PostponeInterruptsScopeE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::InterruptsScope"*)* @_ZN2v88internal15InterruptsScopeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::PostponeInterruptsScope"*)* @_ZN2v88internal23PostponeInterruptsScopeD0Ev to i8*)] }, comdat, align 8
@_ZTVN2v88internal15InterruptsScopeE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::InterruptsScope"*)* @_ZN2v88internal15InterruptsScopeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::InterruptsScope"*)* @_ZN2v88internal15InterruptsScopeD0Ev to i8*)] }, comdat, align 8
@_ZN2v88internal7Isolate12isolate_key_E = external local_unnamed_addr global i32, align 4
@.str.22 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@_ZN2v88internal20DetachableVectorBase16kMinimumCapacityE = external local_unnamed_addr constant i64, align 8
@_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal8CoverageENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__shared_weak_count"*)* @_ZNSt3__119__shared_weak_countD2Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN2v88internal8CoverageENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN2v88internal8CoverageENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN2v88internal8CoverageENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal11TypeProfileENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__shared_weak_count"*)* @_ZNSt3__119__shared_weak_countD2Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer.1756"*)* @_ZNSt3__120__shared_ptr_pointerIPN2v88internal11TypeProfileENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer.1756"*)* @_ZNSt3__120__shared_ptr_pointerIPN2v88internal11TypeProfileENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer.1756"*)* @_ZNSt3__120__shared_ptr_pointerIPN2v88internal11TypeProfileENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@switch.table._ZN2v85debug10GetBuiltinEPNS_7IsolateENS0_7BuiltinE = private unnamed_addr constant [24 x i32] [i32 194, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 194, i32 194, i32 194, i32 194, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192], align 4

@_ZN2v85debug8LocationC1Eii = hidden unnamed_addr alias void (%"class.v8::debug::Location"*, i32, i32), void (%"class.v8::debug::Location"*, i32, i32)* @_ZN2v85debug8LocationC2Eii
@_ZN2v85debug8LocationC1Ev = hidden unnamed_addr alias void (%"class.v8::debug::Location"*), void (%"class.v8::debug::Location"*)* @_ZN2v85debug8LocationC2Ev
@_ZN2v85debug20ConsoleCallArgumentsC1ERKNS_20FunctionCallbackInfoINS_5ValueEEE = hidden unnamed_addr alias void (%"class.v8::debug::ConsoleCallArguments"*, %"class.v8::FunctionCallbackInfo"*), void (%"class.v8::debug::ConsoleCallArguments"*, %"class.v8::FunctionCallbackInfo"*)* @_ZN2v85debug20ConsoleCallArgumentsC2ERKNS_20FunctionCallbackInfoINS_5ValueEEE
@_ZN2v85debug20ConsoleCallArgumentsC1ERKNS_8internal16BuiltinArgumentsE = hidden unnamed_addr alias void (%"class.v8::debug::ConsoleCallArguments"*, %"class.v8::internal::BuiltinArguments"*), void (%"class.v8::debug::ConsoleCallArguments"*, %"class.v8::internal::BuiltinArguments"*)* @_ZN2v85debug20ConsoleCallArgumentsC2ERKNS_8internal16BuiltinArgumentsE
@_ZN2v85debug23PostponeInterruptsScopeC1EPNS_7IsolateE = hidden unnamed_addr alias void (%"class.v8::debug::PostponeInterruptsScope"*, %"class.v8::Isolate"*), void (%"class.v8::debug::PostponeInterruptsScope"*, %"class.v8::Isolate"*)* @_ZN2v85debug23PostponeInterruptsScopeC2EPNS_7IsolateE
@_ZN2v85debug23PostponeInterruptsScopeD1Ev = hidden unnamed_addr alias void (%"class.v8::debug::PostponeInterruptsScope"*), void (%"class.v8::debug::PostponeInterruptsScope"*)* @_ZN2v85debug23PostponeInterruptsScopeD2Ev
@_ZN2v85debug17DisableBreakScopeC1EPNS_7IsolateE = hidden unnamed_addr alias void (%"class.v8::debug::DisableBreakScope"*, %"class.v8::Isolate"*), void (%"class.v8::debug::DisableBreakScope"*, %"class.v8::Isolate"*)* @_ZN2v85debug17DisableBreakScopeC2EPNS_7IsolateE
@_ZN2v85debug17DisableBreakScopeD1Ev = hidden unnamed_addr alias void (%"class.v8::debug::DisableBreakScope"*), void (%"class.v8::debug::DisableBreakScope"*)* @_ZN2v85debug17DisableBreakScopeD2Ev
@_ZN2v85debug8Coverage10ScriptDataC1EmNSt3__110shared_ptrINS_8internal8CoverageEEE = hidden unnamed_addr alias void (%"class.v8::debug::Coverage::ScriptData"*, i64, %"class.v8::internal::Coverage"*, %"class.std::__1::__shared_weak_count"*), void (%"class.v8::debug::Coverage::ScriptData"*, i64, %"class.v8::internal::Coverage"*, %"class.std::__1::__shared_weak_count"*)* @_ZN2v85debug8Coverage10ScriptDataC2EmNSt3__110shared_ptrINS_8internal8CoverageEEE
@_ZN2v85debug11TypeProfile10ScriptDataC1EmNSt3__110shared_ptrINS_8internal11TypeProfileEEE = hidden unnamed_addr alias void (%"class.v8::debug::TypeProfile::ScriptData"*, i64, %"class.v8::internal::TypeProfile"*, %"class.std::__1::__shared_weak_count"*), void (%"class.v8::debug::TypeProfile::ScriptData"*, i64, %"class.v8::internal::TypeProfile"*, %"class.std::__1::__shared_weak_count"*)* @_ZN2v85debug11TypeProfile10ScriptDataC2EmNSt3__110shared_ptrINS_8internal11TypeProfileEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug12SetContextIdENS_5LocalINS_7ContextEEEi(%"class.v8::Context"*, i32) local_unnamed_addr #0 {
  %3 = bitcast %"class.v8::Context"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = shl i32 %1, 1
  %6 = add i64 %4, 259
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 %5, i32* %7 release, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v85debug12GetContextIdENS_5LocalINS_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 {
  %2 = bitcast %"class.v8::Context"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 259
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = ashr i32 %6, 1
  %10 = select i1 %8, i32 %9, i32 0
  ret i32 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v85debug12SetInspectorEPNS_7IsolateEPN12v8_inspector11V8InspectorE(%"class.v8::Isolate"* nocapture, %"class.v8_inspector::V8Inspector"*) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 46320
  %4 = bitcast %"class.v8::Isolate"* %3 to %"class.v8_inspector::V8Inspector"**
  store %"class.v8_inspector::V8Inspector"* %1, %"class.v8_inspector::V8Inspector"** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8_inspector::V8Inspector"* @_ZN2v85debug12GetInspectorEPNS_7IsolateE(%"class.v8::Isolate"* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 46320
  %3 = bitcast %"class.v8::Isolate"* %2 to %"class.v8_inspector::V8Inspector"**
  %4 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %3, align 8
  ret %"class.v8_inspector::V8Inspector"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::String"* @_ZN2v85debug20GetFunctionDebugNameENS_5LocalINS_10StackFrameEEE(%"class.v8::StackFrame"*) local_unnamed_addr #0 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::StackFrameInfo>::ObjectRef", align 8
  %3 = alloca %"class.v8::internal::Handle<v8::internal::StackFrameInfo>::ObjectRef", align 8
  %4 = bitcast %"class.v8::StackFrame"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 19
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = and i64 %5, -262144
  %13 = or i64 %12, 16
  %14 = inttoptr i64 %13 to i64*
  %15 = load i64, i64* %14, align 16
  %16 = add i64 %15, -41416
  %17 = inttoptr i64 %16 to %"class.v8::internal::Isolate"*
  %18 = bitcast %"class.v8::internal::Handle<v8::internal::StackFrameInfo>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::StackFrameInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::StackFrameInfo>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::StackFrameInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::StackFrameInfo>::ObjectRef"* %2, i64 0, i32 0
  %21 = call i64 @_ZNK2v88internal14StackFrameInfo15GetWasmInstanceEv(%"class.v8::internal::StackFrameInfo"* nonnull %20) #12
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 4
  %23 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %22, align 8
  %24 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %11
  %26 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %23, i64 %21) #12
  br label %40

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 1
  %31 = load i64*, i64** %30, align 8
  %32 = icmp eq i64* %29, %31
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %17) #12
  br label %35

35:                                               ; preds = %33, %27
  %36 = phi i64* [ %34, %33 ], [ %29, %27 ]
  %37 = ptrtoint i64* %36 to i64
  %38 = add i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  store i64* %39, i64** %28, align 8
  store i64 %21, i64* %36, align 8
  br label %40

40:                                               ; preds = %25, %35
  %41 = phi i64* [ %26, %25 ], [ %36, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %42 = bitcast %"class.v8::internal::Handle<v8::internal::StackFrameInfo>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #12
  %43 = load i64, i64* %4, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::StackFrameInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::StackFrameInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::StackFrameInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::StackFrameInfo>::ObjectRef"* %3, i64 0, i32 0
  %46 = call i32 @_ZNK2v88internal14StackFrameInfo20GetWasmFunctionIndexEv(%"class.v8::internal::StackFrameInfo"* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #12
  %47 = call i64* @_ZN2v88internal24GetWasmFunctionDebugNameEPNS0_7IsolateENS0_6HandleINS0_18WasmInstanceObjectEEEj(%"class.v8::internal::Isolate"* %17, i64* %41, i32 %46) #12
  %48 = bitcast i64* %47 to %"class.v8::String"*
  br label %51

49:                                               ; preds = %1
  %50 = tail call %"class.v8::String"* @_ZNK2v810StackFrame15GetFunctionNameEv(%"class.v8::StackFrame"* %0) #12
  br label %51

51:                                               ; preds = %49, %40
  %52 = phi %"class.v8::String"* [ %48, %40 ], [ %50, %49 ]
  ret %"class.v8::String"* %52
}

declare i64 @_ZNK2v88internal14StackFrameInfo15GetWasmInstanceEv(%"class.v8::internal::StackFrameInfo"*) local_unnamed_addr #4

declare i32 @_ZNK2v88internal14StackFrameInfo20GetWasmFunctionIndexEv(%"class.v8::internal::StackFrameInfo"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal24GetWasmFunctionDebugNameEPNS0_7IsolateENS0_6HandleINS0_18WasmInstanceObjectEEEj(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #4

declare %"class.v8::String"* @_ZNK2v810StackFrame15GetFunctionNameEv(%"class.v8::StackFrame"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::String"* @_ZN2v85debug22GetFunctionDescriptionENS_5LocalINS_8FunctionEEE(%"class.v8::Function"*) local_unnamed_addr #0 {
  %2 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %3 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::WasmInstanceObject>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %6 = bitcast %"class.v8::Function"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp eq i16 %16, 1058
  br i1 %17, label %18, label %21

18:                                               ; preds = %1
  %19 = tail call i64* @_ZN2v88internal15JSBoundFunction8ToStringENS0_6HandleIS1_EE(i64* %6) #12
  %20 = bitcast i64* %19 to %"class.v8::String"*
  br label %238

21:                                               ; preds = %1
  %22 = load atomic i32, i32* %10 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %8, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = add i16 %27, -1059
  %29 = icmp ult i16 %28, 15
  br i1 %29, label %30, label %229

30:                                               ; preds = %21
  %31 = add i64 %7, 11
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %8, %34
  %36 = add i64 %35, 3
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 acquire, align 4
  %39 = zext i32 %38 to i64
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %226, label %42

42:                                               ; preds = %30
  %43 = or i64 %8, %39
  %44 = add i64 %43, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %8, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = icmp eq i16 %51, 73
  br i1 %52, label %53, label %226

53:                                               ; preds = %42
  %54 = load i64, i64* %6, align 8
  %55 = and i64 %54, -262144
  %56 = or i64 %55, 16
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 16
  %59 = add i64 %58, -41416
  %60 = inttoptr i64 %59 to %"class.v8::internal::Isolate"*
  %61 = bitcast %"class.v8::internal::SharedFunctionInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #12
  %62 = add i64 %54, 11
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i64 %54, -4294967296
  %66 = zext i32 %64 to i64
  %67 = or i64 %65, %66
  %68 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %67, i64* %68, align 8
  %69 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %2) #12
  %70 = add i64 %69, 23
  %71 = inttoptr i64 %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = ashr i32 %72, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #12
  %74 = bitcast %"class.v8::internal::SharedFunctionInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #12
  %75 = load i64, i64* %6, align 8
  %76 = add i64 %75, 11
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i64 %75, -4294967296
  %80 = zext i32 %78 to i64
  %81 = or i64 %79, %80
  %82 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %81, i64* %82, align 8
  %83 = call i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %3) #12
  %84 = and i64 %83, -4294967296
  %85 = add i64 %83, 19
  %86 = inttoptr i64 %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %84, %88
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %60, i64 0, i32 31, i32 4
  %91 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %90, align 8
  %92 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %53
  %94 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %91, i64 %89) #12
  br label %108

95:                                               ; preds = %53
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %60, i64 0, i32 31, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %60, i64 0, i32 31, i32 1
  %99 = load i64*, i64** %98, align 8
  %100 = icmp eq i64* %97, %99
  br i1 %100, label %101, label %103

101:                                              ; preds = %95
  %102 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %60) #12
  br label %103

103:                                              ; preds = %101, %95
  %104 = phi i64* [ %102, %101 ], [ %97, %95 ]
  %105 = ptrtoint i64* %104 to i64
  %106 = add i64 %105, 8
  %107 = inttoptr i64 %106 to i64*
  store i64* %107, i64** %96, align 8
  store i64 %89, i64* %104, align 8
  br label %108

108:                                              ; preds = %93, %103
  %109 = phi i64* [ %94, %93 ], [ %104, %103 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #12
  %110 = bitcast %"class.v8::internal::Handle<v8::internal::WasmInstanceObject>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #12
  %111 = load i64, i64* %109, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::WasmInstanceObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::WasmInstanceObject>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::WasmInstanceObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::WasmInstanceObject>::ObjectRef"* %4, i64 0, i32 0
  %114 = call %"struct.v8::internal::wasm::WasmModule"* @_ZN2v88internal18WasmInstanceObject6moduleEv(%"class.v8::internal::WasmInstanceObject"* nonnull %113) #12
  %115 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %114, i64 0, i32 33
  %116 = load i8, i8* %115, align 8
  %117 = icmp eq i8 %116, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #12
  br i1 %117, label %118, label %226

118:                                              ; preds = %108
  %119 = call i64* @_ZN2v88internal24GetWasmFunctionDebugNameEPNS0_7IsolateENS0_6HandleINS0_18WasmInstanceObjectEEEj(%"class.v8::internal::Isolate"* %60, i64* %109, i32 %73) #12
  %120 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %120) #12
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5, %"class.v8::internal::Isolate"* %60) #12
  %121 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 6, i32 0, i32 0
  %125 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 4
  %126 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %5, i64 0, i32 3
  %127 = load i64*, i64** %124, align 8
  %128 = load i64, i64* %127, align 8
  %129 = load i32, i32* %125, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %125, align 4
  br i1 %123, label %140, label %131

131:                                              ; preds = %118
  %132 = shl nsw i32 %129, 1
  %133 = sext i32 %132 to i64
  %134 = add i64 %128, 11
  %135 = add i64 %134, %133
  %136 = inttoptr i64 %135 to i16*
  store i16 102, i16* %136, align 2
  %137 = load i32, i32* %125, align 4
  %138 = load i32, i32* %126, align 8
  %139 = icmp eq i32 %137, %138
  br i1 %139, label %162, label %164

140:                                              ; preds = %118
  %141 = sext i32 %129 to i64
  %142 = add i64 %128, 11
  %143 = add i64 %142, %141
  %144 = inttoptr i64 %143 to i8*
  store i8 102, i8* %144, align 1
  %145 = load i32, i32* %125, align 4
  %146 = load i32, i32* %126, align 8
  %147 = icmp eq i32 %145, %146
  br i1 %147, label %148, label %150

148:                                              ; preds = %140
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %149 = load i32, i32* %125, align 4
  br label %150

150:                                              ; preds = %148, %140
  %151 = phi i32 [ %149, %148 ], [ %145, %140 ]
  %152 = load i64*, i64** %124, align 8
  %153 = load i64, i64* %152, align 8
  %154 = add nsw i32 %151, 1
  store i32 %154, i32* %125, align 4
  %155 = sext i32 %151 to i64
  %156 = add i64 %153, 11
  %157 = add i64 %156, %155
  %158 = inttoptr i64 %157 to i8*
  store i8 117, i8* %158, align 1
  %159 = load i32, i32* %125, align 4
  %160 = load i32, i32* %126, align 8
  %161 = icmp eq i32 %159, %160
  br i1 %161, label %240, label %242

162:                                              ; preds = %131
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %163 = load i32, i32* %125, align 4
  br label %164

164:                                              ; preds = %162, %131
  %165 = phi i32 [ %163, %162 ], [ %137, %131 ]
  %166 = load i64*, i64** %124, align 8
  %167 = load i64, i64* %166, align 8
  %168 = add nsw i32 %165, 1
  store i32 %168, i32* %125, align 4
  %169 = shl nsw i32 %165, 1
  %170 = sext i32 %169 to i64
  %171 = add i64 %167, 11
  %172 = add i64 %171, %170
  %173 = inttoptr i64 %172 to i16*
  store i16 117, i16* %173, align 2
  %174 = load i32, i32* %125, align 4
  %175 = load i32, i32* %126, align 8
  %176 = icmp eq i32 %174, %175
  br i1 %176, label %339, label %341

177:                                              ; preds = %431, %444, %326, %338
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5, i64* %119) #12
  %178 = load i32, i32* %121, align 8
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %199

180:                                              ; preds = %177, %196
  %181 = phi i8 [ %197, %196 ], [ 40, %177 ]
  %182 = phi i8* [ %183, %196 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), %177 ]
  %183 = getelementptr inbounds i8, i8* %182, i64 1
  %184 = load i64*, i64** %124, align 8
  %185 = load i64, i64* %184, align 8
  %186 = load i32, i32* %125, align 4
  %187 = add nsw i32 %186, 1
  store i32 %187, i32* %125, align 4
  %188 = sext i32 %186 to i64
  %189 = add i64 %185, 11
  %190 = add i64 %189, %188
  %191 = inttoptr i64 %190 to i8*
  store i8 %181, i8* %191, align 1
  %192 = load i32, i32* %125, align 4
  %193 = load i32, i32* %126, align 8
  %194 = icmp eq i32 %192, %193
  br i1 %194, label %195, label %196

195:                                              ; preds = %180
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  br label %196

196:                                              ; preds = %195, %180
  %197 = load i8, i8* %183, align 1
  %198 = icmp eq i8* %183, getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 20)
  br i1 %198, label %220, label %180

199:                                              ; preds = %177, %217
  %200 = phi i8 [ %218, %217 ], [ 40, %177 ]
  %201 = phi i8* [ %202, %217 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), %177 ]
  %202 = getelementptr inbounds i8, i8* %201, i64 1
  %203 = load i64*, i64** %124, align 8
  %204 = load i64, i64* %203, align 8
  %205 = load i32, i32* %125, align 4
  %206 = add nsw i32 %205, 1
  store i32 %206, i32* %125, align 4
  %207 = zext i8 %200 to i16
  %208 = shl nsw i32 %205, 1
  %209 = sext i32 %208 to i64
  %210 = add i64 %204, 11
  %211 = add i64 %210, %209
  %212 = inttoptr i64 %211 to i16*
  store i16 %207, i16* %212, align 2
  %213 = load i32, i32* %125, align 4
  %214 = load i32, i32* %126, align 8
  %215 = icmp eq i32 %213, %214
  br i1 %215, label %216, label %217

216:                                              ; preds = %199
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  br label %217

217:                                              ; preds = %216, %199
  %218 = load i8, i8* %202, align 1
  %219 = icmp eq i8* %202, getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 20)
  br i1 %219, label %220, label %199

220:                                              ; preds = %217, %196
  %221 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %222 = icmp eq i64* %221, null
  br i1 %222, label %223, label %224, !prof !2

223:                                              ; preds = %220
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0)) #16
  unreachable

224:                                              ; preds = %220
  %225 = bitcast i64* %221 to %"class.v8::String"*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %120) #12
  br label %238

226:                                              ; preds = %108, %30, %42
  %227 = call i64* @_ZN2v88internal10JSFunction8ToStringENS0_6HandleIS1_EE(i64* %6) #12
  %228 = bitcast i64* %227 to %"class.v8::String"*
  br label %238

229:                                              ; preds = %21
  %230 = and i64 %7, -262144
  %231 = or i64 %230, 16
  %232 = inttoptr i64 %231 to i64*
  %233 = load i64, i64* %232, align 16
  %234 = add i64 %233, -41416
  %235 = inttoptr i64 %234 to %"class.v8::internal::Factory"*
  %236 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %235, i64 2792
  %237 = bitcast %"class.v8::internal::Factory"* %236 to %"class.v8::String"*
  br label %238

238:                                              ; preds = %226, %224, %229, %18
  %239 = phi %"class.v8::String"* [ %20, %18 ], [ %237, %229 ], [ %228, %226 ], [ %225, %224 ]
  ret %"class.v8::String"* %239

240:                                              ; preds = %150
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %241 = load i32, i32* %125, align 4
  br label %242

242:                                              ; preds = %240, %150
  %243 = phi i32 [ %241, %240 ], [ %159, %150 ]
  %244 = load i64*, i64** %124, align 8
  %245 = load i64, i64* %244, align 8
  %246 = add nsw i32 %243, 1
  store i32 %246, i32* %125, align 4
  %247 = sext i32 %243 to i64
  %248 = add i64 %245, 11
  %249 = add i64 %248, %247
  %250 = inttoptr i64 %249 to i8*
  store i8 110, i8* %250, align 1
  %251 = load i32, i32* %125, align 4
  %252 = load i32, i32* %126, align 8
  %253 = icmp eq i32 %251, %252
  br i1 %253, label %254, label %256

254:                                              ; preds = %242
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %255 = load i32, i32* %125, align 4
  br label %256

256:                                              ; preds = %254, %242
  %257 = phi i32 [ %255, %254 ], [ %251, %242 ]
  %258 = load i64*, i64** %124, align 8
  %259 = load i64, i64* %258, align 8
  %260 = add nsw i32 %257, 1
  store i32 %260, i32* %125, align 4
  %261 = sext i32 %257 to i64
  %262 = add i64 %259, 11
  %263 = add i64 %262, %261
  %264 = inttoptr i64 %263 to i8*
  store i8 99, i8* %264, align 1
  %265 = load i32, i32* %125, align 4
  %266 = load i32, i32* %126, align 8
  %267 = icmp eq i32 %265, %266
  br i1 %267, label %268, label %270

268:                                              ; preds = %256
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %269 = load i32, i32* %125, align 4
  br label %270

270:                                              ; preds = %268, %256
  %271 = phi i32 [ %269, %268 ], [ %265, %256 ]
  %272 = load i64*, i64** %124, align 8
  %273 = load i64, i64* %272, align 8
  %274 = add nsw i32 %271, 1
  store i32 %274, i32* %125, align 4
  %275 = sext i32 %271 to i64
  %276 = add i64 %273, 11
  %277 = add i64 %276, %275
  %278 = inttoptr i64 %277 to i8*
  store i8 116, i8* %278, align 1
  %279 = load i32, i32* %125, align 4
  %280 = load i32, i32* %126, align 8
  %281 = icmp eq i32 %279, %280
  br i1 %281, label %282, label %284

282:                                              ; preds = %270
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %283 = load i32, i32* %125, align 4
  br label %284

284:                                              ; preds = %282, %270
  %285 = phi i32 [ %283, %282 ], [ %279, %270 ]
  %286 = load i64*, i64** %124, align 8
  %287 = load i64, i64* %286, align 8
  %288 = add nsw i32 %285, 1
  store i32 %288, i32* %125, align 4
  %289 = sext i32 %285 to i64
  %290 = add i64 %287, 11
  %291 = add i64 %290, %289
  %292 = inttoptr i64 %291 to i8*
  store i8 105, i8* %292, align 1
  %293 = load i32, i32* %125, align 4
  %294 = load i32, i32* %126, align 8
  %295 = icmp eq i32 %293, %294
  br i1 %295, label %296, label %298

296:                                              ; preds = %284
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %297 = load i32, i32* %125, align 4
  br label %298

298:                                              ; preds = %296, %284
  %299 = phi i32 [ %297, %296 ], [ %293, %284 ]
  %300 = load i64*, i64** %124, align 8
  %301 = load i64, i64* %300, align 8
  %302 = add nsw i32 %299, 1
  store i32 %302, i32* %125, align 4
  %303 = sext i32 %299 to i64
  %304 = add i64 %301, 11
  %305 = add i64 %304, %303
  %306 = inttoptr i64 %305 to i8*
  store i8 111, i8* %306, align 1
  %307 = load i32, i32* %125, align 4
  %308 = load i32, i32* %126, align 8
  %309 = icmp eq i32 %307, %308
  br i1 %309, label %310, label %312

310:                                              ; preds = %298
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %311 = load i32, i32* %125, align 4
  br label %312

312:                                              ; preds = %310, %298
  %313 = phi i32 [ %311, %310 ], [ %307, %298 ]
  %314 = load i64*, i64** %124, align 8
  %315 = load i64, i64* %314, align 8
  %316 = add nsw i32 %313, 1
  store i32 %316, i32* %125, align 4
  %317 = sext i32 %313 to i64
  %318 = add i64 %315, 11
  %319 = add i64 %318, %317
  %320 = inttoptr i64 %319 to i8*
  store i8 110, i8* %320, align 1
  %321 = load i32, i32* %125, align 4
  %322 = load i32, i32* %126, align 8
  %323 = icmp eq i32 %321, %322
  br i1 %323, label %324, label %326

324:                                              ; preds = %312
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %325 = load i32, i32* %125, align 4
  br label %326

326:                                              ; preds = %324, %312
  %327 = phi i32 [ %325, %324 ], [ %321, %312 ]
  %328 = load i64*, i64** %124, align 8
  %329 = load i64, i64* %328, align 8
  %330 = add nsw i32 %327, 1
  store i32 %330, i32* %125, align 4
  %331 = sext i32 %327 to i64
  %332 = add i64 %329, 11
  %333 = add i64 %332, %331
  %334 = inttoptr i64 %333 to i8*
  store i8 32, i8* %334, align 1
  %335 = load i32, i32* %125, align 4
  %336 = load i32, i32* %126, align 8
  %337 = icmp eq i32 %335, %336
  br i1 %337, label %338, label %177

338:                                              ; preds = %326
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  br label %177

339:                                              ; preds = %164
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %340 = load i32, i32* %125, align 4
  br label %341

341:                                              ; preds = %339, %164
  %342 = phi i32 [ %340, %339 ], [ %174, %164 ]
  %343 = load i64*, i64** %124, align 8
  %344 = load i64, i64* %343, align 8
  %345 = add nsw i32 %342, 1
  store i32 %345, i32* %125, align 4
  %346 = shl nsw i32 %342, 1
  %347 = sext i32 %346 to i64
  %348 = add i64 %344, 11
  %349 = add i64 %348, %347
  %350 = inttoptr i64 %349 to i16*
  store i16 110, i16* %350, align 2
  %351 = load i32, i32* %125, align 4
  %352 = load i32, i32* %126, align 8
  %353 = icmp eq i32 %351, %352
  br i1 %353, label %354, label %356

354:                                              ; preds = %341
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %355 = load i32, i32* %125, align 4
  br label %356

356:                                              ; preds = %354, %341
  %357 = phi i32 [ %355, %354 ], [ %351, %341 ]
  %358 = load i64*, i64** %124, align 8
  %359 = load i64, i64* %358, align 8
  %360 = add nsw i32 %357, 1
  store i32 %360, i32* %125, align 4
  %361 = shl nsw i32 %357, 1
  %362 = sext i32 %361 to i64
  %363 = add i64 %359, 11
  %364 = add i64 %363, %362
  %365 = inttoptr i64 %364 to i16*
  store i16 99, i16* %365, align 2
  %366 = load i32, i32* %125, align 4
  %367 = load i32, i32* %126, align 8
  %368 = icmp eq i32 %366, %367
  br i1 %368, label %369, label %371

369:                                              ; preds = %356
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %370 = load i32, i32* %125, align 4
  br label %371

371:                                              ; preds = %369, %356
  %372 = phi i32 [ %370, %369 ], [ %366, %356 ]
  %373 = load i64*, i64** %124, align 8
  %374 = load i64, i64* %373, align 8
  %375 = add nsw i32 %372, 1
  store i32 %375, i32* %125, align 4
  %376 = shl nsw i32 %372, 1
  %377 = sext i32 %376 to i64
  %378 = add i64 %374, 11
  %379 = add i64 %378, %377
  %380 = inttoptr i64 %379 to i16*
  store i16 116, i16* %380, align 2
  %381 = load i32, i32* %125, align 4
  %382 = load i32, i32* %126, align 8
  %383 = icmp eq i32 %381, %382
  br i1 %383, label %384, label %386

384:                                              ; preds = %371
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %385 = load i32, i32* %125, align 4
  br label %386

386:                                              ; preds = %384, %371
  %387 = phi i32 [ %385, %384 ], [ %381, %371 ]
  %388 = load i64*, i64** %124, align 8
  %389 = load i64, i64* %388, align 8
  %390 = add nsw i32 %387, 1
  store i32 %390, i32* %125, align 4
  %391 = shl nsw i32 %387, 1
  %392 = sext i32 %391 to i64
  %393 = add i64 %389, 11
  %394 = add i64 %393, %392
  %395 = inttoptr i64 %394 to i16*
  store i16 105, i16* %395, align 2
  %396 = load i32, i32* %125, align 4
  %397 = load i32, i32* %126, align 8
  %398 = icmp eq i32 %396, %397
  br i1 %398, label %399, label %401

399:                                              ; preds = %386
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %400 = load i32, i32* %125, align 4
  br label %401

401:                                              ; preds = %399, %386
  %402 = phi i32 [ %400, %399 ], [ %396, %386 ]
  %403 = load i64*, i64** %124, align 8
  %404 = load i64, i64* %403, align 8
  %405 = add nsw i32 %402, 1
  store i32 %405, i32* %125, align 4
  %406 = shl nsw i32 %402, 1
  %407 = sext i32 %406 to i64
  %408 = add i64 %404, 11
  %409 = add i64 %408, %407
  %410 = inttoptr i64 %409 to i16*
  store i16 111, i16* %410, align 2
  %411 = load i32, i32* %125, align 4
  %412 = load i32, i32* %126, align 8
  %413 = icmp eq i32 %411, %412
  br i1 %413, label %414, label %416

414:                                              ; preds = %401
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %415 = load i32, i32* %125, align 4
  br label %416

416:                                              ; preds = %414, %401
  %417 = phi i32 [ %415, %414 ], [ %411, %401 ]
  %418 = load i64*, i64** %124, align 8
  %419 = load i64, i64* %418, align 8
  %420 = add nsw i32 %417, 1
  store i32 %420, i32* %125, align 4
  %421 = shl nsw i32 %417, 1
  %422 = sext i32 %421 to i64
  %423 = add i64 %419, 11
  %424 = add i64 %423, %422
  %425 = inttoptr i64 %424 to i16*
  store i16 110, i16* %425, align 2
  %426 = load i32, i32* %125, align 4
  %427 = load i32, i32* %126, align 8
  %428 = icmp eq i32 %426, %427
  br i1 %428, label %429, label %431

429:                                              ; preds = %416
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  %430 = load i32, i32* %125, align 4
  br label %431

431:                                              ; preds = %429, %416
  %432 = phi i32 [ %430, %429 ], [ %426, %416 ]
  %433 = load i64*, i64** %124, align 8
  %434 = load i64, i64* %433, align 8
  %435 = add nsw i32 %432, 1
  store i32 %435, i32* %125, align 4
  %436 = shl nsw i32 %432, 1
  %437 = sext i32 %436 to i64
  %438 = add i64 %434, 11
  %439 = add i64 %438, %437
  %440 = inttoptr i64 %439 to i16*
  store i16 32, i16* %440, align 2
  %441 = load i32, i32* %125, align 4
  %442 = load i32, i32* %126, align 8
  %443 = icmp eq i32 %441, %442
  br i1 %443, label %444, label %177

444:                                              ; preds = %431
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %5) #12
  br label %177
}

declare i64* @_ZN2v88internal15JSBoundFunction8ToStringENS0_6HandleIS1_EE(i64*) local_unnamed_addr #4

declare i64 @_ZNK2v88internal18SharedFunctionInfo27wasm_exported_function_dataEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #4

declare %"struct.v8::internal::wasm::WasmModule"* @_ZN2v88internal18WasmInstanceObject6moduleEv(%"class.v8::internal::WasmInstanceObject"*) local_unnamed_addr #4

declare void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"*, %"class.v8::internal::Isolate"*) unnamed_addr #4

declare void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"*, i64*) local_unnamed_addr #4

declare i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal10JSFunction8ToStringENS0_6HandleIS1_EE(i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug26SetBreakOnNextFunctionCallEPNS_7IsolateE(%"class.v8::Isolate"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45960
  %3 = bitcast %"class.v8::Isolate"* %2 to %"class.v8::internal::Debug"**
  %4 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %3, align 8
  tail call void @_ZN2v88internal5Debug26SetBreakOnNextFunctionCallEv(%"class.v8::internal::Debug"* %4) #12
  ret void
}

declare void @_ZN2v88internal5Debug26SetBreakOnNextFunctionCallEv(%"class.v8::internal::Debug"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug28ClearBreakOnNextFunctionCallEPNS_7IsolateE(%"class.v8::Isolate"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45960
  %3 = bitcast %"class.v8::Isolate"* %2 to %"class.v8::internal::Debug"**
  %4 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %3, align 8
  tail call void @_ZN2v88internal5Debug28ClearBreakOnNextFunctionCallEv(%"class.v8::internal::Debug"* %4) #12
  ret void
}

declare void @_ZN2v88internal5Debug28ClearBreakOnNextFunctionCallEv(%"class.v8::internal::Debug"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Array"* @_ZN2v85debug21GetInternalPropertiesEPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #0 {
  %3 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %4 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %5 = bitcast %"class.v8::Isolate"* %4 to i32*
  %6 = load i32, i32* %5, align 8
  store i32 5, i32* %5, align 8
  %7 = bitcast %"class.v8::Value"* %1 to i64*
  %8 = tail call i64* @_ZN2v88internal7Runtime21GetInternalPropertiesEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %3, i64* %7) #12
  %9 = bitcast i64* %8 to %"class.v8::Array"*
  store i32 %6, i32* %5, align 8
  ret %"class.v8::Array"* %9
}

declare i64* @_ZN2v88internal7Runtime21GetInternalPropertiesEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v85debug17GetPrivateMembersENS_5LocalINS_7ContextEEENS1_INS_6ObjectEEEPNSt3__16vectorINS1_INS_5ValueEEENS6_9allocatorIS9_EEEESD_(%"class.v8::Context"*, %"class.v8::Object"*, %"class.std::__1::vector.1455"*, %"class.std::__1::vector.1455"*) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %12 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #12
  %13 = bitcast %"class.v8::Isolate"* %12 to %"class.v8::internal::Isolate"*
  %14 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 40, i1 false) #12
  %15 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1722", %"struct.std::__1::atomic.1722"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %24, label %17, !prof !3

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  %20 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45176
  %21 = bitcast %"class.v8::Isolate"* %20 to %"class.v8::internal::Counters"**
  %22 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %22, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %23, %"class.v8::internal::RuntimeCallStats"** %18, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %23, %"class.v8::internal::RuntimeCallTimer"* %19, i32 1029) #12
  br label %24

24:                                               ; preds = %4, %17
  %25 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !4
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45512
  %29 = bitcast %"class.v8::Isolate"* %28 to %"class.v8::internal::Logger"**
  %30 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %29, align 8
  call void @_ZN2v88internal6Logger12ApiEntryCallEPKc(%"class.v8::internal::Logger"* %30, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0)) #12
  br label %31

31:                                               ; preds = %24, %27
  %32 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 13992
  %33 = bitcast %"class.v8::Isolate"* %32 to i32*
  %34 = load i32, i32* %33, align 8
  store i32 5, i32* %33, align 8
  %35 = bitcast %"class.v8::Object"* %1 to i64*
  %36 = call i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_6HandleINS0_10JSReceiverEEENS0_17KeyCollectionModeENS0_14PropertyFilterENS0_17GetKeysConversionEbb(i64* %35, i32 0, i32 64, i32 0, i1 zeroext false, i1 zeroext false) #12
  %37 = icmp eq i64* %36, null
  br i1 %37, label %965, label %38

38:                                               ; preds = %31
  %39 = load i64, i64* %36, align 8
  %40 = add i64 %39, 3
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = icmp sgt i32 %42, 1
  br i1 %43, label %44, label %224

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45608
  %46 = bitcast %"class.v8::Isolate"* %45 to %"class.v8::internal::CanonicalHandleScope"**
  %47 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45584
  %48 = bitcast %"class.v8::Isolate"* %47 to i64**
  %49 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45592
  %50 = bitcast %"class.v8::Isolate"* %49 to i64**
  %51 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  %52 = ptrtoint %"class.v8::Object"* %1 to i64
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 0
  %54 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 56
  %55 = bitcast %"class.v8::Isolate"* %54 to i64*
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  %57 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 2
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 3
  %59 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 4, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 5
  %61 = bitcast %"class.v8::internal::Isolate"** %60 to %"class.v8::Isolate"**
  %62 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 6, i32 0, i32 0
  %63 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 7, i32 0, i32 0
  %64 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 8, i32 0, i32 0
  %65 = bitcast i64** %64 to %"class.v8::Object"**
  %66 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 9, i32 0, i32 0
  %67 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 10
  %68 = bitcast %"class.v8::internal::Handle.1452"* %67 to i64*
  %69 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 11
  %70 = bitcast i64* %69 to i8*
  %71 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45008
  %72 = bitcast %"class.v8::Isolate"* %71 to %"class.v8::internal::StringTable"**
  %73 = bitcast %"class.v8::internal::Isolate"** %60 to %"class.v8::internal::Factory"**
  %74 = bitcast %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %8 to i8*
  %75 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %8, i64 0, i32 0
  br label %77

77:                                               ; preds = %44, %213
  %78 = phi i64 [ 0, %44 ], [ %216, %213 ]
  %79 = phi i64 [ %39, %44 ], [ %217, %213 ]
  %80 = phi i32 [ 0, %44 ], [ %215, %213 ]
  %81 = and i64 %79, -4294967296
  %82 = trunc i64 %78 to i32
  %83 = shl i32 %82, 2
  %84 = sext i32 %83 to i64
  %85 = add nsw i64 %84, 7
  %86 = add i64 %85, %79
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %81, %89
  %91 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %46, align 8
  %92 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %91, i64 %90) #12
  %95 = load i64, i64* %94, align 8
  br label %107

96:                                               ; preds = %77
  %97 = load i64*, i64** %48, align 8
  %98 = load i64*, i64** %50, align 8
  %99 = icmp eq i64* %97, %98
  br i1 %99, label %100, label %102

100:                                              ; preds = %96
  %101 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %102

102:                                              ; preds = %100, %96
  %103 = phi i64* [ %101, %100 ], [ %97, %96 ]
  %104 = ptrtoint i64* %103 to i64
  %105 = add i64 %104, 8
  %106 = inttoptr i64 %105 to i64*
  store i64* %106, i64** %48, align 8
  store i64 %90, i64* %103, align 8
  br label %107

107:                                              ; preds = %93, %102
  %108 = phi i64 [ %95, %93 ], [ %90, %102 ]
  %109 = phi i64* [ %94, %93 ], [ %103, %102 ]
  %110 = add i64 %108, 7
  %111 = inttoptr i64 %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = and i32 %112, 32
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %213, label %115

115:                                              ; preds = %107
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %51) #12
  %116 = icmp eq i64* %109, null
  br i1 %116, label %117, label %121

117:                                              ; preds = %115
  %118 = load i64, i64* null, align 536870912
  %119 = add i64 %118, -1
  %120 = inttoptr i64 %119 to i32*
  br label %137

121:                                              ; preds = %115
  %122 = load i64, i64* %55, align 8
  %123 = add i64 %108, -1
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i64 %122, 4294967295
  %127 = icmp eq i64 %126, 0
  call void @llvm.assume(i1 %127) #12
  %128 = zext i32 %125 to i64
  %129 = or i64 %122, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load atomic i16, i16* %131 monotonic, align 2
  %133 = icmp ne i16 %132, 64
  %134 = and i32 %112, 1
  %135 = icmp eq i32 %134, 0
  %136 = or i1 %133, %135
  br i1 %136, label %137, label %140

137:                                              ; preds = %121, %117
  %138 = phi i32* [ %120, %117 ], [ %124, %121 ]
  %139 = phi i64 [ %118, %117 ], [ %108, %121 ]
  br label %140

140:                                              ; preds = %121, %137
  %141 = phi i32* [ %138, %137 ], [ %124, %121 ]
  %142 = phi i64 [ %139, %137 ], [ %108, %121 ]
  %143 = phi i32 [ 3, %137 ], [ 0, %121 ]
  store i32 %143, i32* %53, align 8
  store i32 4, i32* %56, align 4
  store i8 0, i8* %57, align 8
  store i32 0, i32* %58, align 4
  store i32 0, i32* %59, align 8
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %61, align 8
  store i64* %109, i64** %62, align 8
  store i64* null, i64** %63, align 8
  store %"class.v8::Object"* %1, %"class.v8::Object"** %65, align 8
  store i64* null, i64** %66, align 8
  store i64 %52, i64* %68, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 -1, i64 16, i1 false) #12
  %144 = and i64 %142, -4294967296
  %145 = load atomic i32, i32* %141 monotonic, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %144, %146
  %148 = add i64 %147, 7
  %149 = inttoptr i64 %148 to i16*
  %150 = load atomic i16, i16* %149 monotonic, align 2
  %151 = and i16 %150, -32
  %152 = icmp eq i16 %151, 32
  br i1 %152, label %153, label %156

153:                                              ; preds = %140
  %154 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %72, align 8
  %155 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %154, %"class.v8::internal::Isolate"* %13, i64* %109) #12
  br label %156

156:                                              ; preds = %153, %140
  %157 = phi i64* [ %155, %153 ], [ %109, %140 ]
  store i64* %157, i64** %62, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %5) #12
  %158 = load i32, i32* %56, align 4
  %159 = icmp eq i32 %158, 4
  br i1 %159, label %160, label %164

160:                                              ; preds = %156
  %161 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %73, align 8
  %162 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %161, i64 160
  %163 = bitcast %"class.v8::internal::Factory"* %162 to i64*
  br label %166

164:                                              ; preds = %156
  %165 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #12
  br label %166

166:                                              ; preds = %160, %164
  %167 = phi i64* [ %165, %164 ], [ %163, %160 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %51) #12
  %168 = icmp eq i64* %167, null
  br i1 %168, label %965, label %169

169:                                              ; preds = %166
  %170 = load i64, i64* %167, align 8
  %171 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %46, align 8
  %172 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %171, null
  br i1 %172, label %176, label %173

173:                                              ; preds = %169
  %174 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %171, i64 %170) #12
  %175 = load i64, i64* %174, align 8
  br label %187

176:                                              ; preds = %169
  %177 = load i64*, i64** %48, align 8
  %178 = load i64*, i64** %50, align 8
  %179 = icmp eq i64* %177, %178
  br i1 %179, label %180, label %182

180:                                              ; preds = %176
  %181 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %182

182:                                              ; preds = %180, %176
  %183 = phi i64* [ %181, %180 ], [ %177, %176 ]
  %184 = ptrtoint i64* %183 to i64
  %185 = add i64 %184, 8
  %186 = inttoptr i64 %185 to i64*
  store i64* %186, i64** %48, align 8
  store i64 %170, i64* %183, align 8
  br label %187

187:                                              ; preds = %173, %182
  %188 = phi i64 [ %175, %173 ], [ %170, %182 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #12
  store i64 %188, i64* %75, align 8
  %189 = call i64 @_ZN2v88internal7Context10scope_infoEv(%"class.v8::internal::Context"* nonnull %76) #12
  %190 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %46, align 8
  %191 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %190, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %187
  %193 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %190, i64 %189) #12
  br label %205

194:                                              ; preds = %187
  %195 = load i64*, i64** %48, align 8
  %196 = load i64*, i64** %50, align 8
  %197 = icmp eq i64* %195, %196
  br i1 %197, label %198, label %200

198:                                              ; preds = %194
  %199 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %200

200:                                              ; preds = %198, %194
  %201 = phi i64* [ %199, %198 ], [ %195, %194 ]
  %202 = ptrtoint i64* %201 to i64
  %203 = add i64 %202, 8
  %204 = inttoptr i64 %203 to i64*
  store i64* %204, i64** %48, align 8
  store i64 %189, i64* %201, align 8
  br label %205

205:                                              ; preds = %200, %192
  %206 = phi i64* [ %193, %192 ], [ %201, %200 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #12
  %207 = load i64, i64* %206, align 8
  %208 = add i64 %207, 11
  %209 = inttoptr i64 %208 to i32*
  %210 = load i32, i32* %209, align 4
  %211 = ashr i32 %210, 1
  %212 = add nsw i32 %211, -1
  br label %213

213:                                              ; preds = %107, %205
  %214 = phi i32 [ %212, %205 ], [ 1, %107 ]
  %215 = add nsw i32 %214, %80
  %216 = add nuw nsw i64 %78, 1
  %217 = load i64, i64* %36, align 8
  %218 = add i64 %217, 3
  %219 = inttoptr i64 %218 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = ashr i32 %220, 1
  %222 = sext i32 %221 to i64
  %223 = icmp slt i64 %216, %222
  br i1 %223, label %77, label %224

224:                                              ; preds = %213, %38
  %225 = phi i32 [ 0, %38 ], [ %215, %213 ]
  %226 = load i64, i64* %35, align 8
  %227 = and i64 %226, -4294967296
  %228 = add i64 %226, -1
  %229 = inttoptr i64 %228 to i32*
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = zext i32 %230 to i64
  %232 = or i64 %227, %231
  %233 = add i64 %232, 7
  %234 = inttoptr i64 %233 to i16*
  %235 = load atomic i16, i16* %234 monotonic, align 2
  %236 = add i16 %235, -1059
  %237 = icmp ult i16 %236, 15
  br i1 %237, label %238, label %556

238:                                              ; preds = %224
  %239 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45608
  %240 = bitcast %"class.v8::Isolate"* %239 to %"class.v8::internal::CanonicalHandleScope"**
  %241 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %240, align 8
  %242 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %241, null
  br i1 %242, label %247, label %243

243:                                              ; preds = %238
  %244 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %241, i64 %226) #12
  %245 = load i64, i64* %244, align 8
  %246 = and i64 %245, -4294967296
  br label %262

247:                                              ; preds = %238
  %248 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45584
  %249 = bitcast %"class.v8::Isolate"* %248 to i64**
  %250 = load i64*, i64** %249, align 8
  %251 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45592
  %252 = bitcast %"class.v8::Isolate"* %251 to i64**
  %253 = load i64*, i64** %252, align 8
  %254 = icmp eq i64* %250, %253
  br i1 %254, label %255, label %257

255:                                              ; preds = %247
  %256 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %257

257:                                              ; preds = %255, %247
  %258 = phi i64* [ %256, %255 ], [ %250, %247 ]
  %259 = ptrtoint i64* %258 to i64
  %260 = add i64 %259, 8
  %261 = inttoptr i64 %260 to i64*
  store i64* %261, i64** %249, align 8
  store i64 %226, i64* %258, align 8
  br label %262

262:                                              ; preds = %243, %257
  %263 = phi i64 [ %246, %243 ], [ %227, %257 ]
  %264 = phi i64 [ %245, %243 ], [ %226, %257 ]
  %265 = phi i64* [ %244, %243 ], [ %258, %257 ]
  %266 = add i64 %264, 11
  %267 = inttoptr i64 %266 to i32*
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = zext i32 %268 to i64
  %270 = or i64 %263, %269
  %271 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %240, align 8
  %272 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %271, null
  br i1 %272, label %276, label %273

273:                                              ; preds = %262
  %274 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %271, i64 %270) #12
  %275 = load i64, i64* %274, align 8
  br label %291

276:                                              ; preds = %262
  %277 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45584
  %278 = bitcast %"class.v8::Isolate"* %277 to i64**
  %279 = load i64*, i64** %278, align 8
  %280 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45592
  %281 = bitcast %"class.v8::Isolate"* %280 to i64**
  %282 = load i64*, i64** %281, align 8
  %283 = icmp eq i64* %279, %282
  br i1 %283, label %284, label %286

284:                                              ; preds = %276
  %285 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %286

286:                                              ; preds = %284, %276
  %287 = phi i64* [ %285, %284 ], [ %279, %276 ]
  %288 = ptrtoint i64* %287 to i64
  %289 = add i64 %288, 8
  %290 = inttoptr i64 %289 to i64*
  store i64* %290, i64** %278, align 8
  store i64 %270, i64* %287, align 8
  br label %291

291:                                              ; preds = %273, %286
  %292 = phi i64 [ %275, %273 ], [ %270, %286 ]
  %293 = add i64 %292, 27
  %294 = inttoptr i64 %293 to i32*
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 1024
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %489, label %298

298:                                              ; preds = %291
  %299 = add i64 %292, 26
  %300 = inttoptr i64 %299 to i8*
  %301 = load i8, i8* %300, align 1
  %302 = and i8 %301, 2
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %489, label %304

304:                                              ; preds = %298
  %305 = load i64, i64* %265, align 8
  %306 = add i64 %305, 15
  %307 = inttoptr i64 %306 to i32*
  %308 = load i32, i32* %307, align 4
  %309 = and i64 %305, -4294967296
  %310 = zext i32 %308 to i64
  %311 = or i64 %309, %310
  %312 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %240, align 8
  %313 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %312, null
  br i1 %313, label %317, label %314

314:                                              ; preds = %304
  %315 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %312, i64 %311) #12
  %316 = load i64, i64* %315, align 8
  br label %332

317:                                              ; preds = %304
  %318 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45584
  %319 = bitcast %"class.v8::Isolate"* %318 to i64**
  %320 = load i64*, i64** %319, align 8
  %321 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45592
  %322 = bitcast %"class.v8::Isolate"* %321 to i64**
  %323 = load i64*, i64** %322, align 8
  %324 = icmp eq i64* %320, %323
  br i1 %324, label %325, label %327

325:                                              ; preds = %317
  %326 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %327

327:                                              ; preds = %325, %317
  %328 = phi i64* [ %326, %325 ], [ %320, %317 ]
  %329 = ptrtoint i64* %328 to i64
  %330 = add i64 %329, 8
  %331 = inttoptr i64 %330 to i64*
  store i64* %331, i64** %319, align 8
  store i64 %311, i64* %328, align 8
  br label %332

332:                                              ; preds = %314, %327
  %333 = phi i64 [ %316, %314 ], [ %311, %327 ]
  %334 = bitcast %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %334) #12
  %335 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %333, i64* %335, align 8
  %336 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %9, i64 0, i32 0
  %337 = call i64 @_ZN2v88internal7Context10scope_infoEv(%"class.v8::internal::Context"* nonnull %336) #12
  %338 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %240, align 8
  %339 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %338, null
  br i1 %339, label %342, label %340

340:                                              ; preds = %332
  %341 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %338, i64 %337) #12
  br label %357

342:                                              ; preds = %332
  %343 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45584
  %344 = bitcast %"class.v8::Isolate"* %343 to i64**
  %345 = load i64*, i64** %344, align 8
  %346 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45592
  %347 = bitcast %"class.v8::Isolate"* %346 to i64**
  %348 = load i64*, i64** %347, align 8
  %349 = icmp eq i64* %345, %348
  br i1 %349, label %350, label %352

350:                                              ; preds = %342
  %351 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %352

352:                                              ; preds = %350, %342
  %353 = phi i64* [ %351, %350 ], [ %345, %342 ]
  %354 = ptrtoint i64* %353 to i64
  %355 = add i64 %354, 8
  %356 = inttoptr i64 %355 to i64*
  store i64* %356, i64** %344, align 8
  store i64 %337, i64* %353, align 8
  br label %357

357:                                              ; preds = %340, %352
  %358 = phi i64* [ %341, %340 ], [ %353, %352 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %334) #12
  %359 = load i64, i64* %358, align 8
  %360 = add i64 %359, 11
  %361 = inttoptr i64 %360 to i32*
  %362 = load i32, i32* %361, align 4
  %363 = ashr i32 %362, 1
  %364 = icmp sgt i32 %362, 1
  br i1 %364, label %365, label %392

365:                                              ; preds = %357
  %366 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %10 to i8*
  %367 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %10, i64 0, i32 0
  %369 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %11 to i8*
  %370 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %11, i64 0, i32 0
  br label %372

372:                                              ; preds = %390, %365
  %373 = phi i64 [ %359, %365 ], [ %391, %390 ]
  %374 = phi i32 [ %225, %365 ], [ %384, %390 ]
  %375 = phi i32 [ 0, %365 ], [ %385, %390 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %366) #12
  store i64 %373, i64* %367, align 8
  %376 = call zeroext i8 @_ZNK2v88internal9ScopeInfo16ContextLocalModeEi(%"class.v8::internal::ScopeInfo"* nonnull %368, i32 %375) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %366) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %369) #12
  %377 = load i64, i64* %358, align 8
  store i64 %377, i64* %370, align 8
  %378 = call zeroext i8 @_ZNK2v88internal9ScopeInfo24ContextLocalIsStaticFlagEi(%"class.v8::internal::ScopeInfo"* nonnull %371, i32 %375) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %369) #12
  %379 = add i8 %376, -7
  %380 = icmp ult i8 %379, 4
  %381 = icmp eq i8 %378, 1
  %382 = and i1 %380, %381
  %383 = select i1 %382, i32 %363, i32 0
  %384 = add nsw i32 %383, %374
  %385 = add nuw nsw i32 %375, 1
  %386 = and i1 %380, %381
  %387 = xor i1 %386, true
  %388 = icmp slt i32 %385, %363
  %389 = and i1 %388, %387
  br i1 %389, label %390, label %392

390:                                              ; preds = %372
  %391 = load i64, i64* %358, align 8
  br label %372

392:                                              ; preds = %372, %357
  %393 = phi i32 [ %225, %357 ], [ %384, %372 ]
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %396 = bitcast %"class.v8::Local.2"** %395 to i64*
  %397 = load i64, i64* %396, align 8
  %398 = bitcast %"class.std::__1::vector.1455"* %2 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = sub i64 %397, %399
  %401 = ashr exact i64 %400, 3
  %402 = icmp ult i64 %401, %394
  br i1 %402, label %403, label %427

403:                                              ; preds = %392
  %404 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %2, i64 0, i32 0, i32 1
  %405 = bitcast %"class.v8::Local.2"** %404 to i64*
  %406 = icmp slt i32 %393, 0
  br i1 %406, label %407, label %408

407:                                              ; preds = %403
  call void @abort() #16
  unreachable

408:                                              ; preds = %403
  %409 = load i64, i64* %405, align 8
  %410 = sub i64 %409, %399
  %411 = ashr exact i64 %410, 3
  %412 = shl nsw i64 %394, 3
  %413 = call i8* @_Znwm(i64 %412) #17
  %414 = bitcast i8* %413 to %"class.v8::Local.2"*
  %415 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %414, i64 %411
  %416 = ptrtoint %"class.v8::Local.2"* %415 to i64
  %417 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %414, i64 %394
  %418 = ptrtoint %"class.v8::Local.2"* %417 to i64
  %419 = ptrtoint i8* %413 to i64
  %420 = icmp sgt i64 %410, 0
  br i1 %420, label %421, label %423

421:                                              ; preds = %408
  %422 = inttoptr i64 %399 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %413, i8* align 8 %422, i64 %410, i1 false) #12
  br label %423

423:                                              ; preds = %421, %408
  store i64 %419, i64* %398, align 8
  store i64 %416, i64* %405, align 8
  store i64 %418, i64* %396, align 8
  %424 = icmp eq i64 %399, 0
  br i1 %424, label %427, label %425

425:                                              ; preds = %423
  %426 = inttoptr i64 %399 to i8*
  call void @_ZdlPv(i8* %426) #17
  br label %427

427:                                              ; preds = %392, %423, %425
  %428 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %429 = bitcast %"class.v8::Local.2"** %428 to i64*
  %430 = load i64, i64* %429, align 8
  %431 = bitcast %"class.std::__1::vector.1455"* %3 to i64*
  %432 = load i64, i64* %431, align 8
  %433 = sub i64 %430, %432
  %434 = ashr exact i64 %433, 3
  %435 = icmp ult i64 %434, %394
  br i1 %435, label %436, label %460

436:                                              ; preds = %427
  %437 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %3, i64 0, i32 0, i32 1
  %438 = bitcast %"class.v8::Local.2"** %437 to i64*
  %439 = icmp slt i32 %393, 0
  br i1 %439, label %440, label %441

440:                                              ; preds = %436
  call void @abort() #16
  unreachable

441:                                              ; preds = %436
  %442 = load i64, i64* %438, align 8
  %443 = sub i64 %442, %432
  %444 = ashr exact i64 %443, 3
  %445 = shl nsw i64 %394, 3
  %446 = call i8* @_Znwm(i64 %445) #17
  %447 = bitcast i8* %446 to %"class.v8::Local.2"*
  %448 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %447, i64 %444
  %449 = ptrtoint %"class.v8::Local.2"* %448 to i64
  %450 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %447, i64 %394
  %451 = ptrtoint %"class.v8::Local.2"* %450 to i64
  %452 = ptrtoint i8* %446 to i64
  %453 = icmp sgt i64 %443, 0
  br i1 %453, label %454, label %456

454:                                              ; preds = %441
  %455 = inttoptr i64 %432 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %446, i8* align 8 %455, i64 %443, i1 false) #12
  br label %456

456:                                              ; preds = %454, %441
  store i64 %452, i64* %431, align 8
  store i64 %449, i64* %438, align 8
  store i64 %451, i64* %429, align 8
  %457 = icmp eq i64 %432, 0
  br i1 %457, label %460, label %458

458:                                              ; preds = %456
  %459 = inttoptr i64 %432 to i8*
  call void @_ZdlPv(i8* %459) #17
  br label %460

460:                                              ; preds = %427, %456, %458
  %461 = load i64, i64* %35, align 8
  %462 = add i64 %461, 15
  %463 = inttoptr i64 %462 to i32*
  %464 = load i32, i32* %463, align 4
  %465 = and i64 %461, -4294967296
  %466 = zext i32 %464 to i64
  %467 = or i64 %465, %466
  %468 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %240, align 8
  %469 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %468, null
  br i1 %469, label %472, label %470

470:                                              ; preds = %460
  %471 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %468, i64 %467) #12
  br label %487

472:                                              ; preds = %460
  %473 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45584
  %474 = bitcast %"class.v8::Isolate"* %473 to i64**
  %475 = load i64*, i64** %474, align 8
  %476 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45592
  %477 = bitcast %"class.v8::Isolate"* %476 to i64**
  %478 = load i64*, i64** %477, align 8
  %479 = icmp eq i64* %475, %478
  br i1 %479, label %480, label %482

480:                                              ; preds = %472
  %481 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %482

482:                                              ; preds = %480, %472
  %483 = phi i64* [ %481, %480 ], [ %475, %472 ]
  %484 = ptrtoint i64* %483 to i64
  %485 = add i64 %484, 8
  %486 = inttoptr i64 %485 to i64*
  store i64* %486, i64** %474, align 8
  store i64 %467, i64* %483, align 8
  br label %487

487:                                              ; preds = %470, %482
  %488 = phi i64* [ %471, %470 ], [ %483, %482 ]
  call fastcc void @_ZN2v85debug12_GLOBAL__N_144CollectPrivateMethodsAndAccessorsFromContextEPNS_8internal7IsolateENS2_6HandleINS2_7ContextEEENS2_12IsStaticFlagEPNSt3__16vectorINS_5LocalINS_5ValueEEENS9_9allocatorISD_EEEESH_(%"class.v8::internal::Isolate"* %13, i64* %488, i8 zeroext 1, %"class.std::__1::vector.1455"* %2, %"class.std::__1::vector.1455"* %3)
  br label %623

489:                                              ; preds = %298, %291
  %490 = sext i32 %225 to i64
  %491 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %492 = bitcast %"class.v8::Local.2"** %491 to i64*
  %493 = load i64, i64* %492, align 8
  %494 = bitcast %"class.std::__1::vector.1455"* %2 to i64*
  %495 = load i64, i64* %494, align 8
  %496 = sub i64 %493, %495
  %497 = ashr exact i64 %496, 3
  %498 = icmp ult i64 %497, %490
  br i1 %498, label %499, label %523

499:                                              ; preds = %489
  %500 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %2, i64 0, i32 0, i32 1
  %501 = bitcast %"class.v8::Local.2"** %500 to i64*
  %502 = icmp slt i32 %225, 0
  br i1 %502, label %503, label %504

503:                                              ; preds = %499
  call void @abort() #16
  unreachable

504:                                              ; preds = %499
  %505 = load i64, i64* %501, align 8
  %506 = sub i64 %505, %495
  %507 = ashr exact i64 %506, 3
  %508 = shl nsw i64 %490, 3
  %509 = call i8* @_Znwm(i64 %508) #17
  %510 = bitcast i8* %509 to %"class.v8::Local.2"*
  %511 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %510, i64 %507
  %512 = ptrtoint %"class.v8::Local.2"* %511 to i64
  %513 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %510, i64 %490
  %514 = ptrtoint %"class.v8::Local.2"* %513 to i64
  %515 = ptrtoint i8* %509 to i64
  %516 = icmp sgt i64 %506, 0
  br i1 %516, label %517, label %519

517:                                              ; preds = %504
  %518 = inttoptr i64 %495 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %509, i8* align 8 %518, i64 %506, i1 false) #12
  br label %519

519:                                              ; preds = %517, %504
  store i64 %515, i64* %494, align 8
  store i64 %512, i64* %501, align 8
  store i64 %514, i64* %492, align 8
  %520 = icmp eq i64 %495, 0
  br i1 %520, label %523, label %521

521:                                              ; preds = %519
  %522 = inttoptr i64 %495 to i8*
  call void @_ZdlPv(i8* %522) #17
  br label %523

523:                                              ; preds = %489, %519, %521
  %524 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %525 = bitcast %"class.v8::Local.2"** %524 to i64*
  %526 = load i64, i64* %525, align 8
  %527 = bitcast %"class.std::__1::vector.1455"* %3 to i64*
  %528 = load i64, i64* %527, align 8
  %529 = sub i64 %526, %528
  %530 = ashr exact i64 %529, 3
  %531 = icmp ult i64 %530, %490
  br i1 %531, label %532, label %623

532:                                              ; preds = %523
  %533 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %3, i64 0, i32 0, i32 1
  %534 = bitcast %"class.v8::Local.2"** %533 to i64*
  %535 = icmp slt i32 %225, 0
  br i1 %535, label %536, label %537

536:                                              ; preds = %532
  call void @abort() #16
  unreachable

537:                                              ; preds = %532
  %538 = load i64, i64* %534, align 8
  %539 = sub i64 %538, %528
  %540 = ashr exact i64 %539, 3
  %541 = shl nsw i64 %490, 3
  %542 = call i8* @_Znwm(i64 %541) #17
  %543 = bitcast i8* %542 to %"class.v8::Local.2"*
  %544 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %543, i64 %540
  %545 = ptrtoint %"class.v8::Local.2"* %544 to i64
  %546 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %543, i64 %490
  %547 = ptrtoint %"class.v8::Local.2"* %546 to i64
  %548 = ptrtoint i8* %542 to i64
  %549 = icmp sgt i64 %539, 0
  br i1 %549, label %550, label %552

550:                                              ; preds = %537
  %551 = inttoptr i64 %528 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %542, i8* align 8 %551, i64 %539, i1 false) #12
  br label %552

552:                                              ; preds = %550, %537
  store i64 %548, i64* %527, align 8
  store i64 %545, i64* %534, align 8
  store i64 %547, i64* %525, align 8
  %553 = icmp eq i64 %528, 0
  br i1 %553, label %623, label %554

554:                                              ; preds = %552
  %555 = inttoptr i64 %528 to i8*
  call void @_ZdlPv(i8* %555) #17
  br label %623

556:                                              ; preds = %224
  %557 = sext i32 %225 to i64
  %558 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %559 = bitcast %"class.v8::Local.2"** %558 to i64*
  %560 = load i64, i64* %559, align 8
  %561 = bitcast %"class.std::__1::vector.1455"* %2 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = sub i64 %560, %562
  %564 = ashr exact i64 %563, 3
  %565 = icmp ult i64 %564, %557
  br i1 %565, label %566, label %590

566:                                              ; preds = %556
  %567 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %2, i64 0, i32 0, i32 1
  %568 = bitcast %"class.v8::Local.2"** %567 to i64*
  %569 = icmp slt i32 %225, 0
  br i1 %569, label %570, label %571

570:                                              ; preds = %566
  call void @abort() #16
  unreachable

571:                                              ; preds = %566
  %572 = load i64, i64* %568, align 8
  %573 = sub i64 %572, %562
  %574 = ashr exact i64 %573, 3
  %575 = shl nsw i64 %557, 3
  %576 = call i8* @_Znwm(i64 %575) #17
  %577 = bitcast i8* %576 to %"class.v8::Local.2"*
  %578 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %577, i64 %574
  %579 = ptrtoint %"class.v8::Local.2"* %578 to i64
  %580 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %577, i64 %557
  %581 = ptrtoint %"class.v8::Local.2"* %580 to i64
  %582 = ptrtoint i8* %576 to i64
  %583 = icmp sgt i64 %573, 0
  br i1 %583, label %584, label %586

584:                                              ; preds = %571
  %585 = inttoptr i64 %562 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %576, i8* align 8 %585, i64 %573, i1 false) #12
  br label %586

586:                                              ; preds = %584, %571
  store i64 %582, i64* %561, align 8
  store i64 %579, i64* %568, align 8
  store i64 %581, i64* %559, align 8
  %587 = icmp eq i64 %562, 0
  br i1 %587, label %590, label %588

588:                                              ; preds = %586
  %589 = inttoptr i64 %562 to i8*
  call void @_ZdlPv(i8* %589) #17
  br label %590

590:                                              ; preds = %556, %586, %588
  %591 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %592 = bitcast %"class.v8::Local.2"** %591 to i64*
  %593 = load i64, i64* %592, align 8
  %594 = bitcast %"class.std::__1::vector.1455"* %3 to i64*
  %595 = load i64, i64* %594, align 8
  %596 = sub i64 %593, %595
  %597 = ashr exact i64 %596, 3
  %598 = icmp ult i64 %597, %557
  br i1 %598, label %599, label %623

599:                                              ; preds = %590
  %600 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %3, i64 0, i32 0, i32 1
  %601 = bitcast %"class.v8::Local.2"** %600 to i64*
  %602 = icmp slt i32 %225, 0
  br i1 %602, label %603, label %604

603:                                              ; preds = %599
  call void @abort() #16
  unreachable

604:                                              ; preds = %599
  %605 = load i64, i64* %601, align 8
  %606 = sub i64 %605, %595
  %607 = ashr exact i64 %606, 3
  %608 = shl nsw i64 %557, 3
  %609 = call i8* @_Znwm(i64 %608) #17
  %610 = bitcast i8* %609 to %"class.v8::Local.2"*
  %611 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %610, i64 %607
  %612 = ptrtoint %"class.v8::Local.2"* %611 to i64
  %613 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %610, i64 %557
  %614 = ptrtoint %"class.v8::Local.2"* %613 to i64
  %615 = ptrtoint i8* %609 to i64
  %616 = icmp sgt i64 %606, 0
  br i1 %616, label %617, label %619

617:                                              ; preds = %604
  %618 = inttoptr i64 %595 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %609, i8* align 8 %618, i64 %606, i1 false) #12
  br label %619

619:                                              ; preds = %617, %604
  store i64 %615, i64* %594, align 8
  store i64 %612, i64* %601, align 8
  store i64 %614, i64* %592, align 8
  %620 = icmp eq i64 %595, 0
  br i1 %620, label %623, label %621

621:                                              ; preds = %619
  %622 = inttoptr i64 %595 to i8*
  call void @_ZdlPv(i8* %622) #17
  br label %623

623:                                              ; preds = %621, %619, %590, %554, %552, %523, %487
  %624 = load i64, i64* %36, align 8
  %625 = add i64 %624, 3
  %626 = inttoptr i64 %625 to i32*
  %627 = load i32, i32* %626, align 4
  %628 = icmp sgt i32 %627, 1
  br i1 %628, label %629, label %965

629:                                              ; preds = %623
  %630 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45608
  %631 = bitcast %"class.v8::Isolate"* %630 to %"class.v8::internal::CanonicalHandleScope"**
  %632 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45584
  %633 = bitcast %"class.v8::Isolate"* %632 to i64**
  %634 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45592
  %635 = bitcast %"class.v8::Isolate"* %634 to i64**
  %636 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  %637 = ptrtoint %"class.v8::Object"* %1 to i64
  %638 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 0
  %639 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 56
  %640 = bitcast %"class.v8::Isolate"* %639 to i64*
  %641 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 1
  %642 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 2
  %643 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 3
  %644 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 4, i32 0
  %645 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 5
  %646 = bitcast %"class.v8::internal::Isolate"** %645 to %"class.v8::Isolate"**
  %647 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 6, i32 0, i32 0
  %648 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 7, i32 0, i32 0
  %649 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 8, i32 0, i32 0
  %650 = bitcast i64** %649 to %"class.v8::Object"**
  %651 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 9, i32 0, i32 0
  %652 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 10
  %653 = bitcast %"class.v8::internal::Handle.1452"* %652 to i64*
  %654 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 11
  %655 = bitcast i64* %654 to i8*
  %656 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %12, i64 45008
  %657 = bitcast %"class.v8::Isolate"* %656 to %"class.v8::internal::StringTable"**
  %658 = bitcast %"class.v8::internal::Isolate"** %645 to %"class.v8::internal::Factory"**
  %659 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %2, i64 0, i32 0, i32 1
  %660 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %661 = bitcast %"class.v8::Local.2"** %659 to i64*
  %662 = bitcast %"class.std::__1::vector.1455"* %2 to i64*
  %663 = bitcast %"class.v8::Local.2"** %660 to i64*
  %664 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %2, i64 0, i32 0, i32 0
  %665 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %3, i64 0, i32 0, i32 1
  %666 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %667 = bitcast %"class.v8::Local.2"** %665 to i64*
  %668 = bitcast %"class.std::__1::vector.1455"* %3 to i64*
  %669 = bitcast %"class.v8::Local.2"** %666 to i64*
  %670 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %3, i64 0, i32 0, i32 0
  br label %671

671:                                              ; preds = %629, %956
  %672 = phi i64 [ 0, %629 ], [ %957, %956 ]
  %673 = phi i64 [ %624, %629 ], [ %958, %956 ]
  %674 = and i64 %673, -4294967296
  %675 = trunc i64 %672 to i32
  %676 = shl i32 %675, 2
  %677 = sext i32 %676 to i64
  %678 = add i64 %673, 7
  %679 = add i64 %678, %677
  %680 = inttoptr i64 %679 to i32*
  %681 = load atomic i32, i32* %680 monotonic, align 4
  %682 = zext i32 %681 to i64
  %683 = or i64 %674, %682
  %684 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %631, align 8
  %685 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %684, null
  br i1 %685, label %689, label %686

686:                                              ; preds = %671
  %687 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %684, i64 %683) #12
  %688 = load i64, i64* %687, align 8
  br label %700

689:                                              ; preds = %671
  %690 = load i64*, i64** %633, align 8
  %691 = load i64*, i64** %635, align 8
  %692 = icmp eq i64* %690, %691
  br i1 %692, label %693, label %695

693:                                              ; preds = %689
  %694 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %695

695:                                              ; preds = %693, %689
  %696 = phi i64* [ %694, %693 ], [ %690, %689 ]
  %697 = ptrtoint i64* %696 to i64
  %698 = add i64 %697, 8
  %699 = inttoptr i64 %698 to i64*
  store i64* %699, i64** %633, align 8
  store i64 %683, i64* %696, align 8
  br label %700

700:                                              ; preds = %686, %695
  %701 = phi i64 [ %688, %686 ], [ %683, %695 ]
  %702 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %631, align 8
  %703 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %702, null
  br i1 %703, label %707, label %704

704:                                              ; preds = %700
  %705 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %702, i64 %701) #12
  %706 = load i64, i64* %705, align 8
  br label %718

707:                                              ; preds = %700
  %708 = load i64*, i64** %633, align 8
  %709 = load i64*, i64** %635, align 8
  %710 = icmp eq i64* %708, %709
  br i1 %710, label %711, label %713

711:                                              ; preds = %707
  %712 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %713

713:                                              ; preds = %711, %707
  %714 = phi i64* [ %712, %711 ], [ %708, %707 ]
  %715 = ptrtoint i64* %714 to i64
  %716 = add i64 %715, 8
  %717 = inttoptr i64 %716 to i64*
  store i64* %717, i64** %633, align 8
  store i64 %701, i64* %714, align 8
  br label %718

718:                                              ; preds = %704, %713
  %719 = phi i64 [ %706, %704 ], [ %701, %713 ]
  %720 = phi i64* [ %705, %704 ], [ %714, %713 ]
  %721 = add i64 %719, 7
  %722 = inttoptr i64 %721 to i32*
  %723 = load i32, i32* %722, align 4
  %724 = and i32 %723, 16
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %726, label %727, !prof !2

726:                                              ; preds = %718
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

727:                                              ; preds = %718
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %636) #12
  %728 = icmp eq i64* %720, null
  br i1 %728, label %729, label %733

729:                                              ; preds = %727
  %730 = load i64, i64* null, align 536870912
  %731 = add i64 %730, -1
  %732 = inttoptr i64 %731 to i32*
  br label %749

733:                                              ; preds = %727
  %734 = load i64, i64* %640, align 8
  %735 = add i64 %719, -1
  %736 = inttoptr i64 %735 to i32*
  %737 = load atomic i32, i32* %736 monotonic, align 4
  %738 = and i64 %734, 4294967295
  %739 = icmp eq i64 %738, 0
  call void @llvm.assume(i1 %739) #12
  %740 = zext i32 %737 to i64
  %741 = or i64 %734, %740
  %742 = add i64 %741, 7
  %743 = inttoptr i64 %742 to i16*
  %744 = load atomic i16, i16* %743 monotonic, align 2
  %745 = icmp ne i16 %744, 64
  %746 = and i32 %723, 1
  %747 = icmp eq i32 %746, 0
  %748 = or i1 %745, %747
  br i1 %748, label %749, label %752

749:                                              ; preds = %733, %729
  %750 = phi i32* [ %732, %729 ], [ %736, %733 ]
  %751 = phi i64 [ %730, %729 ], [ %719, %733 ]
  br label %752

752:                                              ; preds = %733, %749
  %753 = phi i32* [ %750, %749 ], [ %736, %733 ]
  %754 = phi i64 [ %751, %749 ], [ %719, %733 ]
  %755 = phi i32 [ 3, %749 ], [ 0, %733 ]
  store i32 %755, i32* %638, align 8
  store i32 4, i32* %641, align 4
  store i8 0, i8* %642, align 8
  store i32 0, i32* %643, align 4
  store i32 0, i32* %644, align 8
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %646, align 8
  store i64* %720, i64** %647, align 8
  store i64* null, i64** %648, align 8
  store %"class.v8::Object"* %1, %"class.v8::Object"** %650, align 8
  store i64* null, i64** %651, align 8
  store i64 %637, i64* %653, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %655, i8 -1, i64 16, i1 false) #12
  %756 = and i64 %754, -4294967296
  %757 = load atomic i32, i32* %753 monotonic, align 4
  %758 = zext i32 %757 to i64
  %759 = or i64 %756, %758
  %760 = add i64 %759, 7
  %761 = inttoptr i64 %760 to i16*
  %762 = load atomic i16, i16* %761 monotonic, align 2
  %763 = and i16 %762, -32
  %764 = icmp eq i16 %763, 32
  br i1 %764, label %765, label %768

765:                                              ; preds = %752
  %766 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %657, align 8
  %767 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %766, %"class.v8::internal::Isolate"* %13, i64* %720) #12
  br label %768

768:                                              ; preds = %765, %752
  %769 = phi i64* [ %767, %765 ], [ %720, %752 ]
  store i64* %769, i64** %647, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %6) #12
  %770 = load i32, i32* %641, align 4
  %771 = icmp eq i32 %770, 4
  br i1 %771, label %772, label %776

772:                                              ; preds = %768
  %773 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %658, align 8
  %774 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %773, i64 160
  %775 = bitcast %"class.v8::internal::Factory"* %774 to i64*
  br label %778

776:                                              ; preds = %768
  %777 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #12
  br label %778

778:                                              ; preds = %772, %776
  %779 = phi i64* [ %777, %776 ], [ %775, %772 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %636) #12
  %780 = icmp eq i64* %779, null
  br i1 %780, label %965, label %781

781:                                              ; preds = %778
  %782 = load i64, i64* %720, align 8
  %783 = add i64 %782, 7
  %784 = inttoptr i64 %783 to i32*
  %785 = load i32, i32* %784, align 4
  %786 = and i32 %785, 32
  %787 = icmp eq i32 %786, 0
  br i1 %787, label %807, label %788

788:                                              ; preds = %781
  %789 = load i64, i64* %779, align 8
  %790 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %631, align 8
  %791 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %790, null
  br i1 %791, label %794, label %792

792:                                              ; preds = %788
  %793 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %790, i64 %789) #12
  br label %805

794:                                              ; preds = %788
  %795 = load i64*, i64** %633, align 8
  %796 = load i64*, i64** %635, align 8
  %797 = icmp eq i64* %795, %796
  br i1 %797, label %798, label %800

798:                                              ; preds = %794
  %799 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %800

800:                                              ; preds = %798, %794
  %801 = phi i64* [ %799, %798 ], [ %795, %794 ]
  %802 = ptrtoint i64* %801 to i64
  %803 = add i64 %802, 8
  %804 = inttoptr i64 %803 to i64*
  store i64* %804, i64** %633, align 8
  store i64 %789, i64* %801, align 8
  br label %805

805:                                              ; preds = %792, %800
  %806 = phi i64* [ %793, %792 ], [ %801, %800 ]
  call fastcc void @_ZN2v85debug12_GLOBAL__N_144CollectPrivateMethodsAndAccessorsFromContextEPNS_8internal7IsolateENS2_6HandleINS2_7ContextEEENS2_12IsStaticFlagEPNSt3__16vectorINS_5LocalINS_5ValueEEENS9_9allocatorISD_EEEESH_(%"class.v8::internal::Isolate"* %13, i64* %806, i8 zeroext 0, %"class.std::__1::vector.1455"* %2, %"class.std::__1::vector.1455"* %3)
  br label %956

807:                                              ; preds = %781
  %808 = and i64 %782, -4294967296
  %809 = add i64 %782, 11
  %810 = inttoptr i64 %809 to i32*
  %811 = load i32, i32* %810, align 4
  %812 = zext i32 %811 to i64
  %813 = or i64 %808, %812
  %814 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %631, align 8
  %815 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %814, null
  br i1 %815, label %819, label %816

816:                                              ; preds = %807
  %817 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %814, i64 %813) #12
  %818 = ptrtoint i64* %817 to i64
  br label %830

819:                                              ; preds = %807
  %820 = load i64*, i64** %633, align 8
  %821 = load i64*, i64** %635, align 8
  %822 = icmp eq i64* %820, %821
  br i1 %822, label %823, label %825

823:                                              ; preds = %819
  %824 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %825

825:                                              ; preds = %823, %819
  %826 = phi i64* [ %824, %823 ], [ %820, %819 ]
  %827 = ptrtoint i64* %826 to i64
  %828 = add i64 %827, 8
  %829 = inttoptr i64 %828 to i64*
  store i64* %829, i64** %633, align 8
  store i64 %813, i64* %826, align 8
  br label %830

830:                                              ; preds = %816, %825
  %831 = phi i64 [ %818, %816 ], [ %827, %825 ]
  %832 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %659, align 8
  %833 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %660, align 8
  %834 = icmp ult %"class.v8::Local.2"* %832, %833
  %835 = ptrtoint %"class.v8::Local.2"* %833 to i64
  br i1 %834, label %836, label %840

836:                                              ; preds = %830
  %837 = bitcast %"class.v8::Local.2"* %832 to i64*
  store i64 %831, i64* %837, align 8
  %838 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %832, i64 1
  %839 = ptrtoint %"class.v8::Local.2"* %838 to i64
  store i64 %839, i64* %661, align 8
  br label %893

840:                                              ; preds = %830
  %841 = ptrtoint %"class.v8::Local.2"* %832 to i64
  %842 = load i64, i64* %662, align 8
  %843 = sub i64 %841, %842
  %844 = ashr exact i64 %843, 3
  %845 = add nsw i64 %844, 1
  %846 = icmp ugt i64 %845, 2305843009213693951
  br i1 %846, label %847, label %849

847:                                              ; preds = %840
  %848 = bitcast %"class.std::__1::vector.1455"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %848) #16
  unreachable

849:                                              ; preds = %840
  %850 = sub i64 %835, %842
  %851 = ashr exact i64 %850, 3
  %852 = icmp ult i64 %851, 1152921504606846975
  br i1 %852, label %853, label %861

853:                                              ; preds = %849
  %854 = ashr exact i64 %850, 2
  %855 = icmp ult i64 %854, %845
  %856 = select i1 %855, i64 %845, i64 %854
  %857 = icmp eq i64 %856, 0
  br i1 %857, label %866, label %858

858:                                              ; preds = %853
  %859 = icmp ugt i64 %856, 2305843009213693951
  br i1 %859, label %860, label %861

860:                                              ; preds = %858
  call void @abort() #16
  unreachable

861:                                              ; preds = %858, %849
  %862 = phi i64 [ %856, %858 ], [ 2305843009213693951, %849 ]
  %863 = shl i64 %862, 3
  %864 = call i8* @_Znwm(i64 %863) #17
  %865 = bitcast i8* %864 to %"class.v8::Local.2"*
  br label %866

866:                                              ; preds = %861, %853
  %867 = phi i64 [ %862, %861 ], [ 0, %853 ]
  %868 = phi %"class.v8::Local.2"* [ %865, %861 ], [ null, %853 ]
  %869 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %868, i64 %844
  %870 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %868, i64 %867
  %871 = ptrtoint %"class.v8::Local.2"* %870 to i64
  %872 = bitcast %"class.v8::Local.2"* %869 to i64*
  store i64 %831, i64* %872, align 8
  %873 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %869, i64 1
  %874 = ptrtoint %"class.v8::Local.2"* %873 to i64
  %875 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %664, align 8
  %876 = load i64, i64* %661, align 8
  %877 = ptrtoint %"class.v8::Local.2"* %875 to i64
  %878 = sub i64 %876, %877
  %879 = ashr exact i64 %878, 3
  %880 = sub nsw i64 0, %879
  %881 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %869, i64 %880
  %882 = ptrtoint %"class.v8::Local.2"* %881 to i64
  %883 = icmp sgt i64 %878, 0
  br i1 %883, label %884, label %888

884:                                              ; preds = %866
  %885 = bitcast %"class.v8::Local.2"* %881 to i8*
  %886 = bitcast %"class.v8::Local.2"* %875 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %885, i8* align 8 %886, i64 %878, i1 false) #12
  %887 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %664, align 8
  br label %888

888:                                              ; preds = %884, %866
  %889 = phi %"class.v8::Local.2"* [ %875, %866 ], [ %887, %884 ]
  store i64 %882, i64* %662, align 8
  store i64 %874, i64* %661, align 8
  store i64 %871, i64* %663, align 8
  %890 = icmp eq %"class.v8::Local.2"* %889, null
  br i1 %890, label %893, label %891

891:                                              ; preds = %888
  %892 = bitcast %"class.v8::Local.2"* %889 to i8*
  call void @_ZdlPv(i8* %892) #17
  br label %893

893:                                              ; preds = %836, %888, %891
  %894 = ptrtoint i64* %779 to i64
  %895 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %665, align 8
  %896 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %666, align 8
  %897 = icmp ult %"class.v8::Local.2"* %895, %896
  %898 = ptrtoint %"class.v8::Local.2"* %896 to i64
  br i1 %897, label %899, label %903

899:                                              ; preds = %893
  %900 = bitcast %"class.v8::Local.2"* %895 to i64*
  store i64 %894, i64* %900, align 8
  %901 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %895, i64 1
  %902 = ptrtoint %"class.v8::Local.2"* %901 to i64
  store i64 %902, i64* %667, align 8
  br label %956

903:                                              ; preds = %893
  %904 = ptrtoint %"class.v8::Local.2"* %895 to i64
  %905 = load i64, i64* %668, align 8
  %906 = sub i64 %904, %905
  %907 = ashr exact i64 %906, 3
  %908 = add nsw i64 %907, 1
  %909 = icmp ugt i64 %908, 2305843009213693951
  br i1 %909, label %910, label %912

910:                                              ; preds = %903
  %911 = bitcast %"class.std::__1::vector.1455"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %911) #16
  unreachable

912:                                              ; preds = %903
  %913 = sub i64 %898, %905
  %914 = ashr exact i64 %913, 3
  %915 = icmp ult i64 %914, 1152921504606846975
  br i1 %915, label %916, label %924

916:                                              ; preds = %912
  %917 = ashr exact i64 %913, 2
  %918 = icmp ult i64 %917, %908
  %919 = select i1 %918, i64 %908, i64 %917
  %920 = icmp eq i64 %919, 0
  br i1 %920, label %929, label %921

921:                                              ; preds = %916
  %922 = icmp ugt i64 %919, 2305843009213693951
  br i1 %922, label %923, label %924

923:                                              ; preds = %921
  call void @abort() #16
  unreachable

924:                                              ; preds = %921, %912
  %925 = phi i64 [ %919, %921 ], [ 2305843009213693951, %912 ]
  %926 = shl i64 %925, 3
  %927 = call i8* @_Znwm(i64 %926) #17
  %928 = bitcast i8* %927 to %"class.v8::Local.2"*
  br label %929

929:                                              ; preds = %924, %916
  %930 = phi i64 [ %925, %924 ], [ 0, %916 ]
  %931 = phi %"class.v8::Local.2"* [ %928, %924 ], [ null, %916 ]
  %932 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %931, i64 %907
  %933 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %931, i64 %930
  %934 = ptrtoint %"class.v8::Local.2"* %933 to i64
  %935 = bitcast %"class.v8::Local.2"* %932 to i64*
  store i64 %894, i64* %935, align 8
  %936 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %932, i64 1
  %937 = ptrtoint %"class.v8::Local.2"* %936 to i64
  %938 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %670, align 8
  %939 = load i64, i64* %667, align 8
  %940 = ptrtoint %"class.v8::Local.2"* %938 to i64
  %941 = sub i64 %939, %940
  %942 = ashr exact i64 %941, 3
  %943 = sub nsw i64 0, %942
  %944 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %932, i64 %943
  %945 = ptrtoint %"class.v8::Local.2"* %944 to i64
  %946 = icmp sgt i64 %941, 0
  br i1 %946, label %947, label %951

947:                                              ; preds = %929
  %948 = bitcast %"class.v8::Local.2"* %944 to i8*
  %949 = bitcast %"class.v8::Local.2"* %938 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %948, i8* align 8 %949, i64 %941, i1 false) #12
  %950 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %670, align 8
  br label %951

951:                                              ; preds = %947, %929
  %952 = phi %"class.v8::Local.2"* [ %938, %929 ], [ %950, %947 ]
  store i64 %945, i64* %668, align 8
  store i64 %937, i64* %667, align 8
  store i64 %934, i64* %669, align 8
  %953 = icmp eq %"class.v8::Local.2"* %952, null
  br i1 %953, label %956, label %954

954:                                              ; preds = %951
  %955 = bitcast %"class.v8::Local.2"* %952 to i8*
  call void @_ZdlPv(i8* %955) #17
  br label %956

956:                                              ; preds = %805, %899, %951, %954
  %957 = add nuw nsw i64 %672, 1
  %958 = load i64, i64* %36, align 8
  %959 = add i64 %958, 3
  %960 = inttoptr i64 %959 to i32*
  %961 = load i32, i32* %960, align 4
  %962 = ashr i32 %961, 1
  %963 = sext i32 %962 to i64
  %964 = icmp slt i64 %957, %963
  br i1 %964, label %671, label %965

965:                                              ; preds = %166, %956, %778, %623, %31
  %966 = phi i1 [ false, %31 ], [ true, %623 ], [ true, %956 ], [ false, %778 ], [ false, %166 ]
  store i32 %34, i32* %33, align 8
  %967 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %968 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %967, align 8
  %969 = icmp eq %"class.v8::internal::RuntimeCallStats"* %968, null
  br i1 %969, label %972, label %970, !prof !3

970:                                              ; preds = %965
  %971 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %968, %"class.v8::internal::RuntimeCallTimer"* %971) #12
  br label %972

972:                                              ; preds = %965, %970
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #12
  ret i1 %966
}

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #4

declare void @_ZN2v88internal6Logger12ApiEntryCallEPKc(%"class.v8::internal::Logger"*, i8*) local_unnamed_addr #4

declare i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_6HandleINS0_10JSReceiverEEENS0_17KeyCollectionModeENS0_14PropertyFilterENS0_17GetKeysConversionEbb(i64*, i32, i32, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #4

declare i64 @_ZN2v88internal7Context10scope_infoEv(%"class.v8::internal::Context"*) local_unnamed_addr #4

declare zeroext i8 @_ZNK2v88internal9ScopeInfo16ContextLocalModeEi(%"class.v8::internal::ScopeInfo"*, i32) local_unnamed_addr #4

declare zeroext i8 @_ZNK2v88internal9ScopeInfo24ContextLocalIsStaticFlagEi(%"class.v8::internal::ScopeInfo"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v85debug12_GLOBAL__N_144CollectPrivateMethodsAndAccessorsFromContextEPNS_8internal7IsolateENS2_6HandleINS2_7ContextEEENS2_12IsStaticFlagEPNSt3__16vectorINS_5LocalINS_5ValueEEENS9_9allocatorISD_EEEESH_(%"class.v8::internal::Isolate"*, i64*, i8 zeroext, %"class.std::__1::vector.1455"*, %"class.std::__1::vector.1455"*) unnamed_addr #0 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %11 = bitcast %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = load i64, i64* %1, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %6, i64 0, i32 0
  %15 = call i64 @_ZN2v88internal7Context10scope_infoEv(%"class.v8::internal::Context"* nonnull %14) #12
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %17 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %16, align 8
  %18 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %5
  %20 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %17, i64 %15) #12
  br label %34

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi i64* [ %28, %27 ], [ %23, %21 ]
  %31 = ptrtoint i64* %30 to i64
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  store i64* %33, i64** %22, align 8
  store i64 %15, i64* %30, align 8
  br label %34

34:                                               ; preds = %19, %29
  %35 = phi i64* [ %20, %19 ], [ %30, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 11
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = ashr i32 %39, 1
  %41 = icmp sgt i32 %39, 1
  br i1 %41, label %42, label %69

42:                                               ; preds = %34
  %43 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %7 to i8*
  %44 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %7, i64 0, i32 0
  %46 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %8 to i8*
  %47 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %8, i64 0, i32 0
  %49 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %9 to i8*
  %50 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %9, i64 0, i32 0
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %54 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %10 to i8*
  %55 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %10, i64 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %3, i64 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"class.v8::Local.2"** %57 to i64*
  %60 = bitcast %"class.std::__1::vector.1455"* %3 to i64*
  %61 = bitcast %"class.v8::Local.2"** %58 to i64*
  %62 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %3, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %4, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"class.v8::Local.2"** %63 to i64*
  %66 = bitcast %"class.std::__1::vector.1455"* %4 to i64*
  %67 = bitcast %"class.v8::Local.2"** %64 to i64*
  %68 = getelementptr inbounds %"class.std::__1::vector.1455", %"class.std::__1::vector.1455"* %4, i64 0, i32 0, i32 0
  br label %70

69:                                               ; preds = %255, %34
  ret void

70:                                               ; preds = %258, %42
  %71 = phi i64 [ %36, %42 ], [ %259, %258 ]
  %72 = phi i32 [ 0, %42 ], [ %256, %258 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #12
  store i64 %71, i64* %44, align 8
  %73 = call zeroext i8 @_ZNK2v88internal9ScopeInfo16ContextLocalModeEi(%"class.v8::internal::ScopeInfo"* nonnull %45, i32 %72) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  %74 = load i64, i64* %35, align 8
  store i64 %74, i64* %47, align 8
  %75 = call zeroext i8 @_ZNK2v88internal9ScopeInfo24ContextLocalIsStaticFlagEi(%"class.v8::internal::ScopeInfo"* nonnull %48, i32 %72) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  %76 = add i8 %73, -7
  %77 = icmp ult i8 %76, 4
  %78 = icmp eq i8 %75, %2
  %79 = and i1 %77, %78
  br i1 %79, label %80, label %255

80:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #12
  %81 = load i64, i64* %35, align 8
  store i64 %81, i64* %50, align 8
  %82 = call i64 @_ZNK2v88internal9ScopeInfo16ContextLocalNameEi(%"class.v8::internal::ScopeInfo"* nonnull %51, i32 %72) #12
  %83 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %16, align 8
  %84 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %80
  %86 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %83, i64 %82) #12
  br label %98

87:                                               ; preds = %80
  %88 = load i64*, i64** %52, align 8
  %89 = load i64*, i64** %53, align 8
  %90 = icmp eq i64* %88, %89
  br i1 %90, label %91, label %93

91:                                               ; preds = %87
  %92 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %93

93:                                               ; preds = %91, %87
  %94 = phi i64* [ %92, %91 ], [ %88, %87 ]
  %95 = ptrtoint i64* %94 to i64
  %96 = add i64 %95, 8
  %97 = inttoptr i64 %96 to i64*
  store i64* %97, i64** %52, align 8
  store i64 %82, i64* %94, align 8
  br label %98

98:                                               ; preds = %85, %93
  %99 = phi i64* [ %86, %85 ], [ %94, %93 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  %100 = load i64, i64* %35, align 8
  store i64 %100, i64* %55, align 8
  %101 = call i32 @_ZNK2v88internal9ScopeInfo19ContextHeaderLengthEv(%"class.v8::internal::ScopeInfo"* nonnull %56) #12
  %102 = add nsw i32 %101, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  %103 = load i64, i64* %1, align 8
  %104 = and i64 %103, -4294967296
  %105 = shl i32 %102, 2
  %106 = sext i32 %105 to i64
  %107 = add i64 %103, 7
  %108 = add i64 %107, %106
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %104, %111
  %113 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %16, align 8
  %114 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %98
  %116 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %113, i64 %112) #12
  br label %128

117:                                              ; preds = %98
  %118 = load i64*, i64** %52, align 8
  %119 = load i64*, i64** %53, align 8
  %120 = icmp eq i64* %118, %119
  br i1 %120, label %121, label %123

121:                                              ; preds = %117
  %122 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %123

123:                                              ; preds = %121, %117
  %124 = phi i64* [ %122, %121 ], [ %118, %117 ]
  %125 = ptrtoint i64* %124 to i64
  %126 = add i64 %125, 8
  %127 = inttoptr i64 %126 to i64*
  store i64* %127, i64** %52, align 8
  store i64 %112, i64* %124, align 8
  br label %128

128:                                              ; preds = %115, %123
  %129 = phi i64* [ %116, %115 ], [ %124, %123 ]
  %130 = ptrtoint i64* %99 to i64
  %131 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %57, align 8
  %132 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %58, align 8
  %133 = icmp ult %"class.v8::Local.2"* %131, %132
  %134 = ptrtoint %"class.v8::Local.2"* %132 to i64
  br i1 %133, label %135, label %139

135:                                              ; preds = %128
  %136 = bitcast %"class.v8::Local.2"* %131 to i64*
  store i64 %130, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %131, i64 1
  %138 = ptrtoint %"class.v8::Local.2"* %137 to i64
  store i64 %138, i64* %59, align 8
  br label %192

139:                                              ; preds = %128
  %140 = ptrtoint %"class.v8::Local.2"* %131 to i64
  %141 = load i64, i64* %60, align 8
  %142 = sub i64 %140, %141
  %143 = ashr exact i64 %142, 3
  %144 = add nsw i64 %143, 1
  %145 = icmp ugt i64 %144, 2305843009213693951
  br i1 %145, label %146, label %148

146:                                              ; preds = %139
  %147 = bitcast %"class.std::__1::vector.1455"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %147) #16
  unreachable

148:                                              ; preds = %139
  %149 = sub i64 %134, %141
  %150 = ashr exact i64 %149, 3
  %151 = icmp ult i64 %150, 1152921504606846975
  br i1 %151, label %152, label %160

152:                                              ; preds = %148
  %153 = ashr exact i64 %149, 2
  %154 = icmp ult i64 %153, %144
  %155 = select i1 %154, i64 %144, i64 %153
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %165, label %157

157:                                              ; preds = %152
  %158 = icmp ugt i64 %155, 2305843009213693951
  br i1 %158, label %159, label %160

159:                                              ; preds = %157
  call void @abort() #16
  unreachable

160:                                              ; preds = %157, %148
  %161 = phi i64 [ %155, %157 ], [ 2305843009213693951, %148 ]
  %162 = shl i64 %161, 3
  %163 = call i8* @_Znwm(i64 %162) #17
  %164 = bitcast i8* %163 to %"class.v8::Local.2"*
  br label %165

165:                                              ; preds = %160, %152
  %166 = phi i64 [ %161, %160 ], [ 0, %152 ]
  %167 = phi %"class.v8::Local.2"* [ %164, %160 ], [ null, %152 ]
  %168 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %167, i64 %143
  %169 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %167, i64 %166
  %170 = ptrtoint %"class.v8::Local.2"* %169 to i64
  %171 = bitcast %"class.v8::Local.2"* %168 to i64*
  store i64 %130, i64* %171, align 8
  %172 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %168, i64 1
  %173 = ptrtoint %"class.v8::Local.2"* %172 to i64
  %174 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %62, align 8
  %175 = load i64, i64* %59, align 8
  %176 = ptrtoint %"class.v8::Local.2"* %174 to i64
  %177 = sub i64 %175, %176
  %178 = ashr exact i64 %177, 3
  %179 = sub nsw i64 0, %178
  %180 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %168, i64 %179
  %181 = ptrtoint %"class.v8::Local.2"* %180 to i64
  %182 = icmp sgt i64 %177, 0
  br i1 %182, label %183, label %187

183:                                              ; preds = %165
  %184 = bitcast %"class.v8::Local.2"* %180 to i8*
  %185 = bitcast %"class.v8::Local.2"* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* align 8 %185, i64 %177, i1 false) #12
  %186 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %62, align 8
  br label %187

187:                                              ; preds = %183, %165
  %188 = phi %"class.v8::Local.2"* [ %174, %165 ], [ %186, %183 ]
  store i64 %181, i64* %60, align 8
  store i64 %173, i64* %59, align 8
  store i64 %170, i64* %61, align 8
  %189 = icmp eq %"class.v8::Local.2"* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  %191 = bitcast %"class.v8::Local.2"* %188 to i8*
  call void @_ZdlPv(i8* %191) #17
  br label %192

192:                                              ; preds = %135, %187, %190
  %193 = ptrtoint i64* %129 to i64
  %194 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %63, align 8
  %195 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %64, align 8
  %196 = icmp ult %"class.v8::Local.2"* %194, %195
  %197 = ptrtoint %"class.v8::Local.2"* %195 to i64
  br i1 %196, label %198, label %202

198:                                              ; preds = %192
  %199 = bitcast %"class.v8::Local.2"* %194 to i64*
  store i64 %193, i64* %199, align 8
  %200 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %194, i64 1
  %201 = ptrtoint %"class.v8::Local.2"* %200 to i64
  store i64 %201, i64* %65, align 8
  br label %255

202:                                              ; preds = %192
  %203 = ptrtoint %"class.v8::Local.2"* %194 to i64
  %204 = load i64, i64* %66, align 8
  %205 = sub i64 %203, %204
  %206 = ashr exact i64 %205, 3
  %207 = add nsw i64 %206, 1
  %208 = icmp ugt i64 %207, 2305843009213693951
  br i1 %208, label %209, label %211

209:                                              ; preds = %202
  %210 = bitcast %"class.std::__1::vector.1455"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %210) #16
  unreachable

211:                                              ; preds = %202
  %212 = sub i64 %197, %204
  %213 = ashr exact i64 %212, 3
  %214 = icmp ult i64 %213, 1152921504606846975
  br i1 %214, label %215, label %223

215:                                              ; preds = %211
  %216 = ashr exact i64 %212, 2
  %217 = icmp ult i64 %216, %207
  %218 = select i1 %217, i64 %207, i64 %216
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %228, label %220

220:                                              ; preds = %215
  %221 = icmp ugt i64 %218, 2305843009213693951
  br i1 %221, label %222, label %223

222:                                              ; preds = %220
  call void @abort() #16
  unreachable

223:                                              ; preds = %220, %211
  %224 = phi i64 [ %218, %220 ], [ 2305843009213693951, %211 ]
  %225 = shl i64 %224, 3
  %226 = call i8* @_Znwm(i64 %225) #17
  %227 = bitcast i8* %226 to %"class.v8::Local.2"*
  br label %228

228:                                              ; preds = %223, %215
  %229 = phi i64 [ %224, %223 ], [ 0, %215 ]
  %230 = phi %"class.v8::Local.2"* [ %227, %223 ], [ null, %215 ]
  %231 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %230, i64 %206
  %232 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %230, i64 %229
  %233 = ptrtoint %"class.v8::Local.2"* %232 to i64
  %234 = bitcast %"class.v8::Local.2"* %231 to i64*
  store i64 %193, i64* %234, align 8
  %235 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %231, i64 1
  %236 = ptrtoint %"class.v8::Local.2"* %235 to i64
  %237 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %68, align 8
  %238 = load i64, i64* %65, align 8
  %239 = ptrtoint %"class.v8::Local.2"* %237 to i64
  %240 = sub i64 %238, %239
  %241 = ashr exact i64 %240, 3
  %242 = sub nsw i64 0, %241
  %243 = getelementptr inbounds %"class.v8::Local.2", %"class.v8::Local.2"* %231, i64 %242
  %244 = ptrtoint %"class.v8::Local.2"* %243 to i64
  %245 = icmp sgt i64 %240, 0
  br i1 %245, label %246, label %250

246:                                              ; preds = %228
  %247 = bitcast %"class.v8::Local.2"* %243 to i8*
  %248 = bitcast %"class.v8::Local.2"* %237 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %248, i64 %240, i1 false) #12
  %249 = load %"class.v8::Local.2"*, %"class.v8::Local.2"** %68, align 8
  br label %250

250:                                              ; preds = %246, %228
  %251 = phi %"class.v8::Local.2"* [ %237, %228 ], [ %249, %246 ]
  store i64 %244, i64* %66, align 8
  store i64 %236, i64* %65, align 8
  store i64 %233, i64* %67, align 8
  %252 = icmp eq %"class.v8::Local.2"* %251, null
  br i1 %252, label %255, label %253

253:                                              ; preds = %250
  %254 = bitcast %"class.v8::Local.2"* %251 to i8*
  call void @_ZdlPv(i8* %254) #17
  br label %255

255:                                              ; preds = %253, %250, %198, %70
  %256 = add nuw nsw i32 %72, 1
  %257 = icmp slt i32 %256, %40
  br i1 %257, label %258, label %69

258:                                              ; preds = %255
  %259 = load i64, i64* %35, align 8
  br label %70
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Context"* @_ZN2v85debug18GetCreationContextENS_5LocalINS_6ObjectEEE(%"class.v8::Object"*) local_unnamed_addr #0 {
  %2 = bitcast %"class.v8::Object"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = and i64 %3, -4294967296
  %8 = add i64 %3, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 190
  br i1 %16, label %19, label %17

17:                                               ; preds = %1, %6
  %18 = tail call %"class.v8::Context"* @_ZN2v86Object18GetCreationContextEv(%"class.v8::Object"* %0) #12
  br label %19

19:                                               ; preds = %6, %17
  %20 = phi %"class.v8::Context"* [ %18, %17 ], [ null, %6 ]
  ret %"class.v8::Context"* %20
}

declare %"class.v8::Context"* @_ZN2v86Object18GetCreationContextEv(%"class.v8::Object"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug22ChangeBreakOnExceptionEPNS_7IsolateENS0_19ExceptionBreakStateE(%"class.v8::Isolate"* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45960
  %4 = bitcast %"class.v8::Isolate"* %3 to %"class.v8::internal::Debug"**
  %5 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %4, align 8
  %6 = icmp eq i32 %1, 2
  tail call void @_ZN2v88internal5Debug22ChangeBreakOnExceptionENS0_18ExceptionBreakTypeEb(%"class.v8::internal::Debug"* %5, i32 0, i1 zeroext %6) #12
  %7 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %4, align 8
  %8 = icmp ne i32 %1, 0
  tail call void @_ZN2v88internal5Debug22ChangeBreakOnExceptionENS0_18ExceptionBreakTypeEb(%"class.v8::internal::Debug"* %7, i32 1, i1 zeroext %8) #12
  ret void
}

declare void @_ZN2v88internal5Debug22ChangeBreakOnExceptionENS0_18ExceptionBreakTypeEb(%"class.v8::internal::Debug"*, i32, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug20SetBreakPointsActiveEPNS_7IsolateEb(%"class.v8::Isolate"*, i1 zeroext) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %4 = bitcast %"class.v8::Isolate"* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45960
  %7 = bitcast %"class.v8::Isolate"* %6 to %"class.v8::internal::Debug"**
  %8 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %7, align 8
  %9 = zext i1 %1 to i8
  %10 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %8, i64 0, i32 6
  store i8 %9, i8* %10, align 1
  store i32 %5, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug11PrepareStepEPNS_7IsolateENS0_10StepActionE(%"class.v8::Isolate"*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %4 = bitcast %"class.v8::Isolate"* %3 to i32*
  %5 = load i32, i32* %4, align 8
  store i32 5, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45960
  %7 = bitcast %"class.v8::Isolate"* %6 to %"class.v8::internal::Debug"**
  %8 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %8, i64 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13, !prof !2

12:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

13:                                               ; preds = %2
  tail call void @_ZN2v88internal5Debug13ClearSteppingEv(%"class.v8::internal::Debug"* %8) #12
  %14 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %7, align 8
  %15 = trunc i32 %1 to i8
  tail call void @_ZN2v88internal5Debug11PrepareStepENS0_10StepActionE(%"class.v8::internal::Debug"* %14, i8 signext %15) #12
  store i32 %5, i32* %4, align 8
  ret void
}

declare void @_ZN2v88internal5Debug13ClearSteppingEv(%"class.v8::internal::Debug"*) local_unnamed_addr #4

declare void @_ZN2v88internal5Debug11PrepareStepENS0_10StepActionE(%"class.v8::internal::Debug"*, i8 signext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug13ClearSteppingEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %3 = bitcast %"class.v8::Isolate"* %2 to i32*
  %4 = load i32, i32* %3, align 8
  store i32 5, i32* %3, align 8
  %5 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45960
  %6 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Debug"**
  %7 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %6, align 8
  tail call void @_ZN2v88internal5Debug13ClearSteppingEv(%"class.v8::internal::Debug"* %7) #12
  store i32 %4, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug13BreakRightNowEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %3 = bitcast %"class.v8::Isolate"* %2 to i32*
  %4 = load i32, i32* %3, align 8
  store i32 5, i32* %3, align 8
  %5 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45960
  %6 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Debug"**
  %7 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %6, align 8
  tail call void @_ZN2v88internal5Debug16HandleDebugBreakENS0_15IgnoreBreakModeE(%"class.v8::internal::Debug"* %7, i32 0) #12
  store i32 %4, i32* %3, align 8
  ret void
}

declare void @_ZN2v88internal5Debug16HandleDebugBreakENS0_15IgnoreBreakModeE(%"class.v8::internal::Debug"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug20SetTerminateOnResumeEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %3 = bitcast %"class.v8::Isolate"* %2 to i32*
  %4 = load i32, i32* %3, align 8
  store i32 5, i32* %3, align 8
  %5 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45960
  %6 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Debug"**
  %7 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %6, align 8
  tail call void @_ZN2v88internal5Debug20SetTerminateOnResumeEv(%"class.v8::internal::Debug"* %7) #12
  store i32 %4, i32* %3, align 8
  ret void
}

declare void @_ZN2v88internal5Debug20SetTerminateOnResumeEv(%"class.v8::internal::Debug"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v85debug15CanBreakProgramEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %3 = bitcast %"class.v8::Isolate"* %2 to i32*
  %4 = load i32, i32* %3, align 8
  store i32 5, i32* %3, align 8
  %5 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45712
  %6 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::RegExpStack"**
  %7 = load %"class.v8::internal::RegExpStack"*, %"class.v8::internal::RegExpStack"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::RegExpStack", %"class.v8::internal::RegExpStack"* %7, i64 0, i32 1, i32 5
  %9 = load i8, i8* %8, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45960
  %13 = bitcast %"class.v8::Isolate"* %12 to %"class.v8::internal::Debug"**
  %14 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %13, align 8
  %15 = tail call zeroext i1 @_ZN2v88internal5Debug29AllFramesOnStackAreBlackboxedEv(%"class.v8::internal::Debug"* %14) #12
  br label %16

16:                                               ; preds = %1, %11
  %17 = phi i1 [ false, %1 ], [ %15, %11 ]
  store i32 %4, i32* %3, align 8
  ret i1 %17
}

declare zeroext i1 @_ZN2v88internal5Debug29AllFramesOnStackAreBlackboxedEv(%"class.v8::internal::Debug"*) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.v8::Isolate"* @_ZNK2v85debug6Script10GetIsolateEv(%"class.v8::debug::Script"*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::Isolate"*
  ret %"class.v8::Isolate"* %9
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug6Script13OriginOptionsEv(%"class.v8::debug::Script"*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 47
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = lshr i32 %6, 4
  %8 = and i32 %7, 15
  ret i32 %8
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v85debug6Script11WasCompiledEv(%"class.v8::debug::Script"*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 47
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 4
  %8 = icmp ne i32 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v85debug6Script10IsEmbeddedEv(%"class.v8::debug::Script"*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 19
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %8 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %7, i64 0, i32 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %7, i64 0, i32 1, i64 0
  br label %23

15:                                               ; preds = %9, %1
  %16 = and i64 %3, -262144
  %17 = or i64 %16, 16
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 16
  %20 = add i64 %19, -41416
  %21 = inttoptr i64 %20 to %"class.v8::internal::Isolate"*
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %23

23:                                               ; preds = %13, %15
  %24 = phi i64* [ %22, %15 ], [ %14, %13 ]
  %25 = getelementptr inbounds i64, i64* %24, i64 508
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %6, %27
  ret i1 %28
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug6Script2IdEv(%"class.v8::debug::Script"*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 31
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = ashr i32 %6, 1
  ret i32 %7
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug6Script10LineOffsetEv(%"class.v8::debug::Script"*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 11
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = ashr i32 %6, 1
  ret i32 %7
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug6Script12ColumnOffsetEv(%"class.v8::debug::Script"*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 15
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = ashr i32 %6, 1
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v85debug6Script8LineEndsEv(%"class.std::__1::vector.817"* noalias nocapture sret, %"class.v8::debug::Script"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.817", align 8
  %4 = bitcast %"class.v8::debug::Script"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, -2
  %10 = icmp eq i32 %9, 6
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::vector.817"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #12
  br label %165

13:                                               ; preds = %2
  %14 = and i64 %5, -262144
  %15 = or i64 %14, 16
  %16 = inttoptr i64 %15 to i64*
  %17 = load i64, i64* %16, align 16
  %18 = add i64 %17, -41416
  %19 = inttoptr i64 %18 to %"class.v8::internal::Isolate"*
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 31
  %21 = bitcast %"struct.v8::internal::HandleScopeData"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 31, i32 1
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 31, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 8
  tail call void @_ZN2v88internal6Script12InitLineEndsINS0_7IsolateEEEvPT_NS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %19, i64* %4) #12
  %28 = load i64, i64* %4, align 8
  %29 = and i64 %28, -4294967296
  %30 = add i64 %28, 27
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %29, %33
  %35 = add i64 %34, -1
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %29, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = add i16 %42, -119
  %44 = icmp ult i16 %43, 13
  br i1 %44, label %46, label %45, !prof !3

45:                                               ; preds = %13
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0)) #16
  unreachable

46:                                               ; preds = %13
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 31, i32 4
  %48 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %47, align 8
  %49 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %48, i64 %34) #12
  %52 = load i64, i64* %51, align 8
  br label %65

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 31, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = load i64*, i64** %23, align 8
  %57 = icmp eq i64* %55, %56
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %19) #12
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i64* [ %59, %58 ], [ %55, %53 ]
  %62 = ptrtoint i64* %61 to i64
  %63 = add i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  store i64* %64, i64** %54, align 8
  store i64 %34, i64* %61, align 8
  br label %65

65:                                               ; preds = %50, %60
  %66 = phi i64 [ %52, %50 ], [ %34, %60 ]
  %67 = phi i64* [ %51, %50 ], [ %61, %60 ]
  %68 = bitcast %"class.std::__1::vector.817"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #12
  %69 = add i64 %66, 3
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = ashr i32 %71, 1
  %73 = sext i32 %72 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 24, i1 false) #12
  %74 = icmp eq i32 %72, 0
  br i1 %74, label %96, label %75

75:                                               ; preds = %65
  %76 = icmp slt i32 %71, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::vector.817"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %78) #16
  unreachable

79:                                               ; preds = %75
  %80 = shl nsw i64 %73, 2
  %81 = tail call i8* @_Znwm(i64 %80) #17
  %82 = bitcast i8* %81 to i32*
  %83 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 1
  %84 = bitcast %"class.std::__1::vector.817"* %3 to i8**
  store i8* %81, i8** %84, align 8
  %85 = getelementptr inbounds i32, i32* %82, i64 %73
  %86 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %85, i32** %86, align 8
  %87 = bitcast i32** %83 to i64*
  %88 = ptrtoint i8* %81 to i64
  %89 = add nsw i64 %73, -1
  %90 = getelementptr i32, i32* %82, i64 %89
  %91 = ptrtoint i32* %90 to i64
  %92 = sub i64 4, %88
  %93 = add i64 %92, %91
  %94 = and i64 %93, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %81, i8 0, i64 %94, i1 false) #12
  %95 = ptrtoint i32* %85 to i64
  store i64 %95, i64* %87, align 8
  br label %96

96:                                               ; preds = %65, %79
  %97 = phi i64 [ 0, %65 ], [ %95, %79 ]
  %98 = phi i64 [ 0, %65 ], [ %88, %79 ]
  %99 = phi i32* [ null, %65 ], [ %82, %79 ]
  %100 = load i64, i64* %67, align 8
  %101 = add i64 %100, 3
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = icmp sgt i32 %103, 1
  %105 = insertelement <2 x i64> undef, i64 %97, i32 0
  %106 = shufflevector <2 x i64> %105, <2 x i64> undef, <2 x i32> zeroinitializer
  br i1 %104, label %107, label %124

107:                                              ; preds = %96
  %108 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 0
  %109 = add i64 %100, 7
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = ashr i32 %111, 1
  store i32 %112, i32* %99, align 4
  %113 = load i64, i64* %67, align 8
  %114 = add i64 %113, 3
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = icmp sgt i32 %116, 3
  br i1 %117, label %144, label %118

118:                                              ; preds = %144, %107
  %119 = bitcast %"class.std::__1::vector.817"* %3 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %3, i64 0, i32 0, i32 1
  %122 = bitcast i32** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8
  br label %124

124:                                              ; preds = %118, %96
  %125 = phi i64 [ %120, %118 ], [ %98, %96 ]
  %126 = phi <2 x i64> [ %123, %118 ], [ %106, %96 ]
  %127 = bitcast %"class.std::__1::vector.817"* %0 to i64*
  store i64 %125, i64* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::vector.817", %"class.std::__1::vector.817"* %0, i64 0, i32 0, i32 1
  %129 = bitcast i32** %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #12
  %130 = icmp eq i64 %18, 0
  br i1 %130, label %165, label %131

131:                                              ; preds = %124
  %132 = inttoptr i64 %22 to i64*
  %133 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %20, i64 0, i32 0
  %134 = load i64*, i64** %133, align 8
  store i64 %22, i64* %21, align 8
  %135 = load i32, i32* %25, align 8
  %136 = add nsw i32 %135, -1
  store i32 %136, i32* %25, align 8
  %137 = load i64*, i64** %23, align 8
  %138 = icmp eq i64* %137, %24
  br i1 %138, label %141, label %139

139:                                              ; preds = %131
  store i64* %24, i64** %23, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %19) #12
  %140 = load i64*, i64** %133, align 8
  br label %141

141:                                              ; preds = %139, %131
  %142 = phi i64* [ %140, %139 ], [ %132, %131 ]
  %143 = phi i64* [ %24, %139 ], [ %134, %131 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %142, i64* %143) #12
  br label %165

144:                                              ; preds = %107, %144
  %145 = phi i64 [ %158, %144 ], [ %113, %107 ]
  %146 = phi i64 [ %157, %144 ], [ 1, %107 ]
  %147 = load i32*, i32** %108, align 8
  %148 = trunc i64 %146 to i32
  %149 = shl i32 %148, 2
  %150 = sext i32 %149 to i64
  %151 = add i64 %145, 7
  %152 = add i64 %151, %150
  %153 = inttoptr i64 %152 to i32*
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = ashr i32 %154, 1
  %156 = getelementptr inbounds i32, i32* %147, i64 %146
  store i32 %155, i32* %156, align 4
  %157 = add nuw nsw i64 %146, 1
  %158 = load i64, i64* %67, align 8
  %159 = add i64 %158, 3
  %160 = inttoptr i64 %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = ashr i32 %161, 1
  %163 = sext i32 %162 to i64
  %164 = icmp slt i64 %157, %163
  br i1 %164, label %144, label %118

165:                                              ; preds = %141, %124, %11
  ret void
}

declare void @_ZN2v88internal6Script12InitLineEndsINS0_7IsolateEEEvPT_NS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::String"* @_ZNK2v85debug6Script4NameEv(%"class.v8::debug::Script"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %14 = bitcast i64** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = load i64, i64* %2, align 8
  %20 = and i64 %19, -4294967296
  %21 = add i64 %19, 7
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %27 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %28 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %27, null
  %29 = inttoptr i64 %12 to i64*
  %30 = inttoptr i64 %15 to i64*
  br i1 %28, label %34, label %31

31:                                               ; preds = %1
  %32 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %27, i64 %25) #12
  %33 = load i64, i64* %32, align 8
  br label %44

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %36 = icmp eq i64* %29, %30
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #12
  br label %39

39:                                               ; preds = %37, %34
  %40 = phi i64* [ %38, %37 ], [ %29, %34 ]
  %41 = ptrtoint i64* %40 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  store i64* %43, i64** %35, align 8
  store i64 %25, i64* %40, align 8
  br label %44

44:                                               ; preds = %31, %39
  %45 = phi i64 [ %33, %31 ], [ %25, %39 ]
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %94, label %48

48:                                               ; preds = %44
  %49 = and i64 %45, -4294967296
  %50 = add i64 %45, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %49, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = icmp ult i16 %57, 64
  br i1 %58, label %59, label %94

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %61 = load i64*, i64** %60, align 8
  store i64 %12, i64* %11, align 8
  %62 = load i32, i32* %16, align 8
  %63 = add nsw i32 %62, -1
  store i32 %63, i32* %16, align 8
  %64 = load i64*, i64** %13, align 8
  %65 = icmp eq i64* %64, %30
  br i1 %65, label %68, label %66

66:                                               ; preds = %59
  store i64* %30, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #12
  %67 = load i64*, i64** %60, align 8
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i64* [ %67, %66 ], [ %29, %59 ]
  %70 = phi i64* [ %30, %66 ], [ %61, %59 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %69, i64* %70) #12
  %71 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %72 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %71, i64 %45) #12
  br label %87

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = load i64*, i64** %13, align 8
  %79 = icmp eq i64* %77, %78
  br i1 %79, label %80, label %82

80:                                               ; preds = %75
  %81 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #12
  br label %82

82:                                               ; preds = %80, %75
  %83 = phi i64* [ %81, %80 ], [ %77, %75 ]
  %84 = ptrtoint i64* %83 to i64
  %85 = add i64 %84, 8
  %86 = inttoptr i64 %85 to i64*
  store i64* %86, i64** %76, align 8
  store i64 %45, i64* %83, align 8
  br label %87

87:                                               ; preds = %73, %82
  %88 = phi i64* [ %74, %73 ], [ %83, %82 ]
  %89 = load i64, i64* %11, align 8
  %90 = load i64, i64* %14, align 8
  %91 = load i32, i32* %16, align 8
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %16, align 8
  %93 = bitcast i64* %88 to %"class.v8::String"*
  br label %94

94:                                               ; preds = %44, %48, %87
  %95 = phi i64 [ %89, %87 ], [ %12, %48 ], [ %12, %44 ]
  %96 = phi i64 [ %90, %87 ], [ %15, %48 ], [ %15, %44 ]
  %97 = phi %"class.v8::String"* [ %93, %87 ], [ null, %48 ], [ null, %44 ]
  %98 = icmp eq i64 %8, 0
  br i1 %98, label %113, label %99

99:                                               ; preds = %94
  %100 = inttoptr i64 %95 to i64*
  %101 = inttoptr i64 %96 to i64*
  %102 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %103 = load i64*, i64** %102, align 8
  store i64 %95, i64* %11, align 8
  %104 = load i32, i32* %16, align 8
  %105 = add nsw i32 %104, -1
  store i32 %105, i32* %16, align 8
  %106 = load i64*, i64** %13, align 8
  %107 = icmp eq i64* %106, %101
  br i1 %107, label %110, label %108

108:                                              ; preds = %99
  store i64* %101, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %9) #12
  %109 = load i64*, i64** %102, align 8
  br label %110

110:                                              ; preds = %108, %99
  %111 = phi i64* [ %109, %108 ], [ %100, %99 ]
  %112 = phi i64* [ %101, %108 ], [ %103, %99 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %111, i64* %112) #12
  br label %113

113:                                              ; preds = %94, %110
  ret %"class.v8::String"* %97
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::String"* @_ZNK2v85debug6Script9SourceURLEv(%"class.v8::debug::Script"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %14 = bitcast i64** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = load i64, i64* %2, align 8
  %20 = and i64 %19, -4294967296
  %21 = add i64 %19, 51
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %27 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %28 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %27, null
  %29 = inttoptr i64 %12 to i64*
  %30 = inttoptr i64 %15 to i64*
  br i1 %28, label %34, label %31

31:                                               ; preds = %1
  %32 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %27, i64 %25) #12
  %33 = load i64, i64* %32, align 8
  br label %44

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %36 = icmp eq i64* %29, %30
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #12
  br label %39

39:                                               ; preds = %37, %34
  %40 = phi i64* [ %38, %37 ], [ %29, %34 ]
  %41 = ptrtoint i64* %40 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  store i64* %43, i64** %35, align 8
  store i64 %25, i64* %40, align 8
  br label %44

44:                                               ; preds = %31, %39
  %45 = phi i64 [ %33, %31 ], [ %25, %39 ]
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %94, label %48

48:                                               ; preds = %44
  %49 = and i64 %45, -4294967296
  %50 = add i64 %45, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %49, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = icmp ult i16 %57, 64
  br i1 %58, label %59, label %94

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %61 = load i64*, i64** %60, align 8
  store i64 %12, i64* %11, align 8
  %62 = load i32, i32* %16, align 8
  %63 = add nsw i32 %62, -1
  store i32 %63, i32* %16, align 8
  %64 = load i64*, i64** %13, align 8
  %65 = icmp eq i64* %64, %30
  br i1 %65, label %68, label %66

66:                                               ; preds = %59
  store i64* %30, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #12
  %67 = load i64*, i64** %60, align 8
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i64* [ %67, %66 ], [ %29, %59 ]
  %70 = phi i64* [ %30, %66 ], [ %61, %59 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %69, i64* %70) #12
  %71 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %72 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %71, i64 %45) #12
  br label %87

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = load i64*, i64** %13, align 8
  %79 = icmp eq i64* %77, %78
  br i1 %79, label %80, label %82

80:                                               ; preds = %75
  %81 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #12
  br label %82

82:                                               ; preds = %80, %75
  %83 = phi i64* [ %81, %80 ], [ %77, %75 ]
  %84 = ptrtoint i64* %83 to i64
  %85 = add i64 %84, 8
  %86 = inttoptr i64 %85 to i64*
  store i64* %86, i64** %76, align 8
  store i64 %45, i64* %83, align 8
  br label %87

87:                                               ; preds = %73, %82
  %88 = phi i64* [ %74, %73 ], [ %83, %82 ]
  %89 = load i64, i64* %11, align 8
  %90 = load i64, i64* %14, align 8
  %91 = load i32, i32* %16, align 8
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %16, align 8
  %93 = bitcast i64* %88 to %"class.v8::String"*
  br label %94

94:                                               ; preds = %44, %48, %87
  %95 = phi i64 [ %89, %87 ], [ %12, %48 ], [ %12, %44 ]
  %96 = phi i64 [ %90, %87 ], [ %15, %48 ], [ %15, %44 ]
  %97 = phi %"class.v8::String"* [ %93, %87 ], [ null, %48 ], [ null, %44 ]
  %98 = icmp eq i64 %8, 0
  br i1 %98, label %113, label %99

99:                                               ; preds = %94
  %100 = inttoptr i64 %95 to i64*
  %101 = inttoptr i64 %96 to i64*
  %102 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %103 = load i64*, i64** %102, align 8
  store i64 %95, i64* %11, align 8
  %104 = load i32, i32* %16, align 8
  %105 = add nsw i32 %104, -1
  store i32 %105, i32* %16, align 8
  %106 = load i64*, i64** %13, align 8
  %107 = icmp eq i64* %106, %101
  br i1 %107, label %110, label %108

108:                                              ; preds = %99
  store i64* %101, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %9) #12
  %109 = load i64*, i64** %102, align 8
  br label %110

110:                                              ; preds = %108, %99
  %111 = phi i64* [ %109, %108 ], [ %100, %99 ]
  %112 = phi i64* [ %101, %108 ], [ %103, %99 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %111, i64* %112) #12
  br label %113

113:                                              ; preds = %94, %110
  ret %"class.v8::String"* %97
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::String"* @_ZNK2v85debug6Script16SourceMappingURLEv(%"class.v8::debug::Script"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %14 = bitcast i64** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = load i64, i64* %2, align 8
  %20 = and i64 %19, -4294967296
  %21 = add i64 %19, 55
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %27 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %28 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %27, null
  %29 = inttoptr i64 %12 to i64*
  %30 = inttoptr i64 %15 to i64*
  br i1 %28, label %34, label %31

31:                                               ; preds = %1
  %32 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %27, i64 %25) #12
  %33 = load i64, i64* %32, align 8
  br label %44

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %36 = icmp eq i64* %29, %30
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #12
  br label %39

39:                                               ; preds = %37, %34
  %40 = phi i64* [ %38, %37 ], [ %29, %34 ]
  %41 = ptrtoint i64* %40 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  store i64* %43, i64** %35, align 8
  store i64 %25, i64* %40, align 8
  br label %44

44:                                               ; preds = %31, %39
  %45 = phi i64 [ %33, %31 ], [ %25, %39 ]
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %94, label %48

48:                                               ; preds = %44
  %49 = and i64 %45, -4294967296
  %50 = add i64 %45, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %49, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = icmp ult i16 %57, 64
  br i1 %58, label %59, label %94

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %61 = load i64*, i64** %60, align 8
  store i64 %12, i64* %11, align 8
  %62 = load i32, i32* %16, align 8
  %63 = add nsw i32 %62, -1
  store i32 %63, i32* %16, align 8
  %64 = load i64*, i64** %13, align 8
  %65 = icmp eq i64* %64, %30
  br i1 %65, label %68, label %66

66:                                               ; preds = %59
  store i64* %30, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #12
  %67 = load i64*, i64** %60, align 8
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i64* [ %67, %66 ], [ %29, %59 ]
  %70 = phi i64* [ %30, %66 ], [ %61, %59 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %69, i64* %70) #12
  %71 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %72 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %71, i64 %45) #12
  br label %87

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = load i64*, i64** %13, align 8
  %79 = icmp eq i64* %77, %78
  br i1 %79, label %80, label %82

80:                                               ; preds = %75
  %81 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #12
  br label %82

82:                                               ; preds = %80, %75
  %83 = phi i64* [ %81, %80 ], [ %77, %75 ]
  %84 = ptrtoint i64* %83 to i64
  %85 = add i64 %84, 8
  %86 = inttoptr i64 %85 to i64*
  store i64* %86, i64** %76, align 8
  store i64 %45, i64* %83, align 8
  br label %87

87:                                               ; preds = %73, %82
  %88 = phi i64* [ %74, %73 ], [ %83, %82 ]
  %89 = load i64, i64* %11, align 8
  %90 = load i64, i64* %14, align 8
  %91 = load i32, i32* %16, align 8
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %16, align 8
  %93 = bitcast i64* %88 to %"class.v8::String"*
  br label %94

94:                                               ; preds = %44, %48, %87
  %95 = phi i64 [ %89, %87 ], [ %12, %48 ], [ %12, %44 ]
  %96 = phi i64 [ %90, %87 ], [ %15, %48 ], [ %15, %44 ]
  %97 = phi %"class.v8::String"* [ %93, %87 ], [ null, %48 ], [ null, %44 ]
  %98 = icmp eq i64 %8, 0
  br i1 %98, label %113, label %99

99:                                               ; preds = %94
  %100 = inttoptr i64 %95 to i64*
  %101 = inttoptr i64 %96 to i64*
  %102 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %103 = load i64*, i64** %102, align 8
  store i64 %95, i64* %11, align 8
  %104 = load i32, i32* %16, align 8
  %105 = add nsw i32 %104, -1
  store i32 %105, i32* %16, align 8
  %106 = load i64*, i64** %13, align 8
  %107 = icmp eq i64* %106, %101
  br i1 %107, label %110, label %108

108:                                              ; preds = %99
  store i64* %101, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %9) #12
  %109 = load i64*, i64** %102, align 8
  br label %110

110:                                              ; preds = %108, %99
  %111 = phi i64* [ %109, %108 ], [ %100, %99 ]
  %112 = phi i64* [ %101, %108 ], [ %103, %99 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %111, i64* %112) #12
  br label %113

113:                                              ; preds = %94, %110
  ret %"class.v8::String"* %97
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v85debug6Script9ContextIdEv(%"class.v8::debug::Script"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = load i64, i64* %2, align 8
  %16 = add i64 %15, 19
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %1
  %22 = ashr i32 %18, 1
  %23 = zext i32 %22 to i64
  %24 = shl nuw i64 %23, 32
  %25 = or i64 %24, 1
  br label %26

26:                                               ; preds = %1, %21
  %27 = phi i64 [ %25, %21 ], [ 0, %1 ]
  %28 = icmp eq i64 %8, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  store i32 %13, i32* %12, align 8
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %11, i64* %11) #12
  br label %30

30:                                               ; preds = %26, %29
  ret i64 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::String"* @_ZNK2v85debug6Script6SourceEv(%"class.v8::debug::Script"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %14 = bitcast i64** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = load i64, i64* %2, align 8
  %20 = and i64 %19, -4294967296
  %21 = add i64 %19, 3
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %27 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %28 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %27, null
  %29 = inttoptr i64 %12 to i64*
  %30 = inttoptr i64 %15 to i64*
  br i1 %28, label %34, label %31

31:                                               ; preds = %1
  %32 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %27, i64 %25) #12
  %33 = load i64, i64* %32, align 8
  br label %44

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %36 = icmp eq i64* %29, %30
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #12
  br label %39

39:                                               ; preds = %37, %34
  %40 = phi i64* [ %38, %37 ], [ %29, %34 ]
  %41 = ptrtoint i64* %40 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  store i64* %43, i64** %35, align 8
  store i64 %25, i64* %40, align 8
  br label %44

44:                                               ; preds = %31, %39
  %45 = phi i64 [ %33, %31 ], [ %25, %39 ]
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %94, label %48

48:                                               ; preds = %44
  %49 = and i64 %45, -4294967296
  %50 = add i64 %45, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %49, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = icmp ult i16 %57, 64
  br i1 %58, label %59, label %94

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %61 = load i64*, i64** %60, align 8
  store i64 %12, i64* %11, align 8
  %62 = load i32, i32* %16, align 8
  %63 = add nsw i32 %62, -1
  store i32 %63, i32* %16, align 8
  %64 = load i64*, i64** %13, align 8
  %65 = icmp eq i64* %64, %30
  br i1 %65, label %68, label %66

66:                                               ; preds = %59
  store i64* %30, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #12
  %67 = load i64*, i64** %60, align 8
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i64* [ %67, %66 ], [ %29, %59 ]
  %70 = phi i64* [ %30, %66 ], [ %61, %59 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %69, i64* %70) #12
  %71 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %72 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %71, i64 %45) #12
  br label %87

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = load i64*, i64** %13, align 8
  %79 = icmp eq i64* %77, %78
  br i1 %79, label %80, label %82

80:                                               ; preds = %75
  %81 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #12
  br label %82

82:                                               ; preds = %80, %75
  %83 = phi i64* [ %81, %80 ], [ %77, %75 ]
  %84 = ptrtoint i64* %83 to i64
  %85 = add i64 %84, 8
  %86 = inttoptr i64 %85 to i64*
  store i64* %86, i64** %76, align 8
  store i64 %45, i64* %83, align 8
  br label %87

87:                                               ; preds = %73, %82
  %88 = phi i64* [ %74, %73 ], [ %83, %82 ]
  %89 = load i64, i64* %11, align 8
  %90 = load i64, i64* %14, align 8
  %91 = load i32, i32* %16, align 8
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %16, align 8
  %93 = bitcast i64* %88 to %"class.v8::String"*
  br label %94

94:                                               ; preds = %44, %48, %87
  %95 = phi i64 [ %89, %87 ], [ %12, %48 ], [ %12, %44 ]
  %96 = phi i64 [ %90, %87 ], [ %15, %48 ], [ %15, %44 ]
  %97 = phi %"class.v8::String"* [ %93, %87 ], [ null, %48 ], [ null, %44 ]
  %98 = icmp eq i64 %8, 0
  br i1 %98, label %113, label %99

99:                                               ; preds = %94
  %100 = inttoptr i64 %95 to i64*
  %101 = inttoptr i64 %96 to i64*
  %102 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %103 = load i64*, i64** %102, align 8
  store i64 %95, i64* %11, align 8
  %104 = load i32, i32* %16, align 8
  %105 = add nsw i32 %104, -1
  store i32 %105, i32* %16, align 8
  %106 = load i64*, i64** %13, align 8
  %107 = icmp eq i64* %106, %101
  br i1 %107, label %110, label %108

108:                                              ; preds = %99
  store i64* %101, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %9) #12
  %109 = load i64*, i64** %102, align 8
  br label %110

110:                                              ; preds = %108, %99
  %111 = phi i64* [ %109, %108 ], [ %100, %99 ]
  %112 = phi i64* [ %101, %108 ], [ %103, %99 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %111, i64* %112) #12
  br label %113

113:                                              ; preds = %94, %110
  ret %"class.v8::String"* %97
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v85debug6Script6IsWasmEv(%"class.v8::debug::Script"*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 23
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, -2
  %8 = icmp eq i32 %7, 6
  ret i1 %8
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v85debug6Script8IsModuleEv(%"class.v8::debug::Script"*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 47
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = trunc i32 %6 to i8
  %8 = icmp slt i8 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v85debug6Script22GetPossibleBreakpointsERKNS0_8LocationES4_bPNSt3__16vectorINS0_13BreakLocationENS5_9allocatorIS7_EEEE(%"class.v8::debug::Script"*, %"class.v8::debug::Location"* dereferenceable(12), %"class.v8::debug::Location"* dereferenceable(12), i1 zeroext, %"class.std::__1::vector.1471"*) local_unnamed_addr #0 align 2 {
  %6 = alloca i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, align 8
  %7 = alloca %"class.std::__1::vector.1567", align 8
  %8 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %1, i64 0, i32 2
  %9 = load i8, i8* %8, align 4, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

12:                                               ; preds = %5
  %13 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 23
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, -2
  %19 = icmp eq i32 %18, 6
  br i1 %19, label %20, label %36

20:                                               ; preds = %12
  %21 = and i64 %14, -4294967296
  %22 = add i64 %14, 39
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 3
  %28 = inttoptr i64 %27 to %"struct.v8::internal::ManagedPtrDestructor"**
  %29 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %28, align 1
  %30 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %29, i64 0, i32 3
  %31 = bitcast i8** %30 to %"class.std::__1::shared_ptr.1728"**
  %32 = load %"class.std::__1::shared_ptr.1728"*, %"class.std::__1::shared_ptr.1728"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::shared_ptr.1728", %"class.std::__1::shared_ptr.1728"* %32, i64 0, i32 0
  %34 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %33, align 8
  %35 = tail call zeroext i1 @_ZN2v88internal10WasmScript22GetPossibleBreakpointsEPNS0_4wasm12NativeModuleERKNS_5debug8LocationES8_PNSt3__16vectorINS5_13BreakLocationENS9_9allocatorISB_EEEE(%"class.v8::internal::wasm::NativeModule"* %34, %"class.v8::debug::Location"* dereferenceable(12) %1, %"class.v8::debug::Location"* dereferenceable(12) %2, %"class.std::__1::vector.1471"* %4) #12
  br label %274

36:                                               ; preds = %12
  %37 = and i64 %14, -262144
  %38 = or i64 %37, 16
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 16
  %41 = add i64 %40, -41416
  %42 = inttoptr i64 %41 to %"class.v8::internal::Isolate"*
  tail call void @_ZN2v88internal6Script12InitLineEndsINS0_7IsolateEEEvPT_NS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %42, i64* %13) #12
  %43 = load i64, i64* %13, align 8
  %44 = and i64 %43, -4294967296
  %45 = add i64 %43, 27
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %44, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = add i16 %57, -119
  %59 = icmp ult i16 %58, 13
  br i1 %59, label %61, label %60, !prof !3

60:                                               ; preds = %36
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0)) #16
  unreachable

61:                                               ; preds = %36
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %42, i64 0, i32 31, i32 4
  %63 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %62, align 8
  %64 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %61
  %66 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %63, i64 %49) #12
  %67 = load i64, i64* %66, align 8
  br label %81

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %42, i64 0, i32 31, i32 0
  %70 = load i64*, i64** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %42, i64 0, i32 31, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = icmp eq i64* %70, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %68
  %75 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %42) #12
  br label %76

76:                                               ; preds = %74, %68
  %77 = phi i64* [ %75, %74 ], [ %70, %68 ]
  %78 = ptrtoint i64* %77 to i64
  %79 = add i64 %78, 8
  %80 = inttoptr i64 %79 to i64*
  store i64* %80, i64** %69, align 8
  store i64 %49, i64* %77, align 8
  br label %81

81:                                               ; preds = %65, %76
  %82 = phi i64 [ %67, %65 ], [ %49, %76 ]
  %83 = phi i64* [ %66, %65 ], [ %77, %76 ]
  %84 = add i64 %82, 3
  %85 = inttoptr i64 %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = icmp ult i32 %86, 2
  br i1 %87, label %88, label %89, !prof !2

88:                                               ; preds = %81
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #16
  unreachable

89:                                               ; preds = %81
  %90 = tail call i32 @_ZNK2v85debug6Script15GetSourceOffsetERKNS0_8LocationE(%"class.v8::debug::Script"* %0, %"class.v8::debug::Location"* dereferenceable(12) %1)
  %91 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %2, i64 0, i32 2
  %92 = load i8, i8* %91, align 4, !range !4
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %109, label %94

94:                                               ; preds = %89
  %95 = load i64, i64* %83, align 8
  %96 = add i64 %95, 3
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = lshr i32 %98, 1
  %100 = shl i32 %99, 2
  %101 = add i32 %100, -4
  %102 = sext i32 %101 to i64
  %103 = add i64 %95, 7
  %104 = add i64 %103, %102
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = ashr i32 %106, 1
  %108 = add nsw i32 %107, 1
  br label %111

109:                                              ; preds = %89
  %110 = tail call i32 @_ZNK2v85debug6Script15GetSourceOffsetERKNS0_8LocationE(%"class.v8::debug::Script"* %0, %"class.v8::debug::Location"* dereferenceable(12) %2)
  br label %111

111:                                              ; preds = %109, %94
  %112 = phi i32 [ %108, %94 ], [ %110, %109 ]
  %113 = icmp slt i32 %90, %112
  br i1 %113, label %114, label %274

114:                                              ; preds = %111
  %115 = bitcast %"class.std::__1::vector.1567"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 0, i64 24, i1 false) #12
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %42, i64 0, i32 68
  %117 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %116, align 8
  %118 = call zeroext i1 @_ZN2v88internal5Debug22GetPossibleBreakpointsENS0_6HandleINS0_6ScriptEEEiibPNSt3__16vectorINS0_13BreakLocationENS5_9allocatorIS7_EEEE(%"class.v8::internal::Debug"* %117, i64* %13, i32 %90, i32 %112, i1 zeroext %3, %"class.std::__1::vector.1567"* nonnull %7) #12
  br i1 %118, label %119, label %263

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.std::__1::vector.1567", %"class.std::__1::vector.1567"* %7, i64 0, i32 0, i32 0
  %121 = load %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"** %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::vector.1567", %"class.std::__1::vector.1567"* %7, i64 0, i32 0, i32 1
  %123 = load %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"** %122, align 8
  %124 = bitcast i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124)
  store i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)* @_ZN2v85debug12_GLOBAL__N_120CompareBreakLocationERKNS_8internal13BreakLocationES5_, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %6, align 8
  call void @_ZNSt3__16__sortIRPFbRKN2v88internal13BreakLocationES5_EPS3_EEvT0_SA_T_(%"class.v8::internal::BreakLocation"* %121, %"class.v8::internal::BreakLocation"* %123, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** nonnull dereferenceable(8) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124)
  %125 = load %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"** %120, align 8
  %126 = load %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"** %122, align 8
  %127 = icmp eq %"class.v8::internal::BreakLocation"* %125, %126
  br i1 %127, label %263, label %128

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.std::__1::vector.1471", %"class.std::__1::vector.1471"* %4, i64 0, i32 0, i32 1
  %130 = getelementptr inbounds %"class.std::__1::vector.1471", %"class.std::__1::vector.1471"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %131 = bitcast %"class.v8::debug::BreakLocation"** %129 to i64*
  %132 = bitcast %"class.std::__1::vector.1471"* %4 to i64*
  %133 = bitcast %"class.v8::debug::BreakLocation"** %130 to i64*
  %134 = getelementptr inbounds %"class.std::__1::vector.1471", %"class.std::__1::vector.1471"* %4, i64 0, i32 0, i32 0
  br label %135

135:                                              ; preds = %128, %260
  %136 = phi i64 [ 0, %128 ], [ %147, %260 ]
  %137 = phi %"class.v8::internal::BreakLocation"* [ %125, %128 ], [ %261, %260 ]
  %138 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %137, i64 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = load i64, i64* %83, align 8
  %141 = add i64 %140, 7
  %142 = add i64 %140, 3
  %143 = inttoptr i64 %142 to i32*
  %144 = shl i64 %136, 32
  %145 = ashr exact i64 %144, 32
  br label %146

146:                                              ; preds = %156, %135
  %147 = phi i64 [ %157, %156 ], [ %145, %135 ]
  %148 = trunc i64 %147 to i32
  %149 = shl i32 %148, 2
  %150 = sext i32 %149 to i64
  %151 = add i64 %141, %150
  %152 = inttoptr i64 %151 to i32*
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = ashr i32 %153, 1
  %155 = icmp sgt i32 %139, %154
  br i1 %155, label %156, label %163

156:                                              ; preds = %146
  %157 = add nsw i64 %147, 1
  %158 = load i32, i32* %143, align 4
  %159 = ashr i32 %158, 1
  %160 = sext i32 %159 to i64
  %161 = icmp slt i64 %157, %160
  br i1 %161, label %146, label %162, !prof !3

162:                                              ; preds = %156
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9, i64 0, i64 0)) #16
  unreachable

163:                                              ; preds = %146
  %164 = trunc i64 %147 to i32
  %165 = icmp sgt i32 %164, 0
  br i1 %165, label %166, label %174

166:                                              ; preds = %163
  %167 = add i32 %149, -4
  %168 = sext i32 %167 to i64
  %169 = add i64 %141, %168
  %170 = inttoptr i64 %169 to i32*
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = ashr i32 %171, 1
  %173 = add nsw i32 %172, 1
  br label %174

174:                                              ; preds = %166, %163
  %175 = phi i32 [ %173, %166 ], [ 0, %163 ]
  %176 = load i64, i64* %13, align 8
  %177 = add i64 %176, 11
  %178 = inttoptr i64 %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = ashr i32 %179, 1
  %181 = add nsw i32 %180, %164
  %182 = sub nsw i32 %139, %175
  %183 = icmp eq i32 %164, 0
  br i1 %183, label %184, label %189

184:                                              ; preds = %174
  %185 = add i64 %176, 15
  %186 = inttoptr i64 %185 to i32*
  %187 = load i32, i32* %186, align 4
  %188 = ashr i32 %187, 1
  br label %189

189:                                              ; preds = %174, %184
  %190 = phi i32 [ %188, %184 ], [ 0, %174 ]
  %191 = add nsw i32 %190, %182
  %192 = call i32 @_ZNK2v88internal13BreakLocation4typeEv(%"class.v8::internal::BreakLocation"* %137) #12
  %193 = load %"class.v8::debug::BreakLocation"*, %"class.v8::debug::BreakLocation"** %129, align 8
  %194 = load %"class.v8::debug::BreakLocation"*, %"class.v8::debug::BreakLocation"** %130, align 8
  %195 = icmp ult %"class.v8::debug::BreakLocation"* %193, %194
  %196 = ptrtoint %"class.v8::debug::BreakLocation"* %194 to i64
  br i1 %195, label %197, label %204

197:                                              ; preds = %189
  %198 = getelementptr inbounds %"class.v8::debug::BreakLocation", %"class.v8::debug::BreakLocation"* %193, i64 0, i32 0, i32 0
  store i32 %181, i32* %198, align 4
  %199 = getelementptr inbounds %"class.v8::debug::BreakLocation", %"class.v8::debug::BreakLocation"* %193, i64 0, i32 0, i32 1
  store i32 %191, i32* %199, align 4
  %200 = getelementptr inbounds %"class.v8::debug::BreakLocation", %"class.v8::debug::BreakLocation"* %193, i64 0, i32 0, i32 2
  store i8 0, i8* %200, align 4
  %201 = getelementptr inbounds %"class.v8::debug::BreakLocation", %"class.v8::debug::BreakLocation"* %193, i64 0, i32 1
  store i32 %192, i32* %201, align 4
  %202 = getelementptr inbounds %"class.v8::debug::BreakLocation", %"class.v8::debug::BreakLocation"* %193, i64 1
  %203 = ptrtoint %"class.v8::debug::BreakLocation"* %202 to i64
  store i64 %203, i64* %131, align 8
  br label %260

204:                                              ; preds = %189
  %205 = ptrtoint %"class.v8::debug::BreakLocation"* %193 to i64
  %206 = load i64, i64* %132, align 8
  %207 = sub i64 %205, %206
  %208 = ashr exact i64 %207, 4
  %209 = add nsw i64 %208, 1
  %210 = icmp ugt i64 %209, 1152921504606846975
  br i1 %210, label %211, label %213

211:                                              ; preds = %204
  %212 = bitcast %"class.std::__1::vector.1471"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %212) #16
  unreachable

213:                                              ; preds = %204
  %214 = sub i64 %196, %206
  %215 = ashr exact i64 %214, 4
  %216 = icmp ult i64 %215, 576460752303423487
  br i1 %216, label %217, label %225

217:                                              ; preds = %213
  %218 = ashr exact i64 %214, 3
  %219 = icmp ult i64 %218, %209
  %220 = select i1 %219, i64 %209, i64 %218
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %230, label %222

222:                                              ; preds = %217
  %223 = icmp ugt i64 %220, 1152921504606846975
  br i1 %223, label %224, label %225

224:                                              ; preds = %222
  call void @abort() #16
  unreachable

225:                                              ; preds = %222, %213
  %226 = phi i64 [ %220, %222 ], [ 1152921504606846975, %213 ]
  %227 = shl i64 %226, 4
  %228 = call i8* @_Znwm(i64 %227) #17
  %229 = bitcast i8* %228 to %"class.v8::debug::BreakLocation"*
  br label %230

230:                                              ; preds = %225, %217
  %231 = phi i64 [ %226, %225 ], [ 0, %217 ]
  %232 = phi %"class.v8::debug::BreakLocation"* [ %229, %225 ], [ null, %217 ]
  %233 = getelementptr inbounds %"class.v8::debug::BreakLocation", %"class.v8::debug::BreakLocation"* %232, i64 %208
  %234 = getelementptr inbounds %"class.v8::debug::BreakLocation", %"class.v8::debug::BreakLocation"* %232, i64 %231
  %235 = ptrtoint %"class.v8::debug::BreakLocation"* %234 to i64
  %236 = getelementptr inbounds %"class.v8::debug::BreakLocation", %"class.v8::debug::BreakLocation"* %233, i64 0, i32 0, i32 0
  store i32 %181, i32* %236, align 4
  %237 = getelementptr inbounds %"class.v8::debug::BreakLocation", %"class.v8::debug::BreakLocation"* %232, i64 %208, i32 0, i32 1
  store i32 %191, i32* %237, align 4
  %238 = getelementptr inbounds %"class.v8::debug::BreakLocation", %"class.v8::debug::BreakLocation"* %232, i64 %208, i32 0, i32 2
  store i8 0, i8* %238, align 4
  %239 = getelementptr inbounds %"class.v8::debug::BreakLocation", %"class.v8::debug::BreakLocation"* %232, i64 %208, i32 1
  store i32 %192, i32* %239, align 4
  %240 = getelementptr inbounds %"class.v8::debug::BreakLocation", %"class.v8::debug::BreakLocation"* %233, i64 1
  %241 = ptrtoint %"class.v8::debug::BreakLocation"* %240 to i64
  %242 = load %"class.v8::debug::BreakLocation"*, %"class.v8::debug::BreakLocation"** %134, align 8
  %243 = load i64, i64* %131, align 8
  %244 = ptrtoint %"class.v8::debug::BreakLocation"* %242 to i64
  %245 = sub i64 %243, %244
  %246 = ashr exact i64 %245, 4
  %247 = sub nsw i64 0, %246
  %248 = getelementptr inbounds %"class.v8::debug::BreakLocation", %"class.v8::debug::BreakLocation"* %233, i64 %247
  %249 = ptrtoint %"class.v8::debug::BreakLocation"* %248 to i64
  %250 = icmp sgt i64 %245, 0
  br i1 %250, label %251, label %255

251:                                              ; preds = %230
  %252 = bitcast %"class.v8::debug::BreakLocation"* %248 to i8*
  %253 = bitcast %"class.v8::debug::BreakLocation"* %242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %252, i8* align 4 %253, i64 %245, i1 false) #12
  %254 = load %"class.v8::debug::BreakLocation"*, %"class.v8::debug::BreakLocation"** %134, align 8
  br label %255

255:                                              ; preds = %251, %230
  %256 = phi %"class.v8::debug::BreakLocation"* [ %242, %230 ], [ %254, %251 ]
  store i64 %249, i64* %132, align 8
  store i64 %241, i64* %131, align 8
  store i64 %235, i64* %133, align 8
  %257 = icmp eq %"class.v8::debug::BreakLocation"* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %255
  %259 = bitcast %"class.v8::debug::BreakLocation"* %256 to i8*
  call void @_ZdlPv(i8* %259) #17
  br label %260

260:                                              ; preds = %258, %255, %197
  %261 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %137, i64 1
  %262 = icmp eq %"class.v8::internal::BreakLocation"* %261, %126
  br i1 %262, label %263, label %135

263:                                              ; preds = %260, %119, %114
  %264 = phi i1 [ false, %114 ], [ true, %119 ], [ true, %260 ]
  %265 = getelementptr inbounds %"class.std::__1::vector.1567", %"class.std::__1::vector.1567"* %7, i64 0, i32 0, i32 0
  %266 = load %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"** %265, align 8
  %267 = icmp eq %"class.v8::internal::BreakLocation"* %266, null
  br i1 %267, label %273, label %268

268:                                              ; preds = %263
  %269 = ptrtoint %"class.v8::internal::BreakLocation"* %266 to i64
  %270 = getelementptr inbounds %"class.std::__1::vector.1567", %"class.std::__1::vector.1567"* %7, i64 0, i32 0, i32 1
  %271 = bitcast %"class.v8::internal::BreakLocation"** %270 to i64*
  store i64 %269, i64* %271, align 8
  %272 = bitcast %"class.v8::internal::BreakLocation"* %266 to i8*
  call void @_ZdlPv(i8* %272) #17
  br label %273

273:                                              ; preds = %263, %268
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #12
  br label %274

274:                                              ; preds = %273, %111, %20
  %275 = phi i1 [ %35, %20 ], [ %264, %273 ], [ true, %111 ]
  ret i1 %275
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v85debug8Location7IsEmptyEv(%"class.v8::debug::Location"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4, !range !4
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare zeroext i1 @_ZN2v88internal10WasmScript22GetPossibleBreakpointsEPNS0_4wasm12NativeModuleERKNS_5debug8LocationES8_PNSt3__16vectorINS5_13BreakLocationENS9_9allocatorISB_EEEE(%"class.v8::internal::wasm::NativeModule"*, %"class.v8::debug::Location"* dereferenceable(12), %"class.v8::debug::Location"* dereferenceable(12), %"class.std::__1::vector.1471"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v85debug6Script15GetSourceOffsetERKNS0_8LocationE(%"class.v8::debug::Script"*, %"class.v8::debug::Location"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 23
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, -2
  %9 = icmp eq i32 %8, 6
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  br label %127

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = add i64 %4, 11
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = ashr i32 %18, 1
  %20 = sub nsw i32 %15, %19
  %21 = icmp sgt i32 %20, 0
  %22 = select i1 %21, i32 %20, i32 0
  %23 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %1, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %20, 1
  br i1 %25, label %26, label %34

26:                                               ; preds = %13
  %27 = add i64 %4, 15
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = ashr i32 %29, 1
  %31 = sub nsw i32 %24, %30
  %32 = icmp sgt i32 %31, 0
  %33 = select i1 %32, i32 %31, i32 0
  br label %34

34:                                               ; preds = %26, %13
  %35 = phi i32 [ %33, %26 ], [ %24, %13 ]
  %36 = and i64 %4, -262144
  %37 = or i64 %36, 16
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38, align 16
  %40 = add i64 %39, -41416
  %41 = inttoptr i64 %40 to %"class.v8::internal::Isolate"*
  tail call void @_ZN2v88internal6Script12InitLineEndsINS0_7IsolateEEEvPT_NS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %41, i64* %3) #12
  %42 = load i64, i64* %3, align 8
  %43 = and i64 %42, -4294967296
  %44 = add i64 %42, 27
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %43, %47
  %49 = add i64 %48, -1
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %43, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = add i16 %56, -119
  %58 = icmp ult i16 %57, 13
  br i1 %58, label %60, label %59, !prof !3

59:                                               ; preds = %34
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0)) #16
  unreachable

60:                                               ; preds = %34
  %61 = and i64 %42, -262144
  %62 = or i64 %61, 16
  %63 = inttoptr i64 %62 to i64*
  %64 = load i64, i64* %63, align 16
  %65 = add i64 %64, -41416
  %66 = inttoptr i64 %65 to %"class.v8::internal::Isolate"*
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %66, i64 0, i32 31, i32 4
  %68 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %67, align 8
  %69 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %60
  %71 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %68, i64 %48) #12
  %72 = load i64, i64* %71, align 8
  br label %86

73:                                               ; preds = %60
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %66, i64 0, i32 31, i32 0
  %75 = load i64*, i64** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %66, i64 0, i32 31, i32 1
  %77 = load i64*, i64** %76, align 8
  %78 = icmp eq i64* %75, %77
  br i1 %78, label %79, label %81

79:                                               ; preds = %73
  %80 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %66) #12
  br label %81

81:                                               ; preds = %79, %73
  %82 = phi i64* [ %80, %79 ], [ %75, %73 ]
  %83 = ptrtoint i64* %82 to i64
  %84 = add i64 %83, 8
  %85 = inttoptr i64 %84 to i64*
  store i64* %85, i64** %74, align 8
  store i64 %48, i64* %82, align 8
  br label %86

86:                                               ; preds = %70, %81
  %87 = phi i64 [ %72, %70 ], [ %48, %81 ]
  %88 = add i64 %87, 3
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = ashr i32 %90, 1
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94, !prof !2

93:                                               ; preds = %86
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #16
  unreachable

94:                                               ; preds = %86
  %95 = icmp slt i32 %22, %91
  br i1 %95, label %105, label %96

96:                                               ; preds = %94
  %97 = shl i32 %91, 2
  %98 = add i32 %97, -4
  %99 = sext i32 %98 to i64
  %100 = add i64 %87, 7
  %101 = add i64 %100, %99
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = ashr i32 %103, 1
  br label %127

105:                                              ; preds = %94
  %106 = shl i32 %22, 2
  %107 = sext i32 %106 to i64
  %108 = add i64 %87, 7
  %109 = add i64 %108, %107
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = ashr i32 %111, 1
  br i1 %25, label %113, label %116

113:                                              ; preds = %105
  %114 = icmp slt i32 %112, %35
  %115 = select i1 %114, i32 %112, i32 %35
  br label %127

116:                                              ; preds = %105
  %117 = add i32 %106, -4
  %118 = sext i32 %117 to i64
  %119 = add i64 %108, %118
  %120 = inttoptr i64 %119 to i32*
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = ashr i32 %121, 1
  %123 = add i32 %35, 1
  %124 = add i32 %123, %122
  %125 = icmp slt i32 %112, %124
  %126 = select i1 %125, i32 %112, i32 %124
  br label %127

127:                                              ; preds = %96, %116, %113, %10
  %128 = phi i32 [ %12, %10 ], [ %104, %96 ], [ %115, %113 ], [ %126, %116 ]
  ret i32 %128
}

declare zeroext i1 @_ZN2v88internal5Debug22GetPossibleBreakpointsENS0_6HandleINS0_6ScriptEEEiibPNSt3__16vectorINS0_13BreakLocationENS5_9allocatorIS7_EEEE(%"class.v8::internal::Debug"*, i64*, i32, i32, i1 zeroext, %"class.std::__1::vector.1567"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN2v85debug12_GLOBAL__N_120CompareBreakLocationERKNS_8internal13BreakLocationES5_(%"class.v8::internal::BreakLocation"* nocapture readonly dereferenceable(24), %"class.v8::internal::BreakLocation"* nocapture readonly dereferenceable(24)) #3 {
  %3 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %4, %6
  ret i1 %7
}

declare i32 @_ZNK2v88internal13BreakLocation4typeEv(%"class.v8::internal::BreakLocation"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug8Location15GetColumnNumberEv(%"class.v8::debug::Location"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug8Location13GetLineNumberEv(%"class.v8::debug::Location"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i8 } @_ZNK2v85debug6Script17GetSourceLocationEi(%"class.v8::debug::Script"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::Script::PositionInfo", align 4
  %4 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %5 = bitcast %"struct.v8::internal::Script::PositionInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %5, i8 -1, i64 16, i1 false) #12
  %6 = call zeroext i1 @_ZN2v88internal6Script15GetPositionInfoENS0_6HandleIS1_EEiPNS1_12PositionInfoENS1_10OffsetFlagE(i64* %4, i32 %1, %"struct.v8::internal::Script::PositionInfo"* nonnull %3, i32 1) #12
  %7 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %3, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %3, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #12
  %11 = zext i32 %10 to i64
  %12 = shl nuw i64 %11, 32
  %13 = zext i32 %8 to i64
  %14 = or i64 %12, %13
  %15 = insertvalue { i64, i8 } undef, i64 %14, 0
  %16 = insertvalue { i64, i8 } %15, i8 0, 1
  ret { i64, i8 } %16
}

declare zeroext i1 @_ZN2v88internal6Script15GetPositionInfoENS0_6HandleIS1_EEiPNS1_12PositionInfoENS1_10OffsetFlagE(i64*, i32, %"struct.v8::internal::Script::PositionInfo"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v85debug6Script15SetScriptSourceENS_5LocalINS_6StringEEEbPNS0_14LiveEditResultE(%"class.v8::debug::Script"*, %"class.v8::String"*, i1 zeroext, %"struct.v8::debug::LiveEditResult"*) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 68
  %14 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %13, align 8
  %15 = bitcast %"class.v8::String"* %1 to i64*
  %16 = tail call zeroext i1 @_ZN2v88internal5Debug15SetScriptSourceENS0_6HandleINS0_6ScriptEEENS2_INS0_6StringEEEbPNS_5debug14LiveEditResultE(%"class.v8::internal::Debug"* %14, i64* %5, i64* %15, i1 zeroext %2, %"struct.v8::debug::LiveEditResult"* %3) #12
  ret i1 %16
}

declare zeroext i1 @_ZN2v88internal5Debug15SetScriptSourceENS0_6HandleINS0_6ScriptEEENS2_INS0_6StringEEEbPNS_5debug14LiveEditResultE(%"class.v8::internal::Debug"*, i64*, i64*, i1 zeroext, %"struct.v8::debug::LiveEditResult"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v85debug6Script13SetBreakpointENS_5LocalINS_6StringEEEPNS0_8LocationEPi(%"class.v8::debug::Script"*, %"class.v8::String"*, %"class.v8::debug::Location"* nocapture, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.v8::internal::Script::PositionInfo", align 4
  %6 = alloca i32, align 4
  %7 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -262144
  %10 = or i64 %9, 16
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 16
  %13 = add i64 %12, -41416
  %14 = inttoptr i64 %13 to %"class.v8::internal::Isolate"*
  %15 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #12
  %16 = tail call i32 @_ZNK2v85debug6Script15GetSourceOffsetERKNS0_8LocationE(%"class.v8::debug::Script"* %0, %"class.v8::debug::Location"* dereferenceable(12) %2)
  store i32 %16, i32* %6, align 4
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 68
  %18 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %17, align 8
  %19 = bitcast %"class.v8::String"* %1 to i64*
  %20 = call zeroext i1 @_ZN2v88internal5Debug22SetBreakPointForScriptENS0_6HandleINS0_6ScriptEEENS2_INS0_6StringEEEPiS7_(%"class.v8::internal::Debug"* %18, i64* %7, i64* %19, i32* nonnull %6, i32* %3) #12
  br i1 %20, label %21, label %35

21:                                               ; preds = %4
  %22 = load i32, i32* %6, align 4
  %23 = bitcast %"struct.v8::internal::Script::PositionInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %23, i8 -1, i64 16, i1 false) #12
  %24 = call zeroext i1 @_ZN2v88internal6Script15GetPositionInfoENS0_6HandleIS1_EEiPNS1_12PositionInfoENS1_10OffsetFlagE(i64* %7, i32 %22, %"struct.v8::internal::Script::PositionInfo"* nonnull %5, i32 1) #12
  %25 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %5, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %5, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #12
  %29 = zext i32 %28 to i64
  %30 = shl nuw i64 %29, 32
  %31 = zext i32 %26 to i64
  %32 = or i64 %30, %31
  %33 = bitcast %"class.v8::debug::Location"* %2 to i64*
  store i64 %32, i64* %33, align 4
  %34 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %2, i64 0, i32 2
  store i8 0, i8* %34, align 4
  br label %35

35:                                               ; preds = %4, %21
  %36 = phi i1 [ true, %21 ], [ false, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #12
  ret i1 %36
}

declare zeroext i1 @_ZN2v88internal5Debug22SetBreakPointForScriptENS0_6HandleINS0_6ScriptEEENS2_INS0_6StringEEEPiS7_(%"class.v8::internal::Debug"*, i64*, i64*, i32*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v85debug6Script26SetBreakpointOnScriptEntryEPi(%"class.v8::debug::Script"*, i32*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.v8::internal::SharedFunctionInfo::ScriptIterator", align 8
  %5 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = add i64 %6, 23
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, -2
  %17 = icmp eq i32 %16, 6
  br i1 %17, label %18, label %26

18:                                               ; preds = %2
  %19 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #12
  store i32 -1, i32* %3, align 4
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 68
  %21 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %20, align 8
  %22 = inttoptr i64 %11 to %"class.v8::internal::Factory"*
  %23 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %22, i64 200
  %24 = bitcast %"class.v8::internal::Factory"* %23 to i64*
  %25 = call zeroext i1 @_ZN2v88internal5Debug22SetBreakPointForScriptENS0_6HandleINS0_6ScriptEEENS2_INS0_6StringEEEPiS7_(%"class.v8::internal::Debug"* %21, i64* %5, i64* %24, i32* nonnull %3, i32* %1) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #12
  br label %71

26:                                               ; preds = %2
  %27 = bitcast %"class.v8::internal::SharedFunctionInfo::ScriptIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #12
  call void @_ZN2v88internal18SharedFunctionInfo14ScriptIteratorC1EPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %4, %"class.v8::internal::Isolate"* %12, i64 %6) #12
  %28 = call i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %4) #12
  %29 = trunc i64 %28 to i32
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %69, label %31

31:                                               ; preds = %26, %59
  %32 = phi i64 [ %60, %59 ], [ %28, %26 ]
  %33 = add i64 %32, 27
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 134217728
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %59, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 68
  %40 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 4
  %42 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %41, align 8
  %43 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %38
  %45 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %42, i64 %32) #12
  br label %63

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %50 = load i64*, i64** %49, align 8
  %51 = icmp eq i64* %48, %50
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #12
  br label %54

54:                                               ; preds = %52, %46
  %55 = phi i64* [ %53, %52 ], [ %48, %46 ]
  %56 = ptrtoint i64* %55 to i64
  %57 = add i64 %56, 8
  %58 = inttoptr i64 %57 to i64*
  store i64* %58, i64** %47, align 8
  store i64 %32, i64* %55, align 8
  br label %63

59:                                               ; preds = %31
  %60 = call i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %4) #12
  %61 = trunc i64 %60 to i32
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %69, label %31

63:                                               ; preds = %54, %44
  %64 = phi i64* [ %45, %44 ], [ %55, %54 ]
  %65 = inttoptr i64 %11 to %"class.v8::internal::Factory"*
  %66 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %65, i64 200
  %67 = bitcast %"class.v8::internal::Factory"* %66 to i64*
  %68 = call zeroext i1 @_ZN2v88internal5Debug24SetBreakpointForFunctionENS0_6HandleINS0_18SharedFunctionInfoEEENS2_INS0_6StringEEEPi(%"class.v8::internal::Debug"* %40, i64* %64, i64* %67, i32* %1) #12
  br label %69

69:                                               ; preds = %59, %26, %63
  %70 = phi i1 [ %68, %63 ], [ false, %26 ], [ false, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #12
  br label %71

71:                                               ; preds = %69, %18
  %72 = phi i1 [ %25, %18 ], [ %70, %69 ]
  ret i1 %72
}

declare void @_ZN2v88internal18SharedFunctionInfo14ScriptIteratorC1EPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"*, %"class.v8::internal::Isolate"*, i64) unnamed_addr #4

declare i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal5Debug24SetBreakpointForFunctionENS0_6HandleINS0_18SharedFunctionInfoEEENS2_INS0_6StringEEEPi(%"class.v8::internal::Debug"*, i64*, i64*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug6Script20RemoveWasmBreakpointEi(%"class.v8::debug::Script"*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 68
  %12 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %11, align 8
  tail call void @_ZN2v88internal5Debug29RemoveBreakpointForWasmScriptENS0_6HandleINS0_6ScriptEEEi(%"class.v8::internal::Debug"* %12, i64* %3, i32 %1) #12
  ret void
}

declare void @_ZN2v88internal5Debug29RemoveBreakpointForWasmScriptENS0_6HandleINS0_6ScriptEEEi(%"class.v8::internal::Debug"*, i64*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug16RemoveBreakpointEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #0 {
  %3 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %4 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45584
  %5 = bitcast %"class.v8::Isolate"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45592
  %8 = bitcast %"class.v8::Isolate"* %7 to i64**
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45600
  %11 = bitcast %"class.v8::Isolate"* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  %14 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45960
  %15 = bitcast %"class.v8::Isolate"* %14 to %"class.v8::internal::Debug"**
  %16 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %15, align 8
  tail call void @_ZN2v88internal5Debug16RemoveBreakpointEi(%"class.v8::internal::Debug"* %16, i32 %1) #12
  %17 = icmp eq %"class.v8::Isolate"* %0, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %2
  %19 = inttoptr i64 %6 to i64*
  %20 = bitcast %"class.v8::Isolate"* %4 to i64**
  %21 = load i64*, i64** %20, align 8
  store i64 %6, i64* %5, align 8
  %22 = load i32, i32* %11, align 8
  %23 = add nsw i32 %22, -1
  store i32 %23, i32* %11, align 8
  %24 = load i64*, i64** %8, align 8
  %25 = icmp eq i64* %24, %9
  br i1 %25, label %28, label %26

26:                                               ; preds = %18
  store i64* %9, i64** %8, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %3) #12
  %27 = load i64*, i64** %20, align 8
  br label %28

28:                                               ; preds = %26, %18
  %29 = phi i64* [ %27, %26 ], [ %19, %18 ]
  %30 = phi i64* [ %9, %26 ], [ %21, %18 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %29, i64* %30) #12
  br label %31

31:                                               ; preds = %2, %28
  ret void
}

declare void @_ZN2v88internal5Debug16RemoveBreakpointEi(%"class.v8::internal::Debug"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Platform"* @_ZN2v85debug18GetCurrentPlatformEv() local_unnamed_addr #0 {
  %1 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #12
  ret %"class.v8::Platform"* %1
}

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug22ForceGarbageCollectionEPNS_7IsolateEN5cppgc18EmbedderStackStateE(%"class.v8::Isolate"*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 41416
  %4 = bitcast %"class.v8::Isolate"* %3 to %"class.v8::internal::Heap"*
  tail call void @_ZN2v88internal4Heap40SetEmbedderStackStateForNextFinalizationEN5cppgc18EmbedderStackStateE(%"class.v8::internal::Heap"* %4, i32 %1) #12
  tail call void @_ZN2v87Isolate21LowMemoryNotificationEv(%"class.v8::Isolate"* %0) #12
  ret void
}

declare void @_ZN2v88internal4Heap40SetEmbedderStackStateForNextFinalizationEN5cppgc18EmbedderStackStateE(%"class.v8::internal::Heap"*, i32) local_unnamed_addr #4

declare void @_ZN2v87Isolate21LowMemoryNotificationEv(%"class.v8::Isolate"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::debug::WasmScript"* @_ZN2v85debug10WasmScript4CastEPNS0_6ScriptE(%"class.v8::debug::Script"* readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::debug::Script"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 23
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, -2
  %8 = icmp eq i32 %7, 6
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0)) #16
  unreachable

10:                                               ; preds = %1
  %11 = bitcast %"class.v8::debug::Script"* %0 to %"class.v8::debug::WasmScript"*
  ret %"class.v8::debug::WasmScript"* %11
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug10WasmScript18GetDebugSymbolTypeEv(%"class.v8::debug::WasmScript"*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.v8::debug::WasmScript"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 39
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 3
  %11 = inttoptr i64 %10 to %"struct.v8::internal::ManagedPtrDestructor"**
  %12 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %11, align 1
  %13 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %12, i64 0, i32 3
  %14 = bitcast i8** %13 to %"class.std::__1::shared_ptr.1728"**
  %15 = load %"class.std::__1::shared_ptr.1728"*, %"class.std::__1::shared_ptr.1728"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::shared_ptr.1728", %"class.std::__1::shared_ptr.1728"* %15, i64 0, i32 0
  %17 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %17, i64 0, i32 4, i32 0
  %19 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %18, align 8
  %20 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %19, i64 0, i32 35, i32 0
  %21 = load i32, i32* %20, align 8
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZNK2v85debug10WasmScript18ExternalSymbolsURLEv(%"class.v8::debug::WasmScript"*) local_unnamed_addr #0 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"struct.v8::internal::wasm::ModuleWireBytes"*
  %4 = bitcast %"class.v8::debug::WasmScript"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 39
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 3
  %13 = inttoptr i64 %12 to %"struct.v8::internal::ManagedPtrDestructor"**
  %14 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %13, align 1
  %15 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %14, i64 0, i32 3
  %16 = bitcast i8** %15 to %"class.std::__1::shared_ptr.1728"**
  %17 = load %"class.std::__1::shared_ptr.1728"*, %"class.std::__1::shared_ptr.1728"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::shared_ptr.1728", %"class.std::__1::shared_ptr.1728"* %17, i64 0, i32 0
  %19 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %19, i64 0, i32 4, i32 0
  %21 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %20, align 8
  %22 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %21, i64 0, i32 35, i32 1
  %23 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %21, i64 0, i32 35, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %57, label %26

26:                                               ; preds = %1
  %27 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %19, i64 0, i32 6
  %29 = bitcast %"class.std::__1::shared_ptr.1506"* %28 to i8*
  %30 = tail call dereferenceable(8) %"class.std::__1::__sp_mut"* @_ZNSt3__112__get_sp_mutEPKv(i8* %29) #12
  tail call void @_ZNSt3__18__sp_mut4lockEv(%"class.std::__1::__sp_mut"* %30) #12
  %31 = bitcast %"class.std::__1::shared_ptr.1506"* %28 to <2 x i64>**
  %32 = load <2 x i64>*, <2 x i64>** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %19, i64 0, i32 6, i32 1
  %34 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %33, align 8
  %35 = icmp eq %"class.std::__1::__shared_weak_count"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %34, i64 0, i32 0, i32 1
  %38 = atomicrmw add i64* %37, i64 1 monotonic
  br label %39

39:                                               ; preds = %36, %26
  tail call void @_ZNSt3__18__sp_mut6unlockEv(%"class.std::__1::__sp_mut"* %30) #12
  %40 = load <2 x i64>, <2 x i64>* %32, align 8
  br i1 %35, label %51, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %34, i64 0, i32 0, i32 1
  %43 = atomicrmw add i64* %42, i64 -1 acq_rel
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %34, i64 0, i32 0
  %47 = bitcast %"class.std::__1::__shared_weak_count"* %34 to void (%"class.std::__1::__shared_count"*)***
  %48 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %48, i64 2
  %50 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %49, align 8
  tail call void %50(%"class.std::__1::__shared_count"* %46) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %34) #12
  br label %51

51:                                               ; preds = %39, %41, %45
  store <2 x i64> %40, <2 x i64>* %2, align 16
  %52 = bitcast %"class.v8::internal::wasm::WireBytesRef"* %22 to i64*
  %53 = load i64, i64* %52, align 4
  %54 = call { i8*, i64 } @_ZNK2v88internal4wasm15ModuleWireBytes13GetNameOrNullENS1_12WireBytesRefE(%"struct.v8::internal::wasm::ModuleWireBytes"* nonnull %3, i64 %53) #12
  %55 = extractvalue { i8*, i64 } %54, 0
  %56 = extractvalue { i8*, i64 } %54, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #12
  br label %57

57:                                               ; preds = %1, %51
  %58 = phi i64 [ %56, %51 ], [ 0, %1 ]
  %59 = phi i8* [ %55, %51 ], [ null, %1 ]
  %60 = insertvalue { i8*, i64 } undef, i8* %59, 0
  %61 = insertvalue { i8*, i64 } %60, i64 %58, 1
  ret { i8*, i64 } %61
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare { i8*, i64 } @_ZNK2v88internal4wasm15ModuleWireBytes13GetNameOrNullENS1_12WireBytesRefE(%"struct.v8::internal::wasm::ModuleWireBytes"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug10WasmScript12NumFunctionsEv(%"class.v8::debug::WasmScript"*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.v8::debug::WasmScript"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 39
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 3
  %11 = inttoptr i64 %10 to %"struct.v8::internal::ManagedPtrDestructor"**
  %12 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %11, align 1
  %13 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %12, i64 0, i32 3
  %14 = bitcast i8** %13 to %"class.std::__1::shared_ptr.1728"**
  %15 = load %"class.std::__1::shared_ptr.1728"*, %"class.std::__1::shared_ptr.1728"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::shared_ptr.1728", %"class.std::__1::shared_ptr.1728"* %15, i64 0, i32 0
  %17 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %17, i64 0, i32 4, i32 0
  %19 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %18, align 8
  %20 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %19, i64 0, i32 23
  %21 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %19, i64 0, i32 23, i32 0, i32 1
  %22 = bitcast %"struct.v8::internal::wasm::WasmFunction"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.1310"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 5
  %28 = trunc i64 %27 to i32
  ret i32 %28
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug10WasmScript20NumImportedFunctionsEv(%"class.v8::debug::WasmScript"*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.v8::debug::WasmScript"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 39
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 3
  %11 = inttoptr i64 %10 to %"struct.v8::internal::ManagedPtrDestructor"**
  %12 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %11, align 1
  %13 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %12, i64 0, i32 3
  %14 = bitcast i8** %13 to %"class.std::__1::shared_ptr.1728"**
  %15 = load %"class.std::__1::shared_ptr.1728"*, %"class.std::__1::shared_ptr.1728"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::shared_ptr.1728", %"class.std::__1::shared_ptr.1728"* %15, i64 0, i32 0
  %17 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %17, i64 0, i32 4, i32 0
  %19 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %18, align 8
  %20 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %19, i64 0, i32 13
  %21 = load i32, i32* %20, align 4
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZNK2v85debug10WasmScript8BytecodeEv(%"class.v8::debug::WasmScript"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::debug::WasmScript"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 39
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 3
  %11 = inttoptr i64 %10 to %"struct.v8::internal::ManagedPtrDestructor"**
  %12 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %11, align 1
  %13 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %12, i64 0, i32 3
  %14 = bitcast i8** %13 to %"class.std::__1::shared_ptr.1728"**
  %15 = load %"class.std::__1::shared_ptr.1728"*, %"class.std::__1::shared_ptr.1728"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::shared_ptr.1728", %"class.std::__1::shared_ptr.1728"* %15, i64 0, i32 0
  %17 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %17, i64 0, i32 6
  %19 = bitcast %"class.std::__1::shared_ptr.1506"* %18 to i8*
  %20 = tail call dereferenceable(8) %"class.std::__1::__sp_mut"* @_ZNSt3__112__get_sp_mutEPKv(i8* %19) #12
  tail call void @_ZNSt3__18__sp_mut4lockEv(%"class.std::__1::__sp_mut"* %20) #12
  %21 = getelementptr inbounds %"class.std::__1::shared_ptr.1506", %"class.std::__1::shared_ptr.1506"* %18, i64 0, i32 0
  %22 = load %"class.v8::internal::OwnedVector"*, %"class.v8::internal::OwnedVector"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %17, i64 0, i32 6, i32 1
  %24 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %23, align 8
  %25 = icmp eq %"class.std::__1::__shared_weak_count"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %24, i64 0, i32 0, i32 1
  %28 = atomicrmw add i64* %27, i64 1 monotonic
  br label %29

29:                                               ; preds = %26, %1
  tail call void @_ZNSt3__18__sp_mut6unlockEv(%"class.std::__1::__sp_mut"* %20) #12
  %30 = getelementptr inbounds %"class.v8::internal::OwnedVector", %"class.v8::internal::OwnedVector"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::OwnedVector", %"class.v8::internal::OwnedVector"* %22, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = insertvalue { i8*, i64 } undef, i8* %31, 0
  %35 = insertvalue { i8*, i64 } %34, i64 %33, 1
  br i1 %25, label %46, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %24, i64 0, i32 0, i32 1
  %38 = atomicrmw add i64* %37, i64 -1 acq_rel
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %24, i64 0, i32 0
  %42 = bitcast %"class.std::__1::__shared_weak_count"* %24 to void (%"class.std::__1::__shared_count"*)***
  %43 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %43, i64 2
  %45 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %44, align 8
  tail call void %45(%"class.std::__1::__shared_count"* %41) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %24) #12
  br label %46

46:                                               ; preds = %29, %36, %40
  ret { i8*, i64 } %35
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v85debug10WasmScript16GetFunctionRangeEi(%"class.v8::debug::WasmScript"*, i32) local_unnamed_addr #6 align 2 {
  %3 = bitcast %"class.v8::debug::WasmScript"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 39
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 3
  %12 = inttoptr i64 %11 to %"struct.v8::internal::ManagedPtrDestructor"**
  %13 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %12, align 1
  %14 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %13, i64 0, i32 3
  %15 = bitcast i8** %14 to %"class.std::__1::shared_ptr.1728"**
  %16 = load %"class.std::__1::shared_ptr.1728"*, %"class.std::__1::shared_ptr.1728"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::shared_ptr.1728", %"class.std::__1::shared_ptr.1728"* %16, i64 0, i32 0
  %18 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %18, i64 0, i32 4, i32 0
  %20 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %19, align 8
  %21 = sext i32 %1 to i64
  %22 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %20, i64 0, i32 23, i32 0, i32 0
  %23 = load %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"** %22, align 8
  %24 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %23, i64 %21, i32 3, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %23, i64 %21, i32 3, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = add i32 %27, %25
  %29 = zext i32 %28 to i64
  %30 = shl nuw i64 %29, 32
  %31 = zext i32 %25 to i64
  %32 = or i64 %30, %31
  ret i64 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v85debug10WasmScript21GetContainingFunctionEi(%"class.v8::debug::WasmScript"*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::debug::WasmScript"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 39
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 3
  %12 = inttoptr i64 %11 to %"struct.v8::internal::ManagedPtrDestructor"**
  %13 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %12, align 1
  %14 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %13, i64 0, i32 3
  %15 = bitcast i8** %14 to %"class.std::__1::shared_ptr.1728"**
  %16 = load %"class.std::__1::shared_ptr.1728"*, %"class.std::__1::shared_ptr.1728"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::shared_ptr.1728", %"class.std::__1::shared_ptr.1728"* %16, i64 0, i32 0
  %18 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %18, i64 0, i32 4, i32 0
  %20 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %19, align 8
  %21 = tail call i32 @_ZN2v88internal4wasm25GetContainingWasmFunctionEPKNS1_10WasmModuleEj(%"struct.v8::internal::wasm::WasmModule"* %20, i32 %1) #12
  ret i32 %21
}

declare i32 @_ZN2v88internal4wasm25GetContainingWasmFunctionEPKNS1_10WasmModuleEj(%"struct.v8::internal::wasm::WasmModule"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v85debug10WasmScript15GetFunctionHashEi(%"class.v8::debug::WasmScript"*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::debug::WasmScript"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 39
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 3
  %12 = inttoptr i64 %11 to %"struct.v8::internal::ManagedPtrDestructor"**
  %13 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %12, align 1
  %14 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %13, i64 0, i32 3
  %15 = bitcast i8** %14 to %"class.std::__1::shared_ptr.1728"**
  %16 = load %"class.std::__1::shared_ptr.1728"*, %"class.std::__1::shared_ptr.1728"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::shared_ptr.1728", %"class.std::__1::shared_ptr.1728"* %16, i64 0, i32 0
  %18 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %18, i64 0, i32 4, i32 0
  %20 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %19, align 8
  %21 = sext i32 %1 to i64
  %22 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %20, i64 0, i32 23, i32 0, i32 0
  %23 = load %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %18, i64 0, i32 6
  %25 = bitcast %"class.std::__1::shared_ptr.1506"* %24 to i8*
  %26 = tail call dereferenceable(8) %"class.std::__1::__sp_mut"* @_ZNSt3__112__get_sp_mutEPKv(i8* %25) #12
  tail call void @_ZNSt3__18__sp_mut4lockEv(%"class.std::__1::__sp_mut"* %26) #12
  %27 = getelementptr inbounds %"class.std::__1::shared_ptr.1506", %"class.std::__1::shared_ptr.1506"* %24, i64 0, i32 0
  %28 = load %"class.v8::internal::OwnedVector"*, %"class.v8::internal::OwnedVector"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %18, i64 0, i32 6, i32 1
  %30 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %29, align 8
  %31 = icmp eq %"class.std::__1::__shared_weak_count"* %30, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %2
  tail call void @_ZNSt3__18__sp_mut6unlockEv(%"class.std::__1::__sp_mut"* %26) #12
  %33 = getelementptr inbounds %"class.v8::internal::OwnedVector", %"class.v8::internal::OwnedVector"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  br label %49

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %30, i64 0, i32 0, i32 1
  %37 = atomicrmw add i64* %36, i64 1 monotonic
  tail call void @_ZNSt3__18__sp_mut6unlockEv(%"class.std::__1::__sp_mut"* %26) #12
  %38 = getelementptr inbounds %"class.v8::internal::OwnedVector", %"class.v8::internal::OwnedVector"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %30, i64 0, i32 0, i32 1
  %41 = atomicrmw add i64* %40, i64 -1 acq_rel
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %30, i64 0, i32 0
  %45 = bitcast %"class.std::__1::__shared_weak_count"* %30 to void (%"class.std::__1::__shared_count"*)***
  %46 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %46, i64 2
  %48 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %47, align 8
  tail call void %48(%"class.std::__1::__shared_count"* %44) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %30) #12
  br label %49

49:                                               ; preds = %32, %35, %43
  %50 = phi i8* [ %34, %32 ], [ %39, %35 ], [ %39, %43 ]
  %51 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %23, i64 %21, i32 3, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %23, i64 %21, i32 3, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds i8, i8* %50, i64 %53
  %57 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* %56, i32 %55, i64 0)
  ret i32 %57
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8*, i32, i64) local_unnamed_addr #7 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %97

5:                                                ; preds = %3
  %6 = load i8, i8* %0, align 1
  %7 = zext i8 %6 to i32
  %8 = add nsw i32 %7, -48
  %9 = icmp ult i32 %8, 10
  br i1 %9, label %10, label %90

10:                                               ; preds = %5
  %11 = icmp eq i32 %1, 1
  br i1 %11, label %36, label %12

12:                                               ; preds = %10
  %13 = icmp eq i8 %6, 48
  br i1 %13, label %90, label %14

14:                                               ; preds = %12
  %15 = icmp slt i32 %1, 11
  br i1 %15, label %16, label %39

16:                                               ; preds = %14
  %17 = zext i32 %1 to i64
  br label %18

18:                                               ; preds = %16, %32
  %19 = phi i64 [ 1, %16 ], [ %21, %32 ]
  %20 = phi i32 [ %8, %16 ], [ %34, %32 ]
  %21 = add nuw nsw i64 %19, 1
  %22 = getelementptr inbounds i8, i8* %0, i64 %19
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = add nsw i32 %24, -48
  %26 = icmp ult i32 %25, 10
  br i1 %26, label %27, label %39

27:                                               ; preds = %18
  %28 = add nsw i32 %24, -45
  %29 = ashr i32 %28, 3
  %30 = sub nuw nsw i32 429496729, %29
  %31 = icmp ugt i32 %20, %30
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = mul i32 %20, 10
  %34 = add i32 %25, %33
  %35 = icmp eq i64 %21, %17
  br i1 %35, label %36, label %18

36:                                               ; preds = %32, %10
  %37 = phi i32 [ %8, %10 ], [ %34, %32 ]
  %38 = tail call i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32 %37, i32 %1) #12
  br label %170

39:                                               ; preds = %18, %27, %14
  %40 = icmp slt i32 %1, 17
  br i1 %40, label %41, label %90

41:                                               ; preds = %39
  %42 = trunc i64 %2 to i32
  %43 = sext i32 %1 to i64
  %44 = getelementptr inbounds i8, i8* %0, i64 %43
  %45 = icmp eq i32 %1, 0
  br i1 %45, label %72, label %46

46:                                               ; preds = %41, %63
  %47 = phi i8* [ %66, %63 ], [ %0, %41 ]
  %48 = phi i32 [ %70, %63 ], [ %42, %41 ]
  %49 = phi i32 [ %65, %63 ], [ 0, %41 ]
  %50 = phi i64 [ %64, %63 ], [ 0, %41 ]
  %51 = icmp eq i32 %49, 0
  %52 = load i8, i8* %47, align 1
  %53 = zext i8 %52 to i32
  br i1 %51, label %54, label %63

54:                                               ; preds = %46
  %55 = add nsw i32 %53, -48
  %56 = icmp ult i32 %55, 10
  br i1 %56, label %57, label %63

57:                                               ; preds = %54
  %58 = mul i64 %50, 10
  %59 = sext i32 %55 to i64
  %60 = add i64 %58, %59
  %61 = icmp ult i64 %60, 9007199254740992
  %62 = select i1 %61, i32 0, i32 2
  br label %63

63:                                               ; preds = %46, %57, %54
  %64 = phi i64 [ %60, %57 ], [ %50, %54 ], [ %50, %46 ]
  %65 = phi i32 [ %62, %57 ], [ 2, %54 ], [ %49, %46 ]
  %66 = getelementptr inbounds i8, i8* %47, i64 1
  %67 = add i32 %48, %53
  %68 = mul i32 %67, 1025
  %69 = lshr i32 %68, 6
  %70 = xor i32 %69, %68
  %71 = icmp eq i8* %66, %44
  br i1 %71, label %72, label %46

72:                                               ; preds = %63, %41
  %73 = phi i32 [ 0, %41 ], [ %65, %63 ]
  %74 = phi i32 [ %42, %41 ], [ %70, %63 ]
  %75 = mul i32 %74, 9
  %76 = lshr i32 %75, 11
  %77 = xor i32 %76, %75
  %78 = mul i32 %77, 32769
  %79 = and i32 %78, 1073741823
  %80 = add nsw i32 %79, -1
  %81 = ashr i32 %80, 31
  %82 = and i32 %81, 27
  %83 = or i32 %82, %78
  %84 = shl i32 %83, 2
  %85 = or i32 %84, %73
  %86 = and i32 %85, -536870910
  %87 = icmp eq i32 %86, 0
  %88 = or i32 %85, 536870912
  %89 = select i1 %87, i32 %88, i32 %85
  br label %170

90:                                               ; preds = %12, %39, %5
  %91 = icmp sgt i32 %1, 16383
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = trunc i64 %2 to i32
  br label %100

94:                                               ; preds = %90
  %95 = shl i32 %1, 2
  %96 = or i32 %95, 2
  br label %170

97:                                               ; preds = %3
  %98 = trunc i64 %2 to i32
  %99 = icmp eq i32 %1, 0
  br i1 %99, label %157, label %100

100:                                              ; preds = %92, %97
  %101 = phi i32 [ %93, %92 ], [ %98, %97 ]
  %102 = sext i32 %1 to i64
  %103 = getelementptr inbounds i8, i8* %0, i64 %102
  %104 = add nsw i64 %102, -1
  %105 = and i64 %102, 3
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %120, label %107

107:                                              ; preds = %100, %107
  %108 = phi i32 [ %117, %107 ], [ %101, %100 ]
  %109 = phi i8* [ %111, %107 ], [ %0, %100 ]
  %110 = phi i64 [ %118, %107 ], [ %105, %100 ]
  %111 = getelementptr inbounds i8, i8* %109, i64 1
  %112 = load i8, i8* %109, align 1
  %113 = zext i8 %112 to i32
  %114 = add i32 %108, %113
  %115 = mul i32 %114, 1025
  %116 = lshr i32 %115, 6
  %117 = xor i32 %116, %115
  %118 = add i64 %110, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %107, !llvm.loop !5

120:                                              ; preds = %107, %100
  %121 = phi i32 [ undef, %100 ], [ %117, %107 ]
  %122 = phi i32 [ %101, %100 ], [ %117, %107 ]
  %123 = phi i8* [ %0, %100 ], [ %111, %107 ]
  %124 = icmp ult i64 %104, 3
  br i1 %124, label %157, label %125

125:                                              ; preds = %120, %125
  %126 = phi i32 [ %155, %125 ], [ %122, %120 ]
  %127 = phi i8* [ %149, %125 ], [ %123, %120 ]
  %128 = getelementptr inbounds i8, i8* %127, i64 1
  %129 = load i8, i8* %127, align 1
  %130 = zext i8 %129 to i32
  %131 = add i32 %126, %130
  %132 = mul i32 %131, 1025
  %133 = lshr i32 %132, 6
  %134 = xor i32 %133, %132
  %135 = getelementptr inbounds i8, i8* %127, i64 2
  %136 = load i8, i8* %128, align 1
  %137 = zext i8 %136 to i32
  %138 = add i32 %134, %137
  %139 = mul i32 %138, 1025
  %140 = lshr i32 %139, 6
  %141 = xor i32 %140, %139
  %142 = getelementptr inbounds i8, i8* %127, i64 3
  %143 = load i8, i8* %135, align 1
  %144 = zext i8 %143 to i32
  %145 = add i32 %141, %144
  %146 = mul i32 %145, 1025
  %147 = lshr i32 %146, 6
  %148 = xor i32 %147, %146
  %149 = getelementptr inbounds i8, i8* %127, i64 4
  %150 = load i8, i8* %142, align 1
  %151 = zext i8 %150 to i32
  %152 = add i32 %148, %151
  %153 = mul i32 %152, 1025
  %154 = lshr i32 %153, 6
  %155 = xor i32 %154, %153
  %156 = icmp eq i8* %149, %103
  br i1 %156, label %157, label %125

157:                                              ; preds = %120, %125, %97
  %158 = phi i32 [ %98, %97 ], [ %121, %120 ], [ %155, %125 ]
  %159 = mul i32 %158, 9
  %160 = lshr i32 %159, 11
  %161 = xor i32 %160, %159
  %162 = mul i32 %161, 32769
  %163 = and i32 %162, 1073741823
  %164 = add nsw i32 %163, -1
  %165 = ashr i32 %164, 31
  %166 = and i32 %165, 27
  %167 = or i32 %166, %162
  %168 = shl i32 %167, 2
  %169 = or i32 %168, 2
  br label %170

170:                                              ; preds = %36, %157, %94, %72
  %171 = phi i32 [ %89, %72 ], [ %96, %94 ], [ %169, %157 ], [ %38, %36 ]
  ret i32 %171
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug10WasmScript10CodeOffsetEv(%"class.v8::debug::WasmScript"*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.v8::debug::WasmScript"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 39
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 3
  %11 = inttoptr i64 %10 to %"struct.v8::internal::ManagedPtrDestructor"**
  %12 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %11, align 1
  %13 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %12, i64 0, i32 3
  %14 = bitcast i8** %13 to %"class.std::__1::shared_ptr.1728"**
  %15 = load %"class.std::__1::shared_ptr.1728"*, %"class.std::__1::shared_ptr.1728"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::shared_ptr.1728", %"class.std::__1::shared_ptr.1728"* %15, i64 0, i32 0
  %17 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %17, i64 0, i32 4, i32 0
  %19 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %18, align 8
  %20 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %19, i64 0, i32 18, i32 0
  %21 = load i32, i32* %20, align 4
  ret i32 %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v85debug8LocationC2Eii(%"class.v8::debug::Location"* nocapture, i32, i32) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 4
  %6 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v85debug8LocationC2Ev(%"class.v8::debug::Location"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %0, i64 0, i32 0
  %3 = load i32, i32* @_ZN2v88Function19kLineOffsetNotFoundE, align 4
  store i32 %3, i32* %2, align 4
  %4 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %0, i64 0, i32 1
  store i32 %3, i32* %4, align 4
  %5 = getelementptr inbounds %"class.v8::debug::Location", %"class.v8::debug::Location"* %0, i64 0, i32 2
  store i8 1, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug16GetLoadedScriptsEPNS_7IsolateERNS_21PersistentValueVectorINS0_6ScriptENS_34DefaultPersistentValueVectorTraitsEEE(%"class.v8::Isolate"*, %"class.v8::PersistentValueVector"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::Script::Iterator", align 8
  %4 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %5 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %6 = bitcast %"class.v8::Isolate"* %5 to i32*
  %7 = load i32, i32* %6, align 8
  store i32 5, i32* %6, align 8
  %8 = bitcast %"class.v8::internal::Script::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  call void @_ZN2v88internal6Script8IteratorC1EPNS0_7IsolateE(%"class.v8::internal::Script::Iterator"* nonnull %3, %"class.v8::internal::Isolate"* %4) #12
  %9 = call i64 @_ZN2v88internal6Script8Iterator4NextEv(%"class.v8::internal::Script::Iterator"* nonnull %3) #12
  %10 = trunc i64 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45584
  %14 = bitcast %"class.v8::Isolate"* %13 to i64*
  %15 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45592
  %16 = bitcast %"class.v8::Isolate"* %15 to i64**
  %17 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45600
  %18 = bitcast %"class.v8::Isolate"* %17 to i32*
  %19 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45608
  %20 = bitcast %"class.v8::Isolate"* %19 to %"class.v8::internal::CanonicalHandleScope"**
  %21 = bitcast %"class.v8::Isolate"* %13 to i64**
  %22 = bitcast %"class.v8::PersistentValueVector"* %1 to %"class.v8::internal::Isolate"**
  %23 = getelementptr inbounds %"class.v8::PersistentValueVector", %"class.v8::PersistentValueVector"* %1, i64 0, i32 1
  %24 = icmp eq %"class.v8::Isolate"* %0, null
  br label %26

25:                                               ; preds = %129, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  store i32 %7, i32* %6, align 8
  ret void

26:                                               ; preds = %12, %129
  %27 = phi i64 [ %9, %12 ], [ %130, %129 ]
  %28 = add i64 %27, 23
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = ashr i32 %30, 1
  %32 = and i32 %31, -2
  %33 = icmp eq i32 %32, 2
  br i1 %33, label %34, label %129

34:                                               ; preds = %26
  %35 = and i64 %27, -4294967296
  %36 = add i64 %27, 3
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %35, %39
  %41 = and i64 %39, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %90, label %43

43:                                               ; preds = %34
  %44 = add i64 %40, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %35, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = icmp ult i16 %51, 64
  br i1 %52, label %53, label %90

53:                                               ; preds = %43
  %54 = load atomic i32, i32* %45 acquire, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %35, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = and i16 %59, 7
  %61 = icmp eq i16 %60, 2
  br i1 %61, label %62, label %90

62:                                               ; preds = %53
  %63 = load atomic i32, i32* %45 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %35, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = and i16 %68, 8
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %62
  %72 = add i64 %40, 11
  %73 = inttoptr i64 %72 to %"class.v8::String::ExternalOneByteStringResource"**
  %74 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %73, align 1
  %75 = icmp eq %"class.v8::String::ExternalOneByteStringResource"* %74, null
  br i1 %75, label %129, label %90

76:                                               ; preds = %62
  %77 = load atomic i32, i32* %45 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %35, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load atomic i16, i16* %81 monotonic, align 2
  %83 = and i16 %82, 8
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %85, label %90

85:                                               ; preds = %76
  %86 = add i64 %40, 11
  %87 = inttoptr i64 %86 to %"class.v8::String::ExternalStringResource"**
  %88 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %87, align 1
  %89 = icmp eq %"class.v8::String::ExternalStringResource"* %88, null
  br i1 %89, label %129, label %90

90:                                               ; preds = %85, %71, %34, %76, %53, %43
  %91 = load i64, i64* %14, align 8
  %92 = load i64*, i64** %16, align 8
  %93 = load i32, i32* %18, align 8
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %18, align 8
  %95 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %20, align 8
  %96 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %95, null
  %97 = inttoptr i64 %91 to i64*
  br i1 %96, label %100, label %98

98:                                               ; preds = %90
  %99 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %95, i64 %27) #12
  br label %109

100:                                              ; preds = %90
  %101 = icmp eq i64* %92, %97
  br i1 %101, label %102, label %104

102:                                              ; preds = %100
  %103 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %4) #12
  br label %104

104:                                              ; preds = %102, %100
  %105 = phi i64* [ %103, %102 ], [ %97, %100 ]
  %106 = ptrtoint i64* %105 to i64
  %107 = add i64 %106, 8
  %108 = inttoptr i64 %107 to i64*
  store i64* %108, i64** %21, align 8
  store i64 %27, i64* %105, align 8
  br label %109

109:                                              ; preds = %98, %104
  %110 = phi i64* [ %99, %98 ], [ %105, %104 ]
  %111 = icmp eq i64* %110, null
  br i1 %111, label %116, label %112

112:                                              ; preds = %109
  %113 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %22, align 8
  %114 = call i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"* %113, i64* nonnull %110) #12
  %115 = ptrtoint i64* %114 to i64
  br label %116

116:                                              ; preds = %109, %112
  %117 = phi i64 [ %115, %112 ], [ 0, %109 ]
  call void @_ZN2v834DefaultPersistentValueVectorTraits6AppendEPNSt3__16vectorImNS1_9allocatorImEEEEm(%"class.std::__1::vector.92"* %23, i64 %117) #12
  br i1 %24, label %129, label %118

118:                                              ; preds = %116
  %119 = load i64*, i64** %21, align 8
  store i64 %91, i64* %14, align 8
  %120 = load i32, i32* %18, align 8
  %121 = add nsw i32 %120, -1
  store i32 %121, i32* %18, align 8
  %122 = load i64*, i64** %16, align 8
  %123 = icmp eq i64* %122, %92
  br i1 %123, label %126, label %124

124:                                              ; preds = %118
  store i64* %92, i64** %16, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %4) #12
  %125 = load i64*, i64** %21, align 8
  br label %126

126:                                              ; preds = %124, %118
  %127 = phi i64* [ %125, %124 ], [ %97, %118 ]
  %128 = phi i64* [ %92, %124 ], [ %119, %118 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %127, i64* %128) #12
  br label %129

129:                                              ; preds = %85, %71, %26, %126, %116
  %130 = call i64 @_ZN2v88internal6Script8Iterator4NextEv(%"class.v8::internal::Script::Iterator"* nonnull %3) #12
  %131 = trunc i64 %130 to i32
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %25, label %26
}

declare void @_ZN2v88internal6Script8IteratorC1EPNS0_7IsolateE(%"class.v8::internal::Script::Iterator"*, %"class.v8::internal::Isolate"*) unnamed_addr #4

declare i64 @_ZN2v88internal6Script8Iterator4NextEv(%"class.v8::internal::Script::Iterator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::UnboundScript"* @_ZN2v85debug22CompileInspectorScriptEPNS_7IsolateENS_5LocalINS_6StringEEE(%"class.v8::Isolate"*, %"class.v8::String"*) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::InternalEscapableScope", align 8
  %4 = alloca %"class.v8::CallDepthScope", align 8
  %5 = alloca %"struct.v8::internal::Compiler::ScriptDetails", align 8
  %6 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %7 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 168
  %8 = bitcast %"class.v8::Isolate"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13928
  %11 = bitcast %"class.v8::Isolate"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = trunc i64 %9 to i32
  %15 = icmp eq i32 %13, %14
  br i1 %15, label %22, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 392
  %18 = bitcast %"class.v8::Isolate"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %13, %20
  br i1 %21, label %107, label %22

22:                                               ; preds = %2, %16
  %23 = bitcast %"class.v8::InternalEscapableScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #12
  %24 = getelementptr inbounds %"class.v8::InternalEscapableScope", %"class.v8::InternalEscapableScope"* %3, i64 0, i32 0
  call void @_ZN2v820EscapableHandleScopeC2EPNS_7IsolateE(%"class.v8::EscapableHandleScope"* nonnull %24, %"class.v8::Isolate"* %0) #12
  %25 = bitcast %"class.v8::CallDepthScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %25) #12
  call void @_ZN2v814CallDepthScopeILb0EEC2EPNS_8internal7IsolateENS_5LocalINS_7ContextEEE(%"class.v8::CallDepthScope"* nonnull %4, %"class.v8::internal::Isolate"* %6, %"class.v8::Context"* null)
  %26 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %27 = bitcast %"class.v8::Isolate"* %26 to i32*
  %28 = load i32, i32* %27, align 8
  store i32 5, i32* %27, align 8
  %29 = bitcast %"class.v8::String"* %1 to i64*
  %30 = bitcast %"struct.v8::internal::Compiler::ScriptDetails"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"struct.v8::internal::Compiler::ScriptDetails", %"struct.v8::internal::Compiler::ScriptDetails"* %5, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 32, i1 false) #12
  store i32 1, i32* %31, align 8
  %32 = load i8, i8* @_ZN2v88internal29FLAG_expose_inspector_scriptsE, align 1, !range !4
  %33 = icmp eq i8 %32, 0
  %34 = select i1 %33, i32 2, i32 0
  %35 = call i64* @_ZN2v88internal8Compiler30GetSharedFunctionInfoForScriptEPNS0_7IsolateENS0_6HandleINS0_6StringEEERKNS1_13ScriptDetailsENS_19ScriptOriginOptionsEPNS_9ExtensionEPNS0_10ScriptDataENS_14ScriptCompiler14CompileOptionsENSF_13NoCacheReasonENS0_11NativesFlagE(%"class.v8::internal::Isolate"* %6, i64* %29, %"struct.v8::internal::Compiler::ScriptDetails"* nonnull dereferenceable(40) %5, i32 0, %"class.v8::Extension"* null, %"class.v8::internal::ScriptData"* null, i32 0, i32 6, i32 %34) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #12
  %36 = icmp eq i64* %35, null
  br i1 %36, label %37, label %54

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %4, i64 0, i32 2
  %39 = load i8, i8* %38, align 8
  %40 = or i8 %39, 2
  store i8 %40, i8* %38, align 8
  %41 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %4, i64 0, i32 0
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %4, i64 0, i32 4
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %42, i64 0, i32 0, i32 9, i32 10
  store i64 %44, i64* %45, align 8
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %42, i64 0, i32 0, i32 9, i32 0
  %49 = load %"class.v8::TryCatch"*, %"class.v8::TryCatch"** %48, align 8
  %50 = icmp eq %"class.v8::TryCatch"* %49, null
  br label %51

51:                                               ; preds = %37, %47
  %52 = phi i1 [ false, %37 ], [ %50, %47 ]
  %53 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %42, i1 zeroext %52) #12
  br label %57

54:                                               ; preds = %22
  %55 = call i64* @_ZN2v820EscapableHandleScope6EscapeEPm(%"class.v8::EscapableHandleScope"* nonnull %24, i64* nonnull %35) #12
  %56 = bitcast i64* %55 to %"class.v8::UnboundScript"*
  br label %57

57:                                               ; preds = %51, %54
  %58 = phi %"class.v8::UnboundScript"* [ %56, %54 ], [ null, %51 ]
  store i32 %28, i32* %27, align 8
  %59 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %4, i64 0, i32 0
  %60 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %59, align 8
  %61 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %4, i64 0, i32 1, i32 0
  %62 = load %"class.v8::Context"*, %"class.v8::Context"** %61, align 8
  %63 = icmp eq %"class.v8::Context"* %62, null
  %64 = bitcast %"class.v8::Context"* %62 to i64*
  %65 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %4, i64 0, i32 2
  %66 = load i8, i8* %65, align 8
  br i1 %63, label %87, label %67

67:                                               ; preds = %57
  %68 = and i8 %66, 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %82, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %60, i64 0, i32 32
  %72 = load %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::HandleScopeImplementer"** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %72, i64 0, i32 4
  %74 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %72, i64 0, i32 4, i32 0, i32 2
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, -1
  %77 = bitcast %"class.v8::internal::DetachableVector.752"* %73 to %"class.v8::internal::Context"**
  %78 = load %"class.v8::internal::Context"*, %"class.v8::internal::Context"** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %78, i64 %76, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  store i64 %76, i64* %74, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %60, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %80, i64* %81, align 8
  br label %82

82:                                               ; preds = %70, %67
  %83 = load i64, i64* %64, align 8
  %84 = add i64 %83, -1
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  br label %87

87:                                               ; preds = %57, %82
  %88 = and i8 %66, 2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %4, i64 0, i32 4
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %60, i64 0, i32 0, i32 9, i32 10
  store i64 %92, i64* %93, align 8
  br label %94

94:                                               ; preds = %90, %87
  %95 = lshr i8 %66, 2
  %96 = and i8 %95, 1
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %60, i64 0, i32 113
  store i8 %96, i8* %97, align 8
  %98 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %4, i64 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  %99 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %4, i64 0, i32 3, i32 4
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 2
  br i1 %101, label %105, label %102

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %4, i64 0, i32 3, i32 1
  %104 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %103, align 8
  call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %104) #12
  br label %105

105:                                              ; preds = %94, %102
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %25) #12
  %106 = getelementptr inbounds %"class.v8::InternalEscapableScope", %"class.v8::InternalEscapableScope"* %3, i64 0, i32 0, i32 0
  call void @_ZN2v811HandleScopeD2Ev(%"class.v8::HandleScope"* nonnull %106) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #12
  br label %107

107:                                              ; preds = %16, %105
  %108 = phi %"class.v8::UnboundScript"* [ %58, %105 ], [ null, %16 ]
  ret %"class.v8::UnboundScript"* %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v814CallDepthScopeILb0EEC2EPNS_8internal7IsolateENS_5LocalINS_7ContextEEE(%"class.v8::CallDepthScope"*, %"class.v8::internal::Isolate"*, %"class.v8::Context"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %0, i64 0, i32 1
  %6 = bitcast %"class.v8::Local"* %5 to i64*
  %7 = ptrtoint %"class.v8::Context"* %2 to i64
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8
  %10 = and i8 %9, -4
  store i8 %10, i8* %8, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 113
  %12 = load i8, i8* %11, align 8, !range !4
  %13 = shl nuw nsw i8 %12, 2
  %14 = and i8 %9, -8
  %15 = or i8 %13, %14
  store i8 %15, i8* %8, align 8
  %16 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 114
  %18 = load i8, i8* %17, align 1, !range !4
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, i8 2, i8 %12
  %21 = zext i8 %20 to i32
  tail call void @_ZN2v88internal15InterruptsScopeC1EPNS0_7IsolateElNS1_4ModeE(%"class.v8::internal::InterruptsScope"* %16, %"class.v8::internal::Isolate"* %1, i64 1, i32 %21) #12
  %22 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 9, i32 10
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %0, i64 0, i32 4
  store i64 %24, i64* %25, align 8
  %26 = ptrtoint %"class.v8::CallDepthScope"* %0 to i64
  store i64 %26, i64* %23, align 8
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 113
  store i8 0, i8* %28, align 8
  %29 = icmp eq %"class.v8::Context"* %2, null
  br i1 %29, label %107, label %30

30:                                               ; preds = %3
  %31 = bitcast %"class.v8::Context"* %2 to i64*
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 32
  %33 = load %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::HandleScopeImplementer"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %59, label %38

38:                                               ; preds = %30
  %39 = and i64 %35, -4294967296
  %40 = add i64 %35, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %39, %43
  %45 = add i64 %44, 19
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = load i64, i64* %31, align 8
  %49 = and i64 %48, -4294967296
  %50 = add i64 %48, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %49, %53
  %55 = add i64 %54, 19
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %47, %57
  br i1 %58, label %107, label %59

59:                                               ; preds = %38, %30
  %60 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %33, i64 0, i32 4
  %61 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %33, i64 0, i32 4, i32 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %33, i64 0, i32 4, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %62, %64
  br i1 %65, label %69, label %66

66:                                               ; preds = %59
  %67 = bitcast %"class.v8::internal::DetachableVector.752"* %60 to %"class.v8::internal::Context"**
  %68 = load %"class.v8::internal::Context"*, %"class.v8::internal::Context"** %67, align 8
  br label %98

69:                                               ; preds = %59
  %70 = shl i64 %62, 1
  %71 = load i64, i64* @_ZN2v88internal20DetachableVectorBase16kMinimumCapacityE, align 8
  %72 = icmp ult i64 %71, %70
  %73 = select i1 %72, i64 %70, i64 %71
  %74 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %73, i64 8) #12
  %75 = extractvalue { i64, i1 } %74, 1
  %76 = extractvalue { i64, i1 } %74, 0
  %77 = select i1 %75, i64 -1, i64 %76
  %78 = tail call i8* @_Znam(i64 %77) #17
  %79 = icmp eq i64 %73, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %69
  %81 = shl nsw i64 %73, 3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 0, i64 %81, i1 false) #12
  br label %82

82:                                               ; preds = %80, %69
  %83 = bitcast %"class.v8::internal::DetachableVector.752"* %60 to %"class.v8::internal::Context"**
  %84 = load %"class.v8::internal::Context"*, %"class.v8::internal::Context"** %83, align 8
  %85 = icmp eq i64 %62, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %82
  %87 = shl nuw i64 %62, 3
  %88 = bitcast %"class.v8::internal::Context"* %84 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* align 8 %88, i64 %87, i1 false) #12
  br label %89

89:                                               ; preds = %86, %82
  %90 = icmp eq %"class.v8::internal::Context"* %84, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %89
  %92 = bitcast %"class.v8::internal::Context"* %84 to i8*
  tail call void @_ZdaPv(i8* %92) #17
  %93 = load i64, i64* %61, align 8
  br label %94

94:                                               ; preds = %91, %89
  %95 = phi i64 [ %62, %89 ], [ %93, %91 ]
  %96 = getelementptr inbounds %"class.v8::internal::DetachableVector.752", %"class.v8::internal::DetachableVector.752"* %60, i64 0, i32 0, i32 0
  store i8* %78, i8** %96, align 8
  store i64 %73, i64* %63, align 8
  %97 = bitcast i8* %78 to %"class.v8::internal::Context"*
  br label %98

98:                                               ; preds = %66, %94
  %99 = phi i64 [ %62, %66 ], [ %95, %94 ]
  %100 = phi %"class.v8::internal::Context"* [ %68, %66 ], [ %97, %94 ]
  %101 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %100, i64 %99, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %35, i64* %101, align 8
  %102 = load i64, i64* %61, align 8
  %103 = add i64 %102, 1
  store i64 %103, i64* %61, align 8
  %104 = load i64, i64* %31, align 8
  store i64 %104, i64* %34, align 8
  %105 = load i8, i8* %8, align 8
  %106 = or i8 %105, 1
  store i8 %106, i8* %8, align 8
  br label %107

107:                                              ; preds = %38, %98, %3
  ret void
}

declare i64* @_ZN2v88internal8Compiler30GetSharedFunctionInfoForScriptEPNS0_7IsolateENS0_6HandleINS0_6StringEEERKNS1_13ScriptDetailsENS_19ScriptOriginOptionsEPNS_9ExtensionEPNS0_10ScriptDataENS_14ScriptCompiler14CompileOptionsENSF_13NoCacheReasonENS0_11NativesFlagE(%"class.v8::internal::Isolate"*, i64*, %"struct.v8::internal::Compiler::ScriptDetails"* dereferenceable(40), i32, %"class.v8::Extension"*, %"class.v8::internal::ScriptData"*, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD2Ev(%"class.v8::HandleScope"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug28TierDownAllModulesPerIsolateEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 {
  %2 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %3 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 50464
  %4 = bitcast %"class.v8::Isolate"* %3 to %"class.v8::internal::wasm::WasmEngine"**
  %5 = load %"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::wasm::WasmEngine"** %4, align 8
  tail call void @_ZN2v88internal4wasm10WasmEngine28TierDownAllModulesPerIsolateEPNS0_7IsolateE(%"class.v8::internal::wasm::WasmEngine"* %5, %"class.v8::internal::Isolate"* %2) #12
  ret void
}

declare void @_ZN2v88internal4wasm10WasmEngine28TierDownAllModulesPerIsolateEPNS0_7IsolateE(%"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug26TierUpAllModulesPerIsolateEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 {
  %2 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %3 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 50464
  %4 = bitcast %"class.v8::Isolate"* %3 to %"class.v8::internal::wasm::WasmEngine"**
  %5 = load %"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::wasm::WasmEngine"** %4, align 8
  tail call void @_ZN2v88internal4wasm10WasmEngine26TierUpAllModulesPerIsolateEPNS0_7IsolateE(%"class.v8::internal::wasm::WasmEngine"* %5, %"class.v8::internal::Isolate"* %2) #12
  ret void
}

declare void @_ZN2v88internal4wasm10WasmEngine26TierUpAllModulesPerIsolateEPNS0_7IsolateE(%"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug16SetDebugDelegateEPNS_7IsolateEPNS0_13DebugDelegateE(%"class.v8::Isolate"* nocapture readonly, %"class.v8::debug::DebugDelegate"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45960
  %4 = bitcast %"class.v8::Isolate"* %3 to %"class.v8::internal::Debug"**
  %5 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %4, align 8
  tail call void @_ZN2v88internal5Debug16SetDebugDelegateEPNS_5debug13DebugDelegateE(%"class.v8::internal::Debug"* %5, %"class.v8::debug::DebugDelegate"* %1) #12
  ret void
}

declare void @_ZN2v88internal5Debug16SetDebugDelegateEPNS_5debug13DebugDelegateE(%"class.v8::internal::Debug"*, %"class.v8::debug::DebugDelegate"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug21SetAsyncEventDelegateEPNS_7IsolateEPNS0_18AsyncEventDelegateE(%"class.v8::Isolate"*, %"class.v8::debug::AsyncEventDelegate"*) local_unnamed_addr #0 {
  %3 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %4 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 50360
  %5 = bitcast %"class.v8::Isolate"* %4 to %"class.v8::debug::AsyncEventDelegate"**
  store %"class.v8::debug::AsyncEventDelegate"* %1, %"class.v8::debug::AsyncEventDelegate"** %5, align 8
  tail call void @_ZN2v88internal7Isolate23PromiseHookStateUpdatedEv(%"class.v8::internal::Isolate"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug25ResetBlackboxedStateCacheEPNS_7IsolateENS_5LocalINS0_6ScriptEEE(%"class.v8::Isolate"*, %"class.v8::debug::Script"*) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::SharedFunctionInfo::ScriptIterator", align 8
  %4 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %5 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %6 = bitcast %"class.v8::Isolate"* %5 to i32*
  %7 = load i32, i32* %6, align 8
  store i32 5, i32* %6, align 8
  %8 = bitcast %"class.v8::internal::SharedFunctionInfo::ScriptIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = bitcast %"class.v8::debug::Script"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  call void @_ZN2v88internal18SharedFunctionInfo14ScriptIteratorC1EPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %3, %"class.v8::internal::Isolate"* %4, i64 %10) #12
  %11 = call i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %3) #12
  %12 = trunc i64 %11 to i32
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %40, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  store i32 %7, i32* %6, align 8
  ret void

15:                                               ; preds = %2, %40
  %16 = phi i64 [ %41, %40 ], [ %11, %2 ]
  %17 = and i64 %16, -4294967296
  %18 = add i64 %16, 15
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 acquire, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %17, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp eq i16 %30, 100
  br i1 %31, label %32, label %40

32:                                               ; preds = %15
  %33 = load atomic i32, i32* %19 acquire, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %17, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, -18
  store atomic volatile i32 %39, i32* %37 monotonic, align 4
  br label %40

40:                                               ; preds = %15, %32
  %41 = call i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %3) #12
  %42 = trunc i64 %41 to i32
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %14, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v85debug18EstimatedValueSizeEPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", align 8
  %4 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %5 = bitcast %"class.v8::Isolate"* %4 to i32*
  %6 = load i32, i32* %5, align 8
  store i32 5, i32* %5, align 8
  %7 = bitcast %"class.v8::Value"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %3, i64 0, i32 0
  %15 = and i64 %8, -4294967296
  %16 = add i64 %8, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %14, i64 %20) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  br label %22

22:                                               ; preds = %2, %11
  %23 = phi i32 [ %21, %11 ], [ 4, %2 ]
  store i32 %6, i32* %5, align 8
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug12AccessorPair9CheckCastEPNS_5ValueE(%"class.v8::Value"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::Value"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = and i64 %3, -4294967296
  %8 = add i64 %3, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 87
  br i1 %16, label %18, label %17

17:                                               ; preds = %1, %6
  tail call void @_ZN2v85Utils16ReportApiFailureEPKcS2_(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.13, i64 0, i64 0)) #12
  br label %18

18:                                               ; preds = %6, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug15WasmValueObject9CheckCastEPNS_5ValueE(%"class.v8::Value"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::Value"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = and i64 %3, -4294967296
  %8 = add i64 %3, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 1117
  br i1 %16, label %18, label %17

17:                                               ; preds = %1, %6
  tail call void @_ZN2v85Utils16ReportApiFailureEPKcS2_(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.15, i64 0, i64 0)) #12
  br label %18

18:                                               ; preds = %6, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v85debug15WasmValueObject17IsWasmValueObjectENS_5LocalINS_5ValueEEE(%"class.v8::Value"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::Value"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = and i64 %3, -4294967296
  %8 = add i64 %3, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 1117
  br label %17

17:                                               ; preds = %1, %6
  %18 = phi i1 [ false, %1 ], [ %16, %6 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::String"* @_ZNK2v85debug15WasmValueObject4typeEv(%"class.v8::debug::WasmValueObject"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::debug::WasmValueObject"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = and i64 %3, -4294967296
  %11 = add i64 %3, 11
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %17 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %16, align 8
  %18 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %1
  %20 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %17, i64 %15) #12
  br label %34

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #12
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi i64* [ %28, %27 ], [ %23, %21 ]
  %31 = ptrtoint i64* %30 to i64
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  store i64* %33, i64** %22, align 8
  store i64 %15, i64* %30, align 8
  br label %34

34:                                               ; preds = %19, %29
  %35 = phi i64* [ %20, %19 ], [ %30, %29 ]
  %36 = bitcast i64* %35 to %"class.v8::String"*
  ret %"class.v8::String"* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Function"* @_ZN2v85debug10GetBuiltinEPNS_7IsolateENS0_7BuiltinE(%"class.v8::Isolate"*, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::ScopeInfo", align 8
  %4 = alloca %"class.v8::internal::Factory::JSFunctionBuilder", align 8
  %5 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %6 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %7 = bitcast %"class.v8::Isolate"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  store i32 5, i32* %7, align 8
  %9 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45584
  %10 = bitcast %"class.v8::Isolate"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45592
  %13 = bitcast %"class.v8::Isolate"* %12 to i64**
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45600
  %16 = bitcast %"class.v8::Isolate"* %15 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = icmp eq i32 %1, 0
  %20 = inttoptr i64 %11 to i64*
  br i1 %19, label %22, label %21, !prof !3

21:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0)) #16
  unreachable

22:                                               ; preds = %2
  %23 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Factory"*
  %24 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 200
  %25 = bitcast %"class.v8::Isolate"* %24 to i64*
  %26 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13840
  %27 = bitcast %"class.v8::Isolate"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %28, -4294967296
  %30 = add i64 %28, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %29, %33
  %35 = add i64 %34, 19
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %29, %38
  %40 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45608
  %41 = bitcast %"class.v8::Isolate"* %40 to %"class.v8::internal::CanonicalHandleScope"**
  %42 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %41, align 8
  %43 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %22
  %45 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %42, i64 %39) #12
  br label %56

46:                                               ; preds = %22
  %47 = bitcast %"class.v8::Isolate"* %9 to i64**
  %48 = icmp eq i64* %14, %20
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  %50 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %5) #12
  br label %51

51:                                               ; preds = %49, %46
  %52 = phi i64* [ %50, %49 ], [ %20, %46 ]
  %53 = ptrtoint i64* %52 to i64
  %54 = add i64 %53, 8
  %55 = inttoptr i64 %54 to i64*
  store i64* %55, i64** %47, align 8
  store i64 %39, i64* %52, align 8
  br label %56

56:                                               ; preds = %44, %51
  %57 = phi i64* [ %45, %44 ], [ %52, %51 ]
  %58 = tail call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %23, i64* %25, i32 1213, i8 zeroext 0) #12
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, 27
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = or i32 %62, 64
  store atomic volatile i32 %63, i32* %61 monotonic, align 4
  %64 = load atomic i32, i32* %61 monotonic, align 4
  %65 = and i32 %64, 64
  %66 = icmp eq i32 %65, 0
  %67 = load atomic i32, i32* %61 monotonic, align 4
  %68 = trunc i32 %67 to i8
  %69 = and i8 %68, 31
  %70 = and i64 %59, -4294967296
  %71 = add i64 %59, 7
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 acquire, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %70, %74
  %76 = and i64 %74, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %92, label %78

78:                                               ; preds = %56
  %79 = add i64 %75, -1
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %70, %82
  %84 = add i64 %83, 7
  %85 = inttoptr i64 %84 to i16*
  %86 = load atomic i16, i16* %85 monotonic, align 2
  %87 = icmp eq i16 %86, 178
  br i1 %87, label %88, label %92

88:                                               ; preds = %78
  %89 = bitcast %"class.v8::internal::ScopeInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #12
  %90 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %75, i64* %90, align 8
  %91 = call zeroext i1 @_ZNK2v88internal9ScopeInfo21HasSharedFunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #12
  br label %94

92:                                               ; preds = %78, %56
  %93 = icmp ne i32 %73, 0
  br label %94

94:                                               ; preds = %92, %88
  %95 = phi i1 [ %91, %88 ], [ %93, %92 ]
  %96 = add nsw i8 %69, -3
  %97 = icmp ult i8 %96, 4
  br i1 %97, label %126, label %98

98:                                               ; preds = %94
  %99 = add nsw i8 %69, -16
  %100 = icmp ult i8 %99, 6
  br i1 %100, label %101, label %105

101:                                              ; preds = %98
  %102 = add nsw i8 %69, -12
  %103 = icmp ult i8 %102, 7
  %104 = select i1 %103, i32 198, i32 196
  br label %119

105:                                              ; preds = %98
  %106 = add nsw i8 %69, -2
  %107 = icmp ult i8 %106, 24
  br i1 %107, label %110, label %108

108:                                              ; preds = %110, %105
  %109 = select i1 %66, i32 185, i32 189
  br label %119

110:                                              ; preds = %105
  %111 = zext i8 %106 to i32
  %112 = lshr i32 15744993, %111
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %108, label %115

115:                                              ; preds = %110
  %116 = sext i8 %106 to i64
  %117 = getelementptr inbounds [24 x i32], [24 x i32]* @switch.table._ZN2v85debug10GetBuiltinEPNS_7IsolateENS0_7BuiltinE, i64 0, i64 %116
  %118 = load i32, i32* %117, align 4
  br label %119

119:                                              ; preds = %115, %108, %101
  %120 = phi i32 [ %104, %101 ], [ %109, %108 ], [ %118, %115 ]
  %121 = xor i1 %95, true
  %122 = zext i1 %121 to i32
  %123 = add nuw nsw i32 %120, %122
  %124 = shl nuw nsw i32 %123, 14
  %125 = add nsw i32 %124, -3031040
  br label %126

126:                                              ; preds = %94, %119
  %127 = phi i32 [ %125, %119 ], [ 245760, %94 ]
  %128 = load atomic i32, i32* %61 monotonic, align 4
  %129 = and i32 %128, -507905
  %130 = or i32 %129, %127
  store atomic volatile i32 %130, i32* %61 monotonic, align 4
  %131 = bitcast %"class.v8::internal::Factory::JSFunctionBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %131) #12
  call void @_ZN2v88internal7Factory17JSFunctionBuilderC1EPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS5_INS0_7ContextEEE(%"class.v8::internal::Factory::JSFunctionBuilder"* nonnull %4, %"class.v8::internal::Isolate"* %5, i64* %58, i64* %57) #12
  %132 = load i64, i64* %27, align 8
  %133 = and i64 %132, -4294967296
  %134 = add i64 %132, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %133, %137
  %139 = add i64 %138, 19
  %140 = inttoptr i64 %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %133, %142
  %144 = add i64 %143, 775
  %145 = inttoptr i64 %144 to i32*
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %133, %147
  %149 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %41, align 8
  %150 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %149, null
  br i1 %150, label %155, label %151

151:                                              ; preds = %126
  %152 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %149, i64 %148) #12
  %153 = ptrtoint i64* %152 to i64
  %154 = bitcast %"class.v8::Isolate"* %9 to i64**
  br label %167

155:                                              ; preds = %126
  %156 = bitcast %"class.v8::Isolate"* %9 to i64**
  %157 = load i64*, i64** %156, align 8
  %158 = load i64*, i64** %13, align 8
  %159 = icmp eq i64* %157, %158
  br i1 %159, label %160, label %162

160:                                              ; preds = %155
  %161 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %5) #12
  br label %162

162:                                              ; preds = %160, %155
  %163 = phi i64* [ %161, %160 ], [ %157, %155 ]
  %164 = ptrtoint i64* %163 to i64
  %165 = add i64 %164, 8
  %166 = inttoptr i64 %165 to i64*
  store i64* %166, i64** %156, align 8
  store i64 %148, i64* %163, align 8
  br label %167

167:                                              ; preds = %151, %162
  %168 = phi i64** [ %154, %151 ], [ %156, %162 ]
  %169 = phi i64 [ %153, %151 ], [ %164, %162 ]
  %170 = getelementptr inbounds %"class.v8::internal::Factory::JSFunctionBuilder", %"class.v8::internal::Factory::JSFunctionBuilder"* %4, i64 0, i32 3
  %171 = bitcast %"class.v8::internal::MaybeHandle.1589"* %170 to i64*
  store i64 %169, i64* %171, align 8
  %172 = call i64* @_ZN2v88internal7Factory17JSFunctionBuilder5BuildEv(%"class.v8::internal::Factory::JSFunctionBuilder"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %131) #12
  %173 = load i64, i64* %172, align 8
  %174 = add i64 %173, 11
  %175 = inttoptr i64 %174 to i32*
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i64 %173, -4294967296
  %178 = zext i32 %176 to i64
  %179 = or i64 %177, %178
  %180 = add i64 %179, 21
  %181 = inttoptr i64 %180 to i16*
  store i16 0, i16* %181, align 2
  %182 = load i64, i64* %172, align 8
  %183 = add i64 %182, 11
  %184 = inttoptr i64 %183 to i32*
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i64 %182, -4294967296
  %187 = zext i32 %185 to i64
  %188 = or i64 %186, %187
  %189 = add i64 %188, 19
  %190 = inttoptr i64 %189 to i16*
  store i16 0, i16* %190, align 2
  %191 = load i64, i64* %172, align 8
  %192 = load i64*, i64** %168, align 8
  store i64 %11, i64* %10, align 8
  %193 = load i32, i32* %16, align 8
  %194 = add nsw i32 %193, -1
  store i32 %194, i32* %16, align 8
  %195 = load i64*, i64** %13, align 8
  %196 = icmp eq i64* %195, %14
  br i1 %196, label %199, label %197

197:                                              ; preds = %167
  store i64* %14, i64** %13, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %5) #12
  %198 = load i64*, i64** %168, align 8
  br label %199

199:                                              ; preds = %197, %167
  %200 = phi i64* [ %198, %197 ], [ %20, %167 ]
  %201 = phi i64* [ %14, %197 ], [ %192, %167 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %200, i64* %201) #12
  %202 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %41, align 8
  %203 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %202, null
  br i1 %203, label %206, label %204

204:                                              ; preds = %199
  %205 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %202, i64 %191) #12
  br label %217

206:                                              ; preds = %199
  %207 = load i64*, i64** %168, align 8
  %208 = load i64*, i64** %13, align 8
  %209 = icmp eq i64* %207, %208
  br i1 %209, label %210, label %212

210:                                              ; preds = %206
  %211 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %5) #12
  br label %212

212:                                              ; preds = %210, %206
  %213 = phi i64* [ %211, %210 ], [ %207, %206 ]
  %214 = ptrtoint i64* %213 to i64
  %215 = add i64 %214, 8
  %216 = inttoptr i64 %215 to i64*
  store i64* %216, i64** %168, align 8
  store i64 %191, i64* %213, align 8
  br label %217

217:                                              ; preds = %204, %212
  %218 = phi i64* [ %205, %204 ], [ %213, %212 ]
  %219 = load i64*, i64** %168, align 8
  %220 = load i32, i32* %16, align 8
  %221 = add nsw i32 %220, 1
  store i32 %221, i32* %16, align 8
  %222 = bitcast i64* %218 to %"class.v8::Function"*
  %223 = icmp eq %"class.v8::Isolate"* %0, null
  br i1 %223, label %225, label %224

224:                                              ; preds = %217
  store i32 %220, i32* %16, align 8
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %219, i64* %219) #12
  br label %225

225:                                              ; preds = %217, %224
  store i32 %8, i32* %7, align 8
  ret %"class.v8::Function"* %222
}

declare i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"*, i64*, i32, i8 zeroext) local_unnamed_addr #4

declare void @_ZN2v88internal7Factory17JSFunctionBuilderC1EPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS5_INS0_7ContextEEE(%"class.v8::internal::Factory::JSFunctionBuilder"*, %"class.v8::internal::Isolate"*, i64*, i64*) unnamed_addr #4

declare i64* @_ZN2v88internal7Factory17JSFunctionBuilder5BuildEv(%"class.v8::internal::Factory::JSFunctionBuilder"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug18SetConsoleDelegateEPNS_7IsolateEPNS0_15ConsoleDelegateE(%"class.v8::Isolate"*, %"class.v8::debug::ConsoleDelegate"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %4 = bitcast %"class.v8::Isolate"* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 50352
  %7 = bitcast %"class.v8::Isolate"* %6 to %"class.v8::debug::ConsoleDelegate"**
  store %"class.v8::debug::ConsoleDelegate"* %1, %"class.v8::debug::ConsoleDelegate"** %7, align 8
  store i32 %5, i32* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v85debug20ConsoleCallArgumentsC2ERKNS_20FunctionCallbackInfoINS_5ValueEEE(%"class.v8::debug::ConsoleCallArguments"* nocapture, %"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 1
  %4 = bitcast i64** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.v8::debug::ConsoleCallArguments", %"class.v8::debug::ConsoleCallArguments"* %0, i64 0, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"class.v8::debug::ConsoleCallArguments", %"class.v8::debug::ConsoleCallArguments"* %0, i64 0, i32 0, i32 1
  %10 = bitcast i64** %9 to i64*
  store i64 %5, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::debug::ConsoleCallArguments", %"class.v8::debug::ConsoleCallArguments"* %0, i64 0, i32 0, i32 2
  store i32 %7, i32* %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v85debug20ConsoleCallArgumentsC2ERKNS_8internal16BuiltinArgumentsE(%"class.v8::debug::ConsoleCallArguments"* nocapture, %"class.v8::internal::BuiltinArguments"* nocapture readonly dereferenceable(16)) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %1, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i32
  %6 = icmp sgt i32 %5, 5
  br i1 %6, label %7, label %15

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::BuiltinArguments", %"class.v8::internal::BuiltinArguments"* %1, i64 0, i32 0, i32 1
  %9 = bitcast i64** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = mul i64 %4, -8
  %12 = add i64 %11, 48
  %13 = add i64 %12, %10
  %14 = inttoptr i64 %13 to i64*
  br label %15

15:                                               ; preds = %2, %7
  %16 = phi i64* [ %14, %7 ], [ null, %2 ]
  %17 = add nsw i32 %5, -5
  %18 = getelementptr inbounds %"class.v8::debug::ConsoleCallArguments", %"class.v8::debug::ConsoleCallArguments"* %0, i64 0, i32 0, i32 0
  store i64* null, i64** %18, align 8
  %19 = getelementptr inbounds %"class.v8::debug::ConsoleCallArguments", %"class.v8::debug::ConsoleCallArguments"* %0, i64 0, i32 0, i32 1
  store i64* %16, i64** %19, align 8
  %20 = getelementptr inbounds %"class.v8::debug::ConsoleCallArguments", %"class.v8::debug::ConsoleCallArguments"* %0, i64 0, i32 0, i32 2
  store i32 %17, i32* %20, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2v85debug15GetStackFrameIdENS_5LocalINS_10StackFrameEEE(%"class.v8::StackFrame"* nocapture readnone) local_unnamed_addr #10 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::StackTrace"* @_ZN2v85debug21GetDetailedStackTraceEPNS_7IsolateENS_5LocalINS_6ObjectEEE(%"class.v8::Isolate"*, %"class.v8::Object"*) local_unnamed_addr #0 {
  %3 = bitcast %"class.v8::Object"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ugt i16 %13, 188
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %17 = tail call i64* @_ZN2v88internal7Isolate21GetDetailedStackTraceENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %16, i64* %3) #12
  %18 = bitcast i64* %17 to %"class.v8::StackTrace"*
  br label %19

19:                                               ; preds = %2, %15
  %20 = phi %"class.v8::StackTrace"* [ %18, %15 ], [ null, %2 ]
  ret %"class.v8::StackTrace"* %20
}

declare i64* @_ZN2v88internal7Isolate21GetDetailedStackTraceENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::debug::Script"* @_ZN2v85debug15GeneratorObject6ScriptEv(%"class.v8::debug::GeneratorObject"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::debug::GeneratorObject"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 11
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %4, %13
  %15 = add i64 %14, 15
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 acquire, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %4, %18
  %20 = add i64 %19, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %4, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = icmp eq i16 %27, 100
  br i1 %28, label %29, label %35

29:                                               ; preds = %1
  %30 = add i64 %19, 11
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %4, %33
  br label %35

35:                                               ; preds = %1, %29
  %36 = phi i64 [ %34, %29 ], [ %19, %1 ]
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %79, label %39

39:                                               ; preds = %35
  %40 = and i64 %36, -4294967296
  %41 = add i64 %36, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %40, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = icmp eq i16 %48, 112
  br i1 %49, label %50, label %79

50:                                               ; preds = %39
  %51 = load i64, i64* %2, align 8
  %52 = and i64 %51, -262144
  %53 = or i64 %52, 16
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = add i64 %55, -41416
  %57 = inttoptr i64 %56 to %"class.v8::internal::Isolate"*
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 4
  %59 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %58, align 8
  %60 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %50
  %62 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %59, i64 %36) #12
  br label %76

63:                                               ; preds = %50
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 1
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %65, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %57) #12
  br label %71

71:                                               ; preds = %69, %63
  %72 = phi i64* [ %70, %69 ], [ %65, %63 ]
  %73 = ptrtoint i64* %72 to i64
  %74 = add i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  store i64* %75, i64** %64, align 8
  store i64 %36, i64* %72, align 8
  br label %76

76:                                               ; preds = %61, %71
  %77 = phi i64* [ %62, %61 ], [ %72, %71 ]
  %78 = bitcast i64* %77 to %"class.v8::debug::Script"*
  br label %79

79:                                               ; preds = %35, %39, %76
  %80 = phi %"class.v8::debug::Script"* [ %78, %76 ], [ null, %39 ], [ null, %35 ]
  ret %"class.v8::debug::Script"* %80
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Function"* @_ZN2v85debug15GeneratorObject8FunctionEv(%"class.v8::debug::GeneratorObject"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::debug::GeneratorObject"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = and i64 %3, -262144
  %11 = or i64 %10, 16
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 16
  %14 = add i64 %13, -41416
  %15 = inttoptr i64 %14 to %"class.v8::internal::Isolate"*
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 4
  %17 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %16, align 8
  %18 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %1
  %20 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %17, i64 %9) #12
  br label %34

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 31, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %15) #12
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi i64* [ %28, %27 ], [ %23, %21 ]
  %31 = ptrtoint i64* %30 to i64
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  store i64* %33, i64** %22, align 8
  store i64 %9, i64* %30, align 8
  br label %34

34:                                               ; preds = %19, %29
  %35 = phi i64* [ %20, %19 ], [ %30, %29 ]
  %36 = bitcast i64* %35 to %"class.v8::Function"*
  ret %"class.v8::Function"* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i8 } @_ZN2v85debug15GeneratorObject17SuspendedLocationEv(%"class.v8::debug::GeneratorObject"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.v8::internal::Script::PositionInfo", align 4
  %3 = alloca %"class.v8::internal::Handle<v8::internal::JSGeneratorObject>::ObjectRef", align 8
  %4 = bitcast %"class.v8::debug::GeneratorObject"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 31
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0)) #16
  unreachable

11:                                               ; preds = %1
  %12 = and i64 %5, -4294967296
  %13 = add i64 %5, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 11
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %12, %21
  %23 = add i64 %22, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %12, %26
  %28 = add i64 %27, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %12, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = icmp eq i16 %35, 100
  br i1 %36, label %37, label %43

37:                                               ; preds = %11
  %38 = add i64 %27, 11
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %12, %41
  br label %43

43:                                               ; preds = %11, %37
  %44 = phi i64 [ %42, %37 ], [ %27, %11 ]
  %45 = and i64 %44, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %58, label %47

47:                                               ; preds = %43
  %48 = and i64 %44, -4294967296
  %49 = add i64 %44, -1
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %48, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = icmp eq i16 %56, 112
  br i1 %57, label %60, label %58

58:                                               ; preds = %43, %47
  %59 = load i32, i32* @_ZN2v88Function19kLineOffsetNotFoundE, align 4
  br label %130

60:                                               ; preds = %47
  %61 = load i64, i64* %4, align 8
  %62 = and i64 %61, -262144
  %63 = or i64 %62, 16
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64, align 16
  %66 = add i64 %65, -41416
  %67 = inttoptr i64 %66 to %"class.v8::internal::Isolate"*
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %67, i64 0, i32 31, i32 4
  %69 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %68, align 8
  %70 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %60
  %72 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %69, i64 %44) #12
  br label %86

73:                                               ; preds = %60
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %67, i64 0, i32 31, i32 0
  %75 = load i64*, i64** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %67, i64 0, i32 31, i32 1
  %77 = load i64*, i64** %76, align 8
  %78 = icmp eq i64* %75, %77
  br i1 %78, label %79, label %81

79:                                               ; preds = %73
  %80 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %67) #12
  br label %81

81:                                               ; preds = %79, %73
  %82 = phi i64* [ %80, %79 ], [ %75, %73 ]
  %83 = ptrtoint i64* %82 to i64
  %84 = add i64 %83, 8
  %85 = inttoptr i64 %84 to i64*
  store i64* %85, i64** %74, align 8
  store i64 %44, i64* %82, align 8
  br label %86

86:                                               ; preds = %71, %81
  %87 = phi i64* [ %72, %71 ], [ %82, %81 ]
  %88 = bitcast %"struct.v8::internal::Script::PositionInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %88, i8 -1, i64 16, i1 false) #12
  %89 = load i64, i64* %4, align 8
  %90 = and i64 %89, -4294967296
  %91 = add i64 %89, 11
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %90, %94
  %96 = add i64 %95, 11
  %97 = inttoptr i64 %96 to i32*
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = zext i32 %98 to i64
  %100 = or i64 %90, %99
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %68, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %86
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %100) #12
  br label %118

105:                                              ; preds = %86
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %67, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %67, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %67) #12
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %100, i64* %114, align 8
  br label %118

118:                                              ; preds = %103, %113
  %119 = phi i64* [ %104, %103 ], [ %114, %113 ]
  tail call void @_ZN2v88internal18SharedFunctionInfo30EnsureSourcePositionsAvailableEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %67, i64* %119) #12
  %120 = bitcast %"class.v8::internal::Handle<v8::internal::JSGeneratorObject>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #12
  %121 = load i64, i64* %4, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSGeneratorObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSGeneratorObject>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSGeneratorObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSGeneratorObject>::ObjectRef"* %3, i64 0, i32 0
  %124 = call i32 @_ZNK2v88internal17JSGeneratorObject15source_positionEv(%"class.v8::internal::JSGeneratorObject"* nonnull %123) #12
  %125 = call zeroext i1 @_ZN2v88internal6Script15GetPositionInfoENS0_6HandleIS1_EEiPNS1_12PositionInfoENS1_10OffsetFlagE(i64* %87, i32 %124, %"struct.v8::internal::Script::PositionInfo"* nonnull %2, i32 1) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #12
  %126 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #12
  br label %130

130:                                              ; preds = %118, %58
  %131 = phi i32 [ %127, %118 ], [ %59, %58 ]
  %132 = phi i32 [ %129, %118 ], [ %59, %58 ]
  %133 = phi i8 [ 0, %118 ], [ 1, %58 ]
  %134 = zext i32 %132 to i64
  %135 = shl nuw i64 %134, 32
  %136 = zext i32 %131 to i64
  %137 = or i64 %135, %136
  %138 = insertvalue { i64, i8 } undef, i64 %137, 0
  %139 = insertvalue { i64, i8 } %138, i8 %133, 1
  ret { i64, i8 } %139
}

declare void @_ZN2v88internal18SharedFunctionInfo30EnsureSourcePositionsAvailableEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #4

declare i32 @_ZNK2v88internal17JSGeneratorObject15source_positionEv(%"class.v8::internal::JSGeneratorObject"*) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v85debug15GeneratorObject11IsSuspendedEv(%"class.v8::debug::GeneratorObject"*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.v8::debug::GeneratorObject"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 31
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, -1
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::debug::GeneratorObject"* @_ZN2v85debug15GeneratorObject4CastENS_5LocalINS_5ValueEEE(%"class.v8::Value"*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZNK2v85Value17IsGeneratorObjectEv(%"class.v8::Value"* %0) #12
  br i1 %2, label %4, label %3, !prof !3

3:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0)) #16
  unreachable

4:                                                ; preds = %1
  %5 = bitcast %"class.v8::Value"* %0 to %"class.v8::debug::GeneratorObject"*
  ret %"class.v8::debug::GeneratorObject"* %5
}

declare zeroext i1 @_ZNK2v85Value17IsGeneratorObjectEv(%"class.v8::Value"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN2v85debug14EvaluateGlobalEPNS_7IsolateENS_5LocalINS_6StringEEENS0_18EvaluateGlobalModeEb(%"class.v8::Isolate"*, %"class.v8::String"*, i32, i1 zeroext) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::InternalEscapableScope", align 8
  %6 = alloca %"class.v8::CallDepthScope", align 8
  %7 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %8 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 168
  %9 = bitcast %"class.v8::Isolate"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13928
  %12 = bitcast %"class.v8::Isolate"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = trunc i64 %10 to i32
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %23, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 392
  %19 = bitcast %"class.v8::Isolate"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  %22 = icmp eq i32 %14, %21
  br i1 %22, label %105, label %23

23:                                               ; preds = %4, %17
  %24 = bitcast %"class.v8::InternalEscapableScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.v8::InternalEscapableScope", %"class.v8::InternalEscapableScope"* %5, i64 0, i32 0
  call void @_ZN2v820EscapableHandleScopeC2EPNS_7IsolateE(%"class.v8::EscapableHandleScope"* nonnull %25, %"class.v8::Isolate"* %0) #12
  %26 = bitcast %"class.v8::CallDepthScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %26) #12
  call void @_ZN2v814CallDepthScopeILb0EEC2EPNS_8internal7IsolateENS_5LocalINS_7ContextEEE(%"class.v8::CallDepthScope"* nonnull %6, %"class.v8::internal::Isolate"* %7, %"class.v8::Context"* null)
  %27 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %28 = bitcast %"class.v8::Isolate"* %27 to i32*
  %29 = load i32, i32* %28, align 8
  store i32 5, i32* %28, align 8
  %30 = xor i1 %3, true
  %31 = zext i1 %30 to i32
  %32 = bitcast %"class.v8::String"* %1 to i64*
  %33 = call i64* @_ZN2v88internal13DebugEvaluate6GlobalEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS_5debug18EvaluateGlobalModeENS0_8REPLModeE(%"class.v8::internal::Isolate"* %7, i64* %32, i32 %2, i32 %31) #12
  %34 = icmp eq i64* %33, null
  br i1 %34, label %35, label %52

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 2
  %37 = load i8, i8* %36, align 8
  %38 = or i8 %37, 2
  store i8 %38, i8* %36, align 8
  %39 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 0
  %40 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 4
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 0, i32 9, i32 10
  store i64 %42, i64* %43, align 8
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 0, i32 9, i32 0
  %47 = load %"class.v8::TryCatch"*, %"class.v8::TryCatch"** %46, align 8
  %48 = icmp eq %"class.v8::TryCatch"* %47, null
  br label %49

49:                                               ; preds = %35, %45
  %50 = phi i1 [ false, %35 ], [ %48, %45 ]
  %51 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %40, i1 zeroext %50) #12
  br label %55

52:                                               ; preds = %23
  %53 = call i64* @_ZN2v820EscapableHandleScope6EscapeEPm(%"class.v8::EscapableHandleScope"* nonnull %25, i64* nonnull %33) #12
  %54 = bitcast i64* %53 to %"class.v8::Value"*
  br label %55

55:                                               ; preds = %52, %49
  %56 = phi %"class.v8::Value"* [ %54, %52 ], [ null, %49 ]
  store i32 %29, i32* %28, align 8
  %57 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 0
  %58 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 1, i32 0
  %60 = load %"class.v8::Context"*, %"class.v8::Context"** %59, align 8
  %61 = icmp eq %"class.v8::Context"* %60, null
  %62 = bitcast %"class.v8::Context"* %60 to i64*
  %63 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 2
  %64 = load i8, i8* %63, align 8
  br i1 %61, label %85, label %65

65:                                               ; preds = %55
  %66 = and i8 %64, 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %80, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %58, i64 0, i32 32
  %70 = load %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::HandleScopeImplementer"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %70, i64 0, i32 4
  %72 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %70, i64 0, i32 4, i32 0, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, -1
  %75 = bitcast %"class.v8::internal::DetachableVector.752"* %71 to %"class.v8::internal::Context"**
  %76 = load %"class.v8::internal::Context"*, %"class.v8::internal::Context"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %76, i64 %74, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  store i64 %74, i64* %72, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %58, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %78, i64* %79, align 8
  br label %80

80:                                               ; preds = %68, %65
  %81 = load i64, i64* %62, align 8
  %82 = add i64 %81, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  br label %85

85:                                               ; preds = %55, %80
  %86 = and i8 %64, 2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 4
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %58, i64 0, i32 0, i32 9, i32 10
  store i64 %90, i64* %91, align 8
  br label %92

92:                                               ; preds = %88, %85
  %93 = lshr i8 %64, 2
  %94 = and i8 %93, 1
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %58, i64 0, i32 113
  store i8 %94, i8* %95, align 8
  %96 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  %97 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 3, i32 4
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, 2
  br i1 %99, label %103, label %100

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 3, i32 1
  %102 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %101, align 8
  call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %102) #12
  br label %103

103:                                              ; preds = %92, %100
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %26) #12
  %104 = getelementptr inbounds %"class.v8::InternalEscapableScope", %"class.v8::InternalEscapableScope"* %5, i64 0, i32 0, i32 0
  call void @_ZN2v811HandleScopeD2Ev(%"class.v8::HandleScope"* nonnull %104) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #12
  br label %105

105:                                              ; preds = %17, %103
  %106 = phi %"class.v8::Value"* [ %56, %103 ], [ null, %17 ]
  ret %"class.v8::Value"* %106
}

declare i64* @_ZN2v88internal13DebugEvaluate6GlobalEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS_5debug18EvaluateGlobalModeENS0_8REPLModeE(%"class.v8::internal::Isolate"*, i64*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN2v85debug24EvaluateGlobalForTestingEPNS_7IsolateENS_5LocalINS_6ScriptEEENS0_18EvaluateGlobalModeEb(%"class.v8::Isolate"*, %"class.v8::Script"*, i32, i1 zeroext) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::InternalEscapableScope", align 8
  %6 = alloca %"class.v8::CallDepthScope", align 8
  %7 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %8 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 168
  %9 = bitcast %"class.v8::Isolate"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13928
  %12 = bitcast %"class.v8::Isolate"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = trunc i64 %10 to i32
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %23, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 392
  %19 = bitcast %"class.v8::Isolate"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  %22 = icmp eq i32 %14, %21
  br i1 %22, label %105, label %23

23:                                               ; preds = %4, %17
  %24 = bitcast %"class.v8::InternalEscapableScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.v8::InternalEscapableScope", %"class.v8::InternalEscapableScope"* %5, i64 0, i32 0
  call void @_ZN2v820EscapableHandleScopeC2EPNS_7IsolateE(%"class.v8::EscapableHandleScope"* nonnull %25, %"class.v8::Isolate"* %0) #12
  %26 = bitcast %"class.v8::CallDepthScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %26) #12
  call void @_ZN2v814CallDepthScopeILb0EEC2EPNS_8internal7IsolateENS_5LocalINS_7ContextEEE(%"class.v8::CallDepthScope"* nonnull %6, %"class.v8::internal::Isolate"* %7, %"class.v8::Context"* null)
  %27 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %28 = bitcast %"class.v8::Isolate"* %27 to i32*
  %29 = load i32, i32* %28, align 8
  store i32 5, i32* %28, align 8
  %30 = xor i1 %3, true
  %31 = zext i1 %30 to i32
  %32 = bitcast %"class.v8::Script"* %1 to i64*
  %33 = call i64* @_ZN2v88internal13DebugEvaluate6GlobalEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS_5debug18EvaluateGlobalModeENS0_8REPLModeE(%"class.v8::internal::Isolate"* %7, i64* %32, i32 %2, i32 %31) #12
  %34 = icmp eq i64* %33, null
  br i1 %34, label %35, label %52

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 2
  %37 = load i8, i8* %36, align 8
  %38 = or i8 %37, 2
  store i8 %38, i8* %36, align 8
  %39 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 0
  %40 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 4
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 0, i32 9, i32 10
  store i64 %42, i64* %43, align 8
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 0, i32 9, i32 0
  %47 = load %"class.v8::TryCatch"*, %"class.v8::TryCatch"** %46, align 8
  %48 = icmp eq %"class.v8::TryCatch"* %47, null
  br label %49

49:                                               ; preds = %35, %45
  %50 = phi i1 [ false, %35 ], [ %48, %45 ]
  %51 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %40, i1 zeroext %50) #12
  br label %55

52:                                               ; preds = %23
  %53 = call i64* @_ZN2v820EscapableHandleScope6EscapeEPm(%"class.v8::EscapableHandleScope"* nonnull %25, i64* nonnull %33) #12
  %54 = bitcast i64* %53 to %"class.v8::Value"*
  br label %55

55:                                               ; preds = %52, %49
  %56 = phi %"class.v8::Value"* [ %54, %52 ], [ null, %49 ]
  store i32 %29, i32* %28, align 8
  %57 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 0
  %58 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 1, i32 0
  %60 = load %"class.v8::Context"*, %"class.v8::Context"** %59, align 8
  %61 = icmp eq %"class.v8::Context"* %60, null
  %62 = bitcast %"class.v8::Context"* %60 to i64*
  %63 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 2
  %64 = load i8, i8* %63, align 8
  br i1 %61, label %85, label %65

65:                                               ; preds = %55
  %66 = and i8 %64, 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %80, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %58, i64 0, i32 32
  %70 = load %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::HandleScopeImplementer"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %70, i64 0, i32 4
  %72 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %70, i64 0, i32 4, i32 0, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, -1
  %75 = bitcast %"class.v8::internal::DetachableVector.752"* %71 to %"class.v8::internal::Context"**
  %76 = load %"class.v8::internal::Context"*, %"class.v8::internal::Context"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %76, i64 %74, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  store i64 %74, i64* %72, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %58, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %78, i64* %79, align 8
  br label %80

80:                                               ; preds = %68, %65
  %81 = load i64, i64* %62, align 8
  %82 = add i64 %81, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  br label %85

85:                                               ; preds = %55, %80
  %86 = and i8 %64, 2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 4
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %58, i64 0, i32 0, i32 9, i32 10
  store i64 %90, i64* %91, align 8
  br label %92

92:                                               ; preds = %88, %85
  %93 = lshr i8 %64, 2
  %94 = and i8 %93, 1
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %58, i64 0, i32 113
  store i8 %94, i8* %95, align 8
  %96 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  %97 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 3, i32 4
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, 2
  br i1 %99, label %103, label %100

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 3, i32 1
  %102 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %101, align 8
  call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %102) #12
  br label %103

103:                                              ; preds = %92, %100
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %26) #12
  %104 = getelementptr inbounds %"class.v8::InternalEscapableScope", %"class.v8::InternalEscapableScope"* %5, i64 0, i32 0, i32 0
  call void @_ZN2v811HandleScopeD2Ev(%"class.v8::HandleScope"* nonnull %104) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #12
  br label %105

105:                                              ; preds = %17, %103
  %106 = phi %"class.v8::Value"* [ %56, %103 ], [ null, %17 ]
  ret %"class.v8::Value"* %106
}

declare i64* @_ZN2v88internal13DebugEvaluate6GlobalEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS_5debug18EvaluateGlobalModeENS0_8REPLModeE(%"class.v8::internal::Isolate"*, i64*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug12QueryObjectsENS_5LocalINS_7ContextEEEPNS0_20QueryObjectPredicateEPNS_21PersistentValueVectorINS_6ObjectENS_34DefaultPersistentValueVectorTraitsEEE(%"class.v8::Context"*, %"class.v8::debug::QueryObjectPredicate"*, %"class.v8::PersistentValueVector.1597"*) local_unnamed_addr #0 {
  %4 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #12
  %5 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %4, i64 13992
  %6 = bitcast %"class.v8::Isolate"* %5 to i32*
  %7 = load i32, i32* %6, align 8
  store i32 5, i32* %6, align 8
  %8 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %4, i64 45968
  %9 = bitcast %"class.v8::Isolate"* %8 to %"class.v8::internal::HeapProfiler"**
  %10 = load %"class.v8::internal::HeapProfiler"*, %"class.v8::internal::HeapProfiler"** %9, align 8
  %11 = bitcast %"class.v8::Context"* %0 to i64*
  tail call void @_ZN2v88internal12HeapProfiler12QueryObjectsENS0_6HandleINS0_7ContextEEEPNS_5debug20QueryObjectPredicateEPNS_21PersistentValueVectorINS_6ObjectENS_34DefaultPersistentValueVectorTraitsEEE(%"class.v8::internal::HeapProfiler"* %10, i64* %11, %"class.v8::debug::QueryObjectPredicate"* %1, %"class.v8::PersistentValueVector.1597"* %2) #12
  store i32 %7, i32* %6, align 8
  ret void
}

declare void @_ZN2v88internal12HeapProfiler12QueryObjectsENS0_6HandleINS0_7ContextEEEPNS_5debug20QueryObjectPredicateEPNS_21PersistentValueVectorINS_6ObjectENS_34DefaultPersistentValueVectorTraitsEEE(%"class.v8::internal::HeapProfiler"*, i64*, %"class.v8::debug::QueryObjectPredicate"*, %"class.v8::PersistentValueVector.1597"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug23GlobalLexicalScopeNamesENS_5LocalINS_7ContextEEEPNS_21PersistentValueVectorINS_6StringENS_34DefaultPersistentValueVectorTraitsEEE(%"class.v8::Context"*, %"class.v8::PersistentValueVector.1598"*) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %6 = bitcast %"class.v8::Context"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -262144
  %9 = or i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 16
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = bitcast %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %7, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %3, i64 0, i32 0
  %17 = call i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"* nonnull %16) #12
  %18 = and i64 %17, -4294967296
  %19 = add i64 %17, 11
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 683
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %18, %27
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 4
  %30 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %29, align 8
  %31 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %2
  %33 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %30, i64 %28) #12
  br label %47

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %38 = load i64*, i64** %37, align 8
  %39 = icmp eq i64* %36, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %34
  %41 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %42

42:                                               ; preds = %40, %34
  %43 = phi i64* [ %41, %40 ], [ %36, %34 ]
  %44 = ptrtoint i64* %43 to i64
  %45 = add i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  store i64* %46, i64** %35, align 8
  store i64 %28, i64* %43, align 8
  br label %47

47:                                               ; preds = %32, %42
  %48 = phi i64* [ %33, %32 ], [ %43, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = icmp sgt i32 %52, 1
  br i1 %53, label %54, label %65

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %57 = bitcast %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %4 to i8*
  %58 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Context>::ObjectRef"* %4, i64 0, i32 0
  %60 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %5 to i8*
  %61 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %5, i64 0, i32 0
  %63 = bitcast %"class.v8::PersistentValueVector.1598"* %1 to %"class.v8::internal::Isolate"**
  %64 = getelementptr inbounds %"class.v8::PersistentValueVector.1598", %"class.v8::PersistentValueVector.1598"* %1, i64 0, i32 1
  br label %66

65:                                               ; preds = %122, %47
  ret void

66:                                               ; preds = %54, %122
  %67 = phi i64 [ 0, %54 ], [ %123, %122 ]
  %68 = phi i64 [ %49, %54 ], [ %124, %122 ]
  %69 = and i64 %68, -4294967296
  %70 = trunc i64 %67 to i32
  %71 = shl i32 %70, 2
  %72 = add i32 %71, 4
  %73 = sext i32 %72 to i64
  %74 = add i64 %68, 7
  %75 = add i64 %74, %73
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %69, %78
  %80 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %29, align 8
  %81 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %66
  %83 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %80, i64 %79) #12
  %84 = load i64, i64* %83, align 8
  br label %96

85:                                               ; preds = %66
  %86 = load i64*, i64** %55, align 8
  %87 = load i64*, i64** %56, align 8
  %88 = icmp eq i64* %86, %87
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %91

91:                                               ; preds = %89, %85
  %92 = phi i64* [ %90, %89 ], [ %86, %85 ]
  %93 = ptrtoint i64* %92 to i64
  %94 = add i64 %93, 8
  %95 = inttoptr i64 %94 to i64*
  store i64* %95, i64** %55, align 8
  store i64 %79, i64* %92, align 8
  br label %96

96:                                               ; preds = %82, %91
  %97 = phi i64 [ %84, %82 ], [ %79, %91 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #12
  store i64 %97, i64* %58, align 8
  %98 = call i64 @_ZN2v88internal7Context10scope_infoEv(%"class.v8::internal::Context"* nonnull %59) #12
  %99 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %29, align 8
  %100 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %96
  %102 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %99, i64 %98) #12
  br label %114

103:                                              ; preds = %96
  %104 = load i64*, i64** %55, align 8
  %105 = load i64*, i64** %56, align 8
  %106 = icmp eq i64* %104, %105
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %109

109:                                              ; preds = %107, %103
  %110 = phi i64* [ %108, %107 ], [ %104, %103 ]
  %111 = ptrtoint i64* %110 to i64
  %112 = add i64 %111, 8
  %113 = inttoptr i64 %112 to i64*
  store i64* %113, i64** %55, align 8
  store i64 %98, i64* %110, align 8
  br label %114

114:                                              ; preds = %101, %109
  %115 = phi i64* [ %102, %101 ], [ %110, %109 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #12
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 11
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = ashr i32 %119, 1
  %121 = icmp sgt i32 %119, 1
  br i1 %121, label %131, label %122

122:                                              ; preds = %161, %114
  %123 = add nuw nsw i64 %67, 1
  %124 = load i64, i64* %48, align 8
  %125 = add i64 %124, 7
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = ashr i32 %127, 1
  %129 = sext i32 %128 to i64
  %130 = icmp slt i64 %123, %129
  br i1 %130, label %66, label %65

131:                                              ; preds = %114, %164
  %132 = phi i64 [ %165, %164 ], [ %116, %114 ]
  %133 = phi i32 [ %162, %164 ], [ 0, %114 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #12
  store i64 %132, i64* %61, align 8
  %134 = call i64 @_ZNK2v88internal9ScopeInfo16ContextLocalNameEi(%"class.v8::internal::ScopeInfo"* nonnull %62, i32 %133) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #12
  %135 = call zeroext i1 @_ZN2v88internal9ScopeInfo19VariableIsSyntheticENS0_6StringE(i64 %134) #12
  br i1 %135, label %161, label %136

136:                                              ; preds = %131
  %137 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %29, align 8
  %138 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %136
  %140 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %137, i64 %134) #12
  br label %152

141:                                              ; preds = %136
  %142 = load i64*, i64** %55, align 8
  %143 = load i64*, i64** %56, align 8
  %144 = icmp eq i64* %142, %143
  br i1 %144, label %145, label %147

145:                                              ; preds = %141
  %146 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #12
  br label %147

147:                                              ; preds = %145, %141
  %148 = phi i64* [ %146, %145 ], [ %142, %141 ]
  %149 = ptrtoint i64* %148 to i64
  %150 = add i64 %149, 8
  %151 = inttoptr i64 %150 to i64*
  store i64* %151, i64** %55, align 8
  store i64 %134, i64* %148, align 8
  br label %152

152:                                              ; preds = %139, %147
  %153 = phi i64* [ %140, %139 ], [ %148, %147 ]
  %154 = icmp eq i64* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %152
  %156 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %157 = call i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"* %156, i64* nonnull %153) #12
  %158 = ptrtoint i64* %157 to i64
  br label %159

159:                                              ; preds = %152, %155
  %160 = phi i64 [ %158, %155 ], [ 0, %152 ]
  call void @_ZN2v834DefaultPersistentValueVectorTraits6AppendEPNSt3__16vectorImNS1_9allocatorImEEEEm(%"class.std::__1::vector.92"* %64, i64 %160) #12
  br label %161

161:                                              ; preds = %131, %159
  %162 = add nuw nsw i32 %133, 1
  %163 = icmp slt i32 %162, %120
  br i1 %163, label %164, label %122

164:                                              ; preds = %161
  %165 = load i64, i64* %115, align 8
  br label %131
}

declare i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"*) local_unnamed_addr #4

declare i64 @_ZNK2v88internal9ScopeInfo16ContextLocalNameEi(%"class.v8::internal::ScopeInfo"*, i32) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal9ScopeInfo19VariableIsSyntheticENS0_6StringE(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug14SetReturnValueEPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* nocapture readonly, %"class.v8::Value"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45960
  %4 = bitcast %"class.v8::Isolate"* %3 to %"class.v8::internal::Debug"**
  %5 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %4, align 8
  %6 = bitcast %"class.v8::Value"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %5, i64 0, i32 14, i32 10, i32 0, i32 0
  store i64 %7, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v85debug18GetNextRandomInt64EPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 {
  %2 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %3 = tail call %"class.v8::base::RandomNumberGenerator"* @_ZN2v88internal7Isolate23random_number_generatorEv(%"class.v8::internal::Isolate"* %2) #12
  %4 = tail call i64 @_ZN2v84base21RandomNumberGenerator9NextInt64Ev(%"class.v8::base::RandomNumberGenerator"* %3) #12
  ret i64 %4
}

declare %"class.v8::base::RandomNumberGenerator"* @_ZN2v88internal7Isolate23random_number_generatorEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64 @_ZN2v84base21RandomNumberGenerator9NextInt64Ev(%"class.v8::base::RandomNumberGenerator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug28EnumerateRuntimeCallCountersEPNS_7IsolateENSt3__18functionIFvPKclNS_4base9TimeDeltaEEEE(%"class.v8::Isolate"* nocapture readonly, %"class.std::__1::function"* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::function", align 8
  %4 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45176
  %5 = bitcast %"class.v8::Isolate"* %4 to %"class.v8::internal::Counters"**
  %6 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %5, align 8
  %7 = icmp eq %"class.v8::internal::Counters"* %6, null
  br i1 %7, label %36, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %6, i64 0, i32 757
  %10 = bitcast %"class.std::__1::function"* %3 to i8*
  %11 = bitcast %"class.std::__1::function"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 16, i1 false) #12
  %12 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::__function::__policy_invoker"* %13 to i64*
  %15 = bitcast %"struct.std::__1::__function::__policy_invoker"* %12 to i64*
  %16 = load i64, i64* %14, align 8
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 2
  %19 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %18, align 8
  store %"struct.std::__1::__function::__policy"* %19, %"struct.std::__1::__function::__policy"** %17, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %19, i64 0, i32 0
  %21 = load i8* (i8*)*, i8* (i8*)** %20, align 8
  %22 = icmp eq i8* (i8*)* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %8
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = tail call i8* %21(i8* %25) #12
  %27 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* %26, i8** %27, align 8
  br label %28

28:                                               ; preds = %8, %23
  call void @_ZN2v88internal16RuntimeCallStats17EnumerateCountersENSt3__18functionIFvPKclNS_4base9TimeDeltaEEEE(%"class.v8::internal::RuntimeCallStats"* %9, %"class.std::__1::function"* nonnull %3) #12
  %29 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %17, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %29, i64 0, i32 1
  %31 = load void (i8*)*, void (i8*)** %30, align 8
  %32 = icmp eq void (i8*)* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void %31(i8* %35) #12
  br label %36

36:                                               ; preds = %33, %28, %2
  ret void
}

declare void @_ZN2v88internal16RuntimeCallStats17EnumerateCountersENSt3__18functionIFvPKclNS_4base9TimeDeltaEEEE(%"class.v8::internal::RuntimeCallStats"*, %"class.std::__1::function"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v85debug14GetDebuggingIdENS_5LocalINS_8FunctionEEE(%"class.v8::Function"*) local_unnamed_addr #0 {
  %2 = bitcast %"class.v8::Function"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = add i16 %12, -1059
  %14 = icmp ult i16 %13, 15
  br i1 %14, label %15, label %25

15:                                               ; preds = %1
  %16 = and i64 %3, -262144
  %17 = or i64 %16, 16
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 16
  %20 = add i64 %19, -41416
  %21 = inttoptr i64 %20 to %"class.v8::internal::Isolate"*
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 68
  %23 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %22, align 8
  %24 = tail call i32 @_ZN2v88internal5Debug22GetFunctionDebuggingIdENS0_6HandleINS0_10JSFunctionEEE(%"class.v8::internal::Debug"* %23, i64* %2) #12
  br label %25

25:                                               ; preds = %1, %15
  %26 = phi i32 [ %24, %15 ], [ 0, %1 ]
  ret i32 %26
}

declare i32 @_ZN2v88internal5Debug22GetFunctionDebuggingIdENS0_6HandleINS0_10JSFunctionEEE(%"class.v8::internal::Debug"*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v85debug21SetFunctionBreakpointENS_5LocalINS_8FunctionEEENS1_INS_6StringEEEPi(%"class.v8::Function"*, %"class.v8::String"*, i32*) local_unnamed_addr #0 {
  %4 = bitcast %"class.v8::Function"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = add i16 %14, -1059
  %16 = icmp ult i16 %15, 15
  br i1 %16, label %17, label %58

17:                                               ; preds = %3
  %18 = and i64 %5, -262144
  %19 = or i64 %18, 16
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20, align 16
  %22 = add i64 %21, -41416
  %23 = inttoptr i64 %22 to %"class.v8::internal::Isolate"*
  %24 = icmp eq %"class.v8::String"* %1, null
  %25 = inttoptr i64 %22 to %"class.v8::internal::Factory"*
  %26 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %25, i64 200
  %27 = bitcast %"class.v8::internal::Factory"* %26 to i64*
  %28 = bitcast %"class.v8::String"* %1 to i64*
  %29 = select i1 %24, i64* %27, i64* %28
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 68
  %31 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %30, align 8
  %32 = add i64 %5, 11
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %6, %35
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 31, i32 4
  %38 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8
  %39 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %17
  %41 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %38, i64 %36) #12
  br label %55

42:                                               ; preds = %17
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 31, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 31, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = icmp eq i64* %44, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %42
  %49 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %23) #12
  br label %50

50:                                               ; preds = %48, %42
  %51 = phi i64* [ %49, %48 ], [ %44, %42 ]
  %52 = ptrtoint i64* %51 to i64
  %53 = add i64 %52, 8
  %54 = inttoptr i64 %53 to i64*
  store i64* %54, i64** %43, align 8
  store i64 %36, i64* %51, align 8
  br label %55

55:                                               ; preds = %40, %50
  %56 = phi i64* [ %41, %40 ], [ %51, %50 ]
  %57 = tail call zeroext i1 @_ZN2v88internal5Debug24SetBreakpointForFunctionENS0_6HandleINS0_18SharedFunctionInfoEEENS2_INS0_6StringEEEPi(%"class.v8::internal::Debug"* %31, i64* %56, i64* %29, i32* %2) #12
  br label %58

58:                                               ; preds = %3, %55
  %59 = phi i1 [ %57, %55 ], [ false, %3 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug23PostponeInterruptsScopeC2EPNS_7IsolateE(%"class.v8::debug::PostponeInterruptsScope"* nocapture, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 48) #17
  %4 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %5 = bitcast i8* %3 to %"class.v8::internal::InterruptsScope"*
  tail call void @_ZN2v88internal15InterruptsScopeC2EPNS0_7IsolateElNS1_4ModeE(%"class.v8::internal::InterruptsScope"* nonnull %5, %"class.v8::internal::Isolate"* %4, i64 8, i32 0) #12
  %6 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal23PostponeInterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = ptrtoint i8* %3 to i64
  %8 = bitcast %"class.v8::debug::PostponeInterruptsScope"* %0 to i64*
  store i64 %7, i64* %8, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug23PostponeInterruptsScopeD2Ev(%"class.v8::debug::PostponeInterruptsScope"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::PostponeInterruptsScope", %"class.v8::debug::PostponeInterruptsScope"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::PostponeInterruptsScope"*, %"class.v8::internal::PostponeInterruptsScope"** %2, align 8
  store %"class.v8::internal::PostponeInterruptsScope"* null, %"class.v8::internal::PostponeInterruptsScope"** %2, align 8
  %4 = icmp eq %"class.v8::internal::PostponeInterruptsScope"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::internal::PostponeInterruptsScope"* %3 to void (%"class.v8::internal::PostponeInterruptsScope"*)***
  %7 = load void (%"class.v8::internal::PostponeInterruptsScope"*)**, void (%"class.v8::internal::PostponeInterruptsScope"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::PostponeInterruptsScope"*)*, void (%"class.v8::internal::PostponeInterruptsScope"*)** %7, i64 1
  %9 = load void (%"class.v8::internal::PostponeInterruptsScope"*)*, void (%"class.v8::internal::PostponeInterruptsScope"*)** %8, align 8
  tail call void %9(%"class.v8::internal::PostponeInterruptsScope"* nonnull %3) #12
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug17DisableBreakScopeC2EPNS_7IsolateE(%"class.v8::debug::DisableBreakScope"* nocapture, %"class.v8::Isolate"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %1, i64 45960
  %4 = bitcast %"class.v8::Isolate"* %3 to %"class.v8::internal::Debug"**
  %5 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %4, align 8
  %6 = tail call i8* @_Znwm(i64 16) #17
  %7 = bitcast i8* %6 to %"class.v8::internal::Debug"**
  store %"class.v8::internal::Debug"* %5, %"class.v8::internal::Debug"** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %5, i64 0, i32 5
  %10 = load i8, i8* %9, align 4, !range !4
  store i8 %10, i8* %8, align 8
  store i8 1, i8* %9, align 4
  %11 = bitcast %"class.v8::debug::DisableBreakScope"* %0 to i8**
  store i8* %6, i8** %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug17DisableBreakScopeD2Ev(%"class.v8::debug::DisableBreakScope"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::DisableBreakScope", %"class.v8::debug::DisableBreakScope"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::DisableBreak"*, %"class.v8::internal::DisableBreak"** %2, align 8
  store %"class.v8::internal::DisableBreak"* null, %"class.v8::internal::DisableBreak"** %2, align 8
  %4 = icmp eq %"class.v8::internal::DisableBreak"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::DisableBreak", %"class.v8::internal::DisableBreak"* %3, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = getelementptr inbounds %"class.v8::internal::DisableBreak", %"class.v8::internal::DisableBreak"* %3, i64 0, i32 0
  %9 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %9, i64 0, i32 5
  store i8 %7, i8* %10, align 4
  %11 = bitcast %"class.v8::internal::DisableBreak"* %3 to i8*
  tail call void @_ZdlPv(i8* %11) #17
  br label %12

12:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug8Coverage9BlockData11StartOffsetEv(%"class.v8::debug::Coverage::BlockData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::Coverage::BlockData", %"class.v8::debug::Coverage::BlockData"* %0, i64 0, i32 0
  %3 = load %"struct.v8::internal::CoverageBlock"*, %"struct.v8::internal::CoverageBlock"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::CoverageBlock", %"struct.v8::internal::CoverageBlock"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug8Coverage9BlockData9EndOffsetEv(%"class.v8::debug::Coverage::BlockData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::Coverage::BlockData", %"class.v8::debug::Coverage::BlockData"* %0, i64 0, i32 0
  %3 = load %"struct.v8::internal::CoverageBlock"*, %"struct.v8::internal::CoverageBlock"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::CoverageBlock", %"struct.v8::internal::CoverageBlock"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug8Coverage9BlockData5CountEv(%"class.v8::debug::Coverage::BlockData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::Coverage::BlockData", %"class.v8::debug::Coverage::BlockData"* %0, i64 0, i32 0
  %3 = load %"struct.v8::internal::CoverageBlock"*, %"struct.v8::internal::CoverageBlock"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::CoverageBlock", %"struct.v8::internal::CoverageBlock"* %3, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug8Coverage12FunctionData11StartOffsetEv(%"class.v8::debug::Coverage::FunctionData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::Coverage::FunctionData", %"class.v8::debug::Coverage::FunctionData"* %0, i64 0, i32 0
  %3 = load %"struct.v8::internal::CoverageFunction"*, %"struct.v8::internal::CoverageFunction"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::CoverageFunction", %"struct.v8::internal::CoverageFunction"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug8Coverage12FunctionData9EndOffsetEv(%"class.v8::debug::Coverage::FunctionData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::Coverage::FunctionData", %"class.v8::debug::Coverage::FunctionData"* %0, i64 0, i32 0
  %3 = load %"struct.v8::internal::CoverageFunction"*, %"struct.v8::internal::CoverageFunction"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::CoverageFunction", %"struct.v8::internal::CoverageFunction"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug8Coverage12FunctionData5CountEv(%"class.v8::debug::Coverage::FunctionData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::Coverage::FunctionData", %"class.v8::debug::Coverage::FunctionData"* %0, i64 0, i32 0
  %3 = load %"struct.v8::internal::CoverageFunction"*, %"struct.v8::internal::CoverageFunction"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::CoverageFunction", %"struct.v8::internal::CoverageFunction"* %3, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::String"* @_ZNK2v85debug8Coverage12FunctionData4NameEv(%"class.v8::debug::Coverage::FunctionData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::Coverage::FunctionData", %"class.v8::debug::Coverage::FunctionData"* %0, i64 0, i32 0
  %3 = load %"struct.v8::internal::CoverageFunction"*, %"struct.v8::internal::CoverageFunction"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::CoverageFunction", %"struct.v8::internal::CoverageFunction"* %3, i64 0, i32 4, i32 0, i32 0
  %5 = bitcast i64** %4 to %"class.v8::String"**
  %6 = load %"class.v8::String"*, %"class.v8::String"** %5, align 8
  ret %"class.v8::String"* %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v85debug8Coverage12FunctionData10BlockCountEv(%"class.v8::debug::Coverage::FunctionData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::Coverage::FunctionData", %"class.v8::debug::Coverage::FunctionData"* %0, i64 0, i32 0
  %3 = load %"struct.v8::internal::CoverageFunction"*, %"struct.v8::internal::CoverageFunction"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::CoverageFunction", %"struct.v8::internal::CoverageFunction"* %3, i64 0, i32 5
  %5 = getelementptr inbounds %"struct.v8::internal::CoverageFunction", %"struct.v8::internal::CoverageFunction"* %3, i64 0, i32 5, i32 0, i32 1
  %6 = bitcast %"struct.v8::internal::CoverageBlock"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.1617"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 12
  ret i64 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v85debug8Coverage12FunctionData16HasBlockCoverageEv(%"class.v8::debug::Coverage::FunctionData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::Coverage::FunctionData", %"class.v8::debug::Coverage::FunctionData"* %0, i64 0, i32 0
  %3 = load %"struct.v8::internal::CoverageFunction"*, %"struct.v8::internal::CoverageFunction"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::CoverageFunction", %"struct.v8::internal::CoverageFunction"* %3, i64 0, i32 6
  %5 = load i8, i8* %4, align 8, !range !4
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v85debug8Coverage12FunctionData12GetBlockDataEm(%"class.v8::debug::Coverage::BlockData"* noalias nocapture sret, %"class.v8::debug::Coverage::FunctionData"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::debug::Coverage::FunctionData", %"class.v8::debug::Coverage::FunctionData"* %1, i64 0, i32 0
  %5 = load %"struct.v8::internal::CoverageFunction"*, %"struct.v8::internal::CoverageFunction"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::CoverageFunction", %"struct.v8::internal::CoverageFunction"* %5, i64 0, i32 5
  %7 = getelementptr inbounds %"struct.v8::internal::CoverageFunction", %"struct.v8::internal::CoverageFunction"* %5, i64 0, i32 5, i32 0, i32 1
  %8 = bitcast %"struct.v8::internal::CoverageBlock"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.1617"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 12
  %14 = icmp ugt i64 %13, %2
  br i1 %14, label %17, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::vector.1617"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %16) #16
  unreachable

17:                                               ; preds = %3
  %18 = inttoptr i64 %11 to %"struct.v8::internal::CoverageBlock"*
  %19 = getelementptr inbounds %"struct.v8::internal::CoverageBlock", %"struct.v8::internal::CoverageBlock"* %18, i64 %2
  %20 = getelementptr inbounds %"class.v8::debug::Coverage::FunctionData", %"class.v8::debug::Coverage::FunctionData"* %1, i64 0, i32 1
  %21 = bitcast %"class.std::__1::shared_ptr.1612"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::debug::Coverage::FunctionData", %"class.v8::debug::Coverage::FunctionData"* %1, i64 0, i32 1, i32 1
  %24 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %23, align 8
  %25 = icmp eq %"class.std::__1::__shared_weak_count"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %24, i64 0, i32 0, i32 1
  %28 = atomicrmw add i64* %27, i64 1 monotonic
  br label %29

29:                                               ; preds = %17, %26
  %30 = ptrtoint %"class.std::__1::__shared_weak_count"* %24 to i64
  %31 = getelementptr inbounds %"class.v8::debug::Coverage::BlockData", %"class.v8::debug::Coverage::BlockData"* %0, i64 0, i32 0
  store %"struct.v8::internal::CoverageBlock"* %19, %"struct.v8::internal::CoverageBlock"** %31, align 8
  %32 = getelementptr inbounds %"class.v8::debug::Coverage::BlockData", %"class.v8::debug::Coverage::BlockData"* %0, i64 0, i32 1
  %33 = bitcast %"class.std::__1::shared_ptr.1612"* %32 to i64*
  store i64 %22, i64* %33, align 8
  %34 = getelementptr inbounds %"class.v8::debug::Coverage::BlockData", %"class.v8::debug::Coverage::BlockData"* %0, i64 0, i32 1, i32 1
  %35 = bitcast %"class.std::__1::__shared_weak_count"** %34 to i64*
  store i64 %30, i64* %35, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::debug::Script"* @_ZNK2v85debug8Coverage10ScriptData9GetScriptEv(%"class.v8::debug::Coverage::ScriptData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.v8::debug::Coverage::ScriptData"* %0 to %"class.v8::debug::Script"***
  %3 = load %"class.v8::debug::Script"**, %"class.v8::debug::Script"*** %2, align 8
  %4 = load %"class.v8::debug::Script"*, %"class.v8::debug::Script"** %3, align 8
  ret %"class.v8::debug::Script"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v85debug8Coverage10ScriptData13FunctionCountEv(%"class.v8::debug::Coverage::ScriptData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::Coverage::ScriptData", %"class.v8::debug::Coverage::ScriptData"* %0, i64 0, i32 0
  %3 = load %"struct.v8::internal::CoverageScript"*, %"struct.v8::internal::CoverageScript"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::CoverageScript", %"struct.v8::internal::CoverageScript"* %3, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.v8::internal::CoverageScript", %"struct.v8::internal::CoverageScript"* %3, i64 0, i32 1, i32 0, i32 1
  %6 = bitcast %"struct.v8::internal::CoverageFunction"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.1615"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 56
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v85debug8Coverage10ScriptData15GetFunctionDataEm(%"class.v8::debug::Coverage::FunctionData"* noalias nocapture sret, %"class.v8::debug::Coverage::ScriptData"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::debug::Coverage::ScriptData", %"class.v8::debug::Coverage::ScriptData"* %1, i64 0, i32 0
  %5 = load %"struct.v8::internal::CoverageScript"*, %"struct.v8::internal::CoverageScript"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::CoverageScript", %"struct.v8::internal::CoverageScript"* %5, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.v8::internal::CoverageScript", %"struct.v8::internal::CoverageScript"* %5, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"struct.v8::internal::CoverageFunction"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.1615"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 56
  %14 = icmp ugt i64 %13, %2
  br i1 %14, label %17, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::vector.1615"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %16) #16
  unreachable

17:                                               ; preds = %3
  %18 = inttoptr i64 %11 to %"struct.v8::internal::CoverageFunction"*
  %19 = getelementptr inbounds %"struct.v8::internal::CoverageFunction", %"struct.v8::internal::CoverageFunction"* %18, i64 %2
  %20 = getelementptr inbounds %"class.v8::debug::Coverage::ScriptData", %"class.v8::debug::Coverage::ScriptData"* %1, i64 0, i32 1
  %21 = bitcast %"class.std::__1::shared_ptr.1612"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::debug::Coverage::ScriptData", %"class.v8::debug::Coverage::ScriptData"* %1, i64 0, i32 1, i32 1
  %24 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %23, align 8
  %25 = icmp eq %"class.std::__1::__shared_weak_count"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %24, i64 0, i32 0, i32 1
  %28 = atomicrmw add i64* %27, i64 1 monotonic
  br label %29

29:                                               ; preds = %17, %26
  %30 = ptrtoint %"class.std::__1::__shared_weak_count"* %24 to i64
  %31 = getelementptr inbounds %"class.v8::debug::Coverage::FunctionData", %"class.v8::debug::Coverage::FunctionData"* %0, i64 0, i32 0
  store %"struct.v8::internal::CoverageFunction"* %19, %"struct.v8::internal::CoverageFunction"** %31, align 8
  %32 = getelementptr inbounds %"class.v8::debug::Coverage::FunctionData", %"class.v8::debug::Coverage::FunctionData"* %0, i64 0, i32 1
  %33 = bitcast %"class.std::__1::shared_ptr.1612"* %32 to i64*
  store i64 %22, i64* %33, align 8
  %34 = getelementptr inbounds %"class.v8::debug::Coverage::FunctionData", %"class.v8::debug::Coverage::FunctionData"* %0, i64 0, i32 1, i32 1
  %35 = bitcast %"class.std::__1::__shared_weak_count"** %34 to i64*
  store i64 %30, i64* %35, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug8Coverage10ScriptDataC2EmNSt3__110shared_ptrINS_8internal8CoverageEEE(%"class.v8::debug::Coverage::ScriptData"* nocapture, i64, %"class.v8::internal::Coverage"*, %"class.std::__1::__shared_weak_count"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::Coverage", %"class.v8::internal::Coverage"* %2, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.v8::internal::CoverageScript"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.v8::internal::Coverage"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 5
  %12 = icmp ugt i64 %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.v8::internal::Coverage"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %14) #16
  unreachable

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.v8::debug::Coverage::ScriptData", %"class.v8::debug::Coverage::ScriptData"* %0, i64 0, i32 0
  %17 = ptrtoint %"class.std::__1::__shared_weak_count"* %3 to i64
  %18 = ptrtoint %"class.v8::internal::Coverage"* %2 to i64
  %19 = inttoptr i64 %9 to %"struct.v8::internal::CoverageScript"*
  %20 = getelementptr inbounds %"struct.v8::internal::CoverageScript", %"struct.v8::internal::CoverageScript"* %19, i64 %1
  store %"struct.v8::internal::CoverageScript"* %20, %"struct.v8::internal::CoverageScript"** %16, align 8
  %21 = getelementptr inbounds %"class.v8::debug::Coverage::ScriptData", %"class.v8::debug::Coverage::ScriptData"* %0, i64 0, i32 1
  %22 = bitcast %"class.std::__1::shared_ptr.1612"* %21 to i64*
  store i64 %18, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::debug::Coverage::ScriptData", %"class.v8::debug::Coverage::ScriptData"* %0, i64 0, i32 1, i32 1
  %24 = bitcast %"class.std::__1::__shared_weak_count"** %23 to i64*
  store i64 %17, i64* %24, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v85debug8Coverage11ScriptCountEv(%"class.v8::debug::Coverage"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::Coverage", %"class.v8::debug::Coverage"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::internal::Coverage"*, %"class.v8::internal::Coverage"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Coverage", %"class.v8::internal::Coverage"* %3, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.v8::internal::CoverageScript"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.v8::internal::Coverage"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v85debug8Coverage13GetScriptDataEm(%"class.v8::debug::Coverage::ScriptData"* noalias nocapture sret, %"class.v8::debug::Coverage"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::debug::Coverage"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::debug::Coverage", %"class.v8::debug::Coverage"* %1, i64 0, i32 0, i32 1
  %7 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %6, align 8
  %8 = icmp eq %"class.std::__1::__shared_weak_count"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %7, i64 0, i32 0, i32 1
  %11 = atomicrmw add i64* %10, i64 1 monotonic
  br label %12

12:                                               ; preds = %3, %9
  %13 = inttoptr i64 %5 to %"class.v8::internal::Coverage"*
  %14 = getelementptr inbounds %"class.v8::internal::Coverage", %"class.v8::internal::Coverage"* %13, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast %"struct.v8::internal::CoverageScript"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = inttoptr i64 %5 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 5
  %21 = icmp ugt i64 %20, %2
  br i1 %21, label %24, label %22

22:                                               ; preds = %12
  %23 = inttoptr i64 %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %23) #16
  unreachable

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.v8::debug::Coverage::ScriptData", %"class.v8::debug::Coverage::ScriptData"* %0, i64 0, i32 0
  %26 = ptrtoint %"class.std::__1::__shared_weak_count"* %7 to i64
  %27 = inttoptr i64 %18 to %"struct.v8::internal::CoverageScript"*
  %28 = getelementptr inbounds %"struct.v8::internal::CoverageScript", %"struct.v8::internal::CoverageScript"* %27, i64 %2
  store %"struct.v8::internal::CoverageScript"* %28, %"struct.v8::internal::CoverageScript"** %25, align 8
  %29 = getelementptr inbounds %"class.v8::debug::Coverage::ScriptData", %"class.v8::debug::Coverage::ScriptData"* %0, i64 0, i32 1
  %30 = bitcast %"class.std::__1::shared_ptr.1612"* %29 to i64*
  store i64 %5, i64* %30, align 8
  %31 = getelementptr inbounds %"class.v8::debug::Coverage::ScriptData", %"class.v8::debug::Coverage::ScriptData"* %0, i64 0, i32 1, i32 1
  %32 = bitcast %"class.std::__1::__shared_weak_count"** %31 to i64*
  store i64 %26, i64* %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.v8::internal::Coverage"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v85debug8Coverage14CollectPreciseEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %3 = tail call %"class.v8::internal::Coverage"* @_ZN2v88internal8Coverage14CollectPreciseEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #12
  %4 = icmp eq %"class.v8::internal::Coverage"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.v8::internal::Coverage"* %3 to i64
  %7 = tail call i8* @_Znwm(i64 32) #17
  %8 = bitcast i8* %7 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal8CoverageENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 24
  %11 = bitcast i8* %10 to i64*
  store i64 %6, i64* %11, align 8
  %12 = bitcast i8* %7 to %"class.std::__1::__shared_weak_count"*
  br label %13

13:                                               ; preds = %1, %5
  %14 = phi %"class.std::__1::__shared_weak_count"* [ %12, %5 ], [ null, %1 ]
  %15 = insertvalue { %"class.v8::internal::Coverage"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.v8::internal::Coverage"* %3, 0
  %16 = insertvalue { %"class.v8::internal::Coverage"*, %"class.std::__1::__shared_weak_count"* } %15, %"class.std::__1::__shared_weak_count"* %14, 1
  ret { %"class.v8::internal::Coverage"*, %"class.std::__1::__shared_weak_count"* } %16
}

declare %"class.v8::internal::Coverage"* @_ZN2v88internal8Coverage14CollectPreciseEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.v8::internal::Coverage"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v85debug8Coverage17CollectBestEffortEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %3 = tail call %"class.v8::internal::Coverage"* @_ZN2v88internal8Coverage17CollectBestEffortEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #12
  %4 = icmp eq %"class.v8::internal::Coverage"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.v8::internal::Coverage"* %3 to i64
  %7 = tail call i8* @_Znwm(i64 32) #17
  %8 = bitcast i8* %7 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal8CoverageENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 24
  %11 = bitcast i8* %10 to i64*
  store i64 %6, i64* %11, align 8
  %12 = bitcast i8* %7 to %"class.std::__1::__shared_weak_count"*
  br label %13

13:                                               ; preds = %1, %5
  %14 = phi %"class.std::__1::__shared_weak_count"* [ %12, %5 ], [ null, %1 ]
  %15 = insertvalue { %"class.v8::internal::Coverage"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.v8::internal::Coverage"* %3, 0
  %16 = insertvalue { %"class.v8::internal::Coverage"*, %"class.std::__1::__shared_weak_count"* } %15, %"class.std::__1::__shared_weak_count"* %14, 1
  ret { %"class.v8::internal::Coverage"*, %"class.std::__1::__shared_weak_count"* } %16
}

declare %"class.v8::internal::Coverage"* @_ZN2v88internal8Coverage17CollectBestEffortEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug8Coverage10SelectModeEPNS_7IsolateENS0_12CoverageModeE(%"class.v8::Isolate"*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  tail call void @_ZN2v88internal8Coverage10SelectModeEPNS0_7IsolateENS_5debug12CoverageModeE(%"class.v8::internal::Isolate"* %3, i32 %1) #12
  ret void
}

declare void @_ZN2v88internal8Coverage10SelectModeEPNS0_7IsolateENS_5debug12CoverageModeE(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v85debug11TypeProfile5Entry14SourcePositionEv(%"class.v8::debug::TypeProfile::Entry"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %0, i64 0, i32 0
  %3 = load %"struct.v8::internal::TypeProfileEntry"*, %"struct.v8::internal::TypeProfileEntry"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::TypeProfileEntry", %"struct.v8::internal::TypeProfileEntry"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v85debug11TypeProfile5Entry5TypesEv(%"class.std::__1::vector.1662"* noalias sret, %"class.v8::debug::TypeProfile::Entry"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::vector.1662"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #12
  %4 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %1, i64 0, i32 0
  %5 = load %"struct.v8::internal::TypeProfileEntry"*, %"struct.v8::internal::TypeProfileEntry"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::TypeProfileEntry", %"struct.v8::internal::TypeProfileEntry"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.v8::internal::Handle.1263"*, %"class.v8::internal::Handle.1263"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::TypeProfileEntry", %"struct.v8::internal::TypeProfileEntry"* %5, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.v8::internal::Handle.1263"*, %"class.v8::internal::Handle.1263"** %8, align 8
  %10 = icmp eq %"class.v8::internal::Handle.1263"* %7, %9
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::vector.1662", %"class.std::__1::vector.1662"* %0, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.1662", %"class.std::__1::vector.1662"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.v8::MaybeLocal.967"** %12 to i64*
  %15 = bitcast %"class.std::__1::vector.1662"* %0 to i64*
  %16 = bitcast %"class.v8::MaybeLocal.967"** %13 to i64*
  br label %18

17:                                               ; preds = %79, %2
  ret void

18:                                               ; preds = %82, %11
  %19 = phi i64 [ 0, %11 ], [ %85, %82 ]
  %20 = phi %"class.v8::MaybeLocal.967"* [ null, %11 ], [ %84, %82 ]
  %21 = phi %"class.v8::MaybeLocal.967"* [ null, %11 ], [ %83, %82 ]
  %22 = phi %"class.v8::internal::Handle.1263"* [ %7, %11 ], [ %80, %82 ]
  %23 = bitcast %"class.v8::internal::Handle.1263"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult %"class.v8::MaybeLocal.967"* %21, %20
  %26 = ptrtoint %"class.v8::MaybeLocal.967"* %20 to i64
  br i1 %25, label %27, label %31

27:                                               ; preds = %18
  %28 = bitcast %"class.v8::MaybeLocal.967"* %21 to i64*
  store i64 %24, i64* %28, align 8
  %29 = getelementptr inbounds %"class.v8::MaybeLocal.967", %"class.v8::MaybeLocal.967"* %21, i64 1
  %30 = ptrtoint %"class.v8::MaybeLocal.967"* %29 to i64
  store i64 %30, i64* %14, align 8
  br label %79

31:                                               ; preds = %18
  %32 = ptrtoint %"class.v8::MaybeLocal.967"* %21 to i64
  %33 = load i64, i64* %15, align 8
  %34 = sub i64 %32, %33
  %35 = ashr exact i64 %34, 3
  %36 = add nsw i64 %35, 1
  %37 = icmp ugt i64 %36, 2305843009213693951
  br i1 %37, label %38, label %40

38:                                               ; preds = %31
  %39 = bitcast %"class.std::__1::vector.1662"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %39) #16
  unreachable

40:                                               ; preds = %31
  %41 = sub i64 %26, %33
  %42 = ashr exact i64 %41, 3
  %43 = icmp ult i64 %42, 1152921504606846975
  br i1 %43, label %44, label %52

44:                                               ; preds = %40
  %45 = ashr exact i64 %41, 2
  %46 = icmp ult i64 %45, %36
  %47 = select i1 %46, i64 %36, i64 %45
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %44
  %50 = icmp ugt i64 %47, 2305843009213693951
  br i1 %50, label %51, label %52

51:                                               ; preds = %49
  tail call void @abort() #16
  unreachable

52:                                               ; preds = %49, %40
  %53 = phi i64 [ %47, %49 ], [ 2305843009213693951, %40 ]
  %54 = shl i64 %53, 3
  %55 = tail call i8* @_Znwm(i64 %54) #17
  %56 = bitcast i8* %55 to %"class.v8::MaybeLocal.967"*
  br label %57

57:                                               ; preds = %52, %44
  %58 = phi i64 [ %53, %52 ], [ 0, %44 ]
  %59 = phi %"class.v8::MaybeLocal.967"* [ %56, %52 ], [ null, %44 ]
  %60 = getelementptr inbounds %"class.v8::MaybeLocal.967", %"class.v8::MaybeLocal.967"* %59, i64 %35
  %61 = getelementptr inbounds %"class.v8::MaybeLocal.967", %"class.v8::MaybeLocal.967"* %59, i64 %58
  %62 = ptrtoint %"class.v8::MaybeLocal.967"* %61 to i64
  %63 = bitcast %"class.v8::MaybeLocal.967"* %60 to i64*
  store i64 %24, i64* %63, align 8
  %64 = getelementptr inbounds %"class.v8::MaybeLocal.967", %"class.v8::MaybeLocal.967"* %60, i64 1
  %65 = ptrtoint %"class.v8::MaybeLocal.967"* %64 to i64
  %66 = sub i64 %19, %33
  %67 = ashr exact i64 %66, 3
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"class.v8::MaybeLocal.967", %"class.v8::MaybeLocal.967"* %60, i64 %68
  %70 = ptrtoint %"class.v8::MaybeLocal.967"* %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %57
  %73 = bitcast %"class.v8::MaybeLocal.967"* %69 to i8*
  %74 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 %66, i1 false) #12
  br label %75

75:                                               ; preds = %72, %57
  store i64 %70, i64* %15, align 8
  store i64 %65, i64* %14, align 8
  store i64 %62, i64* %16, align 8
  %76 = icmp eq i64 %33, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %78) #17
  br label %79

79:                                               ; preds = %27, %75, %77
  %80 = getelementptr inbounds %"class.v8::internal::Handle.1263", %"class.v8::internal::Handle.1263"* %22, i64 1
  %81 = icmp eq %"class.v8::internal::Handle.1263"* %80, %9
  br i1 %81, label %17, label %82

82:                                               ; preds = %79
  %83 = load %"class.v8::MaybeLocal.967"*, %"class.v8::MaybeLocal.967"** %12, align 8
  %84 = load %"class.v8::MaybeLocal.967"*, %"class.v8::MaybeLocal.967"** %13, align 8
  %85 = ptrtoint %"class.v8::MaybeLocal.967"* %83 to i64
  br label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug11TypeProfile10ScriptDataC2EmNSt3__110shared_ptrINS_8internal11TypeProfileEEE(%"class.v8::debug::TypeProfile::ScriptData"* nocapture, i64, %"class.v8::internal::TypeProfile"*, %"class.std::__1::__shared_weak_count"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::TypeProfile", %"class.v8::internal::TypeProfile"* %2, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.v8::internal::TypeProfileScript"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.v8::internal::TypeProfile"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 5
  %12 = icmp ugt i64 %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.v8::internal::TypeProfile"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %14) #16
  unreachable

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.v8::debug::TypeProfile::ScriptData", %"class.v8::debug::TypeProfile::ScriptData"* %0, i64 0, i32 0
  %17 = ptrtoint %"class.std::__1::__shared_weak_count"* %3 to i64
  %18 = ptrtoint %"class.v8::internal::TypeProfile"* %2 to i64
  %19 = inttoptr i64 %9 to %"struct.v8::internal::TypeProfileScript"*
  %20 = getelementptr inbounds %"struct.v8::internal::TypeProfileScript", %"struct.v8::internal::TypeProfileScript"* %19, i64 %1
  store %"struct.v8::internal::TypeProfileScript"* %20, %"struct.v8::internal::TypeProfileScript"** %16, align 8
  %21 = getelementptr inbounds %"class.v8::debug::TypeProfile::ScriptData", %"class.v8::debug::TypeProfile::ScriptData"* %0, i64 0, i32 1
  %22 = bitcast %"class.std::__1::shared_ptr.1647"* %21 to i64*
  store i64 %18, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::debug::TypeProfile::ScriptData", %"class.v8::debug::TypeProfile::ScriptData"* %0, i64 0, i32 1, i32 1
  %24 = bitcast %"class.std::__1::__shared_weak_count"** %23 to i64*
  store i64 %17, i64* %24, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::debug::Script"* @_ZNK2v85debug11TypeProfile10ScriptData9GetScriptEv(%"class.v8::debug::TypeProfile::ScriptData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.v8::debug::TypeProfile::ScriptData"* %0 to %"class.v8::debug::Script"***
  %3 = load %"class.v8::debug::Script"**, %"class.v8::debug::Script"*** %2, align 8
  %4 = load %"class.v8::debug::Script"*, %"class.v8::debug::Script"** %3, align 8
  ret %"class.v8::debug::Script"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v85debug11TypeProfile10ScriptData7EntriesEv(%"class.std::__1::vector.1670"* noalias sret, %"class.v8::debug::TypeProfile::ScriptData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::debug::TypeProfile::Entry", align 8
  %4 = bitcast %"class.std::__1::vector.1670"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #12
  %5 = getelementptr inbounds %"class.v8::debug::TypeProfile::ScriptData", %"class.v8::debug::TypeProfile::ScriptData"* %1, i64 0, i32 0
  %6 = load %"struct.v8::internal::TypeProfileScript"*, %"struct.v8::internal::TypeProfileScript"** %5, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::TypeProfileScript", %"struct.v8::internal::TypeProfileScript"* %6, i64 0, i32 1, i32 0, i32 0
  %8 = load %"struct.v8::internal::TypeProfileEntry"*, %"struct.v8::internal::TypeProfileEntry"** %7, align 8
  %9 = getelementptr inbounds %"struct.v8::internal::TypeProfileScript", %"struct.v8::internal::TypeProfileScript"* %6, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.v8::internal::TypeProfileEntry"*, %"struct.v8::internal::TypeProfileEntry"** %9, align 8
  %11 = icmp eq %"struct.v8::internal::TypeProfileEntry"* %8, %10
  br i1 %11, label %26, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.v8::debug::TypeProfile::Entry"* %3 to i8*
  %14 = getelementptr inbounds %"class.v8::debug::TypeProfile::ScriptData", %"class.v8::debug::TypeProfile::ScriptData"* %1, i64 0, i32 1
  %15 = bitcast %"class.std::__1::shared_ptr.1647"* %14 to i64*
  %16 = getelementptr inbounds %"class.v8::debug::TypeProfile::ScriptData", %"class.v8::debug::TypeProfile::ScriptData"* %1, i64 0, i32 1, i32 1
  %17 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %3, i64 0, i32 0
  %18 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %3, i64 0, i32 1
  %19 = bitcast %"class.std::__1::shared_ptr.1647"* %18 to i64*
  %20 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %3, i64 0, i32 1, i32 1
  %21 = bitcast %"class.std::__1::__shared_weak_count"** %20 to i64*
  %22 = getelementptr inbounds %"class.std::__1::vector.1670", %"class.std::__1::vector.1670"* %0, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::vector.1670", %"class.std::__1::vector.1670"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.std::__1::shared_ptr.1647"* %18 to i8*
  %25 = bitcast %"class.v8::debug::TypeProfile::Entry"** %22 to i64*
  br label %27

26:                                               ; preds = %64, %2
  ret void

27:                                               ; preds = %12, %64
  %28 = phi %"struct.v8::internal::TypeProfileEntry"* [ %8, %12 ], [ %65, %64 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %29 = load i64, i64* %15, align 8
  %30 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  %31 = icmp eq %"class.std::__1::__shared_weak_count"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %30, i64 0, i32 0, i32 1
  %34 = atomicrmw add i64* %33, i64 1 monotonic
  br label %35

35:                                               ; preds = %27, %32
  %36 = ptrtoint %"class.std::__1::__shared_weak_count"* %30 to i64
  store %"struct.v8::internal::TypeProfileEntry"* %28, %"struct.v8::internal::TypeProfileEntry"** %17, align 8
  store i64 %29, i64* %19, align 8
  store i64 %36, i64* %21, align 8
  %37 = load %"class.v8::debug::TypeProfile::Entry"*, %"class.v8::debug::TypeProfile::Entry"** %22, align 8
  %38 = load %"class.v8::debug::TypeProfile::Entry"*, %"class.v8::debug::TypeProfile::Entry"** %23, align 8
  %39 = icmp ult %"class.v8::debug::TypeProfile::Entry"* %37, %38
  br i1 %39, label %40, label %51

40:                                               ; preds = %35
  %41 = ptrtoint %"struct.v8::internal::TypeProfileEntry"* %28 to i64
  %42 = bitcast %"class.v8::debug::TypeProfile::Entry"* %37 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %37, i64 0, i32 1
  %44 = load i64, i64* %19, align 8
  %45 = bitcast %"class.std::__1::shared_ptr.1647"* %43 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %37, i64 0, i32 1, i32 1
  %47 = load i64, i64* %21, align 8
  %48 = bitcast %"class.std::__1::__shared_weak_count"** %46 to i64*
  store i64 %47, i64* %48, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #12
  %49 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %37, i64 1
  %50 = ptrtoint %"class.v8::debug::TypeProfile::Entry"* %49 to i64
  store i64 %50, i64* %25, align 8
  br label %64

51:                                               ; preds = %35
  call void @_ZNSt3__16vectorIN2v85debug11TypeProfile5EntryENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.1670"* %0, %"class.v8::debug::TypeProfile::Entry"* nonnull dereferenceable(24) %3) #12
  %52 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %20, align 8
  %53 = bitcast %"class.std::__1::__shared_weak_count"* %52 to void (%"class.std::__1::__shared_count"*)***
  %54 = icmp eq %"class.std::__1::__shared_weak_count"* %52, null
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0, i32 1
  %57 = atomicrmw add i64* %56, i64 -1 acq_rel
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %64

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0
  %61 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %53, align 8
  %62 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %61, i64 2
  %63 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %62, align 8
  call void %63(%"class.std::__1::__shared_count"* %60) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %52) #12
  br label %64

64:                                               ; preds = %40, %51, %55, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  %65 = getelementptr inbounds %"struct.v8::internal::TypeProfileEntry", %"struct.v8::internal::TypeProfileEntry"* %28, i64 1
  %66 = icmp eq %"struct.v8::internal::TypeProfileEntry"* %65, %10
  br i1 %66, label %26, label %27
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.v8::internal::TypeProfile"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v85debug11TypeProfile7CollectEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %3 = tail call %"class.v8::internal::TypeProfile"* @_ZN2v88internal11TypeProfile7CollectEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #12
  %4 = icmp eq %"class.v8::internal::TypeProfile"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.v8::internal::TypeProfile"* %3 to i64
  %7 = tail call i8* @_Znwm(i64 32) #17
  %8 = bitcast i8* %7 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal11TypeProfileENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 24
  %11 = bitcast i8* %10 to i64*
  store i64 %6, i64* %11, align 8
  %12 = bitcast i8* %7 to %"class.std::__1::__shared_weak_count"*
  br label %13

13:                                               ; preds = %1, %5
  %14 = phi %"class.std::__1::__shared_weak_count"* [ %12, %5 ], [ null, %1 ]
  %15 = insertvalue { %"class.v8::internal::TypeProfile"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.v8::internal::TypeProfile"* %3, 0
  %16 = insertvalue { %"class.v8::internal::TypeProfile"*, %"class.std::__1::__shared_weak_count"* } %15, %"class.std::__1::__shared_weak_count"* %14, 1
  ret { %"class.v8::internal::TypeProfile"*, %"class.std::__1::__shared_weak_count"* } %16
}

declare %"class.v8::internal::TypeProfile"* @_ZN2v88internal11TypeProfile7CollectEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v85debug11TypeProfile10SelectModeEPNS_7IsolateENS0_15TypeProfileModeE(%"class.v8::Isolate"*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  tail call void @_ZN2v88internal11TypeProfile10SelectModeEPNS0_7IsolateENS_5debug15TypeProfileModeE(%"class.v8::internal::Isolate"* %3, i32 %1) #12
  ret void
}

declare void @_ZN2v88internal11TypeProfile10SelectModeEPNS0_7IsolateENS_5debug15TypeProfileModeE(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v85debug11TypeProfile11ScriptCountEv(%"class.v8::debug::TypeProfile"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::debug::TypeProfile", %"class.v8::debug::TypeProfile"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::internal::TypeProfile"*, %"class.v8::internal::TypeProfile"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::TypeProfile", %"class.v8::internal::TypeProfile"* %3, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.v8::internal::TypeProfileScript"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.v8::internal::TypeProfile"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v85debug11TypeProfile13GetScriptDataEm(%"class.v8::debug::TypeProfile::ScriptData"* noalias nocapture sret, %"class.v8::debug::TypeProfile"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::debug::TypeProfile"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::debug::TypeProfile", %"class.v8::debug::TypeProfile"* %1, i64 0, i32 0, i32 1
  %7 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %6, align 8
  %8 = icmp eq %"class.std::__1::__shared_weak_count"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %7, i64 0, i32 0, i32 1
  %11 = atomicrmw add i64* %10, i64 1 monotonic
  br label %12

12:                                               ; preds = %3, %9
  %13 = inttoptr i64 %5 to %"class.v8::internal::TypeProfile"*
  %14 = getelementptr inbounds %"class.v8::internal::TypeProfile", %"class.v8::internal::TypeProfile"* %13, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast %"struct.v8::internal::TypeProfileScript"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = inttoptr i64 %5 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 5
  %21 = icmp ugt i64 %20, %2
  br i1 %21, label %24, label %22

22:                                               ; preds = %12
  %23 = inttoptr i64 %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %23) #16
  unreachable

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.v8::debug::TypeProfile::ScriptData", %"class.v8::debug::TypeProfile::ScriptData"* %0, i64 0, i32 0
  %26 = ptrtoint %"class.std::__1::__shared_weak_count"* %7 to i64
  %27 = inttoptr i64 %18 to %"struct.v8::internal::TypeProfileScript"*
  %28 = getelementptr inbounds %"struct.v8::internal::TypeProfileScript", %"struct.v8::internal::TypeProfileScript"* %27, i64 %2
  store %"struct.v8::internal::TypeProfileScript"* %28, %"struct.v8::internal::TypeProfileScript"** %25, align 8
  %29 = getelementptr inbounds %"class.v8::debug::TypeProfile::ScriptData", %"class.v8::debug::TypeProfile::ScriptData"* %0, i64 0, i32 1
  %30 = bitcast %"class.std::__1::shared_ptr.1647"* %29 to i64*
  store i64 %5, i64* %30, align 8
  %31 = getelementptr inbounds %"class.v8::debug::TypeProfile::ScriptData", %"class.v8::debug::TypeProfile::ScriptData"* %0, i64 0, i32 1, i32 1
  %32 = bitcast %"class.std::__1::__shared_weak_count"** %31 to i64*
  store i64 %26, i64* %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN2v85debug7WeakMap3GetENS_5LocalINS_7ContextEEENS2_INS_5ValueEEE(%"class.v8::debug::WeakMap"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::InternalEscapableScope", align 8
  %5 = alloca %"class.v8::CallDepthScope", align 8
  %6 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %7 = alloca [1 x %"class.v8::internal::Handle.1452"], align 8
  %8 = icmp eq %"class.v8::Context"* %1, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = load i32, i32* @_ZN2v88internal7Isolate12isolate_key_E, align 4
  %11 = tail call i8* @_ZN2v84base6Thread14GetThreadLocalEi(i32 %10) #12
  %12 = bitcast i8* %11 to %"class.v8::internal::Isolate"*
  br label %16

13:                                               ; preds = %3
  %14 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* nonnull %1) #12
  %15 = bitcast %"class.v8::Isolate"* %14 to %"class.v8::internal::Isolate"*
  br label %16

16:                                               ; preds = %13, %9
  %17 = phi %"class.v8::internal::Isolate"* [ %12, %9 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 5
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = trunc i64 %19 to i32
  %24 = icmp eq i32 %22, %23
  br i1 %24, label %30, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 33
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %22, %28
  br i1 %29, label %173, label %30

30:                                               ; preds = %16, %25
  %31 = bitcast %"class.v8::InternalEscapableScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.v8::InternalEscapableScope", %"class.v8::InternalEscapableScope"* %4, i64 0, i32 0
  %33 = bitcast %"class.v8::internal::Isolate"* %17 to %"class.v8::Isolate"*
  call void @_ZN2v820EscapableHandleScopeC2EPNS_7IsolateE(%"class.v8::EscapableHandleScope"* nonnull %32, %"class.v8::Isolate"* %33) #12
  %34 = bitcast %"class.v8::CallDepthScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %34) #12
  call void @_ZN2v814CallDepthScopeILb0EEC2EPNS_8internal7IsolateENS_5LocalINS_7ContextEEE(%"class.v8::CallDepthScope"* nonnull %5, %"class.v8::internal::Isolate"* %17, %"class.v8::Context"* %1)
  %35 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 40, i1 false) #12
  %36 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1722", %"struct.std::__1::atomic.1722"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %44, label %38, !prof !3

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %40 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 14, i32 0
  %42 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %42, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %43, %"class.v8::internal::RuntimeCallStats"** %39, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %43, %"class.v8::internal::RuntimeCallTimer"* %40, i32 1175) #12
  br label %44

44:                                               ; preds = %30, %38
  %45 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 21
  %49 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %48, align 8
  call void @_ZN2v88internal6Logger12ApiEntryCallEPKc(%"class.v8::internal::Logger"* %49, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0)) #12
  br label %50

50:                                               ; preds = %44, %47
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 9, i32 22
  %52 = load i32, i32* %51, align 8
  store i32 5, i32* %51, align 8
  %53 = bitcast %"class.v8::debug::WeakMap"* %0 to i64*
  %54 = bitcast [1 x %"class.v8::internal::Handle.1452"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  %55 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1452"], [1 x %"class.v8::internal::Handle.1452"]* %7, i64 0, i64 0
  %56 = bitcast [1 x %"class.v8::internal::Handle.1452"]* %7 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, -4294967296
  %60 = add i64 %58, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %59, %63
  %65 = add i64 %64, 19
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %59, %68
  %70 = add i64 %69, 999
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %59, %73
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 4
  %76 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %75, align 8
  %77 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %50
  %79 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %76, i64 %74) #12
  br label %93

80:                                               ; preds = %50
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 0
  %82 = load i64*, i64** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 1
  %84 = load i64*, i64** %83, align 8
  %85 = icmp eq i64* %82, %84
  br i1 %85, label %86, label %88

86:                                               ; preds = %80
  %87 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %17) #12
  br label %88

88:                                               ; preds = %86, %80
  %89 = phi i64* [ %87, %86 ], [ %82, %80 ]
  %90 = ptrtoint i64* %89 to i64
  %91 = add i64 %90, 8
  %92 = inttoptr i64 %91 to i64*
  store i64* %92, i64** %81, align 8
  store i64 %74, i64* %89, align 8
  br label %93

93:                                               ; preds = %78, %88
  %94 = phi i64* [ %79, %78 ], [ %89, %88 ]
  %95 = call i64* @_ZN2v88internal9Execution11CallBuiltinEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS4_INS0_6ObjectEEEiPS8_(%"class.v8::internal::Isolate"* %17, i64* %94, i64* %53, i32 1, %"class.v8::internal::Handle.1452"* nonnull %55) #12
  %96 = icmp eq i64* %95, null
  br i1 %96, label %97, label %114

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %5, i64 0, i32 2
  %99 = load i8, i8* %98, align 8
  %100 = or i8 %99, 2
  store i8 %100, i8* %98, align 8
  %101 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %5, i64 0, i32 0
  %102 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %101, align 8
  %103 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %5, i64 0, i32 4
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %102, i64 0, i32 0, i32 9, i32 10
  store i64 %104, i64* %105, align 8
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %107, label %111

107:                                              ; preds = %97
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %102, i64 0, i32 0, i32 9, i32 0
  %109 = load %"class.v8::TryCatch"*, %"class.v8::TryCatch"** %108, align 8
  %110 = icmp eq %"class.v8::TryCatch"* %109, null
  br label %111

111:                                              ; preds = %97, %107
  %112 = phi i1 [ false, %97 ], [ %110, %107 ]
  %113 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %102, i1 zeroext %112) #12
  br label %117

114:                                              ; preds = %93
  %115 = call i64* @_ZN2v820EscapableHandleScope6EscapeEPm(%"class.v8::EscapableHandleScope"* nonnull %32, i64* nonnull %95) #12
  %116 = bitcast i64* %115 to %"class.v8::Value"*
  br label %117

117:                                              ; preds = %114, %111
  %118 = phi %"class.v8::Value"* [ %116, %114 ], [ null, %111 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  store i32 %52, i32* %51, align 8
  %119 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %120 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %119, align 8
  %121 = icmp eq %"class.v8::internal::RuntimeCallStats"* %120, null
  br i1 %121, label %124, label %122, !prof !3

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %120, %"class.v8::internal::RuntimeCallTimer"* %123) #12
  br label %124

124:                                              ; preds = %117, %122
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #12
  %125 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %5, i64 0, i32 0
  %126 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %125, align 8
  %127 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %5, i64 0, i32 1, i32 0
  %128 = load %"class.v8::Context"*, %"class.v8::Context"** %127, align 8
  %129 = icmp eq %"class.v8::Context"* %128, null
  %130 = bitcast %"class.v8::Context"* %128 to i64*
  %131 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %5, i64 0, i32 2
  %132 = load i8, i8* %131, align 8
  br i1 %129, label %153, label %133

133:                                              ; preds = %124
  %134 = and i8 %132, 1
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %148, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %126, i64 0, i32 32
  %138 = load %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::HandleScopeImplementer"** %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %138, i64 0, i32 4
  %140 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %138, i64 0, i32 4, i32 0, i32 2
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, -1
  %143 = bitcast %"class.v8::internal::DetachableVector.752"* %139 to %"class.v8::internal::Context"**
  %144 = load %"class.v8::internal::Context"*, %"class.v8::internal::Context"** %143, align 8
  %145 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %144, i64 %142, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i64, i64* %145, align 8
  store i64 %142, i64* %140, align 8
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %126, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %146, i64* %147, align 8
  br label %148

148:                                              ; preds = %136, %133
  %149 = load i64, i64* %130, align 8
  %150 = add i64 %149, -1
  %151 = inttoptr i64 %150 to i32*
  %152 = load atomic i32, i32* %151 monotonic, align 4
  br label %153

153:                                              ; preds = %124, %148
  %154 = and i8 %132, 2
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %156, label %160

156:                                              ; preds = %153
  %157 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %5, i64 0, i32 4
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %126, i64 0, i32 0, i32 9, i32 10
  store i64 %158, i64* %159, align 8
  br label %160

160:                                              ; preds = %156, %153
  %161 = lshr i8 %132, 2
  %162 = and i8 %161, 1
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %126, i64 0, i32 113
  store i8 %162, i8* %163, align 8
  %164 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %5, i64 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %164, align 8
  %165 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %5, i64 0, i32 3, i32 4
  %166 = load i32, i32* %165, align 8
  %167 = icmp eq i32 %166, 2
  br i1 %167, label %171, label %168

168:                                              ; preds = %160
  %169 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %5, i64 0, i32 3, i32 1
  %170 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %169, align 8
  call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %170) #12
  br label %171

171:                                              ; preds = %160, %168
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %34) #12
  %172 = getelementptr inbounds %"class.v8::InternalEscapableScope", %"class.v8::InternalEscapableScope"* %4, i64 0, i32 0, i32 0
  call void @_ZN2v811HandleScopeD2Ev(%"class.v8::HandleScope"* nonnull %172) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #12
  br label %173

173:                                              ; preds = %25, %171
  %174 = phi %"class.v8::Value"* [ %118, %171 ], [ null, %25 ]
  ret %"class.v8::Value"* %174
}

declare i64* @_ZN2v88internal9Execution11CallBuiltinEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS4_INS0_6ObjectEEEiPS8_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1452"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::debug::WeakMap"* @_ZN2v85debug7WeakMap3SetENS_5LocalINS_7ContextEEENS2_INS_5ValueEEES6_(%"class.v8::debug::WeakMap"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Value"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::InternalEscapableScope", align 8
  %6 = alloca %"class.v8::CallDepthScope", align 8
  %7 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %8 = alloca [2 x %"class.v8::internal::Handle.1452"], align 16
  %9 = icmp eq %"class.v8::Context"* %1, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %4
  %11 = load i32, i32* @_ZN2v88internal7Isolate12isolate_key_E, align 4
  %12 = tail call i8* @_ZN2v84base6Thread14GetThreadLocalEi(i32 %11) #12
  %13 = bitcast i8* %12 to %"class.v8::internal::Isolate"*
  br label %17

14:                                               ; preds = %4
  %15 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* nonnull %1) #12
  %16 = bitcast %"class.v8::Isolate"* %15 to %"class.v8::internal::Isolate"*
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi %"class.v8::internal::Isolate"* [ %13, %10 ], [ %16, %14 ]
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 7, i32 0, i64 5
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = trunc i64 %20 to i32
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 7, i32 0, i64 33
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i32
  %30 = icmp eq i32 %23, %29
  br i1 %30, label %176, label %31

31:                                               ; preds = %17, %26
  %32 = bitcast %"class.v8::InternalEscapableScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.v8::InternalEscapableScope", %"class.v8::InternalEscapableScope"* %5, i64 0, i32 0
  %34 = bitcast %"class.v8::internal::Isolate"* %18 to %"class.v8::Isolate"*
  call void @_ZN2v820EscapableHandleScopeC2EPNS_7IsolateE(%"class.v8::EscapableHandleScope"* nonnull %33, %"class.v8::Isolate"* %34) #12
  %35 = bitcast %"class.v8::CallDepthScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %35) #12
  call void @_ZN2v814CallDepthScopeILb0EEC2EPNS_8internal7IsolateENS_5LocalINS_7ContextEEE(%"class.v8::CallDepthScope"* nonnull %6, %"class.v8::internal::Isolate"* %18, %"class.v8::Context"* %1)
  %36 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %36) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 40, i1 false) #12
  %37 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1722", %"struct.std::__1::atomic.1722"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %45, label %39, !prof !3

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %41 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 14, i32 0
  %43 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %43, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %44, %"class.v8::internal::RuntimeCallStats"** %40, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %44, %"class.v8::internal::RuntimeCallTimer"* %41, i32 1177) #12
  br label %45

45:                                               ; preds = %31, %39
  %46 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !4
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 21
  %50 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %49, align 8
  call void @_ZN2v88internal6Logger12ApiEntryCallEPKc(%"class.v8::internal::Logger"* %50, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0)) #12
  br label %51

51:                                               ; preds = %45, %48
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 9, i32 22
  %53 = load i32, i32* %52, align 8
  store i32 5, i32* %52, align 8
  %54 = bitcast %"class.v8::debug::WeakMap"* %0 to i64*
  %55 = bitcast [2 x %"class.v8::internal::Handle.1452"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #12
  %56 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1452"], [2 x %"class.v8::internal::Handle.1452"]* %8, i64 0, i64 0
  %57 = bitcast [2 x %"class.v8::internal::Handle.1452"]* %8 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %57, align 16
  %58 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1452"], [2 x %"class.v8::internal::Handle.1452"]* %8, i64 0, i64 1, i32 0, i32 0
  %59 = bitcast i64** %58 to %"class.v8::Value"**
  store %"class.v8::Value"* %3, %"class.v8::Value"** %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, -4294967296
  %63 = add i64 %61, -1
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %62, %66
  %68 = add i64 %67, 19
  %69 = inttoptr i64 %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %62, %71
  %73 = add i64 %72, 995
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %62, %76
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 31, i32 4
  %79 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %78, align 8
  %80 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %51
  %82 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %79, i64 %77) #12
  br label %96

83:                                               ; preds = %51
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 31, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 31, i32 1
  %87 = load i64*, i64** %86, align 8
  %88 = icmp eq i64* %85, %87
  br i1 %88, label %89, label %91

89:                                               ; preds = %83
  %90 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %18) #12
  br label %91

91:                                               ; preds = %89, %83
  %92 = phi i64* [ %90, %89 ], [ %85, %83 ]
  %93 = ptrtoint i64* %92 to i64
  %94 = add i64 %93, 8
  %95 = inttoptr i64 %94 to i64*
  store i64* %95, i64** %84, align 8
  store i64 %77, i64* %92, align 8
  br label %96

96:                                               ; preds = %81, %91
  %97 = phi i64* [ %82, %81 ], [ %92, %91 ]
  %98 = call i64* @_ZN2v88internal9Execution11CallBuiltinEPNS0_7IsolateENS0_6HandleINS0_10JSFunctionEEENS4_INS0_6ObjectEEEiPS8_(%"class.v8::internal::Isolate"* %18, i64* %97, i64* %54, i32 2, %"class.v8::internal::Handle.1452"* nonnull %56) #12
  %99 = icmp eq i64* %98, null
  br i1 %99, label %100, label %117

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 2
  %102 = load i8, i8* %101, align 8
  %103 = or i8 %102, 2
  store i8 %103, i8* %101, align 8
  %104 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 0
  %105 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %104, align 8
  %106 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 4
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %105, i64 0, i32 0, i32 9, i32 10
  store i64 %107, i64* %108, align 8
  %109 = icmp eq i64 %107, 0
  br i1 %109, label %110, label %114

110:                                              ; preds = %100
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %105, i64 0, i32 0, i32 9, i32 0
  %112 = load %"class.v8::TryCatch"*, %"class.v8::TryCatch"** %111, align 8
  %113 = icmp eq %"class.v8::TryCatch"* %112, null
  br label %114

114:                                              ; preds = %100, %110
  %115 = phi i1 [ false, %100 ], [ %113, %110 ]
  %116 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %105, i1 zeroext %115) #12
  br label %120

117:                                              ; preds = %96
  %118 = call i64* @_ZN2v820EscapableHandleScope6EscapeEPm(%"class.v8::EscapableHandleScope"* nonnull %33, i64* nonnull %98) #12
  %119 = bitcast i64* %118 to %"class.v8::debug::WeakMap"*
  br label %120

120:                                              ; preds = %117, %114
  %121 = phi %"class.v8::debug::WeakMap"* [ %119, %117 ], [ null, %114 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #12
  store i32 %53, i32* %52, align 8
  %122 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %123 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %122, align 8
  %124 = icmp eq %"class.v8::internal::RuntimeCallStats"* %123, null
  br i1 %124, label %127, label %125, !prof !3

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %123, %"class.v8::internal::RuntimeCallTimer"* %126) #12
  br label %127

127:                                              ; preds = %120, %125
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %36) #12
  %128 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 0
  %129 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %128, align 8
  %130 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 1, i32 0
  %131 = load %"class.v8::Context"*, %"class.v8::Context"** %130, align 8
  %132 = icmp eq %"class.v8::Context"* %131, null
  %133 = bitcast %"class.v8::Context"* %131 to i64*
  %134 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 2
  %135 = load i8, i8* %134, align 8
  br i1 %132, label %156, label %136

136:                                              ; preds = %127
  %137 = and i8 %135, 1
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %151, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %129, i64 0, i32 32
  %141 = load %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::HandleScopeImplementer"** %140, align 8
  %142 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %141, i64 0, i32 4
  %143 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %141, i64 0, i32 4, i32 0, i32 2
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, -1
  %146 = bitcast %"class.v8::internal::DetachableVector.752"* %142 to %"class.v8::internal::Context"**
  %147 = load %"class.v8::internal::Context"*, %"class.v8::internal::Context"** %146, align 8
  %148 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %147, i64 %145, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i64, i64* %148, align 8
  store i64 %145, i64* %143, align 8
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %129, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %149, i64* %150, align 8
  br label %151

151:                                              ; preds = %139, %136
  %152 = load i64, i64* %133, align 8
  %153 = add i64 %152, -1
  %154 = inttoptr i64 %153 to i32*
  %155 = load atomic i32, i32* %154 monotonic, align 4
  br label %156

156:                                              ; preds = %127, %151
  %157 = and i8 %135, 2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %159, label %163

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 4
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %129, i64 0, i32 0, i32 9, i32 10
  store i64 %161, i64* %162, align 8
  br label %163

163:                                              ; preds = %159, %156
  %164 = lshr i8 %135, 2
  %165 = and i8 %164, 1
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %129, i64 0, i32 113
  store i8 %165, i8* %166, align 8
  %167 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %167, align 8
  %168 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 3, i32 4
  %169 = load i32, i32* %168, align 8
  %170 = icmp eq i32 %169, 2
  br i1 %170, label %174, label %171

171:                                              ; preds = %163
  %172 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %6, i64 0, i32 3, i32 1
  %173 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %172, align 8
  call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %173) #12
  br label %174

174:                                              ; preds = %163, %171
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %35) #12
  %175 = getelementptr inbounds %"class.v8::InternalEscapableScope", %"class.v8::InternalEscapableScope"* %5, i64 0, i32 0, i32 0
  call void @_ZN2v811HandleScopeD2Ev(%"class.v8::HandleScope"* nonnull %175) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #12
  br label %176

176:                                              ; preds = %26, %174
  %177 = phi %"class.v8::debug::WeakMap"* [ %121, %174 ], [ null, %26 ]
  ret %"class.v8::debug::WeakMap"* %177
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::debug::WeakMap"* @_ZN2v85debug7WeakMap3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %3 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 40, i1 false) #12
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1722", %"struct.std::__1::atomic.1722"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %13, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 1
  %9 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45176
  %10 = bitcast %"class.v8::Isolate"* %9 to %"class.v8::internal::Counters"**
  %11 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %11, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %12, %"class.v8::internal::RuntimeCallStats"** %7, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %12, %"class.v8::internal::RuntimeCallTimer"* %8, i32 1176) #12
  br label %13

13:                                               ; preds = %1, %6
  %14 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 45512
  %18 = bitcast %"class.v8::Isolate"* %17 to %"class.v8::internal::Logger"**
  %19 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %18, align 8
  call void @_ZN2v88internal6Logger12ApiEntryCallEPKc(%"class.v8::internal::Logger"* %19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0)) #12
  br label %20

20:                                               ; preds = %13, %16
  %21 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %0, i64 13992
  %22 = bitcast %"class.v8::Isolate"* %21 to i32*
  %23 = load i32, i32* %22, align 8
  store i32 5, i32* %22, align 8
  %24 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Factory"*
  %25 = call i64* @_ZN2v88internal7Factory12NewJSWeakMapEv(%"class.v8::internal::Factory"* %24) #12
  %26 = bitcast i64* %25 to %"class.v8::debug::WeakMap"*
  store i32 %23, i32* %22, align 8
  %27 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 0
  %28 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %27, align 8
  %29 = icmp eq %"class.v8::internal::RuntimeCallStats"* %28, null
  br i1 %29, label %32, label %30, !prof !3

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %28, %"class.v8::internal::RuntimeCallTimer"* %31) #12
  br label %32

32:                                               ; preds = %20, %30
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #12
  ret %"class.v8::debug::WeakMap"* %26
}

declare i64* @_ZN2v88internal7Factory12NewJSWeakMapEv(%"class.v8::internal::Factory"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN2v85debug12AccessorPair6getterEv(%"class.v8::debug::AccessorPair"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::debug::AccessorPair"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = and i64 %3, -4294967296
  %11 = add i64 %3, 3
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %17 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %16, align 8
  %18 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %1
  %20 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %17, i64 %15) #12
  br label %34

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #12
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi i64* [ %28, %27 ], [ %23, %21 ]
  %31 = ptrtoint i64* %30 to i64
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  store i64* %33, i64** %22, align 8
  store i64 %15, i64* %30, align 8
  br label %34

34:                                               ; preds = %19, %29
  %35 = phi i64* [ %20, %19 ], [ %30, %29 ]
  %36 = bitcast i64* %35 to %"class.v8::Value"*
  ret %"class.v8::Value"* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN2v85debug12AccessorPair6setterEv(%"class.v8::debug::AccessorPair"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::debug::AccessorPair"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = and i64 %3, -4294967296
  %11 = add i64 %3, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %17 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %16, align 8
  %18 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %1
  %20 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %17, i64 %15) #12
  br label %34

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #12
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi i64* [ %28, %27 ], [ %23, %21 ]
  %31 = ptrtoint i64* %30 to i64
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  store i64* %33, i64** %22, align 8
  store i64 %15, i64* %30, align 8
  br label %34

34:                                               ; preds = %19, %29
  %35 = phi i64* [ %20, %19 ], [ %30, %29 ]
  %36 = bitcast i64* %35 to %"class.v8::Value"*
  ret %"class.v8::Value"* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v85debug12AccessorPair14IsAccessorPairENS_5LocalINS_5ValueEEE(%"class.v8::Value"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::Value"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = and i64 %3, -4294967296
  %8 = add i64 %3, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 87
  br label %17

17:                                               ; preds = %1, %6
  %18 = phi i1 [ false, %1 ], [ %16, %6 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Message"* @_ZN2v85debug21GetMessageFromPromiseENS_5LocalINS_7PromiseEEE(%"class.v8::Promise"*) local_unnamed_addr #0 {
  %2 = bitcast %"class.v8::Promise"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %11 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %10, i64 4072
  %12 = bitcast %"class.v8::internal::Factory"* %11 to i64*
  %13 = tail call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %2, i64* %12)
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %14, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %1
  %20 = add i64 %14, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i64 %16, 4294967295
  %24 = icmp eq i64 %23, 0
  tail call void @llvm.assume(i1 %24) #12
  %25 = zext i32 %22 to i64
  %26 = or i64 %16, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp eq i16 %29, 1098
  %31 = bitcast i64* %13 to %"class.v8::Message"*
  %32 = select i1 %30, %"class.v8::Message"* %31, %"class.v8::Message"* null
  ret %"class.v8::Message"* %32

33:                                               ; preds = %1
  ret %"class.v8::Message"* null
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %4) #12
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -262144
  %7 = or i64 %6, 16
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8, align 16
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = ptrtoint i64* %0 to i64
  %13 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 0
  %14 = icmp eq i64* %1, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = load i64, i64* null, align 536870912
  %17 = add i64 %16, -1
  %18 = inttoptr i64 %17 to i32*
  br label %40

19:                                               ; preds = %2
  %20 = load i64, i64* %1, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %20, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i64 %22, 4294967295
  %27 = icmp eq i64 %26, 0
  tail call void @llvm.assume(i1 %27) #12
  %28 = zext i32 %25 to i64
  %29 = or i64 %22, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 64
  br i1 %33, label %34, label %40

34:                                               ; preds = %19
  %35 = add i64 %20, 7
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %15, %34, %19
  %41 = phi i32* [ %18, %15 ], [ %24, %34 ], [ %24, %19 ]
  %42 = phi i64 [ %16, %15 ], [ %20, %34 ], [ %20, %19 ]
  br label %43

43:                                               ; preds = %40, %34
  %44 = phi i32* [ %41, %40 ], [ %24, %34 ]
  %45 = phi i64 [ %42, %40 ], [ %20, %34 ]
  %46 = phi i32 [ 2, %40 ], [ 0, %34 ]
  store i32 %46, i32* %13, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 1
  store i32 4, i32* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 2
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 3
  store i32 0, i32* %49, align 4
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %11, %"class.v8::internal::Isolate"** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 6, i32 0, i32 0
  store i64* %1, i64** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 8, i32 0, i32 0
  store i64* %0, i64** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 10
  %57 = bitcast %"class.v8::internal::Handle.1452"* %56 to i64*
  store i64 %12, i64* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 11
  %59 = bitcast i64* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 -1, i64 16, i1 false) #12
  %60 = and i64 %45, -4294967296
  %61 = load atomic i32, i32* %44 monotonic, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %60, %62
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = and i16 %66, -32
  %68 = icmp eq i16 %67, 32
  br i1 %68, label %69, label %73

69:                                               ; preds = %43
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 5, i32 0, i32 0, i32 0
  %71 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %70, align 8
  %72 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %71, %"class.v8::internal::Isolate"* %11, i64* %1) #12
  br label %73

73:                                               ; preds = %43, %69
  %74 = phi i64* [ %72, %69 ], [ %1, %43 ]
  store i64* %74, i64** %52, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %3) #12
  %75 = load i32, i32* %47, align 4
  %76 = icmp eq i32 %75, 4
  br i1 %76, label %77, label %82

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::internal::Isolate"** %51 to %"class.v8::internal::Factory"**
  %79 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %79, i64 160
  %81 = bitcast %"class.v8::internal::Factory"* %80 to i64*
  br label %84

82:                                               ; preds = %73
  %83 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyEPNS0_14LookupIteratorENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* nonnull %3, i32 0) #12
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i64* [ %83, %82 ], [ %81, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %4) #12
  ret i64* %85
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::debug::PropertyIterator"* @_ZN2v85debug16PropertyIterator6CreateENS_5LocalINS_7ContextEEENS2_INS_6ObjectEEE(%"class.v8::Context"*, %"class.v8::Object"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::CallDepthScope", align 8
  %4 = tail call %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"* %1) #12
  %5 = bitcast %"class.v8::Isolate"* %4 to %"class.v8::internal::Isolate"*
  %6 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %4, i64 168
  %7 = bitcast %"class.v8::Isolate"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %4, i64 13928
  %10 = bitcast %"class.v8::Isolate"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = trunc i64 %8 to i32
  %14 = icmp eq i32 %12, %13
  br i1 %14, label %21, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::Isolate", %"class.v8::Isolate"* %4, i64 392
  %17 = bitcast %"class.v8::Isolate"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %12, %19
  br i1 %20, label %92, label %21

21:                                               ; preds = %2, %15
  %22 = bitcast %"class.v8::CallDepthScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #12
  call void @_ZN2v814CallDepthScopeILb0EEC2EPNS_8internal7IsolateENS_5LocalINS_7ContextEEE(%"class.v8::CallDepthScope"* nonnull %3, %"class.v8::internal::Isolate"* %5, %"class.v8::Context"* %0)
  %23 = bitcast %"class.v8::Object"* %1 to i64*
  %24 = call %"class.v8::internal::DebugPropertyIterator"* @_ZN2v88internal21DebugPropertyIterator6CreateEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %5, i64* %23) #12
  %25 = icmp eq %"class.v8::internal::DebugPropertyIterator"* %24, null
  br i1 %25, label %26, label %43

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %3, i64 0, i32 2
  %28 = load i8, i8* %27, align 8
  %29 = or i8 %28, 2
  store i8 %29, i8* %27, align 8
  %30 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %3, i64 0, i32 0
  %31 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %3, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 9, i32 10
  store i64 %33, i64* %34, align 8
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 9, i32 0
  %38 = load %"class.v8::TryCatch"*, %"class.v8::TryCatch"** %37, align 8
  %39 = icmp eq %"class.v8::TryCatch"* %38, null
  br label %40

40:                                               ; preds = %26, %36
  %41 = phi i1 [ false, %26 ], [ %39, %36 ]
  %42 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %31, i1 zeroext %41) #12
  br label %43

43:                                               ; preds = %21, %40
  %44 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %3, i64 0, i32 0
  %45 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %3, i64 0, i32 1, i32 0
  %47 = load %"class.v8::Context"*, %"class.v8::Context"** %46, align 8
  %48 = icmp eq %"class.v8::Context"* %47, null
  %49 = bitcast %"class.v8::Context"* %47 to i64*
  %50 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %3, i64 0, i32 2
  %51 = load i8, i8* %50, align 8
  br i1 %48, label %72, label %52

52:                                               ; preds = %43
  %53 = and i8 %51, 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %67, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %45, i64 0, i32 32
  %57 = load %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::HandleScopeImplementer"** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %57, i64 0, i32 4
  %59 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %57, i64 0, i32 4, i32 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, -1
  %62 = bitcast %"class.v8::internal::DetachableVector.752"* %58 to %"class.v8::internal::Context"**
  %63 = load %"class.v8::internal::Context"*, %"class.v8::internal::Context"** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %63, i64 %61, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  store i64 %61, i64* %59, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %45, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %65, i64* %66, align 8
  br label %67

67:                                               ; preds = %55, %52
  %68 = load i64, i64* %49, align 8
  %69 = add i64 %68, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  br label %72

72:                                               ; preds = %43, %67
  %73 = and i8 %51, 2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %3, i64 0, i32 4
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %45, i64 0, i32 0, i32 9, i32 10
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %75, %72
  %80 = lshr i8 %51, 2
  %81 = and i8 %80, 1
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %45, i64 0, i32 113
  store i8 %81, i8* %82, align 8
  %83 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %3, i64 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %84 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %3, i64 0, i32 3, i32 4
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 2
  br i1 %86, label %90, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %3, i64 0, i32 3, i32 1
  %89 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %88, align 8
  call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %89) #12
  br label %90

90:                                               ; preds = %79, %87
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #12
  %91 = getelementptr inbounds %"class.v8::internal::DebugPropertyIterator", %"class.v8::internal::DebugPropertyIterator"* %24, i64 0, i32 0
  br label %92

92:                                               ; preds = %15, %90
  %93 = phi %"class.v8::debug::PropertyIterator"* [ %91, %90 ], [ null, %15 ]
  ret %"class.v8::debug::PropertyIterator"* %93
}

declare %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"*) local_unnamed_addr #4

declare %"class.v8::internal::DebugPropertyIterator"* @_ZN2v88internal21DebugPropertyIterator6CreateEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal21DebugPropertyIterator7AdvanceEv(%"class.v8::internal::DebugPropertyIterator"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::CallDepthScope", align 8
  %3 = getelementptr inbounds %"class.v8::internal::DebugPropertyIterator", %"class.v8::internal::DebugPropertyIterator"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 5
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %6 to i32
  %11 = icmp eq i32 %9, %10
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 33
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %9, %15
  br i1 %16, label %110, label %17

17:                                               ; preds = %1, %12
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31, i32 4
  %21 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %20, align 8
  %22 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %21, i64 %19) #12
  br label %38

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31, i32 1
  %29 = load i64*, i64** %28, align 8
  %30 = icmp eq i64* %27, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %4) #12
  br label %33

33:                                               ; preds = %31, %25
  %34 = phi i64* [ %32, %31 ], [ %27, %25 ]
  %35 = ptrtoint i64* %34 to i64
  %36 = add i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  store i64* %37, i64** %26, align 8
  store i64 %19, i64* %34, align 8
  br label %38

38:                                               ; preds = %23, %33
  %39 = phi i64* [ %24, %23 ], [ %34, %33 ]
  %40 = bitcast i64* %39 to %"class.v8::Context"*
  %41 = bitcast %"class.v8::CallDepthScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %41) #12
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  call void @_ZN2v814CallDepthScopeILb0EEC2EPNS_8internal7IsolateENS_5LocalINS_7ContextEEE(%"class.v8::CallDepthScope"* nonnull %2, %"class.v8::internal::Isolate"* %42, %"class.v8::Context"* %40)
  %43 = call zeroext i1 @_ZN2v88internal21DebugPropertyIterator15AdvanceInternalEv(%"class.v8::internal::DebugPropertyIterator"* %0) #12
  br i1 %43, label %61, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %2, i64 0, i32 2
  %46 = load i8, i8* %45, align 8
  %47 = or i8 %46, 2
  store i8 %47, i8* %45, align 8
  %48 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %2, i64 0, i32 0
  %49 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %2, i64 0, i32 4
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %49, i64 0, i32 0, i32 9, i32 10
  store i64 %51, i64* %52, align 8
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %44
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %49, i64 0, i32 0, i32 9, i32 0
  %56 = load %"class.v8::TryCatch"*, %"class.v8::TryCatch"** %55, align 8
  %57 = icmp eq %"class.v8::TryCatch"* %56, null
  br label %58

58:                                               ; preds = %44, %54
  %59 = phi i1 [ false, %44 ], [ %57, %54 ]
  %60 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %49, i1 zeroext %59) #12
  br label %61

61:                                               ; preds = %38, %58
  %62 = phi i16 [ 0, %58 ], [ 257, %38 ]
  %63 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %2, i64 0, i32 0
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %2, i64 0, i32 1, i32 0
  %66 = load %"class.v8::Context"*, %"class.v8::Context"** %65, align 8
  %67 = icmp eq %"class.v8::Context"* %66, null
  %68 = bitcast %"class.v8::Context"* %66 to i64*
  %69 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %2, i64 0, i32 2
  %70 = load i8, i8* %69, align 8
  br i1 %67, label %91, label %71

71:                                               ; preds = %61
  %72 = and i8 %70, 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %86, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 32
  %76 = load %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::HandleScopeImplementer"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %76, i64 0, i32 4
  %78 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %76, i64 0, i32 4, i32 0, i32 2
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, -1
  %81 = bitcast %"class.v8::internal::DetachableVector.752"* %77 to %"class.v8::internal::Context"**
  %82 = load %"class.v8::internal::Context"*, %"class.v8::internal::Context"** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %82, i64 %80, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  store i64 %80, i64* %78, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %84, i64* %85, align 8
  br label %86

86:                                               ; preds = %74, %71
  %87 = load i64, i64* %68, align 8
  %88 = add i64 %87, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  br label %91

91:                                               ; preds = %61, %86
  %92 = and i8 %70, 2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %2, i64 0, i32 4
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 0, i32 9, i32 10
  store i64 %96, i64* %97, align 8
  br label %98

98:                                               ; preds = %94, %91
  %99 = lshr i8 %70, 2
  %100 = and i8 %99, 1
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 113
  store i8 %100, i8* %101, align 8
  %102 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %2, i64 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %103 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %2, i64 0, i32 3, i32 4
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 2
  br i1 %105, label %109, label %106

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.v8::CallDepthScope", %"class.v8::CallDepthScope"* %2, i64 0, i32 3, i32 1
  %108 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %107, align 8
  call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %108) #12
  br label %109

109:                                              ; preds = %98, %106
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %41) #12
  br label %110

110:                                              ; preds = %12, %109
  %111 = phi i16 [ %62, %109 ], [ 0, %12 ]
  ret i16 %111
}

declare zeroext i1 @_ZN2v88internal21DebugPropertyIterator15AdvanceInternalEv(%"class.v8::internal::DebugPropertyIterator"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.assume(i1) #12

declare void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"*) local_unnamed_addr #4

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #4

declare i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"*, i1 zeroext) local_unnamed_addr #4

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #4

declare i32 @_ZNK2v88internal9ScopeInfo19ContextHeaderLengthEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #4

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #4

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #4

declare dereferenceable(8) %"class.std::__1::__sp_mut"* @_ZNSt3__112__get_sp_mutEPKv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__18__sp_mut4lockEv(%"class.std::__1::__sp_mut"*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__18__sp_mut6unlockEv(%"class.std::__1::__sp_mut"*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #8

declare void @_ZN2v820EscapableHandleScopeC2EPNS_7IsolateE(%"class.v8::EscapableHandleScope"*, %"class.v8::Isolate"*) unnamed_addr #4

declare void @_ZN2v88internal7Isolate23PromiseHookStateUpdatedEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"*, i64) local_unnamed_addr #4

declare void @_ZN2v85Utils16ReportApiFailureEPKcS2_(i8*, i8*) local_unnamed_addr #4

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #4

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal9ScopeInfo21HasSharedFunctionNameEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #4

declare void @_ZN2v88internal15InterruptsScopeC2EPNS0_7IsolateElNS1_4ModeE(%"class.v8::internal::InterruptsScope"*, %"class.v8::internal::Isolate"*, i64, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23PostponeInterruptsScopeD0Ev(%"class.v8::internal::PostponeInterruptsScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %0, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %7, align 8
  tail call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %8) #12
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.v8::internal::PostponeInterruptsScope"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void
}

declare void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15InterruptsScopeD2Ev(%"class.v8::internal::InterruptsScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %7, align 8
  tail call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %8) #12
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15InterruptsScopeD0Ev(%"class.v8::internal::InterruptsScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %7, align 8
  tail call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %8) #12
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.v8::internal::InterruptsScope"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

declare i8* @_ZN2v84base6Thread14GetThreadLocalEi(i32) local_unnamed_addr #4

declare i64* @_ZN2v88internal10JSReceiver15GetDataPropertyEPNS0_14LookupIteratorENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"*, i32) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbRKN2v88internal13BreakLocationES5_EPS3_EEvT0_SA_T_(%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.v8::internal::BreakLocation", align 8
  %5 = alloca %"class.v8::internal::BreakLocation", align 8
  %6 = alloca %"class.v8::internal::BreakLocation", align 8
  %7 = alloca %"class.v8::internal::BreakLocation", align 8
  %8 = alloca %"class.v8::internal::BreakLocation", align 8
  %9 = alloca %"class.v8::internal::BreakLocation", align 8
  %10 = alloca %"class.v8::internal::BreakLocation", align 8
  %11 = alloca %"class.v8::internal::BreakLocation", align 8
  %12 = alloca %"class.v8::internal::BreakLocation", align 8
  %13 = alloca %"class.v8::internal::BreakLocation", align 8
  %14 = alloca %"class.v8::internal::BreakLocation", align 8
  %15 = alloca %"class.v8::internal::BreakLocation", align 8
  %16 = alloca %"class.v8::internal::BreakLocation", align 8
  %17 = alloca %"class.v8::internal::BreakLocation", align 8
  %18 = alloca %"class.v8::internal::BreakLocation", align 8
  %19 = alloca %"class.v8::internal::BreakLocation", align 8
  %20 = alloca %"class.v8::internal::BreakLocation", align 8
  %21 = alloca %"class.v8::internal::BreakLocation", align 8
  %22 = alloca %"class.v8::internal::BreakLocation", align 8
  %23 = alloca %"class.v8::internal::BreakLocation", align 8
  %24 = alloca %"class.v8::internal::BreakLocation", align 8
  %25 = alloca %"class.v8::internal::BreakLocation", align 8
  %26 = alloca %"class.v8::internal::BreakLocation", align 8
  %27 = alloca %"class.v8::internal::BreakLocation", align 8
  %28 = bitcast %"class.v8::internal::BreakLocation"* %13 to i8*
  %29 = bitcast %"class.v8::internal::BreakLocation"* %11 to i8*
  %30 = bitcast %"class.v8::internal::BreakLocation"* %10 to i8*
  %31 = bitcast %"class.v8::internal::BreakLocation"* %12 to i8*
  %32 = bitcast %"class.v8::internal::BreakLocation"* %9 to i8*
  %33 = bitcast %"class.v8::internal::BreakLocation"* %17 to i8*
  %34 = bitcast %"class.v8::internal::BreakLocation"* %15 to i8*
  %35 = bitcast %"class.v8::internal::BreakLocation"* %14 to i8*
  %36 = bitcast %"class.v8::internal::BreakLocation"* %16 to i8*
  %37 = bitcast %"class.v8::internal::BreakLocation"* %6 to i8*
  %38 = bitcast %"class.v8::internal::BreakLocation"* %8 to i8*
  %39 = bitcast %"class.v8::internal::BreakLocation"* %7 to i8*
  %40 = bitcast %"class.v8::internal::BreakLocation"* %5 to i8*
  %41 = bitcast %"class.v8::internal::BreakLocation"* %4 to i8*
  br label %42

42:                                               ; preds = %285, %3
  %43 = phi %"class.v8::internal::BreakLocation"* [ %1, %3 ], [ %268, %285 ]
  %44 = phi %"class.v8::internal::BreakLocation"* [ %0, %3 ], [ %56, %285 ]
  %45 = ptrtoint %"class.v8::internal::BreakLocation"* %43 to i64
  %46 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %43, i64 -1
  %47 = bitcast %"class.v8::internal::BreakLocation"* %46 to i8*
  %48 = bitcast %"class.v8::internal::BreakLocation"* %46 to i8*
  %49 = bitcast %"class.v8::internal::BreakLocation"* %46 to i8*
  %50 = bitcast %"class.v8::internal::BreakLocation"* %46 to i8*
  %51 = bitcast %"class.v8::internal::BreakLocation"* %46 to i8*
  %52 = ptrtoint %"class.v8::internal::BreakLocation"* %43 to i64
  br label %53

53:                                               ; preds = %296, %42
  %54 = phi %"class.v8::internal::BreakLocation"* [ %44, %42 ], [ %297, %296 ]
  br label %55

55:                                               ; preds = %224, %53
  %56 = phi %"class.v8::internal::BreakLocation"* [ %54, %53 ], [ %215, %224 ]
  %57 = ptrtoint %"class.v8::internal::BreakLocation"* %56 to i64
  %58 = sub i64 %45, %57
  %59 = sdiv exact i64 %58, 24
  switch i64 %59, label %131 [
    i64 0, label %300
    i64 1, label %300
    i64 2, label %60
    i64 3, label %68
    i64 4, label %99
    i64 5, label %104
  ]

60:                                               ; preds = %55
  %61 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %62 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %43, i64 -1
  %63 = tail call zeroext i1 %61(%"class.v8::internal::BreakLocation"* dereferenceable(24) %62, %"class.v8::internal::BreakLocation"* dereferenceable(24) %56) #12
  br i1 %63, label %64, label %300

64:                                               ; preds = %60
  %65 = bitcast %"class.v8::internal::BreakLocation"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65)
  %66 = bitcast %"class.v8::internal::BreakLocation"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* align 8 %66, i64 24, i1 false) #12
  %67 = bitcast %"class.v8::internal::BreakLocation"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %65, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65)
  br label %300

68:                                               ; preds = %55
  %69 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %56, i64 1
  %70 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %43, i64 -1
  %71 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %72 = tail call zeroext i1 %71(%"class.v8::internal::BreakLocation"* dereferenceable(24) %69, %"class.v8::internal::BreakLocation"* dereferenceable(24) %56) #12
  %73 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %74 = tail call zeroext i1 %73(%"class.v8::internal::BreakLocation"* dereferenceable(24) %70, %"class.v8::internal::BreakLocation"* dereferenceable(24) %69) #12
  br i1 %72, label %85, label %75

75:                                               ; preds = %68
  br i1 %74, label %76, label %300

76:                                               ; preds = %75
  %77 = bitcast %"class.v8::internal::BreakLocation"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77)
  %78 = bitcast %"class.v8::internal::BreakLocation"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %78, i64 24, i1 false) #12
  %79 = bitcast %"class.v8::internal::BreakLocation"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* nonnull align 8 %77, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77)
  %80 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %81 = tail call zeroext i1 %80(%"class.v8::internal::BreakLocation"* dereferenceable(24) %69, %"class.v8::internal::BreakLocation"* dereferenceable(24) %56) #12
  br i1 %81, label %82, label %300

82:                                               ; preds = %76
  %83 = bitcast %"class.v8::internal::BreakLocation"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83)
  %84 = bitcast %"class.v8::internal::BreakLocation"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* align 8 %84, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %78, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* nonnull align 8 %83, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83)
  br label %300

85:                                               ; preds = %68
  br i1 %74, label %86, label %90

86:                                               ; preds = %85
  %87 = bitcast %"class.v8::internal::BreakLocation"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87)
  %88 = bitcast %"class.v8::internal::BreakLocation"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %87, i8* align 8 %88, i64 24, i1 false) #12
  %89 = bitcast %"class.v8::internal::BreakLocation"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %87, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87)
  br label %300

90:                                               ; preds = %85
  %91 = bitcast %"class.v8::internal::BreakLocation"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91)
  %92 = bitcast %"class.v8::internal::BreakLocation"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* align 8 %92, i64 24, i1 false) #12
  %93 = bitcast %"class.v8::internal::BreakLocation"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* nonnull align 8 %91, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91)
  %94 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %95 = tail call zeroext i1 %94(%"class.v8::internal::BreakLocation"* dereferenceable(24) %70, %"class.v8::internal::BreakLocation"* dereferenceable(24) %69) #12
  br i1 %95, label %96, label %300

96:                                               ; preds = %90
  %97 = bitcast %"class.v8::internal::BreakLocation"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %97, i8* align 8 %93, i64 24, i1 false) #12
  %98 = bitcast %"class.v8::internal::BreakLocation"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %98, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* nonnull align 8 %97, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97)
  br label %300

99:                                               ; preds = %55
  %100 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %56, i64 1
  %101 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %56, i64 2
  %102 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %43, i64 -1
  %103 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN2v88internal13BreakLocationES5_EPS3_EEjT0_SA_SA_SA_T_(%"class.v8::internal::BreakLocation"* %56, %"class.v8::internal::BreakLocation"* %100, %"class.v8::internal::BreakLocation"* %101, %"class.v8::internal::BreakLocation"* %102, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** dereferenceable(8) %2)
  br label %300

104:                                              ; preds = %55
  %105 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %56, i64 1
  %106 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %56, i64 2
  %107 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %56, i64 3
  %108 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %43, i64 -1
  %109 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN2v88internal13BreakLocationES5_EPS3_EEjT0_SA_SA_SA_T_(%"class.v8::internal::BreakLocation"* %56, %"class.v8::internal::BreakLocation"* %105, %"class.v8::internal::BreakLocation"* %106, %"class.v8::internal::BreakLocation"* %107, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** dereferenceable(8) %2) #12
  %110 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %111 = tail call zeroext i1 %110(%"class.v8::internal::BreakLocation"* dereferenceable(24) %108, %"class.v8::internal::BreakLocation"* dereferenceable(24) %107) #12
  br i1 %111, label %112, label %300

112:                                              ; preds = %104
  %113 = bitcast %"class.v8::internal::BreakLocation"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113)
  %114 = bitcast %"class.v8::internal::BreakLocation"* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %113, i8* align 8 %114, i64 24, i1 false) #12
  %115 = bitcast %"class.v8::internal::BreakLocation"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* nonnull align 8 %113, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113)
  %116 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %117 = tail call zeroext i1 %116(%"class.v8::internal::BreakLocation"* dereferenceable(24) %107, %"class.v8::internal::BreakLocation"* dereferenceable(24) %106) #12
  br i1 %117, label %118, label %300

118:                                              ; preds = %112
  %119 = bitcast %"class.v8::internal::BreakLocation"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119)
  %120 = bitcast %"class.v8::internal::BreakLocation"* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %119, i8* align 8 %120, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %114, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* nonnull align 8 %119, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119)
  %121 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %122 = tail call zeroext i1 %121(%"class.v8::internal::BreakLocation"* dereferenceable(24) %106, %"class.v8::internal::BreakLocation"* dereferenceable(24) %105) #12
  br i1 %122, label %123, label %300

123:                                              ; preds = %118
  %124 = bitcast %"class.v8::internal::BreakLocation"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124)
  %125 = bitcast %"class.v8::internal::BreakLocation"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %124, i8* align 8 %125, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %120, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 8 %124, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124)
  %126 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %127 = tail call zeroext i1 %126(%"class.v8::internal::BreakLocation"* dereferenceable(24) %105, %"class.v8::internal::BreakLocation"* dereferenceable(24) %56) #12
  br i1 %127, label %128, label %300

128:                                              ; preds = %123
  %129 = bitcast %"class.v8::internal::BreakLocation"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129)
  %130 = bitcast %"class.v8::internal::BreakLocation"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %129, i8* align 8 %130, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %125, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* nonnull align 8 %129, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129)
  br label %300

131:                                              ; preds = %55
  %132 = icmp slt i64 %58, 744
  br i1 %132, label %133, label %134

133:                                              ; preds = %131
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbRKN2v88internal13BreakLocationES5_EPS3_EEvT0_SA_T_(%"class.v8::internal::BreakLocation"* %56, %"class.v8::internal::BreakLocation"* %43, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** dereferenceable(8) %2)
  br label %300

134:                                              ; preds = %131
  %135 = icmp sgt i64 %58, 23976
  %136 = udiv i64 %58, 48
  %137 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %56, i64 %136
  br i1 %135, label %138, label %163

138:                                              ; preds = %134
  %139 = udiv i64 %58, 96
  %140 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %56, i64 %139
  %141 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %137, i64 %139
  %142 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN2v88internal13BreakLocationES5_EPS3_EEjT0_SA_SA_SA_T_(%"class.v8::internal::BreakLocation"* %56, %"class.v8::internal::BreakLocation"* %140, %"class.v8::internal::BreakLocation"* %137, %"class.v8::internal::BreakLocation"* %141, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** dereferenceable(8) %2) #12
  %143 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %144 = tail call zeroext i1 %143(%"class.v8::internal::BreakLocation"* dereferenceable(24) %46, %"class.v8::internal::BreakLocation"* dereferenceable(24) %141) #12
  br i1 %144, label %145, label %184

145:                                              ; preds = %138
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33)
  %146 = bitcast %"class.v8::internal::BreakLocation"* %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 %146, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %50, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* nonnull align 8 %33, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33)
  %147 = add i32 %142, 1
  %148 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %149 = tail call zeroext i1 %148(%"class.v8::internal::BreakLocation"* dereferenceable(24) %141, %"class.v8::internal::BreakLocation"* dereferenceable(24) %137) #12
  br i1 %149, label %150, label %184

150:                                              ; preds = %145
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34)
  %151 = bitcast %"class.v8::internal::BreakLocation"* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 %151, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %146, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* nonnull align 8 %34, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34)
  %152 = add i32 %142, 2
  %153 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %154 = tail call zeroext i1 %153(%"class.v8::internal::BreakLocation"* dereferenceable(24) %137, %"class.v8::internal::BreakLocation"* dereferenceable(24) %140) #12
  br i1 %154, label %155, label %184

155:                                              ; preds = %150
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35)
  %156 = bitcast %"class.v8::internal::BreakLocation"* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 8 %156, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %151, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* nonnull align 8 %35, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35)
  %157 = add i32 %142, 3
  %158 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %159 = tail call zeroext i1 %158(%"class.v8::internal::BreakLocation"* dereferenceable(24) %140, %"class.v8::internal::BreakLocation"* dereferenceable(24) %56) #12
  br i1 %159, label %160, label %184

160:                                              ; preds = %155
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36)
  %161 = bitcast %"class.v8::internal::BreakLocation"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %161, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %156, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* nonnull align 8 %36, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36)
  %162 = add i32 %142, 4
  br label %184

163:                                              ; preds = %134
  %164 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %165 = tail call zeroext i1 %164(%"class.v8::internal::BreakLocation"* dereferenceable(24) %137, %"class.v8::internal::BreakLocation"* dereferenceable(24) %56) #12
  %166 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %167 = tail call zeroext i1 %166(%"class.v8::internal::BreakLocation"* dereferenceable(24) %46, %"class.v8::internal::BreakLocation"* dereferenceable(24) %137) #12
  br i1 %165, label %175, label %168

168:                                              ; preds = %163
  br i1 %167, label %169, label %184

169:                                              ; preds = %168
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28)
  %170 = bitcast %"class.v8::internal::BreakLocation"* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %170, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* align 8 %47, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %28, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28)
  %171 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %172 = tail call zeroext i1 %171(%"class.v8::internal::BreakLocation"* dereferenceable(24) %137, %"class.v8::internal::BreakLocation"* dereferenceable(24) %56) #12
  br i1 %172, label %173, label %184

173:                                              ; preds = %169
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %174 = bitcast %"class.v8::internal::BreakLocation"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %174, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* align 8 %170, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* nonnull align 8 %29, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29)
  br label %184

175:                                              ; preds = %163
  br i1 %167, label %176, label %178

176:                                              ; preds = %175
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  %177 = bitcast %"class.v8::internal::BreakLocation"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %177, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %49, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %32, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  br label %184

178:                                              ; preds = %175
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30)
  %179 = bitcast %"class.v8::internal::BreakLocation"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 %179, i64 24, i1 false) #12
  %180 = bitcast %"class.v8::internal::BreakLocation"* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* align 8 %180, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* nonnull align 8 %30, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30)
  %181 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %182 = tail call zeroext i1 %181(%"class.v8::internal::BreakLocation"* dereferenceable(24) %46, %"class.v8::internal::BreakLocation"* dereferenceable(24) %137) #12
  br i1 %182, label %183, label %184

183:                                              ; preds = %178
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 %180, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %48, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* nonnull align 8 %31, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31)
  br label %184

184:                                              ; preds = %183, %178, %176, %173, %169, %168, %160, %155, %150, %145, %138
  %185 = phi i32 [ %162, %160 ], [ %157, %155 ], [ %152, %150 ], [ %147, %145 ], [ %142, %138 ], [ 1, %176 ], [ 0, %168 ], [ 2, %173 ], [ 1, %169 ], [ 2, %183 ], [ 1, %178 ]
  %186 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %187 = tail call zeroext i1 %186(%"class.v8::internal::BreakLocation"* dereferenceable(24) %56, %"class.v8::internal::BreakLocation"* dereferenceable(24) %137) #12
  br i1 %187, label %236, label %188

188:                                              ; preds = %184, %229
  %189 = phi %"class.v8::internal::BreakLocation"* [ %190, %229 ], [ %46, %184 ]
  %190 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %189, i64 -1
  %191 = icmp eq %"class.v8::internal::BreakLocation"* %56, %190
  br i1 %191, label %192, label %229

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %56, i64 1
  %194 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %195 = tail call zeroext i1 %194(%"class.v8::internal::BreakLocation"* dereferenceable(24) %56, %"class.v8::internal::BreakLocation"* dereferenceable(24) %46) #12
  br i1 %195, label %208, label %196

196:                                              ; preds = %192
  %197 = icmp eq %"class.v8::internal::BreakLocation"* %193, %46
  br i1 %197, label %300, label %198

198:                                              ; preds = %196, %205
  %199 = phi %"class.v8::internal::BreakLocation"* [ %206, %205 ], [ %193, %196 ]
  %200 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %201 = tail call zeroext i1 %200(%"class.v8::internal::BreakLocation"* dereferenceable(24) %56, %"class.v8::internal::BreakLocation"* dereferenceable(24) %199) #12
  br i1 %201, label %202, label %205

202:                                              ; preds = %198
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38)
  %203 = bitcast %"class.v8::internal::BreakLocation"* %199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %203, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %51, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* nonnull align 8 %38, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38)
  %204 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %199, i64 1
  br label %208

205:                                              ; preds = %198
  %206 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %199, i64 1
  %207 = icmp eq %"class.v8::internal::BreakLocation"* %206, %46
  br i1 %207, label %300, label %198

208:                                              ; preds = %202, %192
  %209 = phi %"class.v8::internal::BreakLocation"* [ %193, %192 ], [ %204, %202 ]
  %210 = icmp eq %"class.v8::internal::BreakLocation"* %209, %46
  br i1 %210, label %300, label %211

211:                                              ; preds = %208, %226
  %212 = phi %"class.v8::internal::BreakLocation"* [ %218, %226 ], [ %209, %208 ]
  %213 = phi %"class.v8::internal::BreakLocation"* [ %222, %226 ], [ %46, %208 ]
  br label %214

214:                                              ; preds = %214, %211
  %215 = phi %"class.v8::internal::BreakLocation"* [ %212, %211 ], [ %218, %214 ]
  %216 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %217 = tail call zeroext i1 %216(%"class.v8::internal::BreakLocation"* dereferenceable(24) %56, %"class.v8::internal::BreakLocation"* dereferenceable(24) %215) #12
  %218 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %215, i64 1
  br i1 %217, label %219, label %214

219:                                              ; preds = %214, %219
  %220 = phi %"class.v8::internal::BreakLocation"* [ %222, %219 ], [ %213, %214 ]
  %221 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %222 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %220, i64 -1
  %223 = tail call zeroext i1 %221(%"class.v8::internal::BreakLocation"* dereferenceable(24) %56, %"class.v8::internal::BreakLocation"* dereferenceable(24) %222) #12
  br i1 %223, label %219, label %224

224:                                              ; preds = %219
  %225 = icmp ult %"class.v8::internal::BreakLocation"* %215, %222
  br i1 %225, label %226, label %55

226:                                              ; preds = %224
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39)
  %227 = bitcast %"class.v8::internal::BreakLocation"* %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 %227, i64 24, i1 false) #12
  %228 = bitcast %"class.v8::internal::BreakLocation"* %222 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %227, i8* align 8 %228, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %228, i8* nonnull align 8 %39, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39)
  br label %211

229:                                              ; preds = %188
  %230 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %231 = tail call zeroext i1 %230(%"class.v8::internal::BreakLocation"* dereferenceable(24) %190, %"class.v8::internal::BreakLocation"* dereferenceable(24) %137) #12
  br i1 %231, label %232, label %188

232:                                              ; preds = %229
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37)
  %233 = bitcast %"class.v8::internal::BreakLocation"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %233, i64 24, i1 false) #12
  %234 = bitcast %"class.v8::internal::BreakLocation"* %190 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %234, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* nonnull align 8 %37, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37)
  %235 = add i32 %185, 1
  br label %236

236:                                              ; preds = %184, %232
  %237 = phi i32 [ %235, %232 ], [ %185, %184 ]
  %238 = phi %"class.v8::internal::BreakLocation"* [ %190, %232 ], [ %46, %184 ]
  %239 = ptrtoint %"class.v8::internal::BreakLocation"* %56 to i64
  %240 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %56, i64 1
  %241 = icmp ult %"class.v8::internal::BreakLocation"* %240, %238
  br i1 %241, label %242, label %265

242:                                              ; preds = %236, %259
  %243 = phi %"class.v8::internal::BreakLocation"* [ %264, %259 ], [ %137, %236 ]
  %244 = phi i32 [ %262, %259 ], [ %237, %236 ]
  %245 = phi %"class.v8::internal::BreakLocation"* [ %251, %259 ], [ %240, %236 ]
  %246 = phi %"class.v8::internal::BreakLocation"* [ %255, %259 ], [ %238, %236 ]
  br label %247

247:                                              ; preds = %247, %242
  %248 = phi %"class.v8::internal::BreakLocation"* [ %245, %242 ], [ %251, %247 ]
  %249 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %250 = tail call zeroext i1 %249(%"class.v8::internal::BreakLocation"* dereferenceable(24) %248, %"class.v8::internal::BreakLocation"* dereferenceable(24) %243) #12
  %251 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %248, i64 1
  br i1 %250, label %247, label %252

252:                                              ; preds = %247, %252
  %253 = phi %"class.v8::internal::BreakLocation"* [ %255, %252 ], [ %246, %247 ]
  %254 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %255 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %253, i64 -1
  %256 = tail call zeroext i1 %254(%"class.v8::internal::BreakLocation"* dereferenceable(24) %255, %"class.v8::internal::BreakLocation"* dereferenceable(24) %243) #12
  br i1 %256, label %257, label %252

257:                                              ; preds = %252
  %258 = icmp ugt %"class.v8::internal::BreakLocation"* %248, %255
  br i1 %258, label %265, label %259

259:                                              ; preds = %257
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40)
  %260 = bitcast %"class.v8::internal::BreakLocation"* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 %260, i64 24, i1 false) #12
  %261 = bitcast %"class.v8::internal::BreakLocation"* %255 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %260, i8* align 8 %261, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %261, i8* nonnull align 8 %40, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40)
  %262 = add i32 %244, 1
  %263 = icmp eq %"class.v8::internal::BreakLocation"* %243, %248
  %264 = select i1 %263, %"class.v8::internal::BreakLocation"* %255, %"class.v8::internal::BreakLocation"* %243
  br label %242

265:                                              ; preds = %257, %236
  %266 = phi %"class.v8::internal::BreakLocation"* [ %137, %236 ], [ %243, %257 ]
  %267 = phi i32 [ %237, %236 ], [ %244, %257 ]
  %268 = phi %"class.v8::internal::BreakLocation"* [ %240, %236 ], [ %248, %257 ]
  %269 = icmp eq %"class.v8::internal::BreakLocation"* %268, %266
  br i1 %269, label %277, label %270

270:                                              ; preds = %265
  %271 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %272 = tail call zeroext i1 %271(%"class.v8::internal::BreakLocation"* dereferenceable(24) %266, %"class.v8::internal::BreakLocation"* dereferenceable(24) %268) #12
  br i1 %272, label %273, label %277

273:                                              ; preds = %270
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41)
  %274 = bitcast %"class.v8::internal::BreakLocation"* %268 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 %274, i64 24, i1 false) #12
  %275 = bitcast %"class.v8::internal::BreakLocation"* %266 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %274, i8* align 8 %275, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %275, i8* nonnull align 8 %41, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41)
  %276 = add i32 %267, 1
  br label %277

277:                                              ; preds = %265, %273, %270
  %278 = phi i32 [ %276, %273 ], [ %267, %270 ], [ %267, %265 ]
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %287

280:                                              ; preds = %277
  %281 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN2v88internal13BreakLocationES5_EPS3_EEbT0_SA_T_(%"class.v8::internal::BreakLocation"* %56, %"class.v8::internal::BreakLocation"* %268, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** dereferenceable(8) %2)
  %282 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %268, i64 1
  %283 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN2v88internal13BreakLocationES5_EPS3_EEbT0_SA_T_(%"class.v8::internal::BreakLocation"* %282, %"class.v8::internal::BreakLocation"* %43, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** dereferenceable(8) %2)
  br i1 %283, label %284, label %286

284:                                              ; preds = %280
  br i1 %281, label %300, label %285

285:                                              ; preds = %284, %298
  br label %42

286:                                              ; preds = %280
  br i1 %281, label %296, label %287

287:                                              ; preds = %286, %277
  %288 = ptrtoint %"class.v8::internal::BreakLocation"* %268 to i64
  %289 = sub i64 %288, %239
  %290 = sdiv exact i64 %289, 24
  %291 = sub i64 %52, %288
  %292 = sdiv exact i64 %291, 24
  %293 = icmp slt i64 %290, %292
  br i1 %293, label %294, label %298

294:                                              ; preds = %287
  tail call void @_ZNSt3__16__sortIRPFbRKN2v88internal13BreakLocationES5_EPS3_EEvT0_SA_T_(%"class.v8::internal::BreakLocation"* %56, %"class.v8::internal::BreakLocation"* %268, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** dereferenceable(8) %2)
  %295 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %268, i64 1
  br label %296

296:                                              ; preds = %294, %286
  %297 = phi %"class.v8::internal::BreakLocation"* [ %282, %286 ], [ %295, %294 ]
  br label %53

298:                                              ; preds = %287
  %299 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %268, i64 1
  tail call void @_ZNSt3__16__sortIRPFbRKN2v88internal13BreakLocationES5_EPS3_EEvT0_SA_T_(%"class.v8::internal::BreakLocation"* %299, %"class.v8::internal::BreakLocation"* %43, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** dereferenceable(8) %2)
  br label %285

300:                                              ; preds = %284, %208, %55, %55, %196, %205, %128, %123, %118, %112, %104, %96, %90, %86, %82, %76, %75, %60, %64, %99, %133
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbRKN2v88internal13BreakLocationES5_EPS3_EEjT0_SA_SA_SA_T_(%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.v8::internal::BreakLocation", align 8
  %7 = alloca %"class.v8::internal::BreakLocation", align 8
  %8 = alloca %"class.v8::internal::BreakLocation", align 8
  %9 = alloca %"class.v8::internal::BreakLocation", align 8
  %10 = alloca %"class.v8::internal::BreakLocation", align 8
  %11 = alloca %"class.v8::internal::BreakLocation", align 8
  %12 = alloca %"class.v8::internal::BreakLocation", align 8
  %13 = alloca %"class.v8::internal::BreakLocation", align 8
  %14 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %4, align 8
  %15 = tail call zeroext i1 %14(%"class.v8::internal::BreakLocation"* dereferenceable(24) %1, %"class.v8::internal::BreakLocation"* dereferenceable(24) %0) #12
  %16 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %4, align 8
  %17 = tail call zeroext i1 %16(%"class.v8::internal::BreakLocation"* dereferenceable(24) %2, %"class.v8::internal::BreakLocation"* dereferenceable(24) %1) #12
  br i1 %15, label %28, label %18

18:                                               ; preds = %5
  br i1 %17, label %19, label %42

19:                                               ; preds = %18
  %20 = bitcast %"class.v8::internal::BreakLocation"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20)
  %21 = bitcast %"class.v8::internal::BreakLocation"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %21, i64 24, i1 false) #12
  %22 = bitcast %"class.v8::internal::BreakLocation"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* nonnull align 8 %20, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20)
  %23 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %4, align 8
  %24 = tail call zeroext i1 %23(%"class.v8::internal::BreakLocation"* dereferenceable(24) %1, %"class.v8::internal::BreakLocation"* dereferenceable(24) %0) #12
  br i1 %24, label %25, label %42

25:                                               ; preds = %19
  %26 = bitcast %"class.v8::internal::BreakLocation"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26)
  %27 = bitcast %"class.v8::internal::BreakLocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 %27, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %21, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %26, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26)
  br label %42

28:                                               ; preds = %5
  br i1 %17, label %29, label %33

29:                                               ; preds = %28
  %30 = bitcast %"class.v8::internal::BreakLocation"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30)
  %31 = bitcast %"class.v8::internal::BreakLocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 %31, i64 24, i1 false) #12
  %32 = bitcast %"class.v8::internal::BreakLocation"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* nonnull align 8 %30, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30)
  br label %42

33:                                               ; preds = %28
  %34 = bitcast %"class.v8::internal::BreakLocation"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34)
  %35 = bitcast %"class.v8::internal::BreakLocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 %35, i64 24, i1 false) #12
  %36 = bitcast %"class.v8::internal::BreakLocation"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %34, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34)
  %37 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %4, align 8
  %38 = tail call zeroext i1 %37(%"class.v8::internal::BreakLocation"* dereferenceable(24) %2, %"class.v8::internal::BreakLocation"* dereferenceable(24) %1) #12
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = bitcast %"class.v8::internal::BreakLocation"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 %36, i64 24, i1 false) #12
  %41 = bitcast %"class.v8::internal::BreakLocation"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %41, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %40, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40)
  br label %42

42:                                               ; preds = %18, %19, %25, %29, %33, %39
  %43 = phi i32 [ 1, %29 ], [ 0, %18 ], [ 2, %25 ], [ 1, %19 ], [ 2, %39 ], [ 1, %33 ]
  %44 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %4, align 8
  %45 = tail call zeroext i1 %44(%"class.v8::internal::BreakLocation"* dereferenceable(24) %3, %"class.v8::internal::BreakLocation"* dereferenceable(24) %2) #12
  br i1 %45, label %46, label %63

46:                                               ; preds = %42
  %47 = bitcast %"class.v8::internal::BreakLocation"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47)
  %48 = bitcast %"class.v8::internal::BreakLocation"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 8 %48, i64 24, i1 false) #12
  %49 = bitcast %"class.v8::internal::BreakLocation"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %47, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47)
  %50 = add nuw nsw i32 %43, 1
  %51 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %4, align 8
  %52 = tail call zeroext i1 %51(%"class.v8::internal::BreakLocation"* dereferenceable(24) %2, %"class.v8::internal::BreakLocation"* dereferenceable(24) %1) #12
  br i1 %52, label %53, label %63

53:                                               ; preds = %46
  %54 = bitcast %"class.v8::internal::BreakLocation"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54)
  %55 = bitcast %"class.v8::internal::BreakLocation"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* align 8 %55, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %48, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* nonnull align 8 %54, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54)
  %56 = add nuw nsw i32 %43, 2
  %57 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %4, align 8
  %58 = tail call zeroext i1 %57(%"class.v8::internal::BreakLocation"* dereferenceable(24) %1, %"class.v8::internal::BreakLocation"* dereferenceable(24) %0) #12
  br i1 %58, label %59, label %63

59:                                               ; preds = %53
  %60 = bitcast %"class.v8::internal::BreakLocation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60)
  %61 = bitcast %"class.v8::internal::BreakLocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 8 %61, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %55, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 8 %60, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60)
  %62 = add nuw nsw i32 %43, 3
  br label %63

63:                                               ; preds = %46, %59, %53, %42
  %64 = phi i32 [ %62, %59 ], [ %56, %53 ], [ %50, %46 ], [ %43, %42 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbRKN2v88internal13BreakLocationES5_EPS3_EEvT0_SA_T_(%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.v8::internal::BreakLocation", align 8
  %5 = alloca %"class.v8::internal::BreakLocation", align 8
  %6 = alloca %"class.v8::internal::BreakLocation", align 8
  %7 = alloca %"class.v8::internal::BreakLocation", align 8
  %8 = alloca %"class.v8::internal::BreakLocation", align 8
  %9 = alloca %"class.v8::internal::BreakLocation", align 8
  %10 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 2
  %11 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 1
  %12 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %13 = tail call zeroext i1 %12(%"class.v8::internal::BreakLocation"* dereferenceable(24) %11, %"class.v8::internal::BreakLocation"* dereferenceable(24) %0) #12
  %14 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %15 = tail call zeroext i1 %14(%"class.v8::internal::BreakLocation"* dereferenceable(24) %10, %"class.v8::internal::BreakLocation"* dereferenceable(24) %11) #12
  br i1 %13, label %26, label %16

16:                                               ; preds = %3
  br i1 %15, label %17, label %40

17:                                               ; preds = %16
  %18 = bitcast %"class.v8::internal::BreakLocation"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18)
  %19 = bitcast %"class.v8::internal::BreakLocation"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %19, i64 24, i1 false) #12
  %20 = bitcast %"class.v8::internal::BreakLocation"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* nonnull align 8 %18, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18)
  %21 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %22 = tail call zeroext i1 %21(%"class.v8::internal::BreakLocation"* dereferenceable(24) %11, %"class.v8::internal::BreakLocation"* dereferenceable(24) %0) #12
  br i1 %22, label %23, label %40

23:                                               ; preds = %17
  %24 = bitcast %"class.v8::internal::BreakLocation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24)
  %25 = bitcast %"class.v8::internal::BreakLocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %25, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %19, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %24, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24)
  br label %40

26:                                               ; preds = %3
  br i1 %15, label %27, label %31

27:                                               ; preds = %26
  %28 = bitcast %"class.v8::internal::BreakLocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28)
  %29 = bitcast %"class.v8::internal::BreakLocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %29, i64 24, i1 false) #12
  %30 = bitcast %"class.v8::internal::BreakLocation"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %28, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28)
  br label %40

31:                                               ; preds = %26
  %32 = bitcast %"class.v8::internal::BreakLocation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  %33 = bitcast %"class.v8::internal::BreakLocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %33, i64 24, i1 false) #12
  %34 = bitcast %"class.v8::internal::BreakLocation"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* nonnull align 8 %32, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  %35 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %36 = tail call zeroext i1 %35(%"class.v8::internal::BreakLocation"* dereferenceable(24) %10, %"class.v8::internal::BreakLocation"* dereferenceable(24) %11) #12
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = bitcast %"class.v8::internal::BreakLocation"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %34, i64 24, i1 false) #12
  %39 = bitcast %"class.v8::internal::BreakLocation"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %39, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* nonnull align 8 %38, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38)
  br label %40

40:                                               ; preds = %16, %17, %23, %27, %31, %37
  %41 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 3
  %42 = icmp eq %"class.v8::internal::BreakLocation"* %41, %1
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.v8::internal::BreakLocation"* %9 to i8*
  br label %46

45:                                               ; preds = %66, %40
  ret void

46:                                               ; preds = %43, %66
  %47 = phi %"class.v8::internal::BreakLocation"* [ %41, %43 ], [ %67, %66 ]
  %48 = phi %"class.v8::internal::BreakLocation"* [ %10, %43 ], [ %47, %66 ]
  %49 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %50 = call zeroext i1 %49(%"class.v8::internal::BreakLocation"* dereferenceable(24) %47, %"class.v8::internal::BreakLocation"* dereferenceable(24) %48) #12
  br i1 %50, label %51, label %66

51:                                               ; preds = %46
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #12
  %52 = bitcast %"class.v8::internal::BreakLocation"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %52, i64 24, i1 false)
  br label %53

53:                                               ; preds = %59, %51
  %54 = phi %"class.v8::internal::BreakLocation"* [ %47, %51 ], [ %55, %59 ]
  %55 = phi %"class.v8::internal::BreakLocation"* [ %48, %51 ], [ %61, %59 ]
  %56 = bitcast %"class.v8::internal::BreakLocation"* %54 to i8*
  %57 = bitcast %"class.v8::internal::BreakLocation"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false)
  %58 = icmp eq %"class.v8::internal::BreakLocation"* %55, %0
  br i1 %58, label %63, label %59

59:                                               ; preds = %53
  %60 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %61 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %55, i64 -1
  %62 = call zeroext i1 %60(%"class.v8::internal::BreakLocation"* nonnull dereferenceable(24) %9, %"class.v8::internal::BreakLocation"* dereferenceable(24) %61) #12
  br i1 %62, label %53, label %63

63:                                               ; preds = %53, %59
  %64 = phi %"class.v8::internal::BreakLocation"* [ %55, %59 ], [ %0, %53 ]
  %65 = bitcast %"class.v8::internal::BreakLocation"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* nonnull align 8 %44, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #12
  br label %66

66:                                               ; preds = %63, %46
  %67 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %47, i64 1
  %68 = icmp eq %"class.v8::internal::BreakLocation"* %67, %1
  br i1 %68, label %45, label %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN2v88internal13BreakLocationES5_EPS3_EEbT0_SA_T_(%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.v8::internal::BreakLocation", align 8
  %5 = alloca %"class.v8::internal::BreakLocation", align 8
  %6 = alloca %"class.v8::internal::BreakLocation", align 8
  %7 = alloca %"class.v8::internal::BreakLocation", align 8
  %8 = alloca %"class.v8::internal::BreakLocation", align 8
  %9 = alloca %"class.v8::internal::BreakLocation", align 8
  %10 = alloca %"class.v8::internal::BreakLocation", align 8
  %11 = alloca %"class.v8::internal::BreakLocation", align 8
  %12 = alloca %"class.v8::internal::BreakLocation", align 8
  %13 = alloca %"class.v8::internal::BreakLocation", align 8
  %14 = alloca %"class.v8::internal::BreakLocation", align 8
  %15 = alloca %"class.v8::internal::BreakLocation", align 8
  %16 = alloca %"class.v8::internal::BreakLocation", align 8
  %17 = alloca %"class.v8::internal::BreakLocation", align 8
  %18 = alloca %"class.v8::internal::BreakLocation", align 8
  %19 = alloca %"class.v8::internal::BreakLocation", align 8
  %20 = ptrtoint %"class.v8::internal::BreakLocation"* %1 to i64
  %21 = ptrtoint %"class.v8::internal::BreakLocation"* %0 to i64
  %22 = sub i64 %20, %21
  %23 = sdiv exact i64 %22, 24
  switch i64 %23, label %95 [
    i64 0, label %161
    i64 1, label %161
    i64 2, label %24
    i64 3, label %32
    i64 4, label %63
    i64 5, label %68
  ]

24:                                               ; preds = %3
  %25 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %26 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %1, i64 -1
  %27 = tail call zeroext i1 %25(%"class.v8::internal::BreakLocation"* dereferenceable(24) %26, %"class.v8::internal::BreakLocation"* dereferenceable(24) %0) #12
  br i1 %27, label %28, label %161

28:                                               ; preds = %24
  %29 = bitcast %"class.v8::internal::BreakLocation"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.v8::internal::BreakLocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %30, i64 24, i1 false) #12
  %31 = bitcast %"class.v8::internal::BreakLocation"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* nonnull align 8 %29, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29)
  br label %161

32:                                               ; preds = %3
  %33 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 1
  %34 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %1, i64 -1
  %35 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %36 = tail call zeroext i1 %35(%"class.v8::internal::BreakLocation"* dereferenceable(24) %33, %"class.v8::internal::BreakLocation"* dereferenceable(24) %0) #12
  %37 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %38 = tail call zeroext i1 %37(%"class.v8::internal::BreakLocation"* dereferenceable(24) %34, %"class.v8::internal::BreakLocation"* dereferenceable(24) %33) #12
  br i1 %36, label %49, label %39

39:                                               ; preds = %32
  br i1 %38, label %40, label %161

40:                                               ; preds = %39
  %41 = bitcast %"class.v8::internal::BreakLocation"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41)
  %42 = bitcast %"class.v8::internal::BreakLocation"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 %42, i64 24, i1 false) #12
  %43 = bitcast %"class.v8::internal::BreakLocation"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* nonnull align 8 %41, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41)
  %44 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %45 = tail call zeroext i1 %44(%"class.v8::internal::BreakLocation"* dereferenceable(24) %33, %"class.v8::internal::BreakLocation"* dereferenceable(24) %0) #12
  br i1 %45, label %46, label %161

46:                                               ; preds = %40
  %47 = bitcast %"class.v8::internal::BreakLocation"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47)
  %48 = bitcast %"class.v8::internal::BreakLocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 8 %48, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %42, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %47, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47)
  br label %161

49:                                               ; preds = %32
  br i1 %38, label %50, label %54

50:                                               ; preds = %49
  %51 = bitcast %"class.v8::internal::BreakLocation"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51)
  %52 = bitcast %"class.v8::internal::BreakLocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* align 8 %52, i64 24, i1 false) #12
  %53 = bitcast %"class.v8::internal::BreakLocation"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %51, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51)
  br label %161

54:                                               ; preds = %49
  %55 = bitcast %"class.v8::internal::BreakLocation"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55)
  %56 = bitcast %"class.v8::internal::BreakLocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* align 8 %56, i64 24, i1 false) #12
  %57 = bitcast %"class.v8::internal::BreakLocation"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %55, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55)
  %58 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %59 = tail call zeroext i1 %58(%"class.v8::internal::BreakLocation"* dereferenceable(24) %34, %"class.v8::internal::BreakLocation"* dereferenceable(24) %33) #12
  br i1 %59, label %60, label %161

60:                                               ; preds = %54
  %61 = bitcast %"class.v8::internal::BreakLocation"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* align 8 %57, i64 24, i1 false) #12
  %62 = bitcast %"class.v8::internal::BreakLocation"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %62, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %61, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61)
  br label %161

63:                                               ; preds = %3
  %64 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 1
  %65 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 2
  %66 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %1, i64 -1
  %67 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN2v88internal13BreakLocationES5_EPS3_EEjT0_SA_SA_SA_T_(%"class.v8::internal::BreakLocation"* %0, %"class.v8::internal::BreakLocation"* %64, %"class.v8::internal::BreakLocation"* %65, %"class.v8::internal::BreakLocation"* %66, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** dereferenceable(8) %2)
  br label %161

68:                                               ; preds = %3
  %69 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 1
  %70 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 2
  %71 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 3
  %72 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %1, i64 -1
  %73 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN2v88internal13BreakLocationES5_EPS3_EEjT0_SA_SA_SA_T_(%"class.v8::internal::BreakLocation"* %0, %"class.v8::internal::BreakLocation"* %69, %"class.v8::internal::BreakLocation"* %70, %"class.v8::internal::BreakLocation"* %71, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** dereferenceable(8) %2) #12
  %74 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %75 = tail call zeroext i1 %74(%"class.v8::internal::BreakLocation"* dereferenceable(24) %72, %"class.v8::internal::BreakLocation"* dereferenceable(24) %71) #12
  br i1 %75, label %76, label %161

76:                                               ; preds = %68
  %77 = bitcast %"class.v8::internal::BreakLocation"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77)
  %78 = bitcast %"class.v8::internal::BreakLocation"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %78, i64 24, i1 false) #12
  %79 = bitcast %"class.v8::internal::BreakLocation"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* nonnull align 8 %77, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77)
  %80 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %81 = tail call zeroext i1 %80(%"class.v8::internal::BreakLocation"* dereferenceable(24) %71, %"class.v8::internal::BreakLocation"* dereferenceable(24) %70) #12
  br i1 %81, label %82, label %161

82:                                               ; preds = %76
  %83 = bitcast %"class.v8::internal::BreakLocation"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83)
  %84 = bitcast %"class.v8::internal::BreakLocation"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* align 8 %84, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %78, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* nonnull align 8 %83, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83)
  %85 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %86 = tail call zeroext i1 %85(%"class.v8::internal::BreakLocation"* dereferenceable(24) %70, %"class.v8::internal::BreakLocation"* dereferenceable(24) %69) #12
  br i1 %86, label %87, label %161

87:                                               ; preds = %82
  %88 = bitcast %"class.v8::internal::BreakLocation"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88)
  %89 = bitcast %"class.v8::internal::BreakLocation"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* align 8 %89, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %84, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* nonnull align 8 %88, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88)
  %90 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %91 = tail call zeroext i1 %90(%"class.v8::internal::BreakLocation"* dereferenceable(24) %69, %"class.v8::internal::BreakLocation"* dereferenceable(24) %0) #12
  br i1 %91, label %92, label %161

92:                                               ; preds = %87
  %93 = bitcast %"class.v8::internal::BreakLocation"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93)
  %94 = bitcast %"class.v8::internal::BreakLocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* align 8 %94, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %89, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %93, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93)
  br label %161

95:                                               ; preds = %3
  %96 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 2
  %97 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 1
  %98 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %99 = tail call zeroext i1 %98(%"class.v8::internal::BreakLocation"* dereferenceable(24) %97, %"class.v8::internal::BreakLocation"* dereferenceable(24) %0) #12
  %100 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %101 = tail call zeroext i1 %100(%"class.v8::internal::BreakLocation"* dereferenceable(24) %96, %"class.v8::internal::BreakLocation"* dereferenceable(24) %97) #12
  br i1 %99, label %112, label %102

102:                                              ; preds = %95
  br i1 %101, label %103, label %126

103:                                              ; preds = %102
  %104 = bitcast %"class.v8::internal::BreakLocation"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104)
  %105 = bitcast %"class.v8::internal::BreakLocation"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %104, i8* align 8 %105, i64 24, i1 false) #12
  %106 = bitcast %"class.v8::internal::BreakLocation"* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* nonnull align 8 %104, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104)
  %107 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %108 = tail call zeroext i1 %107(%"class.v8::internal::BreakLocation"* dereferenceable(24) %97, %"class.v8::internal::BreakLocation"* dereferenceable(24) %0) #12
  br i1 %108, label %109, label %126

109:                                              ; preds = %103
  %110 = bitcast %"class.v8::internal::BreakLocation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110)
  %111 = bitcast %"class.v8::internal::BreakLocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %110, i8* align 8 %111, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %105, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* nonnull align 8 %110, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110)
  br label %126

112:                                              ; preds = %95
  br i1 %101, label %113, label %117

113:                                              ; preds = %112
  %114 = bitcast %"class.v8::internal::BreakLocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114)
  %115 = bitcast %"class.v8::internal::BreakLocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %114, i8* align 8 %115, i64 24, i1 false) #12
  %116 = bitcast %"class.v8::internal::BreakLocation"* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* nonnull align 8 %114, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114)
  br label %126

117:                                              ; preds = %112
  %118 = bitcast %"class.v8::internal::BreakLocation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118)
  %119 = bitcast %"class.v8::internal::BreakLocation"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %118, i8* align 8 %119, i64 24, i1 false) #12
  %120 = bitcast %"class.v8::internal::BreakLocation"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 8 %118, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118)
  %121 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %122 = tail call zeroext i1 %121(%"class.v8::internal::BreakLocation"* dereferenceable(24) %96, %"class.v8::internal::BreakLocation"* dereferenceable(24) %97) #12
  br i1 %122, label %123, label %126

123:                                              ; preds = %117
  %124 = bitcast %"class.v8::internal::BreakLocation"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %124, i8* align 8 %120, i64 24, i1 false) #12
  %125 = bitcast %"class.v8::internal::BreakLocation"* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %125, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* nonnull align 8 %124, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124)
  br label %126

126:                                              ; preds = %102, %103, %109, %113, %117, %123
  %127 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %0, i64 3
  %128 = icmp eq %"class.v8::internal::BreakLocation"* %127, %1
  br i1 %128, label %161, label %129

129:                                              ; preds = %126
  %130 = bitcast %"class.v8::internal::BreakLocation"* %19 to i8*
  br label %131

131:                                              ; preds = %129, %154
  %132 = phi %"class.v8::internal::BreakLocation"* [ %127, %129 ], [ %156, %154 ]
  %133 = phi i32 [ 0, %129 ], [ %155, %154 ]
  %134 = phi %"class.v8::internal::BreakLocation"* [ %96, %129 ], [ %132, %154 ]
  %135 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %136 = call zeroext i1 %135(%"class.v8::internal::BreakLocation"* dereferenceable(24) %132, %"class.v8::internal::BreakLocation"* dereferenceable(24) %134) #12
  br i1 %136, label %137, label %154

137:                                              ; preds = %131
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #12
  %138 = bitcast %"class.v8::internal::BreakLocation"* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %130, i8* align 8 %138, i64 24, i1 false)
  br label %139

139:                                              ; preds = %145, %137
  %140 = phi %"class.v8::internal::BreakLocation"* [ %132, %137 ], [ %141, %145 ]
  %141 = phi %"class.v8::internal::BreakLocation"* [ %134, %137 ], [ %147, %145 ]
  %142 = bitcast %"class.v8::internal::BreakLocation"* %140 to i8*
  %143 = bitcast %"class.v8::internal::BreakLocation"* %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 24, i1 false)
  %144 = icmp eq %"class.v8::internal::BreakLocation"* %141, %0
  br i1 %144, label %149, label %145

145:                                              ; preds = %139
  %146 = load i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)*, i1 (%"class.v8::internal::BreakLocation"*, %"class.v8::internal::BreakLocation"*)** %2, align 8
  %147 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %141, i64 -1
  %148 = call zeroext i1 %146(%"class.v8::internal::BreakLocation"* nonnull dereferenceable(24) %19, %"class.v8::internal::BreakLocation"* dereferenceable(24) %147) #12
  br i1 %148, label %139, label %149

149:                                              ; preds = %139, %145
  %150 = phi %"class.v8::internal::BreakLocation"* [ %141, %145 ], [ %0, %139 ]
  %151 = bitcast %"class.v8::internal::BreakLocation"* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* nonnull align 8 %130, i64 24, i1 false)
  %152 = add i32 %133, 1
  %153 = icmp eq i32 %152, 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #12
  br i1 %153, label %158, label %154

154:                                              ; preds = %149, %131
  %155 = phi i32 [ %152, %149 ], [ %133, %131 ]
  %156 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %132, i64 1
  %157 = icmp eq %"class.v8::internal::BreakLocation"* %156, %1
  br i1 %157, label %161, label %131

158:                                              ; preds = %149
  %159 = getelementptr inbounds %"class.v8::internal::BreakLocation", %"class.v8::internal::BreakLocation"* %132, i64 1
  %160 = icmp eq %"class.v8::internal::BreakLocation"* %159, %1
  br label %161

161:                                              ; preds = %154, %158, %126, %92, %87, %82, %76, %68, %60, %54, %50, %46, %40, %39, %24, %28, %3, %3, %63
  %162 = phi i1 [ true, %63 ], [ true, %3 ], [ true, %3 ], [ true, %28 ], [ true, %24 ], [ true, %39 ], [ true, %40 ], [ true, %46 ], [ true, %50 ], [ true, %54 ], [ true, %60 ], [ true, %68 ], [ true, %76 ], [ true, %82 ], [ true, %87 ], [ true, %92 ], [ true, %126 ], [ %160, %158 ], [ true, %154 ]
  ret i1 %162
}

declare i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v834DefaultPersistentValueVectorTraits6AppendEPNSt3__16vectorImNS1_9allocatorImEEEEm(%"class.std::__1::vector.92"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %4, %6
  %8 = ptrtoint i64* %6 to i64
  br i1 %7, label %13, label %9

9:                                                ; preds = %2
  store i64 %1, i64* %4, align 8
  %10 = getelementptr inbounds i64, i64* %4, i64 1
  %11 = ptrtoint i64* %10 to i64
  %12 = bitcast i64** %3 to i64*
  store i64 %11, i64* %12, align 8
  br label %69

13:                                               ; preds = %2
  %14 = ptrtoint i64* %4 to i64
  %15 = bitcast i64** %3 to i64*
  %16 = bitcast %"class.std::__1::vector.92"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %14, %17
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = icmp ugt i64 %20, 2305843009213693951
  br i1 %21, label %22, label %24

22:                                               ; preds = %13
  %23 = bitcast %"class.std::__1::vector.92"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %23) #16
  unreachable

24:                                               ; preds = %13
  %25 = bitcast i64** %5 to i64*
  %26 = sub i64 %8, %17
  %27 = ashr exact i64 %26, 3
  %28 = icmp ult i64 %27, 1152921504606846975
  br i1 %28, label %29, label %37

29:                                               ; preds = %24
  %30 = ashr exact i64 %26, 2
  %31 = icmp ult i64 %30, %20
  %32 = select i1 %31, i64 %20, i64 %30
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %29
  %35 = icmp ugt i64 %32, 2305843009213693951
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  tail call void @abort() #16
  unreachable

37:                                               ; preds = %34, %24
  %38 = phi i64 [ %32, %34 ], [ 2305843009213693951, %24 ]
  %39 = shl i64 %38, 3
  %40 = tail call i8* @_Znwm(i64 %39) #17
  %41 = bitcast i8* %40 to i64*
  br label %42

42:                                               ; preds = %37, %29
  %43 = phi i64 [ %38, %37 ], [ 0, %29 ]
  %44 = phi i64* [ %41, %37 ], [ null, %29 ]
  %45 = getelementptr inbounds i64, i64* %44, i64 %19
  %46 = getelementptr inbounds i64, i64* %44, i64 %43
  %47 = ptrtoint i64* %46 to i64
  store i64 %1, i64* %45, align 8
  %48 = getelementptr inbounds i64, i64* %45, i64 1
  %49 = ptrtoint i64* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = load i64, i64* %15, align 8
  %53 = ptrtoint i64* %51 to i64
  %54 = sub i64 %52, %53
  %55 = ashr exact i64 %54, 3
  %56 = sub nsw i64 0, %55
  %57 = getelementptr inbounds i64, i64* %45, i64 %56
  %58 = ptrtoint i64* %57 to i64
  %59 = icmp sgt i64 %54, 0
  br i1 %59, label %60, label %64

60:                                               ; preds = %42
  %61 = bitcast i64* %57 to i8*
  %62 = bitcast i64* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 %54, i1 false) #12
  %63 = load i64*, i64** %50, align 8
  br label %64

64:                                               ; preds = %60, %42
  %65 = phi i64* [ %51, %42 ], [ %63, %60 ]
  store i64 %58, i64* %16, align 8
  store i64 %49, i64* %15, align 8
  store i64 %47, i64* %25, align 8
  %66 = icmp eq i64* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %64
  %68 = bitcast i64* %65 to i8*
  tail call void @_ZdlPv(i8* %68) #17
  br label %69

69:                                               ; preds = %9, %64, %67
  ret void
}

declare i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #4

declare void @_ZN2v88internal15InterruptsScopeC1EPNS0_7IsolateElNS1_4ModeE(%"class.v8::internal::InterruptsScope"*, %"class.v8::internal::Isolate"*, i64, i32) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #15

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #13

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #4

declare i64* @_ZN2v820EscapableHandleScope6EscapeEPm(%"class.v8::EscapableHandleScope"*, i64*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN2v88internal8CoverageENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %2) #12
  %3 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN2v88internal8CoverageENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::Coverage"*, %"class.v8::internal::Coverage"** %2, align 8
  %4 = icmp eq %"class.v8::internal::Coverage"* %3, null
  br i1 %4, label %53, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Coverage", %"class.v8::internal::Coverage"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.v8::internal::CoverageScript"*, %"struct.v8::internal::CoverageScript"** %6, align 8
  %8 = icmp eq %"struct.v8::internal::CoverageScript"* %7, null
  br i1 %8, label %51, label %9

9:                                                ; preds = %5
  %10 = bitcast %"struct.v8::internal::CoverageScript"* %7 to i8*
  %11 = getelementptr inbounds %"class.v8::internal::Coverage", %"class.v8::internal::Coverage"* %3, i64 0, i32 0, i32 0, i32 1
  %12 = load %"struct.v8::internal::CoverageScript"*, %"struct.v8::internal::CoverageScript"** %11, align 8
  %13 = icmp eq %"struct.v8::internal::CoverageScript"* %12, %7
  br i1 %13, label %49, label %14

14:                                               ; preds = %9, %44
  %15 = phi %"struct.v8::internal::CoverageScript"* [ %16, %44 ], [ %12, %9 ]
  %16 = getelementptr inbounds %"struct.v8::internal::CoverageScript", %"struct.v8::internal::CoverageScript"* %15, i64 -1
  %17 = getelementptr inbounds %"struct.v8::internal::CoverageScript", %"struct.v8::internal::CoverageScript"* %15, i64 -1, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.1615", %"class.std::__1::vector.1615"* %17, i64 0, i32 0, i32 0
  %19 = load %"struct.v8::internal::CoverageFunction"*, %"struct.v8::internal::CoverageFunction"** %18, align 8
  %20 = icmp eq %"struct.v8::internal::CoverageFunction"* %19, null
  br i1 %20, label %44, label %21

21:                                               ; preds = %14
  %22 = bitcast %"struct.v8::internal::CoverageFunction"* %19 to i8*
  %23 = getelementptr inbounds %"struct.v8::internal::CoverageScript", %"struct.v8::internal::CoverageScript"* %15, i64 -1, i32 1, i32 0, i32 1
  %24 = load %"struct.v8::internal::CoverageFunction"*, %"struct.v8::internal::CoverageFunction"** %23, align 8
  %25 = icmp eq %"struct.v8::internal::CoverageFunction"* %24, %19
  br i1 %25, label %42, label %26

26:                                               ; preds = %21, %37
  %27 = phi %"struct.v8::internal::CoverageFunction"* [ %28, %37 ], [ %24, %21 ]
  %28 = getelementptr inbounds %"struct.v8::internal::CoverageFunction", %"struct.v8::internal::CoverageFunction"* %27, i64 -1
  %29 = getelementptr inbounds %"struct.v8::internal::CoverageFunction", %"struct.v8::internal::CoverageFunction"* %27, i64 -1, i32 5, i32 0, i32 0
  %30 = load %"struct.v8::internal::CoverageBlock"*, %"struct.v8::internal::CoverageBlock"** %29, align 8
  %31 = icmp eq %"struct.v8::internal::CoverageBlock"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = ptrtoint %"struct.v8::internal::CoverageBlock"* %30 to i64
  %34 = getelementptr inbounds %"struct.v8::internal::CoverageFunction", %"struct.v8::internal::CoverageFunction"* %27, i64 -1, i32 5, i32 0, i32 1
  %35 = bitcast %"struct.v8::internal::CoverageBlock"** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast %"struct.v8::internal::CoverageBlock"* %30 to i8*
  tail call void @_ZdlPv(i8* %36) #17
  br label %37

37:                                               ; preds = %32, %26
  %38 = icmp eq %"struct.v8::internal::CoverageFunction"* %28, %19
  br i1 %38, label %39, label %26

39:                                               ; preds = %37
  %40 = bitcast %"class.std::__1::vector.1615"* %17 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %21
  %43 = phi i8* [ %41, %39 ], [ %22, %21 ]
  store %"struct.v8::internal::CoverageFunction"* %19, %"struct.v8::internal::CoverageFunction"** %23, align 8
  tail call void @_ZdlPv(i8* %43) #17
  br label %44

44:                                               ; preds = %42, %14
  %45 = icmp eq %"struct.v8::internal::CoverageScript"* %16, %7
  br i1 %45, label %46, label %14

46:                                               ; preds = %44
  %47 = bitcast %"class.v8::internal::Coverage"* %3 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %9
  %50 = phi i8* [ %48, %46 ], [ %10, %9 ]
  store %"struct.v8::internal::CoverageScript"* %7, %"struct.v8::internal::CoverageScript"** %11, align 8
  tail call void @_ZdlPv(i8* %50) #17
  br label %51

51:                                               ; preds = %49, %5
  %52 = bitcast %"class.v8::internal::Coverage"* %3 to i8*
  tail call void @_ZdlPv(i8* %52) #17
  br label %53

53:                                               ; preds = %1, %51
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN2v88internal8CoverageENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v85debug11TypeProfile5EntryENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.1670"*, %"class.v8::debug::TypeProfile::Entry"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1670", %"class.std::__1::vector.1670"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8::debug::TypeProfile::Entry"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1670"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1670"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1670", %"class.std::__1::vector.1670"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::debug::TypeProfile::Entry"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #17
  %30 = bitcast i8* %29 to %"class.v8::debug::TypeProfile::Entry"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.v8::debug::TypeProfile::Entry"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %33, i64 %9
  %35 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %33, i64 %32
  %36 = ptrtoint %"class.v8::debug::TypeProfile::Entry"* %35 to i64
  %37 = bitcast %"class.v8::debug::TypeProfile::Entry"* %1 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.v8::debug::TypeProfile::Entry"* %34 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %1, i64 0, i32 1
  %42 = bitcast %"class.std::__1::shared_ptr.1647"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::shared_ptr.1647"* %40 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %33, i64 %9, i32 1, i32 1
  %46 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %1, i64 0, i32 1, i32 1
  %47 = bitcast %"class.std::__1::__shared_weak_count"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::__shared_weak_count"** %45 to i64*
  store i64 %48, i64* %49, align 8
  %50 = bitcast %"class.std::__1::shared_ptr.1647"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #12
  %51 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %34, i64 1
  %52 = ptrtoint %"class.v8::debug::TypeProfile::Entry"* %51 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.1670", %"class.std::__1::vector.1670"* %0, i64 0, i32 0, i32 0
  %54 = load %"class.v8::debug::TypeProfile::Entry"*, %"class.v8::debug::TypeProfile::Entry"** %53, align 8
  %55 = load %"class.v8::debug::TypeProfile::Entry"*, %"class.v8::debug::TypeProfile::Entry"** %3, align 8
  %56 = icmp eq %"class.v8::debug::TypeProfile::Entry"* %55, %54
  br i1 %56, label %57, label %59

57:                                               ; preds = %31
  %58 = ptrtoint %"class.v8::debug::TypeProfile::Entry"* %54 to i64
  br label %82

59:                                               ; preds = %31, %59
  %60 = phi %"class.v8::debug::TypeProfile::Entry"* [ %62, %59 ], [ %34, %31 ]
  %61 = phi %"class.v8::debug::TypeProfile::Entry"* [ %63, %59 ], [ %55, %31 ]
  %62 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %60, i64 -1
  %63 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %61, i64 -1
  %64 = bitcast %"class.v8::debug::TypeProfile::Entry"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.v8::debug::TypeProfile::Entry"* %62 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %60, i64 -1, i32 1
  %68 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %61, i64 -1, i32 1
  %69 = bitcast %"class.std::__1::shared_ptr.1647"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.std::__1::shared_ptr.1647"* %67 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %60, i64 -1, i32 1, i32 1
  %73 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %61, i64 -1, i32 1, i32 1
  %74 = bitcast %"class.std::__1::__shared_weak_count"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.std::__1::__shared_weak_count"** %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = bitcast %"class.std::__1::shared_ptr.1647"* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #12
  %78 = icmp eq %"class.v8::debug::TypeProfile::Entry"* %63, %54
  br i1 %78, label %79, label %59

79:                                               ; preds = %59
  %80 = load i64, i64* %6, align 8
  %81 = load %"class.v8::debug::TypeProfile::Entry"*, %"class.v8::debug::TypeProfile::Entry"** %3, align 8
  br label %82

82:                                               ; preds = %57, %79
  %83 = phi %"class.v8::debug::TypeProfile::Entry"* [ %54, %57 ], [ %81, %79 ]
  %84 = phi %"class.v8::debug::TypeProfile::Entry"* [ %34, %57 ], [ %62, %79 ]
  %85 = phi i64 [ %58, %57 ], [ %80, %79 ]
  %86 = ptrtoint %"class.v8::debug::TypeProfile::Entry"* %84 to i64
  store i64 %86, i64* %6, align 8
  store i64 %52, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %87 = inttoptr i64 %85 to %"class.v8::debug::TypeProfile::Entry"*
  %88 = icmp eq %"class.v8::debug::TypeProfile::Entry"* %83, %87
  br i1 %88, label %107, label %89

89:                                               ; preds = %82, %105
  %90 = phi %"class.v8::debug::TypeProfile::Entry"* [ %91, %105 ], [ %83, %82 ]
  %91 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %90, i64 -1
  %92 = getelementptr inbounds %"class.v8::debug::TypeProfile::Entry", %"class.v8::debug::TypeProfile::Entry"* %90, i64 -1, i32 1, i32 1
  %93 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %92, align 8
  %94 = icmp eq %"class.std::__1::__shared_weak_count"* %93, null
  br i1 %94, label %105, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %93, i64 0, i32 0, i32 1
  %97 = atomicrmw add i64* %96, i64 -1 acq_rel
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %105

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %93, i64 0, i32 0
  %101 = bitcast %"class.std::__1::__shared_weak_count"* %93 to void (%"class.std::__1::__shared_count"*)***
  %102 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %102, i64 2
  %104 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %103, align 8
  tail call void %104(%"class.std::__1::__shared_count"* %100) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %93) #12
  br label %105

105:                                              ; preds = %99, %95, %89
  %106 = icmp eq %"class.v8::debug::TypeProfile::Entry"* %91, %87
  br i1 %106, label %107, label %89

107:                                              ; preds = %105, %82
  %108 = icmp eq i64 %85, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %85 to i8*
  tail call void @_ZdlPv(i8* %110) #17
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN2v88internal11TypeProfileENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev(%"class.std::__1::__shared_ptr_pointer.1756"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer.1756", %"class.std::__1::__shared_ptr_pointer.1756"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %2) #12
  %3 = bitcast %"class.std::__1::__shared_ptr_pointer.1756"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN2v88internal11TypeProfileENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv(%"class.std::__1::__shared_ptr_pointer.1756"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer.1756", %"class.std::__1::__shared_ptr_pointer.1756"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::TypeProfile"*, %"class.v8::internal::TypeProfile"** %2, align 8
  %4 = icmp eq %"class.v8::internal::TypeProfile"* %3, null
  br i1 %4, label %53, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::TypeProfile", %"class.v8::internal::TypeProfile"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.v8::internal::TypeProfileScript"*, %"struct.v8::internal::TypeProfileScript"** %6, align 8
  %8 = icmp eq %"struct.v8::internal::TypeProfileScript"* %7, null
  br i1 %8, label %51, label %9

9:                                                ; preds = %5
  %10 = bitcast %"struct.v8::internal::TypeProfileScript"* %7 to i8*
  %11 = getelementptr inbounds %"class.v8::internal::TypeProfile", %"class.v8::internal::TypeProfile"* %3, i64 0, i32 0, i32 0, i32 1
  %12 = load %"struct.v8::internal::TypeProfileScript"*, %"struct.v8::internal::TypeProfileScript"** %11, align 8
  %13 = icmp eq %"struct.v8::internal::TypeProfileScript"* %12, %7
  br i1 %13, label %49, label %14

14:                                               ; preds = %9, %44
  %15 = phi %"struct.v8::internal::TypeProfileScript"* [ %16, %44 ], [ %12, %9 ]
  %16 = getelementptr inbounds %"struct.v8::internal::TypeProfileScript", %"struct.v8::internal::TypeProfileScript"* %15, i64 -1
  %17 = getelementptr inbounds %"struct.v8::internal::TypeProfileScript", %"struct.v8::internal::TypeProfileScript"* %15, i64 -1, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.1650", %"class.std::__1::vector.1650"* %17, i64 0, i32 0, i32 0
  %19 = load %"struct.v8::internal::TypeProfileEntry"*, %"struct.v8::internal::TypeProfileEntry"** %18, align 8
  %20 = icmp eq %"struct.v8::internal::TypeProfileEntry"* %19, null
  br i1 %20, label %44, label %21

21:                                               ; preds = %14
  %22 = bitcast %"struct.v8::internal::TypeProfileEntry"* %19 to i8*
  %23 = getelementptr inbounds %"struct.v8::internal::TypeProfileScript", %"struct.v8::internal::TypeProfileScript"* %15, i64 -1, i32 1, i32 0, i32 1
  %24 = load %"struct.v8::internal::TypeProfileEntry"*, %"struct.v8::internal::TypeProfileEntry"** %23, align 8
  %25 = icmp eq %"struct.v8::internal::TypeProfileEntry"* %24, %19
  br i1 %25, label %42, label %26

26:                                               ; preds = %21, %37
  %27 = phi %"struct.v8::internal::TypeProfileEntry"* [ %28, %37 ], [ %24, %21 ]
  %28 = getelementptr inbounds %"struct.v8::internal::TypeProfileEntry", %"struct.v8::internal::TypeProfileEntry"* %27, i64 -1
  %29 = getelementptr inbounds %"struct.v8::internal::TypeProfileEntry", %"struct.v8::internal::TypeProfileEntry"* %27, i64 -1, i32 1, i32 0, i32 0
  %30 = load %"class.v8::internal::Handle.1263"*, %"class.v8::internal::Handle.1263"** %29, align 8
  %31 = icmp eq %"class.v8::internal::Handle.1263"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = ptrtoint %"class.v8::internal::Handle.1263"* %30 to i64
  %34 = getelementptr inbounds %"struct.v8::internal::TypeProfileEntry", %"struct.v8::internal::TypeProfileEntry"* %27, i64 -1, i32 1, i32 0, i32 1
  %35 = bitcast %"class.v8::internal::Handle.1263"** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast %"class.v8::internal::Handle.1263"* %30 to i8*
  tail call void @_ZdlPv(i8* %36) #17
  br label %37

37:                                               ; preds = %32, %26
  %38 = icmp eq %"struct.v8::internal::TypeProfileEntry"* %28, %19
  br i1 %38, label %39, label %26

39:                                               ; preds = %37
  %40 = bitcast %"class.std::__1::vector.1650"* %17 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %21
  %43 = phi i8* [ %41, %39 ], [ %22, %21 ]
  store %"struct.v8::internal::TypeProfileEntry"* %19, %"struct.v8::internal::TypeProfileEntry"** %23, align 8
  tail call void @_ZdlPv(i8* %43) #17
  br label %44

44:                                               ; preds = %42, %14
  %45 = icmp eq %"struct.v8::internal::TypeProfileScript"* %16, %7
  br i1 %45, label %46, label %14

46:                                               ; preds = %44
  %47 = bitcast %"class.v8::internal::TypeProfile"* %3 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %9
  %50 = phi i8* [ %48, %46 ], [ %10, %9 ]
  store %"struct.v8::internal::TypeProfileScript"* %7, %"struct.v8::internal::TypeProfileScript"** %11, align 8
  tail call void @_ZdlPv(i8* %50) #17
  br label %51

51:                                               ; preds = %49, %5
  %52 = bitcast %"class.v8::internal::TypeProfile"* %3 to i8*
  tail call void @_ZdlPv(i8* %52) #17
  br label %53

53:                                               ; preds = %1, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN2v88internal11TypeProfileENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(%"class.std::__1::__shared_ptr_pointer.1756"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.std::__1::__shared_ptr_pointer.1756"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
