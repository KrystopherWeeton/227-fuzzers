; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_dom_agent.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_dom_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1738", i64 }
%"class.std::__1::vector.1738" = type { %"class.std::__1::__vector_base.1739" }
%"class.std::__1::__vector_base.1739" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1740" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1740" = type { %"struct.std::__1::__compressed_pair_elem.1741" }
%"struct.std::__1::__compressed_pair_elem.1741" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::InspectorRevalidateDOMTask" = type { %"class.blink::Member.2702", %"class.blink::HeapTaskRunnerTimer.3311", %"class.blink::HeapHashSet.1251" }
%"class.blink::Member.2702" = type { %"class.blink::MemberBase.2703" }
%"class.blink::MemberBase.2703" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::HeapTaskRunnerTimer.3311" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.3312", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.blink::WeakMember.3312" = type { %"class.blink::MemberBase.2798" }
%"class.blink::MemberBase.2798" = type { %"class.blink::InspectorRevalidateDOMTask"* }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1589", i32, i8, [3 x i8], %"class.blink::HeapVector.1591", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1599", %"class.blink::Member.1601", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1610", %"class.blink::Member.1733", %"class.blink::Member.1735", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.3860" }
%"class.blink::Member.3860" = type { %"class.blink::MemberBase.3861" }
%"class.blink::MemberBase.3861" = type { %"class.blink::Supplement.3862"* }
%"class.blink::Supplement.3862" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3863" }
%"class.blink::Member.3863" = type { %"class.blink::MemberBase.3864" }
%"class.blink::MemberBase.3864" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1579", %"class.std::__1::unique_ptr.1579", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1585", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1547", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1549", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1554 }
%"class.WTF::RefCounted.1547" = type { %"class.base::RefCounted.1548" }
%"class.base::RefCounted.1548" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1549" = type { %"class.absl::optional_internal::optional_data.1550" }
%"class.absl::optional_internal::optional_data.1550" = type { %"class.absl::optional_internal::optional_data_base.1551" }
%"class.absl::optional_internal::optional_data_base.1551" = type { %"class.absl::optional_internal::optional_data_dtor_base.1552" }
%"class.absl::optional_internal::optional_data_dtor_base.1552" = type { i8, %union.anon.1553 }
%union.anon.1553 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1554 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1555" = type { %"class.std::__1::__compressed_pair.1556" }
%"class.std::__1::__compressed_pair.1556" = type { %"struct.std::__1::__compressed_pair_elem.1557" }
%"struct.std::__1::__compressed_pair_elem.1557" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1566", %"class.std::__1::map.1575"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1549" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1558", %"class.std::__1::__compressed_pair.1563" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1558" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"struct.std::__1::__compressed_pair_elem.1559" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1566" = type { %"class.std::__1::__tree.1567" }
%"class.std::__1::__tree.1567" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1568", %"class.std::__1::__compressed_pair.1572" }
%"class.std::__1::__compressed_pair.1568" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.1572" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1575" = type opaque
%"class.std::__1::unique_ptr.1579" = type { %"class.std::__1::__compressed_pair.1580" }
%"class.std::__1::__compressed_pair.1580" = type { %"struct.std::__1::__compressed_pair_elem.1581" }
%"struct.std::__1::__compressed_pair_elem.1581" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map.2839" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map.2839" = type { %"class.base::internal::flat_tree.2840" }
%"class.base::internal::flat_tree.2840" = type { %"class.std::__1::vector.2841" }
%"class.std::__1::vector.2841" = type { %"class.std::__1::__vector_base.2842" }
%"class.std::__1::__vector_base.2842" = type { %"struct.std::__1::pair.2843"*, %"struct.std::__1::pair.2843"*, %"class.std::__1::__compressed_pair.2844" }
%"struct.std::__1::pair.2843" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2844" = type { %"struct.std::__1::__compressed_pair_elem.2845" }
%"struct.std::__1::__compressed_pair_elem.2845" = type { %"struct.std::__1::pair.2843"* }
%"class.WTF::HashSet.1585" = type { %"class.WTF::HashTable.1586" }
%"class.WTF::HashTable.1586" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1591" = type { %"class.WTF::Vector.1594" }
%"class.WTF::Vector.1594" = type { %"class.WTF::VectorBuffer.1595" }
%"class.WTF::VectorBuffer.1595" = type { %"class.WTF::VectorBufferBase.1596" }
%"class.WTF::VectorBufferBase.1596" = type { %"class.blink::Member.1597"*, i32, i32 }
%"class.blink::Member.1597" = type opaque
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1603", i32, i32 }
%"class.blink::HeapHashMap.1603" = type { %"class.WTF::HashMap.1606" }
%"class.WTF::HashMap.1606" = type { %"class.WTF::HashTable.1607" }
%"class.WTF::HashTable.1607" = type <{ %"struct.WTF::KeyValuePair.1609"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1609" = type opaque
%"class.std::__1::unique_ptr.1610" = type { %"class.std::__1::__compressed_pair.1611" }
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.1612" }
%"struct.std::__1::__compressed_pair_elem.1612" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1613" }
%"class.std::__1::unique_ptr.1613" = type { %"class.std::__1::__compressed_pair.1614" }
%"class.std::__1::__compressed_pair.1614" = type { %"struct.std::__1::__compressed_pair_elem.1615" }
%"struct.std::__1::__compressed_pair_elem.1615" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1616" }
%"class.WTF::Vector.1616" = type { %"class.WTF::VectorBuffer.1617" }
%"class.WTF::VectorBuffer.1617" = type { %"class.WTF::VectorBufferBase.1618" }
%"class.WTF::VectorBufferBase.1618" = type { %"class.mojo::StructPtr.1619"*, i32, i32 }
%"class.mojo::StructPtr.1619" = type { %"class.std::__1::unique_ptr.1620" }
%"class.std::__1::unique_ptr.1620" = type { %"class.std::__1::__compressed_pair.1621" }
%"class.std::__1::__compressed_pair.1621" = type { %"struct.std::__1::__compressed_pair_elem.1622" }
%"struct.std::__1::__compressed_pair_elem.1622" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1623", %"class.WTF::HashMap.1630", %"class.WTF::HashMap.1635", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1640", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1623" = type { %"class.std::__1::unique_ptr.1624" }
%"class.std::__1::unique_ptr.1624" = type { %"class.std::__1::__compressed_pair.1625" }
%"class.std::__1::__compressed_pair.1625" = type { %"struct.std::__1::__compressed_pair_elem.1626" }
%"struct.std::__1::__compressed_pair_elem.1626" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1630" = type { %"class.WTF::HashTable.1631" }
%"class.WTF::HashTable.1631" = type <{ %"struct.WTF::KeyValuePair.1634"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1634" = type opaque
%"class.WTF::HashMap.1635" = type { %"class.WTF::HashTable.1636" }
%"class.WTF::HashTable.1636" = type <{ %"struct.WTF::KeyValuePair.1639"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1639" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1640" = type { %"class.std::__1::unique_ptr.1641" }
%"class.std::__1::unique_ptr.1641" = type { %"class.std::__1::__compressed_pair.1642" }
%"class.std::__1::__compressed_pair.1642" = type { %"struct.std::__1::__compressed_pair_elem.1643" }
%"struct.std::__1::__compressed_pair_elem.1643" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1724" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1655", i32 }>
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1658", %"class.absl::optional.1659", %"class.absl::optional.1664", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1677", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1699", %"class.std::__1::map.1710", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1719", i8, %class.scoped_refptr.1669, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1720" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1658" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1659" = type { %"class.absl::optional_internal::optional_data.1660" }
%"class.absl::optional_internal::optional_data.1660" = type { %"class.absl::optional_internal::optional_data_base.1661" }
%"class.absl::optional_internal::optional_data_base.1661" = type { %"class.absl::optional_internal::optional_data_dtor_base.1662" }
%"class.absl::optional_internal::optional_data_dtor_base.1662" = type { i8, %union.anon.1663 }
%union.anon.1663 = type { %"class.base::TimeDelta" }
%"class.absl::optional.1664" = type { %"class.absl::optional_internal::optional_data.1665" }
%"class.absl::optional_internal::optional_data.1665" = type { %"class.absl::optional_internal::optional_data_base.1666" }
%"class.absl::optional_internal::optional_data_base.1666" = type { %"class.absl::optional_internal::optional_data_dtor_base.1667" }
%"class.absl::optional_internal::optional_data_dtor_base.1667" = type { i8, %union.anon.1668 }
%union.anon.1668 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1669, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1670" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1670" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1675 }
%class.scoped_refptr.1675 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1737", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1669, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1737" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1676 }
%class.scoped_refptr.1676 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1680", %class.scoped_refptr.1681 }
%"class.base::RepeatingCallback.1680" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1681 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1682", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1682" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1686", %"class.std::__1::unique_ptr.1692", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1698" }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1692" = type { %"class.std::__1::__compressed_pair.1693" }
%"class.std::__1::__compressed_pair.1693" = type { %"struct.std::__1::__compressed_pair_elem.1694" }
%"struct.std::__1::__compressed_pair_elem.1694" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1698" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1699" = type { %"class.std::__1::__tree.1700" }
%"class.std::__1::__tree.1700" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1701", %"class.std::__1::__compressed_pair.1705" }
%"class.std::__1::__compressed_pair.1701" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.1705" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1710" = type { %"class.std::__1::__tree.1711" }
%"class.std::__1::__tree.1711" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1712", %"class.std::__1::__compressed_pair.1716" }
%"class.std::__1::__compressed_pair.1712" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.1716" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1719" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1669 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1720" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1724" = type { %"class.std::__1::__compressed_pair.1725" }
%"class.std::__1::__compressed_pair.1725" = type { %"struct.std::__1::__compressed_pair_elem.1726" }
%"struct.std::__1::__compressed_pair_elem.1726" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1733" = type { %"class.blink::MemberBase.1734" }
%"class.blink::MemberBase.1734" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type { %"class.blink::Node", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1745", [4 x i8] }>
%"class.WTF::RefCounted.1745" = type { %"class.base::RefCounted.1746" }
%"class.base::RefCounted.1746" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3947" }
%"class.WTF::Vector.3947" = type { %"class.WTF::VectorBuffer.3948" }
%"class.WTF::VectorBuffer.3948" = type { %"class.WTF::VectorBufferBase.3949" }
%"class.WTF::VectorBufferBase.3949" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3952", %"class.absl::optional.3952", %"class.absl::optional.3952" }
%"class.absl::optional.3952" = type { %"class.absl::optional_internal::optional_data.3953" }
%"class.absl::optional_internal::optional_data.3953" = type { %"class.absl::optional_internal::optional_data_base.3954" }
%"class.absl::optional_internal::optional_data_base.3954" = type { %"class.absl::optional_internal::optional_data_dtor_base.3955" }
%"class.absl::optional_internal::optional_data_dtor_base.3955" = type { i8, %union.anon.3956 }
%union.anon.3956 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3957 }
%class.scoped_refptr.3957 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3958", %"class.WTF::Vector.630", %"class.WTF::Vector.3960", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3958" = type { %"class.base::RefCounted.3959" }
%"class.base::RefCounted.3959" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3960" = type { %"class.WTF::VectorBuffer.3961" }
%"class.WTF::VectorBuffer.3961" = type { %"class.WTF::VectorBufferBase.3962" }
%"class.WTF::VectorBufferBase.3962" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3963 }
%union.anon.3963 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3967" }
%"class.WTF::VectorBuffer.3967" = type { %"class.WTF::VectorBufferBase.3968", [32 x i8] }
%"class.WTF::VectorBufferBase.3968" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3935 }
%class.scoped_refptr.3935 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.3945" }
%"class.blink::Member.3945" = type { %"class.blink::MemberBase.3946" }
%"class.blink::MemberBase.3946" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.3941" }
%"class.blink::MemberBase.3941" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.3942" }
%"class.blink::MemberBase.3942" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.3943" }
%"class.blink::MemberBase.3943" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.3944" }
%"class.blink::MemberBase.3944" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3936", %"class.WTF::Vector.3936" }
%"class.WTF::Vector.3936" = type { %"class.WTF::VectorBuffer.3937" }
%"class.WTF::VectorBuffer.3937" = type { %"class.WTF::VectorBufferBase.3938" }
%"class.WTF::VectorBufferBase.3938" = type { %class.scoped_refptr.3935*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1848", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2068", %"class.std::__1::unique_ptr.2074", %"class.std::__1::unique_ptr.2080", %class.scoped_refptr.1844, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2086", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1807", %"class.std::__1::unique_ptr.1817" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1763, %"class.WTF::Vector.1764", %"class.std::__1::unique_ptr.1769", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1790, %"class.blink::Persistent.1791" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1763 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1764" = type { %"class.WTF::VectorBuffer.1765" }
%"class.WTF::VectorBuffer.1765" = type { %"class.WTF::VectorBufferBase.1766", [8 x i8] }
%"class.WTF::VectorBufferBase.1766" = type { %class.scoped_refptr.1763*, i32, i32 }
%"class.std::__1::unique_ptr.1769" = type { %"class.std::__1::__compressed_pair.1770" }
%"class.std::__1::__compressed_pair.1770" = type { %"struct.std::__1::__compressed_pair_elem.1771" }
%"struct.std::__1::__compressed_pair_elem.1771" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1772", %"class.absl::optional.1777", %"class.absl::optional.1782" }
%"class.absl::optional.1772" = type { %"class.absl::optional_internal::optional_data.1773" }
%"class.absl::optional_internal::optional_data.1773" = type { %"class.absl::optional_internal::optional_data_base.1774" }
%"class.absl::optional_internal::optional_data_base.1774" = type { %"class.absl::optional_internal::optional_data_dtor_base.1775" }
%"class.absl::optional_internal::optional_data_dtor_base.1775" = type { i8, %union.anon.1776 }
%union.anon.1776 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1777" = type { %"class.absl::optional_internal::optional_data.1778" }
%"class.absl::optional_internal::optional_data.1778" = type { %"class.absl::optional_internal::optional_data_base.1779" }
%"class.absl::optional_internal::optional_data_base.1779" = type { %"class.absl::optional_internal::optional_data_dtor_base.1780" }
%"class.absl::optional_internal::optional_data_dtor_base.1780" = type { i8, [3 x i8], %union.anon.1781 }
%union.anon.1781 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1782" = type { %"class.absl::optional_internal::optional_data.1783" }
%"class.absl::optional_internal::optional_data.1783" = type { %"class.absl::optional_internal::optional_data_base.1784" }
%"class.absl::optional_internal::optional_data_base.1784" = type { %"class.absl::optional_internal::optional_data_dtor_base.1785" }
%"class.absl::optional_internal::optional_data_dtor_base.1785" = type { i8, %union.anon.1786 }
%union.anon.1786 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1790 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1747", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1747" = type { %"class.std::__1::__compressed_pair.1748" }
%"class.std::__1::__compressed_pair.1748" = type { %"struct.std::__1::__compressed_pair_elem.1749" }
%"struct.std::__1::__compressed_pair_elem.1749" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1750", %"class.absl::optional.1755" }
%"class.absl::optional.1750" = type { %"class.absl::optional_internal::optional_data.1751" }
%"class.absl::optional_internal::optional_data.1751" = type { %"class.absl::optional_internal::optional_data_base.1752" }
%"class.absl::optional_internal::optional_data_base.1752" = type { %"class.absl::optional_internal::optional_data_dtor_base.1753" }
%"class.absl::optional_internal::optional_data_dtor_base.1753" = type { i8, %union.anon.1754 }
%union.anon.1754 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1755" = type { %"class.absl::optional_internal::optional_data.1756" }
%"class.absl::optional_internal::optional_data.1756" = type { %"class.absl::optional_internal::optional_data_base.1757" }
%"class.absl::optional_internal::optional_data_base.1757" = type { %"class.absl::optional_internal::optional_data_dtor_base.1758" }
%"class.absl::optional_internal::optional_data_dtor_base.1758" = type { i8, %union.anon.1759 }
%union.anon.1759 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1791" = type { %"class.blink::PersistentBase.1792" }
%"class.blink::PersistentBase.1792" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1795", %"struct.blink::PhysicalRect", %"class.blink::Member.1805" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1795" = type { %"class.std::__1::__compressed_pair.1796" }
%"class.std::__1::__compressed_pair.1796" = type { %"struct.std::__1::__compressed_pair_elem.1797" }
%"struct.std::__1::__compressed_pair_elem.1797" = type { %"class.WTF::HashSet.1798"* }
%"class.WTF::HashSet.1798" = type { %"class.WTF::HashTable.1799" }
%"class.WTF::HashTable.1799" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1805" = type { %"class.blink::MemberBase.1806" }
%"class.blink::MemberBase.1806" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1807" = type { %"class.blink::PersistentBase.1808" }
%"class.blink::PersistentBase.1808" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1811", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1811" = type { %"class.std::__1::__compressed_pair.1812" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1813" }
%"struct.std::__1::__compressed_pair_elem.1813" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1817" = type { %"class.std::__1::__compressed_pair.1818" }
%"class.std::__1::__compressed_pair.1818" = type { %"struct.std::__1::__compressed_pair_elem.1819" }
%"struct.std::__1::__compressed_pair_elem.1819" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1820", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1820" = type { %"class.WTF::HashTable.1823", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1823" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1826", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1826" = type { %"class.std::__1::__compressed_pair.1827" }
%"class.std::__1::__compressed_pair.1827" = type { %"struct.std::__1::__compressed_pair_elem.1828" }
%"struct.std::__1::__compressed_pair_elem.1828" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1829, %"class.std::__1::unique_ptr.1830", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1747", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1829 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2837", i16, %class.scoped_refptr.1829 }
%"class.WTF::ThreadSafeRefCounted.2837" = type { %"class.base::RefCountedThreadSafe.2838" }
%"class.base::RefCountedThreadSafe.2838" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1830" = type { %"class.std::__1::__compressed_pair.1831" }
%"class.std::__1::__compressed_pair.1831" = type { %"struct.std::__1::__compressed_pair_elem.1832" }
%"struct.std::__1::__compressed_pair_elem.1832" = type { %"class.WTF::Vector.1833"* }
%"class.WTF::Vector.1833" = type { %"class.WTF::VectorBuffer.1834" }
%"class.WTF::VectorBuffer.1834" = type { %"class.WTF::VectorBufferBase.1835" }
%"class.WTF::VectorBufferBase.1835" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1844, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1848" = type { %"class.blink::MemberBase.1849" }
%"class.blink::MemberBase.1849" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1852", %"class.blink::Member.1857", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1859", i8, i32, %"class.blink::Color", %"class.absl::optional.1862", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1867", %"class.blink::Member.1869", %"class.blink::Member.1869", %"class.std::__1::unique_ptr.1872", i32, [4 x i8], %"class.WTF::HashSet.1875", %"class.blink::Member.1882", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1884", %"class.blink::HeapHashSet.1891", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1899", i8, %"class.blink::Member.1905", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1917", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1931", i8, %"class.std::__1::unique_ptr.1937", %"class.std::__1::unique_ptr.2018", %"class.WTF::Vector.2024", i32, %class.scoped_refptr.2029, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2030", %"class.blink::Member.2032", %"class.blink::Member.2034", %"class.blink::HeapHashSet.2036", %"class.blink::HeapHashSet.2043", %"class.std::__1::unique_ptr.2050", %"class.std::__1::unique_ptr.2057", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1852" = type { %"class.WTF::HashTable.1853" }
%"class.WTF::HashTable.1853" = type <{ %class.scoped_refptr.1856*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1856 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1857" = type { %"class.blink::MemberBase.1858" }
%"class.blink::MemberBase.1858" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2286", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2294", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2308", %"class.blink::FrameLoader", %"class.blink::Member.2329", %"class.blink::Member.343", %"class.blink::Member.2330", %"class.blink::Member.2332", %"class.blink::Member.2348", %"class.blink::Member.2350", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2352", %class.scoped_refptr.2576, %"class.blink::Member.2577", %"class.blink::Member.2579", %"class.blink::Member.2581", %"class.blink::Member.2583", %"class.blink::Member.2585", %"class.blink::Member.2589", %"class.blink::Member.2591", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2595", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2601", %"class.std::__1::unique_ptr.2602", %"class.absl::optional.2274", i32, [4 x i8], %"class.std::__1::unique_ptr.2608", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2616", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2621", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2626", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2629", %"class.blink::Member.2631", %"class.blink::Member.2633", %"class.blink::Member.2635", %"class.mojo::StructPtr.2638", %"class.blink::Member.2647", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2649", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2119", %"class.blink::Member.2121", %"class.blink::Member.2123", i8, i32, i8, i32, %"class.blink::Member.2256", %"class.blink::Member.2146", %"class.blink::FrameLifecycle", %"class.blink::Member.2117", %"class.blink::Member.2117", %"class.blink::Member.2117", %"class.blink::Member.2117", %"class.blink::Member.2117", %"class.blink::Member.2117", %"class.blink::Member.1857", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2267", i8, %"class.base::UnguessableToken", %"class.absl::optional.2269", %"class.absl::optional.2274", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2117", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2119" = type { %"class.blink::MemberBase.2120" }
%"class.blink::MemberBase.2120" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.3197", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.2117", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.3211", %"class.blink::Member.3215", %"class.blink::Member.3217", %"class.blink::Member.3219", %"class.blink::Member.3221", %"class.blink::Member.3223", %"class.blink::Member.3225", %"class.blink::Member.3227", %"class.blink::HeapObserverSet.3229", %"class.blink::Member.3237", %"class.blink::Member.3239", %"class.blink::Member.3241", %"class.blink::Member.3243", %"class.blink::Member.3245", %"class.blink::Member.3247", %"class.blink::Member.3249", %"class.blink::Member.3251", %"class.blink::Member.3253", %"class.blink::Member.3255", %"class.blink::Member.3257", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.3282", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.3289", %"class.blink::Member.2119", %"class.blink::Member.2119", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.3297", %"class.std::__1::unique_ptr.3303", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.3197" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.3198" }
%"class.blink::HeapHashMap.3198" = type { %"class.WTF::HashMap.3201" }
%"class.WTF::HashMap.3201" = type { %"class.WTF::HashTable.3202" }
%"class.WTF::HashTable.3202" = type <{ %"struct.WTF::KeyValuePair.3204"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3204" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.3205" }
%"class.std::__1::unique_ptr.3205" = type { %"class.std::__1::__compressed_pair.3206" }
%"class.std::__1::__compressed_pair.3206" = type { %"struct.std::__1::__compressed_pair_elem.3207" }
%"struct.std::__1::__compressed_pair_elem.3207" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.3211" = type { %"class.blink::MemberBase.3212" }
%"class.blink::MemberBase.3212" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2119", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.3215" = type { %"class.blink::MemberBase.3216" }
%"class.blink::MemberBase.3216" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.3217" = type { %"class.blink::MemberBase.3218" }
%"class.blink::MemberBase.3218" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.3219" = type { %"class.blink::MemberBase.3220" }
%"class.blink::MemberBase.3220" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.3221" = type { %"class.blink::MemberBase.3222" }
%"class.blink::MemberBase.3222" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.3223" = type { %"class.blink::MemberBase.3224" }
%"class.blink::MemberBase.3224" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.3225" = type { %"class.blink::MemberBase.3226" }
%"class.blink::MemberBase.3226" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.3227" = type { %"class.blink::MemberBase.3228" }
%"class.blink::MemberBase.3228" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.3229" = type { i32, [4 x i8], %"class.blink::HeapHashSet.3230" }
%"class.blink::HeapHashSet.3230" = type { %"class.WTF::HashSet.3233" }
%"class.WTF::HashSet.3233" = type { %"class.WTF::HashTable.3234" }
%"class.WTF::HashTable.3234" = type <{ %"class.blink::WeakMember.3236"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3236" = type opaque
%"class.blink::Member.3237" = type { %"class.blink::MemberBase.3238" }
%"class.blink::MemberBase.3238" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.3239" = type { %"class.blink::MemberBase.3240" }
%"class.blink::MemberBase.3240" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.3241" = type { %"class.blink::MemberBase.3242" }
%"class.blink::MemberBase.3242" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.3243" = type { %"class.blink::MemberBase.3244" }
%"class.blink::MemberBase.3244" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.3245" = type { %"class.blink::MemberBase.3246" }
%"class.blink::MemberBase.3246" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.3247" = type { %"class.blink::MemberBase.3248" }
%"class.blink::MemberBase.3248" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.3249" = type { %"class.blink::MemberBase.3250" }
%"class.blink::MemberBase.3250" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.3251" = type { %"class.blink::MemberBase.3252" }
%"class.blink::MemberBase.3252" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.3253" = type { %"class.blink::MemberBase.3254" }
%"class.blink::MemberBase.3254" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.3255" = type { %"class.blink::MemberBase.3256" }
%"class.blink::MemberBase.3256" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.3257" = type { %"class.blink::MemberBase.3258" }
%"class.blink::MemberBase.3258" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.3259" }
%"class.WTF::Deque.3259" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.3262" }
%"class.WTF::VectorBuffer.3262" = type { %"class.WTF::VectorBufferBase.3263" }
%"class.WTF::VectorBufferBase.3263" = type { %"class.std::__1::unique_ptr.3264"*, i32, i32 }
%"class.std::__1::unique_ptr.3264" = type { %"class.std::__1::__compressed_pair.3265" }
%"class.std::__1::__compressed_pair.3265" = type { %"struct.std::__1::__compressed_pair_elem.3266" }
%"struct.std::__1::__compressed_pair_elem.3266" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.3270", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.3270" = type { %"class.std::__1::__bitset.3271" }
%"class.std::__1::__bitset.3271" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.3272" }
%"class.absl::optional.3272" = type { %"class.absl::optional_internal::optional_data.3273" }
%"class.absl::optional_internal::optional_data.3273" = type { %"class.absl::optional_internal::optional_data_base.3274" }
%"class.absl::optional_internal::optional_data_base.3274" = type { %"class.absl::optional_internal::optional_data_dtor_base.3275" }
%"class.absl::optional_internal::optional_data_dtor_base.3275" = type { i8, %union.anon.3276 }
%union.anon.3276 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.3277", i64, %"class.absl::optional.1659", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.2861" }
%"class.blink::WebPrivatePtr.2861" = type { i8* }
%"class.absl::optional.3277" = type { %"class.absl::optional_internal::optional_data.3278" }
%"class.absl::optional_internal::optional_data.3278" = type { %"class.absl::optional_internal::optional_data_base.3279" }
%"class.absl::optional_internal::optional_data_base.3279" = type { %"class.absl::optional_internal::optional_data_dtor_base.3280" }
%"class.absl::optional_internal::optional_data_dtor_base.3280" = type { i8, %union.anon.3281 }
%union.anon.3281 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.3282" = type { %"class.std::__1::unique_ptr.3283" }
%"class.std::__1::unique_ptr.3283" = type { %"class.std::__1::__compressed_pair.3284" }
%"class.std::__1::__compressed_pair.3284" = type { %"struct.std::__1::__compressed_pair_elem.3285" }
%"struct.std::__1::__compressed_pair_elem.3285" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.3289" = type { %"class.WTF::HashSet.3292" }
%"class.WTF::HashSet.3292" = type { %"class.WTF::HashTable.3293" }
%"class.WTF::HashTable.3293" = type <{ %"class.blink::WeakMember.3295"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3295" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.3296" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.3296" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.3297" = type { %"class.std::__1::__compressed_pair.3298" }
%"class.std::__1::__compressed_pair.3298" = type { %"struct.std::__1::__compressed_pair_elem.3299" }
%"struct.std::__1::__compressed_pair_elem.3299" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3303" = type { %"class.std::__1::__compressed_pair.3304" }
%"class.std::__1::__compressed_pair.3304" = type { %"struct.std::__1::__compressed_pair_elem.3305" }
%"struct.std::__1::__compressed_pair_elem.3305" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2117", %"class.blink::Member.2146", %"class.blink::Member.2148", %"class.blink::Member.2150", i8, %"class.WTF::Vector.2152" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2139" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2127" }
%"class.blink::HeapVector.2127" = type { %"class.WTF::Vector.2130" }
%"class.WTF::Vector.2130" = type { %"class.WTF::VectorBuffer.2131" }
%"class.WTF::VectorBuffer.2131" = type { %"class.WTF::VectorBufferBase.2132", [32 x i8] }
%"class.WTF::VectorBufferBase.2132" = type { %"struct.std::__1::pair.2133"*, i32, i32 }
%"struct.std::__1::pair.2133" = type { %"class.WTF::AtomicString", %"class.blink::Member.2134" }
%"class.blink::Member.2134" = type { %"class.blink::MemberBase.2135" }
%"class.blink::MemberBase.2135" = type { %"class.blink::HeapVector.2136"* }
%"class.blink::HeapVector.2136" = type opaque
%"class.std::__1::unique_ptr.2139" = type { %"class.std::__1::__compressed_pair.2140" }
%"class.std::__1::__compressed_pair.2140" = type { %"struct.std::__1::__compressed_pair_elem.2141" }
%"struct.std::__1::__compressed_pair_elem.2141" = type { %"class.WTF::Vector.2142"* }
%"class.WTF::Vector.2142" = type opaque
%"class.blink::Member.2148" = type { %"class.blink::MemberBase.2149" }
%"class.blink::MemberBase.2149" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2150" = type { %"class.blink::MemberBase.2151" }
%"class.blink::MemberBase.2151" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2152" = type { %"class.WTF::VectorBuffer.2153" }
%"class.WTF::VectorBuffer.2153" = type { %"class.WTF::VectorBufferBase.2154" }
%"class.WTF::VectorBufferBase.2154" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2248" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2155, %"class.std::__1::unique_ptr.1655", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1669, i32 }>
%class.scoped_refptr.2155 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1669, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2214", %"class.absl::optional.2219", %"class.absl::optional.2172", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2239", i8, [7 x i8], %class.scoped_refptr.1669, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1682" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1669, %"class.std::__1::unique_ptr.2156", %"class.absl::optional.2166", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2172", %"class.std::__1::unique_ptr.2177", i8, i64, %class.scoped_refptr.2211, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2212", %"class.base::WeakPtrFactory.2213" }
%"class.std::__1::unique_ptr.2156" = type { %"class.std::__1::__compressed_pair.2157" }
%"class.std::__1::__compressed_pair.2157" = type { %"struct.std::__1::__compressed_pair_elem.2158" }
%"struct.std::__1::__compressed_pair_elem.2158" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1669, i8, %"class.mojo::ScopedHandleBase.2159", %class.scoped_refptr.2160, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2161", i8*, %"class.base::WeakPtrFactory.2162" }
%"class.mojo::ScopedHandleBase.2159" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2160 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2161" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2162" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2166" = type { %"class.absl::optional_internal::optional_data.2167" }
%"class.absl::optional_internal::optional_data.2167" = type { %"class.absl::optional_internal::optional_data_base.2168" }
%"class.absl::optional_internal::optional_data_base.2168" = type { %"class.absl::optional_internal::optional_data_dtor_base.2169" }
%"class.absl::optional_internal::optional_data_dtor_base.2169" = type { i8, %union.anon.2170 }
%union.anon.2170 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2171", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2171" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2177" = type { %"class.std::__1::__compressed_pair.2178" }
%"class.std::__1::__compressed_pair.2178" = type { %"struct.std::__1::__compressed_pair_elem.2179" }
%"struct.std::__1::__compressed_pair_elem.2179" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2180", i8, i64, %class.scoped_refptr.2181, %class.scoped_refptr.2206 }
%"class.base::RepeatingCallback.2180" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2181 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2182", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2184", %"class.std::__1::map.2195", i8, [7 x i8] }>
%"class.base::RefCounted.2182" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2183 }
%class.scoped_refptr.2183 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2184" = type { %"class.std::__1::__tree.2185" }
%"class.std::__1::__tree.2185" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2186", %"class.std::__1::__compressed_pair.2190" }
%"class.std::__1::__compressed_pair.2186" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2190" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2195" = type { %"class.std::__1::__tree.2196" }
%"class.std::__1::__tree.2196" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2197", %"class.std::__1::__compressed_pair.2201" }
%"class.std::__1::__compressed_pair.2197" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2201" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2206 = type { %"class.base::RefCountedData.2207"* }
%"class.base::RefCountedData.2207" = type opaque
%class.scoped_refptr.2211 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2212" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2213" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2214" = type { %"class.absl::optional_internal::optional_data.2215" }
%"class.absl::optional_internal::optional_data.2215" = type { %"class.absl::optional_internal::optional_data_base.2216" }
%"class.absl::optional_internal::optional_data_base.2216" = type { %"class.absl::optional_internal::optional_data_dtor_base.2217" }
%"class.absl::optional_internal::optional_data_dtor_base.2217" = type { i8, %union.anon.2218 }
%union.anon.2218 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2219" = type { %"class.absl::optional_internal::optional_data.2220" }
%"class.absl::optional_internal::optional_data.2220" = type { %"class.absl::optional_internal::optional_data_base.2221" }
%"class.absl::optional_internal::optional_data_base.2221" = type { %"class.absl::optional_internal::optional_data_dtor_base.2222" }
%"class.absl::optional_internal::optional_data_dtor_base.2222" = type { i8, [7 x i8], %union.anon.2223 }
%union.anon.2223 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2172" = type { %"class.absl::optional_internal::optional_data.2173" }
%"class.absl::optional_internal::optional_data.2173" = type { %"class.absl::optional_internal::optional_data_base.2174" }
%"class.absl::optional_internal::optional_data_base.2174" = type { %"class.absl::optional_internal::optional_data_dtor_base.2175" }
%"class.absl::optional_internal::optional_data_dtor_base.2175" = type { i8, %union.anon.2176 }
%union.anon.2176 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2224 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2224 = type { %"class.std::__1::map.2227" }
%"class.std::__1::map.2227" = type { %"class.std::__1::__tree.2228" }
%"class.std::__1::__tree.2228" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2229", %"class.std::__1::__compressed_pair.2233" }
%"class.std::__1::__compressed_pair.2229" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2233" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2238"*, i64 }
%"class.std::__1::unique_ptr.2238" = type opaque
%"class.std::__1::map.2239" = type { %"class.std::__1::__tree.2240" }
%"class.std::__1::__tree.2240" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2241", %"class.std::__1::__compressed_pair.2245" }
%"class.std::__1::__compressed_pair.2241" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2245" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2248" = type { %"class.std::__1::__compressed_pair.2249" }
%"class.std::__1::__compressed_pair.2249" = type { %"struct.std::__1::__compressed_pair_elem.2250" }
%"struct.std::__1::__compressed_pair_elem.2250" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2256" = type { %"class.blink::MemberBase.2257" }
%"class.blink::MemberBase.2257" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2146" = type { %"class.blink::MemberBase.2147" }
%"class.blink::MemberBase.2147" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2117", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2258" }
%"class.base::internal::flat_tree.2258" = type { %"class.std::__1::vector.2259" }
%"class.std::__1::vector.2259" = type { %"class.std::__1::__vector_base.2260" }
%"class.std::__1::__vector_base.2260" = type { %"struct.std::__1::pair.2261"*, %"struct.std::__1::pair.2261"*, %"class.std::__1::__compressed_pair.2262" }
%"struct.std::__1::pair.2261" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.2262" = type { %"struct.std::__1::__compressed_pair_elem.2263" }
%"struct.std::__1::__compressed_pair_elem.2263" = type { %"struct.std::__1::pair.2261"* }
%"class.blink::Member.2267" = type { %"class.blink::MemberBase.2268" }
%"class.blink::MemberBase.2268" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2269" = type { %"class.absl::optional_internal::optional_data.2270" }
%"class.absl::optional_internal::optional_data.2270" = type { %"class.absl::optional_internal::optional_data_base.2271" }
%"class.absl::optional_internal::optional_data_base.2271" = type { %"class.absl::optional_internal::optional_data_dtor_base.2272" }
%"class.absl::optional_internal::optional_data_dtor_base.2272" = type { i8, %union.anon.2273 }
%union.anon.2273 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2279" }
%"class.blink::HeapHashSet.2279" = type { %"class.WTF::HashSet.2282" }
%"class.WTF::HashSet.2282" = type { %"class.WTF::HashTable.2283" }
%"class.WTF::HashTable.2283" = type <{ %"class.blink::WeakMember.2285"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2285" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2286" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2287" }
%"class.blink::HeapHashMap.2287" = type { %"class.WTF::HashMap.2290" }
%"class.WTF::HashMap.2290" = type { %"class.WTF::HashTable.2291" }
%"class.WTF::HashTable.2291" = type <{ %"struct.WTF::KeyValuePair.2293"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2293" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2294" = type { %"class.std::__1::__compressed_pair.2295" }
%"class.std::__1::__compressed_pair.2295" = type { %"struct.std::__1::__compressed_pair_elem.2296" }
%"struct.std::__1::__compressed_pair_elem.2296" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2297", %"class.base::WeakPtrFactory.2302" }
%"class.WTF::HashMap.2297" = type { %"class.WTF::HashTable.2298" }
%"class.WTF::HashTable.2298" = type <{ %"struct.WTF::KeyValuePair.2301"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2301" = type opaque
%"class.base::WeakPtrFactory.2302" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2306" }
%"class.blink::Member.2306" = type { %"class.blink::MemberBase.2307" }
%"class.blink::MemberBase.2307" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3873" }
%"class.blink::WeakMember.3873" = type { %"class.blink::MemberBase.3874" }
%"class.blink::MemberBase.3874" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3875", i64, %"class.std::__1::map.3876", i8*, i64, %"class.base::WeakPtrFactory.3885" }
%"class.base::RepeatingCallback.3875" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3876" = type { %"class.std::__1::__tree.3877" }
%"class.std::__1::__tree.3877" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3878", %"class.std::__1::__compressed_pair.3882" }
%"class.std::__1::__compressed_pair.3878" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.3882" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3885" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2308" = type { %"class.WTF::HashSet.2311" }
%"class.WTF::HashSet.2311" = type { %"class.WTF::HashTable.2312" }
%"class.WTF::HashTable.2312" = type <{ %"class.blink::WeakMember.2314"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2314" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1857", %"class.blink::Member.2315", %"class.blink::Member.2317", %"class.std::__1::unique_ptr.2319", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2325" }
%"class.blink::Member.2315" = type { %"class.blink::MemberBase.2316" }
%"class.blink::MemberBase.2316" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2317" = type { %"class.blink::MemberBase.2318" }
%"class.blink::MemberBase.2318" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.2851", %"class.blink::Member.2856", %"class.std::__1::unique_ptr.2858", %"class.std::__1::unique_ptr.1610", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.3043, %"class.WTF::AtomicString", i32, %"class.absl::optional.2933", %class.scoped_refptr.1554, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2898", i8, %"class.absl::optional.2905", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.1857", %"class.blink::Member.3044", %"class.blink::Member.919", %"class.blink::Member.3117", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.3119", %class.scoped_refptr.1546, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.3132", %"class.std::__1::unique_ptr.2910", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.3134", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.3139, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.3153, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.3154", %"class.blink::Member.3169", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.3182", %"class.WTF::Vector.630", i8, i8, i8, %"class.blink::WebVector.3032", %"class.blink::WebVector.3032", %"class.mojo::Remote.3187" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.2851" = type { %"class.WTF::VectorBuffer.2852" }
%"class.WTF::VectorBuffer.2852" = type { %"class.WTF::VectorBufferBase.2853" }
%"class.WTF::VectorBufferBase.2853" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.2856" = type { %"class.blink::MemberBase.2857" }
%"class.blink::MemberBase.2857" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.2858" = type { %"class.std::__1::__compressed_pair.2859" }
%"class.std::__1::__compressed_pair.2859" = type { %"struct.std::__1::__compressed_pair_elem.2860" }
%"struct.std::__1::__compressed_pair_elem.2860" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2898", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2905", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2910", %"class.base::UnguessableToken", %"class.blink::WebVector.2916", %"class.base::TickClock"*, %"class.blink::WebVector.2925", %"class.absl::optional.2933", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2946", %"class.blink::WebVector.2938", i8, %"class.blink::WebVector.2965", i8, %"class.std::__1::unique_ptr.2973", %"class.blink::WebVector.3032", %"class.blink::WebVector.3032" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2862" }
%"class.std::__1::vector.2862" = type { %"class.std::__1::__vector_base.2863" }
%"class.std::__1::__vector_base.2863" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2893" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2893" = type { %"struct.std::__1::__compressed_pair_elem.2894" }
%"struct.std::__1::__compressed_pair_elem.2894" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.2864", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.2864" = type { %"class.std::__1::__compressed_pair.2865" }
%"class.std::__1::__compressed_pair.2865" = type { %"struct.std::__1::__compressed_pair_elem.2866" }
%"struct.std::__1::__compressed_pair_elem.2866" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2904", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2904" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2916" = type { %"class.std::__1::vector.2917" }
%"class.std::__1::vector.2917" = type { %"class.std::__1::__vector_base.2918" }
%"class.std::__1::__vector_base.2918" = type { %"class.std::__1::unique_ptr.2919"*, %"class.std::__1::unique_ptr.2919"*, %"class.std::__1::__compressed_pair.2920" }
%"class.std::__1::unique_ptr.2919" = type opaque
%"class.std::__1::__compressed_pair.2920" = type { %"struct.std::__1::__compressed_pair_elem.2921" }
%"struct.std::__1::__compressed_pair_elem.2921" = type { %"class.std::__1::unique_ptr.2919"* }
%"class.blink::WebVector.2925" = type { %"class.std::__1::vector.2926" }
%"class.std::__1::vector.2926" = type { %"class.std::__1::__vector_base.2927" }
%"class.std::__1::__vector_base.2927" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2928" }
%"class.std::__1::__compressed_pair.2928" = type { %"struct.std::__1::__compressed_pair_elem.2929" }
%"struct.std::__1::__compressed_pair_elem.2929" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.2946" = type { %"class.absl::optional_internal::optional_data.2947" }
%"class.absl::optional_internal::optional_data.2947" = type { %"class.absl::optional_internal::optional_data_base.2948" }
%"class.absl::optional_internal::optional_data_base.2948" = type { %"class.absl::optional_internal::optional_data_dtor_base.2949" }
%"class.absl::optional_internal::optional_data_dtor_base.2949" = type { i8, [7 x i8], %union.anon.2950 }
%union.anon.2950 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.2938" = type { %"class.std::__1::vector.2939" }
%"class.std::__1::vector.2939" = type { %"class.std::__1::__vector_base.2940" }
%"class.std::__1::__vector_base.2940" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2941" }
%"class.std::__1::__compressed_pair.2941" = type { %"struct.std::__1::__compressed_pair_elem.2942" }
%"struct.std::__1::__compressed_pair_elem.2942" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2965" = type { %"class.std::__1::vector.2966" }
%"class.std::__1::vector.2966" = type { %"class.std::__1::__vector_base.2967" }
%"class.std::__1::__vector_base.2967" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2968" }
%"class.std::__1::__compressed_pair.2968" = type { %"struct.std::__1::__compressed_pair_elem.2969" }
%"struct.std::__1::__compressed_pair_elem.2969" = type { i32* }
%"class.std::__1::unique_ptr.2973" = type { %"class.std::__1::__compressed_pair.2974" }
%"class.std::__1::__compressed_pair.2974" = type { %"struct.std::__1::__compressed_pair_elem.2975" }
%"struct.std::__1::__compressed_pair_elem.2975" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2976" }
%"class.blink::WebVector.2976" = type { %"class.std::__1::vector.2977" }
%"class.std::__1::vector.2977" = type { %"class.std::__1::__vector_base.2978" }
%"class.std::__1::__vector_base.2978" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.3024" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2979", %"class.blink::WebVector.2987", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.2938", i32, [4 x i8], %"class.absl::optional.3019", %"class.blink::WebVector.2938" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2979" = type { %"class.std::__1::vector.2980" }
%"class.std::__1::vector.2980" = type { %"class.std::__1::__vector_base.2981" }
%"class.std::__1::__vector_base.2981" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2982" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2982" = type { %"struct.std::__1::__compressed_pair_elem.2983" }
%"struct.std::__1::__compressed_pair_elem.2983" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2987" = type { %"class.std::__1::vector.2988" }
%"class.std::__1::vector.2988" = type { %"class.std::__1::__vector_base.2989" }
%"class.std::__1::__vector_base.2989" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.3014" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2990", %"class.blink::WebVector.2938", %"class.blink::WebVector.2998", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2990" = type { %"class.std::__1::vector.2991" }
%"class.std::__1::vector.2991" = type { %"class.std::__1::__vector_base.2992" }
%"class.std::__1::__vector_base.2992" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2993" }
%"class.std::__1::__compressed_pair.2993" = type { %"struct.std::__1::__compressed_pair_elem.2994" }
%"struct.std::__1::__compressed_pair_elem.2994" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2998" = type { %"class.std::__1::vector.2999" }
%"class.std::__1::vector.2999" = type { %"class.std::__1::__vector_base.3000" }
%"class.std::__1::__vector_base.3000" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.3009" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.3001" }
%"class.blink::WebVector.3001" = type { %"class.std::__1::vector.3002" }
%"class.std::__1::vector.3002" = type { %"class.std::__1::__vector_base.3003" }
%"class.std::__1::__vector_base.3003" = type { i8*, i8*, %"class.std::__1::__compressed_pair.3004" }
%"class.std::__1::__compressed_pair.3004" = type { %"struct.std::__1::__compressed_pair_elem.3005" }
%"struct.std::__1::__compressed_pair_elem.3005" = type { i8* }
%"class.std::__1::__compressed_pair.3009" = type { %"struct.std::__1::__compressed_pair_elem.3010" }
%"struct.std::__1::__compressed_pair_elem.3010" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.3014" = type { %"struct.std::__1::__compressed_pair_elem.3015" }
%"struct.std::__1::__compressed_pair_elem.3015" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.3019" = type { %"class.absl::optional_internal::optional_data.3020" }
%"class.absl::optional_internal::optional_data.3020" = type { %"class.absl::optional_internal::optional_data_base.3021" }
%"class.absl::optional_internal::optional_data_base.3021" = type { %"class.absl::optional_internal::optional_data_dtor_base.3022" }
%"class.absl::optional_internal::optional_data_dtor_base.3022" = type { i8, [7 x i8], %union.anon.3023 }
%union.anon.3023 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.2938", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.3024" = type { %"struct.std::__1::__compressed_pair_elem.3025" }
%"struct.std::__1::__compressed_pair_elem.3025" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%class.scoped_refptr.3043 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.2933" = type { %"class.absl::optional_internal::optional_data.2934" }
%"class.absl::optional_internal::optional_data.2934" = type { %"class.absl::optional_internal::optional_data_base.2935" }
%"class.absl::optional_internal::optional_data_base.2935" = type { %"class.absl::optional_internal::optional_data_dtor_base.2936" }
%"class.absl::optional_internal::optional_data_dtor_base.2936" = type { i8, %union.anon.2937 }
%union.anon.2937 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.2938", %"class.blink::WebString", %"class.blink::WebVector.2938", %"class.blink::WebVector.2938" }
%"class.std::__1::unique_ptr.2898" = type { %"class.std::__1::__compressed_pair.2899" }
%"class.std::__1::__compressed_pair.2899" = type { %"struct.std::__1::__compressed_pair_elem.2900" }
%"struct.std::__1::__compressed_pair_elem.2900" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2905" = type { %"class.absl::optional_internal::optional_data.2906" }
%"class.absl::optional_internal::optional_data.2906" = type { %"class.absl::optional_internal::optional_data_base.2907" }
%"class.absl::optional_internal::optional_data_base.2907" = type { %"class.absl::optional_internal::optional_data_dtor_base.2908" }
%"class.absl::optional_internal::optional_data_dtor_base.2908" = type { i8, %union.anon.2909 }
%union.anon.2909 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2951", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.2951" = type { %"class.std::__1::__vector_base.2952" }
%"class.std::__1::__vector_base.2952" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2960" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2953", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2953" = type { %"class.std::__1::__vector_base.2954" }
%"class.std::__1::__vector_base.2954" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2955" }
%"class.std::__1::__compressed_pair.2955" = type { %"struct.std::__1::__compressed_pair_elem.2956" }
%"struct.std::__1::__compressed_pair_elem.2956" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2960" = type { %"struct.std::__1::__compressed_pair_elem.2961" }
%"struct.std::__1::__compressed_pair_elem.2961" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.3044" = type { %"class.blink::MemberBase.3045" }
%"class.blink::MemberBase.3045" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.630", %"class.blink::Member.3048", %"class.absl::optional.3050", i64, i64, i32, %class.scoped_refptr.3055, %class.scoped_refptr.3043, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.3055 }
%"class.blink::Member.3048" = type { %"class.blink::MemberBase.3049" }
%"class.blink::MemberBase.3049" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.3050" = type { %"class.absl::optional_internal::optional_data.3051" }
%"class.absl::optional_internal::optional_data.3051" = type { %"class.absl::optional_internal::optional_data_base.3052" }
%"class.absl::optional_internal::optional_data_base.3052" = type { %"class.absl::optional_internal::optional_data_dtor_base.3053" }
%"class.absl::optional_internal::optional_data_dtor_base.3053" = type { i8, %union.anon.3054 }
%union.anon.3054 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%class.scoped_refptr.3055 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.3056", [4 x i8], %"class.std::__1::unique_ptr.3058", i64, %"class.WTF::Vector.3061", %"class.WTF::Vector.3066", %"class.WTF::Vector.3072", %"class.WTF::Vector.3090", %class.scoped_refptr.1546, %"class.WTF::HashMap.3096", %"class.WTF::Vector.3101", %"class.WTF::Vector.3061", %"class.WTF::Vector.3107", %"class.WTF::HashMap.3112", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.3056" = type { %"class.base::RefCountedThreadSafe.3057" }
%"class.base::RefCountedThreadSafe.3057" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.3058" = type { %"class.std::__1::__compressed_pair.3059" }
%"class.std::__1::__compressed_pair.3059" = type { %"struct.std::__1::__compressed_pair_elem.3005" }
%"class.WTF::Vector.3066" = type { %"class.WTF::VectorBuffer.3067" }
%"class.WTF::VectorBuffer.3067" = type { %"class.WTF::VectorBufferBase.3068", [8 x i8] }
%"class.WTF::VectorBufferBase.3068" = type { %class.scoped_refptr.3069*, i32, i32 }
%class.scoped_refptr.3069 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.3072" = type { %"class.WTF::VectorBuffer.3073" }
%"class.WTF::VectorBuffer.3073" = type { %"class.WTF::VectorBufferBase.3074" }
%"class.WTF::VectorBufferBase.3074" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.3076", %"class.std::__1::unique_ptr.3082" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.3075 }
%class.scoped_refptr.3075 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.3076" = type { %"class.std::__1::__compressed_pair.3077" }
%"class.std::__1::__compressed_pair.3077" = type { %"struct.std::__1::__compressed_pair_elem.3078" }
%"struct.std::__1::__compressed_pair_elem.3078" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3082" = type { %"class.std::__1::__compressed_pair.3083" }
%"class.std::__1::__compressed_pair.3083" = type { %"struct.std::__1::__compressed_pair_elem.3084" }
%"struct.std::__1::__compressed_pair_elem.3084" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.3090" = type { %"class.WTF::VectorBuffer.3091" }
%"class.WTF::VectorBuffer.3091" = type { %"class.WTF::VectorBufferBase.3092" }
%"class.WTF::VectorBufferBase.3092" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.3093", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.3093" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.3096" = type { %"class.WTF::HashTable.3097" }
%"class.WTF::HashTable.3097" = type <{ %"struct.WTF::KeyValuePair.3100"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3100" = type opaque
%"class.WTF::Vector.3101" = type { %"class.WTF::VectorBuffer.3102" }
%"class.WTF::VectorBuffer.3102" = type { %"class.WTF::VectorBufferBase.3103" }
%"class.WTF::VectorBufferBase.3103" = type { %"class.mojo::ScopedHandleBase.3104"*, i32, i32 }
%"class.mojo::ScopedHandleBase.3104" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.3061" = type { %"class.WTF::VectorBuffer.3062" }
%"class.WTF::VectorBuffer.3062" = type { %"class.WTF::VectorBufferBase.3063", [16 x i8] }
%"class.WTF::VectorBufferBase.3063" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.3107" = type { %"class.WTF::VectorBuffer.3108" }
%"class.WTF::VectorBuffer.3108" = type { %"class.WTF::VectorBufferBase.3109" }
%"class.WTF::VectorBufferBase.3109" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.3112" = type { %"class.WTF::HashTable.3113" }
%"class.WTF::HashTable.3113" = type <{ %"struct.WTF::KeyValuePair.3116"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3116" = type { i8**, %"class.std::__1::unique_ptr.3865" }
%"class.std::__1::unique_ptr.3865" = type { %"class.std::__1::__compressed_pair.3866" }
%"class.std::__1::__compressed_pair.3866" = type { %"struct.std::__1::__compressed_pair_elem.3867" }
%"struct.std::__1::__compressed_pair_elem.3867" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.3117" = type { %"class.blink::MemberBase.3118" }
%"class.blink::MemberBase.3118" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.2873", %class.scoped_refptr.2883, %class.scoped_refptr.2884, %"struct.blink::CacheControlHeader", %"class.absl::optional.1659", %"class.absl::optional.2060", %"class.absl::optional.2060", %"class.absl::optional.2060", i64, %"class.blink::KURL", %"class.WTF::Vector.2851", %"class.WTF::String", %"class.WTF::Vector.630", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.2274", %"class.WTF::Vector.630", %"class.blink::KURL", %"class.absl::optional.2885" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.2867" }
%"class.WTF::HashMap.2867" = type { %"class.WTF::HashTable.2868" }
%"class.WTF::HashTable.2868" = type <{ %"struct.WTF::KeyValuePair.2871"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2871" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.2872", i8 }
%"struct.std::__1::array.2872" = type { [16 x i8] }
%"class.absl::optional.2873" = type { %"class.absl::optional_internal::optional_data.2874" }
%"class.absl::optional_internal::optional_data.2874" = type { %"class.absl::optional_internal::optional_data_base.2875" }
%"class.absl::optional_internal::optional_data_base.2875" = type { %"class.absl::optional_internal::optional_data_dtor_base.2876" }
%"class.absl::optional_internal::optional_data_dtor_base.2876" = type { i8, %union.anon.2877 }
%union.anon.2877 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.630", %"class.WTF::String", i64, i64, %"class.WTF::Vector.284", %"class.WTF::Vector.2878" }
%"class.WTF::Vector.2878" = type { %"class.WTF::VectorBuffer.2879" }
%"class.WTF::VectorBuffer.2879" = type { %"class.WTF::VectorBufferBase.2880" }
%"class.WTF::VectorBufferBase.2880" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.2883 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.2884 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.1659", %"class.absl::optional.1659" }
%"class.absl::optional.2060" = type { %"class.absl::optional_internal::optional_data.2061" }
%"class.absl::optional_internal::optional_data.2061" = type { %"class.absl::optional_internal::optional_data_base.2062" }
%"class.absl::optional_internal::optional_data_base.2062" = type { %"class.absl::optional_internal::optional_data_dtor_base.2063" }
%"class.absl::optional_internal::optional_data_dtor_base.2063" = type { i8, %union.anon.2064 }
%union.anon.2064 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2053" }
%"class.base::time_internal::TimeBase.2053" = type { i64 }
%"class.absl::optional.2885" = type { %"class.absl::optional_internal::optional_data.2886" }
%"class.absl::optional_internal::optional_data.2886" = type { %"class.absl::optional_internal::optional_data_base.2887" }
%"class.absl::optional_internal::optional_data_base.2887" = type { %"class.absl::optional_internal::optional_data_dtor_base.2888" }
%"class.absl::optional_internal::optional_data_dtor_base.2888" = type { i8, %union.anon.2889 }
%union.anon.2889 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote.3119" = type { %"class.mojo::internal::InterfacePtrState.3120" }
%"class.mojo::internal::InterfacePtrState.3120" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3121" }
%"class.std::__1::unique_ptr.3121" = type { %"class.std::__1::__compressed_pair.3122" }
%"class.std::__1::__compressed_pair.3122" = type { %"struct.std::__1::__compressed_pair_elem.3123" }
%"struct.std::__1::__compressed_pair_elem.3123" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.1659", %"class.absl::optional.1659", %"class.absl::optional.1659", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.3127", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.2317" }
%"class.WTF::Vector.3127" = type { %"class.WTF::VectorBuffer.3128" }
%"class.WTF::VectorBuffer.3128" = type { %"class.WTF::VectorBufferBase.3129" }
%"class.WTF::VectorBufferBase.3129" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.3132" = type { %"class.blink::MemberBase.3133" }
%"class.blink::MemberBase.3133" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2910" = type { %"class.std::__1::__compressed_pair.2911" }
%"class.std::__1::__compressed_pair.2911" = type { %"struct.std::__1::__compressed_pair_elem.2912" }
%"struct.std::__1::__compressed_pair_elem.2912" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.2839" }
%"class.WTF::Vector.3134" = type { %"class.WTF::VectorBuffer.3135" }
%"class.WTF::VectorBuffer.3135" = type { %"class.WTF::VectorBufferBase.3136" }
%"class.WTF::VectorBufferBase.3136" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.3139 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.3140", i64, %"class.WTF::Vector.3142", %"class.WTF::Vector.3147" }
%"class.WTF::RefCounted.3140" = type { %"class.base::RefCounted.3141" }
%"class.base::RefCounted.3141" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3142" = type { %"class.WTF::VectorBuffer.3143" }
%"class.WTF::VectorBuffer.3143" = type { %"class.WTF::VectorBufferBase.3144" }
%"class.WTF::VectorBufferBase.3144" = type { i8*, i32, i32 }
%"class.WTF::Vector.3147" = type { %"class.WTF::VectorBuffer.3148" }
%"class.WTF::VectorBuffer.3148" = type { %"class.WTF::VectorBufferBase.3149" }
%"class.WTF::VectorBufferBase.3149" = type { %"class.std::__1::unique_ptr.3150"*, i32, i32 }
%"class.std::__1::unique_ptr.3150" = type opaque
%class.scoped_refptr.3153 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.3154" = type { %"class.blink::MemberBase.3155" }
%"class.blink::MemberBase.3155" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.3158", %"class.std::__1::unique_ptr.3163", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.3158" = type { %"class.WTF::HashTable.3159" }
%"class.WTF::HashTable.3159" = type <{ %"struct.WTF::KeyValuePair.3162"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3162" = type { %"class.WTF::Vector.3547", %class.scoped_refptr.3971 }
%"class.WTF::Vector.3547" = type { %"class.WTF::VectorBuffer.3548" }
%"class.WTF::VectorBuffer.3548" = type { %"class.WTF::VectorBufferBase.2725", [32 x i8] }
%"class.WTF::VectorBufferBase.2725" = type { i8*, i32, i32 }
%class.scoped_refptr.3971 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.3972", %"class.WTF::Vector.2723", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.3972" = type { %"class.base::RefCounted.3973" }
%"class.base::RefCounted.3973" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2723" = type { %"class.WTF::VectorBuffer.2724" }
%"class.WTF::VectorBuffer.2724" = type { %"class.WTF::VectorBufferBase.2725" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.3974", i64, %"class.absl::optional.3979" }
%"class.std::__1::unique_ptr.3974" = type { %"class.std::__1::__compressed_pair.3975" }
%"class.std::__1::__compressed_pair.3975" = type { %"struct.std::__1::__compressed_pair_elem.3005" }
%"class.absl::optional.3979" = type { %"class.absl::optional_internal::optional_data.3980" }
%"class.absl::optional_internal::optional_data.3980" = type { %"class.absl::optional_internal::optional_data_base.3981" }
%"class.absl::optional_internal::optional_data_base.3981" = type { %"class.absl::optional_internal::optional_data_dtor_base.3982" }
%"class.absl::optional_internal::optional_data_dtor_base.3982" = type { i8, %union.anon.3983 }
%union.anon.3983 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.3984", %"class.std::__1::unique_ptr.3985" }
%"class.mojo::ScopedHandleBase.3984" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.3985" = type { %"class.std::__1::__compressed_pair.3986" }
%"class.std::__1::__compressed_pair.3986" = type { %"struct.std::__1::__compressed_pair_elem.3987" }
%"struct.std::__1::__compressed_pair_elem.3987" = type { i8* }
%"class.std::__1::unique_ptr.3163" = type { %"class.std::__1::__compressed_pair.3164" }
%"class.std::__1::__compressed_pair.3164" = type { %"struct.std::__1::__compressed_pair_elem.3165" }
%"struct.std::__1::__compressed_pair_elem.3165" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.blink::Member.3169" = type { %"class.blink::MemberBase.3170" }
%"class.blink::MemberBase.3170" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.3175" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.3171", %"class.std::__1::bitset.3171", %"class.std::__1::bitset.3173" }
%"class.std::__1::bitset.3171" = type { %"class.std::__1::__bitset.3172" }
%"class.std::__1::__bitset.3172" = type { [11 x i64] }
%"class.std::__1::bitset.3173" = type { %"class.std::__1::__bitset.3174" }
%"class.std::__1::__bitset.3174" = type { [2 x i64] }
%"class.blink::HeapHashSet.3175" = type { %"class.WTF::HashSet.3178" }
%"class.WTF::HashSet.3178" = type { %"class.WTF::HashTable.3179" }
%"class.WTF::HashTable.3179" = type <{ %"class.blink::Member.3181"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3181" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.3182" = type { %"class.WTF::VectorBuffer.3183" }
%"class.WTF::VectorBuffer.3183" = type { %"class.WTF::VectorBufferBase.3184" }
%"class.WTF::VectorBufferBase.3184" = type { i32*, i32, i32 }
%"class.blink::WebVector.3032" = type { %"class.std::__1::vector.3033" }
%"class.std::__1::vector.3033" = type { %"class.std::__1::__vector_base.3034" }
%"class.std::__1::__vector_base.3034" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.3035" }
%"class.std::__1::__compressed_pair.3035" = type { %"struct.std::__1::__compressed_pair_elem.3036" }
%"struct.std::__1::__compressed_pair_elem.3036" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.3187" = type { %"class.mojo::internal::InterfacePtrState.3188" }
%"class.mojo::internal::InterfacePtrState.3188" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3189" }
%"class.std::__1::unique_ptr.3189" = type { %"class.std::__1::__compressed_pair.3190" }
%"class.std::__1::__compressed_pair.3190" = type { %"struct.std::__1::__compressed_pair_elem.3191" }
%"struct.std::__1::__compressed_pair_elem.3191" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2319" = type { %"class.std::__1::__compressed_pair.2320" }
%"class.std::__1::__compressed_pair.2320" = type { %"struct.std::__1::__compressed_pair_elem.2321" }
%"struct.std::__1::__compressed_pair_elem.2321" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2325" = type { %"class.WTF::HashTable.2326" }
%"class.WTF::HashTable.2326" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2329" = type { %"class.blink::MemberBase.1861" }
%"class.blink::MemberBase.1861" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.2330" = type { %"class.blink::MemberBase.2331" }
%"class.blink::MemberBase.2331" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2332" = type { %"class.blink::MemberBase.2333" }
%"class.blink::MemberBase.2333" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1857", %"class.blink::Member.2336", %"class.blink::Member.2338", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2340", %"class.blink::Member.2346" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.966" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::Member.2336" = type { %"class.blink::MemberBase.2337" }
%"class.blink::MemberBase.2337" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2338" = type { %"class.blink::MemberBase.2339" }
%"class.blink::MemberBase.2339" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2340" = type { %"class.std::__1::__compressed_pair.2341" }
%"class.std::__1::__compressed_pair.2341" = type { %"struct.std::__1::__compressed_pair_elem.2342" }
%"struct.std::__1::__compressed_pair_elem.2342" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2346" = type { %"class.blink::MemberBase.2347" }
%"class.blink::MemberBase.2347" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2348" = type { %"class.blink::MemberBase.2349" }
%"class.blink::MemberBase.2349" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2350" = type { %"class.blink::MemberBase.2351" }
%"class.blink::MemberBase.2351" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2352" = type { %"class.blink::MemberBase.2353" }
%"class.blink::MemberBase.2353" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2356", %"class.blink::HeapListHashSet.2367", %"class.blink::HeapListHashSet.2378", %"class.blink::HeapListHashSet.2389", %"class.blink::HeapListHashSet.2400", %"class.blink::HeapListHashSet.2411", %"class.blink::HeapListHashSet.2422", %"class.blink::HeapListHashSet.2433", %"class.blink::HeapListHashSet.2444", %"class.blink::HeapListHashSet.2455", %"class.blink::HeapListHashSet.2466", %"class.blink::HeapListHashSet.2477", %"class.blink::HeapListHashSet.2488", %"class.blink::HeapListHashSet.2499", %"class.blink::HeapListHashSet.2510", %"class.blink::HeapListHashSet.2521", %"class.blink::HeapListHashSet.2532", %"class.blink::HeapListHashSet.2543", %"class.blink::HeapListHashSet.2554", %"class.blink::HeapListHashSet.2565" }
%"class.blink::HeapListHashSet.2356" = type { %"class.WTF::ListHashSet.base.2366", [7 x i8] }
%"class.WTF::ListHashSet.base.2366" = type <{ %"class.WTF::HashTable.2361", %"class.blink::Member.2363", %"class.blink::Member.2363", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2361" = type <{ %"class.blink::Member.2363"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2363" = type { %"class.blink::MemberBase.2364" }
%"class.blink::MemberBase.2364" = type { %"class.blink::HeapListHashSetNode.2365"* }
%"class.blink::HeapListHashSetNode.2365" = type { %"class.blink::Member.2579", %"class.blink::Member.2363", %"class.blink::Member.2363" }
%"class.blink::HeapListHashSet.2367" = type { %"class.WTF::ListHashSet.base.2377", [7 x i8] }
%"class.WTF::ListHashSet.base.2377" = type <{ %"class.WTF::HashTable.2372", %"class.blink::Member.2374", %"class.blink::Member.2374", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2372" = type <{ %"class.blink::Member.2374"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2374" = type { %"class.blink::MemberBase.2375" }
%"class.blink::MemberBase.2375" = type { %"class.blink::HeapListHashSetNode.2376"* }
%"class.blink::HeapListHashSetNode.2376" = type { %"class.blink::Member.2833", %"class.blink::Member.2374", %"class.blink::Member.2374" }
%"class.blink::Member.2833" = type { %"class.blink::MemberBase.2834" }
%"class.blink::MemberBase.2834" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2378" = type { %"class.WTF::ListHashSet.base.2388", [7 x i8] }
%"class.WTF::ListHashSet.base.2388" = type <{ %"class.WTF::HashTable.2383", %"class.blink::Member.2385", %"class.blink::Member.2385", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2383" = type <{ %"class.blink::Member.2385"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2385" = type { %"class.blink::MemberBase.2386" }
%"class.blink::MemberBase.2386" = type { %"class.blink::HeapListHashSetNode.2387"* }
%"class.blink::HeapListHashSetNode.2387" = type { %"class.blink::Member.2829", %"class.blink::Member.2385", %"class.blink::Member.2385" }
%"class.blink::Member.2829" = type { %"class.blink::MemberBase.2830" }
%"class.blink::MemberBase.2830" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2389" = type { %"class.WTF::ListHashSet.base.2399", [7 x i8] }
%"class.WTF::ListHashSet.base.2399" = type <{ %"class.WTF::HashTable.2394", %"class.blink::Member.2396", %"class.blink::Member.2396", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2394" = type <{ %"class.blink::Member.2396"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2396" = type { %"class.blink::MemberBase.2397" }
%"class.blink::MemberBase.2397" = type { %"class.blink::HeapListHashSetNode.2398"* }
%"class.blink::HeapListHashSetNode.2398" = type { %"class.blink::Member.2825", %"class.blink::Member.2396", %"class.blink::Member.2396" }
%"class.blink::Member.2825" = type { %"class.blink::MemberBase.2826" }
%"class.blink::MemberBase.2826" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2400" = type { %"class.WTF::ListHashSet.base.2410", [7 x i8] }
%"class.WTF::ListHashSet.base.2410" = type <{ %"class.WTF::HashTable.2405", %"class.blink::Member.2407", %"class.blink::Member.2407", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2405" = type <{ %"class.blink::Member.2407"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2407" = type { %"class.blink::MemberBase.2408" }
%"class.blink::MemberBase.2408" = type { %"class.blink::HeapListHashSetNode.2409"* }
%"class.blink::HeapListHashSetNode.2409" = type { %"class.blink::Member.2821", %"class.blink::Member.2407", %"class.blink::Member.2407" }
%"class.blink::Member.2821" = type { %"class.blink::MemberBase.2822" }
%"class.blink::MemberBase.2822" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2411" = type { %"class.WTF::ListHashSet.base.2421", [7 x i8] }
%"class.WTF::ListHashSet.base.2421" = type <{ %"class.WTF::HashTable.2416", %"class.blink::Member.2418", %"class.blink::Member.2418", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2416" = type <{ %"class.blink::Member.2418"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2418" = type { %"class.blink::MemberBase.2419" }
%"class.blink::MemberBase.2419" = type { %"class.blink::HeapListHashSetNode.2420"* }
%"class.blink::HeapListHashSetNode.2420" = type { %"class.blink::Member.2817", %"class.blink::Member.2418", %"class.blink::Member.2418" }
%"class.blink::Member.2817" = type { %"class.blink::MemberBase.2818" }
%"class.blink::MemberBase.2818" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2422" = type { %"class.WTF::ListHashSet.base.2432", [7 x i8] }
%"class.WTF::ListHashSet.base.2432" = type <{ %"class.WTF::HashTable.2427", %"class.blink::Member.2429", %"class.blink::Member.2429", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2427" = type <{ %"class.blink::Member.2429"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2429" = type { %"class.blink::MemberBase.2430" }
%"class.blink::MemberBase.2430" = type { %"class.blink::HeapListHashSetNode.2431"* }
%"class.blink::HeapListHashSetNode.2431" = type { %"class.blink::Member.2702", %"class.blink::Member.2429", %"class.blink::Member.2429" }
%"class.blink::HeapListHashSet.2433" = type { %"class.WTF::ListHashSet.base.2443", [7 x i8] }
%"class.WTF::ListHashSet.base.2443" = type <{ %"class.WTF::HashTable.2438", %"class.blink::Member.2440", %"class.blink::Member.2440", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2438" = type <{ %"class.blink::Member.2440"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2440" = type { %"class.blink::MemberBase.2441" }
%"class.blink::MemberBase.2441" = type { %"class.blink::HeapListHashSetNode.2442"* }
%"class.blink::HeapListHashSetNode.2442" = type { %"class.blink::Member.2698", %"class.blink::Member.2440", %"class.blink::Member.2440" }
%"class.blink::Member.2698" = type { %"class.blink::MemberBase.2699" }
%"class.blink::MemberBase.2699" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2444" = type { %"class.WTF::ListHashSet.base.2454", [7 x i8] }
%"class.WTF::ListHashSet.base.2454" = type <{ %"class.WTF::HashTable.2449", %"class.blink::Member.2451", %"class.blink::Member.2451", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2449" = type <{ %"class.blink::Member.2451"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2451" = type { %"class.blink::MemberBase.2452" }
%"class.blink::MemberBase.2452" = type { %"class.blink::HeapListHashSetNode.2453"* }
%"class.blink::HeapListHashSetNode.2453" = type { %"class.blink::Member.2694", %"class.blink::Member.2451", %"class.blink::Member.2451" }
%"class.blink::Member.2694" = type { %"class.blink::MemberBase.2695" }
%"class.blink::MemberBase.2695" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2455" = type { %"class.WTF::ListHashSet.base.2465", [7 x i8] }
%"class.WTF::ListHashSet.base.2465" = type <{ %"class.WTF::HashTable.2460", %"class.blink::Member.2462", %"class.blink::Member.2462", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2460" = type <{ %"class.blink::Member.2462"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2462" = type { %"class.blink::MemberBase.2463" }
%"class.blink::MemberBase.2463" = type { %"class.blink::HeapListHashSetNode.2464"* }
%"class.blink::HeapListHashSetNode.2464" = type { %"class.blink::Member.2690", %"class.blink::Member.2462", %"class.blink::Member.2462" }
%"class.blink::Member.2690" = type { %"class.blink::MemberBase.2691" }
%"class.blink::MemberBase.2691" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2466" = type { %"class.WTF::ListHashSet.base.2476", [7 x i8] }
%"class.WTF::ListHashSet.base.2476" = type <{ %"class.WTF::HashTable.2471", %"class.blink::Member.2473", %"class.blink::Member.2473", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2471" = type <{ %"class.blink::Member.2473"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2473" = type { %"class.blink::MemberBase.2474" }
%"class.blink::MemberBase.2474" = type { %"class.blink::HeapListHashSetNode.2475"* }
%"class.blink::HeapListHashSetNode.2475" = type { %"class.blink::Member.2583", %"class.blink::Member.2473", %"class.blink::Member.2473" }
%"class.blink::HeapListHashSet.2477" = type { %"class.WTF::ListHashSet.base.2487", [7 x i8] }
%"class.WTF::ListHashSet.base.2487" = type <{ %"class.WTF::HashTable.2482", %"class.blink::Member.2484", %"class.blink::Member.2484", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2482" = type <{ %"class.blink::Member.2484"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2484" = type { %"class.blink::MemberBase.2485" }
%"class.blink::MemberBase.2485" = type { %"class.blink::HeapListHashSetNode.2486"* }
%"class.blink::HeapListHashSetNode.2486" = type { %"class.blink::Member.2684", %"class.blink::Member.2484", %"class.blink::Member.2484" }
%"class.blink::Member.2684" = type { %"class.blink::MemberBase.2685" }
%"class.blink::MemberBase.2685" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2488" = type { %"class.WTF::ListHashSet.base.2498", [7 x i8] }
%"class.WTF::ListHashSet.base.2498" = type <{ %"class.WTF::HashTable.2493", %"class.blink::Member.2495", %"class.blink::Member.2495", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2493" = type <{ %"class.blink::Member.2495"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2495" = type { %"class.blink::MemberBase.2496" }
%"class.blink::MemberBase.2496" = type { %"class.blink::HeapListHashSetNode.2497"* }
%"class.blink::HeapListHashSetNode.2497" = type { %"class.blink::Member.2680", %"class.blink::Member.2495", %"class.blink::Member.2495" }
%"class.blink::Member.2680" = type { %"class.blink::MemberBase.2681" }
%"class.blink::MemberBase.2681" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2499" = type { %"class.WTF::ListHashSet.base.2509", [7 x i8] }
%"class.WTF::ListHashSet.base.2509" = type <{ %"class.WTF::HashTable.2504", %"class.blink::Member.2506", %"class.blink::Member.2506", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2504" = type <{ %"class.blink::Member.2506"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2506" = type { %"class.blink::MemberBase.2507" }
%"class.blink::MemberBase.2507" = type { %"class.blink::HeapListHashSetNode.2508"* }
%"class.blink::HeapListHashSetNode.2508" = type { %"class.blink::Member.2676", %"class.blink::Member.2506", %"class.blink::Member.2506" }
%"class.blink::Member.2676" = type { %"class.blink::MemberBase.2677" }
%"class.blink::MemberBase.2677" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2510" = type { %"class.WTF::ListHashSet.base.2520", [7 x i8] }
%"class.WTF::ListHashSet.base.2520" = type <{ %"class.WTF::HashTable.2515", %"class.blink::Member.2517", %"class.blink::Member.2517", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2515" = type <{ %"class.blink::Member.2517"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2517" = type { %"class.blink::MemberBase.2518" }
%"class.blink::MemberBase.2518" = type { %"class.blink::HeapListHashSetNode.2519"* }
%"class.blink::HeapListHashSetNode.2519" = type { %"class.blink::Member.2672", %"class.blink::Member.2517", %"class.blink::Member.2517" }
%"class.blink::Member.2672" = type { %"class.blink::MemberBase.2673" }
%"class.blink::MemberBase.2673" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2521" = type { %"class.WTF::ListHashSet.base.2531", [7 x i8] }
%"class.WTF::ListHashSet.base.2531" = type <{ %"class.WTF::HashTable.2526", %"class.blink::Member.2528", %"class.blink::Member.2528", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2526" = type <{ %"class.blink::Member.2528"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2528" = type { %"class.blink::MemberBase.2529" }
%"class.blink::MemberBase.2529" = type { %"class.blink::HeapListHashSetNode.2530"* }
%"class.blink::HeapListHashSetNode.2530" = type { %"class.blink::Member.2668", %"class.blink::Member.2528", %"class.blink::Member.2528" }
%"class.blink::Member.2668" = type { %"class.blink::MemberBase.2669" }
%"class.blink::MemberBase.2669" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2532" = type { %"class.WTF::ListHashSet.base.2542", [7 x i8] }
%"class.WTF::ListHashSet.base.2542" = type <{ %"class.WTF::HashTable.2537", %"class.blink::Member.2539", %"class.blink::Member.2539", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2537" = type <{ %"class.blink::Member.2539"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2539" = type { %"class.blink::MemberBase.2540" }
%"class.blink::MemberBase.2540" = type { %"class.blink::HeapListHashSetNode.2541"* }
%"class.blink::HeapListHashSetNode.2541" = type { %"class.blink::Member.2664", %"class.blink::Member.2539", %"class.blink::Member.2539" }
%"class.blink::Member.2664" = type { %"class.blink::MemberBase.2665" }
%"class.blink::MemberBase.2665" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2543" = type { %"class.WTF::ListHashSet.base.2553", [7 x i8] }
%"class.WTF::ListHashSet.base.2553" = type <{ %"class.WTF::HashTable.2548", %"class.blink::Member.2550", %"class.blink::Member.2550", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2548" = type <{ %"class.blink::Member.2550"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2550" = type { %"class.blink::MemberBase.2551" }
%"class.blink::MemberBase.2551" = type { %"class.blink::HeapListHashSetNode.2552"* }
%"class.blink::HeapListHashSetNode.2552" = type { %"class.blink::Member.2660", %"class.blink::Member.2550", %"class.blink::Member.2550" }
%"class.blink::Member.2660" = type { %"class.blink::MemberBase.2661" }
%"class.blink::MemberBase.2661" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2554" = type { %"class.WTF::ListHashSet.base.2564", [7 x i8] }
%"class.WTF::ListHashSet.base.2564" = type <{ %"class.WTF::HashTable.2559", %"class.blink::Member.2561", %"class.blink::Member.2561", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2559" = type <{ %"class.blink::Member.2561"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2561" = type { %"class.blink::MemberBase.2562" }
%"class.blink::MemberBase.2562" = type { %"class.blink::HeapListHashSetNode.2563"* }
%"class.blink::HeapListHashSetNode.2563" = type { %"class.blink::Member.2585", %"class.blink::Member.2561", %"class.blink::Member.2561" }
%"class.blink::HeapListHashSet.2565" = type { %"class.WTF::ListHashSet.base.2575", [7 x i8] }
%"class.WTF::ListHashSet.base.2575" = type <{ %"class.WTF::HashTable.2570", %"class.blink::Member.2572", %"class.blink::Member.2572", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2570" = type <{ %"class.blink::Member.2572"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2572" = type { %"class.blink::MemberBase.2573" }
%"class.blink::MemberBase.2573" = type { %"class.blink::HeapListHashSetNode.2574"* }
%"class.blink::HeapListHashSetNode.2574" = type { %"class.blink::Member.2577", %"class.blink::Member.2572", %"class.blink::Member.2572" }
%class.scoped_refptr.2576 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2577" = type { %"class.blink::MemberBase.2578" }
%"class.blink::MemberBase.2578" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2579" = type { %"class.blink::MemberBase.2580" }
%"class.blink::MemberBase.2580" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2581" = type { %"class.blink::MemberBase.2582" }
%"class.blink::MemberBase.2582" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2583" = type { %"class.blink::MemberBase.2584" }
%"class.blink::MemberBase.2584" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2585" = type { %"class.blink::MemberBase.2586" }
%"class.blink::MemberBase.2586" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2589" = type { %"class.blink::MemberBase.2590" }
%"class.blink::MemberBase.2590" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2591" = type { %"class.blink::MemberBase.2592" }
%"class.blink::MemberBase.2592" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2593" }
%"class.blink::Member.2593" = type { %"class.blink::MemberBase.2594" }
%"class.blink::MemberBase.2594" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3888" }
%"class.mojo::Remote.3888" = type { %"class.mojo::internal::InterfacePtrState.3889" }
%"class.mojo::internal::InterfacePtrState.3889" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3890" }
%"class.std::__1::unique_ptr.3890" = type { %"class.std::__1::__compressed_pair.3891" }
%"class.std::__1::__compressed_pair.3891" = type { %"struct.std::__1::__compressed_pair_elem.3892" }
%"struct.std::__1::__compressed_pair_elem.3892" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2595" = type { %"class.std::__1::__compressed_pair.2596" }
%"class.std::__1::__compressed_pair.2596" = type { %"struct.std::__1::__compressed_pair_elem.2597" }
%"struct.std::__1::__compressed_pair_elem.2597" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2601" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2602" = type { %"class.std::__1::__compressed_pair.2603" }
%"class.std::__1::__compressed_pair.2603" = type { %"struct.std::__1::__compressed_pair_elem.2604" }
%"struct.std::__1::__compressed_pair_elem.2604" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2274" = type { %"class.absl::optional_internal::optional_data.2275" }
%"class.absl::optional_internal::optional_data.2275" = type { %"class.absl::optional_internal::optional_data_base.2276" }
%"class.absl::optional_internal::optional_data_base.2276" = type { %"class.absl::optional_internal::optional_data_dtor_base.2277" }
%"class.absl::optional_internal::optional_data_dtor_base.2277" = type { i8, %union.anon.2278 }
%union.anon.2278 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2608" = type { %"class.std::__1::__compressed_pair.2609" }
%"class.std::__1::__compressed_pair.2609" = type { %"struct.std::__1::__compressed_pair_elem.2610" }
%"struct.std::__1::__compressed_pair_elem.2610" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2614" }
%"class.blink::Member.2614" = type { %"class.blink::MemberBase.2615" }
%"class.blink::MemberBase.2615" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3898" }
%"class.mojo::AssociatedRemote.3898" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3899" }
%"class.mojo::internal::AssociatedInterfacePtrState.3899" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3900" }
%"class.std::__1::unique_ptr.3900" = type { %"class.std::__1::__compressed_pair.3901" }
%"class.std::__1::__compressed_pair.3901" = type { %"struct.std::__1::__compressed_pair_elem.3902" }
%"struct.std::__1::__compressed_pair_elem.3902" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2616" = type { %"class.blink::Member.2617" }
%"class.blink::Member.2617" = type { %"class.blink::MemberBase.2618" }
%"class.blink::MemberBase.2618" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3908" }
%"class.mojo::AssociatedRemote.3908" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3909" }
%"class.mojo::internal::AssociatedInterfacePtrState.3909" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3910" }
%"class.std::__1::unique_ptr.3910" = type { %"class.std::__1::__compressed_pair.3911" }
%"class.std::__1::__compressed_pair.3911" = type { %"struct.std::__1::__compressed_pair_elem.3912" }
%"struct.std::__1::__compressed_pair_elem.3912" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2619" }
%"class.blink::Member.2619" = type { %"class.blink::MemberBase.2620" }
%"class.blink::MemberBase.2620" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3918", %"class.blink::Member.1857", %"class.mojo::AssociatedReceiver.3919" }
%"class.blink::ThreadState::PrefinalizerRegistration.3918" = type { i8 }
%"class.mojo::AssociatedReceiver.3919" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3920" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1655" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3920" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2621" = type { %"class.blink::Member.2622" }
%"class.blink::Member.2622" = type { %"class.blink::MemberBase.2623" }
%"class.blink::MemberBase.2623" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3923", %"class.blink::Member.1857", %"class.mojo::AssociatedReceiver.3924" }
%"class.blink::ThreadState::PrefinalizerRegistration.3923" = type { i8 }
%"class.mojo::AssociatedReceiver.3924" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3925" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3925" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2624" }
%"class.blink::Member.2624" = type { %"class.blink::MemberBase.2625" }
%"class.blink::MemberBase.2625" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3928", %"class.blink::Member.1857", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3928" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2155, %"class.std::__1::unique_ptr.1655", %"class.base::WeakPtrFactory.3929" }
%"class.base::WeakPtrFactory.3929" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2626" = type { %"class.blink::Member.2627" }
%"class.blink::Member.2627" = type { %"class.blink::MemberBase.2628" }
%"class.blink::MemberBase.2628" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3932", %"class.blink::Member.1857", %"class.mojo::AssociatedReceiver.3933" }
%"class.blink::ThreadState::PrefinalizerRegistration.3932" = type { i8 }
%"class.mojo::AssociatedReceiver.3933" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3934" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3934" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2629" = type { %"class.blink::MemberBase.2630" }
%"class.blink::MemberBase.2630" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2631" = type { %"class.blink::MemberBase.2632" }
%"class.blink::MemberBase.2632" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2633" = type { %"class.blink::MemberBase.2634" }
%"class.blink::MemberBase.2634" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2635" = type { %"class.blink::MemberBase.2636" }
%"class.blink::MemberBase.2636" = type { %"class.blink::HeapHashMap.2637"* }
%"class.blink::HeapHashMap.2637" = type opaque
%"class.mojo::StructPtr.2638" = type { %"class.std::__1::unique_ptr.2639" }
%"class.std::__1::unique_ptr.2639" = type { %"class.std::__1::__compressed_pair.2640" }
%"class.std::__1::__compressed_pair.2640" = type { %"struct.std::__1::__compressed_pair_elem.2641" }
%"struct.std::__1::__compressed_pair_elem.2641" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2642", %"class.mojo::InlinedStructPtr.2643" }
%"class.mojo::InlinedStructPtr.2642" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2643" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2647" = type { %"class.blink::MemberBase.2648" }
%"class.blink::MemberBase.2648" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2649" = type { %"class.absl::optional_internal::optional_data.2650" }
%"class.absl::optional_internal::optional_data.2650" = type { %"class.absl::optional_internal::optional_data_base.2651" }
%"class.absl::optional_internal::optional_data_base.2651" = type { %"class.absl::optional_internal::optional_data_dtor_base.2652" }
%"class.absl::optional_internal::optional_data_dtor_base.2652" = type { i8, %union.anon.2653 }
%union.anon.2653 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1859" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1860", { i64, i64 } }
%"class.blink::WeakMember.1860" = type { %"class.blink::MemberBase.1861" }
%"class.absl::optional.1862" = type { %"class.absl::optional_internal::optional_data.1863" }
%"class.absl::optional_internal::optional_data.1863" = type { %"class.absl::optional_internal::optional_data_base.1864" }
%"class.absl::optional_internal::optional_data_base.1864" = type { %"class.absl::optional_internal::optional_data_dtor_base.1865" }
%"class.absl::optional_internal::optional_data_dtor_base.1865" = type { i8, %union.anon.1866 }
%union.anon.1866 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1869" = type { %"class.blink::MemberBase.1870" }
%"class.blink::MemberBase.1870" = type { %"class.blink::HeapHashSet.1871"* }
%"class.blink::HeapHashSet.1871" = type opaque
%"class.std::__1::unique_ptr.1872" = type { %"class.std::__1::__compressed_pair.1873" }
%"class.std::__1::__compressed_pair.1873" = type { %"struct.std::__1::__compressed_pair_elem.1874" }
%"struct.std::__1::__compressed_pair_elem.1874" = type { %"class.WTF::HashSet.1875"* }
%"class.WTF::HashSet.1875" = type { %"class.WTF::HashTable.1876" }
%"class.WTF::HashTable.1876" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1882" = type { %"class.blink::MemberBase.1883" }
%"class.blink::MemberBase.1883" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1884" = type { %"class.WTF::HashSet.1887" }
%"class.WTF::HashSet.1887" = type { %"class.WTF::HashTable.1888" }
%"class.WTF::HashTable.1888" = type <{ %"class.blink::Member.1890"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1890" = type opaque
%"class.blink::HeapHashSet.1891" = type { %"class.WTF::HashSet.1894" }
%"class.WTF::HashSet.1894" = type { %"class.WTF::HashTable.1895" }
%"class.WTF::HashTable.1895" = type <{ %"class.blink::Member.1897"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1897" = type { %"class.blink::MemberBase.1898" }
%"class.blink::MemberBase.1898" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2103", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2113", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2103" = type { %"class.blink::MemberBase.2104" }
%"class.blink::MemberBase.2104" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2105", %"class.blink::Member.2107", %"class.blink::Member.2109", %"class.blink::Member.2111", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2105" = type { %"class.blink::MemberBase.2106" }
%"class.blink::MemberBase.2106" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2107" = type { %"class.blink::MemberBase.2108" }
%"class.blink::MemberBase.2108" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2109" = type { %"class.blink::MemberBase.2110" }
%"class.blink::MemberBase.2110" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2111" = type { %"class.blink::MemberBase.2112" }
%"class.blink::MemberBase.2112" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2113" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2114", { i64, i64 } }
%"class.blink::WeakMember.2114" = type { %"class.blink::MemberBase.1898" }
%"class.std::__1::unique_ptr.1899" = type { %"class.std::__1::__compressed_pair.1900" }
%"class.std::__1::__compressed_pair.1900" = type { %"struct.std::__1::__compressed_pair_elem.1901" }
%"struct.std::__1::__compressed_pair_elem.1901" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1905" = type { %"class.blink::MemberBase.1906" }
%"class.blink::MemberBase.1906" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1909", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1909" = type { %"class.WTF::HashTable.1910" }
%"class.WTF::HashTable.1910" = type <{ %"struct.WTF::KeyValuePair.1912"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1912" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1913", i32, i32 }
%"class.WTF::Vector.1913" = type { %"class.WTF::VectorBuffer.1914" }
%"class.WTF::VectorBuffer.1914" = type { %"class.WTF::VectorBufferBase.1915" }
%"class.WTF::VectorBufferBase.1915" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1917" = type { %"class.WTF::LinkedHashSet.1920" }
%"class.WTF::LinkedHashSet.1920" = type { %"class.WTF::HashMap.1921", %"class.WTF::VectorBackedLinkedList.1925" }
%"class.WTF::HashMap.1921" = type { %"class.WTF::HashTable.1922" }
%"class.WTF::HashTable.1922" = type <{ %"struct.WTF::KeyValuePair.1924"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1924" = type opaque
%"class.WTF::VectorBackedLinkedList.1925" = type { %"class.WTF::Vector.1926", i32, i32 }
%"class.WTF::Vector.1926" = type { %"class.WTF::VectorBuffer.1927" }
%"class.WTF::VectorBuffer.1927" = type { %"class.WTF::VectorBufferBase.1928" }
%"class.WTF::VectorBufferBase.1928" = type { %"class.WTF::VectorBackedLinkedListNode.1929"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1929" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1931" = type { %"class.std::__1::__compressed_pair.1932" }
%"class.std::__1::__compressed_pair.1932" = type { %"struct.std::__1::__compressed_pair_elem.1933" }
%"struct.std::__1::__compressed_pair_elem.1933" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1937" = type { %"class.std::__1::__compressed_pair.1938" }
%"class.std::__1::__compressed_pair.1938" = type { %"struct.std::__1::__compressed_pair_elem.1939" }
%"struct.std::__1::__compressed_pair_elem.1939" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1940, %class.scoped_refptr.1940, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1995", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2000", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1940 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1941", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1948" }
%"class.WTF::RefCounted.1941" = type { %"class.base::RefCounted.1942" }
%"class.base::RefCounted.1942" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1943", i32, [4 x i8] }>
%"class.WTF::Vector.1943" = type { %"class.WTF::VectorBuffer.1944" }
%"class.WTF::VectorBuffer.1944" = type { %"class.WTF::VectorBufferBase.1945" }
%"class.WTF::VectorBufferBase.1945" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1948" = type { %"class.WTF::VectorBuffer.1949" }
%"class.WTF::VectorBuffer.1949" = type { %"class.WTF::VectorBufferBase.1950" }
%"class.WTF::VectorBufferBase.1950" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1951", %"class.std::__1::unique_ptr.1967", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1951" = type { %"class.std::__1::__compressed_pair.1952" }
%"class.std::__1::__compressed_pair.1952" = type { %"struct.std::__1::__compressed_pair_elem.1953" }
%"struct.std::__1::__compressed_pair_elem.1953" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1954", %"class.WTF::Vector.1959", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1954" = type { %"class.WTF::VectorBuffer.1955" }
%"class.WTF::VectorBuffer.1955" = type { %"class.WTF::VectorBufferBase.1956" }
%"class.WTF::VectorBufferBase.1956" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1959" = type { %"class.WTF::VectorBuffer.1960" }
%"class.WTF::VectorBuffer.1960" = type { %"class.WTF::VectorBufferBase.1961" }
%"class.WTF::VectorBufferBase.1961" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.1967" = type { %"class.std::__1::__compressed_pair.1968" }
%"class.std::__1::__compressed_pair.1968" = type { %"struct.std::__1::__compressed_pair_elem.1969" }
%"struct.std::__1::__compressed_pair_elem.1969" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1970", %"class.absl::optional.1970" }
%"class.absl::optional.1970" = type { %"class.absl::optional_internal::optional_data.1971" }
%"class.absl::optional_internal::optional_data.1971" = type { %"class.absl::optional_internal::optional_data_base.1972" }
%"class.absl::optional_internal::optional_data_base.1972" = type { %"class.absl::optional_internal::optional_data_dtor_base.1973" }
%"class.absl::optional_internal::optional_data_dtor_base.1973" = type { i8, [3 x i8], %union.anon.1974 }
%union.anon.1974 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1948"*, %"class.absl::optional.1980", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1980" = type { %"class.absl::optional_internal::optional_data.1981" }
%"class.absl::optional_internal::optional_data.1981" = type { %"class.absl::optional_internal::optional_data_base.1982" }
%"class.absl::optional_internal::optional_data_base.1982" = type { %"class.absl::optional_internal::optional_data_dtor_base.1983" }
%"class.absl::optional_internal::optional_data_dtor_base.1983" = type { i8, %union.anon.1984 }
%union.anon.1984 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1985", %"class.WTF::Vector.1990" }
%"class.WTF::Vector.1985" = type { %"class.WTF::VectorBuffer.1986" }
%"class.WTF::VectorBuffer.1986" = type { %"class.WTF::VectorBufferBase.1987", [128 x i8] }
%"class.WTF::VectorBufferBase.1987" = type { i32*, i32, i32 }
%"class.WTF::Vector.1990" = type { %"class.WTF::VectorBuffer.1991" }
%"class.WTF::VectorBuffer.1991" = type { %"class.WTF::VectorBufferBase.1992", [128 x i8] }
%"class.WTF::VectorBufferBase.1992" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1995" = type { %"class.WTF::VectorBuffer.1996" }
%"class.WTF::VectorBuffer.1996" = type { %"class.WTF::VectorBufferBase.1997" }
%"class.WTF::VectorBufferBase.1997" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2000" = type { %"class.WTF::HashTable.2001" }
%"class.WTF::HashTable.2001" = type <{ %"struct.WTF::KeyValuePair.2004"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2004" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2005", %"class.WTF::Vector.2010" }
%"class.WTF::HashMap.2005" = type { %"class.WTF::HashTable.2006" }
%"class.WTF::HashTable.2006" = type <{ %"struct.WTF::KeyValuePair.2009"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2009" = type opaque
%"class.WTF::Vector.2010" = type { %"class.WTF::VectorBuffer.2011" }
%"class.WTF::VectorBuffer.2011" = type { %"class.WTF::VectorBufferBase.2012" }
%"class.WTF::VectorBufferBase.2012" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2018" = type { %"class.std::__1::__compressed_pair.2019" }
%"class.std::__1::__compressed_pair.2019" = type { %"struct.std::__1::__compressed_pair_elem.2020" }
%"struct.std::__1::__compressed_pair_elem.2020" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2024" = type { %"class.WTF::VectorBuffer.2025" }
%"class.WTF::VectorBuffer.2025" = type { %"class.WTF::VectorBufferBase.2026" }
%"class.WTF::VectorBufferBase.2026" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2029 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2030" = type { %"class.blink::MemberBase.2031" }
%"class.blink::MemberBase.2031" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2032" = type { %"class.blink::MemberBase.2033" }
%"class.blink::MemberBase.2033" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2034" = type { %"class.blink::MemberBase.2035" }
%"class.blink::MemberBase.2035" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2036" = type { %"class.WTF::HashSet.2039" }
%"class.WTF::HashSet.2039" = type { %"class.WTF::HashTable.2040" }
%"class.WTF::HashTable.2040" = type <{ %"class.blink::WeakMember.2042"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2042" = type opaque
%"class.blink::HeapHashSet.2043" = type { %"class.WTF::HashSet.2046" }
%"class.WTF::HashSet.2046" = type { %"class.WTF::HashTable.2047" }
%"class.WTF::HashTable.2047" = type <{ %"class.blink::WeakMember.2049"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2049" = type opaque
%"class.std::__1::unique_ptr.2050" = type { %"class.std::__1::__compressed_pair.2051" }
%"class.std::__1::__compressed_pair.2051" = type { %"struct.std::__1::__compressed_pair_elem.2052" }
%"struct.std::__1::__compressed_pair_elem.2052" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2057" = type { %"class.std::__1::__compressed_pair.2058" }
%"class.std::__1::__compressed_pair.2058" = type { %"struct.std::__1::__compressed_pair_elem.2059" }
%"struct.std::__1::__compressed_pair_elem.2059" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2060", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.2068" = type { %"class.std::__1::__compressed_pair.2069" }
%"class.std::__1::__compressed_pair.2069" = type { %"struct.std::__1::__compressed_pair_elem.2070" }
%"struct.std::__1::__compressed_pair_elem.2070" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2074" = type { %"class.std::__1::__compressed_pair.2075" }
%"class.std::__1::__compressed_pair.2075" = type { %"struct.std::__1::__compressed_pair_elem.2076" }
%"struct.std::__1::__compressed_pair_elem.2076" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2080" = type { %"class.std::__1::__compressed_pair.2081" }
%"class.std::__1::__compressed_pair.2081" = type { %"struct.std::__1::__compressed_pair_elem.2082" }
%"struct.std::__1::__compressed_pair_elem.2082" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1844 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2086" = type { %"class.blink::PersistentBase.2087" }
%"class.blink::PersistentBase.2087" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2090", i64 }
%"class.blink::HeapVector.2090" = type { %"class.WTF::Vector.2093" }
%"class.WTF::Vector.2093" = type { %"class.WTF::VectorBuffer.2094" }
%"class.WTF::VectorBuffer.2094" = type { %"class.WTF::VectorBufferBase.2095", [368 x i8] }
%"class.WTF::VectorBufferBase.2095" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1897", i8, %"class.blink::Member.2096", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2096" = type { %"class.blink::MemberBase.2097" }
%"class.blink::MemberBase.2097" = type { %"class.blink::HeapLinkedHashSet.2098"* }
%"class.blink::HeapLinkedHashSet.2098" = type { %"class.WTF::LinkedHashSet.3322" }
%"class.WTF::LinkedHashSet.3322" = type { %"class.WTF::HashMap.3323", %"class.WTF::VectorBackedLinkedList.3327" }
%"class.WTF::HashMap.3323" = type { %"class.WTF::HashTable.3324" }
%"class.WTF::HashTable.3324" = type <{ %"struct.WTF::KeyValuePair.3326"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3326" = type <{ %"class.blink::Member.318", i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList.3327" = type { %"class.WTF::Vector.3328", i32, i32 }
%"class.WTF::Vector.3328" = type { %"class.WTF::VectorBuffer.3329" }
%"class.WTF::VectorBuffer.3329" = type { %"class.WTF::VectorBufferBase.3330" }
%"class.WTF::VectorBufferBase.3330" = type { %"class.WTF::VectorBackedLinkedListNode.3331"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.3331" = type { i32, i32, %"class.blink::Member.318" }
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.blink::InspectorDOMAgent" = type { %"class.blink::InspectorBaseAgent", %"class.v8::Isolate"*, %"class.blink::Member.2739", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::HeapHashSet.2743", %"class.blink::Member.2750", %"class.blink::HeapVector.2753", %"class.blink::HeapHashMap.2760", %"class.blink::HeapHashMap.2767", %"class.blink::HeapHashMap.2774", %"class.WTF::HashSet.2781", %"class.WTF::HashSet.2781", %"class.WTF::HashMap.2785", i32, %"class.blink::Member.326", %"class.blink::HeapHashMap.2790", %"class.blink::Member.2797", %"class.blink::Member.2799", %"class.blink::Member.2811", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOM::Backend", %"class.blink::Member.2352", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.2733" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::DOM::Backend" = type { i32 (...)** }
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector.2706" }
%"class.WTF::Vector.2706" = type { %"class.WTF::VectorBuffer.2707" }
%"class.WTF::VectorBuffer.2707" = type { %"class.WTF::VectorBufferBase.2708" }
%"class.WTF::VectorBufferBase.2708" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr.2709", %"class.mojo::StructPtr.2709" }
%"class.mojo::StructPtr.2709" = type { %"class.std::__1::unique_ptr.2710" }
%"class.std::__1::unique_ptr.2710" = type { %"class.std::__1::__compressed_pair.2711" }
%"class.std::__1::__compressed_pair.2711" = type { %"struct.std::__1::__compressed_pair_elem.2712" }
%"struct.std::__1::__compressed_pair_elem.2712" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap.2713" }
%"class.WTF::HashMap.2713" = type { %"class.WTF::HashTable.2714" }
%"class.WTF::HashTable.2714" = type <{ %"struct.WTF::KeyValuePair.2717"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2717" = type { %"class.WTF::String", %"class.absl::optional.2718" }
%"class.absl::optional.2718" = type { %"class.absl::optional_internal::optional_data.2719" }
%"class.absl::optional_internal::optional_data.2719" = type { %"class.absl::optional_internal::optional_data_base.2720" }
%"class.absl::optional_internal::optional_data_base.2720" = type { %"class.absl::optional_internal::optional_data_dtor_base.2721" }
%"class.absl::optional_internal::optional_data_dtor_base.2721" = type { i8, %union.anon.2722 }
%union.anon.2722 = type { %"class.WTF::Vector.2723" }
%"class.std::__1::unique_ptr.2733" = type { %"class.std::__1::__compressed_pair.2734" }
%"class.std::__1::__compressed_pair.2734" = type { %"struct.std::__1::__compressed_pair_elem.2735" }
%"struct.std::__1::__compressed_pair_elem.2735" = type { %"class.blink::protocol::DOM::Frontend"* }
%"class.blink::protocol::DOM::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.blink::Member.2739" = type { %"class.blink::MemberBase.2740" }
%"class.blink::MemberBase.2740" = type { %"class.blink::InspectedFrames"* }
%"class.blink::InspectedFrames" = type { i32 (...)**, %"class.blink::Member.1857" }
%"class.v8_inspector::V8InspectorSession" = type { i32 (...)** }
%"class.blink::HeapHashSet.2743" = type { %"class.WTF::HashSet.2746" }
%"class.WTF::HashSet.2746" = type { %"class.WTF::HashTable.2747" }
%"class.WTF::HashTable.2747" = type <{ %"class.blink::Member.2749"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2749" = type { %"class.blink::MemberBase.3313" }
%"class.blink::MemberBase.3313" = type { %"struct.blink::InspectorDOMAgent::DOMListener"* }
%"struct.blink::InspectorDOMAgent::DOMListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2750" = type { %"class.blink::MemberBase.2751" }
%"class.blink::MemberBase.2751" = type { %"class.blink::HeapHashMap.2752"* }
%"class.blink::HeapHashMap.2752" = type { %"class.WTF::HashMap.3316" }
%"class.WTF::HashMap.3316" = type { %"class.WTF::HashTable.3317" }
%"class.WTF::HashTable.3317" = type <{ %"struct.WTF::KeyValuePair.3319"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3319" = type <{ %"class.blink::Member.318", i32, [4 x i8] }>
%"class.blink::HeapVector.2753" = type { %"class.WTF::Vector.2756" }
%"class.WTF::Vector.2756" = type { %"class.WTF::VectorBuffer.2757" }
%"class.WTF::VectorBuffer.2757" = type { %"class.WTF::VectorBufferBase.2758" }
%"class.WTF::VectorBufferBase.2758" = type { %"class.blink::Member.2750"*, i32, i32 }
%"class.blink::HeapHashMap.2760" = type { %"class.WTF::HashMap.2763" }
%"class.WTF::HashMap.2763" = type { %"class.WTF::HashTable.2764" }
%"class.WTF::HashTable.2764" = type <{ %"struct.WTF::KeyValuePair.2766"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2766" = type { i32, %"class.blink::Member.318" }
%"class.blink::HeapHashMap.2767" = type { %"class.WTF::HashMap.2770" }
%"class.WTF::HashMap.2770" = type { %"class.WTF::HashTable.2771" }
%"class.WTF::HashTable.2771" = type <{ %"struct.WTF::KeyValuePair.2773"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2773" = type { i32, %"class.blink::Member.2750" }
%"class.blink::HeapHashMap.2774" = type { %"class.WTF::HashMap.2777" }
%"class.WTF::HashMap.2777" = type { %"class.WTF::HashTable.2778" }
%"class.WTF::HashTable.2778" = type <{ %"struct.WTF::KeyValuePair.2780"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2780" = type { %"class.blink::WeakMember.1497", %"class.blink::Member.3995" }
%"class.blink::Member.3995" = type { %"class.blink::MemberBase.3996" }
%"class.blink::MemberBase.3996" = type { %"class.blink::InspectorDOMAgent::InspectorSourceLocation"* }
%"class.blink::InspectorDOMAgent::InspectorSourceLocation" = type { i32 (...)**, %"class.std::__1::unique_ptr.3603" }
%"class.std::__1::unique_ptr.3603" = type { %"class.std::__1::__compressed_pair.3604" }
%"class.std::__1::__compressed_pair.3604" = type { %"struct.std::__1::__compressed_pair_elem.3605" }
%"struct.std::__1::__compressed_pair_elem.3605" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.3606", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.3606" = type { %"class.std::__1::__compressed_pair.3607" }
%"class.std::__1::__compressed_pair.3607" = type { %"struct.std::__1::__compressed_pair_elem.3608" }
%"struct.std::__1::__compressed_pair_elem.3608" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.WTF::HashSet.2781" = type { %"class.WTF::HashTable.2782" }
%"class.WTF::HashTable.2782" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.2785" = type { %"class.WTF::HashTable.2786" }
%"class.WTF::HashTable.2786" = type <{ %"struct.WTF::KeyValuePair.2789"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2789" = type { i32, i32 }
%"class.blink::HeapHashMap.2790" = type { %"class.WTF::HashMap.2793" }
%"class.WTF::HashMap.2793" = type { %"class.WTF::HashTable.2794" }
%"class.WTF::HashTable.2794" = type <{ %"struct.WTF::KeyValuePair.2796"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2796" = type { %"class.WTF::String", %"class.blink::Member.3333" }
%"class.blink::Member.3333" = type { %"class.blink::MemberBase.3334" }
%"class.blink::MemberBase.3334" = type { %"class.blink::HeapVector.3335"* }
%"class.blink::HeapVector.3335" = type { %"class.WTF::Vector.3338" }
%"class.WTF::Vector.3338" = type { %"class.WTF::VectorBuffer.3339" }
%"class.WTF::VectorBuffer.3339" = type { %"class.WTF::VectorBufferBase.3340" }
%"class.WTF::VectorBufferBase.3340" = type { %"class.blink::Member.318"*, i32, i32 }
%"class.blink::Member.2797" = type { %"class.blink::MemberBase.2798" }
%"class.blink::Member.2799" = type { %"class.blink::MemberBase.2800" }
%"class.blink::MemberBase.2800" = type { %"class.blink::InspectorHistory"* }
%"class.blink::InspectorHistory" = type <{ %"class.blink::HeapVector.2803", i32, [4 x i8] }>
%"class.blink::HeapVector.2803" = type { %"class.WTF::Vector.2806" }
%"class.WTF::Vector.2806" = type { %"class.WTF::VectorBuffer.2807" }
%"class.WTF::VectorBuffer.2807" = type { %"class.WTF::VectorBufferBase.2808" }
%"class.WTF::VectorBufferBase.2808" = type { %"class.blink::Member.2809"*, i32, i32 }
%"class.blink::Member.2809" = type opaque
%"class.blink::Member.2811" = type { %"class.blink::MemberBase.2812" }
%"class.blink::MemberBase.2812" = type { %"class.blink::DOMEditor"* }
%"class.blink::DOMEditor" = type { %"class.blink::Member.2799" }
%"class.blink::InspectorAgentState::SimpleField" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.3342" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.3342" = type { %"class.v8::TracedReference.3343" }
%"class.v8::TracedReference.3343" = type { %"class.v8::BasicTracedReference.3344" }
%"class.v8::BasicTracedReference.3344" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::StringAppend" = type { %"class.WTF::String", i8* }
%"class.WTF::StringAppend.3345" = type { %"class.WTF::String", %"class.WTF::String" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.4098" }
%"class.WTF::StringTypeAdapter.4098" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.4099" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::protocol::DOM::RGBA" = type { %"class.crdtp::ProtocolObject", i32, i32, i32, %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.crdtp::detail::ValueMaybe" = type { i8, double }
%"class.blink::HeapVector.3346" = type { %"class.WTF::Vector.3349" }
%"class.WTF::Vector.3349" = type { %"class.WTF::VectorBuffer.3350" }
%"class.WTF::VectorBuffer.3350" = type { %"class.WTF::VectorBufferBase.3351" }
%"class.WTF::VectorBufferBase.3351" = type { %"class.blink::Member.326"*, i32, i32 }
%"class.blink::InspectedFrames::Iterator" = type { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* }
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.2117", %"class.blink::Member.3359", %"struct.blink::FramePolicy", %"class.blink::Member.3361", i8, i8, [6 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.3359" = type { %"class.blink::MemberBase.3360" }
%"class.blink::MemberBase.3360" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"class.blink::Member.3361" = type { %"class.blink::MemberBase.3362" }
%"class.blink::MemberBase.3362" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1318", %"class.blink::Member.3363", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.3363" = type { %"class.blink::MemberBase.3364" }
%"class.blink::MemberBase.3364" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::PseudoElement" = type <{ %"class.blink::Element", i8, [7 x i8] }>
%"class.crdtp::detail::ValueMaybe.3365" = type { i8, i32 }
%"class.crdtp::detail::ValueMaybe.3366" = type { i8, %"class.WTF::String" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.v8::Local.3568" = type { %"class.v8::Context"* }
%"class.std::__1::unique_ptr.3569" = type { %"class.std::__1::__compressed_pair.3570" }
%"class.std::__1::__compressed_pair.3570" = type { %"struct.std::__1::__compressed_pair_elem.3571" }
%"struct.std::__1::__compressed_pair_elem.3571" = type { %"class.v8_inspector::StringBuffer"* }
%"class.v8_inspector::StringBuffer" = type { i32 (...)** }
%"class.v8_inspector::StringView" = type { i8, i64, %union.anon.3575 }
%union.anon.3575 = type { i8* }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.4302", %"class.WTF::HashMap.4302", %"class.WTF::HashMap.4307", %"class.std::__1::unique_ptr.4312", %"class.std::__1::unique_ptr.4330", %"class.blink::Persistent.4336", i8, i8, i8, %"class.WTF::Vector.906", %"class.std::__1::unique_ptr.4338", %"class.blink::Persistent.4344", %"class.blink::Persistent.4348", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.4284", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.4290", %"class.std::__1::unique_ptr.4296", i32, i32 }
%"class.std::__1::unique_ptr.4284" = type { %"class.std::__1::__compressed_pair.4285" }
%"class.std::__1::__compressed_pair.4285" = type { %"struct.std::__1::__compressed_pair_elem.4286" }
%"struct.std::__1::__compressed_pair_elem.4286" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.4290" = type { %"class.std::__1::__compressed_pair.4291" }
%"class.std::__1::__compressed_pair.4291" = type { %"struct.std::__1::__compressed_pair_elem.4292" }
%"struct.std::__1::__compressed_pair_elem.4292" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.4296" = type { %"class.std::__1::__compressed_pair.4297" }
%"class.std::__1::__compressed_pair.4297" = type { %"struct.std::__1::__compressed_pair_elem.4298" }
%"struct.std::__1::__compressed_pair_elem.4298" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.4302" = type { %"class.WTF::HashTable.4303" }
%"class.WTF::HashTable.4303" = type <{ %"struct.WTF::KeyValuePair.4306"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4306" = type opaque
%"class.WTF::HashMap.4307" = type { %"class.WTF::HashTable.4308" }
%"class.WTF::HashTable.4308" = type <{ %"struct.WTF::KeyValuePair.4311"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4311" = type opaque
%"class.std::__1::unique_ptr.4312" = type { %"class.std::__1::__compressed_pair.4313" }
%"class.std::__1::__compressed_pair.4313" = type { %"struct.std::__1::__compressed_pair_elem.4314" }
%"struct.std::__1::__compressed_pair_elem.4314" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.4320", %class.scoped_refptr.5 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.4315", i8* }
%"class.WTF::HashMap.4315" = type { %"class.WTF::HashTable.4316" }
%"class.WTF::HashTable.4316" = type <{ %"struct.WTF::KeyValuePair.4319"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4319" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.4320" = type { %"class.v8::PersistentValueMapBase.4321" }
%"class.v8::PersistentValueMapBase.4321" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.4322", i8* }
%"class.WTF::HashMap.4322" = type { %"class.WTF::HashTable.4323" }
%"class.WTF::HashTable.4323" = type <{ %"struct.WTF::KeyValuePair.4326"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4326" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.3530", %"class.WTF::String", %"class.std::__1::unique_ptr.3532" }
%"class.WTF::RefCounted.3530" = type { %"class.base::RefCounted.3531" }
%"class.base::RefCounted.3531" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.3532" = type { %"class.std::__1::__compressed_pair.3533" }
%"class.std::__1::__compressed_pair.3533" = type { %"struct.std::__1::__compressed_pair_elem.3534" }
%"struct.std::__1::__compressed_pair_elem.3534" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.3535", %"class.std::__1::unique_ptr.3541", %"class.WTF::Vector.3547", i8, i32 }
%"class.std::__1::unique_ptr.3535" = type { %"class.std::__1::__compressed_pair.3536" }
%"class.std::__1::__compressed_pair.3536" = type { %"struct.std::__1::__compressed_pair_elem.3537" }
%"struct.std::__1::__compressed_pair_elem.3537" = type { %"class.WTF::Vector.2723"* }
%"class.std::__1::unique_ptr.3541" = type { %"class.std::__1::__compressed_pair.3542" }
%"class.std::__1::__compressed_pair.3542" = type { %"struct.std::__1::__compressed_pair_elem.3543" }
%"struct.std::__1::__compressed_pair_elem.3543" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.std::__1::unique_ptr.4330" = type { %"class.std::__1::__compressed_pair.4331" }
%"class.std::__1::__compressed_pair.4331" = type { %"struct.std::__1::__compressed_pair_elem.4332" }
%"struct.std::__1::__compressed_pair_elem.4332" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent.4336" = type { %"class.blink::PersistentBase.4337" }
%"class.blink::PersistentBase.4337" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.4366, %"class.blink::Member.4367", %"class.blink::SelfKeepAlive", %"class.util::TokenType.4369" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.4366 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.4367" = type { %"class.blink::MemberBase.4368" }
%"class.blink::MemberBase.4368" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.4336" }
%"class.util::TokenType.4369" = type { %"class.base::StrongAlias.4370" }
%"class.base::StrongAlias.4370" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.4338" = type { %"class.std::__1::__compressed_pair.4339" }
%"class.std::__1::__compressed_pair.4339" = type { %"struct.std::__1::__compressed_pair_elem.4340" }
%"struct.std::__1::__compressed_pair_elem.4340" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.4344" = type { %"class.blink::PersistentBase.4345" }
%"class.blink::PersistentBase.4345" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.4348" = type { %"class.blink::PersistentBase.4349" }
%"class.blink::PersistentBase.4349" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.4352", i64 }
%"class.blink::HeapVector.4352" = type { %"class.WTF::Vector.4355" }
%"class.WTF::Vector.4355" = type { %"class.WTF::VectorBuffer.4356" }
%"class.WTF::VectorBuffer.4356" = type { %"class.WTF::VectorBufferBase.4357" }
%"class.WTF::VectorBufferBase.4357" = type { %"struct.std::__1::pair.4358"*, i32, i32 }
%"struct.std::__1::pair.4358" = type { %"class.blink::UntracedMember.4359", %"class.blink::Member.4361" }
%"class.blink::UntracedMember.4359" = type { %"class.blink::MemberBase.4360" }
%"class.blink::MemberBase.4360" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.4361" = type { %"class.blink::MemberBase.4362" }
%"class.blink::MemberBase.4362" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.crdtp::detail::ValueMaybe.3427" = type { i8, i8 }
%"class.std::__1::unique_ptr.3367" = type { %"class.std::__1::__compressed_pair.3368" }
%"class.std::__1::__compressed_pair.3368" = type { %"struct.std::__1::__compressed_pair_elem.3369" }
%"struct.std::__1::__compressed_pair_elem.3369" = type { %"class.blink::protocol::DOM::Node"* }
%"class.blink::protocol::DOM::Node" = type { %"class.crdtp::ProtocolObject.3373", i32, %"class.crdtp::detail::ValueMaybe.3365", i32, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.3389", %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::PtrMaybe.3403", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.3403", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.3403", %"class.crdtp::detail::PtrMaybe.3404", %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3366" }
%"class.crdtp::ProtocolObject.3373" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3389" = type { %"class.std::__1::unique_ptr.3390" }
%"class.std::__1::unique_ptr.3390" = type { %"class.std::__1::__compressed_pair.3391" }
%"class.std::__1::__compressed_pair.3391" = type { %"struct.std::__1::__compressed_pair_elem.3392" }
%"struct.std::__1::__compressed_pair_elem.3392" = type { %"class.std::__1::vector.3393"* }
%"class.std::__1::vector.3393" = type { %"class.std::__1::__vector_base.3394" }
%"class.std::__1::__vector_base.3394" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.3395" }
%"class.std::__1::__compressed_pair.3395" = type { %"struct.std::__1::__compressed_pair_elem.3396" }
%"struct.std::__1::__compressed_pair_elem.3396" = type { %"class.WTF::String"* }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.3376" }
%"class.std::__1::unique_ptr.3376" = type { %"class.std::__1::__compressed_pair.3377" }
%"class.std::__1::__compressed_pair.3377" = type { %"struct.std::__1::__compressed_pair_elem.3378" }
%"struct.std::__1::__compressed_pair_elem.3378" = type { %"class.std::__1::vector.3379"* }
%"class.std::__1::vector.3379" = type { %"class.std::__1::__vector_base.3380" }
%"class.std::__1::__vector_base.3380" = type { %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::__compressed_pair.3381" }
%"class.std::__1::__compressed_pair.3381" = type { %"struct.std::__1::__compressed_pair_elem.3382" }
%"struct.std::__1::__compressed_pair_elem.3382" = type { %"class.std::__1::unique_ptr.3367"* }
%"class.crdtp::detail::PtrMaybe.3403" = type { %"class.std::__1::unique_ptr.3367" }
%"class.crdtp::detail::PtrMaybe.3404" = type { %"class.std::__1::unique_ptr.3405" }
%"class.std::__1::unique_ptr.3405" = type { %"class.std::__1::__compressed_pair.3406" }
%"class.std::__1::__compressed_pair.3406" = type { %"struct.std::__1::__compressed_pair_elem.3407" }
%"struct.std::__1::__compressed_pair_elem.3407" = type { %"class.std::__1::vector.3408"* }
%"class.std::__1::vector.3408" = type { %"class.std::__1::__vector_base.3409" }
%"class.std::__1::__vector_base.3409" = type { %"class.std::__1::unique_ptr.3410"*, %"class.std::__1::unique_ptr.3410"*, %"class.std::__1::__compressed_pair.3419" }
%"class.std::__1::unique_ptr.3410" = type { %"class.std::__1::__compressed_pair.3411" }
%"class.std::__1::__compressed_pair.3411" = type { %"struct.std::__1::__compressed_pair_elem.3412" }
%"struct.std::__1::__compressed_pair_elem.3412" = type { %"class.blink::protocol::DOM::BackendNode"* }
%"class.blink::protocol::DOM::BackendNode" = type <{ %"class.crdtp::ProtocolObject.3413", i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.crdtp::ProtocolObject.3413" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.3419" = type { %"struct.std::__1::__compressed_pair_elem.3420" }
%"struct.std::__1::__compressed_pair_elem.3420" = type { %"class.std::__1::unique_ptr.3410"* }
%"class.WTF::StringAppend.3673" = type { %"class.WTF::String", i16* }
%"class.blink::HTMLTemplateElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.3701", i32, [4 x i8] }>
%"class.blink::Member.3701" = type { %"class.blink::MemberBase.3702" }
%"class.blink::MemberBase.3702" = type { %"class.blink::TemplateContentDocumentFragment"* }
%"class.blink::TemplateContentDocumentFragment" = type opaque
%"class.blink::HTMLSlotElement" = type { %"class.blink::HTMLElement", %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335", i8, %"class.blink::HeapLinkedHashSet.3703" }
%"class.blink::HeapLinkedHashSet.3703" = type { %"class.WTF::LinkedHashSet.3706" }
%"class.WTF::LinkedHashSet.3706" = type { %"class.WTF::HashMap.3707", %"class.WTF::VectorBackedLinkedList.3711" }
%"class.WTF::HashMap.3707" = type { %"class.WTF::HashTable.3708" }
%"class.WTF::HashTable.3708" = type <{ %"struct.WTF::KeyValuePair.3710"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3710" = type opaque
%"class.WTF::VectorBackedLinkedList.3711" = type { %"class.WTF::Vector.3712", i32, i32 }
%"class.WTF::Vector.3712" = type { %"class.WTF::VectorBuffer.3713" }
%"class.WTF::VectorBuffer.3713" = type { %"class.WTF::VectorBufferBase.3714" }
%"class.WTF::VectorBufferBase.3714" = type { %"class.WTF::VectorBackedLinkedListNode.3715"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.3715" = type opaque
%"class.blink::Attr" = type { %"class.blink::Node", %"class.blink::Member.343", %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.std::__1::vector.3431" = type { %"class.std::__1::__vector_base.3432" }
%"class.std::__1::__vector_base.3432" = type { %"class.std::__1::unique_ptr.3433"*, %"class.std::__1::unique_ptr.3433"*, %"class.std::__1::__compressed_pair.3442" }
%"class.std::__1::unique_ptr.3433" = type { %"class.std::__1::__compressed_pair.3434" }
%"class.std::__1::__compressed_pair.3434" = type { %"struct.std::__1::__compressed_pair_elem.3435" }
%"struct.std::__1::__compressed_pair_elem.3435" = type { %"class.blink::protocol::DOM::CSSComputedStyleProperty"* }
%"class.blink::protocol::DOM::CSSComputedStyleProperty" = type { %"class.crdtp::ProtocolObject.3436", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.3436" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.3442" = type { %"struct.std::__1::__compressed_pair_elem.3443" }
%"struct.std::__1::__compressed_pair_elem.3443" = type { %"class.std::__1::unique_ptr.3433"* }
%"class.std::__1::unique_ptr.3450" = type { %"class.std::__1::__compressed_pair.3451" }
%"class.std::__1::__compressed_pair.3451" = type { %"struct.std::__1::__compressed_pair_elem.3452" }
%"struct.std::__1::__compressed_pair_elem.3452" = type { %"class.std::__1::vector.2926"* }
%"class.WTF::HashMap.3456" = type { %"class.WTF::HashTable.3457" }
%"class.WTF::HashTable.3457" = type <{ %"struct.WTF::KeyValuePair.3460"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3460" = type { i32, [4 x i8], %"class.WTF::HashSet.2325" }
%"class.absl::optional.3461" = type { %"class.absl::optional_internal::optional_data.3462" }
%"class.absl::optional_internal::optional_data.3462" = type { %"class.absl::optional_internal::optional_data_base.3463" }
%"class.absl::optional_internal::optional_data_base.3463" = type { %"class.absl::optional_internal::optional_data_dtor_base.3464" }
%"class.absl::optional_internal::optional_data_dtor_base.3464" = type { i8, %union.anon.3465 }
%union.anon.3465 = type { %"class.blink::CSSPropertyName" }
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.base::RepeatingCallback.3469" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::CSSComputedStyleDeclaration" = type <{ %"class.blink::CSSStyleDeclaration", %"class.blink::Member.318", i8, [7 x i8], %"class.WTF::AtomicString", i8, [7 x i8] }>
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3998" }
%"class.blink::WeakMember.3998" = type { %"class.blink::MemberBase.916" }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::StaticNodeTypeList" = type { %"class.blink::NodeList", %"class.blink::HeapVector.365" }
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::StringAppend.3475" = type { %"class.WTF::StringAppend.3476", i8* }
%"class.WTF::StringAppend.3476" = type { i8*, %"class.WTF::String" }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet.3477", %"class.blink::HeapHashMap.3484", %"class.blink::Member.3491", %"class.blink::Member.3493" }
%"class.blink::HeapHashSet.3477" = type { %"class.WTF::HashSet.3480" }
%"class.WTF::HashSet.3480" = type { %"class.WTF::HashTable.3481" }
%"class.WTF::HashTable.3481" = type <{ %"class.blink::WeakMember.3483"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3483" = type opaque
%"class.blink::HeapHashMap.3484" = type { %"class.WTF::HashMap.3487" }
%"class.WTF::HashMap.3487" = type { %"class.WTF::HashTable.3488" }
%"class.WTF::HashTable.3488" = type <{ %"struct.WTF::KeyValuePair.3490"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3490" = type opaque
%"class.blink::Member.3491" = type { %"class.blink::MemberBase.3492" }
%"class.blink::MemberBase.3492" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.3493" = type { %"class.blink::MemberBase.3494" }
%"class.blink::MemberBase.3494" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::SVGSVGElement" = type <{ %"class.blink::SVGGraphicsElement", %"class.blink::SVGFitToViewBox", %"class.blink::SVGZoomAndPan.base", [4 x i8], %"class.blink::Member.3503", %"class.blink::Member.3503", %"class.blink::Member.3503", %"class.blink::Member.3503", %"class.blink::Member.3505", %"class.blink::Member.3507", %"class.blink::Member.3513", float, [4 x i8] }>
%"class.blink::SVGGraphicsElement" = type { %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.3497" }
%"class.blink::SVGTests" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3495", %"class.blink::Member.3495" }
%"class.blink::Member.3495" = type { %"class.blink::MemberBase.3496" }
%"class.blink::MemberBase.3496" = type { %"class.blink::SVGStaticStringList"* }
%"class.blink::SVGStaticStringList" = type opaque
%"class.blink::Member.3497" = type { %"class.blink::MemberBase.3498" }
%"class.blink::MemberBase.3498" = type { %"class.blink::SVGAnimatedTransformList"* }
%"class.blink::SVGAnimatedTransformList" = type opaque
%"class.blink::SVGFitToViewBox" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3499", %"class.blink::Member.3501" }
%"class.blink::Member.3499" = type { %"class.blink::MemberBase.3500" }
%"class.blink::MemberBase.3500" = type { %"class.blink::SVGAnimatedRect"* }
%"class.blink::SVGAnimatedRect" = type opaque
%"class.blink::Member.3501" = type { %"class.blink::MemberBase.3502" }
%"class.blink::MemberBase.3502" = type { %"class.blink::SVGAnimatedPreserveAspectRatio"* }
%"class.blink::SVGAnimatedPreserveAspectRatio" = type opaque
%"class.blink::SVGZoomAndPan.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.3503" = type { %"class.blink::MemberBase.3504" }
%"class.blink::MemberBase.3504" = type { %"class.blink::SVGAnimatedLength"* }
%"class.blink::SVGAnimatedLength" = type opaque
%"class.blink::Member.3505" = type { %"class.blink::MemberBase.3506" }
%"class.blink::MemberBase.3506" = type { %"class.blink::SMILTimeContainer"* }
%"class.blink::SMILTimeContainer" = type opaque
%"class.blink::Member.3507" = type { %"class.blink::MemberBase.3508" }
%"class.blink::MemberBase.3508" = type { %"class.blink::SVGPoint"* }
%"class.blink::SVGPoint" = type { %"class.blink::SVGListablePropertyBase", %"class.blink::FloatPoint" }
%"class.blink::SVGListablePropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::UntracedMember.3511" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::UntracedMember.3511" = type { %"class.blink::MemberBase.3512" }
%"class.blink::MemberBase.3512" = type { %"class.blink::SVGListPropertyBase"* }
%"class.blink::SVGListPropertyBase" = type opaque
%"class.blink::Member.3513" = type { %"class.blink::MemberBase.3514" }
%"class.blink::MemberBase.3514" = type { %"class.blink::SVGViewSpec"* }
%"class.blink::SVGViewSpec" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.4016" }
%"class.WTF::Vector.4016" = type { %"class.WTF::VectorBuffer.4017" }
%"class.WTF::VectorBuffer.4017" = type { %"class.WTF::VectorBufferBase.4018", [64 x i8] }
%"class.WTF::VectorBufferBase.4018" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::HeapHashSet.3515" = type { %"class.WTF::HashSet.3518" }
%"class.WTF::HashSet.3518" = type { %"class.WTF::HashTable.3519" }
%"class.WTF::HashTable.3519" = type <{ %"class.blink::Member.3521"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3521" = type { %"class.blink::MemberBase.3993" }
%"class.blink::MemberBase.3993" = type { %"class.blink::ShadowRoot"* }
%"class.blink::DOMPatchSupport" = type { %"class.blink::DOMEditor"*, %"class.blink::Document"*, %"class.blink::HeapHashMap.3522" }
%"class.blink::HeapHashMap.3522" = type { %"class.WTF::HashMap.3525" }
%"class.WTF::HashMap.3525" = type { %"class.WTF::HashTable.3526" }
%"class.WTF::HashTable.3526" = type <{ %"struct.WTF::KeyValuePair.3528"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3528" = type opaque
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.3529 }
%class.scoped_refptr.3529 = type { %"class.blink::ParkableStringImpl"* }
%"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper" = type { %"class.WTF::VectorBackedLinkedListConstIterator", %"struct.WTF::HashTableConstIteratorAdapter.3563" }
%"class.WTF::VectorBackedLinkedListConstIterator" = type { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* }
%"struct.WTF::HashTableConstIteratorAdapter.3563" = type { %"class.WTF::HashTableConstIterator.3564" }
%"class.WTF::HashTableConstIterator.3564" = type { %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"* }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.3342", %class.scoped_refptr.945 }
%"class.blink::XPathResult" = type { %"class.blink::ScriptWrappable", %"class.blink::xpath::Value", i32, %"class.blink::Member.3558", i16, %"class.blink::Member.326", i64 }
%"class.blink::xpath::Value" = type { i32, i8, double, %"class.blink::Member.3554" }
%"class.blink::Member.3554" = type { %"class.blink::MemberBase.3555" }
%"class.blink::MemberBase.3555" = type { %"class.blink::xpath::ValueData"* }
%"class.blink::xpath::ValueData" = type { %"class.WTF::String", %"class.blink::Member.3558" }
%"class.blink::Member.3558" = type { %"class.blink::MemberBase.3559" }
%"class.blink::MemberBase.3559" = type { %"class.blink::xpath::NodeSet"* }
%"class.blink::xpath::NodeSet" = type { i8, i8, %"class.blink::HeapVector.3335" }
%"class.blink::XPathNSResolver" = type { %"class.blink::ScriptWrappable" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.3577", %"class.blink::Member.3579", %"class.blink::Member.3581", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.3577" = type { %"class.blink::MemberBase.3578" }
%"class.blink::MemberBase.3578" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.3579" = type { %"class.blink::MemberBase.3580" }
%"class.blink::MemberBase.3580" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.3581" = type { %"class.blink::MemberBase.3582" }
%"class.blink::MemberBase.3582" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.3585", %"class.blink::Member.3587", %"class.blink::Member.3589", %"class.blink::Member.3591", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.3583", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::Member.3583" = type { %"class.blink::MemberBase.3584" }
%"class.blink::MemberBase.3584" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.3585" = type { %"class.blink::MemberBase.3586" }
%"class.blink::MemberBase.3586" = type { %"class.blink::InputType"* }
%"class.blink::InputType" = type opaque
%"class.blink::Member.3587" = type { %"class.blink::MemberBase.3588" }
%"class.blink::MemberBase.3588" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type opaque
%"class.blink::Member.3589" = type { %"class.blink::MemberBase.3590" }
%"class.blink::MemberBase.3590" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.blink::Member.3591" = type { %"class.blink::MemberBase.3592" }
%"class.blink::MemberBase.3592" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.crdtp::detail::PtrMaybe.3594" = type { %"class.std::__1::unique_ptr.3595" }
%"class.std::__1::unique_ptr.3595" = type { %"class.std::__1::__compressed_pair.3596" }
%"class.std::__1::__compressed_pair.3596" = type { %"struct.std::__1::__compressed_pair_elem.3597" }
%"struct.std::__1::__compressed_pair_elem.3597" = type { %"class.v8_inspector::protocol::Runtime::API::StackTrace"* }
%"class.v8_inspector::protocol::Runtime::API::StackTrace" = type { %"class.v8_inspector::protocol::Exported" }
%"class.v8_inspector::protocol::Exported" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3615" = type { %"class.std::__1::__compressed_pair.3616" }
%"class.std::__1::__compressed_pair.3616" = type { %"struct.std::__1::__compressed_pair_elem.3617" }
%"struct.std::__1::__compressed_pair_elem.3617" = type { %"class.blink::protocol::DOM::BoxModel"* }
%"class.blink::protocol::DOM::BoxModel" = type { %"class.crdtp::ProtocolObject.3618", %"class.std::__1::unique_ptr.3621", %"class.std::__1::unique_ptr.3621", %"class.std::__1::unique_ptr.3621", %"class.std::__1::unique_ptr.3621", i32, i32, %"class.crdtp::detail::PtrMaybe.3628" }
%"class.crdtp::ProtocolObject.3618" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.3621" = type { %"class.std::__1::__compressed_pair.3622" }
%"class.std::__1::__compressed_pair.3622" = type { %"struct.std::__1::__compressed_pair_elem.3623" }
%"struct.std::__1::__compressed_pair_elem.3623" = type { %"class.std::__1::vector.3624"* }
%"class.std::__1::vector.3624" = type { %"class.std::__1::__vector_base.3854" }
%"class.std::__1::__vector_base.3854" = type { double*, double*, %"class.std::__1::__compressed_pair.3855" }
%"class.std::__1::__compressed_pair.3855" = type { %"struct.std::__1::__compressed_pair_elem.3856" }
%"struct.std::__1::__compressed_pair_elem.3856" = type { double* }
%"class.crdtp::detail::PtrMaybe.3628" = type { %"class.std::__1::unique_ptr.3629" }
%"class.std::__1::unique_ptr.3629" = type { %"class.std::__1::__compressed_pair.3630" }
%"class.std::__1::__compressed_pair.3630" = type { %"struct.std::__1::__compressed_pair_elem.3631" }
%"struct.std::__1::__compressed_pair_elem.3631" = type { %"class.blink::protocol::DOM::ShapeOutsideInfo"* }
%"class.blink::protocol::DOM::ShapeOutsideInfo" = type { %"class.crdtp::ProtocolObject.3632", %"class.std::__1::unique_ptr.3621", %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635" }
%"class.crdtp::ProtocolObject.3632" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.3635" = type { %"class.std::__1::__compressed_pair.3636" }
%"class.std::__1::__compressed_pair.3636" = type { %"struct.std::__1::__compressed_pair_elem.3637" }
%"struct.std::__1::__compressed_pair_elem.3637" = type { %"class.std::__1::vector.3638"* }
%"class.std::__1::vector.3638" = type { %"class.std::__1::__vector_base.3639" }
%"class.std::__1::__vector_base.3639" = type { %"class.std::__1::unique_ptr.3640"*, %"class.std::__1::unique_ptr.3640"*, %"class.std::__1::__compressed_pair.3646" }
%"class.std::__1::unique_ptr.3640" = type { %"class.std::__1::__compressed_pair.3641" }
%"class.std::__1::__compressed_pair.3641" = type { %"struct.std::__1::__compressed_pair_elem.3642" }
%"struct.std::__1::__compressed_pair_elem.3642" = type { %"class.blink::protocol::Value"* }
%"class.blink::protocol::Value" = type <{ %"class.crdtp::Serializable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.3646" = type { %"struct.std::__1::__compressed_pair_elem.3647" }
%"struct.std::__1::__compressed_pair_elem.3647" = type { %"class.std::__1::unique_ptr.3640"* }
%"class.std::__1::unique_ptr.3660" = type { %"class.std::__1::__compressed_pair.3661" }
%"class.std::__1::__compressed_pair.3661" = type { %"struct.std::__1::__compressed_pair_elem.3662" }
%"struct.std::__1::__compressed_pair_elem.3662" = type { %"class.std::__1::vector.3663"* }
%"class.std::__1::vector.3663" = type opaque
%"class.std::__1::unique_ptr.3667" = type { %"class.std::__1::__compressed_pair.3668" }
%"class.std::__1::__compressed_pair.3668" = type { %"struct.std::__1::__compressed_pair_elem.3669" }
%"struct.std::__1::__compressed_pair_elem.3669" = type { %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* }
%"class.v8_inspector::protocol::Runtime::API::RemoteObject" = type { %"class.v8_inspector::protocol::Exported" }
%"class.WTF::StringTypeAdapter.4372" = type <{ i16*, i32, [4 x i8] }>
%"class.blink::HTMLPortalElement" = type { %"class.blink::HTMLFrameOwnerElement.base", %"class.blink::Member.3724", i32, i8, %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" }
%"class.blink::HTMLFrameOwnerElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.2117", %"class.blink::Member.3359", %"struct.blink::FramePolicy", %"class.blink::Member.3361", i8, i8 }>
%"class.blink::Member.3724" = type { %"class.blink::MemberBase.3725" }
%"class.blink::MemberBase.3725" = type { %"class.blink::PortalContents"* }
%"class.blink::PortalContents" = type { %"class.blink::mojom::blink::PortalClient", %"class.blink::Member.326", %"class.blink::Member.3728", %"class.blink::Member.3730", %"class.absl::optional.3732", %"class.mojo::AssociatedRemote.3739", %"class.mojo::AssociatedReceiver" }
%"class.blink::mojom::blink::PortalClient" = type { i32 (...)** }
%"class.blink::Member.3728" = type { %"class.blink::MemberBase.3729" }
%"class.blink::MemberBase.3729" = type { %"class.blink::HTMLPortalElement"* }
%"class.blink::Member.3730" = type { %"class.blink::MemberBase.3731" }
%"class.blink::MemberBase.3731" = type { %"class.blink::PortalActivationDelegate"* }
%"class.blink::PortalActivationDelegate" = type opaque
%"class.absl::optional.3732" = type { %"class.absl::optional_internal::optional_data.3733" }
%"class.absl::optional_internal::optional_data.3733" = type { %"class.absl::optional_internal::optional_data_base.3734" }
%"class.absl::optional_internal::optional_data_base.3734" = type { %"class.absl::optional_internal::optional_data_dtor_base.3735" }
%"class.absl::optional_internal::optional_data_dtor_base.3735" = type { i8, %union.anon.3736 }
%union.anon.3736 = type { %"class.util::TokenType.3737" }
%"class.util::TokenType.3737" = type { %"class.base::StrongAlias.3738" }
%"class.base::StrongAlias.3738" = type { %"class.base::UnguessableToken" }
%"class.mojo::AssociatedRemote.3739" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3740" }
%"class.mojo::internal::AssociatedInterfacePtrState.3740" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3741" }
%"class.std::__1::unique_ptr.3741" = type { %"class.std::__1::__compressed_pair.3742" }
%"class.std::__1::__compressed_pair.3742" = type { %"struct.std::__1::__compressed_pair_elem.3743" }
%"struct.std::__1::__compressed_pair_elem.3743" = type { %"class.blink::mojom::blink::PortalProxy"* }
%"class.blink::mojom::blink::PortalProxy" = type { %"class.blink::mojom::blink::Portal", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::Portal" = type { i32 (...)** }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::PortalClientStub", %"class.base::WeakPtrFactory.3747" }
%"class.blink::mojom::blink::PortalClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::PortalClient"* }
%"class.base::WeakPtrFactory.3747" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.v8_inspector::V8InspectorSession::Inspectable" = type { i32 (...)** }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.4021", %"class.blink::Member.4023", %"class.blink::Member.4025", %"class.blink::Member.4044", %"class.blink::Member.4046" }
%"class.blink::Member.4021" = type { %"class.blink::MemberBase.4022" }
%"class.blink::MemberBase.4022" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.4023" = type { %"class.blink::MemberBase.4024" }
%"class.blink::MemberBase.4024" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.4025" = type { %"class.blink::MemberBase.4026" }
%"class.blink::MemberBase.4026" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.4029", %"class.blink::HeapHashSet.4038" }
%"class.blink::HeapVector.4029" = type { %"class.WTF::Vector.4032" }
%"class.WTF::Vector.4032" = type { %"class.WTF::VectorBuffer.4033" }
%"class.WTF::VectorBuffer.4033" = type { %"class.WTF::VectorBufferBase.4034" }
%"class.WTF::VectorBufferBase.4034" = type { %"class.blink::Member.4035"*, i32, i32 }
%"class.blink::Member.4035" = type { %"class.blink::MemberBase.4036" }
%"class.blink::MemberBase.4036" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.4038" = type { %"class.WTF::HashSet.4041" }
%"class.WTF::HashSet.4041" = type { %"class.WTF::HashTable.4042" }
%"class.WTF::HashTable.4042" = type <{ %"class.blink::Member.4035"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.4044" = type { %"class.blink::MemberBase.4045" }
%"class.blink::MemberBase.4045" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.4046" = type { %"class.blink::MemberBase.4047" }
%"class.blink::MemberBase.4047" = type { %"class.blink::HeapHashSet.4048"* }
%"class.blink::HeapHashSet.4048" = type opaque
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.crdtp::detail::PtrMaybe.3761" = type { %"class.std::__1::unique_ptr.3762" }
%"class.std::__1::unique_ptr.3762" = type { %"class.std::__1::__compressed_pair.3763" }
%"class.std::__1::__compressed_pair.3763" = type { %"struct.std::__1::__compressed_pair_elem.3764" }
%"struct.std::__1::__compressed_pair_elem.3764" = type { %"class.blink::protocol::DOM::Rect"* }
%"class.blink::protocol::DOM::Rect" = type { %"class.crdtp::ProtocolObject.3765", double, double, double, double }
%"class.crdtp::ProtocolObject.3765" = type { %"class.crdtp::Serializable" }
%"class.mojo::StructPtr.3771" = type { %"class.std::__1::unique_ptr.3772" }
%"class.std::__1::unique_ptr.3772" = type { %"class.std::__1::__compressed_pair.3773" }
%"class.std::__1::__compressed_pair.3773" = type { %"struct.std::__1::__compressed_pair_elem.3774" }
%"struct.std::__1::__compressed_pair_elem.3774" = type { %"class.blink::mojom::blink::ScrollIntoViewParams"* }
%"class.blink::mojom::blink::ScrollIntoViewParams" = type <{ %"class.mojo::InlinedStructPtr.3775", %"class.mojo::InlinedStructPtr.3775", i32, i8, [3 x i8], i32, i8, i8, [2 x i8], %"class.gfx::RectF", %"class.gfx::RectF", i8, [3 x i8] }>
%"class.mojo::InlinedStructPtr.3775" = type { %"class.blink::mojom::blink::ScrollAlignment", i32 }
%"class.blink::mojom::blink::ScrollAlignment" = type { i32, i32, i32 }
%"class.blink::DocumentPortals" = type { %"class.blink::Supplement", %"class.blink::HeapVector.3779", %"class.blink::Member.3724" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.326" }
%"class.blink::HeapVector.3779" = type { %"class.WTF::Vector.3782" }
%"class.WTF::Vector.3782" = type { %"class.WTF::VectorBuffer.3783" }
%"class.WTF::VectorBuffer.3783" = type { %"class.WTF::VectorBufferBase.3784" }
%"class.WTF::VectorBufferBase.3784" = type { %"class.blink::Member.3724"*, i32, i32 }
%"class.blink::RemoteFrame" = type { %"class.blink::Frame", %"class.blink::ChildFrameCompositor", %"class.blink::mojom::blink::RemoteMainFrame", %"class.blink::mojom::blink::RemoteFrame", %"class.blink::Member.3788", %"class.blink::RemoteSecurityContext", %"class.absl::optional.3794", %"struct.blink::FrameVisualProperties", %class.scoped_refptr.3804, i8, %"class.std::__1::vector.2951", %"class.WTF::String", %"class.viz::FrameSinkId", %"class.std::__1::unique_ptr.3805", %"class.blink::WebFrameWidget"*, %"class.blink::InterfaceRegistry"*, i8, %"class.std::__1::unique_ptr.3811", %"class.mojo::AssociatedRemote.3817", %"class.mojo::AssociatedReceiver.3825", %"class.mojo::AssociatedReceiver.3827", %class.scoped_refptr.963 }
%"class.blink::ChildFrameCompositor" = type { i32 (...)** }
%"class.blink::mojom::blink::RemoteMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::RemoteFrame" = type { i32 (...)** }
%"class.blink::Member.3788" = type { %"class.blink::MemberBase.3789" }
%"class.blink::MemberBase.3789" = type { %"class.blink::RemoteFrameView"* }
%"class.blink::RemoteFrameView" = type <{ %"class.blink::FrameView.base", i8, %"class.blink::Member.3792", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.blink::IntRect", float, %"struct.blink::IntrinsicSizingInfo", i8, i8, i8, [5 x i8] }>
%"class.blink::Member.3792" = type { %"class.blink::MemberBase.3793" }
%"class.blink::MemberBase.3793" = type { %"class.blink::RemoteFrame"* }
%"struct.blink::IntrinsicSizingInfo" = type <{ %"class.blink::FloatSize", %"class.blink::FloatSize", i8, i8, [2 x i8] }>
%"class.blink::RemoteSecurityContext" = type { %"class.blink::SecurityContext" }
%"class.absl::optional.3794" = type { %"class.absl::optional_internal::optional_data.3795" }
%"class.absl::optional_internal::optional_data.3795" = type { %"class.absl::optional_internal::optional_data_base.3796" }
%"class.absl::optional_internal::optional_data_base.3796" = type { %"class.absl::optional_internal::optional_data_dtor_base.3797" }
%"class.absl::optional_internal::optional_data_dtor_base.3797" = type { i8, %union.anon.3798 }
%union.anon.3798 = type { %"struct.blink::FrameVisualProperties" }
%"struct.blink::FrameVisualProperties" = type { %"struct.blink::ScreenInfo", i8, i8, i32, double, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.std::__1::vector.824", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", %"class.viz::LocalSurfaceId" }
%"struct.blink::ScreenInfo" = type { float, %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32, %"class.gfx::Rect", %"class.gfx::Rect", i32, i16, i8, i8, i8, i64 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.3799" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.3799" = type { %"class.absl::optional_internal::optional_data.3800" }
%"class.absl::optional_internal::optional_data.3800" = type { %"class.absl::optional_internal::optional_data_base.3801" }
%"class.absl::optional_internal::optional_data_base.3801" = type { %"class.absl::optional_internal::optional_data_dtor_base.3802" }
%"class.absl::optional_internal::optional_data_dtor_base.3802" = type { i8, %union.anon.3803 }
%union.anon.3803 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%class.scoped_refptr.3804 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type opaque
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.3805" = type { %"class.std::__1::__compressed_pair.3806" }
%"class.std::__1::__compressed_pair.3806" = type { %"struct.std::__1::__compressed_pair_elem.3807" }
%"struct.std::__1::__compressed_pair_elem.3807" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type <{ %"class.viz::LocalSurfaceId", i8, i8, [6 x i8] }>
%"class.blink::WebFrameWidget" = type opaque
%"class.std::__1::unique_ptr.3811" = type { %"class.std::__1::__compressed_pair.3812" }
%"class.std::__1::__compressed_pair.3812" = type { %"struct.std::__1::__compressed_pair_elem.3813" }
%"struct.std::__1::__compressed_pair_elem.3813" = type { %"class.blink::ChildFrameCompositingHelper"* }
%"class.blink::ChildFrameCompositingHelper" = type opaque
%"class.mojo::AssociatedRemote.3817" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3818" }
%"class.mojo::internal::AssociatedInterfacePtrState.3818" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3819" }
%"class.std::__1::unique_ptr.3819" = type { %"class.std::__1::__compressed_pair.3820" }
%"class.std::__1::__compressed_pair.3820" = type { %"struct.std::__1::__compressed_pair_elem.3821" }
%"struct.std::__1::__compressed_pair_elem.3821" = type { %"class.blink::mojom::blink::RemoteFrameHostProxy"* }
%"class.blink::mojom::blink::RemoteFrameHostProxy" = type { %"class.blink::mojom::blink::RemoteFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::RemoteFrameHost" = type { i32 (...)** }
%"class.mojo::AssociatedReceiver.3825" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::RemoteFrameStub", %"class.base::WeakPtrFactory.3826" }
%"class.blink::mojom::blink::RemoteFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::RemoteFrame"* }
%"class.base::WeakPtrFactory.3826" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::AssociatedReceiver.3827" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::RemoteMainFrameStub", %"class.base::WeakPtrFactory.3828" }
%"class.blink::mojom::blink::RemoteMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::RemoteMainFrame"* }
%"class.base::WeakPtrFactory.3828" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.crdtp::UberDispatcher" = type { i32 (...)**, %"class.crdtp::FrontendChannel"*, %"class.std::__1::vector.3838", %"class.std::__1::vector.3846" }
%"class.std::__1::vector.3838" = type { %"class.std::__1::__vector_base.3839" }
%"class.std::__1::__vector_base.3839" = type { %"struct.std::__1::pair.3840"*, %"struct.std::__1::pair.3840"*, %"class.std::__1::__compressed_pair.3841" }
%"struct.std::__1::pair.3840" = type opaque
%"class.std::__1::__compressed_pair.3841" = type { %"struct.std::__1::__compressed_pair_elem.3842" }
%"struct.std::__1::__compressed_pair_elem.3842" = type { %"struct.std::__1::pair.3840"* }
%"class.std::__1::vector.3846" = type { %"class.std::__1::__vector_base.3847" }
%"class.std::__1::__vector_base.3847" = type { %"struct.std::__1::pair.3848"*, %"struct.std::__1::pair.3848"*, %"class.std::__1::__compressed_pair.3849" }
%"struct.std::__1::pair.3848" = type opaque
%"class.std::__1::__compressed_pair.3849" = type { %"struct.std::__1::__compressed_pair_elem.3850" }
%"struct.std::__1::__compressed_pair_elem.3850" = type { %"struct.std::__1::pair.3848"* }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.base::WeakPtr.4068" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::WeakPersistent.4069" = type { %"class.blink::PersistentBase.4070" }
%"class.blink::PersistentBase.4070" = type { %"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::PersistentNodePtr" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.4071" }
%"class.std::__1::__tuple_leaf" = type { %"class.base::WeakPtr.4068" }
%"class.std::__1::__tuple_leaf.4071" = type { %"class.blink::WeakPersistent.4069" }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapVectorBacking.4086" = type { i8 }
%"class.blink::HeapVectorBacking.4115" = type { i8 }
%"class.blink::HeapHashTableBacking.4119" = type { i8 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.4001", %"class.blink::FreeList", %"class.WTF::Vector.4006" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.4000" }
%"struct.std::__1::array.4000" = type { [256 x i8] }
%"class.WTF::Vector.4001" = type { %"class.WTF::VectorBuffer.4002" }
%"class.WTF::VectorBuffer.4002" = type { %"class.WTF::VectorBufferBase.4003" }
%"class.WTF::VectorBufferBase.4003" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.4006" = type { %"class.WTF::VectorBuffer.4007" }
%"class.WTF::VectorBuffer.4007" = type { %"class.WTF::VectorBufferBase.4008" }
%"class.WTF::VectorBufferBase.4008" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::HeapVectorBacking.4139" = type { i8 }
%"class.blink::HeapHashTableBacking.4104" = type { i8 }
%"class.blink::HeapHashTableBacking.4147" = type { i8 }
%"class.blink::HeapHashTableBacking.4160" = type { i8 }
%"class.blink::HeapVectorBacking.4250" = type { i8 }
%"class.blink::HeapHashTableBacking.4257" = type { i8 }
%"class.blink::HeapHashTableBacking.4270" = type { i8 }
%"class.blink::HeapHashTableBacking.4383" = type { i8 }
%"class.blink::InspectableNode" = type <{ %"class.v8_inspector::V8InspectorSession::Inspectable", i32, [4 x i8] }>

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev = comdat any

$_ZN5blink19InspectorAgentState5FieldD2Ev = comdat any

$_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_ = comdat any

$_ZN3WTF7HashSetIiNS_7IntHashIiEENS_10HashTraitsIiEENS_18PartitionAllocatorEE5eraseERKi = comdat any

$_ZN3WTF7HashMapIiiNS_7IntHashIiEENS_10HashTraitsIiEES4_NS_18PartitionAllocatorEE5eraseERKi = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv = comdat any

$_ZN5blink15CSSPropertyName4FromEPKNS_16ExecutionContextERKN3WTF6StringE = comdat any

$_ZN5blink29DummyExceptionStateForTestingD2Ev = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKDsEcvS1_Ev = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE = comdat any

$_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE7DisposeEv = comdat any

$_ZN5blink19InspectorAgentState5FieldD0Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEED2Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEED0Ev = comdat any

$_ZN5blink14InspectorAgent7RestoreEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE7disableEv = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEED1Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEED0Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE7disableEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E29DeleteAllBucketsAndDeallocateEPSB_j = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_ = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEED0Ev = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEE5FiredEv = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEE16BindTimerClosureEN4base7WeakPtrINS_9TimerBaseEEE = comdat any

$_ZN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEE21RunInternalTrampolineEN4base7WeakPtrINS_9TimerBaseEEEPS1_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_26InspectorRevalidateDOMTaskEEJS6_NS4_14WeakPersistentIS7_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS3_26InspectorRevalidateDOMTaskEEJS5_NS3_14WeakPersistentIS6_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN4base7WeakPtrIN5blink9TimerBaseEEENS5_14WeakPersistentINS5_26InspectorRevalidateDOMTaskEEEEEC2IJLm0ELm1EEJS7_SA_EJEJEJS7_SA_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSE_IJDpT2_EEEDpOT3_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_26InspectorRevalidateDOMTaskELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_26InspectorRevalidateDOMTaskELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17InspectorDOMAgentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_26InspectorRevalidateDOMTaskEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_26InspectorRevalidateDOMTaskEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8DocumentEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_17InspectorDOMAgent11DOMListenerEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE5eraseEPKS5_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashMapINS2_INS1_4NodeEEEiNS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS8_IiEEEEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS1_INS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEEENS5_12VectorTraitsISC_EEE14AllocateObjectISF_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RiEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_iEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IiEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERiRPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsINS1_10HashTraitsIiEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISK_SH_SL_EERiRPSC_EENS_18HashTableAddResultISM_SE_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE6ExpandEPSE_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE12ExpandBufferEjPSE_Rb = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE8RehashToEPSE_jSN_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS4_INS_4NodeEEEiNS1_10MemberHashIS6_EENS1_10HashTraitsIS7_EENSA_IiEEEEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsISC_NSA_ISE_EEEESC_NS_13HeapAllocatorEEEE14AllocateObjectISO_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE5eraseEPKSE_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSC_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistoryEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16InspectorHistoryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_16InspectorHistoryEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_9DOMEditorEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_9DOMEditorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_9DOMEditorEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E6insertINS_17HashMapTranslatorISI_SE_S9_EERS2_SA_EENS_18HashTableAddResultISJ_SB_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E6ExpandEPSB_ = comdat any

$_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E8RehashToEPSB_jSK_ = comdat any

$_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E8ReinsertEOSB_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairIN5blink13CSSPropertyIDENS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEES9_NS_18HashMapValueTraitsINS7_IS3_EENS7_ISA_EEEELb1EE4MoveEOSB_RSB_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN3WTF7HashMapIN5blink13CSSPropertyIDENS3_7HashSetINS3_6StringENS3_10StringHashENS3_10HashTraitsIS8_EENS3_18PartitionAllocatorEEENS3_7IntHashIS6_EENSA_IS6_EENSA_ISD_EESC_EEPNS5_4NodeEEJNS3_17UnretainedWrapperISI_EEEEEFbSM_EE3RunEPNS0_13BindStateBaseESM_ = comdat any

$_ZN4base8internal9BindStateIPFbPKN3WTF7HashMapIN5blink13CSSPropertyIDENS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS7_EENS2_18PartitionAllocatorEEENS2_7IntHashIS5_EENS9_IS5_EENS9_ISC_EESB_EEPNS4_4NodeEEJNS2_17UnretainedWrapperISH_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3DOM4NodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKNS_12AtomicStringESD_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_ = comdat any

$_ZNK3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashMapINS2_INS1_4NodeEEEiNS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS8_IiEEEEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPSB_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashMapINS2_INS1_4NodeEEEiNS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS8_IiEEEEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN3WTF15ConstructTraitsINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEENS_12VectorTraitsIS7_EES6_E25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEES0_EEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6insertIRPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_ = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

$_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

$_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIPNS1_7ElementEEENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6insertIPNS1_7ElementEEENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPNS1_7ElementERKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERS1_PS8_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE12ExpandBufferEjPSA_Rb = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE8RehashToEPSA_jSK_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_10HeapVectorINS5_INS_4NodeEEELj0EEEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_4NodeEEELj0EEEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_10HeapVectorINS6_INS5_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSG_ISB_EEEESH_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE5eraseEPKSA_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKDsE6lengthEv = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERiSF_EENS_18HashTableAddResultISB_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKNS1_12AtomicStringEEEEvDpOT_ = comdat any

$_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiiEENS_18HashTableAddResultIS7_iEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3DOM11BackendNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_26InspectorRevalidateDOMTaskEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_26InspectorRevalidateDOMTaskEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_26InspectorRevalidateDOMTaskEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17InspectorDOMAgent23InspectorSourceLocationEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE7GetNameEPKv = comdat any

$_ZNK5blink17InspectorDOMAgent23InspectorSourceLocation5TraceEPNS_7VisitorE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERPS3_PS8_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE6ExpandEPSA_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_4NodeEEENS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_ISA_EEEEEEvPT_ = comdat any

$_ZN5blink17MemberTraceTraitsINS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE12ExpandBufferEjPSA_Rb = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE8RehashToEPSA_jSL_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS1_12KeyValuePairIS5_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberINS3_4NodeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPSA_j = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink15InspectableNode3getEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink15InspectableNodeD0Ev = comdat any

$_ZN12v8_inspector18V8InspectorSession11InspectableD2Ev = comdat any

$_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_4NodeEEENS_12KeyValuePairIS5_NS2_6MemberINS2_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE1EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink19InspectorAgentState5FieldE = comdat any

$_ZTVN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16InspectorHistoryEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16InspectorHistoryEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_9DOMEditorEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_9DOMEditorEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_26InspectorRevalidateDOMTaskEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_26InspectorRevalidateDOMTaskEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink17InspectorDOMAgent23InspectorSourceLocationE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink15InspectableNodeE = comdat any

@.str = private unnamed_addr constant [33 x i8] c"ScheduleStyleAttrRevalidationFor\00", align 1
@.str.1 = private unnamed_addr constant [71 x i8] c"../../third_party/blink/renderer/core/inspector/inspector_dom_agent.cc\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN5blink8protocol3DOM14PseudoTypeEnum9FirstLineE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum11FirstLetterE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum6BeforeE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum5AfterE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum6MarkerE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum8BackdropE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum9SelectionE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum10TargetTextE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum13SpellingErrorE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum12GrammarErrorE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum18FirstLineInheritedE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum9ScrollbarE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum14ScrollbarThumbE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum15ScrollbarButtonE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum14ScrollbarTrackE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum19ScrollbarTrackPieceE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum15ScrollbarCornerE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum7ResizerE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM14PseudoTypeEnum15InputListButtonE = external constant [0 x i8], align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN5blink17InspectorDOMAgentE = hidden unnamed_addr constant { [53 x i8*], [47 x i8*] } { [53 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorDOMAgent"*)* @_ZN5blink17InspectorDOMAgentD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorDOMAgent"*)* @_ZN5blink17InspectorDOMAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorDOMAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink17InspectorDOMAgent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorDOMAgent"*)* @_ZN5blink17InspectorDOMAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*)* @_ZN5blink17InspectorDOMAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*)* @_ZN5blink17InspectorDOMAgent6enableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3427"*, %"class.std::__1::unique_ptr.3367"*)* @_ZN5blink17InspectorDOMAgent11getDocumentEN5crdtp6detail10ValueMaybeIiEENS3_IbEEPNSt3__110unique_ptrINS_8protocol3DOM4NodeENS6_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.std::__1::vector.3431"*, %"class.crdtp::detail::ValueMaybe.3427"*, %"class.std::__1::unique_ptr.3450"*)* @_ZN5blink17InspectorDOMAgent25getNodesForSubtreeByStyleEiNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3DOM24CSSComputedStylePropertyENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEN5crdtp6detail10ValueMaybeIbEEPNS2_INS3_IiNSA_IiEEEENS7_ISK_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3427"*, %"class.std::__1::unique_ptr.3376"*)* @_ZN5blink17InspectorDOMAgent20getFlattenedDocumentEN5crdtp6detail10ValueMaybeIiEENS3_IbEEPNSt3__110unique_ptrINS6_6vectorINS7_INS_8protocol3DOM4NodeENS6_14default_deleteISB_EEEENS6_9allocatorISE_EEEENSC_ISH_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.std::__1::unique_ptr.3390"*)* @_ZN5blink17InspectorDOMAgent28collectClassNamesFromSubtreeEiPNSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3427"*)* @_ZN5blink17InspectorDOMAgent17requestChildNodesEiN5crdtp6detail10ValueMaybeIiEENS3_IbEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*, i32*)* @_ZN5blink17InspectorDOMAgent13querySelectorEiRKN3WTF6StringEPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*, %"class.std::__1::unique_ptr.3450"*)* @_ZN5blink17InspectorDOMAgent16querySelectorAllEiRKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIiNS5_9allocatorIiEEEENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*, i32*)* @_ZN5blink17InspectorDOMAgent11setNodeNameEiRKN3WTF6StringEPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*)* @_ZN5blink17InspectorDOMAgent12setNodeValueEiRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32)* @_ZN5blink17InspectorDOMAgent10removeNodeEi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink17InspectorDOMAgent17setAttributeValueEiRKN3WTF6StringES4_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.3366"*)* @_ZN5blink17InspectorDOMAgent19setAttributesAsTextEiRKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*)* @_ZN5blink17InspectorDOMAgent15removeAttributeEiRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*, %"class.WTF::String"*)* @_ZN5blink17InspectorDOMAgent12getOuterHTMLEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEEPS6_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*)* @_ZN5blink17InspectorDOMAgent12setOuterHTMLEiRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.3427"*, %"class.WTF::String"*, i32*)* @_ZN5blink17InspectorDOMAgent13performSearchERKN3WTF6StringEN5crdtp6detail10ValueMaybeIbEEPS2_Pi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"*, i32, i32, %"class.std::__1::unique_ptr.3450"*)* @_ZN5blink17InspectorDOMAgent16getSearchResultsERKN3WTF6StringEiiPNSt3__110unique_ptrINS5_6vectorIiNS5_9allocatorIiEEEENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"*)* @_ZN5blink17InspectorDOMAgent20discardSearchResultsERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"*, i32*)* @_ZN5blink17InspectorDOMAgent11requestNodeERKN3WTF6StringEPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"*, i32*)* @_ZN5blink17InspectorDOMAgent24pushNodeByPathToFrontendERKN3WTF6StringEPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.std::__1::vector.2926"*, %"class.std::__1::unique_ptr.3450"*)* @_ZN5blink17InspectorDOMAgent31pushNodesByBackendIdsToFrontendENSt3__110unique_ptrINS1_6vectorIiNS1_9allocatorIiEEEENS1_14default_deleteIS6_EEEEPS9_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32)* @_ZN5blink17InspectorDOMAgent16setInspectedNodeEi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.std::__1::unique_ptr.3667"*)* @_ZN5blink17InspectorDOMAgent11resolveNodeEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEES4_PNSt3__110unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS8_14default_deleteISE_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.std::__1::unique_ptr.3390"*)* @_ZN5blink17InspectorDOMAgent13getAttributesEiPNSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, i32, %"class.crdtp::detail::ValueMaybe.3365"*, i32*)* @_ZN5blink17InspectorDOMAgent6copyToEiiN5crdtp6detail10ValueMaybeIiEEPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, i32, %"class.crdtp::detail::ValueMaybe.3365"*, i32*)* @_ZN5blink17InspectorDOMAgent6moveToEiiN5crdtp6detail10ValueMaybeIiEEPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*)* @_ZN5blink17InspectorDOMAgent4undoEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*)* @_ZN5blink17InspectorDOMAgent4redoEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*)* @_ZN5blink17InspectorDOMAgent17markUndoableStateEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*)* @_ZN5blink17InspectorDOMAgent5focusEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.std::__1::vector.3393"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*)* @_ZN5blink17InspectorDOMAgent17setFileInputFilesENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEEN5crdtp6detail10ValueMaybeIiEESF_NSE_IS5_EE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i1)* @_ZN5blink17InspectorDOMAgent25setNodeStackTracesEnabledEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.crdtp::detail::PtrMaybe.3594"*)* @_ZN5blink17InspectorDOMAgent18getNodeStackTracesEiPN5crdtp6detail8PtrMaybeIN12v8_inspector8protocol7Runtime3API10StackTraceEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*, %"class.std::__1::unique_ptr.3615"*)* @_ZN5blink17InspectorDOMAgent11getBoxModelEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEEPNSt3__110unique_ptrINS_8protocol3DOM8BoxModelENS8_14default_deleteISC_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*, %"class.std::__1::unique_ptr.3660"*)* @_ZN5blink17InspectorDOMAgent15getContentQuadsEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEEPNSt3__110unique_ptrINS8_6vectorINS9_INSA_IdNS8_9allocatorIdEEEENS8_14default_deleteISD_EEEENSB_ISG_EEEENSE_ISI_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, i32, %"class.crdtp::detail::ValueMaybe.3427"*, %"class.crdtp::detail::ValueMaybe.3427"*, i32*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.3365"*)* @_ZN5blink17InspectorDOMAgent18getNodeForLocationEiiN5crdtp6detail10ValueMaybeIbEES4_PiPN3WTF6StringEPNS3_IiEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, i32*)* @_ZN5blink17InspectorDOMAgent19getRelayoutBoundaryEiPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3427"*, %"class.std::__1::unique_ptr.3367"*)* @_ZN5blink17InspectorDOMAgent12describeNodeEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEES4_NS3_IbEEPNSt3__110unique_ptrINS_8protocol3DOM4NodeENS9_14default_deleteISD_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*, %"class.crdtp::detail::PtrMaybe.3761"*)* @_ZN5blink17InspectorDOMAgent22scrollIntoViewIfNeededEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEENS2_8PtrMaybeINS_8protocol3DOM4RectEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"*, i32*, %"class.crdtp::detail::ValueMaybe.3365"*)* @_ZN5blink17InspectorDOMAgent13getFrameOwnerERKN3WTF6StringEPiPN5crdtp6detail10ValueMaybeIiEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink17InspectorDOMAgent11getFileInfoERKN3WTF6StringEPS2_ to i8*)], [47 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorDOMAgent"*)* @_ZThn8_N5blink17InspectorDOMAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorDOMAgent"*)* @_ZThn8_N5blink17InspectorDOMAgentD0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.std::__1::unique_ptr.3390"*)* @_ZThn8_N5blink17InspectorDOMAgent28collectClassNamesFromSubtreeEiPNSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, i32, %"class.crdtp::detail::ValueMaybe.3365"*, i32*)* @_ZThn8_N5blink17InspectorDOMAgent6copyToEiiN5crdtp6detail10ValueMaybeIiEEPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3427"*, %"class.std::__1::unique_ptr.3367"*)* @_ZThn8_N5blink17InspectorDOMAgent12describeNodeEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEES4_NS3_IbEEPNSt3__110unique_ptrINS_8protocol3DOM4NodeENS9_14default_deleteISD_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*, %"class.crdtp::detail::PtrMaybe.3761"*)* @_ZThn8_N5blink17InspectorDOMAgent22scrollIntoViewIfNeededEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEENS2_8PtrMaybeINS_8protocol3DOM4RectEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*)* @_ZThn8_N5blink17InspectorDOMAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"*)* @_ZThn8_N5blink17InspectorDOMAgent20discardSearchResultsERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*)* @_ZThn8_N5blink17InspectorDOMAgent6enableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*)* @_ZThn8_N5blink17InspectorDOMAgent5focusEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.std::__1::unique_ptr.3390"*)* @_ZThn8_N5blink17InspectorDOMAgent13getAttributesEiPNSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*, %"class.std::__1::unique_ptr.3615"*)* @_ZThn8_N5blink17InspectorDOMAgent11getBoxModelEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEEPNSt3__110unique_ptrINS_8protocol3DOM8BoxModelENS8_14default_deleteISC_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*, %"class.std::__1::unique_ptr.3660"*)* @_ZThn8_N5blink17InspectorDOMAgent15getContentQuadsEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEEPNSt3__110unique_ptrINS8_6vectorINS9_INSA_IdNS8_9allocatorIdEEEENS8_14default_deleteISD_EEEENSB_ISG_EEEENSE_ISI_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3427"*, %"class.std::__1::unique_ptr.3367"*)* @_ZThn8_N5blink17InspectorDOMAgent11getDocumentEN5crdtp6detail10ValueMaybeIiEENS3_IbEEPNSt3__110unique_ptrINS_8protocol3DOM4NodeENS6_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3427"*, %"class.std::__1::unique_ptr.3376"*)* @_ZThn8_N5blink17InspectorDOMAgent20getFlattenedDocumentEN5crdtp6detail10ValueMaybeIiEENS3_IbEEPNSt3__110unique_ptrINS6_6vectorINS7_INS_8protocol3DOM4NodeENS6_14default_deleteISB_EEEENS6_9allocatorISE_EEEENSC_ISH_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.std::__1::vector.3431"*, %"class.crdtp::detail::ValueMaybe.3427"*, %"class.std::__1::unique_ptr.3450"*)* @_ZThn8_N5blink17InspectorDOMAgent25getNodesForSubtreeByStyleEiNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3DOM24CSSComputedStylePropertyENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEN5crdtp6detail10ValueMaybeIbEEPNS2_INS3_IiNSA_IiEEEENS7_ISK_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, i32, %"class.crdtp::detail::ValueMaybe.3427"*, %"class.crdtp::detail::ValueMaybe.3427"*, i32*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.3365"*)* @_ZThn8_N5blink17InspectorDOMAgent18getNodeForLocationEiiN5crdtp6detail10ValueMaybeIbEES4_PiPN3WTF6StringEPNS3_IiEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*, %"class.WTF::String"*)* @_ZThn8_N5blink17InspectorDOMAgent12getOuterHTMLEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEEPS6_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, i32*)* @_ZThn8_N5blink17InspectorDOMAgent19getRelayoutBoundaryEiPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"*, i32, i32, %"class.std::__1::unique_ptr.3450"*)* @_ZThn8_N5blink17InspectorDOMAgent16getSearchResultsERKN3WTF6StringEiiPNSt3__110unique_ptrINS5_6vectorIiNS5_9allocatorIiEEEENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*)* @_ZThn8_N5blink17InspectorDOMAgent17markUndoableStateEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, i32, %"class.crdtp::detail::ValueMaybe.3365"*, i32*)* @_ZThn8_N5blink17InspectorDOMAgent6moveToEiiN5crdtp6detail10ValueMaybeIiEEPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.3427"*, %"class.WTF::String"*, i32*)* @_ZThn8_N5blink17InspectorDOMAgent13performSearchERKN3WTF6StringEN5crdtp6detail10ValueMaybeIbEEPS2_Pi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"*, i32*)* @_ZThn8_N5blink17InspectorDOMAgent24pushNodeByPathToFrontendERKN3WTF6StringEPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.std::__1::vector.2926"*, %"class.std::__1::unique_ptr.3450"*)* @_ZThn8_N5blink17InspectorDOMAgent31pushNodesByBackendIdsToFrontendENSt3__110unique_ptrINS1_6vectorIiNS1_9allocatorIiEEEENS1_14default_deleteIS6_EEEEPS9_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*, i32*)* @_ZThn8_N5blink17InspectorDOMAgent13querySelectorEiRKN3WTF6StringEPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*, %"class.std::__1::unique_ptr.3450"*)* @_ZThn8_N5blink17InspectorDOMAgent16querySelectorAllEiRKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIiNS5_9allocatorIiEEEENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*)* @_ZThn8_N5blink17InspectorDOMAgent4redoEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*)* @_ZThn8_N5blink17InspectorDOMAgent15removeAttributeEiRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32)* @_ZThn8_N5blink17InspectorDOMAgent10removeNodeEi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3427"*)* @_ZThn8_N5blink17InspectorDOMAgent17requestChildNodesEiN5crdtp6detail10ValueMaybeIiEENS3_IbEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"*, i32*)* @_ZThn8_N5blink17InspectorDOMAgent11requestNodeERKN3WTF6StringEPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.std::__1::unique_ptr.3667"*)* @_ZThn8_N5blink17InspectorDOMAgent11resolveNodeEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEES4_PNSt3__110unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS8_14default_deleteISE_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZThn8_N5blink17InspectorDOMAgent17setAttributeValueEiRKN3WTF6StringES4_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.3366"*)* @_ZThn8_N5blink17InspectorDOMAgent19setAttributesAsTextEiRKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.std::__1::vector.3393"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3365"*, %"class.crdtp::detail::ValueMaybe.3366"*)* @_ZThn8_N5blink17InspectorDOMAgent17setFileInputFilesENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEEN5crdtp6detail10ValueMaybeIiEESF_NSE_IS5_EE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i1)* @_ZThn8_N5blink17InspectorDOMAgent25setNodeStackTracesEnabledEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.crdtp::detail::PtrMaybe.3594"*)* @_ZThn8_N5blink17InspectorDOMAgent18getNodeStackTracesEiPN5crdtp6detail8PtrMaybeIN12v8_inspector8protocol7Runtime3API10StackTraceEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZThn8_N5blink17InspectorDOMAgent11getFileInfoERKN3WTF6StringEPS2_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32)* @_ZThn8_N5blink17InspectorDOMAgent16setInspectedNodeEi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*, i32*)* @_ZThn8_N5blink17InspectorDOMAgent11setNodeNameEiRKN3WTF6StringEPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*)* @_ZThn8_N5blink17InspectorDOMAgent12setNodeValueEiRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"*)* @_ZThn8_N5blink17InspectorDOMAgent12setOuterHTMLEiRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*)* @_ZThn8_N5blink17InspectorDOMAgent4undoEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"*, i32*, %"class.crdtp::detail::ValueMaybe.3365"*)* @_ZThn8_N5blink17InspectorDOMAgent13getFrameOwnerERKN3WTF6StringEPiPN5crdtp6detail10ValueMaybeIiEE to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [34 x i8] c"Could not find node with given id\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"No node found for given backend id\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"Either nodeId, backendNodeId or objectId must be specified\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"Node is not an Element\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"Cannot edit shadow roots\00", align 1
@.str.10 = private unnamed_addr constant [47 x i8] c"Cannot edit nodes from user-agent shadow trees\00", align 1
@.str.11 = private unnamed_addr constant [28 x i8] c"Cannot edit pseudo elements\00", align 1
@.str.12 = private unnamed_addr constant [48 x i8] c"Anchor node must be child of the target element\00", align 1
@.str.13 = private unnamed_addr constant [50 x i8] c"Cannot edit elements from user-agent shadow trees\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"DOM agent hasn't been enabled\00", align 1
@.str.15 = private unnamed_addr constant [26 x i8] c"Document is not available\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"Invalid CSS property name\00", align 1
@.str.17 = private unnamed_addr constant [37 x i8] c"No suitable node with given id found\00", align 1
@.str.18 = private unnamed_addr constant [70 x i8] c"Please provide a positive integer as a depth or -1 for entire subtree\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"Not a container node\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"DOM Error while querying\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"<span \00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"></span>\00", align 1
@.str.23 = private unnamed_addr constant [36 x i8] c"Could not parse value as attributes\00", align 1
@.str.24 = private unnamed_addr constant [28 x i8] c"Cannot remove detached node\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"Not an HTML/XML document\00", align 1
@.str.26 = private unnamed_addr constant [33 x i8] c"Can only set value of text nodes\00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c"DOM agent is not enabled\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"</\00", align 1
@.str.29 = private unnamed_addr constant [38 x i8] c"No search session with given id found\00", align 1
@.str.30 = private unnamed_addr constant [28 x i8] c"Invalid search result range\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"Object id doesn't reference a Node\00", align 1
@.str.32 = private unnamed_addr constant [52 x i8] c"Couldn't convert object with given objectId to Node\00", align 1
@.str.33 = private unnamed_addr constant [21 x i8] c"Failed to clone node\00", align 1
@.str.34 = private unnamed_addr constant [44 x i8] c"Unable to move node into self or descendant\00", align 1
@.str.35 = private unnamed_addr constant [25 x i8] c"Element is not focusable\00", align 1
@_ZN5blink16input_type_names5kFileE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.36 = private unnamed_addr constant [33 x i8] c"Node is not a file input element\00", align 1
@.str.37 = private unnamed_addr constant [29 x i8] c"Could not compute box model.\00", align 1
@.str.38 = private unnamed_addr constant [33 x i8] c"Could not compute content quads.\00", align 1
@__const._ZN5blink17InspectorDOMAgent18getNodeForLocationEiiN5crdtp6detail10ValueMaybeIbEES4_PiPN3WTF6StringEPNS3_IiEE.location = private unnamed_addr constant %"class.blink::HitTestLocation" <{ %"struct.blink::PhysicalOffset" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } }, %"struct.blink::PhysicalRect" { %"struct.blink::PhysicalOffset" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } }, %"struct.blink::PhysicalSize" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } } }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatQuad" { %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, align 4
@.str.39 = private unnamed_addr constant [32 x i8] c"No node found at given location\00", align 1
@.str.40 = private unnamed_addr constant [50 x i8] c"Either nodeId or backendNodeId must be specified.\00", align 1
@.str.41 = private unnamed_addr constant [28 x i8] c"No node with given id found\00", align 1
@.str.42 = private unnamed_addr constant [51 x i8] c"Node with given id does not belong to the document\00", align 1
@_ZN5blink8protocol3DOM18ShadowRootTypeEnum9UserAgentE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM18ShadowRootTypeEnum4OpenE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM18ShadowRootTypeEnum6ClosedE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM21CompatibilityModeEnum10QuirksModeE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM21CompatibilityModeEnum17LimitedQuirksModeE = external constant [0 x i8], align 1
@_ZN5blink8protocol3DOM21CompatibilityModeEnum12NoQuirksModeE = external constant [0 x i8], align 1
@_ZN5blink12_GLOBAL__N_114kEllipsisUCharE = internal constant [2 x i16] [i16 8230, i16 0], align 2
@.str.43 = private unnamed_addr constant [30 x i8] c"No node with given path found\00", align 1
@.str.44 = private unnamed_addr constant [37 x i8] c"Document needs to be requested first\00", align 1
@.str.45 = private unnamed_addr constant [57 x i8] c"No layout object for node, perhaps orphan or hidden node\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"Node not found\00", align 1
@.str.47 = private unnamed_addr constant [31 x i8] c"Node is detached from document\00", align 1
@.str.48 = private unnamed_addr constant [35 x i8] c"Node does not have a layout object\00", align 1
@.str.49 = private unnamed_addr constant [39 x i8] c"Frame with the given id was not found.\00", align 1
@.str.50 = private unnamed_addr constant [55 x i8] c"Frame with the given id does not belong to the target.\00", align 1
@.str.51 = private unnamed_addr constant [35 x i8] c"Object id doesn't reference a File\00", align 1
@.str.52 = private unnamed_addr constant [52 x i8] c"Couldn't convert object with given objectId to File\00", align 1
@_ZTVN5blink19InspectorAgentState5FieldE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [47 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE7disableEv to i8*)], [47 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEED1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEED0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE7disableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.53 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.54 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.55 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.56 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink8protocol3DOM4NodeE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3DOM11BackendNodeE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.57 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.58 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.60 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.61 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.62 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.63 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.64 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.65 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [149 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Node>, WTF::VectorTraits<blink::Member<blink::Node> > >]\00", align 1
@_ZTVN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::HeapTaskRunnerTimer.3311"*)* @_ZN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEED0Ev to i8*), i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBase4StopEv to i8*), i8* bitcast (void (%"class.blink::HeapTaskRunnerTimer.3311"*)* @_ZN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEE5FiredEv to i8*), i8* bitcast (void (%"class.base::OnceCallback"*, %"class.blink::HeapTaskRunnerTimer.3311"*, %"class.base::WeakPtr.4068"*)* @_ZN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEE16BindTimerClosureEN4base7WeakPtrINS_9TimerBaseEEE to i8*)] }, comdat, align 8
@.str.66 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.67 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.68 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_7ElementEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [331 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::Element>, blink::Member<blink::Element>, WTF::IdentityExtractor, WTF::MemberHash<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Element>, WTF::VectorTraits<blink::Member<blink::Element> > >]\00", align 1
@.str.69 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.70 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.71 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapINS1_6MemberINS1_4NodeEEEiNS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS8_IiEEEEEEPKcv = private unnamed_addr constant [198 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashMap<blink::Member<blink::Node>, int, WTF::MemberHash<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<int> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv to i8*)] }, comdat, align 8
@_ZN5blink8protocol3DOM8Metainfo10domainNameE = external constant [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8DocumentEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Document>, WTF::VectorTraits<blink::Member<blink::Document> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_17InspectorDOMAgent11DOMListenerEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [446 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::InspectorDOMAgent::DOMListener>, blink::Member<blink::InspectorDOMAgent::DOMListener>, WTF::IdentityExtractor, WTF::MemberHash<blink::InspectorDOMAgent::DOMListener>, WTF::HashTraits<blink::Member<blink::InspectorDOMAgent::DOMListener> >, WTF::HashTraits<blink::Member<blink::InspectorDOMAgent::DOMListener> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11HeapHashMapINS3_INS1_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEENS_12VectorTraitsISD_EEEEEEPKcv = private unnamed_addr constant [429 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::HeapHashMap<blink::Member<blink::Node>, int, WTF::MemberHash<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<int> > >, WTF::VectorTraits<blink::Member<blink::HeapHashMap<blink::Member<blink::Node>, int, WTF::MemberHash<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<int> > > > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEENS_12KeyValuePairIS6_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IiEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [395 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::Node>, WTF::KeyValuePair<blink::Member<blink::Node>, int>, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::Node>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<int> >, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIiNS_12KeyValuePairIiNS1_6MemberINS1_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSD_IS7_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [338 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<int, WTF::KeyValuePair<int, blink::Member<blink::Node> >, WTF::KeyValuePairKeyExtractor, WTF::IntHash<int>, WTF::HashMapValueTraits<WTF::HashTraits<int>, WTF::HashTraits<blink::Member<blink::Node> > >, WTF::HashTraits<int>, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIiNS_12KeyValuePairIiNS1_6MemberINS1_11HeapHashMapINS5_INS1_4NodeEEEiNS_10MemberHashIS7_EENS_10HashTraitsIS8_EENSB_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [618 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<int, WTF::KeyValuePair<int, blink::Member<blink::HeapHashMap<blink::Member<blink::Node>, int, WTF::MemberHash<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<int> > > >, WTF::KeyValuePairKeyExtractor, WTF::IntHash<int>, WTF::HashMapValueTraits<WTF::HashTraits<int>, WTF::HashTraits<blink::Member<blink::HeapHashMap<blink::Member<blink::Node>, int, WTF::MemberHash<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<int> > > > >, WTF::HashTraits<int>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiiEEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, int>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16InspectorHistoryEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InspectorHistory]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16InspectorHistoryEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16InspectorHistoryEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16InspectorHistoryEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16InspectorHistoryEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9DOMEditorEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DOMEditor]\00", align 1
@_ZZN5blink11GCInfoTraitINS_9DOMEditorEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_9DOMEditorEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_9DOMEditorEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_9DOMEditorEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.72 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink13CSSPropertyIDENS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [187 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::CSSPropertyID, WTF::HashSet<WTF::String, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::PartitionAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS_26VectorBackedLinkedListNodeINS1_6MemberINS1_4NodeEEENS1_13HeapAllocatorEEENS_12VectorTraitsIS8_EEEEEEPKcv = private unnamed_addr constant [259 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<WTF::VectorBackedLinkedListNode<blink::Member<blink::Node>, blink::HeapAllocator>, WTF::VectorTraits<WTF::VectorBackedLinkedListNode<blink::Member<blink::Node>, blink::HeapAllocator> > >]\00", align 1
@_ZN3WTFL9kNotFoundE = internal constant i32 -1, align 4
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [413 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::Node>, WTF::KeyValuePair<blink::Member<blink::Node>, unsigned int>, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::Node>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<unsigned int> >, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_4NodeEEELj0EEEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_10HeapVectorINS6_INS1_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [444 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::String, WTF::KeyValuePair<WTF::String, blink::Member<blink::HeapVector<blink::Member<blink::Node>, 0> > >, WTF::KeyValuePairKeyExtractor, WTF::StringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::HeapVector<blink::Member<blink::Node>, 0> > > >, WTF::HashTraits<WTF::String>, blink::HeapAllocator> >]\00", align 1
@_ZN5blink6V8Node18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.73 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@_ZN5blink10html_names8kLinkTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kTemplateTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kSlotTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26InspectorRevalidateDOMTaskEEEPKcv = private unnamed_addr constant [81 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InspectorRevalidateDOMTask]\00", align 1
@_ZZN5blink11GCInfoTraitINS_26InspectorRevalidateDOMTaskEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_26InspectorRevalidateDOMTaskEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_26InspectorRevalidateDOMTaskEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_26InspectorRevalidateDOMTaskEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_26InspectorRevalidateDOMTaskEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17InspectorDOMAgent23InspectorSourceLocationEEEPKcv = private unnamed_addr constant [97 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InspectorDOMAgent::InspectorSourceLocation]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink17InspectorDOMAgent23InspectorSourceLocationE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorDOMAgent::InspectorSourceLocation"*, %"class.blink::Visitor"*)* @_ZNK5blink17InspectorDOMAgent23InspectorSourceLocation5TraceEPNS_7VisitorE to i8*)] }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS6_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [535 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::WeakMember<blink::Node>, WTF::KeyValuePair<blink::WeakMember<blink::Node>, blink::Member<blink::InspectorDOMAgent::InspectorSourceLocation> >, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::Node>, WTF::HashMapValueTraits<WTF::HashTraits<blink::WeakMember<blink::Node> >, WTF::HashTraits<blink::Member<blink::InspectorDOMAgent::InspectorSourceLocation> > >, WTF::HashTraits<blink::WeakMember<blink::Node> >, blink::HeapAllocator> >]\00", align 1
@_ZTVN5blink15InspectableNodeE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (%"class.v8::Value"* (%"class.blink::InspectableNode"*, %"class.v8::Context"*)* @_ZN5blink15InspectableNode3getEN2v85LocalINS1_7ContextEEE to i8*), i8* bitcast (void (%"class.v8_inspector::V8InspectorSession::Inspectable"*)* @_ZN12v8_inspector18V8InspectorSession11InspectableD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectableNode"*)* @_ZN5blink15InspectableNodeD0Ev to i8*)] }, comdat, align 8
@_ZN5blink6V8File18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8

@_ZN5blink26InspectorRevalidateDOMTaskC1EPNS_17InspectorDOMAgentE = hidden unnamed_addr alias void (%"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::InspectorDOMAgent"*), void (%"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::InspectorDOMAgent"*)* @_ZN5blink26InspectorRevalidateDOMTaskC2EPNS_17InspectorDOMAgentE
@_ZN5blink17InspectorDOMAgentC1EPN2v87IsolateEPNS_15InspectedFramesEPN12v8_inspector18V8InspectorSessionE = hidden unnamed_addr alias void (%"class.blink::InspectorDOMAgent"*, %"class.v8::Isolate"*, %"class.blink::InspectedFrames"*, %"class.v8_inspector::V8InspectorSession"*), void (%"class.blink::InspectorDOMAgent"*, %"class.v8::Isolate"*, %"class.blink::InspectedFrames"*, %"class.v8_inspector::V8InspectorSession"*)* @_ZN5blink17InspectorDOMAgentC2EPN2v87IsolateEPNS_15InspectedFramesEPN12v8_inspector18V8InspectorSessionE
@_ZN5blink17InspectorDOMAgentD1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorDOMAgent"*), void (%"class.blink::InspectorDOMAgent"*)* @_ZN5blink17InspectorDOMAgentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26InspectorRevalidateDOMTaskC2EPNS_17InspectorDOMAgentE(%"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::InspectorDOMAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::InspectorDOMAgent"* %1, %"class.blink::InspectorDOMAgent"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 14, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %6, i8 zeroext 1) #17
  %8 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer.3311", %"class.blink::HeapTaskRunnerTimer.3311"* %4, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"* %8, %"class.base::SingleThreadTaskRunner"* %7) #17
  %9 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer.3311", %"class.blink::HeapTaskRunnerTimer.3311"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  store %"class.blink::InspectorRevalidateDOMTask"* %0, %"class.blink::InspectorRevalidateDOMTask"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %0, i64 0, i32 1, i32 2, i32 0
  store i64 ptrtoint (void (%"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::TimerBase"*)* @_ZN5blink26InspectorRevalidateDOMTask7OnTimerEPNS_9TimerBaseE to i64), i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %0, i64 0, i32 1, i32 2, i32 1
  %13 = bitcast i64* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 28, i1 false)
  ret void
}

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26InspectorRevalidateDOMTask7OnTimerEPNS_9TimerBaseE(%"class.blink::InspectorRevalidateDOMTask"* nocapture, %"class.blink::TimerBase"* nocapture readnone) #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.365", align 8
  %4 = alloca %"class.blink::Element"*, align 8
  %5 = bitcast %"class.blink::HeapVector.365"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #17
  %9 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %0, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::HashSet.1254", %"class.WTF::HashSet.1254"* %9, i64 0, i32 0, i32 0
  %14 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %14, i64 %17
  br i1 %12, label %35, label %19

19:                                               ; preds = %2
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %19, %25
  %22 = phi %"class.blink::Member.343"* [ %26, %25 ], [ %14, %19 ]
  %23 = bitcast %"class.blink::Member.343"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %28 [
    i64 -1, label %25
    i64 0, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %22, i64 1
  %27 = icmp eq %"class.blink::Member.343"* %26, %18
  br i1 %27, label %35, label %21

28:                                               ; preds = %21, %19
  %29 = phi %"class.blink::Member.343"* [ %14, %19 ], [ %22, %21 ]
  %30 = icmp eq %"class.blink::Member.343"* %29, %18
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.blink::Element"** %4 to i8*
  %33 = bitcast %"class.blink::Element"** %4 to i64*
  %34 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %3, i64 0, i32 0
  br label %44

35:                                               ; preds = %25, %65, %75, %72, %2, %28
  %36 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %36, align 8
  call void @_ZN5blink17InspectorDOMAgent25StyleAttributeInvalidatedERKNS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEE(%"class.blink::InspectorDOMAgent"* %37, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %3)
  %38 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %13, align 8
  %39 = icmp eq %"class.blink::Member.343"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.blink::Member.343"* %38 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %41) #17
  %42 = bitcast %"class.WTF::HashSet.1254"* %9 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  store i32 0, i32* %15, align 8
  store i32 0, i32* %10, align 4
  br label %43

43:                                               ; preds = %35, %40
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #17
  ret void

44:                                               ; preds = %77, %31
  %45 = phi i32 [ 0, %31 ], [ %79, %77 ]
  %46 = phi i32 [ 0, %31 ], [ %78, %77 ]
  %47 = phi %"class.blink::Member.343"* [ %29, %31 ], [ %69, %77 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #17
  %48 = bitcast %"class.blink::Member.343"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %33, align 8
  %50 = icmp eq i32 %46, %45
  br i1 %50, label %64, label %51, !prof !2

51:                                               ; preds = %44
  %52 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %6, align 8
  %53 = zext i32 %46 to i64
  %54 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %52, i64 %53
  %55 = bitcast %"class.blink::Member.343"* %54 to i64*
  store atomic i64 %49, i64* %55 monotonic, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %51
  %59 = inttoptr i64 %49 to i8*
  %60 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %59) #17
  br label %61

61:                                               ; preds = %58, %51
  %62 = load i32, i32* %8, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %8, align 4
  br label %65

64:                                               ; preds = %44
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.368"* nonnull %34, %"class.blink::Element"** nonnull dereferenceable(8) %4) #17
  br label %65

65:                                               ; preds = %61, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #17
  %66 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %47, i64 1
  %67 = icmp eq %"class.blink::Member.343"* %66, %18
  br i1 %67, label %35, label %68

68:                                               ; preds = %65, %72
  %69 = phi %"class.blink::Member.343"* [ %73, %72 ], [ %66, %65 ]
  %70 = bitcast %"class.blink::Member.343"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  switch i64 %71, label %75 [
    i64 -1, label %72
    i64 0, label %72
  ]

72:                                               ; preds = %68, %68
  %73 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %69, i64 1
  %74 = icmp eq %"class.blink::Member.343"* %73, %18
  br i1 %74, label %35, label %68

75:                                               ; preds = %68
  %76 = icmp eq %"class.blink::Member.343"* %69, %18
  br i1 %76, label %35, label %77

77:                                               ; preds = %75
  %78 = load i32, i32* %8, align 4
  %79 = load i32, i32* %7, align 8
  br label %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26InspectorRevalidateDOMTask32ScheduleStyleAttrRevalidationForEPNS_7ElementE(%"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Element"*, align 8
  %4 = alloca %"class.base::Location", align 8
  store %"class.blink::Element"* %1, %"class.blink::Element"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = call { %"class.blink::Member.343"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.1255"* %5, %"class.blink::Element"** nonnull dereferenceable(8) %3, %"class.blink::Element"** nonnull dereferenceable(8) %3) #17
  %7 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %0, i64 0, i32 1, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %8, i64 0, i32 0, i32 0
  %10 = call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %9) #17
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %0, i64 0, i32 1, i32 0
  %13 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #17
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 131) #17
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %12, i64 0, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #17
  br label %14

14:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent25StyleAttributeInvalidatedERKNS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEE(%"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.blink::HeapVector.365"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = tail call i8* @_Znwm(i64 24) #18
  %5 = bitcast i8* %4 to %"class.std::__1::vector.2926"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #17
  %6 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::Node"** %3 to i8*
  %12 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds i8, i8* %4, i64 8
  %17 = bitcast i8* %16 to i32**
  %18 = getelementptr inbounds i8, i8* %4, i64 16
  %19 = bitcast i8* %18 to i32**
  %20 = bitcast i8* %16 to i64*
  %21 = bitcast i8* %4 to i64*
  %22 = bitcast i8* %18 to i64*
  br label %26

23:                                               ; preds = %125, %2
  %24 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %24, align 8
  call void @_ZN5blink8protocol3DOM8Frontend22inlineStyleInvalidatedENSt3__110unique_ptrINS3_6vectorIiNS3_9allocatorIiEEEENS3_14default_deleteIS8_EEEE(%"class.blink::protocol::DOM::Frontend"* %25, %"class.std::__1::vector.2926"* nonnull %5) #17
  ret void

26:                                               ; preds = %125, %10
  %27 = phi i32 [ 0, %10 ], [ %126, %125 ]
  %28 = call dereferenceable(8) %"class.blink::Member.343"* @_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.368"* %6, i32 %27)
  %29 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::Element"*, %"class.blink::Element"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %30, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  store %"class.blink::Node"* %31, %"class.blink::Node"** %3, align 8
  %32 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %12, align 8
  %33 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %32, i64 0, i32 0
  %34 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %33, %"class.blink::Node"** nonnull dereferenceable(8) %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %125, label %36

36:                                               ; preds = %26
  %37 = load i32, i32* %13, align 4
  %38 = icmp eq i32 %37, 0
  %39 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %14, align 8
  %40 = load i32, i32* %15, align 8
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %39, i64 %41
  br i1 %38, label %74, label %43

43:                                               ; preds = %36
  %44 = icmp eq i32 %40, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %43, %49
  %46 = phi %"class.blink::Member.2749"* [ %50, %49 ], [ %39, %43 ]
  %47 = bitcast %"class.blink::Member.2749"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  switch i64 %48, label %52 [
    i64 -1, label %49
    i64 0, label %49
  ]

49:                                               ; preds = %45, %45
  %50 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %46, i64 1
  %51 = icmp eq %"class.blink::Member.2749"* %50, %42
  br i1 %51, label %74, label %45

52:                                               ; preds = %45, %43
  %53 = phi %"class.blink::Member.2749"* [ %39, %43 ], [ %46, %45 ]
  %54 = icmp eq %"class.blink::Member.2749"* %53, %42
  br i1 %54, label %74, label %55

55:                                               ; preds = %52, %72
  %56 = phi %"class.blink::Member.2749"* [ %66, %72 ], [ %53, %52 ]
  %57 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %56, i64 0, i32 0, i32 0
  %58 = load %"struct.blink::InspectorDOMAgent::DOMListener"*, %"struct.blink::InspectorDOMAgent::DOMListener"** %57, align 8
  %59 = bitcast %"struct.blink::InspectorDOMAgent::DOMListener"* %58 to void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)***
  %60 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)**, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)** %60, i64 5
  %62 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)** %61, align 8
  call void %62(%"struct.blink::InspectorDOMAgent::DOMListener"* %58, %"class.blink::Element"* %30) #17
  %63 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %56, i64 1
  %64 = icmp eq %"class.blink::Member.2749"* %63, %42
  br i1 %64, label %74, label %65

65:                                               ; preds = %55, %69
  %66 = phi %"class.blink::Member.2749"* [ %70, %69 ], [ %63, %55 ]
  %67 = bitcast %"class.blink::Member.2749"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %72 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %65, %65
  %70 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %66, i64 1
  %71 = icmp eq %"class.blink::Member.2749"* %70, %42
  br i1 %71, label %74, label %65

72:                                               ; preds = %65
  %73 = icmp eq %"class.blink::Member.2749"* %66, %42
  br i1 %73, label %74, label %55

74:                                               ; preds = %49, %55, %72, %69, %36, %52
  %75 = load i32*, i32** %17, align 8
  %76 = load i32*, i32** %19, align 8
  %77 = icmp ult i32* %75, %76
  %78 = ptrtoint i32* %76 to i64
  br i1 %77, label %79, label %82

79:                                               ; preds = %74
  store i32 %34, i32* %75, align 4
  %80 = getelementptr inbounds i32, i32* %75, i64 1
  %81 = ptrtoint i32* %80 to i64
  store i64 %81, i64* %20, align 8
  br label %125

82:                                               ; preds = %74
  %83 = ptrtoint i32* %75 to i64
  %84 = load i64, i64* %21, align 8
  %85 = sub i64 %83, %84
  %86 = ashr exact i64 %85, 2
  %87 = add nsw i64 %86, 1
  %88 = icmp ugt i64 %87, 4611686018427387903
  br i1 %88, label %89, label %91

89:                                               ; preds = %82
  %90 = bitcast i8* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %90) #19
  unreachable

91:                                               ; preds = %82
  %92 = sub i64 %78, %84
  %93 = ashr exact i64 %92, 2
  %94 = icmp ult i64 %93, 2305843009213693951
  br i1 %94, label %95, label %103

95:                                               ; preds = %91
  %96 = ashr exact i64 %92, 1
  %97 = icmp ult i64 %96, %87
  %98 = select i1 %97, i64 %87, i64 %96
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %108, label %100

100:                                              ; preds = %95
  %101 = icmp ugt i64 %98, 4611686018427387903
  br i1 %101, label %102, label %103

102:                                              ; preds = %100
  call void @abort() #19
  unreachable

103:                                              ; preds = %100, %91
  %104 = phi i64 [ %98, %100 ], [ 4611686018427387903, %91 ]
  %105 = shl i64 %104, 2
  %106 = call i8* @_Znwm(i64 %105) #18
  %107 = bitcast i8* %106 to i32*
  br label %108

108:                                              ; preds = %103, %95
  %109 = phi i64 [ %104, %103 ], [ 0, %95 ]
  %110 = phi i8* [ %106, %103 ], [ null, %95 ]
  %111 = phi i32* [ %107, %103 ], [ null, %95 ]
  %112 = getelementptr inbounds i32, i32* %111, i64 %86
  %113 = getelementptr inbounds i32, i32* %111, i64 %109
  %114 = ptrtoint i32* %113 to i64
  store i32 %34, i32* %112, align 4
  %115 = getelementptr inbounds i32, i32* %112, i64 1
  %116 = ptrtoint i32* %115 to i64
  %117 = ptrtoint i32* %111 to i64
  %118 = icmp sgt i64 %85, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %108
  %120 = inttoptr i64 %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %120, i64 %85, i1 false) #17
  br label %121

121:                                              ; preds = %119, %108
  store i64 %117, i64* %21, align 8
  store i64 %116, i64* %20, align 8
  store i64 %114, i64* %22, align 8
  %122 = icmp eq i64 %84, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %121
  %124 = inttoptr i64 %84 to i8*
  call void @_ZdlPv(i8* %124) #18
  br label %125

125:                                              ; preds = %123, %121, %79, %26
  %126 = add nuw i32 %27, 1
  %127 = icmp eq i32 %126, %8
  br i1 %127, label %23, label %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26InspectorRevalidateDOMTask5TraceEPNS_7VisitorE(%"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::InspectorRevalidateDOMTask"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17InspectorDOMAgentEE5TraceEPNS_7VisitorEPKv) #17
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %0, i64 0, i32 2
  %14 = bitcast %"class.blink::HeapHashSet.1251"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = bitcast %"class.blink::HeapHashSet.1251"* %13 to i8**
  %17 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %18 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %18, i64 11
  %20 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, align 8
  tail call void %20(%"class.blink::Visitor"* %1, i8** %16) #17
  %21 = icmp eq i64 %15, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %12
  %23 = inttoptr i64 %15 to i8*
  %24 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %25, i64 5
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8* nonnull %23, i8* nonnull %23, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #17
  br label %28

28:                                               ; preds = %12, %22
  %29 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %0, i64 0, i32 1
  %30 = bitcast %"class.blink::HeapTaskRunnerTimer.3311"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %0, i64 0, i32 1, i32 1
  %35 = bitcast %"class.blink::WeakMember.3312"* %34 to i64*
  %36 = load atomic i64, i64* %35 monotonic, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.blink::WeakMember.3312"* %34 to i8*
  %40 = inttoptr i64 %36 to i8*
  %41 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %42, i64 6
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %1, i8* nonnull %40, i8* %39, i8* %40, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26InspectorRevalidateDOMTaskEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_26InspectorRevalidateDOMTaskEEEvRKNS_14LivenessBrokerEPKv) #17
  br label %45

45:                                               ; preds = %28, %33, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent10ToResponseERNS_14ExceptionStateE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::ExceptionState"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend.3345", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %1, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %223, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %13, align 8
  %14 = add i32 %9, -1
  %15 = icmp ult i32 %14, 41
  br i1 %15, label %16, label %98

16:                                               ; preds = %11
  %17 = bitcast %"class.WTF::StringAppend"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #17
  %18 = tail call %"class.WTF::StringImpl"* @_ZN5blink12DOMException12GetErrorNameENS_16DOMExceptionCodeE(i32 %9) #17
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %64, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %37

27:                                               ; preds = %20
  %28 = zext i32 %26 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #17
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !2

34:                                               ; preds = %27
  tail call void @llvm.trap() #17
  unreachable

35:                                               ; preds = %27
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %25, align 4
  br label %37

37:                                               ; preds = %20, %35
  %38 = phi i32 [ %36, %35 ], [ %26, %20 ]
  %39 = load atomic i32, i32* %21 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  br i1 %41, label %43, label %53

43:                                               ; preds = %37
  %44 = zext i32 %38 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #17
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #17
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %51, %37
  %54 = phi i32 [ %52, %51 ], [ %38, %37 ]
  %55 = load atomic i32, i32* %21 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = add i32 %54, -1
  store i32 %59, i32* %42, align 4
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i32 [ %59, %58 ], [ %54, %53 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #17
  br label %64

64:                                               ; preds = %16, %60, %63
  %65 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %65, align 8
  %66 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %66, align 8
  %67 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %4)
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %13, align 8
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #17
  br label %83

83:                                               ; preds = %64, %79, %82
  br i1 %19, label %97, label %84

84:                                               ; preds = %83
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #17
  br label %97

97:                                               ; preds = %83, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #17
  br label %120

98:                                               ; preds = %11
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %99, i64 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %13, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %120, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %120

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i33
  %112 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %111, i33 1) #17
  %113 = extractvalue { i33, i1 } %112, 1
  %114 = extractvalue { i33, i1 } %112, 0
  %115 = icmp slt i33 %114, 0
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %118, !prof !2

117:                                              ; preds = %108
  tail call void @llvm.trap() #17
  unreachable

118:                                              ; preds = %108
  %119 = trunc i33 %114 to i32
  store i32 %119, i32* %109, align 4
  br label %120

120:                                              ; preds = %118, %103, %98, %97
  %121 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #17
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %122, align 8
  %123 = bitcast %"class.WTF::StringAppend.3345"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %123) #17
  %124 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %1, i64 0, i32 5, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %144, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %144

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = zext i32 %134 to i33
  %136 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %135, i33 1) #17
  %137 = extractvalue { i33, i1 } %136, 1
  %138 = extractvalue { i33, i1 } %136, 0
  %139 = icmp slt i33 %138, 0
  %140 = or i1 %137, %139
  br i1 %140, label %141, label %142, !prof !2

141:                                              ; preds = %132
  call void @llvm.trap() #17
  unreachable

142:                                              ; preds = %132
  %143 = trunc i33 %138 to i32
  store i32 %143, i32* %133, align 4
  br label %144

144:                                              ; preds = %120, %127, %142
  %145 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::StringImpl"* %125)
  %146 = getelementptr inbounds %"class.WTF::StringAppend.3345", %"class.WTF::StringAppend.3345"* %6, i64 0, i32 0, i32 0, i32 0
  %147 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %145, 0
  store %"class.WTF::StringImpl"* %147, %"class.WTF::StringImpl"** %146, align 8
  %148 = getelementptr inbounds %"class.WTF::StringAppend.3345", %"class.WTF::StringAppend.3345"* %6, i64 0, i32 1, i32 0, i32 0
  %149 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %145, 1
  store %"class.WTF::StringImpl"* %149, %"class.WTF::StringImpl"** %148, align 8
  %150 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.3345"* nonnull %6)
  store %"class.WTF::StringImpl"* %150, %"class.WTF::StringImpl"** %122, align 8
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #17
  br label %166

166:                                              ; preds = %165, %162, %144
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #17
  br label %182

182:                                              ; preds = %166, %178, %181
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %123) #17
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.WTF::String"* nonnull %5, i32 0) #17
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %183 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %183, i64 0, i32 1, i32 0
  %185 = load i8, i8* %184, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %190

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  call void @_ZdlPv(i8* %189) #18
  br label %190

190:                                              ; preds = %182, %187
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %193
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %193
  %203 = phi i32 [ %201, %200 ], [ %199, %193 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #17
  br label %206

206:                                              ; preds = %190, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #17
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #17
  br label %222

222:                                              ; preds = %206, %218, %221
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  br label %224

223:                                              ; preds = %2
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %224

224:                                              ; preds = %223, %222
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink12DOMException12GetErrorNameENS_16DOMExceptionCodeE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.4099", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.4099", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.4099", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.4099"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #17
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4099"* nonnull %6, i8* %16) #17
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #17
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #17
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #17
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #17
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.4099"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #17
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4099"* nonnull %5, i8* %45) #17
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4098"* nonnull %46, i8* %25) #17
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.4099"* nonnull %5, i8* %49) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #17
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #17
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  call void @llvm.trap() #17
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #17
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #17
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #17
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #17
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #17
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.4099"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #17
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4099"* nonnull %3, i8* %105) #17
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4098"* nonnull %106, i16* %85) #17
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4099"* nonnull %3, i16* %109) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #17
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #17
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %118
  call void @llvm.trap() #17
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #17
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #17
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend.3345", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #17
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #17
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #17
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #17
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.3345"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.3345"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #17
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.3345", %"class.WTF::StringAppend.3345"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend.3345", %"class.WTF::StringAppend.3345"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.3345"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3345", %"class.WTF::StringAppend.3345"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend.3345", %"class.WTF::StringAppend.3345"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.3345"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #17
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #17
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #17
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #17
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4098"* nonnull %67, i8* %30) #17
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4098"* nonnull %68, i8* %71) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #17
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %80
  call void @llvm.trap() #17
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #17
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #17
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.3345"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #17
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #17
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #17
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #17
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #17
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4098"* nonnull %144, i16* %107) #17
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4098"* nonnull %145, i16* %148) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #17
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #17
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !2

164:                                              ; preds = %157
  call void @llvm.trap() #17
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #17
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #17
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

declare void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

declare void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent25ProtocolPseudoElementTypeENS_8PseudoIdE(i8 zeroext) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  switch i8 %0, label %45 [
    i8 1, label %4
    i8 2, label %6
    i8 3, label %8
    i8 4, label %10
    i8 5, label %12
    i8 6, label %14
    i8 7, label %16
    i8 9, label %18
    i8 11, label %20
    i8 12, label %22
    i8 13, label %24
    i8 8, label %26
    i8 14, label %28
    i8 15, label %30
    i8 16, label %32
    i8 17, label %34
    i8 18, label %36
    i8 19, label %38
    i8 20, label %40
    i8 21, label %42
    i8 10, label %42
    i8 0, label %42
  ]

4:                                                ; preds = %1
  %5 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum9FirstLineE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum9FirstLineE, i64 0, i64 0), i64 %5) #17
  br label %46

6:                                                ; preds = %1
  %7 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum11FirstLetterE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum11FirstLetterE, i64 0, i64 0), i64 %7) #17
  br label %46

8:                                                ; preds = %1
  %9 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum6BeforeE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum6BeforeE, i64 0, i64 0), i64 %9) #17
  br label %46

10:                                               ; preds = %1
  %11 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum5AfterE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum5AfterE, i64 0, i64 0), i64 %11) #17
  br label %46

12:                                               ; preds = %1
  %13 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum6MarkerE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum6MarkerE, i64 0, i64 0), i64 %13) #17
  br label %46

14:                                               ; preds = %1
  %15 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum8BackdropE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum8BackdropE, i64 0, i64 0), i64 %15) #17
  br label %46

16:                                               ; preds = %1
  %17 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum9SelectionE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum9SelectionE, i64 0, i64 0), i64 %17) #17
  br label %46

18:                                               ; preds = %1
  %19 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum10TargetTextE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum10TargetTextE, i64 0, i64 0), i64 %19) #17
  br label %46

20:                                               ; preds = %1
  %21 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum13SpellingErrorE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum13SpellingErrorE, i64 0, i64 0), i64 %21) #17
  br label %46

22:                                               ; preds = %1
  %23 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum12GrammarErrorE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum12GrammarErrorE, i64 0, i64 0), i64 %23) #17
  br label %46

24:                                               ; preds = %1
  %25 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum18FirstLineInheritedE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum18FirstLineInheritedE, i64 0, i64 0), i64 %25) #17
  br label %46

26:                                               ; preds = %1
  %27 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum9ScrollbarE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum9ScrollbarE, i64 0, i64 0), i64 %27) #17
  br label %46

28:                                               ; preds = %1
  %29 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum14ScrollbarThumbE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum14ScrollbarThumbE, i64 0, i64 0), i64 %29) #17
  br label %46

30:                                               ; preds = %1
  %31 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum15ScrollbarButtonE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum15ScrollbarButtonE, i64 0, i64 0), i64 %31) #17
  br label %46

32:                                               ; preds = %1
  %33 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum14ScrollbarTrackE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum14ScrollbarTrackE, i64 0, i64 0), i64 %33) #17
  br label %46

34:                                               ; preds = %1
  %35 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum19ScrollbarTrackPieceE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum19ScrollbarTrackPieceE, i64 0, i64 0), i64 %35) #17
  br label %46

36:                                               ; preds = %1
  %37 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum15ScrollbarCornerE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum15ScrollbarCornerE, i64 0, i64 0), i64 %37) #17
  br label %46

38:                                               ; preds = %1
  %39 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum7ResizerE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum7ResizerE, i64 0, i64 0), i64 %39) #17
  br label %46

40:                                               ; preds = %1
  %41 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum15InputListButtonE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM14PseudoTypeEnum15InputListButtonE, i64 0, i64 0), i64 %41) #17
  br label %46

42:                                               ; preds = %1, %1, %1
  %43 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 208, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)) #17
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i64 0) #17
  br label %46

45:                                               ; preds = %1
  unreachable

46:                                               ; preds = %42, %40, %38, %36, %34, %32, %30, %28, %26, %24, %22, %20, %18, %16, %14, %12, %10, %8, %6, %4
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  ret %"class.WTF::StringImpl"* %48
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17InspectorDOMAgent10ParseColorEPNS_8protocol3DOM4RGBAE(%"class.blink::protocol::DOM::RGBA"* readonly) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::protocol::DOM::RGBA"* %0, null
  br i1 %2, label %27, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::protocol::DOM::RGBA", %"class.blink::protocol::DOM::RGBA"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::protocol::DOM::RGBA", %"class.blink::protocol::DOM::RGBA"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::protocol::DOM::RGBA", %"class.blink::protocol::DOM::RGBA"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.blink::protocol::DOM::RGBA", %"class.blink::protocol::DOM::RGBA"* %0, i64 0, i32 4, i32 0
  %11 = load i8, i8* %10, align 8, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = tail call i32 @_ZN5blink7MakeRGBEiii(i32 %5, i32 %7, i32 %9) #17
  br label %27

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::protocol::DOM::RGBA", %"class.blink::protocol::DOM::RGBA"* %0, i64 0, i32 4, i32 1
  %17 = load double, double* %16, align 8
  %18 = fcmp olt double %17, 0.000000e+00
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = fcmp ogt double %17, 1.000000e+00
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  br label %22

22:                                               ; preds = %15, %19, %21
  %23 = phi double [ 1.000000e+00, %21 ], [ %17, %19 ], [ 0.000000e+00, %15 ]
  %24 = fmul double %23, 2.550000e+02
  %25 = fptosi double %24 to i32
  %26 = tail call i32 @_ZN5blink8MakeRGBAEiiii(i32 %5, i32 %7, i32 %9, i32 %25) #17
  br label %27

27:                                               ; preds = %1, %13, %22
  %28 = phi i32 [ %26, %22 ], [ %14, %13 ], [ 0, %1 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgentC2EPN2v87IsolateEPNS_15InspectedFramesEPN12v8_inspector18V8InspectorSessionE(%"class.blink::InspectorDOMAgent"*, %"class.v8::Isolate"*, %"class.blink::InspectedFrames"*, %"class.v8_inspector::V8InspectorSession"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.blink::InspectorDOMAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [47 x i8*] }, { [11 x i8*], [47 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [47 x i8*] }, { [11 x i8*], [47 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CoreProbeSink"* null, %"class.blink::CoreProbeSink"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 3
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM8Metainfo10domainNameE, i64 0, i64 0)) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM8Metainfo10domainNameE, i64 0, i64 0), i64 %10) #17
  call void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %5) #17
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #17
  br label %27

27:                                               ; preds = %4, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  %28 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.2733"* %28 to i64*
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.blink::InspectorDOMAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [53 x i8*], [47 x i8*] }, { [53 x i8*], [47 x i8*] }* @_ZTVN5blink17InspectorDOMAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [53 x i8*], [47 x i8*] }, { [53 x i8*], [47 x i8*] }* @_ZTVN5blink17InspectorDOMAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %30, align 8
  %31 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 1
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::InspectedFrames"* %2, %"class.blink::InspectedFrames"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 3
  store %"class.v8_inspector::V8InspectorSession"* %3, %"class.v8_inspector::V8InspectorSession"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4
  %35 = bitcast %"class.blink::HeapHashSet.2743"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 20, i1 false) #17
  %36 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEEPhm(i64 24) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 20, i1 false) #17
  %37 = getelementptr inbounds i8, i8* %36, i64 -4
  %38 = bitcast i8* %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = or i16 %39, 1
  store atomic i16 %40, i16* %38 release, align 2
  %41 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %42 = bitcast %"class.blink::HeapHashMap.2752"** %41 to i8**
  store i8* %36, i8** %42, align 8
  %43 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 6
  %44 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 8
  %45 = bitcast %"class.blink::HeapHashMap.2767"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 20, i1 false) #17
  %46 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 9
  %47 = bitcast %"class.blink::HeapHashMap.2774"* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 20, i1 false) #17
  %48 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10
  %49 = bitcast %"class.WTF::HashSet.2781"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 20, i1 false) #17
  %50 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 11
  %51 = bitcast %"class.WTF::HashSet.2781"* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 20, i1 false) #17
  %52 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 12
  %53 = bitcast %"class.WTF::HashMap.2785"* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 20, i1 false) #17
  %54 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 13
  %55 = bitcast %"class.blink::HeapVector.2753"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 36, i1 false)
  store i32 1, i32* %54, align 8
  %56 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 14, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 16, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21
  %59 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %58, i64 0, i32 0
  %60 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::Document"** %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 28, i1 false)
  %62 = bitcast %"class.blink::InspectorRevalidateDOMTask"** %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 25, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %63 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %59) #17
  %64 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %65 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 1
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 2
  store i8 0, i8* %66, align 1
  %67 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 22
  %68 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %67, i64 0, i32 0
  %69 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %67, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %68) #17
  %71 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 22, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %71, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %72 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 22, i32 1
  store i8 0, i8* %72, align 8
  %73 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 22, i32 2
  store i8 0, i8* %73, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgentD2Ev(%"class.blink::InspectorDOMAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InspectorDOMAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [53 x i8*], [47 x i8*] }, { [53 x i8*], [47 x i8*] }* @_ZTVN5blink17InspectorDOMAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [53 x i8*], [47 x i8*] }, { [53 x i8*], [47 x i8*] }* @_ZTVN5blink17InspectorDOMAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 22, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 22, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #17
  br label %20

20:                                               ; preds = %1, %16, %19
  %21 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 0, i32 1, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #17
  br label %38

38:                                               ; preds = %20, %34, %37
  %39 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 12, i32 0, i32 0
  %40 = load %"struct.WTF::KeyValuePair.2789"*, %"struct.WTF::KeyValuePair.2789"** %39, align 8
  %41 = icmp eq %"struct.WTF::KeyValuePair.2789"* %40, null
  br i1 %41, label %44, label %42, !prof !4

42:                                               ; preds = %38
  %43 = bitcast %"struct.WTF::KeyValuePair.2789"* %40 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #17
  store %"struct.WTF::KeyValuePair.2789"* null, %"struct.WTF::KeyValuePair.2789"** %39, align 8
  br label %44

44:                                               ; preds = %38, %42
  %45 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 11, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = icmp eq i32* %46, null
  br i1 %47, label %50, label %48, !prof !4

48:                                               ; preds = %44
  %49 = bitcast i32* %46 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #17
  store i32* null, i32** %45, align 8
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = icmp eq i32* %52, null
  br i1 %53, label %56, label %54, !prof !4

54:                                               ; preds = %50
  %55 = bitcast i32* %52 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %55) #17
  store i32* null, i32** %51, align 8
  br label %56

56:                                               ; preds = %50, %54
  %57 = bitcast %"class.blink::InspectorDOMAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [47 x i8*] }, { [11 x i8*], [47 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [47 x i8*] }, { [11 x i8*], [47 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %57, align 8
  %58 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %59 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %58, align 8
  store %"class.blink::protocol::DOM::Frontend"* null, %"class.blink::protocol::DOM::Frontend"** %58, align 8
  %60 = icmp eq %"class.blink::protocol::DOM::Frontend"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = bitcast %"class.blink::protocol::DOM::Frontend"* %59 to i8*
  tail call void @_ZdlPv(i8* %62) #18
  br label %63

63:                                               ; preds = %61, %56
  %64 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %65 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %64, align 8
  %66 = icmp eq %"class.blink::InspectorAgentState::Field"** %65, null
  %67 = bitcast %"class.blink::InspectorAgentState::Field"** %65 to i8*
  br i1 %66, label %74, label %68, !prof !4

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %73, label %72, !prof !2

72:                                               ; preds = %68
  store i32 0, i32* %69, align 4
  br label %73

73:                                               ; preds = %72, %68
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %67) #17
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %64, align 8
  br label %74

74:                                               ; preds = %73, %63
  %75 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #17
  br label %91

91:                                               ; preds = %74, %87, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD2Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgentD1Ev(%"class.blink::InspectorDOMAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 -1, i32 22, i32 1
  %3 = bitcast i8* %2 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgentD2Ev(%"class.blink::InspectorDOMAgent"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgentD0Ev(%"class.blink::InspectorDOMAgent"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17InspectorDOMAgentD2Ev(%"class.blink::InspectorDOMAgent"* %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgentD0Ev(%"class.blink::InspectorDOMAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 -1, i32 22, i32 1
  %3 = bitcast i8* %2 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgentD2Ev(%"class.blink::InspectorDOMAgent"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent7RestoreEv(%"class.blink::InspectorDOMAgent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 2
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink17InspectorDOMAgent14EnableAndResetEv(%"class.blink::InspectorDOMAgent"* %0)
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent14EnableAndResetEv(%"class.blink::InspectorDOMAgent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::WebVector.3001", align 8
  %3 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21
  %4 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 2
  %5 = load i8, i8* %4, align 1, !range !3
  %6 = icmp eq i8 %5, 1
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 1
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 1
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %3 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %13 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %13, i64 2
  %15 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %14, align 8
  tail call void %15(%"class.blink::InspectorAgentState::SimpleField"* %3) #17
  br label %29

16:                                               ; preds = %7
  store i8 1, i8* %4, align 1
  %17 = bitcast %"class.blink::WebVector.3001"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.blink::WebVector.3001", %"class.blink::WebVector.3001"* %2, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector.3001"* nonnull %2) #17
  %19 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 0, i32 2
  %20 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %20, %"class.WTF::String"* dereferenceable(8) %21, %"class.blink::WebVector.3001"* nonnull %2) #17
  %22 = load i8*, i8** %18, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::WebVector.3001", %"class.blink::WebVector.3001"* %2, i64 0, i32 0, i32 0, i32 1
  %26 = ptrtoint i8* %22 to i64
  %27 = bitcast i8** %25 to i64*
  store i64 %26, i64* %27, align 8
  call void @_ZdlPv(i8* nonnull %22) #18
  br label %28

28:                                               ; preds = %24, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #17
  br label %29

29:                                               ; preds = %1, %11, %28
  %30 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistoryEEEPhm(i64 24) #17
  %31 = bitcast i8* %30 to %"class.blink::InspectorHistory"*
  call void @_ZN5blink16InspectorHistoryC1Ev(%"class.blink::InspectorHistory"* %31) #17
  %32 = getelementptr inbounds i8, i8* %30, i64 -4
  %33 = bitcast i8* %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = or i16 %34, 1
  store atomic i16 %35, i16* %33 release, align 2
  %36 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 17
  %37 = ptrtoint i8* %30 to i64
  %38 = bitcast %"class.blink::Member.2799"* %36 to i64*
  store atomic i64 %37, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  %41 = bitcast i8* %30 to %"class.blink::InspectorHistory"*
  br i1 %40, label %46, label %42

42:                                               ; preds = %29
  %43 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #17
  %44 = getelementptr inbounds %"class.blink::Member.2799", %"class.blink::Member.2799"* %36, i64 0, i32 0, i32 0
  %45 = load %"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory"** %44, align 8
  br label %46

46:                                               ; preds = %29, %42
  %47 = phi %"class.blink::InspectorHistory"* [ %41, %29 ], [ %45, %42 ]
  %48 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_9DOMEditorEEEPhm(i64 8) #17
  %49 = bitcast i8* %48 to %"class.blink::DOMEditor"*
  call void @_ZN5blink9DOMEditorC1EPNS_16InspectorHistoryE(%"class.blink::DOMEditor"* %49, %"class.blink::InspectorHistory"* %47) #17
  %50 = getelementptr inbounds i8, i8* %48, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  %54 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 18
  %55 = ptrtoint i8* %48 to i64
  %56 = bitcast %"class.blink::Member.2811"* %54 to i64*
  store atomic i64 %55, i64* %56 monotonic, align 8
  %57 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %46
  %60 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #17
  br label %61

61:                                               ; preds = %46, %59
  %62 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %63, i64 0, i32 1, i32 0, i32 0
  %65 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %64, align 8
  %66 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %65) #17
  %67 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 14
  %68 = ptrtoint %"class.blink::Document"* %66 to i64
  %69 = bitcast %"class.blink::Member.326"* %67 to i64*
  store atomic i64 %68, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %61
  %73 = bitcast %"class.blink::Document"* %66 to i8*
  %74 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #17
  br label %75

75:                                               ; preds = %61, %72
  %76 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %77 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %76, align 8
  call void @_ZN5blink13CoreProbeSink20AddInspectorDOMAgentEPNS_17InspectorDOMAgentE(%"class.blink::CoreProbeSink"* %77, %"class.blink::InspectorDOMAgent"* %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent9DocumentsEv(%"class.blink::HeapVector.3346"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::InspectedFrames::Iterator", align 8
  %4 = alloca %"class.blink::InspectedFrames::Iterator", align 8
  %5 = alloca %"class.blink::Document"*, align 8
  %6 = getelementptr inbounds %"class.blink::HeapVector.3346", %"class.blink::HeapVector.3346"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HeapVector.3346", %"class.blink::HeapVector.3346"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::HeapVector.3346", %"class.blink::HeapVector.3346"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast %"class.blink::HeapVector.3346"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #17
  %10 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 14, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = icmp eq %"class.blink::Document"* %11, null
  br i1 %12, label %59, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %14, align 8
  %16 = bitcast %"class.blink::InspectedFrames::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %3, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %3, i64 0, i32 1
  %19 = tail call { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames5beginEv(%"class.blink::InspectedFrames"* %15) #17
  %20 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %19, 0
  store %"class.blink::LocalFrame"* %20, %"class.blink::LocalFrame"** %17, align 8
  %21 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %19, 1
  store %"class.blink::LocalFrame"* %21, %"class.blink::LocalFrame"** %18, align 8
  %22 = bitcast %"class.blink::InspectedFrames::Iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #17
  %23 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %4, i64 0, i32 0
  %24 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %4, i64 0, i32 1
  %25 = tail call { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames3endEv(%"class.blink::InspectedFrames"* %15) #17
  %26 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %25, 0
  store %"class.blink::LocalFrame"* %26, %"class.blink::LocalFrame"** %23, align 8
  %27 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %25, 1
  store %"class.blink::LocalFrame"* %27, %"class.blink::LocalFrame"** %24, align 8
  %28 = call zeroext i1 @_ZN5blink15InspectedFrames8IteratorneERKS1_(%"class.blink::InspectedFrames::Iterator"* nonnull %3, %"class.blink::InspectedFrames::Iterator"* nonnull dereferenceable(16) %4) #17
  br i1 %28, label %29, label %32

29:                                               ; preds = %13
  %30 = bitcast %"class.blink::Document"** %5 to i8*
  %31 = getelementptr inbounds %"class.blink::HeapVector.3346", %"class.blink::HeapVector.3346"* %0, i64 0, i32 0
  br label %33

32:                                               ; preds = %56, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #17
  br label %59

33:                                               ; preds = %29, %56
  %34 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #17
  store %"class.blink::Document"* inttoptr (i64 -6148914691236517206 to %"class.blink::Document"*), %"class.blink::Document"** %5, align 8
  %35 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %34) #17
  store %"class.blink::Document"* %35, %"class.blink::Document"** %5, align 8
  %36 = icmp eq %"class.blink::Document"* %35, null
  %37 = ptrtoint %"class.blink::Document"* %35 to i64
  br i1 %36, label %56, label %38

38:                                               ; preds = %33
  %39 = load i32, i32* %8, align 4
  %40 = load i32, i32* %7, align 8
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %55, label %42, !prof !2

42:                                               ; preds = %38
  %43 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %6, align 8
  %44 = zext i32 %39 to i64
  %45 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %43, i64 %44
  %46 = bitcast %"class.blink::Member.326"* %45 to i64*
  store atomic i64 %37, i64* %46 monotonic, align 8
  %47 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %42
  %50 = bitcast %"class.blink::Document"* %35 to i8*
  %51 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %50) #17
  br label %52

52:                                               ; preds = %49, %42
  %53 = load i32, i32* %8, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %8, align 4
  br label %56

55:                                               ; preds = %38
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3349"* %31, %"class.blink::Document"** nonnull dereferenceable(8) %5) #17
  br label %56

56:                                               ; preds = %55, %52, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #17
  %57 = call dereferenceable(16) %"class.blink::InspectedFrames::Iterator"* @_ZN5blink15InspectedFrames8IteratorppEv(%"class.blink::InspectedFrames::Iterator"* nonnull %3) #17
  %58 = call zeroext i1 @_ZN5blink15InspectedFrames8IteratorneERKS1_(%"class.blink::InspectedFrames::Iterator"* nonnull %3, %"class.blink::InspectedFrames::Iterator"* nonnull dereferenceable(16) %4) #17
  br i1 %58, label %33, label %32

59:                                               ; preds = %2, %32
  ret void
}

declare { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames5beginEv(%"class.blink::InspectedFrames"*) local_unnamed_addr #1

declare { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames3endEv(%"class.blink::InspectedFrames"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink15InspectedFrames8IteratorneERKS1_(%"class.blink::InspectedFrames::Iterator"*, %"class.blink::InspectedFrames::Iterator"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::InspectedFrames::Iterator"* @_ZN5blink15InspectedFrames8IteratorppEv(%"class.blink::InspectedFrames::Iterator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent14AddDOMListenerEPNS0_11DOMListenerE(%"class.blink::InspectorDOMAgent"*, %"struct.blink::InspectorDOMAgent::DOMListener"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::InspectorDOMAgent::DOMListener"*, align 8
  store %"struct.blink::InspectorDOMAgent::DOMListener"* %1, %"struct.blink::InspectorDOMAgent::DOMListener"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = call { %"class.blink::Member.2749"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.2747"* %4, %"struct.blink::InspectorDOMAgent::DOMListener"** nonnull dereferenceable(8) %3, %"struct.blink::InspectorDOMAgent::DOMListener"** nonnull dereferenceable(8) %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent17RemoveDOMListenerEPNS0_11DOMListenerE(%"class.blink::InspectorDOMAgent"*, %"struct.blink::InspectorDOMAgent::DOMListener"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0
  %4 = ptrtoint %"struct.blink::InspectorDOMAgent::DOMListener"* %1 to i64
  %5 = getelementptr inbounds %"class.WTF::HashSet.2746", %"class.WTF::HashSet.2746"* %3, i64 0, i32 0, i32 0
  %6 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %5, align 8
  %7 = icmp eq %"class.blink::Member.2749"* %6, null
  %8 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  br i1 %7, label %71, label %10

10:                                               ; preds = %2
  %11 = add i32 %9, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %6, i64 %33
  %35 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %34, i64 0, i32 0, i32 0
  %36 = load %"struct.blink::InspectorDOMAgent::DOMListener"*, %"struct.blink::InspectorDOMAgent::DOMListener"** %35, align 8
  %37 = icmp eq %"struct.blink::InspectorDOMAgent::DOMListener"* %36, %1
  br i1 %37, label %66, label %38

38:                                               ; preds = %10
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %57, %38
  %53 = phi %"struct.blink::InspectorDOMAgent::DOMListener"* [ %36, %38 ], [ %64, %57 ]
  %54 = phi i64 [ %33, %38 ], [ %61, %57 ]
  %55 = phi i64 [ 0, %38 ], [ %59, %57 ]
  %56 = icmp eq %"struct.blink::InspectorDOMAgent::DOMListener"* %53, null
  br i1 %56, label %71, label %57

57:                                               ; preds = %52
  %58 = icmp eq i64 %55, 0
  %59 = select i1 %58, i64 %51, i64 %55
  %60 = add i64 %59, %54
  %61 = and i64 %60, %12
  %62 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %6, i64 %61
  %63 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %62, i64 0, i32 0, i32 0
  %64 = load %"struct.blink::InspectorDOMAgent::DOMListener"*, %"struct.blink::InspectorDOMAgent::DOMListener"** %63, align 8
  %65 = icmp eq %"struct.blink::InspectorDOMAgent::DOMListener"* %64, %1
  br i1 %65, label %66, label %52

66:                                               ; preds = %57, %10
  %67 = phi %"class.blink::Member.2749"* [ %34, %10 ], [ %62, %57 ]
  %68 = icmp eq %"class.blink::Member.2749"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = zext i32 %9 to i64
  br label %74

71:                                               ; preds = %52, %66, %2
  %72 = zext i32 %9 to i64
  %73 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %6, i64 %72
  br label %74

74:                                               ; preds = %71, %69
  %75 = phi i64 [ %70, %69 ], [ %72, %71 ]
  %76 = phi %"class.blink::Member.2749"* [ %67, %69 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %6, i64 %75
  %78 = icmp eq %"class.blink::Member.2749"* %77, %76
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::HashSet.2746", %"class.WTF::HashSet.2746"* %3, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE5eraseEPKS5_(%"class.WTF::HashTable.2747"* %80, %"class.blink::Member.2749"* %76) #17
  br label %81

81:                                               ; preds = %74, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent20NotifyDidAddDocumentEPNS_8DocumentE(%"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.blink::Document"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %7, i64 %10
  br i1 %5, label %24, label %12

12:                                               ; preds = %2
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %12, %18
  %15 = phi %"class.blink::Member.2749"* [ %19, %18 ], [ %7, %12 ]
  %16 = bitcast %"class.blink::Member.2749"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %14, %14
  %19 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %15, i64 1
  %20 = icmp eq %"class.blink::Member.2749"* %19, %11
  br i1 %20, label %24, label %14

21:                                               ; preds = %14, %12
  %22 = phi %"class.blink::Member.2749"* [ %7, %12 ], [ %15, %14 ]
  %23 = icmp eq %"class.blink::Member.2749"* %22, %11
  br i1 %23, label %24, label %25

24:                                               ; preds = %18, %25, %42, %39, %2, %21
  ret void

25:                                               ; preds = %21, %42
  %26 = phi %"class.blink::Member.2749"* [ %36, %42 ], [ %22, %21 ]
  %27 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %26, i64 0, i32 0, i32 0
  %28 = load %"struct.blink::InspectorDOMAgent::DOMListener"*, %"struct.blink::InspectorDOMAgent::DOMListener"** %27, align 8
  %29 = bitcast %"struct.blink::InspectorDOMAgent::DOMListener"* %28 to void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Document"*)***
  %30 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Document"*)**, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Document"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Document"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Document"*)** %30, i64 3
  %32 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Document"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Document"*)** %31, align 8
  tail call void %32(%"struct.blink::InspectorDOMAgent::DOMListener"* %28, %"class.blink::Document"* %1) #17
  %33 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %26, i64 1
  %34 = icmp eq %"class.blink::Member.2749"* %33, %11
  br i1 %34, label %24, label %35

35:                                               ; preds = %25, %39
  %36 = phi %"class.blink::Member.2749"* [ %40, %39 ], [ %33, %25 ]
  %37 = bitcast %"class.blink::Member.2749"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  switch i64 %38, label %42 [
    i64 -1, label %39
    i64 0, label %39
  ]

39:                                               ; preds = %35, %35
  %40 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %36, i64 1
  %41 = icmp eq %"class.blink::Member.2749"* %40, %11
  br i1 %41, label %24, label %35

42:                                               ; preds = %35
  %43 = icmp eq %"class.blink::Member.2749"* %36, %11
  br i1 %43, label %24, label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent23NotifyWillRemoveDOMNodeEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %7, i64 %10
  br i1 %5, label %24, label %12

12:                                               ; preds = %2
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %12, %18
  %15 = phi %"class.blink::Member.2749"* [ %19, %18 ], [ %7, %12 ]
  %16 = bitcast %"class.blink::Member.2749"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %14, %14
  %19 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %15, i64 1
  %20 = icmp eq %"class.blink::Member.2749"* %19, %11
  br i1 %20, label %24, label %14

21:                                               ; preds = %14, %12
  %22 = phi %"class.blink::Member.2749"* [ %7, %12 ], [ %15, %14 ]
  %23 = icmp eq %"class.blink::Member.2749"* %22, %11
  br i1 %23, label %24, label %25

24:                                               ; preds = %18, %25, %42, %39, %2, %21
  ret void

25:                                               ; preds = %21, %42
  %26 = phi %"class.blink::Member.2749"* [ %36, %42 ], [ %22, %21 ]
  %27 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %26, i64 0, i32 0, i32 0
  %28 = load %"struct.blink::InspectorDOMAgent::DOMListener"*, %"struct.blink::InspectorDOMAgent::DOMListener"** %27, align 8
  %29 = bitcast %"struct.blink::InspectorDOMAgent::DOMListener"* %28 to void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Node"*)***
  %30 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Node"*)**, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Node"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Node"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Node"*)** %30, i64 4
  %32 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Node"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Node"*)** %31, align 8
  tail call void %32(%"struct.blink::InspectorDOMAgent::DOMListener"* %28, %"class.blink::Node"* %1) #17
  %33 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %26, i64 1
  %34 = icmp eq %"class.blink::Member.2749"* %33, %11
  br i1 %34, label %24, label %35

35:                                               ; preds = %25, %39
  %36 = phi %"class.blink::Member.2749"* [ %40, %39 ], [ %33, %25 ]
  %37 = bitcast %"class.blink::Member.2749"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  switch i64 %38, label %42 [
    i64 -1, label %39
    i64 0, label %39
  ]

39:                                               ; preds = %35, %35
  %40 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %36, i64 1
  %41 = icmp eq %"class.blink::Member.2749"* %40, %11
  br i1 %41, label %24, label %35

42:                                               ; preds = %35
  %43 = icmp eq %"class.blink::Member.2749"* %36, %11
  br i1 %43, label %24, label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent22NotifyDidModifyDOMAttrEPNS_7ElementE(%"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %7, i64 %10
  br i1 %5, label %24, label %12

12:                                               ; preds = %2
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %12, %18
  %15 = phi %"class.blink::Member.2749"* [ %19, %18 ], [ %7, %12 ]
  %16 = bitcast %"class.blink::Member.2749"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %14, %14
  %19 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %15, i64 1
  %20 = icmp eq %"class.blink::Member.2749"* %19, %11
  br i1 %20, label %24, label %14

21:                                               ; preds = %14, %12
  %22 = phi %"class.blink::Member.2749"* [ %7, %12 ], [ %15, %14 ]
  %23 = icmp eq %"class.blink::Member.2749"* %22, %11
  br i1 %23, label %24, label %25

24:                                               ; preds = %18, %25, %42, %39, %2, %21
  ret void

25:                                               ; preds = %21, %42
  %26 = phi %"class.blink::Member.2749"* [ %36, %42 ], [ %22, %21 ]
  %27 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %26, i64 0, i32 0, i32 0
  %28 = load %"struct.blink::InspectorDOMAgent::DOMListener"*, %"struct.blink::InspectorDOMAgent::DOMListener"** %27, align 8
  %29 = bitcast %"struct.blink::InspectorDOMAgent::DOMListener"* %28 to void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)***
  %30 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)**, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)** %30, i64 5
  %32 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)** %31, align 8
  tail call void %32(%"struct.blink::InspectorDOMAgent::DOMListener"* %28, %"class.blink::Element"* %1) #17
  %33 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %26, i64 1
  %34 = icmp eq %"class.blink::Member.2749"* %33, %11
  br i1 %34, label %24, label %35

35:                                               ; preds = %25, %39
  %36 = phi %"class.blink::Member.2749"* [ %40, %39 ], [ %33, %25 ]
  %37 = bitcast %"class.blink::Member.2749"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  switch i64 %38, label %42 [
    i64 -1, label %39
    i64 0, label %39
  ]

39:                                               ; preds = %35, %35
  %40 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %36, i64 1
  %41 = icmp eq %"class.blink::Member.2749"* %40, %11
  br i1 %41, label %24, label %35

42:                                               ; preds = %35
  %43 = icmp eq %"class.blink::Member.2749"* %36, %11
  br i1 %43, label %24, label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent11SetDocumentEPNS_8DocumentE(%"class.blink::InspectorDOMAgent"* nocapture, %"class.blink::Document"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 14
  %4 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, %1
  br i1 %6, label %28, label %7

7:                                                ; preds = %2
  tail call void @_ZN5blink17InspectorDOMAgent23DiscardFrontendBindingsEv(%"class.blink::InspectorDOMAgent"* %0)
  %8 = ptrtoint %"class.blink::Document"* %1 to i64
  %9 = bitcast %"class.blink::Member.326"* %3 to i64*
  store atomic i64 %8, i64* %9 monotonic, align 8
  %10 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.blink::Document"* %1 to i8*
  %14 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %13) #17
  br label %15

15:                                               ; preds = %7, %12
  %16 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 2
  %17 = load i8, i8* %16, align 1, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = icmp eq %"class.blink::Document"* %1, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 68
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %19, %21
  %26 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %26, align 8
  tail call void @_ZN5blink8protocol3DOM8Frontend15documentUpdatedEv(%"class.blink::protocol::DOM::Frontend"* %27) #17
  br label %28

28:                                               ; preds = %15, %2, %25, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent23DiscardFrontendBindingsEv(%"class.blink::InspectorDOMAgent"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 17, i32 0, i32 0
  %3 = load %"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory"** %2, align 8
  %4 = icmp eq %"class.blink::InspectorHistory"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink16InspectorHistory5ResetEv(%"class.blink::InspectorHistory"* nonnull %3) #17
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 15, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.2793", %"class.WTF::HashMap.2793"* %7, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %8, align 8
  %10 = icmp eq %"struct.WTF::KeyValuePair.2796"* %9, null
  br i1 %10, label %47, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 15, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %43, label %15

15:                                               ; preds = %11
  %16 = zext i32 %13 to i64
  br label %17

17:                                               ; preds = %40, %15
  %18 = phi i64 [ 0, %15 ], [ %41, %40 ]
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %9, i64 %18
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  switch i64 %22, label %23 [
    i64 -1, label %40
    i64 0, label %40
  ]

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #17
  br label %36

36:                                               ; preds = %35, %32
  %37 = bitcast %"struct.WTF::KeyValuePair.2796"* %19 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %37, align 8
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %9, i64 %18, i32 1
  %39 = bitcast %"class.blink::Member.3333"* %38 to i64*
  store atomic i64 0, i64* %39 monotonic, align 8
  br label %40

40:                                               ; preds = %36, %17, %17
  %41 = add nuw nsw i64 %18, 1
  %42 = icmp eq i64 %41, %16
  br i1 %42, label %43, label %17

43:                                               ; preds = %40, %11
  %44 = bitcast %"struct.WTF::KeyValuePair.2796"* %9 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %44) #17
  %45 = bitcast %"class.WTF::HashMap.2793"* %7 to i64*
  store atomic i64 0, i64* %45 monotonic, align 8
  store i32 0, i32* %12, align 8
  %46 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 15, i32 0, i32 0, i32 2
  store i32 0, i32* %46, align 4
  br label %47

47:                                               ; preds = %6, %43
  %48 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %49 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"** %50, align 8
  %52 = icmp eq %"struct.WTF::KeyValuePair.3319"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %49, i64 0, i32 0, i32 0, i32 1
  %55 = bitcast %"struct.WTF::KeyValuePair.3319"* %51 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %55) #17
  %56 = bitcast %"class.blink::HeapHashMap.2752"* %49 to i64*
  store atomic i64 0, i64* %56 monotonic, align 8
  store i32 0, i32* %54, align 8
  %57 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %49, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %57, align 4
  br label %58

58:                                               ; preds = %47, %53
  %59 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 7, i32 0
  %60 = getelementptr inbounds %"class.WTF::HashMap.2763", %"class.WTF::HashMap.2763"* %59, i64 0, i32 0, i32 0
  %61 = load %"struct.WTF::KeyValuePair.2766"*, %"struct.WTF::KeyValuePair.2766"** %60, align 8
  %62 = icmp eq %"struct.WTF::KeyValuePair.2766"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %65 = bitcast %"struct.WTF::KeyValuePair.2766"* %61 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %65) #17
  %66 = bitcast %"class.WTF::HashMap.2763"* %59 to i64*
  store atomic i64 0, i64* %66 monotonic, align 8
  store i32 0, i32* %64, align 8
  %67 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  store i32 0, i32* %67, align 4
  br label %68

68:                                               ; preds = %58, %63
  %69 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 8, i32 0
  %70 = getelementptr inbounds %"class.WTF::HashMap.2770", %"class.WTF::HashMap.2770"* %69, i64 0, i32 0, i32 0
  %71 = load %"struct.WTF::KeyValuePair.2773"*, %"struct.WTF::KeyValuePair.2773"** %70, align 8
  %72 = icmp eq %"struct.WTF::KeyValuePair.2773"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %75 = bitcast %"struct.WTF::KeyValuePair.2773"* %71 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %75) #17
  %76 = bitcast %"class.WTF::HashMap.2770"* %69 to i64*
  store atomic i64 0, i64* %76 monotonic, align 8
  store i32 0, i32* %74, align 8
  %77 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  store i32 0, i32* %77, align 4
  br label %78

78:                                               ; preds = %68, %73
  %79 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 6, i32 0
  %80 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %95, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  %87 = bitcast %"class.WTF::Vector.2756"* %79 to i8**
  br i1 %86, label %92, label %88

88:                                               ; preds = %83
  %89 = load i8*, i8** %87, align 8
  %90 = zext i32 %85 to i64
  %91 = shl nuw nsw i64 %90, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %89, i64 %91) #17
  store i32 0, i32* %84, align 4
  br label %92

92:                                               ; preds = %88, %83
  %93 = load i8*, i8** %87, align 8
  %94 = bitcast %"class.WTF::Vector.2756"* %79 to i64*
  store atomic i64 0, i64* %94 monotonic, align 8
  store i32 0, i32* %80, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %93) #17
  br label %95

95:                                               ; preds = %78, %92
  %96 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10
  %97 = getelementptr inbounds %"class.WTF::HashSet.2781", %"class.WTF::HashSet.2781"* %96, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10, i32 0, i32 1
  %102 = bitcast i32* %98 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %102) #17
  %103 = bitcast %"class.WTF::HashSet.2781"* %96 to i64*
  store atomic i64 0, i64* %103 monotonic, align 8
  store i32 0, i32* %101, align 8
  %104 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10, i32 0, i32 2
  store i32 0, i32* %104, align 4
  br label %105

105:                                              ; preds = %95, %100
  %106 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 12
  %107 = getelementptr inbounds %"class.WTF::HashMap.2785", %"class.WTF::HashMap.2785"* %106, i64 0, i32 0, i32 0
  %108 = load %"struct.WTF::KeyValuePair.2789"*, %"struct.WTF::KeyValuePair.2789"** %107, align 8
  %109 = icmp eq %"struct.WTF::KeyValuePair.2789"* %108, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 12, i32 0, i32 1
  %112 = bitcast %"struct.WTF::KeyValuePair.2789"* %108 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %112) #17
  %113 = bitcast %"class.WTF::HashMap.2785"* %106 to i64*
  store atomic i64 0, i64* %113 monotonic, align 8
  store i32 0, i32* %111, align 8
  %114 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 12, i32 0, i32 2
  store i32 0, i32* %114, align 4
  br label %115

115:                                              ; preds = %105, %110
  %116 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 16, i32 0, i32 0
  %117 = load %"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::InspectorRevalidateDOMTask"** %116, align 8
  %118 = icmp eq %"class.blink::InspectorRevalidateDOMTask"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %117, i64 0, i32 1, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %120) #17
  br label %121

121:                                              ; preds = %115, %119
  ret void
}

declare void @_ZN5blink8protocol3DOM8Frontend15documentUpdatedEv(%"class.blink::protocol::DOM::Frontend"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17InspectorDOMAgent7EnabledEv(%"class.blink::InspectorDOMAgent"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 2
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent20ReleaseDanglingNodesEv(%"class.blink::InspectorDOMAgent"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 6, i32 0
  %3 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = bitcast %"class.WTF::Vector.2756"* %2 to i8**
  br i1 %9, label %15, label %11

11:                                               ; preds = %6
  %12 = load i8*, i8** %10, align 8
  %13 = zext i32 %8 to i64
  %14 = shl nuw nsw i64 %13, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %12, i64 %14) #17
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %11, %6
  %16 = load i8*, i8** %10, align 8
  %17 = bitcast %"class.WTF::Vector.2756"* %2 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %16) #17
  br label %18

18:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17InspectorDOMAgent4BindEPNS_4NodeEPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Node"*, %"class.blink::HeapHashMap.2752"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = alloca %"class.blink::HeapHashMap.2752"*, align 8
  %6 = alloca i32, align 4
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8
  store %"class.blink::HeapHashMap.2752"* %2, %"class.blink::HeapHashMap.2752"** %5, align 8
  %7 = icmp eq %"class.blink::HeapHashMap.2752"* %2, null
  br i1 %7, label %64, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %2, i64 0, i32 0
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #17
  %11 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %9, %"class.blink::Node"** nonnull dereferenceable(8) %4)
  store i32 %11, i32* %6, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %62

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 13
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  store i32 %15, i32* %6, align 4
  %17 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %2, i64 0, i32 0, i32 0
  %18 = call { %"struct.WTF::KeyValuePair.3319"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RiEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.3317"* %17, %"class.blink::Node"** nonnull dereferenceable(8) %4, i32* nonnull dereferenceable(4) %6) #17
  %19 = extractvalue { %"struct.WTF::KeyValuePair.3319"*, i8 } %18, 1
  %20 = and i8 %19, 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %13
  %23 = extractvalue { %"struct.WTF::KeyValuePair.3319"*, i8 } %18, 0
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %23, i64 0, i32 1
  %25 = load i32, i32* %6, align 4
  store i32 %25, i32* %24, align 4
  br label %26

26:                                               ; preds = %13, %22
  %27 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 7, i32 0, i32 0
  %28 = call { %"struct.WTF::KeyValuePair.2766"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERiRPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.2764"* %27, i32* nonnull dereferenceable(4) %6, %"class.blink::Node"** nonnull dereferenceable(8) %4) #17
  %29 = extractvalue { %"struct.WTF::KeyValuePair.2766"*, i8 } %28, 1
  %30 = and i8 %29, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %43

32:                                               ; preds = %26
  %33 = extractvalue { %"struct.WTF::KeyValuePair.2766"*, i8 } %28, 0
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %33, i64 0, i32 1
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %36 = ptrtoint %"class.blink::Node"* %35 to i64
  %37 = bitcast %"class.blink::Member.318"* %34 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.blink::Node"* %35 to i8*
  %42 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %41) #17
  br label %43

43:                                               ; preds = %26, %32, %40
  %44 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 8, i32 0, i32 0
  %45 = call { %"struct.WTF::KeyValuePair.2773"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISK_SH_SL_EERiRPSC_EENS_18HashTableAddResultISM_SE_EEOT0_OT1_(%"class.WTF::HashTable.2771"* %44, i32* nonnull dereferenceable(4) %6, %"class.blink::HeapHashMap.2752"** nonnull dereferenceable(8) %5) #17
  %46 = extractvalue { %"struct.WTF::KeyValuePair.2773"*, i8 } %45, 1
  %47 = and i8 %46, 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %60

49:                                               ; preds = %43
  %50 = extractvalue { %"struct.WTF::KeyValuePair.2773"*, i8 } %45, 0
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %50, i64 0, i32 1
  %52 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %5, align 8
  %53 = ptrtoint %"class.blink::HeapHashMap.2752"* %52 to i64
  %54 = bitcast %"class.blink::Member.2750"* %51 to i64*
  store atomic i64 %53, i64* %54 monotonic, align 8
  %55 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %49
  %58 = bitcast %"class.blink::HeapHashMap.2752"* %52 to i8*
  %59 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %58) #17
  br label %60

60:                                               ; preds = %43, %49, %57
  %61 = load i32, i32* %6, align 4
  br label %62

62:                                               ; preds = %8, %60
  %63 = phi i32 [ %61, %60 ], [ %11, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #17
  br label %64

64:                                               ; preds = %3, %62
  %65 = phi i32 [ %63, %62 ], [ 0, %3 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %1, align 8
  %4 = ptrtoint %"class.blink::Node"* %3 to i64
  %5 = getelementptr inbounds %"class.WTF::HashMap.3316", %"class.WTF::HashMap.3316"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.3319"* %6, null
  br i1 %7, label %73, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashMap.3316", %"class.WTF::HashMap.3316"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %6, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, %3
  br i1 %37, label %67, label %38

38:                                               ; preds = %8
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %58, %38
  %53 = phi i64 [ %33, %38 ], [ %62, %58 ]
  %54 = phi i64 [ 0, %38 ], [ %60, %58 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %6, i64 %53, i32 0, i32 0, i32 0
  %56 = load %"class.blink::Node"*, %"class.blink::Node"** %55, align 8
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %51, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %12
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %6, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, %3
  br i1 %66, label %67, label %52

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.3319"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.3319"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %68, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  br label %73

73:                                               ; preds = %52, %2, %67, %70
  %74 = phi i32 [ %72, %70 ], [ 0, %67 ], [ 0, %2 ], [ 0, %52 ]
  ret i32 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent6UnbindEPNS_4NodeE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = alloca i32, align 4
  store %"class.blink::Node"* %1, %"class.blink::Node"** %3, align 8
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %7 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %7, i64 0, i32 0
  %9 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %8, %"class.blink::Node"** nonnull dereferenceable(8) %3)
  store i32 %9, i32* %4, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %363, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 7, i32 0
  %13 = getelementptr inbounds %"class.WTF::HashMap.2763", %"class.WTF::HashMap.2763"* %12, i64 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair.2766"*, %"struct.WTF::KeyValuePair.2766"** %13, align 8
  %15 = icmp eq %"struct.WTF::KeyValuePair.2766"* %14, null
  %16 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  br i1 %15, label %73, label %18

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  %20 = zext i32 %19 to i64
  %21 = shl i32 %9, 15
  %22 = xor i32 %21, -1
  %23 = add i32 %9, %22
  %24 = lshr i32 %23, 10
  %25 = xor i32 %24, %23
  %26 = mul i32 %25, 9
  %27 = lshr i32 %26, 6
  %28 = xor i32 %27, %26
  %29 = shl i32 %28, 11
  %30 = xor i32 %29, -1
  %31 = add i32 %28, %30
  %32 = lshr i32 %31, 16
  %33 = xor i32 %32, %31
  %34 = and i32 %19, %33
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %14, i64 %35
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, %9
  br i1 %39, label %68, label %40

40:                                               ; preds = %18
  %41 = xor i32 %33, -1
  %42 = lshr i32 %31, 23
  %43 = add i32 %42, %41
  %44 = shl i32 %43, 12
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 7
  %47 = xor i32 %46, %45
  %48 = shl i32 %47, 2
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 20
  %51 = xor i32 %50, %49
  %52 = or i32 %51, 1
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %59, %40
  %55 = phi i32 [ %38, %40 ], [ %66, %59 ]
  %56 = phi i64 [ %35, %40 ], [ %63, %59 ]
  %57 = phi i64 [ 0, %40 ], [ %61, %59 ]
  %58 = icmp eq i32 %55, 0
  br i1 %58, label %73, label %59

59:                                               ; preds = %54
  %60 = icmp eq i64 %57, 0
  %61 = select i1 %60, i64 %53, i64 %57
  %62 = add i64 %61, %56
  %63 = and i64 %62, %20
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %14, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %9
  br i1 %67, label %68, label %54

68:                                               ; preds = %59, %18
  %69 = phi %"struct.WTF::KeyValuePair.2766"* [ %36, %18 ], [ %64, %59 ]
  %70 = icmp eq %"struct.WTF::KeyValuePair.2766"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = zext i32 %17 to i64
  br label %76

73:                                               ; preds = %54, %68, %11
  %74 = zext i32 %17 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %14, i64 %74
  br label %76

76:                                               ; preds = %73, %71
  %77 = phi i64 [ %72, %71 ], [ %74, %73 ]
  %78 = phi %"struct.WTF::KeyValuePair.2766"* [ %69, %71 ], [ %75, %73 ]
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %14, i64 %77
  %80 = icmp eq %"struct.WTF::KeyValuePair.2766"* %79, %78
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::HashMap.2763", %"class.WTF::HashMap.2763"* %12, i64 0, i32 0
  call void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.2764"* %82, %"struct.WTF::KeyValuePair.2766"* %78) #17
  br label %83

83:                                               ; preds = %76, %81
  %84 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 8, i32 0
  %85 = getelementptr inbounds %"class.WTF::HashMap.2770", %"class.WTF::HashMap.2770"* %84, i64 0, i32 0, i32 0
  %86 = load %"struct.WTF::KeyValuePair.2773"*, %"struct.WTF::KeyValuePair.2773"** %85, align 8
  %87 = icmp eq %"struct.WTF::KeyValuePair.2773"* %86, null
  %88 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  br i1 %87, label %146, label %90

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  %92 = zext i32 %91 to i64
  %93 = load i32, i32* %4, align 4
  %94 = shl i32 %93, 15
  %95 = xor i32 %94, -1
  %96 = add i32 %93, %95
  %97 = lshr i32 %96, 10
  %98 = xor i32 %97, %96
  %99 = mul i32 %98, 9
  %100 = lshr i32 %99, 6
  %101 = xor i32 %100, %99
  %102 = shl i32 %101, 11
  %103 = xor i32 %102, -1
  %104 = add i32 %101, %103
  %105 = lshr i32 %104, 16
  %106 = xor i32 %105, %104
  %107 = and i32 %106, %91
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %86, i64 %108
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %109, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, %93
  br i1 %112, label %141, label %113

113:                                              ; preds = %90
  %114 = xor i32 %106, -1
  %115 = lshr i32 %104, 23
  %116 = add i32 %115, %114
  %117 = shl i32 %116, 12
  %118 = xor i32 %117, %116
  %119 = lshr i32 %118, 7
  %120 = xor i32 %119, %118
  %121 = shl i32 %120, 2
  %122 = xor i32 %121, %120
  %123 = lshr i32 %122, 20
  %124 = xor i32 %123, %122
  %125 = or i32 %124, 1
  %126 = zext i32 %125 to i64
  br label %127

127:                                              ; preds = %132, %113
  %128 = phi i32 [ %111, %113 ], [ %139, %132 ]
  %129 = phi i64 [ %108, %113 ], [ %136, %132 ]
  %130 = phi i64 [ 0, %113 ], [ %134, %132 ]
  %131 = icmp eq i32 %128, 0
  br i1 %131, label %146, label %132

132:                                              ; preds = %127
  %133 = icmp eq i64 %130, 0
  %134 = select i1 %133, i64 %126, i64 %130
  %135 = add i64 %134, %129
  %136 = and i64 %135, %92
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %86, i64 %136
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %137, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %139, %93
  br i1 %140, label %141, label %127

141:                                              ; preds = %132, %90
  %142 = phi %"struct.WTF::KeyValuePair.2773"* [ %109, %90 ], [ %137, %132 ]
  %143 = icmp eq %"struct.WTF::KeyValuePair.2773"* %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %141
  %145 = zext i32 %89 to i64
  br label %149

146:                                              ; preds = %127, %141, %83
  %147 = zext i32 %89 to i64
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %86, i64 %147
  br label %149

149:                                              ; preds = %146, %144
  %150 = phi i64 [ %145, %144 ], [ %147, %146 ]
  %151 = phi %"struct.WTF::KeyValuePair.2773"* [ %142, %144 ], [ %148, %146 ]
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %86, i64 %150
  %153 = icmp eq %"struct.WTF::KeyValuePair.2773"* %152, %151
  br i1 %153, label %156, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.WTF::HashMap.2770", %"class.WTF::HashMap.2770"* %84, i64 0, i32 0
  call void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE5eraseEPKSE_(%"class.WTF::HashTable.2771"* %155, %"struct.WTF::KeyValuePair.2773"* %151) #17
  br label %156

156:                                              ; preds = %149, %154
  %157 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %158 = icmp eq %"class.blink::Node"* %157, null
  br i1 %158, label %212, label %159

159:                                              ; preds = %156
  %160 = bitcast %"class.blink::Node"* %157 to i1 (%"class.blink::Node"*)***
  %161 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %160, align 8
  %162 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %161, i64 42
  %163 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %162, align 8
  %164 = call zeroext i1 %163(%"class.blink::Node"* nonnull %157) #17
  br i1 %164, label %165, label %171

165:                                              ; preds = %159
  %166 = bitcast %"class.blink::Node"* %157 to %"class.blink::HTMLFrameOwnerElement"*
  %167 = call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* nonnull %166) #17
  %168 = icmp eq %"class.blink::Document"* %167, null
  br i1 %168, label %171, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %167, i64 0, i32 0, i32 0
  call void @_ZN5blink17InspectorDOMAgent6UnbindEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %170)
  br label %171

171:                                              ; preds = %159, %169, %165
  %172 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %173 = icmp eq %"class.blink::Node"* %172, null
  br i1 %173, label %212, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %172, i64 0, i32 1
  %176 = load i32, i32* %175, align 8
  %177 = and i32 %176, 12
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %185

179:                                              ; preds = %174
  %180 = bitcast %"class.blink::Node"* %172 to %"class.blink::Element"*
  %181 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* nonnull %180) #17
  %182 = icmp eq %"class.blink::ShadowRoot"* %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %181, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink17InspectorDOMAgent6UnbindEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %184)
  br label %185

185:                                              ; preds = %174, %179, %183
  %186 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %187 = icmp eq %"class.blink::Node"* %186, null
  br i1 %187, label %212, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %186, i64 0, i32 1
  %190 = load i32, i32* %189, align 8
  %191 = and i32 %190, 12
  %192 = icmp eq i32 %191, 0
  %193 = bitcast %"class.blink::Node"* %186 to %"class.blink::Element"*
  br i1 %192, label %194, label %212

194:                                              ; preds = %188
  %195 = call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %193, i8 zeroext 3) #17
  %196 = icmp eq %"class.blink::PseudoElement"* %195, null
  br i1 %196, label %200, label %197

197:                                              ; preds = %194
  %198 = call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %193, i8 zeroext 3) #17
  %199 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %198, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink17InspectorDOMAgent6UnbindEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %199)
  br label %200

200:                                              ; preds = %194, %197
  %201 = call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %193, i8 zeroext 4) #17
  %202 = icmp eq %"class.blink::PseudoElement"* %201, null
  br i1 %202, label %206, label %203

203:                                              ; preds = %200
  %204 = call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %193, i8 zeroext 4) #17
  %205 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %204, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink17InspectorDOMAgent6UnbindEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %205)
  br label %206

206:                                              ; preds = %200, %203
  %207 = call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %193, i8 zeroext 5) #17
  %208 = icmp eq %"class.blink::PseudoElement"* %207, null
  br i1 %208, label %212, label %209

209:                                              ; preds = %206
  %210 = call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %193, i8 zeroext 5) #17
  %211 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %210, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink17InspectorDOMAgent6UnbindEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %211)
  br label %212

212:                                              ; preds = %188, %156, %171, %185, %206, %209
  %213 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %214 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %215 = load i32, i32* %214, align 4
  %216 = icmp eq i32 %215, 0
  %217 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %218 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %220 = load i32, i32* %219, align 8
  %221 = zext i32 %220 to i64
  %222 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %218, i64 %221
  br i1 %216, label %254, label %223

223:                                              ; preds = %212
  %224 = icmp eq i32 %220, 0
  br i1 %224, label %232, label %225

225:                                              ; preds = %223, %229
  %226 = phi %"class.blink::Member.2749"* [ %230, %229 ], [ %218, %223 ]
  %227 = bitcast %"class.blink::Member.2749"* %226 to i64*
  %228 = load i64, i64* %227, align 8
  switch i64 %228, label %232 [
    i64 -1, label %229
    i64 0, label %229
  ]

229:                                              ; preds = %225, %225
  %230 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %226, i64 1
  %231 = icmp eq %"class.blink::Member.2749"* %230, %222
  br i1 %231, label %254, label %225

232:                                              ; preds = %225, %223
  %233 = phi %"class.blink::Member.2749"* [ %218, %223 ], [ %226, %225 ]
  %234 = icmp eq %"class.blink::Member.2749"* %233, %222
  br i1 %234, label %254, label %235

235:                                              ; preds = %232, %252
  %236 = phi %"class.blink::Member.2749"* [ %246, %252 ], [ %233, %232 ]
  %237 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %236, i64 0, i32 0, i32 0
  %238 = load %"struct.blink::InspectorDOMAgent::DOMListener"*, %"struct.blink::InspectorDOMAgent::DOMListener"** %237, align 8
  %239 = bitcast %"struct.blink::InspectorDOMAgent::DOMListener"* %238 to void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Node"*)***
  %240 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Node"*)**, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Node"*)*** %239, align 8
  %241 = getelementptr inbounds void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Node"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Node"*)** %240, i64 4
  %242 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Node"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Node"*)** %241, align 8
  call void %242(%"struct.blink::InspectorDOMAgent::DOMListener"* %238, %"class.blink::Node"* %213) #17
  %243 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %236, i64 1
  %244 = icmp eq %"class.blink::Member.2749"* %243, %222
  br i1 %244, label %254, label %245

245:                                              ; preds = %235, %249
  %246 = phi %"class.blink::Member.2749"* [ %250, %249 ], [ %243, %235 ]
  %247 = bitcast %"class.blink::Member.2749"* %246 to i64*
  %248 = load i64, i64* %247, align 8
  switch i64 %248, label %252 [
    i64 -1, label %249
    i64 0, label %249
  ]

249:                                              ; preds = %245, %245
  %250 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %246, i64 1
  %251 = icmp eq %"class.blink::Member.2749"* %250, %222
  br i1 %251, label %254, label %245

252:                                              ; preds = %245
  %253 = icmp eq %"class.blink::Member.2749"* %246, %222
  br i1 %253, label %254, label %235

254:                                              ; preds = %229, %235, %252, %249, %212, %232
  %255 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %6, align 8
  %256 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %255, i64 0, i32 0, i32 0
  %257 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %258 = call { %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.3317"* %256, %"class.blink::Node"* %257) #17
  %259 = extractvalue { %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"* } %258, 0
  %260 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %255, i64 0, i32 0, i32 0, i32 0
  %261 = load %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"** %260, align 8
  %262 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %255, i64 0, i32 0, i32 0, i32 1
  %263 = load i32, i32* %262, align 8
  %264 = zext i32 %263 to i64
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %261, i64 %264
  %266 = icmp eq %"struct.WTF::KeyValuePair.3319"* %265, %259
  br i1 %266, label %268, label %267

267:                                              ; preds = %254
  call void @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.3317"* %256, %"struct.WTF::KeyValuePair.3319"* %259) #17
  br label %268

268:                                              ; preds = %254, %267
  %269 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10
  %270 = getelementptr inbounds %"class.WTF::HashSet.2781", %"class.WTF::HashSet.2781"* %269, i64 0, i32 0, i32 0
  %271 = load i32*, i32** %270, align 8
  %272 = icmp eq i32* %271, null
  br i1 %272, label %361, label %273

273:                                              ; preds = %268
  %274 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10, i32 0, i32 1
  %275 = load i32, i32* %274, align 8
  %276 = add i32 %275, -1
  %277 = zext i32 %276 to i64
  %278 = load i32, i32* %4, align 4
  %279 = shl i32 %278, 15
  %280 = xor i32 %279, -1
  %281 = add i32 %278, %280
  %282 = lshr i32 %281, 10
  %283 = xor i32 %282, %281
  %284 = mul i32 %283, 9
  %285 = lshr i32 %284, 6
  %286 = xor i32 %285, %284
  %287 = shl i32 %286, 11
  %288 = xor i32 %287, -1
  %289 = add i32 %286, %288
  %290 = lshr i32 %289, 16
  %291 = xor i32 %290, %289
  %292 = and i32 %291, %276
  %293 = zext i32 %292 to i64
  %294 = getelementptr inbounds i32, i32* %271, i64 %293
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, %278
  br i1 %296, label %326, label %297

297:                                              ; preds = %273
  %298 = xor i32 %291, -1
  %299 = lshr i32 %289, 23
  %300 = add i32 %299, %298
  %301 = shl i32 %300, 12
  %302 = xor i32 %301, %300
  %303 = lshr i32 %302, 7
  %304 = xor i32 %303, %302
  %305 = shl i32 %304, 2
  %306 = xor i32 %305, %304
  %307 = lshr i32 %306, 20
  %308 = xor i32 %307, %306
  %309 = or i32 %308, 1
  %310 = zext i32 %309 to i64
  br label %311

311:                                              ; preds = %316, %297
  %312 = phi i32 [ %295, %297 ], [ %322, %316 ]
  %313 = phi i64 [ %293, %297 ], [ %320, %316 ]
  %314 = phi i64 [ 0, %297 ], [ %318, %316 ]
  %315 = icmp eq i32 %312, 0
  br i1 %315, label %361, label %316

316:                                              ; preds = %311
  %317 = icmp eq i64 %314, 0
  %318 = select i1 %317, i64 %310, i64 %314
  %319 = add i64 %318, %313
  %320 = and i64 %319, %277
  %321 = getelementptr inbounds i32, i32* %271, i64 %320
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, %278
  br i1 %323, label %324, label %311

324:                                              ; preds = %316
  %325 = getelementptr inbounds i32, i32* %271, i64 %320
  br label %326

326:                                              ; preds = %324, %273
  %327 = phi i32* [ %294, %273 ], [ %325, %324 ]
  %328 = icmp eq i32* %327, null
  br i1 %328, label %361, label %329

329:                                              ; preds = %326
  call void @_ZN3WTF7HashSetIiNS_7IntHashIiEENS_10HashTraitsIiEENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashSet.2781"* %269, i32* nonnull dereferenceable(4) %4)
  %330 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %331 = icmp eq %"class.blink::Node"* %330, null
  br i1 %331, label %341, label %332

332:                                              ; preds = %329
  %333 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %330, i64 0, i32 1
  %334 = load i32, i32* %333, align 8
  %335 = and i32 %334, 2
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %341, label %337

337:                                              ; preds = %332
  %338 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %330, i64 1
  %339 = bitcast %"class.blink::Node"* %338 to %"class.blink::Node"**
  %340 = load %"class.blink::Node"*, %"class.blink::Node"** %339, align 8
  br label %341

341:                                              ; preds = %337, %332, %329
  %342 = phi %"class.blink::Node"* [ %340, %337 ], [ null, %329 ], [ null, %332 ]
  %343 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %342) #17
  br i1 %343, label %344, label %349

344:                                              ; preds = %341, %344
  %345 = phi %"class.blink::Node"* [ %347, %344 ], [ %342, %341 ]
  %346 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %345, i64 0, i32 5, i32 0, i32 0
  %347 = load %"class.blink::Node"*, %"class.blink::Node"** %346, align 8
  %348 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %347) #17
  br i1 %348, label %344, label %349

349:                                              ; preds = %344, %341
  %350 = phi %"class.blink::Node"* [ %342, %341 ], [ %347, %344 ]
  %351 = icmp eq %"class.blink::Node"* %350, null
  br i1 %351, label %361, label %354

352:                                              ; preds = %356
  %353 = icmp eq %"class.blink::Node"* %359, null
  br i1 %353, label %361, label %354

354:                                              ; preds = %349, %352
  %355 = phi %"class.blink::Node"* [ %359, %352 ], [ %350, %349 ]
  call void @_ZN5blink17InspectorDOMAgent6UnbindEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* nonnull %355)
  br label %356

356:                                              ; preds = %356, %354
  %357 = phi %"class.blink::Node"* [ %355, %354 ], [ %359, %356 ]
  %358 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %357, i64 0, i32 5, i32 0, i32 0
  %359 = load %"class.blink::Node"*, %"class.blink::Node"** %358, align 8
  %360 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %359) #17
  br i1 %360, label %356, label %352

361:                                              ; preds = %311, %352, %349, %326, %268
  %362 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 12
  call void @_ZN3WTF7HashMapIiiNS_7IntHashIiEENS_10HashTraitsIiEES4_NS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashMap.2785"* %362, i32* nonnull dereferenceable(4) %4)
  br label %363

363:                                              ; preds = %2, %361
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17
  ret void
}

declare %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"*) local_unnamed_addr #1

declare %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashSetIiNS_7IntHashIiEENS_10HashTraitsIiEENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashSet.2781"*, i32* dereferenceable(4)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashSet.2781", %"class.WTF::HashSet.2781"* %0, i64 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashSet.2781", %"class.WTF::HashSet.2781"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %64, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %1, align 4
  %12 = shl i32 %11, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %11, %13
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %4, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %11
  br i1 %29, label %59, label %30

30:                                               ; preds = %8
  %31 = xor i32 %24, -1
  %32 = lshr i32 %22, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %49, %30
  %45 = phi i32 [ %28, %30 ], [ %55, %49 ]
  %46 = phi i64 [ %26, %30 ], [ %53, %49 ]
  %47 = phi i64 [ 0, %30 ], [ %51, %49 ]
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %64, label %49

49:                                               ; preds = %44
  %50 = icmp eq i64 %47, 0
  %51 = select i1 %50, i64 %43, i64 %47
  %52 = add i64 %51, %46
  %53 = and i64 %52, %10
  %54 = getelementptr inbounds i32, i32* %4, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %11
  br i1 %56, label %57, label %44

57:                                               ; preds = %49
  %58 = getelementptr inbounds i32, i32* %4, i64 %53
  br label %59

59:                                               ; preds = %57, %8
  %60 = phi i32* [ %27, %8 ], [ %58, %57 ]
  %61 = icmp eq i32* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = zext i32 %7 to i64
  br label %67

64:                                               ; preds = %44, %59, %2
  %65 = zext i32 %7 to i64
  %66 = getelementptr inbounds i32, i32* %4, i64 %65
  br label %67

67:                                               ; preds = %62, %64
  %68 = phi i64 [ %63, %62 ], [ %65, %64 ]
  %69 = phi i32* [ %60, %62 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"class.WTF::HashSet.2781", %"class.WTF::HashSet.2781"* %0, i64 0, i32 0
  %71 = getelementptr inbounds i32, i32* %4, i64 %68
  %72 = icmp eq i32* %71, %69
  br i1 %72, label %95, label %73

73:                                               ; preds = %67
  store i32 -1, i32* %69, align 4
  %74 = getelementptr inbounds %"class.WTF::HashSet.2781", %"class.WTF::HashSet.2781"* %0, i64 0, i32 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 1
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = getelementptr inbounds %"class.WTF::HashSet.2781", %"class.WTF::HashSet.2781"* %0, i64 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, -1
  store i32 %82, i32* %80, align 4
  %83 = mul i32 %82, 6
  %84 = load i32, i32* %6, align 8
  %85 = icmp ult i32 %83, %84
  %86 = icmp ugt i32 %84, 8
  %87 = and i1 %85, %86
  br i1 %87, label %88, label %95

88:                                               ; preds = %73
  %89 = lshr i32 %84, 1
  %90 = zext i32 %89 to i64
  %91 = shl nuw nsw i64 %90, 2
  %92 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %91, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %92, i8 0, i64 %91, i1 false) #17
  %93 = bitcast i8* %92 to i32*
  %94 = tail call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_(%"class.WTF::HashTable.2782"* %70, i32* %93, i32 %89, i32* null) #17
  br label %95

95:                                               ; preds = %67, %73, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent15InnerFirstChildEPNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %10 = bitcast %"class.blink::Node"* %9 to %"class.blink::Node"**
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  br label %12

12:                                               ; preds = %1, %3, %8
  %13 = phi %"class.blink::Node"* [ %11, %8 ], [ null, %1 ], [ null, %3 ]
  %14 = tail call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %13)
  br i1 %14, label %15, label %20

15:                                               ; preds = %12, %15
  %16 = phi %"class.blink::Node"* [ %18, %15 ], [ %13, %12 ]
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 5, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = tail call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %18)
  br i1 %19, label %15, label %20

20:                                               ; preds = %15, %12
  %21 = phi %"class.blink::Node"* [ %13, %12 ], [ %18, %15 ]
  ret %"class.blink::Node"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent16InnerNextSiblingEPNS_4NodeE(%"class.blink::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi %"class.blink::Node"* [ %0, %1 ], [ %5, %2 ]
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = tail call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %5)
  br i1 %6, label %2, label %7

7:                                                ; preds = %2
  ret %"class.blink::Node"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashMapIiiNS_7IntHashIiEENS_10HashTraitsIiEES4_NS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashMap.2785"*, i32* dereferenceable(4)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.2785", %"class.WTF::HashMap.2785"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2789"*, %"struct.WTF::KeyValuePair.2789"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.2789"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashMap.2785", %"class.WTF::HashMap.2785"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %64, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %1, align 4
  %12 = shl i32 %11, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %11, %13
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %4, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %11
  br i1 %30, label %59, label %31

31:                                               ; preds = %8
  %32 = xor i32 %24, -1
  %33 = lshr i32 %22, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %50, %31
  %46 = phi i32 [ %29, %31 ], [ %57, %50 ]
  %47 = phi i64 [ %26, %31 ], [ %54, %50 ]
  %48 = phi i64 [ 0, %31 ], [ %52, %50 ]
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %64, label %50

50:                                               ; preds = %45
  %51 = icmp eq i64 %48, 0
  %52 = select i1 %51, i64 %44, i64 %48
  %53 = add i64 %52, %47
  %54 = and i64 %53, %10
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %4, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %11
  br i1 %58, label %59, label %45

59:                                               ; preds = %50, %8
  %60 = phi %"struct.WTF::KeyValuePair.2789"* [ %27, %8 ], [ %55, %50 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair.2789"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = zext i32 %7 to i64
  br label %67

64:                                               ; preds = %45, %59, %2
  %65 = zext i32 %7 to i64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %4, i64 %65
  br label %67

67:                                               ; preds = %62, %64
  %68 = phi i64 [ %63, %62 ], [ %65, %64 ]
  %69 = phi %"struct.WTF::KeyValuePair.2789"* [ %60, %62 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"class.WTF::HashMap.2785", %"class.WTF::HashMap.2785"* %0, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %4, i64 %68
  %72 = icmp eq %"struct.WTF::KeyValuePair.2789"* %71, %69
  br i1 %72, label %96, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %69, i64 0, i32 0
  store i32 -1, i32* %74, align 4
  %75 = getelementptr inbounds %"class.WTF::HashMap.2785", %"class.WTF::HashMap.2785"* %0, i64 0, i32 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 1
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  %81 = getelementptr inbounds %"class.WTF::HashMap.2785", %"class.WTF::HashMap.2785"* %0, i64 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %82, -1
  store i32 %83, i32* %81, align 4
  %84 = mul i32 %83, 6
  %85 = load i32, i32* %6, align 8
  %86 = icmp ult i32 %84, %85
  %87 = icmp ugt i32 %85, 8
  %88 = and i1 %86, %87
  br i1 %88, label %89, label %96

89:                                               ; preds = %73
  %90 = lshr i32 %85, 1
  %91 = zext i32 %90 to i64
  %92 = shl nuw nsw i64 %91, 3
  %93 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %92, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiiEEEEPKcv, i64 0, i64 0)) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %93, i8 0, i64 %92, i1 false) #17
  %94 = bitcast i8* %93 to %"struct.WTF::KeyValuePair.2789"*
  %95 = tail call %"struct.WTF::KeyValuePair.2789"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSC_(%"class.WTF::HashTable.2786"* %70, %"struct.WTF::KeyValuePair.2789"* %94, i32 %90, %"struct.WTF::KeyValuePair.2789"* null) #17
  br label %96

96:                                               ; preds = %67, %73, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.blink::Node"** nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* %1, i32 %2)
  store %"class.blink::Node"* %6, %"class.blink::Node"** %3, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %8, label %20

8:                                                ; preds = %4
  %9 = tail call i8* @_Znwm(i64 48) #18
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %12, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i64 33, i1 false) #17
  %13 = getelementptr inbounds i8, i8* %9, i64 33
  store i8 0, i8* %13, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %5) #17
  %14 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %8
  %19 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %19) #18
  br label %21

20:                                               ; preds = %4
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %21

21:                                               ; preds = %18, %8, %20
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.2766"*, %"struct.WTF::KeyValuePair.2766"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.2766"* %6, null
  %8 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  br i1 %7, label %65, label %10

10:                                               ; preds = %4
  %11 = add i32 %9, -1
  %12 = zext i32 %11 to i64
  %13 = shl i32 %1, 15
  %14 = xor i32 %13, -1
  %15 = add i32 %14, %1
  %16 = lshr i32 %15, 10
  %17 = xor i32 %16, %15
  %18 = mul i32 %17, 9
  %19 = lshr i32 %18, 6
  %20 = xor i32 %19, %18
  %21 = shl i32 %20, 11
  %22 = xor i32 %21, -1
  %23 = add i32 %20, %22
  %24 = lshr i32 %23, 16
  %25 = xor i32 %24, %23
  %26 = and i32 %11, %25
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %6, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, %1
  br i1 %31, label %60, label %32

32:                                               ; preds = %10
  %33 = xor i32 %25, -1
  %34 = lshr i32 %23, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %51, %32
  %47 = phi i32 [ %30, %32 ], [ %58, %51 ]
  %48 = phi i64 [ %27, %32 ], [ %55, %51 ]
  %49 = phi i64 [ 0, %32 ], [ %53, %51 ]
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %65, label %51

51:                                               ; preds = %46
  %52 = icmp eq i64 %49, 0
  %53 = select i1 %52, i64 %45, i64 %49
  %54 = add i64 %53, %48
  %55 = and i64 %54, %12
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %6, i64 %55
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %56, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %60, label %46

60:                                               ; preds = %51, %10
  %61 = phi %"struct.WTF::KeyValuePair.2766"* [ %28, %10 ], [ %56, %51 ]
  %62 = icmp eq %"struct.WTF::KeyValuePair.2766"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = zext i32 %9 to i64
  br label %68

65:                                               ; preds = %46, %60, %4
  %66 = zext i32 %9 to i64
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %6, i64 %66
  br label %68

68:                                               ; preds = %63, %65
  %69 = phi i64 [ %64, %63 ], [ %66, %65 ]
  %70 = phi %"struct.WTF::KeyValuePair.2766"* [ %61, %63 ], [ %67, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %6, i64 %69
  %72 = icmp eq %"struct.WTF::KeyValuePair.2766"* %70, %71
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %70, i64 0, i32 1, i32 0, i32 0
  %75 = load %"class.blink::Node"*, %"class.blink::Node"** %74, align 8
  br label %76

76:                                               ; preds = %68, %73, %2
  %77 = phi %"class.blink::Node"* [ null, %2 ], [ %75, %73 ], [ null, %68 ]
  ret %"class.blink::Node"* %77
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent10AssertNodeERKN5crdtp6detail10ValueMaybeIiEES6_RKNS3_IN3WTF6StringEEERPNS_4NodeE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly dereferenceable(16), %"class.blink::Node"** nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %2, i64 0, i32 0
  %11 = load i8, i8* %10, align 4, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %33, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %2, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16)
  %17 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* %1, i32 %15) #17, !noalias !5
  store %"class.blink::Node"* %17, %"class.blink::Node"** %5, align 8, !noalias !5
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %13
  %20 = tail call i8* @_Znwm(i64 48) #18
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !noalias !5
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast i64* %22 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %23, align 8, !noalias !5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i64 33, i1 false) #17
  %24 = getelementptr inbounds i8, i8* %20, i64 33
  store i8 0, i8* %24, align 1, !noalias !5
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %25 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1, !noalias !5
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %19
  %30 = load i8*, i8** %21, align 8, !noalias !5
  call void @_ZdlPv(i8* %30) #18
  br label %32

31:                                               ; preds = %13
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %32

32:                                               ; preds = %19, %29, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16)
  br label %73

33:                                               ; preds = %6
  %34 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %3, i64 0, i32 0
  %35 = load i8, i8* %34, align 4, !range !3
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %3, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = tail call %"class.blink::Node"* @_ZN5blink10DOMNodeIds9NodeForIdEi(i32 %39) #17
  store %"class.blink::Node"* %40, %"class.blink::Node"** %5, align 8
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = tail call i8* @_Znwm(i64 48) #18
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %43, i8** %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = bitcast i64* %45 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %46, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0), i64 34, i1 false) #17
  %47 = getelementptr inbounds i8, i8* %43, i64 34
  store i8 0, i8* %47, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %8) #17
  %48 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %73

52:                                               ; preds = %42
  %53 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %53) #18
  br label %73

54:                                               ; preds = %37
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %73

55:                                               ; preds = %33
  %56 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366"* %4, i64 0, i32 0
  %57 = load i8, i8* %56, align 8, !range !3
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366"* %4, i64 0, i32 1
  tail call void @_ZN5blink17InspectorDOMAgent21NodeForRemoteObjectIdERKN3WTF6StringERPNS_4NodeE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %1, %"class.WTF::String"* dereferenceable(8) %60, %"class.blink::Node"** dereferenceable(8) %5)
  br label %73

61:                                               ; preds = %55
  %62 = tail call i8* @_Znwm(i64 64) #18
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %62, i8** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast i64* %64 to <2 x i64>*
  store <2 x i64> <i64 58, i64 -9223372036854775744>, <2 x i64>* %65, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %62, i8* align 1 getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i64 58, i1 false) #17
  %66 = getelementptr inbounds i8, i8* %62, i64 58
  store i8 0, i8* %66, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %9) #17
  %67 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %61
  %72 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %72) #18
  br label %73

73:                                               ; preds = %71, %61, %52, %42, %54, %59, %32
  ret void
}

declare %"class.blink::Node"* @_ZN5blink10DOMNodeIds9NodeForIdEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent21NodeForRemoteObjectIdERKN3WTF6StringERPNS_4NodeE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::Node"** nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::HandleScope", align 8
  %6 = alloca %"class.v8::Local", align 8
  %7 = alloca %"class.v8::Local.3568", align 8
  %8 = alloca %"class.std::__1::unique_ptr.3569", align 8
  %9 = alloca %"class.v8_inspector::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = bitcast %"class.v8::HandleScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 1
  %17 = bitcast %"class.v8::HandleScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  %18 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %5, %"class.v8::Isolate"* %18) #17
  %19 = bitcast %"class.v8::Local"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %6, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %20, align 8
  %21 = bitcast %"class.v8::Local.3568"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  %22 = getelementptr inbounds %"class.v8::Local.3568", %"class.v8::Local.3568"* %7, i64 0, i32 0
  store %"class.v8::Context"* null, %"class.v8::Context"** %22, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.3569"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #17
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.3569", %"class.std::__1::unique_ptr.3569"* %8, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::unique_ptr.3569"* %8 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 3
  %27 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %26, align 8
  %28 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #17
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %33, align 8
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %35 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %34, i64* %35, align 8
  br label %43

36:                                               ; preds = %4
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %42 = bitcast i8** %41 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %42, align 8
  br label %43

43:                                               ; preds = %32, %36
  %44 = phi i32 [ %39, %36 ], [ 0, %32 ]
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %44, i32* %45, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #17
  %46 = bitcast %"class.v8_inspector::V8InspectorSession"* %27 to i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.3569"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.3568"*, %"class.std::__1::unique_ptr.3569"*)***
  %47 = load i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.3569"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.3568"*, %"class.std::__1::unique_ptr.3569"*)**, i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.3569"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.3568"*, %"class.std::__1::unique_ptr.3569"*)*** %46, align 8
  %48 = getelementptr inbounds i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.3569"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.3568"*, %"class.std::__1::unique_ptr.3569"*)*, i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.3569"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.3568"*, %"class.std::__1::unique_ptr.3569"*)** %47, i64 15
  %49 = load i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.3569"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.3568"*, %"class.std::__1::unique_ptr.3569"*)*, i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.3569"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.3568"*, %"class.std::__1::unique_ptr.3569"*)** %48, align 8
  %50 = call zeroext i1 %49(%"class.v8_inspector::V8InspectorSession"* %27, %"class.std::__1::unique_ptr.3569"* nonnull %8, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %9, %"class.v8::Local"* nonnull %6, %"class.v8::Local.3568"* nonnull %7, %"class.std::__1::unique_ptr.3569"* null) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #17
  br i1 %50, label %80, label %51

51:                                               ; preds = %43
  %52 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #17
  %53 = load %"class.v8_inspector::StringBuffer"*, %"class.v8_inspector::StringBuffer"** %24, align 8
  store %"class.v8_inspector::StringBuffer"* null, %"class.v8_inspector::StringBuffer"** %24, align 8
  %54 = call %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringENSt3__110unique_ptrIN12v8_inspector12StringBufferENS0_14default_deleteIS3_EEEE(%"class.v8_inspector::StringBuffer"* %53) #17
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %11, %"class.WTF::String"* nonnull %12, i32 0) #17
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %11) #17
  %56 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #18
  br label %63

63:                                               ; preds = %51, %60
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #17
  br label %79

79:                                               ; preds = %63, %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #17
  br label %137

80:                                               ; preds = %43
  %81 = load %"class.v8::Value"*, %"class.v8::Value"** %20, align 8
  %82 = bitcast %"class.v8::Isolate"** %16 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 8
  %85 = inttoptr i64 %84 to %"class.blink::V8PerIsolateData"**
  %86 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %85, align 8
  %87 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %86, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %81) #17
  br i1 %87, label %100, label %88

88:                                               ; preds = %80
  %89 = call i8* @_Znwm(i64 48) #18
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %89, i8** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %92, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %89, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i64 0, i64 0), i64 34, i1 false) #17
  %93 = getelementptr inbounds i8, i8* %89, i64 34
  store i8 0, i8* %93, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %13) #17
  %94 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %137

98:                                               ; preds = %88
  %99 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %99) #18
  br label %137

100:                                              ; preds = %80
  %101 = bitcast %"class.v8::Local"* %6 to %"class.v8::Object"**
  %102 = load %"class.v8::Object"*, %"class.v8::Object"** %101, align 8
  %103 = bitcast %"class.v8::Object"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, -1
  %106 = inttoptr i64 %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = and i64 %104, -4294967296
  %109 = zext i32 %107 to i64
  %110 = or i64 %108, %109
  %111 = add i64 %110, 7
  %112 = inttoptr i64 %111 to i16*
  %113 = load i16, i16* %112, align 2
  switch i16 %113, label %118 [
    i16 1057, label %114
    i16 1056, label %114
    i16 1040, label %114
  ]

114:                                              ; preds = %100, %100, %100
  %115 = add i64 %104, 19
  %116 = inttoptr i64 %115 to i8**
  %117 = load i8*, i8** %116, align 1
  br label %120

118:                                              ; preds = %100
  %119 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #17
  br label %120

120:                                              ; preds = %114, %118
  %121 = phi i8* [ %117, %114 ], [ %119, %118 ]
  %122 = bitcast %"class.blink::Node"** %3 to i8**
  store i8* %121, i8** %122, align 8
  %123 = icmp eq i8* %121, null
  br i1 %123, label %124, label %136

124:                                              ; preds = %120
  %125 = call i8* @_Znwm(i64 64) #18
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %125, i8** %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %128 = bitcast i64* %127 to <2 x i64>*
  store <2 x i64> <i64 51, i64 -9223372036854775744>, <2 x i64>* %128, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %125, i8* align 1 getelementptr inbounds ([52 x i8], [52 x i8]* @.str.32, i64 0, i64 0), i64 51, i1 false) #17
  %129 = getelementptr inbounds i8, i8* %125, i64 51
  store i8 0, i8* %129, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %14) #17
  %130 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %124
  %135 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %135) #18
  br label %137

136:                                              ; preds = %120
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %137

137:                                              ; preds = %134, %124, %98, %88, %136, %79
  %138 = load %"class.v8_inspector::StringBuffer"*, %"class.v8_inspector::StringBuffer"** %24, align 8
  store %"class.v8_inspector::StringBuffer"* null, %"class.v8_inspector::StringBuffer"** %24, align 8
  %139 = icmp eq %"class.v8_inspector::StringBuffer"* %138, null
  br i1 %139, label %145, label %140

140:                                              ; preds = %137
  %141 = bitcast %"class.v8_inspector::StringBuffer"* %138 to void (%"class.v8_inspector::StringBuffer"*)***
  %142 = load void (%"class.v8_inspector::StringBuffer"*)**, void (%"class.v8_inspector::StringBuffer"*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %142, i64 1
  %144 = load void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %143, align 8
  call void %144(%"class.v8_inspector::StringBuffer"* nonnull %138) #17
  br label %145

145:                                              ; preds = %137, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent13AssertElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.blink::Element"** nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9)
  %10 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* %1, i32 %2) #17, !noalias !8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %12, label %24

12:                                               ; preds = %4
  %13 = tail call i8* @_Znwm(i64 48) #18
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8, !noalias !8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %16, align 8, !noalias !8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i64 33, i1 false) #17
  %17 = getelementptr inbounds i8, i8* %13, i64 33
  store i8 0, i8* %17, align 1, !noalias !8
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull %5) #17
  %18 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1, !noalias !8
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %12
  %23 = load i8*, i8** %14, align 8, !noalias !8
  call void @_ZdlPv(i8* %23) #18
  br label %25

24:                                               ; preds = %4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %6) #17
  br label %25

25:                                               ; preds = %12, %22, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9)
  %26 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %27, i32* %30, align 8
  %31 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %32 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %34 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #17
  br label %53

35:                                               ; preds = %25
  br i1 %11, label %41, label %36

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 12
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %36, %35
  store %"class.blink::Element"* null, %"class.blink::Element"** %3, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 22, i8* %43, align 1
  %44 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i64 22, i1 false) #17
  %45 = getelementptr inbounds i8, i8* %44, i64 22
  store i8 0, i8* %45, align 2
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %46 = load i8, i8* %43, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %50, label %53

48:                                               ; preds = %36
  %49 = bitcast %"class.blink::Element"** %3 to %"class.blink::Node"**
  store %"class.blink::Node"* %10, %"class.blink::Node"** %49, align 8
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %53

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #18
  br label %53

53:                                               ; preds = %50, %41, %48, %29
  %54 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #18
  br label %62

62:                                               ; preds = %53, %59
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::ShadowRoot"* @_ZN5blink17InspectorDOMAgent19UserAgentShadowRootEPNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #4 align 2 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %38, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 512
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %38, label %8

8:                                                ; preds = %3, %26
  %9 = phi i32 [ %28, %26 ], [ %5, %3 ]
  %10 = phi %"class.blink::Node"* [ %24, %26 ], [ %0, %3 ]
  %11 = and i32 %9, 12
  %12 = icmp eq i32 %11, 8
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %17, i64 0, i32 0
  %19 = icmp eq %"class.blink::Node"* %18, %10
  br i1 %19, label %29, label %20

20:                                               ; preds = %8, %13
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.blink::Node"** %21 to %"class.blink::ContainerNode"**
  %23 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %23, i64 0, i32 0
  %25 = icmp eq %"class.blink::ContainerNode"* %23, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %23, i64 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  br label %8

29:                                               ; preds = %20, %13
  %30 = phi %"class.blink::Node"* [ %24, %20 ], [ %10, %13 ]
  %31 = bitcast %"class.blink::Node"* %30 to %"class.blink::ShadowRoot"*
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 3, i32 0, i32 0, i32 1
  %33 = bitcast %"class.blink::TraceWrapperV8Reference"* %32 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 196608
  %36 = icmp eq i32 %35, 131072
  %37 = select i1 %36, %"class.blink::ShadowRoot"* %31, %"class.blink::ShadowRoot"* null
  br label %38

38:                                               ; preds = %3, %1, %29
  %39 = phi %"class.blink::ShadowRoot"* [ %37, %29 ], [ null, %1 ], [ null, %3 ]
  ret %"class.blink::ShadowRoot"* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent18AssertEditableNodeEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.blink::Node"** nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11)
  %12 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* %1, i32 %2) #17, !noalias !11
  store %"class.blink::Node"* %12, %"class.blink::Node"** %3, align 8, !noalias !11
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %14, label %26

14:                                               ; preds = %4
  %15 = tail call i8* @_Znwm(i64 48) #18
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8, !noalias !11
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %18, align 8, !noalias !11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i64 33, i1 false) #17
  %19 = getelementptr inbounds i8, i8* %15, i64 33
  store i8 0, i8* %19, align 1, !noalias !11
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull %5) #17
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1, !noalias !11
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %14
  %25 = load i8*, i8** %16, align 8, !noalias !11
  call void @_ZdlPv(i8* %25) #18
  br label %27

26:                                               ; preds = %4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %6) #17
  br label %27

27:                                               ; preds = %14, %24, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11)
  %28 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %29, i32* %32, align 8
  %33 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %34 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #17
  br label %130

37:                                               ; preds = %27
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 512
  %42 = icmp eq i32 %41, 0
  %43 = icmp eq %"class.blink::Node"* %38, null
  %44 = or i1 %43, %42
  br i1 %44, label %110, label %45

45:                                               ; preds = %37
  %46 = and i32 %40, 12
  %47 = icmp eq i32 %46, 8
  br i1 %47, label %49, label %48

48:                                               ; preds = %49, %45
  br label %68

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %51, i64 0, i32 1, i32 0, i32 0
  %53 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %53, i64 0, i32 0
  %55 = icmp eq %"class.blink::Node"* %54, %38
  br i1 %55, label %56, label %48

56:                                               ; preds = %49
  %57 = call i8* @_Znwm(i64 32) #18
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %57, i8** %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast i64* %59 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %60, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i64 24, i1 false) #17
  %61 = getelementptr inbounds i8, i8* %57, i64 24
  store i8 0, i8* %61, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %62 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %130

66:                                               ; preds = %56
  %67 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %67) #18
  br label %130

68:                                               ; preds = %48, %86
  %69 = phi i32 [ %88, %86 ], [ %40, %48 ]
  %70 = phi %"class.blink::Node"* [ %84, %86 ], [ %38, %48 ]
  %71 = and i32 %69, 12
  %72 = icmp eq i32 %71, 8
  br i1 %72, label %73, label %80

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %70, i64 0, i32 3, i32 0, i32 0
  %75 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %75, i64 0, i32 1, i32 0, i32 0
  %77 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %77, i64 0, i32 0
  %79 = icmp eq %"class.blink::Node"* %78, %70
  br i1 %79, label %89, label %80

80:                                               ; preds = %73, %68
  %81 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %70, i64 0, i32 2, i32 0, i32 0
  %82 = bitcast %"class.blink::Node"** %81 to %"class.blink::ContainerNode"**
  %83 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %83, i64 0, i32 0
  %85 = icmp eq %"class.blink::ContainerNode"* %83, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %83, i64 0, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  br label %68

89:                                               ; preds = %80, %73
  %90 = phi %"class.blink::Node"* [ %84, %80 ], [ %70, %73 ]
  %91 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 3, i32 0, i32 0, i32 1
  %92 = bitcast %"class.blink::TraceWrapperV8Reference"* %91 to i32*
  %93 = load i32, i32* %92, align 8
  %94 = and i32 %93, 196608
  %95 = icmp ne i32 %94, 131072
  %96 = icmp eq %"class.blink::Node"* %90, null
  %97 = or i1 %96, %95
  br i1 %97, label %110, label %98

98:                                               ; preds = %89
  %99 = call i8* @_Znwm(i64 48) #18
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %99, i8** %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = bitcast i64* %101 to <2 x i64>*
  store <2 x i64> <i64 46, i64 -9223372036854775760>, <2 x i64>* %102, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %99, i8* align 1 getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10, i64 0, i64 0), i64 46, i1 false) #17
  %103 = getelementptr inbounds i8, i8* %99, i64 46
  store i8 0, i8* %103, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %8) #17
  %104 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %130

108:                                              ; preds = %98
  %109 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %109) #18
  br label %130

110:                                              ; preds = %89, %37
  %111 = bitcast %"class.blink::Node"* %38 to i8 (%"class.blink::Node"*)***
  %112 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %111, align 8
  %113 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %112, i64 34
  %114 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %113, align 8
  %115 = call zeroext i8 %114(%"class.blink::Node"* %38) #17
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %129, label %117

117:                                              ; preds = %110
  %118 = call i8* @_Znwm(i64 32) #18
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %118, i8** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = bitcast i64* %120 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %121, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %118, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0), i64 27, i1 false) #17
  %122 = getelementptr inbounds i8, i8* %118, i64 27
  store i8 0, i8* %122, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %9) #17
  %123 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %117
  %128 = load i8*, i8** %119, align 8
  call void @_ZdlPv(i8* %128) #18
  br label %130

129:                                              ; preds = %110
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %130

130:                                              ; preds = %127, %117, %108, %98, %66, %56, %129, %31
  %131 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %132 = bitcast %"class.std::__1::basic_string"* %131 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  call void @_ZdlPv(i8* %138) #18
  br label %139

139:                                              ; preds = %130, %136
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent23AssertEditableChildNodeEPNS_7ElementEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.blink::Element"* readnone, i32, %"class.blink::Node"** nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent18AssertEditableNodeEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.blink::InspectorDOMAgent"* %1, i32 %3, %"class.blink::Node"** dereferenceable(8) %4)
  %9 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %18, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #17
  br label %36

18:                                               ; preds = %5
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %20 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %19) #17
  %21 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0
  %22 = icmp eq %"class.blink::ContainerNode"* %20, %21
  br i1 %22, label %35, label %23

23:                                               ; preds = %18
  %24 = call i8* @_Znwm(i64 48) #18
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast i64* %26 to <2 x i64>*
  store <2 x i64> <i64 47, i64 -9223372036854775760>, <2 x i64>* %27, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %24, i8* align 1 getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12, i64 0, i64 0), i64 47, i1 false) #17
  %28 = getelementptr inbounds i8, i8* %24, i64 47
  store i8 0, i8* %28, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %29 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %23
  %34 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %34) #18
  br label %36

35:                                               ; preds = %18
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %36

36:                                               ; preds = %33, %23, %35, %12
  %37 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #18
  br label %45

45:                                               ; preds = %36, %42
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #17
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent21AssertEditableElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.blink::Element"** nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.crdtp::DispatchResponse", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.crdtp::DispatchResponse"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent13AssertElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* nonnull sret %5, %"class.blink::InspectorDOMAgent"* %1, i32 %2, %"class.blink::Element"** dereferenceable(8) %3)
  %9 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %18, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #17
  br label %89

18:                                               ; preds = %4
  %19 = bitcast %"class.blink::Element"** %3 to %"class.blink::Node"**
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 512
  %24 = icmp eq i32 %23, 0
  %25 = icmp eq %"class.blink::Node"* %20, null
  %26 = or i1 %25, %24
  br i1 %26, label %69, label %27

27:                                               ; preds = %18, %45
  %28 = phi i32 [ %47, %45 ], [ %22, %18 ]
  %29 = phi %"class.blink::Node"* [ %43, %45 ], [ %20, %18 ]
  %30 = and i32 %28, 12
  %31 = icmp eq i32 %30, 8
  br i1 %31, label %32, label %39

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 1, i32 0, i32 0
  %36 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %36, i64 0, i32 0
  %38 = icmp eq %"class.blink::Node"* %37, %29
  br i1 %38, label %48, label %39

39:                                               ; preds = %32, %27
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.blink::Node"** %40 to %"class.blink::ContainerNode"**
  %42 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %42, i64 0, i32 0
  %44 = icmp eq %"class.blink::ContainerNode"* %42, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %42, i64 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  br label %27

48:                                               ; preds = %39, %32
  %49 = phi %"class.blink::Node"* [ %43, %39 ], [ %29, %32 ]
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 3, i32 0, i32 0, i32 1
  %51 = bitcast %"class.blink::TraceWrapperV8Reference"* %50 to i32*
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 196608
  %54 = icmp ne i32 %53, 131072
  %55 = icmp eq %"class.blink::Node"* %49, null
  %56 = or i1 %55, %54
  br i1 %56, label %69, label %57

57:                                               ; preds = %48
  %58 = call i8* @_Znwm(i64 64) #18
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %58, i8** %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = bitcast i64* %60 to <2 x i64>*
  store <2 x i64> <i64 49, i64 -9223372036854775744>, <2 x i64>* %61, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %58, i8* align 1 getelementptr inbounds ([50 x i8], [50 x i8]* @.str.13, i64 0, i64 0), i64 49, i1 false) #17
  %62 = getelementptr inbounds i8, i8* %58, i64 49
  store i8 0, i8* %62, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %6) #17
  %63 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %89

67:                                               ; preds = %57
  %68 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %68) #18
  br label %89

69:                                               ; preds = %48, %18
  %70 = bitcast %"class.blink::Node"* %20 to i8 (%"class.blink::Node"*)***
  %71 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %70, align 8
  %72 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %71, i64 34
  %73 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %72, align 8
  %74 = call zeroext i8 %73(%"class.blink::Node"* %20) #17
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %88, label %76

76:                                               ; preds = %69
  %77 = call i8* @_Znwm(i64 32) #18
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %77, i8** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = bitcast i64* %79 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %80, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %77, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0), i64 27, i1 false) #17
  %81 = getelementptr inbounds i8, i8* %77, i64 27
  store i8 0, i8* %81, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %82 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %76
  %87 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %87) #18
  br label %89

88:                                               ; preds = %69
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %89

89:                                               ; preds = %86, %76, %67, %57, %88, %12
  %90 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 1
  %91 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %97) #18
  br label %98

98:                                               ; preds = %89, %95
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #17
  ret void
}

declare void @_ZN5blink13CoreProbeSink20AddInspectorDOMAgentEPNS_17InspectorDOMAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorDOMAgent"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent6enableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 21, i32 2
  %4 = load i8, i8* %3, align 1, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN5blink17InspectorDOMAgent14EnableAndResetEv(%"class.blink::InspectorDOMAgent"* %1)
  br label %7

7:                                                ; preds = %2, %6
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent6enableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %4 = getelementptr inbounds i8, i8* %3, i64 369
  %5 = load i8, i8* %4, align 1, !range !3, !noalias !14
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast i8* %3 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent14EnableAndResetEv(%"class.blink::InspectorDOMAgent"* %8) #17
  br label %9

9:                                                ; preds = %2, %7
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 21, i32 2
  %5 = load i8, i8* %4, align 1, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 32) #18
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %11, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i64 29, i1 false) #17
  %12 = getelementptr inbounds i8, i8* %8, i64 29
  store i8 0, i8* %12, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %3) #17
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %51

17:                                               ; preds = %7
  %18 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %18) #18
  br label %51

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 21, i32 1
  %21 = load i8, i8* %20, align 8, !range !3
  %22 = icmp eq i8 %21, %5
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  store i8 %21, i8* %4, align 1
  %24 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 21, i32 0, i32 2
  %25 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 21, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %25, %"class.WTF::String"* dereferenceable(8) %26, %"class.blink::WebVector.3001"* null) #17
  br label %27

27:                                               ; preds = %19, %23
  %28 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %28, align 8
  tail call void @_ZN5blink13CoreProbeSink23RemoveInspectorDOMAgentEPNS_17InspectorDOMAgentE(%"class.blink::CoreProbeSink"* %29, %"class.blink::InspectorDOMAgent"* %1) #17
  %30 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 17, i32 0
  %31 = bitcast %"class.blink::MemberBase.2800"* %30 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 18, i32 0
  %33 = bitcast %"class.blink::MemberBase.2812"* %32 to i64*
  store atomic i64 0, i64* %33 monotonic, align 8
  %34 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 14
  %35 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = icmp eq %"class.blink::Document"* %36, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %27
  tail call void @_ZN5blink17InspectorDOMAgent23DiscardFrontendBindingsEv(%"class.blink::InspectorDOMAgent"* %1) #17
  %39 = bitcast %"class.blink::Member.326"* %34 to i64*
  store atomic i64 0, i64* %39 monotonic, align 8
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #17
  br label %44

44:                                               ; preds = %42, %38
  %45 = load i8, i8* %4, align 1, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %48, align 8
  tail call void @_ZN5blink8protocol3DOM8Frontend15documentUpdatedEv(%"class.blink::protocol::DOM::Frontend"* %49) #17
  br label %50

50:                                               ; preds = %27, %44, %47
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %51

51:                                               ; preds = %17, %7, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !range !3
  %6 = icmp eq i8 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store i8 %3, i8* %4, align 1
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector.3001"* null) #17
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

declare void @_ZN5blink13CoreProbeSink23RemoveInspectorDOMAgentEPNS_17InspectorDOMAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorDOMAgent"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %4 = bitcast i8* %3 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent7disableEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent11getDocumentEN5crdtp6detail10ValueMaybeIiEENS3_IbEEPNSt3__110unique_ptrINS_8protocol3DOM4NodeENS6_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly, %"class.std::__1::unique_ptr.3367"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 21, i32 2
  %11 = load i8, i8* %10, align 1, !range !3, !noalias !17
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %5
  tail call void @_ZN5blink17InspectorDOMAgent14EnableAndResetEv(%"class.blink::InspectorDOMAgent"* %1) #17
  br label %14

14:                                               ; preds = %5, %13
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %6) #17
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #18
  br label %23

23:                                               ; preds = %14, %20
  %24 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 14, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = icmp eq %"class.blink::Document"* %25, null
  br i1 %26, label %27, label %39

27:                                               ; preds = %23
  %28 = call i8* @_Znwm(i64 32) #18
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %28, i8** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %31, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0), i64 25, i1 false) #17
  %32 = getelementptr inbounds i8, i8* %28, i64 25
  store i8 0, i8* %32, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %33 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %72

37:                                               ; preds = %27
  %38 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %38) #18
  br label %72

39:                                               ; preds = %23
  call void @_ZN5blink17InspectorDOMAgent23DiscardFrontendBindingsEv(%"class.blink::InspectorDOMAgent"* %1)
  %40 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40)
  store i32 2, i32* %8, align 4
  %41 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %2, i64 0, i32 0
  %42 = load i8, i8* %41, align 4, !range !3
  %43 = icmp eq i8 %42, 0
  %44 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %2, i64 0, i32 1
  %45 = select i1 %43, i32* %8, i32* %44
  %46 = load i32, i32* %45, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40)
  %47 = icmp eq i32 %46, -1
  %48 = select i1 %47, i32 2147483647, i32 %46
  %49 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %50 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %49, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9)
  store i8 0, i8* %9, align 1
  %51 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %3, i64 0, i32 0
  %52 = load i8, i8* %51, align 1, !range !3
  %53 = icmp eq i8 %52, 0
  %54 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %3, i64 0, i32 1
  %55 = select i1 %53, i8* %9, i8* %54
  %56 = load i8, i8* %55, align 1, !range !3
  %57 = icmp ne i8 %56, 0
  %58 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 5, i32 0, i32 0
  %59 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %58, align 8
  %60 = call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* %50, i32 %48, i1 zeroext %57, %"class.blink::HeapHashMap.2752"* %59, %"class.std::__1::vector.3379"* null)
  %61 = ptrtoint %"class.blink::protocol::DOM::Node"* %60 to i64
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %4, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %62, align 8
  %64 = bitcast %"class.std::__1::unique_ptr.3367"* %4 to i64*
  store i64 %61, i64* %64, align 8
  %65 = icmp eq %"class.blink::protocol::DOM::Node"* %63, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %39
  %67 = bitcast %"class.blink::protocol::DOM::Node"* %63 to void (%"class.blink::protocol::DOM::Node"*)***
  %68 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %68, i64 2
  %70 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %69, align 8
  call void %70(%"class.blink::protocol::DOM::Node"* nonnull %63) #17
  br label %71

71:                                               ; preds = %66, %39
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9)
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %72

72:                                               ; preds = %37, %27, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Node"*, i32, i1 zeroext, %"class.blink::HeapHashMap.2752"*, %"class.std::__1::vector.3379"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend.3673", align 8
  %11 = alloca %"class.std::__1::unique_ptr.3367", align 8
  %12 = alloca i32, align 4
  %13 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #17
  %14 = tail call i32 @_ZN5blink17InspectorDOMAgent4BindEPNS_4NodeEPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %1, %"class.blink::HeapHashMap.2752"* %4)
  store i32 %14, i32* %8, align 4
  %15 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %17 = bitcast %"class.blink::Node"* %1 to i32 (%"class.blink::Node"*)***
  %18 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %18, i64 30
  %20 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %19, align 8
  %21 = tail call i32 %20(%"class.blink::Node"* %1) #17
  switch i32 %21, label %185 [
    i32 3, label %22
    i32 8, label %22
    i32 4, label %22
    i32 2, label %133
    i32 1, label %159
  ]

22:                                               ; preds = %6, %6, %6
  %23 = bitcast %"class.blink::Node"* %1 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %24 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %24, i64 28
  %26 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %25, align 8
  %27 = tail call %"class.WTF::StringImpl"* %26(%"class.blink::Node"* %1) #17
  %28 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %29 = bitcast %"class.WTF::String"* %9 to i64*
  store i64 %28, i64* %29, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %30, label %185, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %33, 10000
  br i1 %34, label %35, label %185

35:                                               ; preds = %31
  %36 = bitcast %"class.WTF::StringAppend.3673"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #17
  %37 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %9, i32 0, i32 10000) #17
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %82, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %56

46:                                               ; preds = %39
  %47 = zext i32 %45 to i33
  %48 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #17
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %46
  call void @llvm.trap() #17
  unreachable

54:                                               ; preds = %46
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %44, align 4
  br label %56

56:                                               ; preds = %39, %54
  %57 = phi i32 [ %55, %54 ], [ %45, %39 ]
  %58 = load atomic i32, i32* %40 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %71

61:                                               ; preds = %56
  %62 = zext i32 %57 to i33
  %63 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #17
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !2

68:                                               ; preds = %61
  call void @llvm.trap() #17
  unreachable

69:                                               ; preds = %61
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %44, align 4
  br label %71

71:                                               ; preds = %69, %56
  %72 = phi i32 [ %70, %69 ], [ %57, %56 ]
  %73 = load atomic i32, i32* %40 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %71
  %77 = add i32 %72, -1
  store i32 %77, i32* %44, align 4
  br label %78

78:                                               ; preds = %76, %71
  %79 = phi i32 [ %77, %76 ], [ %72, %71 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #17
  br label %82

82:                                               ; preds = %35, %78, %81
  %83 = getelementptr inbounds %"class.WTF::StringAppend.3673", %"class.WTF::StringAppend.3673"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %83, align 8
  %84 = getelementptr inbounds %"class.WTF::StringAppend.3673", %"class.WTF::StringAppend.3673"* %10, i64 0, i32 1
  store i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZN5blink12_GLOBAL__N_114kEllipsisUCharE, i64 0, i64 0), i16** %84, align 8
  %85 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKDsEcvS1_Ev(%"class.WTF::StringAppend.3673"* nonnull %10)
  %86 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %86, i64* %29, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #17
  br label %102

102:                                              ; preds = %101, %98, %82
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #17
  br label %118

118:                                              ; preds = %102, %114, %117
  br i1 %38, label %132, label %119

119:                                              ; preds = %118
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #17
  br label %132

132:                                              ; preds = %118, %128, %131
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #17
  br label %185

133:                                              ; preds = %6
  %134 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 0, i32 0, i32 1
  %135 = bitcast %"class.blink::TraceWrapperV8Reference"* %134 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %136 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %136, i64 0, i32 3, i32 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %157, label %140

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %157

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = zext i32 %147 to i33
  %149 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %148, i33 1) #17
  %150 = extractvalue { i33, i1 } %149, 1
  %151 = extractvalue { i33, i1 } %149, 0
  %152 = icmp slt i33 %151, 0
  %153 = or i1 %150, %152
  br i1 %153, label %154, label %155, !prof !2

154:                                              ; preds = %145
  tail call void @llvm.trap() #17
  unreachable

155:                                              ; preds = %145
  %156 = trunc i33 %151 to i32
  store i32 %156, i32* %146, align 4
  br label %157

157:                                              ; preds = %133, %140, %155
  %158 = ptrtoint %"class.WTF::StringImpl"* %138 to i64
  br label %185

159:                                              ; preds = %6
  %160 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %161 = bitcast %"class.blink::Member.318"* %160 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %162 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %162, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %183, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %183

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i33
  %175 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %174, i33 1) #17
  %176 = extractvalue { i33, i1 } %175, 1
  %177 = extractvalue { i33, i1 } %175, 0
  %178 = icmp slt i33 %177, 0
  %179 = or i1 %176, %178
  br i1 %179, label %180, label %181, !prof !2

180:                                              ; preds = %171
  tail call void @llvm.trap() #17
  unreachable

181:                                              ; preds = %171
  %182 = trunc i33 %177 to i32
  store i32 %182, i32* %172, align 4
  br label %183

183:                                              ; preds = %159, %166, %181
  %184 = ptrtoint %"class.WTF::StringImpl"* %164 to i64
  br label %185

185:                                              ; preds = %22, %6, %31, %132, %183, %157
  %186 = phi i64 [ 0, %6 ], [ %184, %183 ], [ %158, %157 ], [ 0, %132 ], [ 0, %31 ], [ 0, %22 ]
  %187 = call i8* @_Znwm(i64 328) #18
  %188 = bitcast i8* %187 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3DOM4NodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %188, align 8
  %189 = getelementptr inbounds i8, i8* %187, i64 12
  store i8 0, i8* %189, align 4
  %190 = getelementptr inbounds i8, i8* %187, i64 16
  %191 = bitcast i8* %190 to i32*
  store i32 0, i32* %191, align 4
  %192 = getelementptr inbounds i8, i8* %187, i64 32
  %193 = getelementptr inbounds i8, i8* %187, i64 60
  %194 = getelementptr inbounds i8, i8* %187, i64 88
  %195 = bitcast i8* %194 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %195, align 8
  %196 = getelementptr inbounds i8, i8* %187, i64 96
  store i8 0, i8* %196, align 8
  %197 = getelementptr inbounds i8, i8* %187, i64 104
  %198 = bitcast i8* %197 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %198, align 8
  %199 = getelementptr inbounds i8, i8* %187, i64 112
  store i8 0, i8* %199, align 8
  %200 = getelementptr inbounds i8, i8* %187, i64 120
  %201 = bitcast i8* %200 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %201, align 8
  %202 = getelementptr inbounds i8, i8* %187, i64 128
  store i8 0, i8* %202, align 8
  %203 = getelementptr inbounds i8, i8* %187, i64 136
  %204 = bitcast i8* %203 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %204, align 8
  %205 = getelementptr inbounds i8, i8* %187, i64 144
  store i8 0, i8* %205, align 8
  %206 = getelementptr inbounds i8, i8* %187, i64 152
  %207 = bitcast i8* %206 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %207, align 8
  %208 = getelementptr inbounds i8, i8* %187, i64 160
  store i8 0, i8* %208, align 8
  %209 = getelementptr inbounds i8, i8* %187, i64 168
  %210 = bitcast i8* %209 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %210, align 8
  %211 = getelementptr inbounds i8, i8* %187, i64 176
  store i8 0, i8* %211, align 8
  %212 = getelementptr inbounds i8, i8* %187, i64 184
  %213 = bitcast i8* %212 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %213, align 8
  %214 = getelementptr inbounds i8, i8* %187, i64 192
  store i8 0, i8* %214, align 8
  %215 = getelementptr inbounds i8, i8* %187, i64 200
  %216 = bitcast i8* %215 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %216, align 8
  %217 = getelementptr inbounds i8, i8* %187, i64 208
  store i8 0, i8* %217, align 8
  %218 = getelementptr inbounds i8, i8* %187, i64 216
  %219 = bitcast i8* %218 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %219, align 8
  %220 = getelementptr inbounds i8, i8* %187, i64 224
  store i8 0, i8* %220, align 8
  %221 = getelementptr inbounds i8, i8* %187, i64 232
  %222 = bitcast i8* %221 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %222, align 8
  %223 = getelementptr inbounds i8, i8* %187, i64 240
  store i8 0, i8* %223, align 8
  %224 = getelementptr inbounds i8, i8* %187, i64 248
  %225 = getelementptr inbounds i8, i8* %187, i64 312
  store i8 0, i8* %225, align 8
  %226 = getelementptr inbounds i8, i8* %187, i64 320
  %227 = bitcast i8* %226 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %227, align 8
  %228 = getelementptr inbounds i8, i8* %187, i64 8
  %229 = bitcast i8* %228 to i32*
  %230 = getelementptr inbounds i8, i8* %187, i64 20
  %231 = bitcast i8* %230 to i32*
  store i32 0, i32* %231, align 4
  %232 = getelementptr inbounds i8, i8* %187, i64 24
  %233 = bitcast i8* %232 to i32*
  store i32 0, i32* %233, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 25, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 4 %193, i8 0, i64 21, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %224, i8 0, i64 58, i1 false) #17
  %234 = bitcast i8* %187 to %"class.blink::protocol::DOM::Node"*
  %235 = load i32, i32* %8, align 4
  store i32 %235, i32* %229, align 8
  %236 = call i32 @_ZN5blink18IdentifiersFactory12IntIdForNodeEPNS_4NodeE(%"class.blink::Node"* %1) #17
  store i32 %236, i32* %231, align 4
  %237 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %17, align 8
  %238 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %237, i64 30
  %239 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %238, align 8
  %240 = call i32 %239(%"class.blink::Node"* %1) #17
  store i32 %240, i32* %233, align 8
  %241 = bitcast %"class.blink::Node"* %1 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %242 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %241, align 8
  %243 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %242, i64 27
  %244 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %243, align 8
  %245 = call %"class.WTF::StringImpl"* %244(%"class.blink::Node"* %1) #17
  %246 = icmp eq %"class.WTF::StringImpl"* %245, null
  br i1 %246, label %264, label %247

247:                                              ; preds = %185
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %264

252:                                              ; preds = %247
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = zext i32 %254 to i33
  %256 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %255, i33 1) #17
  %257 = extractvalue { i33, i1 } %256, 1
  %258 = extractvalue { i33, i1 } %256, 0
  %259 = icmp slt i33 %258, 0
  %260 = or i1 %257, %259
  br i1 %260, label %261, label %262, !prof !2

261:                                              ; preds = %252
  call void @llvm.trap() #17
  unreachable

262:                                              ; preds = %252
  %263 = trunc i33 %258 to i32
  store i32 %263, i32* %253, align 4
  br label %264

264:                                              ; preds = %262, %247, %185
  %265 = ptrtoint %"class.WTF::StringImpl"* %245 to i64
  %266 = bitcast i8* %192 to i64*
  %267 = bitcast i8* %192 to %"class.WTF::StringImpl"**
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  store i64 %265, i64* %266, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %264
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #17
  br label %283

283:                                              ; preds = %264, %279, %282
  %284 = getelementptr inbounds i8, i8* %187, i64 40
  %285 = inttoptr i64 %186 to %"class.WTF::StringImpl"*
  %286 = icmp eq i64 %186, 0
  br i1 %286, label %304, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %304

292:                                              ; preds = %287
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %294 = load i32, i32* %293, align 4
  %295 = zext i32 %294 to i33
  %296 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %295, i33 1) #17
  %297 = extractvalue { i33, i1 } %296, 1
  %298 = extractvalue { i33, i1 } %296, 0
  %299 = icmp slt i33 %298, 0
  %300 = or i1 %297, %299
  br i1 %300, label %301, label %302, !prof !2

301:                                              ; preds = %292
  call void @llvm.trap() #17
  unreachable

302:                                              ; preds = %292
  %303 = trunc i33 %298 to i32
  store i32 %303, i32* %293, align 4
  br label %304

304:                                              ; preds = %302, %287, %283
  %305 = bitcast i8* %284 to i64*
  %306 = bitcast i8* %284 to %"class.WTF::StringImpl"**
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  store i64 %186, i64* %305, align 8
  %308 = icmp eq %"class.WTF::StringImpl"* %307, null
  br i1 %308, label %322, label %309

309:                                              ; preds = %304
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 0
  %315 = load i32, i32* %314, align 4
  br i1 %313, label %316, label %318

316:                                              ; preds = %309
  %317 = add i32 %315, -1
  store i32 %317, i32* %314, align 4
  br label %318

318:                                              ; preds = %316, %309
  %319 = phi i32 [ %317, %316 ], [ %315, %309 ]
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %322

321:                                              ; preds = %318
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %307) #17
  br label %322

322:                                              ; preds = %304, %318, %321
  %323 = getelementptr inbounds i8, i8* %187, i64 48
  %324 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %325 = icmp eq %"class.WTF::StringImpl"* %324, null
  br i1 %325, label %343, label %326

326:                                              ; preds = %322
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %324, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = load atomic i32, i32* %327 monotonic, align 4
  %329 = and i32 %328, 2
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %343

331:                                              ; preds = %326
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %324, i64 0, i32 0
  %333 = load i32, i32* %332, align 4
  %334 = zext i32 %333 to i33
  %335 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %334, i33 1) #17
  %336 = extractvalue { i33, i1 } %335, 1
  %337 = extractvalue { i33, i1 } %335, 0
  %338 = icmp slt i33 %337, 0
  %339 = or i1 %336, %338
  br i1 %339, label %340, label %341, !prof !2

340:                                              ; preds = %331
  call void @llvm.trap() #17
  unreachable

341:                                              ; preds = %331
  %342 = trunc i33 %337 to i32
  store i32 %342, i32* %332, align 4
  br label %343

343:                                              ; preds = %341, %326, %322
  %344 = ptrtoint %"class.WTF::StringImpl"* %324 to i64
  %345 = bitcast i8* %323 to i64*
  %346 = bitcast i8* %323 to %"class.WTF::StringImpl"**
  %347 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %346, align 8
  store i64 %344, i64* %345, align 8
  %348 = icmp eq %"class.WTF::StringImpl"* %347, null
  br i1 %348, label %362, label %349

349:                                              ; preds = %343
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %351 = load atomic i32, i32* %350 monotonic, align 4
  %352 = and i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 0
  %355 = load i32, i32* %354, align 4
  br i1 %353, label %356, label %358

356:                                              ; preds = %349
  %357 = add i32 %355, -1
  store i32 %357, i32* %354, align 4
  br label %358

358:                                              ; preds = %356, %349
  %359 = phi i32 [ %357, %356 ], [ %355, %349 ]
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %361, label %362

361:                                              ; preds = %358
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %347) #17
  br label %362

362:                                              ; preds = %343, %358, %361
  br i1 %246, label %376, label %363

363:                                              ; preds = %362
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %365 = load atomic i32, i32* %364 monotonic, align 4
  %366 = and i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %369 = load i32, i32* %368, align 4
  br i1 %367, label %370, label %372

370:                                              ; preds = %363
  %371 = add i32 %369, -1
  store i32 %371, i32* %368, align 4
  br label %372

372:                                              ; preds = %370, %363
  %373 = phi i32 [ %371, %370 ], [ %369, %363 ]
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %375, label %376

375:                                              ; preds = %372
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %245) #17
  br label %376

376:                                              ; preds = %375, %372, %362
  %377 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %378 = load i32, i32* %377, align 8
  %379 = and i32 %378, 48
  %380 = icmp eq i32 %379, 32
  br i1 %380, label %381, label %384

381:                                              ; preds = %376
  %382 = getelementptr inbounds i8, i8* %187, i64 305
  store i8 1, i8* %382, align 1
  %383 = getelementptr inbounds i8, i8* %187, i64 304
  store i8 1, i8* %383, align 1
  br label %384

384:                                              ; preds = %381, %376
  %385 = icmp eq %"class.blink::Node"* %1, null
  br i1 %385, label %1698, label %386

386:                                              ; preds = %384
  %387 = and i32 %378, 12
  %388 = icmp eq i32 %387, 0
  %389 = bitcast %"class.blink::Node"* %1 to %"class.blink::Element"*
  br i1 %388, label %390, label %1185

390:                                              ; preds = %386
  %391 = call %"class.std::__1::vector.3393"* @_ZN5blink17InspectorDOMAgent30BuildArrayForElementAttributesEPNS_7ElementE(%"class.blink::InspectorDOMAgent"* undef, %"class.blink::Element"* nonnull %389)
  %392 = ptrtoint %"class.std::__1::vector.3393"* %391 to i64
  %393 = getelementptr inbounds i8, i8* %187, i64 72
  %394 = bitcast i8* %393 to %"class.std::__1::vector.3393"**
  %395 = load %"class.std::__1::vector.3393"*, %"class.std::__1::vector.3393"** %394, align 8
  %396 = bitcast i8* %393 to i64*
  store i64 %392, i64* %396, align 8
  %397 = icmp eq %"class.std::__1::vector.3393"* %395, null
  br i1 %397, label %435, label %398

398:                                              ; preds = %390
  %399 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %395, i64 0, i32 0, i32 0
  %400 = load %"class.WTF::String"*, %"class.WTF::String"** %399, align 8
  %401 = icmp eq %"class.WTF::String"* %400, null
  br i1 %401, label %433, label %402

402:                                              ; preds = %398
  %403 = bitcast %"class.WTF::String"* %400 to i8*
  %404 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %395, i64 0, i32 0, i32 1
  %405 = load %"class.WTF::String"*, %"class.WTF::String"** %404, align 8
  %406 = icmp eq %"class.WTF::String"* %405, %400
  br i1 %406, label %431, label %407

407:                                              ; preds = %402, %426
  %408 = phi %"class.WTF::String"* [ %409, %426 ], [ %405, %402 ]
  %409 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %408, i64 -1
  %410 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %409, i64 0, i32 0, i32 0
  %411 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %410, align 8
  %412 = icmp eq %"class.WTF::StringImpl"* %411, null
  br i1 %412, label %426, label %413

413:                                              ; preds = %407
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load atomic i32, i32* %414 monotonic, align 4
  %416 = and i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 0, i32 0
  %419 = load i32, i32* %418, align 4
  br i1 %417, label %420, label %422

420:                                              ; preds = %413
  %421 = add i32 %419, -1
  store i32 %421, i32* %418, align 4
  br label %422

422:                                              ; preds = %420, %413
  %423 = phi i32 [ %421, %420 ], [ %419, %413 ]
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %426

425:                                              ; preds = %422
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %411) #17
  br label %426

426:                                              ; preds = %425, %422, %407
  %427 = icmp eq %"class.WTF::String"* %409, %400
  br i1 %427, label %428, label %407

428:                                              ; preds = %426
  %429 = bitcast %"class.std::__1::vector.3393"* %395 to i8**
  %430 = load i8*, i8** %429, align 8
  br label %431

431:                                              ; preds = %402, %428
  %432 = phi i8* [ %430, %428 ], [ %403, %402 ]
  store %"class.WTF::String"* %400, %"class.WTF::String"** %404, align 8
  call void @_ZdlPv(i8* %432) #18
  br label %433

433:                                              ; preds = %398, %431
  %434 = bitcast %"class.std::__1::vector.3393"* %395 to i8*
  call void @_ZdlPv(i8* %434) #18
  br label %435

435:                                              ; preds = %433, %390
  %436 = bitcast %"class.blink::Node"* %1 to i1 (%"class.blink::Node"*)***
  %437 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %436, align 8
  %438 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %437, i64 42
  %439 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %438, align 8
  %440 = call zeroext i1 %439(%"class.blink::Node"* nonnull %1) #17
  %441 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLFrameOwnerElement"*
  br i1 %440, label %442, label %563

442:                                              ; preds = %435
  %443 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 5
  %444 = bitcast %"class.blink::Member.318"* %443 to %"class.blink::Frame"**
  %445 = load %"class.blink::Frame"*, %"class.blink::Frame"** %444, align 8
  %446 = icmp eq %"class.blink::Frame"* %445, null
  br i1 %446, label %545, label %447

447:                                              ; preds = %442
  %448 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* nonnull %445) #17
  %449 = icmp eq %"class.WTF::StringImpl"* %448, null
  br i1 %449, label %467, label %450

450:                                              ; preds = %447
  %451 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %448, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %452 = load atomic i32, i32* %451 monotonic, align 4
  %453 = and i32 %452, 2
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %486

455:                                              ; preds = %450
  %456 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %448, i64 0, i32 0
  %457 = load i32, i32* %456, align 4
  %458 = zext i32 %457 to i33
  %459 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %458, i33 1) #17
  %460 = extractvalue { i33, i1 } %459, 1
  %461 = extractvalue { i33, i1 } %459, 0
  %462 = icmp slt i33 %461, 0
  %463 = or i1 %460, %462
  br i1 %463, label %464, label %465, !prof !2

464:                                              ; preds = %455
  call void @llvm.trap() #17
  unreachable

465:                                              ; preds = %455
  %466 = trunc i33 %461 to i32
  store i32 %466, i32* %456, align 4
  br label %486

467:                                              ; preds = %447
  %468 = bitcast i8* %224 to i64*
  %469 = bitcast i8* %224 to %"class.WTF::StringImpl"**
  %470 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %469, align 8
  store i64 0, i64* %468, align 8
  %471 = icmp eq %"class.WTF::StringImpl"* %470, null
  br i1 %471, label %485, label %472

472:                                              ; preds = %467
  %473 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %470, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %474 = load atomic i32, i32* %473 monotonic, align 4
  %475 = and i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %470, i64 0, i32 0
  %478 = load i32, i32* %477, align 4
  br i1 %476, label %479, label %481

479:                                              ; preds = %472
  %480 = add i32 %478, -1
  store i32 %480, i32* %477, align 4
  br label %481

481:                                              ; preds = %479, %472
  %482 = phi i32 [ %480, %479 ], [ %478, %472 ]
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %484, label %485

484:                                              ; preds = %481
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %470) #17
  br label %485

485:                                              ; preds = %467, %481, %484
  store i8 1, i8* %223, align 8
  br label %545

486:                                              ; preds = %465, %450
  %487 = load atomic i32, i32* %451 monotonic, align 4
  %488 = and i32 %487, 2
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %502

490:                                              ; preds = %486
  %491 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %448, i64 0, i32 0
  %492 = load i32, i32* %491, align 4
  %493 = zext i32 %492 to i33
  %494 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %493, i33 1) #17
  %495 = extractvalue { i33, i1 } %494, 1
  %496 = extractvalue { i33, i1 } %494, 0
  %497 = icmp slt i33 %496, 0
  %498 = or i1 %495, %497
  br i1 %498, label %499, label %500, !prof !2

499:                                              ; preds = %490
  call void @llvm.trap() #17
  unreachable

500:                                              ; preds = %490
  %501 = trunc i33 %496 to i32
  store i32 %501, i32* %491, align 4
  br label %502

502:                                              ; preds = %500, %486
  %503 = ptrtoint %"class.WTF::StringImpl"* %448 to i64
  %504 = bitcast i8* %224 to i64*
  %505 = bitcast i8* %224 to %"class.WTF::StringImpl"**
  %506 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %505, align 8
  store i64 %503, i64* %504, align 8
  %507 = icmp eq %"class.WTF::StringImpl"* %506, null
  br i1 %507, label %521, label %508

508:                                              ; preds = %502
  %509 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %506, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %510 = load atomic i32, i32* %509 monotonic, align 4
  %511 = and i32 %510, 2
  %512 = icmp eq i32 %511, 0
  %513 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %506, i64 0, i32 0
  %514 = load i32, i32* %513, align 4
  br i1 %512, label %515, label %517

515:                                              ; preds = %508
  %516 = add i32 %514, -1
  store i32 %516, i32* %513, align 4
  br label %517

517:                                              ; preds = %515, %508
  %518 = phi i32 [ %516, %515 ], [ %514, %508 ]
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %520, label %521

520:                                              ; preds = %517
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %506) #17
  br label %521

521:                                              ; preds = %502, %517, %520
  store i8 1, i8* %223, align 8
  %522 = load atomic i32, i32* %451 monotonic, align 4
  %523 = and i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %448, i64 0, i32 0
  %526 = load i32, i32* %525, align 4
  br i1 %524, label %527, label %529

527:                                              ; preds = %521
  %528 = add i32 %526, -1
  store i32 %528, i32* %525, align 4
  br label %529

529:                                              ; preds = %527, %521
  %530 = phi i32 [ %528, %527 ], [ %526, %521 ]
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %534

532:                                              ; preds = %529
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %448) #17
  %533 = load i32, i32* %525, align 4
  br label %534

534:                                              ; preds = %529, %532
  %535 = phi i32 [ %530, %529 ], [ %533, %532 ]
  %536 = load atomic i32, i32* %451 monotonic, align 4
  %537 = and i32 %536, 2
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %539, label %541

539:                                              ; preds = %534
  %540 = add i32 %535, -1
  store i32 %540, i32* %525, align 4
  br label %541

541:                                              ; preds = %539, %534
  %542 = phi i32 [ %540, %539 ], [ %535, %534 ]
  %543 = icmp eq i32 %542, 0
  br i1 %543, label %544, label %545

544:                                              ; preds = %541
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %448) #17
  br label %545

545:                                              ; preds = %544, %541, %485, %442
  %546 = call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* nonnull %441) #17
  %547 = icmp eq %"class.blink::Document"* %546, null
  br i1 %547, label %563, label %548

548:                                              ; preds = %545
  %549 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %546, i64 0, i32 0, i32 0
  %550 = select i1 %3, i32 %2, i32 0
  %551 = call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %549, i32 %550, i1 zeroext %3, %"class.blink::HeapHashMap.2752"* %4, %"class.std::__1::vector.3379"* %5)
  %552 = ptrtoint %"class.blink::protocol::DOM::Node"* %551 to i64
  %553 = getelementptr inbounds i8, i8* %187, i64 256
  %554 = bitcast i8* %553 to %"class.blink::protocol::DOM::Node"**
  %555 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %554, align 8
  %556 = bitcast i8* %553 to i64*
  store i64 %552, i64* %556, align 8
  %557 = icmp eq %"class.blink::protocol::DOM::Node"* %555, null
  br i1 %557, label %563, label %558

558:                                              ; preds = %548
  %559 = bitcast %"class.blink::protocol::DOM::Node"* %555 to void (%"class.blink::protocol::DOM::Node"*)***
  %560 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %559, align 8
  %561 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %560, i64 2
  %562 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %561, align 8
  call void %562(%"class.blink::protocol::DOM::Node"* nonnull %555) #17
  br label %563

563:                                              ; preds = %435, %558, %548, %545
  %564 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %1) #17
  %565 = icmp eq %"class.blink::ContainerNode"* %564, null
  br i1 %565, label %681, label %566

566:                                              ; preds = %563
  %567 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %1) #17
  %568 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %567, i64 0, i32 0
  %569 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %567, i64 0, i32 0, i32 3, i32 0, i32 0
  %570 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %569, align 8
  %571 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %570, i64 0, i32 2, i32 0, i32 0
  %572 = load %"class.blink::Document"*, %"class.blink::Document"** %571, align 8
  %573 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %572, i64 0, i32 0, i32 0
  %574 = icmp eq %"class.blink::Node"* %573, %568
  br i1 %574, label %575, label %681

575:                                              ; preds = %566
  %576 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %577 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %576, align 8
  %578 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %577, i64 0, i32 2, i32 0, i32 0
  %579 = load %"class.blink::Document"*, %"class.blink::Document"** %578, align 8
  %580 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %579) #17
  %581 = icmp eq %"class.blink::LocalFrame"* %580, null
  br i1 %581, label %681, label %582

582:                                              ; preds = %575
  %583 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %580, i64 0, i32 0
  %584 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %583) #17
  %585 = icmp eq %"class.WTF::StringImpl"* %584, null
  br i1 %585, label %603, label %586

586:                                              ; preds = %582
  %587 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %584, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %588 = load atomic i32, i32* %587 monotonic, align 4
  %589 = and i32 %588, 2
  %590 = icmp eq i32 %589, 0
  br i1 %590, label %591, label %622

591:                                              ; preds = %586
  %592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %584, i64 0, i32 0
  %593 = load i32, i32* %592, align 4
  %594 = zext i32 %593 to i33
  %595 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %594, i33 1) #17
  %596 = extractvalue { i33, i1 } %595, 1
  %597 = extractvalue { i33, i1 } %595, 0
  %598 = icmp slt i33 %597, 0
  %599 = or i1 %596, %598
  br i1 %599, label %600, label %601, !prof !2

600:                                              ; preds = %591
  call void @llvm.trap() #17
  unreachable

601:                                              ; preds = %591
  %602 = trunc i33 %597 to i32
  store i32 %602, i32* %592, align 4
  br label %622

603:                                              ; preds = %582
  %604 = bitcast i8* %224 to i64*
  %605 = bitcast i8* %224 to %"class.WTF::StringImpl"**
  %606 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %605, align 8
  store i64 0, i64* %604, align 8
  %607 = icmp eq %"class.WTF::StringImpl"* %606, null
  br i1 %607, label %621, label %608

608:                                              ; preds = %603
  %609 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %606, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %610 = load atomic i32, i32* %609 monotonic, align 4
  %611 = and i32 %610, 2
  %612 = icmp eq i32 %611, 0
  %613 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %606, i64 0, i32 0
  %614 = load i32, i32* %613, align 4
  br i1 %612, label %615, label %617

615:                                              ; preds = %608
  %616 = add i32 %614, -1
  store i32 %616, i32* %613, align 4
  br label %617

617:                                              ; preds = %615, %608
  %618 = phi i32 [ %616, %615 ], [ %614, %608 ]
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %620, label %621

620:                                              ; preds = %617
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %606) #17
  br label %621

621:                                              ; preds = %603, %617, %620
  store i8 1, i8* %223, align 8
  br label %681

622:                                              ; preds = %601, %586
  %623 = load atomic i32, i32* %587 monotonic, align 4
  %624 = and i32 %623, 2
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %626, label %638

626:                                              ; preds = %622
  %627 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %584, i64 0, i32 0
  %628 = load i32, i32* %627, align 4
  %629 = zext i32 %628 to i33
  %630 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %629, i33 1) #17
  %631 = extractvalue { i33, i1 } %630, 1
  %632 = extractvalue { i33, i1 } %630, 0
  %633 = icmp slt i33 %632, 0
  %634 = or i1 %631, %633
  br i1 %634, label %635, label %636, !prof !2

635:                                              ; preds = %626
  call void @llvm.trap() #17
  unreachable

636:                                              ; preds = %626
  %637 = trunc i33 %632 to i32
  store i32 %637, i32* %627, align 4
  br label %638

638:                                              ; preds = %636, %622
  %639 = ptrtoint %"class.WTF::StringImpl"* %584 to i64
  %640 = bitcast i8* %224 to i64*
  %641 = bitcast i8* %224 to %"class.WTF::StringImpl"**
  %642 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %641, align 8
  store i64 %639, i64* %640, align 8
  %643 = icmp eq %"class.WTF::StringImpl"* %642, null
  br i1 %643, label %657, label %644

644:                                              ; preds = %638
  %645 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %642, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %646 = load atomic i32, i32* %645 monotonic, align 4
  %647 = and i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %642, i64 0, i32 0
  %650 = load i32, i32* %649, align 4
  br i1 %648, label %651, label %653

651:                                              ; preds = %644
  %652 = add i32 %650, -1
  store i32 %652, i32* %649, align 4
  br label %653

653:                                              ; preds = %651, %644
  %654 = phi i32 [ %652, %651 ], [ %650, %644 ]
  %655 = icmp eq i32 %654, 0
  br i1 %655, label %656, label %657

656:                                              ; preds = %653
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %642) #17
  br label %657

657:                                              ; preds = %638, %653, %656
  store i8 1, i8* %223, align 8
  %658 = load atomic i32, i32* %587 monotonic, align 4
  %659 = and i32 %658, 2
  %660 = icmp eq i32 %659, 0
  %661 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %584, i64 0, i32 0
  %662 = load i32, i32* %661, align 4
  br i1 %660, label %663, label %665

663:                                              ; preds = %657
  %664 = add i32 %662, -1
  store i32 %664, i32* %661, align 4
  br label %665

665:                                              ; preds = %663, %657
  %666 = phi i32 [ %664, %663 ], [ %662, %657 ]
  %667 = icmp eq i32 %666, 0
  br i1 %667, label %668, label %670

668:                                              ; preds = %665
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %584) #17
  %669 = load i32, i32* %661, align 4
  br label %670

670:                                              ; preds = %665, %668
  %671 = phi i32 [ %666, %665 ], [ %669, %668 ]
  %672 = load atomic i32, i32* %587 monotonic, align 4
  %673 = and i32 %672, 2
  %674 = icmp eq i32 %673, 0
  br i1 %674, label %675, label %677

675:                                              ; preds = %670
  %676 = add i32 %671, -1
  store i32 %676, i32* %661, align 4
  br label %677

677:                                              ; preds = %675, %670
  %678 = phi i32 [ %676, %675 ], [ %671, %670 ]
  %679 = icmp eq i32 %678, 0
  br i1 %679, label %680, label %681

680:                                              ; preds = %677
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %584) #17
  br label %681

681:                                              ; preds = %680, %677, %621, %575, %563, %566
  %682 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* nonnull %389) #17
  %683 = icmp eq %"class.blink::ShadowRoot"* %682, null
  br i1 %683, label %750, label %684

684:                                              ; preds = %681
  %685 = call i8* @_Znwm(i64 24) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %685, i8 0, i64 24, i1 false) #17
  %686 = ptrtoint i8* %685 to i64
  %687 = bitcast %"class.std::__1::unique_ptr.3367"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %687) #17
  %688 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %682, i64 0, i32 0, i32 0, i32 0
  %689 = select i1 %3, i32 %2, i32 0
  %690 = call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %688, i32 %689, i1 zeroext %3, %"class.blink::HeapHashMap.2752"* %4, %"class.std::__1::vector.3379"* %5)
  %691 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::protocol::DOM::Node"* %690, %"class.blink::protocol::DOM::Node"** %691, align 8
  %692 = getelementptr inbounds i8, i8* %685, i64 8
  %693 = bitcast i8* %692 to %"class.std::__1::unique_ptr.3367"**
  %694 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %693, align 8
  %695 = getelementptr inbounds i8, i8* %685, i64 16
  %696 = bitcast i8* %695 to %"class.std::__1::unique_ptr.3367"**
  %697 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %696, align 8
  %698 = icmp ult %"class.std::__1::unique_ptr.3367"* %694, %697
  br i1 %698, label %699, label %705

699:                                              ; preds = %684
  %700 = ptrtoint %"class.blink::protocol::DOM::Node"* %690 to i64
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %691, align 8
  %701 = bitcast %"class.std::__1::unique_ptr.3367"* %694 to i64*
  store i64 %700, i64* %701, align 8
  %702 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %694, i64 1
  %703 = ptrtoint %"class.std::__1::unique_ptr.3367"* %702 to i64
  %704 = bitcast i8* %692 to i64*
  store i64 %703, i64* %704, align 8
  br label %707

705:                                              ; preds = %684
  %706 = bitcast i8* %685 to %"class.std::__1::vector.3379"*
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3DOM4NodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3379"* nonnull %706, %"class.std::__1::unique_ptr.3367"* nonnull dereferenceable(8) %11) #17
  br label %707

707:                                              ; preds = %699, %705
  %708 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %691, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %691, align 8
  %709 = icmp eq %"class.blink::protocol::DOM::Node"* %708, null
  br i1 %709, label %715, label %710

710:                                              ; preds = %707
  %711 = bitcast %"class.blink::protocol::DOM::Node"* %708 to void (%"class.blink::protocol::DOM::Node"*)***
  %712 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %711, align 8
  %713 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %712, i64 2
  %714 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %713, align 8
  call void %714(%"class.blink::protocol::DOM::Node"* nonnull %708) #17
  br label %715

715:                                              ; preds = %707, %710
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %687) #17
  %716 = getelementptr inbounds i8, i8* %187, i64 264
  %717 = bitcast i8* %716 to %"class.std::__1::vector.3379"**
  %718 = load %"class.std::__1::vector.3379"*, %"class.std::__1::vector.3379"** %717, align 8
  %719 = bitcast i8* %716 to i64*
  store i64 %686, i64* %719, align 8
  %720 = icmp eq %"class.std::__1::vector.3379"* %718, null
  br i1 %720, label %750, label %721

721:                                              ; preds = %715
  %722 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %718, i64 0, i32 0, i32 0
  %723 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %722, align 8
  %724 = icmp eq %"class.std::__1::unique_ptr.3367"* %723, null
  br i1 %724, label %748, label %725

725:                                              ; preds = %721
  %726 = bitcast %"class.std::__1::unique_ptr.3367"* %723 to i8*
  %727 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %718, i64 0, i32 0, i32 1
  %728 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %727, align 8
  %729 = icmp eq %"class.std::__1::unique_ptr.3367"* %728, %723
  br i1 %729, label %746, label %730

730:                                              ; preds = %725, %741
  %731 = phi %"class.std::__1::unique_ptr.3367"* [ %732, %741 ], [ %728, %725 ]
  %732 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %731, i64 -1
  %733 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %732, i64 0, i32 0, i32 0, i32 0
  %734 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %733, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %733, align 8
  %735 = icmp eq %"class.blink::protocol::DOM::Node"* %734, null
  br i1 %735, label %741, label %736

736:                                              ; preds = %730
  %737 = bitcast %"class.blink::protocol::DOM::Node"* %734 to void (%"class.blink::protocol::DOM::Node"*)***
  %738 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %737, align 8
  %739 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %738, i64 2
  %740 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %739, align 8
  call void %740(%"class.blink::protocol::DOM::Node"* nonnull %734) #17
  br label %741

741:                                              ; preds = %736, %730
  %742 = icmp eq %"class.std::__1::unique_ptr.3367"* %732, %723
  br i1 %742, label %743, label %730

743:                                              ; preds = %741
  %744 = bitcast %"class.std::__1::vector.3379"* %718 to i8**
  %745 = load i8*, i8** %744, align 8
  br label %746

746:                                              ; preds = %743, %725
  %747 = phi i8* [ %745, %743 ], [ %726, %725 ]
  store %"class.std::__1::unique_ptr.3367"* %723, %"class.std::__1::unique_ptr.3367"** %727, align 8
  call void @_ZdlPv(i8* %747) #18
  br label %748

748:                                              ; preds = %746, %721
  %749 = bitcast %"class.std::__1::vector.3379"* %718 to i8*
  call void @_ZdlPv(i8* %749) #18
  br label %750

750:                                              ; preds = %681, %748, %715
  %751 = phi i8 [ 0, %681 ], [ 1, %748 ], [ 1, %715 ]
  %752 = load i32, i32* %377, align 8
  %753 = and i32 %752, 48
  %754 = icmp eq i32 %753, 0
  br i1 %754, label %755, label %795

755:                                              ; preds = %750
  %756 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE, align 8
  %757 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %756, i64 0, i32 0, i32 0, i32 0
  %758 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %757, align 8
  %759 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %760 = bitcast %"class.blink::Member.318"* %759 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %761 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %760, align 8
  %762 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %761, i64 0, i32 3, i32 0, i32 0, i32 0
  %763 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %762, align 8
  %764 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %758, i64 0, i32 3, i32 0, i32 0, i32 0
  %765 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %764, align 8
  %766 = icmp eq %"class.WTF::StringImpl"* %763, %765
  %767 = select i1 %766, i8 1, i8 %751
  %768 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %769 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %768, i64 0, i32 0, i32 0, i32 0
  %770 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %769, align 8
  %771 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %770, i64 0, i32 3, i32 0, i32 0, i32 0
  %772 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %771, align 8
  %773 = icmp eq %"class.WTF::StringImpl"* %763, %772
  %774 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLTemplateElement"*
  br i1 %773, label %775, label %795

775:                                              ; preds = %755
  %776 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 5
  %777 = bitcast %"class.blink::Member.318"* %776 to i32*
  %778 = load i32, i32* %777, align 8
  %779 = icmp eq i32 %778, 0
  br i1 %779, label %780, label %795

780:                                              ; preds = %775
  %781 = call %"class.blink::DocumentFragment"* @_ZNK5blink19HTMLTemplateElement7contentEv(%"class.blink::HTMLTemplateElement"* nonnull %774) #17
  %782 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %781, i64 0, i32 0, i32 0
  %783 = call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %782, i32 0, i1 zeroext %3, %"class.blink::HeapHashMap.2752"* %4, %"class.std::__1::vector.3379"* %5)
  %784 = ptrtoint %"class.blink::protocol::DOM::Node"* %783 to i64
  %785 = getelementptr inbounds i8, i8* %187, i64 272
  %786 = bitcast i8* %785 to %"class.blink::protocol::DOM::Node"**
  %787 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %786, align 8
  %788 = bitcast i8* %785 to i64*
  store i64 %784, i64* %788, align 8
  %789 = icmp eq %"class.blink::protocol::DOM::Node"* %787, null
  br i1 %789, label %795, label %790

790:                                              ; preds = %780
  %791 = bitcast %"class.blink::protocol::DOM::Node"* %787 to void (%"class.blink::protocol::DOM::Node"*)***
  %792 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %791, align 8
  %793 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %792, i64 2
  %794 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %793, align 8
  call void %794(%"class.blink::protocol::DOM::Node"* nonnull %787) #17
  br label %795

795:                                              ; preds = %750, %755, %775, %790, %780
  %796 = phi i8 [ %767, %775 ], [ 1, %780 ], [ 1, %790 ], [ %767, %755 ], [ %751, %750 ]
  %797 = bitcast %"class.blink::Node"* %1 to i8 (%"class.blink::Node"*)***
  %798 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %797, align 8
  %799 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %798, i64 34
  %800 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %799, align 8
  %801 = call zeroext i8 %800(%"class.blink::Node"* %1) #17
  %802 = icmp eq i8 %801, 0
  br i1 %802, label %903, label %803

803:                                              ; preds = %795
  %804 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %797, align 8
  %805 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %804, i64 34
  %806 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %805, align 8
  %807 = call zeroext i8 %806(%"class.blink::Node"* %1) #17
  %808 = call %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent25ProtocolPseudoElementTypeENS_8PseudoIdE(i8 zeroext %807)
  %809 = icmp eq %"class.WTF::StringImpl"* %808, null
  br i1 %809, label %827, label %810

810:                                              ; preds = %803
  %811 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %808, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %812 = load atomic i32, i32* %811 monotonic, align 4
  %813 = and i32 %812, 2
  %814 = icmp eq i32 %813, 0
  br i1 %814, label %815, label %845

815:                                              ; preds = %810
  %816 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %808, i64 0, i32 0
  %817 = load i32, i32* %816, align 4
  %818 = zext i32 %817 to i33
  %819 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %818, i33 1) #17
  %820 = extractvalue { i33, i1 } %819, 1
  %821 = extractvalue { i33, i1 } %819, 0
  %822 = icmp slt i33 %821, 0
  %823 = or i1 %820, %822
  br i1 %823, label %824, label %825, !prof !2

824:                                              ; preds = %815
  call void @llvm.trap() #17
  unreachable

825:                                              ; preds = %815
  %826 = trunc i33 %821 to i32
  store i32 %826, i32* %816, align 4
  br label %845

827:                                              ; preds = %803
  %828 = bitcast i8* %218 to i64*
  %829 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  store i64 0, i64* %828, align 8
  %830 = icmp eq %"class.WTF::StringImpl"* %829, null
  br i1 %830, label %844, label %831

831:                                              ; preds = %827
  %832 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %829, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %833 = load atomic i32, i32* %832 monotonic, align 4
  %834 = and i32 %833, 2
  %835 = icmp eq i32 %834, 0
  %836 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %829, i64 0, i32 0
  %837 = load i32, i32* %836, align 4
  br i1 %835, label %838, label %840

838:                                              ; preds = %831
  %839 = add i32 %837, -1
  store i32 %839, i32* %836, align 4
  br label %840

840:                                              ; preds = %838, %831
  %841 = phi i32 [ %839, %838 ], [ %837, %831 ]
  %842 = icmp eq i32 %841, 0
  br i1 %842, label %843, label %844

843:                                              ; preds = %840
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %829) #17
  br label %844

844:                                              ; preds = %827, %840, %843
  store i8 1, i8* %217, align 8
  br label %1054

845:                                              ; preds = %825, %810
  %846 = load atomic i32, i32* %811 monotonic, align 4
  %847 = and i32 %846, 2
  %848 = icmp eq i32 %847, 0
  br i1 %848, label %849, label %861

849:                                              ; preds = %845
  %850 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %808, i64 0, i32 0
  %851 = load i32, i32* %850, align 4
  %852 = zext i32 %851 to i33
  %853 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %852, i33 1) #17
  %854 = extractvalue { i33, i1 } %853, 1
  %855 = extractvalue { i33, i1 } %853, 0
  %856 = icmp slt i33 %855, 0
  %857 = or i1 %854, %856
  br i1 %857, label %858, label %859, !prof !2

858:                                              ; preds = %849
  call void @llvm.trap() #17
  unreachable

859:                                              ; preds = %849
  %860 = trunc i33 %855 to i32
  store i32 %860, i32* %850, align 4
  br label %861

861:                                              ; preds = %859, %845
  %862 = ptrtoint %"class.WTF::StringImpl"* %808 to i64
  %863 = bitcast i8* %218 to i64*
  %864 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  store i64 %862, i64* %863, align 8
  %865 = icmp eq %"class.WTF::StringImpl"* %864, null
  br i1 %865, label %879, label %866

866:                                              ; preds = %861
  %867 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %864, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %868 = load atomic i32, i32* %867 monotonic, align 4
  %869 = and i32 %868, 2
  %870 = icmp eq i32 %869, 0
  %871 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %864, i64 0, i32 0
  %872 = load i32, i32* %871, align 4
  br i1 %870, label %873, label %875

873:                                              ; preds = %866
  %874 = add i32 %872, -1
  store i32 %874, i32* %871, align 4
  br label %875

875:                                              ; preds = %873, %866
  %876 = phi i32 [ %874, %873 ], [ %872, %866 ]
  %877 = icmp eq i32 %876, 0
  br i1 %877, label %878, label %879

878:                                              ; preds = %875
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %864) #17
  br label %879

879:                                              ; preds = %861, %875, %878
  store i8 1, i8* %217, align 8
  %880 = load atomic i32, i32* %811 monotonic, align 4
  %881 = and i32 %880, 2
  %882 = icmp eq i32 %881, 0
  %883 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %808, i64 0, i32 0
  %884 = load i32, i32* %883, align 4
  br i1 %882, label %885, label %887

885:                                              ; preds = %879
  %886 = add i32 %884, -1
  store i32 %886, i32* %883, align 4
  br label %887

887:                                              ; preds = %885, %879
  %888 = phi i32 [ %886, %885 ], [ %884, %879 ]
  %889 = icmp eq i32 %888, 0
  br i1 %889, label %890, label %892

890:                                              ; preds = %887
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %808) #17
  %891 = load i32, i32* %883, align 4
  br label %892

892:                                              ; preds = %887, %890
  %893 = phi i32 [ %888, %887 ], [ %891, %890 ]
  %894 = load atomic i32, i32* %811 monotonic, align 4
  %895 = and i32 %894, 2
  %896 = icmp eq i32 %895, 0
  br i1 %896, label %897, label %899

897:                                              ; preds = %892
  %898 = add i32 %893, -1
  store i32 %898, i32* %883, align 4
  br label %899

899:                                              ; preds = %897, %892
  %900 = phi i32 [ %898, %897 ], [ %893, %892 ]
  %901 = icmp eq i32 %900, 0
  br i1 %901, label %902, label %1054

902:                                              ; preds = %899
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %808) #17
  br label %1054

903:                                              ; preds = %795
  %904 = call %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"* %1) #17
  %905 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %904, i64 0, i32 92, i32 0, i32 0
  %906 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %905, align 8
  %907 = icmp eq %"class.WTF::StringImpl"* %906, null
  br i1 %907, label %1054, label %908

908:                                              ; preds = %903
  %909 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %906, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %910 = load atomic i32, i32* %909 monotonic, align 4
  %911 = and i32 %910, 2
  %912 = icmp eq i32 %911, 0
  %913 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %906, i64 0, i32 0
  %914 = load i32, i32* %913, align 4
  br i1 %912, label %915, label %925

915:                                              ; preds = %908
  %916 = zext i32 %914 to i33
  %917 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %916, i33 1) #17
  %918 = extractvalue { i33, i1 } %917, 1
  %919 = extractvalue { i33, i1 } %917, 0
  %920 = icmp slt i33 %919, 0
  %921 = or i1 %918, %920
  br i1 %921, label %922, label %923, !prof !2

922:                                              ; preds = %915
  call void @llvm.trap() #17
  unreachable

923:                                              ; preds = %915
  %924 = trunc i33 %919 to i32
  store i32 %924, i32* %913, align 4
  br label %925

925:                                              ; preds = %908, %923
  %926 = phi i32 [ %924, %923 ], [ %914, %908 ]
  %927 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %906, i64 0, i32 1
  %928 = load i32, i32* %927, align 4
  %929 = icmp eq i32 %928, 0
  %930 = load atomic i32, i32* %909 monotonic, align 4
  %931 = and i32 %930, 2
  %932 = icmp eq i32 %931, 0
  br i1 %932, label %933, label %935

933:                                              ; preds = %925
  %934 = add i32 %926, -1
  store i32 %934, i32* %913, align 4
  br label %935

935:                                              ; preds = %933, %925
  %936 = phi i32 [ %934, %933 ], [ %926, %925 ]
  %937 = icmp eq i32 %936, 0
  br i1 %937, label %938, label %939

938:                                              ; preds = %935
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %906) #17
  br i1 %929, label %1054, label %940

939:                                              ; preds = %935
  br i1 %929, label %1054, label %940

940:                                              ; preds = %938, %939
  %941 = call %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"* %1) #17
  %942 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %941, i64 0, i32 92, i32 0, i32 0
  %943 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %942, align 8
  %944 = icmp eq %"class.WTF::StringImpl"* %943, null
  br i1 %944, label %978, label %945

945:                                              ; preds = %940
  %946 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %943, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %947 = load atomic i32, i32* %946 monotonic, align 4
  %948 = and i32 %947, 2
  %949 = icmp eq i32 %948, 0
  br i1 %949, label %950, label %962

950:                                              ; preds = %945
  %951 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %943, i64 0, i32 0
  %952 = load i32, i32* %951, align 4
  %953 = zext i32 %952 to i33
  %954 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %953, i33 1) #17
  %955 = extractvalue { i33, i1 } %954, 1
  %956 = extractvalue { i33, i1 } %954, 0
  %957 = icmp slt i33 %956, 0
  %958 = or i1 %955, %957
  br i1 %958, label %959, label %960, !prof !2

959:                                              ; preds = %950
  call void @llvm.trap() #17
  unreachable

960:                                              ; preds = %950
  %961 = trunc i33 %956 to i32
  store i32 %961, i32* %951, align 4
  br label %962

962:                                              ; preds = %945, %960
  %963 = load atomic i32, i32* %946 monotonic, align 4
  %964 = and i32 %963, 2
  %965 = icmp eq i32 %964, 0
  br i1 %965, label %966, label %996

966:                                              ; preds = %962
  %967 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %943, i64 0, i32 0
  %968 = load i32, i32* %967, align 4
  %969 = zext i32 %968 to i33
  %970 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %969, i33 1) #17
  %971 = extractvalue { i33, i1 } %970, 1
  %972 = extractvalue { i33, i1 } %970, 0
  %973 = icmp slt i33 %972, 0
  %974 = or i1 %971, %973
  br i1 %974, label %975, label %976, !prof !2

975:                                              ; preds = %966
  call void @llvm.trap() #17
  unreachable

976:                                              ; preds = %966
  %977 = trunc i33 %972 to i32
  store i32 %977, i32* %967, align 4
  br label %996

978:                                              ; preds = %940
  %979 = bitcast i8* %209 to i64*
  %980 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  store i64 0, i64* %979, align 8
  %981 = icmp eq %"class.WTF::StringImpl"* %980, null
  br i1 %981, label %995, label %982

982:                                              ; preds = %978
  %983 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %980, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %984 = load atomic i32, i32* %983 monotonic, align 4
  %985 = and i32 %984, 2
  %986 = icmp eq i32 %985, 0
  %987 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %980, i64 0, i32 0
  %988 = load i32, i32* %987, align 4
  br i1 %986, label %989, label %991

989:                                              ; preds = %982
  %990 = add i32 %988, -1
  store i32 %990, i32* %987, align 4
  br label %991

991:                                              ; preds = %989, %982
  %992 = phi i32 [ %990, %989 ], [ %988, %982 ]
  %993 = icmp eq i32 %992, 0
  br i1 %993, label %994, label %995

994:                                              ; preds = %991
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %980) #17
  br label %995

995:                                              ; preds = %978, %991, %994
  store i8 1, i8* %208, align 8
  br label %1054

996:                                              ; preds = %976, %962
  %997 = load atomic i32, i32* %946 monotonic, align 4
  %998 = and i32 %997, 2
  %999 = icmp eq i32 %998, 0
  br i1 %999, label %1000, label %1012

1000:                                             ; preds = %996
  %1001 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %943, i64 0, i32 0
  %1002 = load i32, i32* %1001, align 4
  %1003 = zext i32 %1002 to i33
  %1004 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1003, i33 1) #17
  %1005 = extractvalue { i33, i1 } %1004, 1
  %1006 = extractvalue { i33, i1 } %1004, 0
  %1007 = icmp slt i33 %1006, 0
  %1008 = or i1 %1005, %1007
  br i1 %1008, label %1009, label %1010, !prof !2

1009:                                             ; preds = %1000
  call void @llvm.trap() #17
  unreachable

1010:                                             ; preds = %1000
  %1011 = trunc i33 %1006 to i32
  store i32 %1011, i32* %1001, align 4
  br label %1012

1012:                                             ; preds = %1010, %996
  %1013 = ptrtoint %"class.WTF::StringImpl"* %943 to i64
  %1014 = bitcast i8* %209 to i64*
  %1015 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  store i64 %1013, i64* %1014, align 8
  %1016 = icmp eq %"class.WTF::StringImpl"* %1015, null
  br i1 %1016, label %1030, label %1017

1017:                                             ; preds = %1012
  %1018 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1015, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1019 = load atomic i32, i32* %1018 monotonic, align 4
  %1020 = and i32 %1019, 2
  %1021 = icmp eq i32 %1020, 0
  %1022 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1015, i64 0, i32 0
  %1023 = load i32, i32* %1022, align 4
  br i1 %1021, label %1024, label %1026

1024:                                             ; preds = %1017
  %1025 = add i32 %1023, -1
  store i32 %1025, i32* %1022, align 4
  br label %1026

1026:                                             ; preds = %1024, %1017
  %1027 = phi i32 [ %1025, %1024 ], [ %1023, %1017 ]
  %1028 = icmp eq i32 %1027, 0
  br i1 %1028, label %1029, label %1030

1029:                                             ; preds = %1026
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1015) #17
  br label %1030

1030:                                             ; preds = %1012, %1026, %1029
  store i8 1, i8* %208, align 8
  %1031 = load atomic i32, i32* %946 monotonic, align 4
  %1032 = and i32 %1031, 2
  %1033 = icmp eq i32 %1032, 0
  %1034 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %943, i64 0, i32 0
  %1035 = load i32, i32* %1034, align 4
  br i1 %1033, label %1036, label %1038

1036:                                             ; preds = %1030
  %1037 = add i32 %1035, -1
  store i32 %1037, i32* %1034, align 4
  br label %1038

1038:                                             ; preds = %1036, %1030
  %1039 = phi i32 [ %1037, %1036 ], [ %1035, %1030 ]
  %1040 = icmp eq i32 %1039, 0
  br i1 %1040, label %1041, label %1043

1041:                                             ; preds = %1038
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %943) #17
  %1042 = load i32, i32* %1034, align 4
  br label %1043

1043:                                             ; preds = %1038, %1041
  %1044 = phi i32 [ %1039, %1038 ], [ %1042, %1041 ]
  %1045 = load atomic i32, i32* %946 monotonic, align 4
  %1046 = and i32 %1045, 2
  %1047 = icmp eq i32 %1046, 0
  br i1 %1047, label %1048, label %1050

1048:                                             ; preds = %1043
  %1049 = add i32 %1044, -1
  store i32 %1049, i32* %1034, align 4
  br label %1050

1050:                                             ; preds = %1048, %1043
  %1051 = phi i32 [ %1049, %1048 ], [ %1044, %1043 ]
  %1052 = icmp eq i32 %1051, 0
  br i1 %1052, label %1053, label %1054

1053:                                             ; preds = %1050
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %943) #17
  br label %1054

1054:                                             ; preds = %903, %1053, %1050, %995, %938, %902, %899, %844, %939
  %1055 = call %"class.std::__1::vector.3379"* @_ZN5blink17InspectorDOMAgent27BuildArrayForPseudoElementsEPNS_7ElementEPNS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS5_EENS7_10HashTraitsIS6_EENSA_IiEEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Element"* nonnull %389, %"class.blink::HeapHashMap.2752"* %4)
  %1056 = ptrtoint %"class.std::__1::vector.3379"* %1055 to i64
  %1057 = icmp eq %"class.std::__1::vector.3379"* %1055, null
  br i1 %1057, label %1093, label %1058

1058:                                             ; preds = %1054
  %1059 = getelementptr inbounds i8, i8* %187, i64 280
  %1060 = bitcast i8* %1059 to %"class.std::__1::vector.3379"**
  %1061 = load %"class.std::__1::vector.3379"*, %"class.std::__1::vector.3379"** %1060, align 8
  %1062 = bitcast i8* %1059 to i64*
  store i64 %1056, i64* %1062, align 8
  %1063 = icmp eq %"class.std::__1::vector.3379"* %1061, null
  br i1 %1063, label %1093, label %1064

1064:                                             ; preds = %1058
  %1065 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %1061, i64 0, i32 0, i32 0
  %1066 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %1065, align 8
  %1067 = icmp eq %"class.std::__1::unique_ptr.3367"* %1066, null
  br i1 %1067, label %1091, label %1068

1068:                                             ; preds = %1064
  %1069 = bitcast %"class.std::__1::unique_ptr.3367"* %1066 to i8*
  %1070 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %1061, i64 0, i32 0, i32 1
  %1071 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %1070, align 8
  %1072 = icmp eq %"class.std::__1::unique_ptr.3367"* %1071, %1066
  br i1 %1072, label %1089, label %1073

1073:                                             ; preds = %1068, %1084
  %1074 = phi %"class.std::__1::unique_ptr.3367"* [ %1075, %1084 ], [ %1071, %1068 ]
  %1075 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %1074, i64 -1
  %1076 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %1075, i64 0, i32 0, i32 0, i32 0
  %1077 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %1076, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %1076, align 8
  %1078 = icmp eq %"class.blink::protocol::DOM::Node"* %1077, null
  br i1 %1078, label %1084, label %1079

1079:                                             ; preds = %1073
  %1080 = bitcast %"class.blink::protocol::DOM::Node"* %1077 to void (%"class.blink::protocol::DOM::Node"*)***
  %1081 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %1080, align 8
  %1082 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %1081, i64 2
  %1083 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %1082, align 8
  call void %1083(%"class.blink::protocol::DOM::Node"* nonnull %1077) #17
  br label %1084

1084:                                             ; preds = %1079, %1073
  %1085 = icmp eq %"class.std::__1::unique_ptr.3367"* %1075, %1066
  br i1 %1085, label %1086, label %1073

1086:                                             ; preds = %1084
  %1087 = bitcast %"class.std::__1::vector.3379"* %1061 to i8**
  %1088 = load i8*, i8** %1087, align 8
  br label %1089

1089:                                             ; preds = %1086, %1068
  %1090 = phi i8* [ %1088, %1086 ], [ %1069, %1068 ]
  store %"class.std::__1::unique_ptr.3367"* %1066, %"class.std::__1::unique_ptr.3367"** %1070, align 8
  call void @_ZdlPv(i8* %1090) #18
  br label %1091

1091:                                             ; preds = %1089, %1064
  %1092 = bitcast %"class.std::__1::vector.3379"* %1061 to i8*
  call void @_ZdlPv(i8* %1092) #18
  br label %1093

1093:                                             ; preds = %1054, %1058, %1091
  %1094 = phi i64 [ %1056, %1054 ], [ 0, %1058 ], [ 0, %1091 ]
  %1095 = phi i8 [ %796, %1054 ], [ 1, %1058 ], [ 1, %1091 ]
  %1096 = load i32, i32* %377, align 8
  %1097 = and i32 %1096, 48
  %1098 = icmp eq i32 %1097, 0
  br i1 %1098, label %1099, label %1152

1099:                                             ; preds = %1093
  %1100 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %1101 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1100, i64 0, i32 0, i32 0, i32 0
  %1102 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1101, align 8
  %1103 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %1104 = bitcast %"class.blink::Member.318"* %1103 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1105 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1104, align 8
  %1106 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1105, i64 0, i32 3, i32 0, i32 0, i32 0
  %1107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1106, align 8
  %1108 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1102, i64 0, i32 3, i32 0, i32 0, i32 0
  %1109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1108, align 8
  %1110 = icmp ne %"class.WTF::StringImpl"* %1107, %1109
  %1111 = and i32 %1096, 512
  %1112 = icmp eq i32 %1111, 0
  %1113 = or i1 %1112, %1110
  br i1 %1113, label %1152, label %1114

1114:                                             ; preds = %1099
  %1115 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLSlotElement"*
  %1116 = call %"class.std::__1::vector.3408"* @_ZN5blink17InspectorDOMAgent28BuildDistributedNodesForSlotEPNS_15HTMLSlotElementE(%"class.blink::InspectorDOMAgent"* undef, %"class.blink::HTMLSlotElement"* nonnull %1115)
  %1117 = ptrtoint %"class.std::__1::vector.3408"* %1116 to i64
  %1118 = getelementptr inbounds i8, i8* %187, i64 296
  %1119 = bitcast i8* %1118 to %"class.std::__1::vector.3408"**
  %1120 = load %"class.std::__1::vector.3408"*, %"class.std::__1::vector.3408"** %1119, align 8
  %1121 = bitcast i8* %1118 to i64*
  store i64 %1117, i64* %1121, align 8
  %1122 = icmp eq %"class.std::__1::vector.3408"* %1120, null
  br i1 %1122, label %1152, label %1123

1123:                                             ; preds = %1114
  %1124 = getelementptr inbounds %"class.std::__1::vector.3408", %"class.std::__1::vector.3408"* %1120, i64 0, i32 0, i32 0
  %1125 = load %"class.std::__1::unique_ptr.3410"*, %"class.std::__1::unique_ptr.3410"** %1124, align 8
  %1126 = icmp eq %"class.std::__1::unique_ptr.3410"* %1125, null
  br i1 %1126, label %1150, label %1127

1127:                                             ; preds = %1123
  %1128 = bitcast %"class.std::__1::unique_ptr.3410"* %1125 to i8*
  %1129 = getelementptr inbounds %"class.std::__1::vector.3408", %"class.std::__1::vector.3408"* %1120, i64 0, i32 0, i32 1
  %1130 = load %"class.std::__1::unique_ptr.3410"*, %"class.std::__1::unique_ptr.3410"** %1129, align 8
  %1131 = icmp eq %"class.std::__1::unique_ptr.3410"* %1130, %1125
  br i1 %1131, label %1148, label %1132

1132:                                             ; preds = %1127, %1143
  %1133 = phi %"class.std::__1::unique_ptr.3410"* [ %1134, %1143 ], [ %1130, %1127 ]
  %1134 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %1133, i64 -1
  %1135 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %1134, i64 0, i32 0, i32 0, i32 0
  %1136 = load %"class.blink::protocol::DOM::BackendNode"*, %"class.blink::protocol::DOM::BackendNode"** %1135, align 8
  store %"class.blink::protocol::DOM::BackendNode"* null, %"class.blink::protocol::DOM::BackendNode"** %1135, align 8
  %1137 = icmp eq %"class.blink::protocol::DOM::BackendNode"* %1136, null
  br i1 %1137, label %1143, label %1138

1138:                                             ; preds = %1132
  %1139 = bitcast %"class.blink::protocol::DOM::BackendNode"* %1136 to void (%"class.blink::protocol::DOM::BackendNode"*)***
  %1140 = load void (%"class.blink::protocol::DOM::BackendNode"*)**, void (%"class.blink::protocol::DOM::BackendNode"*)*** %1139, align 8
  %1141 = getelementptr inbounds void (%"class.blink::protocol::DOM::BackendNode"*)*, void (%"class.blink::protocol::DOM::BackendNode"*)** %1140, i64 2
  %1142 = load void (%"class.blink::protocol::DOM::BackendNode"*)*, void (%"class.blink::protocol::DOM::BackendNode"*)** %1141, align 8
  call void %1142(%"class.blink::protocol::DOM::BackendNode"* nonnull %1136) #17
  br label %1143

1143:                                             ; preds = %1138, %1132
  %1144 = icmp eq %"class.std::__1::unique_ptr.3410"* %1134, %1125
  br i1 %1144, label %1145, label %1132

1145:                                             ; preds = %1143
  %1146 = bitcast %"class.std::__1::vector.3408"* %1120 to i8**
  %1147 = load i8*, i8** %1146, align 8
  br label %1148

1148:                                             ; preds = %1145, %1127
  %1149 = phi i8* [ %1147, %1145 ], [ %1128, %1127 ]
  store %"class.std::__1::unique_ptr.3410"* %1125, %"class.std::__1::unique_ptr.3410"** %1129, align 8
  call void @_ZdlPv(i8* %1149) #18
  br label %1150

1150:                                             ; preds = %1148, %1123
  %1151 = bitcast %"class.std::__1::vector.3408"* %1120 to i8*
  call void @_ZdlPv(i8* %1151) #18
  br label %1152

1152:                                             ; preds = %1099, %1093, %1150, %1114
  %1153 = phi i8 [ 1, %1114 ], [ 1, %1150 ], [ %1095, %1099 ], [ %1095, %1093 ]
  %1154 = inttoptr i64 %1094 to %"class.std::__1::vector.3379"*
  %1155 = icmp eq i64 %1094, 0
  br i1 %1155, label %1936, label %1156

1156:                                             ; preds = %1152
  %1157 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %1154, i64 0, i32 0, i32 0
  %1158 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %1157, align 8
  %1159 = icmp eq %"class.std::__1::unique_ptr.3367"* %1158, null
  br i1 %1159, label %1183, label %1160

1160:                                             ; preds = %1156
  %1161 = bitcast %"class.std::__1::unique_ptr.3367"* %1158 to i8*
  %1162 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %1154, i64 0, i32 0, i32 1
  %1163 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %1162, align 8
  %1164 = icmp eq %"class.std::__1::unique_ptr.3367"* %1163, %1158
  br i1 %1164, label %1181, label %1165

1165:                                             ; preds = %1160, %1176
  %1166 = phi %"class.std::__1::unique_ptr.3367"* [ %1167, %1176 ], [ %1163, %1160 ]
  %1167 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %1166, i64 -1
  %1168 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %1167, i64 0, i32 0, i32 0, i32 0
  %1169 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %1168, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %1168, align 8
  %1170 = icmp eq %"class.blink::protocol::DOM::Node"* %1169, null
  br i1 %1170, label %1176, label %1171

1171:                                             ; preds = %1165
  %1172 = bitcast %"class.blink::protocol::DOM::Node"* %1169 to void (%"class.blink::protocol::DOM::Node"*)***
  %1173 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %1172, align 8
  %1174 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %1173, i64 2
  %1175 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %1174, align 8
  call void %1175(%"class.blink::protocol::DOM::Node"* nonnull %1169) #17
  br label %1176

1176:                                             ; preds = %1171, %1165
  %1177 = icmp eq %"class.std::__1::unique_ptr.3367"* %1167, %1158
  br i1 %1177, label %1178, label %1165

1178:                                             ; preds = %1176
  %1179 = inttoptr i64 %1094 to i8**
  %1180 = load i8*, i8** %1179, align 8
  br label %1181

1181:                                             ; preds = %1178, %1160
  %1182 = phi i8* [ %1180, %1178 ], [ %1161, %1160 ]
  store %"class.std::__1::unique_ptr.3367"* %1158, %"class.std::__1::unique_ptr.3367"** %1162, align 8
  call void @_ZdlPv(i8* %1182) #18
  br label %1183

1183:                                             ; preds = %1181, %1156
  %1184 = inttoptr i64 %1094 to i8*
  call void @_ZdlPv(i8* %1184) #18
  br label %1936

1185:                                             ; preds = %386
  %1186 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %1187 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1186, align 8
  %1188 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1187, i64 0, i32 2, i32 0, i32 0
  %1189 = load %"class.blink::Document"*, %"class.blink::Document"** %1188, align 8
  %1190 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1189, i64 0, i32 0, i32 0
  %1191 = icmp eq %"class.blink::Node"* %1190, %1
  %1192 = bitcast %"class.blink::Node"* %1 to %"class.blink::Document"*
  br i1 %1191, label %1193, label %1645

1193:                                             ; preds = %1185
  %1194 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1194)
  %1195 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 5, i32 2
  %1196 = bitcast %"class.blink::Member.318"* %1195 to %"class.blink::KURL"*
  %1197 = call zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"* %1196) #17
  br i1 %1197, label %1198, label %1199

1198:                                             ; preds = %1193
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i64 0) #17
  br label %1222

1199:                                             ; preds = %1193
  %1200 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 6, i32 6
  %1201 = bitcast %"class.blink::Member.322"* %1200 to %"class.WTF::StringImpl"**
  %1202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1201, align 8
  %1203 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1202, %"class.WTF::StringImpl"** %1203, align 8
  %1204 = icmp eq %"class.WTF::StringImpl"* %1202, null
  br i1 %1204, label %1222, label %1205

1205:                                             ; preds = %1199
  %1206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1207 = load atomic i32, i32* %1206 monotonic, align 4
  %1208 = and i32 %1207, 2
  %1209 = icmp eq i32 %1208, 0
  br i1 %1209, label %1210, label %1222

1210:                                             ; preds = %1205
  %1211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1202, i64 0, i32 0
  %1212 = load i32, i32* %1211, align 4
  %1213 = zext i32 %1212 to i33
  %1214 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1213, i33 1) #17
  %1215 = extractvalue { i33, i1 } %1214, 1
  %1216 = extractvalue { i33, i1 } %1214, 0
  %1217 = icmp slt i33 %1216, 0
  %1218 = or i1 %1215, %1217
  br i1 %1218, label %1219, label %1220, !prof !2

1219:                                             ; preds = %1210
  call void @llvm.trap() #17
  unreachable

1220:                                             ; preds = %1210
  %1221 = trunc i33 %1216 to i32
  store i32 %1221, i32* %1211, align 4
  br label %1222

1222:                                             ; preds = %1198, %1199, %1205, %1220
  %1223 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %1224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1194)
  %1225 = icmp eq %"class.WTF::StringImpl"* %1224, null
  br i1 %1225, label %1243, label %1226

1226:                                             ; preds = %1222
  %1227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1228 = load atomic i32, i32* %1227 monotonic, align 4
  %1229 = and i32 %1228, 2
  %1230 = icmp eq i32 %1229, 0
  br i1 %1230, label %1231, label %1262

1231:                                             ; preds = %1226
  %1232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 0
  %1233 = load i32, i32* %1232, align 4
  %1234 = zext i32 %1233 to i33
  %1235 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1234, i33 1) #17
  %1236 = extractvalue { i33, i1 } %1235, 1
  %1237 = extractvalue { i33, i1 } %1235, 0
  %1238 = icmp slt i33 %1237, 0
  %1239 = or i1 %1236, %1238
  br i1 %1239, label %1240, label %1241, !prof !2

1240:                                             ; preds = %1231
  call void @llvm.trap() #17
  unreachable

1241:                                             ; preds = %1231
  %1242 = trunc i33 %1237 to i32
  store i32 %1242, i32* %1232, align 4
  br label %1262

1243:                                             ; preds = %1222
  %1244 = getelementptr inbounds i8, i8* %187, i64 80
  %1245 = bitcast i8* %194 to i64*
  %1246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  store i64 0, i64* %1245, align 8
  %1247 = icmp eq %"class.WTF::StringImpl"* %1246, null
  br i1 %1247, label %1261, label %1248

1248:                                             ; preds = %1243
  %1249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1246, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1250 = load atomic i32, i32* %1249 monotonic, align 4
  %1251 = and i32 %1250, 2
  %1252 = icmp eq i32 %1251, 0
  %1253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1246, i64 0, i32 0
  %1254 = load i32, i32* %1253, align 4
  br i1 %1252, label %1255, label %1257

1255:                                             ; preds = %1248
  %1256 = add i32 %1254, -1
  store i32 %1256, i32* %1253, align 4
  br label %1257

1257:                                             ; preds = %1255, %1248
  %1258 = phi i32 [ %1256, %1255 ], [ %1254, %1248 ]
  %1259 = icmp eq i32 %1258, 0
  br i1 %1259, label %1260, label %1261

1260:                                             ; preds = %1257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1246) #17
  br label %1261

1261:                                             ; preds = %1243, %1257, %1260
  store i8 1, i8* %1244, align 8
  br label %1321

1262:                                             ; preds = %1241, %1226
  %1263 = getelementptr inbounds i8, i8* %187, i64 80
  %1264 = load atomic i32, i32* %1227 monotonic, align 4
  %1265 = and i32 %1264, 2
  %1266 = icmp eq i32 %1265, 0
  br i1 %1266, label %1267, label %1279

1267:                                             ; preds = %1262
  %1268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 0
  %1269 = load i32, i32* %1268, align 4
  %1270 = zext i32 %1269 to i33
  %1271 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1270, i33 1) #17
  %1272 = extractvalue { i33, i1 } %1271, 1
  %1273 = extractvalue { i33, i1 } %1271, 0
  %1274 = icmp slt i33 %1273, 0
  %1275 = or i1 %1272, %1274
  br i1 %1275, label %1276, label %1277, !prof !2

1276:                                             ; preds = %1267
  call void @llvm.trap() #17
  unreachable

1277:                                             ; preds = %1267
  %1278 = trunc i33 %1273 to i32
  store i32 %1278, i32* %1268, align 4
  br label %1279

1279:                                             ; preds = %1277, %1262
  %1280 = ptrtoint %"class.WTF::StringImpl"* %1224 to i64
  %1281 = bitcast i8* %194 to i64*
  %1282 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  store i64 %1280, i64* %1281, align 8
  %1283 = icmp eq %"class.WTF::StringImpl"* %1282, null
  br i1 %1283, label %1297, label %1284

1284:                                             ; preds = %1279
  %1285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1286 = load atomic i32, i32* %1285 monotonic, align 4
  %1287 = and i32 %1286, 2
  %1288 = icmp eq i32 %1287, 0
  %1289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1282, i64 0, i32 0
  %1290 = load i32, i32* %1289, align 4
  br i1 %1288, label %1291, label %1293

1291:                                             ; preds = %1284
  %1292 = add i32 %1290, -1
  store i32 %1292, i32* %1289, align 4
  br label %1293

1293:                                             ; preds = %1291, %1284
  %1294 = phi i32 [ %1292, %1291 ], [ %1290, %1284 ]
  %1295 = icmp eq i32 %1294, 0
  br i1 %1295, label %1296, label %1297

1296:                                             ; preds = %1293
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1282) #17
  br label %1297

1297:                                             ; preds = %1279, %1293, %1296
  store i8 1, i8* %1263, align 8
  %1298 = load atomic i32, i32* %1227 monotonic, align 4
  %1299 = and i32 %1298, 2
  %1300 = icmp eq i32 %1299, 0
  %1301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 0
  %1302 = load i32, i32* %1301, align 4
  br i1 %1300, label %1303, label %1305

1303:                                             ; preds = %1297
  %1304 = add i32 %1302, -1
  store i32 %1304, i32* %1301, align 4
  br label %1305

1305:                                             ; preds = %1303, %1297
  %1306 = phi i32 [ %1304, %1303 ], [ %1302, %1297 ]
  %1307 = icmp eq i32 %1306, 0
  br i1 %1307, label %1308, label %1310

1308:                                             ; preds = %1305
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1224) #17
  %1309 = load i32, i32* %1301, align 4
  br label %1310

1310:                                             ; preds = %1305, %1308
  %1311 = phi i32 [ %1306, %1305 ], [ %1309, %1308 ]
  %1312 = load atomic i32, i32* %1227 monotonic, align 4
  %1313 = and i32 %1312, 2
  %1314 = icmp eq i32 %1313, 0
  br i1 %1314, label %1315, label %1317

1315:                                             ; preds = %1310
  %1316 = add i32 %1311, -1
  store i32 %1316, i32* %1301, align 4
  br label %1317

1317:                                             ; preds = %1315, %1310
  %1318 = phi i32 [ %1316, %1315 ], [ %1311, %1310 ]
  %1319 = icmp eq i32 %1318, 0
  br i1 %1319, label %1320, label %1321

1320:                                             ; preds = %1317
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1224) #17
  br label %1321

1321:                                             ; preds = %1261, %1317, %1320
  %1322 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"* nonnull %1192) #17
  %1323 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1322, i64 0, i32 4, i32 0, i32 0
  %1324 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1323, align 8
  %1325 = icmp eq %"class.WTF::StringImpl"* %1324, null
  br i1 %1325, label %1359, label %1326

1326:                                             ; preds = %1321
  %1327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1324, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1328 = load atomic i32, i32* %1327 monotonic, align 4
  %1329 = and i32 %1328, 2
  %1330 = icmp eq i32 %1329, 0
  br i1 %1330, label %1331, label %1343

1331:                                             ; preds = %1326
  %1332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1324, i64 0, i32 0
  %1333 = load i32, i32* %1332, align 4
  %1334 = zext i32 %1333 to i33
  %1335 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1334, i33 1) #17
  %1336 = extractvalue { i33, i1 } %1335, 1
  %1337 = extractvalue { i33, i1 } %1335, 0
  %1338 = icmp slt i33 %1337, 0
  %1339 = or i1 %1336, %1338
  br i1 %1339, label %1340, label %1341, !prof !2

1340:                                             ; preds = %1331
  call void @llvm.trap() #17
  unreachable

1341:                                             ; preds = %1331
  %1342 = trunc i33 %1337 to i32
  store i32 %1342, i32* %1332, align 4
  br label %1343

1343:                                             ; preds = %1326, %1341
  %1344 = load atomic i32, i32* %1327 monotonic, align 4
  %1345 = and i32 %1344, 2
  %1346 = icmp eq i32 %1345, 0
  br i1 %1346, label %1347, label %1377

1347:                                             ; preds = %1343
  %1348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1324, i64 0, i32 0
  %1349 = load i32, i32* %1348, align 4
  %1350 = zext i32 %1349 to i33
  %1351 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1350, i33 1) #17
  %1352 = extractvalue { i33, i1 } %1351, 1
  %1353 = extractvalue { i33, i1 } %1351, 0
  %1354 = icmp slt i33 %1353, 0
  %1355 = or i1 %1352, %1354
  br i1 %1355, label %1356, label %1357, !prof !2

1356:                                             ; preds = %1347
  call void @llvm.trap() #17
  unreachable

1357:                                             ; preds = %1347
  %1358 = trunc i33 %1353 to i32
  store i32 %1358, i32* %1348, align 4
  br label %1377

1359:                                             ; preds = %1321
  %1360 = bitcast i8* %197 to i64*
  %1361 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  store i64 0, i64* %1360, align 8
  %1362 = icmp eq %"class.WTF::StringImpl"* %1361, null
  br i1 %1362, label %1376, label %1363

1363:                                             ; preds = %1359
  %1364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1361, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1365 = load atomic i32, i32* %1364 monotonic, align 4
  %1366 = and i32 %1365, 2
  %1367 = icmp eq i32 %1366, 0
  %1368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1361, i64 0, i32 0
  %1369 = load i32, i32* %1368, align 4
  br i1 %1367, label %1370, label %1372

1370:                                             ; preds = %1363
  %1371 = add i32 %1369, -1
  store i32 %1371, i32* %1368, align 4
  br label %1372

1372:                                             ; preds = %1370, %1363
  %1373 = phi i32 [ %1371, %1370 ], [ %1369, %1363 ]
  %1374 = icmp eq i32 %1373, 0
  br i1 %1374, label %1375, label %1376

1375:                                             ; preds = %1372
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1361) #17
  br label %1376

1376:                                             ; preds = %1359, %1372, %1375
  store i8 1, i8* %196, align 8
  br label %1435

1377:                                             ; preds = %1357, %1343
  %1378 = load atomic i32, i32* %1327 monotonic, align 4
  %1379 = and i32 %1378, 2
  %1380 = icmp eq i32 %1379, 0
  br i1 %1380, label %1381, label %1393

1381:                                             ; preds = %1377
  %1382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1324, i64 0, i32 0
  %1383 = load i32, i32* %1382, align 4
  %1384 = zext i32 %1383 to i33
  %1385 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1384, i33 1) #17
  %1386 = extractvalue { i33, i1 } %1385, 1
  %1387 = extractvalue { i33, i1 } %1385, 0
  %1388 = icmp slt i33 %1387, 0
  %1389 = or i1 %1386, %1388
  br i1 %1389, label %1390, label %1391, !prof !2

1390:                                             ; preds = %1381
  call void @llvm.trap() #17
  unreachable

1391:                                             ; preds = %1381
  %1392 = trunc i33 %1387 to i32
  store i32 %1392, i32* %1382, align 4
  br label %1393

1393:                                             ; preds = %1391, %1377
  %1394 = ptrtoint %"class.WTF::StringImpl"* %1324 to i64
  %1395 = bitcast i8* %197 to i64*
  %1396 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  store i64 %1394, i64* %1395, align 8
  %1397 = icmp eq %"class.WTF::StringImpl"* %1396, null
  br i1 %1397, label %1411, label %1398

1398:                                             ; preds = %1393
  %1399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1396, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1400 = load atomic i32, i32* %1399 monotonic, align 4
  %1401 = and i32 %1400, 2
  %1402 = icmp eq i32 %1401, 0
  %1403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1396, i64 0, i32 0
  %1404 = load i32, i32* %1403, align 4
  br i1 %1402, label %1405, label %1407

1405:                                             ; preds = %1398
  %1406 = add i32 %1404, -1
  store i32 %1406, i32* %1403, align 4
  br label %1407

1407:                                             ; preds = %1405, %1398
  %1408 = phi i32 [ %1406, %1405 ], [ %1404, %1398 ]
  %1409 = icmp eq i32 %1408, 0
  br i1 %1409, label %1410, label %1411

1410:                                             ; preds = %1407
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1396) #17
  br label %1411

1411:                                             ; preds = %1393, %1407, %1410
  store i8 1, i8* %196, align 8
  %1412 = load atomic i32, i32* %1327 monotonic, align 4
  %1413 = and i32 %1412, 2
  %1414 = icmp eq i32 %1413, 0
  %1415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1324, i64 0, i32 0
  %1416 = load i32, i32* %1415, align 4
  br i1 %1414, label %1417, label %1419

1417:                                             ; preds = %1411
  %1418 = add i32 %1416, -1
  store i32 %1418, i32* %1415, align 4
  br label %1419

1419:                                             ; preds = %1417, %1411
  %1420 = phi i32 [ %1418, %1417 ], [ %1416, %1411 ]
  %1421 = icmp eq i32 %1420, 0
  br i1 %1421, label %1422, label %1424

1422:                                             ; preds = %1419
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1324) #17
  %1423 = load i32, i32* %1415, align 4
  br label %1424

1424:                                             ; preds = %1419, %1422
  %1425 = phi i32 [ %1420, %1419 ], [ %1423, %1422 ]
  %1426 = load atomic i32, i32* %1327 monotonic, align 4
  %1427 = and i32 %1426, 2
  %1428 = icmp eq i32 %1427, 0
  br i1 %1428, label %1429, label %1431

1429:                                             ; preds = %1424
  %1430 = add i32 %1425, -1
  store i32 %1430, i32* %1415, align 4
  br label %1431

1431:                                             ; preds = %1429, %1424
  %1432 = phi i32 [ %1430, %1429 ], [ %1425, %1424 ]
  %1433 = icmp eq i32 %1432, 0
  br i1 %1433, label %1434, label %1435

1434:                                             ; preds = %1431
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1324) #17
  br label %1435

1435:                                             ; preds = %1376, %1431, %1434
  %1436 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 26, i32 0, i32 0, i32 1
  %1437 = bitcast %"class.blink::TraceWrapperV8Reference"* %1436 to %"class.WTF::StringImpl"**
  %1438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1437, align 8
  %1439 = icmp eq %"class.WTF::StringImpl"* %1438, null
  br i1 %1439, label %1473, label %1440

1440:                                             ; preds = %1435
  %1441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1438, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1442 = load atomic i32, i32* %1441 monotonic, align 4
  %1443 = and i32 %1442, 2
  %1444 = icmp eq i32 %1443, 0
  br i1 %1444, label %1445, label %1457

1445:                                             ; preds = %1440
  %1446 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1438, i64 0, i32 0
  %1447 = load i32, i32* %1446, align 4
  %1448 = zext i32 %1447 to i33
  %1449 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1448, i33 1) #17
  %1450 = extractvalue { i33, i1 } %1449, 1
  %1451 = extractvalue { i33, i1 } %1449, 0
  %1452 = icmp slt i33 %1451, 0
  %1453 = or i1 %1450, %1452
  br i1 %1453, label %1454, label %1455, !prof !2

1454:                                             ; preds = %1445
  call void @llvm.trap() #17
  unreachable

1455:                                             ; preds = %1445
  %1456 = trunc i33 %1451 to i32
  store i32 %1456, i32* %1446, align 4
  br label %1457

1457:                                             ; preds = %1440, %1455
  %1458 = load atomic i32, i32* %1441 monotonic, align 4
  %1459 = and i32 %1458, 2
  %1460 = icmp eq i32 %1459, 0
  br i1 %1460, label %1461, label %1491

1461:                                             ; preds = %1457
  %1462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1438, i64 0, i32 0
  %1463 = load i32, i32* %1462, align 4
  %1464 = zext i32 %1463 to i33
  %1465 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1464, i33 1) #17
  %1466 = extractvalue { i33, i1 } %1465, 1
  %1467 = extractvalue { i33, i1 } %1465, 0
  %1468 = icmp slt i33 %1467, 0
  %1469 = or i1 %1466, %1468
  br i1 %1469, label %1470, label %1471, !prof !2

1470:                                             ; preds = %1461
  call void @llvm.trap() #17
  unreachable

1471:                                             ; preds = %1461
  %1472 = trunc i33 %1467 to i32
  store i32 %1472, i32* %1462, align 4
  br label %1491

1473:                                             ; preds = %1435
  %1474 = bitcast i8* %209 to i64*
  %1475 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  store i64 0, i64* %1474, align 8
  %1476 = icmp eq %"class.WTF::StringImpl"* %1475, null
  br i1 %1476, label %1490, label %1477

1477:                                             ; preds = %1473
  %1478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1475, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1479 = load atomic i32, i32* %1478 monotonic, align 4
  %1480 = and i32 %1479, 2
  %1481 = icmp eq i32 %1480, 0
  %1482 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1475, i64 0, i32 0
  %1483 = load i32, i32* %1482, align 4
  br i1 %1481, label %1484, label %1486

1484:                                             ; preds = %1477
  %1485 = add i32 %1483, -1
  store i32 %1485, i32* %1482, align 4
  br label %1486

1486:                                             ; preds = %1484, %1477
  %1487 = phi i32 [ %1485, %1484 ], [ %1483, %1477 ]
  %1488 = icmp eq i32 %1487, 0
  br i1 %1488, label %1489, label %1490

1489:                                             ; preds = %1486
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1475) #17
  br label %1490

1490:                                             ; preds = %1473, %1486, %1489
  store i8 1, i8* %208, align 8
  br label %1549

1491:                                             ; preds = %1471, %1457
  %1492 = load atomic i32, i32* %1441 monotonic, align 4
  %1493 = and i32 %1492, 2
  %1494 = icmp eq i32 %1493, 0
  br i1 %1494, label %1495, label %1507

1495:                                             ; preds = %1491
  %1496 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1438, i64 0, i32 0
  %1497 = load i32, i32* %1496, align 4
  %1498 = zext i32 %1497 to i33
  %1499 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1498, i33 1) #17
  %1500 = extractvalue { i33, i1 } %1499, 1
  %1501 = extractvalue { i33, i1 } %1499, 0
  %1502 = icmp slt i33 %1501, 0
  %1503 = or i1 %1500, %1502
  br i1 %1503, label %1504, label %1505, !prof !2

1504:                                             ; preds = %1495
  call void @llvm.trap() #17
  unreachable

1505:                                             ; preds = %1495
  %1506 = trunc i33 %1501 to i32
  store i32 %1506, i32* %1496, align 4
  br label %1507

1507:                                             ; preds = %1505, %1491
  %1508 = ptrtoint %"class.WTF::StringImpl"* %1438 to i64
  %1509 = bitcast i8* %209 to i64*
  %1510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  store i64 %1508, i64* %1509, align 8
  %1511 = icmp eq %"class.WTF::StringImpl"* %1510, null
  br i1 %1511, label %1525, label %1512

1512:                                             ; preds = %1507
  %1513 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1510, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1514 = load atomic i32, i32* %1513 monotonic, align 4
  %1515 = and i32 %1514, 2
  %1516 = icmp eq i32 %1515, 0
  %1517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1510, i64 0, i32 0
  %1518 = load i32, i32* %1517, align 4
  br i1 %1516, label %1519, label %1521

1519:                                             ; preds = %1512
  %1520 = add i32 %1518, -1
  store i32 %1520, i32* %1517, align 4
  br label %1521

1521:                                             ; preds = %1519, %1512
  %1522 = phi i32 [ %1520, %1519 ], [ %1518, %1512 ]
  %1523 = icmp eq i32 %1522, 0
  br i1 %1523, label %1524, label %1525

1524:                                             ; preds = %1521
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1510) #17
  br label %1525

1525:                                             ; preds = %1507, %1521, %1524
  store i8 1, i8* %208, align 8
  %1526 = load atomic i32, i32* %1441 monotonic, align 4
  %1527 = and i32 %1526, 2
  %1528 = icmp eq i32 %1527, 0
  %1529 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1438, i64 0, i32 0
  %1530 = load i32, i32* %1529, align 4
  br i1 %1528, label %1531, label %1533

1531:                                             ; preds = %1525
  %1532 = add i32 %1530, -1
  store i32 %1532, i32* %1529, align 4
  br label %1533

1533:                                             ; preds = %1531, %1525
  %1534 = phi i32 [ %1532, %1531 ], [ %1530, %1525 ]
  %1535 = icmp eq i32 %1534, 0
  br i1 %1535, label %1536, label %1538

1536:                                             ; preds = %1533
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1438) #17
  %1537 = load i32, i32* %1529, align 4
  br label %1538

1538:                                             ; preds = %1533, %1536
  %1539 = phi i32 [ %1534, %1533 ], [ %1537, %1536 ]
  %1540 = load atomic i32, i32* %1441 monotonic, align 4
  %1541 = and i32 %1540, 2
  %1542 = icmp eq i32 %1541, 0
  br i1 %1542, label %1543, label %1545

1543:                                             ; preds = %1538
  %1544 = add i32 %1539, -1
  store i32 %1544, i32* %1529, align 4
  br label %1545

1545:                                             ; preds = %1543, %1538
  %1546 = phi i32 [ %1544, %1543 ], [ %1539, %1538 ]
  %1547 = icmp eq i32 %1546, 0
  br i1 %1547, label %1548, label %1549

1548:                                             ; preds = %1545
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1438) #17
  br label %1549

1549:                                             ; preds = %1490, %1545, %1548
  %1550 = call %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent28GetDocumentCompatibilityModeEPNS_8DocumentE(%"class.blink::Document"* nonnull %1192)
  %1551 = icmp eq %"class.WTF::StringImpl"* %1550, null
  br i1 %1551, label %1569, label %1552

1552:                                             ; preds = %1549
  %1553 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1550, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1554 = load atomic i32, i32* %1553 monotonic, align 4
  %1555 = and i32 %1554, 2
  %1556 = icmp eq i32 %1555, 0
  br i1 %1556, label %1557, label %1587

1557:                                             ; preds = %1552
  %1558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1550, i64 0, i32 0
  %1559 = load i32, i32* %1558, align 4
  %1560 = zext i32 %1559 to i33
  %1561 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1560, i33 1) #17
  %1562 = extractvalue { i33, i1 } %1561, 1
  %1563 = extractvalue { i33, i1 } %1561, 0
  %1564 = icmp slt i33 %1563, 0
  %1565 = or i1 %1562, %1564
  br i1 %1565, label %1566, label %1567, !prof !2

1566:                                             ; preds = %1557
  call void @llvm.trap() #17
  unreachable

1567:                                             ; preds = %1557
  %1568 = trunc i33 %1563 to i32
  store i32 %1568, i32* %1558, align 4
  br label %1587

1569:                                             ; preds = %1549
  %1570 = bitcast i8* %226 to i64*
  %1571 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  store i64 0, i64* %1570, align 8
  %1572 = icmp eq %"class.WTF::StringImpl"* %1571, null
  br i1 %1572, label %1586, label %1573

1573:                                             ; preds = %1569
  %1574 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1571, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1575 = load atomic i32, i32* %1574 monotonic, align 4
  %1576 = and i32 %1575, 2
  %1577 = icmp eq i32 %1576, 0
  %1578 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1571, i64 0, i32 0
  %1579 = load i32, i32* %1578, align 4
  br i1 %1577, label %1580, label %1582

1580:                                             ; preds = %1573
  %1581 = add i32 %1579, -1
  store i32 %1581, i32* %1578, align 4
  br label %1582

1582:                                             ; preds = %1580, %1573
  %1583 = phi i32 [ %1581, %1580 ], [ %1579, %1573 ]
  %1584 = icmp eq i32 %1583, 0
  br i1 %1584, label %1585, label %1586

1585:                                             ; preds = %1582
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1571) #17
  br label %1586

1586:                                             ; preds = %1569, %1582, %1585
  store i8 1, i8* %225, align 8
  br label %1936

1587:                                             ; preds = %1567, %1552
  %1588 = load atomic i32, i32* %1553 monotonic, align 4
  %1589 = and i32 %1588, 2
  %1590 = icmp eq i32 %1589, 0
  br i1 %1590, label %1591, label %1603

1591:                                             ; preds = %1587
  %1592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1550, i64 0, i32 0
  %1593 = load i32, i32* %1592, align 4
  %1594 = zext i32 %1593 to i33
  %1595 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1594, i33 1) #17
  %1596 = extractvalue { i33, i1 } %1595, 1
  %1597 = extractvalue { i33, i1 } %1595, 0
  %1598 = icmp slt i33 %1597, 0
  %1599 = or i1 %1596, %1598
  br i1 %1599, label %1600, label %1601, !prof !2

1600:                                             ; preds = %1591
  call void @llvm.trap() #17
  unreachable

1601:                                             ; preds = %1591
  %1602 = trunc i33 %1597 to i32
  store i32 %1602, i32* %1592, align 4
  br label %1603

1603:                                             ; preds = %1601, %1587
  %1604 = ptrtoint %"class.WTF::StringImpl"* %1550 to i64
  %1605 = bitcast i8* %226 to i64*
  %1606 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  store i64 %1604, i64* %1605, align 8
  %1607 = icmp eq %"class.WTF::StringImpl"* %1606, null
  br i1 %1607, label %1621, label %1608

1608:                                             ; preds = %1603
  %1609 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1606, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1610 = load atomic i32, i32* %1609 monotonic, align 4
  %1611 = and i32 %1610, 2
  %1612 = icmp eq i32 %1611, 0
  %1613 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1606, i64 0, i32 0
  %1614 = load i32, i32* %1613, align 4
  br i1 %1612, label %1615, label %1617

1615:                                             ; preds = %1608
  %1616 = add i32 %1614, -1
  store i32 %1616, i32* %1613, align 4
  br label %1617

1617:                                             ; preds = %1615, %1608
  %1618 = phi i32 [ %1616, %1615 ], [ %1614, %1608 ]
  %1619 = icmp eq i32 %1618, 0
  br i1 %1619, label %1620, label %1621

1620:                                             ; preds = %1617
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1606) #17
  br label %1621

1621:                                             ; preds = %1603, %1617, %1620
  store i8 1, i8* %225, align 8
  %1622 = load atomic i32, i32* %1553 monotonic, align 4
  %1623 = and i32 %1622, 2
  %1624 = icmp eq i32 %1623, 0
  %1625 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1550, i64 0, i32 0
  %1626 = load i32, i32* %1625, align 4
  br i1 %1624, label %1627, label %1629

1627:                                             ; preds = %1621
  %1628 = add i32 %1626, -1
  store i32 %1628, i32* %1625, align 4
  br label %1629

1629:                                             ; preds = %1627, %1621
  %1630 = phi i32 [ %1628, %1627 ], [ %1626, %1621 ]
  %1631 = icmp eq i32 %1630, 0
  br i1 %1631, label %1632, label %1634

1632:                                             ; preds = %1629
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1550) #17
  %1633 = load i32, i32* %1625, align 4
  br label %1634

1634:                                             ; preds = %1629, %1632
  %1635 = phi i32 [ %1630, %1629 ], [ %1633, %1632 ]
  %1636 = load atomic i32, i32* %1553 monotonic, align 4
  %1637 = and i32 %1636, 2
  %1638 = icmp eq i32 %1637, 0
  br i1 %1638, label %1639, label %1641

1639:                                             ; preds = %1634
  %1640 = add i32 %1635, -1
  store i32 %1640, i32* %1625, align 4
  br label %1641

1641:                                             ; preds = %1639, %1634
  %1642 = phi i32 [ %1640, %1639 ], [ %1635, %1634 ]
  %1643 = icmp eq i32 %1642, 0
  br i1 %1643, label %1644, label %1936

1644:                                             ; preds = %1641
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1550) #17
  br label %1936

1645:                                             ; preds = %1185
  %1646 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %17, align 8
  %1647 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %1646, i64 30
  %1648 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %1647, align 8
  %1649 = call i32 %1648(%"class.blink::Node"* nonnull %1) #17
  %1650 = icmp eq i32 %1649, 10
  br i1 %1650, label %1651, label %1698

1651:                                             ; preds = %1645
  %1652 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 0, i32 0, i32 1
  %1653 = bitcast %"class.blink::TraceWrapperV8Reference"* %1652 to %"class.WTF::StringImpl"**
  %1654 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1653, align 8
  %1655 = icmp eq %"class.WTF::StringImpl"* %1654, null
  br i1 %1655, label %1673, label %1656

1656:                                             ; preds = %1651
  %1657 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1654, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1658 = load atomic i32, i32* %1657 monotonic, align 4
  %1659 = and i32 %1658, 2
  %1660 = icmp eq i32 %1659, 0
  br i1 %1660, label %1661, label %1673

1661:                                             ; preds = %1656
  %1662 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1654, i64 0, i32 0
  %1663 = load i32, i32* %1662, align 4
  %1664 = zext i32 %1663 to i33
  %1665 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1664, i33 1) #17
  %1666 = extractvalue { i33, i1 } %1665, 1
  %1667 = extractvalue { i33, i1 } %1665, 0
  %1668 = icmp slt i33 %1667, 0
  %1669 = or i1 %1666, %1668
  br i1 %1669, label %1670, label %1671, !prof !2

1670:                                             ; preds = %1661
  call void @llvm.trap() #17
  unreachable

1671:                                             ; preds = %1661
  %1672 = trunc i33 %1667 to i32
  store i32 %1672, i32* %1662, align 4
  br label %1673

1673:                                             ; preds = %1651, %1656, %1671
  %1674 = bitcast i8* %199 to %"class.crdtp::detail::ValueMaybe.3366"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe.3366"* %1674, %"class.WTF::StringImpl"* %1654) #17
  %1675 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 1
  %1676 = bitcast i32* %1675 to %"class.WTF::StringImpl"**
  %1677 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1676, align 8
  %1678 = icmp eq %"class.WTF::StringImpl"* %1677, null
  br i1 %1678, label %1696, label %1679

1679:                                             ; preds = %1673
  %1680 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1677, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1681 = load atomic i32, i32* %1680 monotonic, align 4
  %1682 = and i32 %1681, 2
  %1683 = icmp eq i32 %1682, 0
  br i1 %1683, label %1684, label %1696

1684:                                             ; preds = %1679
  %1685 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1677, i64 0, i32 0
  %1686 = load i32, i32* %1685, align 4
  %1687 = zext i32 %1686 to i33
  %1688 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1687, i33 1) #17
  %1689 = extractvalue { i33, i1 } %1688, 1
  %1690 = extractvalue { i33, i1 } %1688, 0
  %1691 = icmp slt i33 %1690, 0
  %1692 = or i1 %1689, %1691
  br i1 %1692, label %1693, label %1694, !prof !2

1693:                                             ; preds = %1684
  call void @llvm.trap() #17
  unreachable

1694:                                             ; preds = %1684
  %1695 = trunc i33 %1690 to i32
  store i32 %1695, i32* %1685, align 4
  br label %1696

1696:                                             ; preds = %1673, %1679, %1694
  %1697 = bitcast i8* %202 to %"class.crdtp::detail::ValueMaybe.3366"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe.3366"* %1697, %"class.WTF::StringImpl"* %1677) #17
  br label %1936

1698:                                             ; preds = %1645, %384
  %1699 = bitcast %"class.blink::Node"* %1 to i1 (%"class.blink::Node"*)***
  %1700 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %1699, align 8
  %1701 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %1700, i64 40
  %1702 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %1701, align 8
  %1703 = call zeroext i1 %1702(%"class.blink::Node"* %1) #17
  br i1 %1703, label %1704, label %1827

1704:                                             ; preds = %1698
  %1705 = bitcast %"class.blink::Node"* %1 to %"class.blink::Attr"*
  %1706 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 0, i32 0, i32 1
  %1707 = bitcast %"class.blink::TraceWrapperV8Reference"* %1706 to %"class.blink::QualifiedName"*
  %1708 = call %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"* %1707) #17
  %1709 = icmp eq %"class.WTF::StringImpl"* %1708, null
  br i1 %1709, label %1727, label %1710

1710:                                             ; preds = %1704
  %1711 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1708, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1712 = load atomic i32, i32* %1711 monotonic, align 4
  %1713 = and i32 %1712, 2
  %1714 = icmp eq i32 %1713, 0
  br i1 %1714, label %1715, label %1745

1715:                                             ; preds = %1710
  %1716 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1708, i64 0, i32 0
  %1717 = load i32, i32* %1716, align 4
  %1718 = zext i32 %1717 to i33
  %1719 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1718, i33 1) #17
  %1720 = extractvalue { i33, i1 } %1719, 1
  %1721 = extractvalue { i33, i1 } %1719, 0
  %1722 = icmp slt i33 %1721, 0
  %1723 = or i1 %1720, %1722
  br i1 %1723, label %1724, label %1725, !prof !2

1724:                                             ; preds = %1715
  call void @llvm.trap() #17
  unreachable

1725:                                             ; preds = %1715
  %1726 = trunc i33 %1721 to i32
  store i32 %1726, i32* %1716, align 4
  br label %1745

1727:                                             ; preds = %1704
  %1728 = bitcast i8* %212 to i64*
  %1729 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  store i64 0, i64* %1728, align 8
  %1730 = icmp eq %"class.WTF::StringImpl"* %1729, null
  br i1 %1730, label %1744, label %1731

1731:                                             ; preds = %1727
  %1732 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1729, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1733 = load atomic i32, i32* %1732 monotonic, align 4
  %1734 = and i32 %1733, 2
  %1735 = icmp eq i32 %1734, 0
  %1736 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1729, i64 0, i32 0
  %1737 = load i32, i32* %1736, align 4
  br i1 %1735, label %1738, label %1740

1738:                                             ; preds = %1731
  %1739 = add i32 %1737, -1
  store i32 %1739, i32* %1736, align 4
  br label %1740

1740:                                             ; preds = %1738, %1731
  %1741 = phi i32 [ %1739, %1738 ], [ %1737, %1731 ]
  %1742 = icmp eq i32 %1741, 0
  br i1 %1742, label %1743, label %1744

1743:                                             ; preds = %1740
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1729) #17
  br label %1744

1744:                                             ; preds = %1727, %1740, %1743
  store i8 1, i8* %211, align 8
  br label %1803

1745:                                             ; preds = %1725, %1710
  %1746 = load atomic i32, i32* %1711 monotonic, align 4
  %1747 = and i32 %1746, 2
  %1748 = icmp eq i32 %1747, 0
  br i1 %1748, label %1749, label %1761

1749:                                             ; preds = %1745
  %1750 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1708, i64 0, i32 0
  %1751 = load i32, i32* %1750, align 4
  %1752 = zext i32 %1751 to i33
  %1753 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1752, i33 1) #17
  %1754 = extractvalue { i33, i1 } %1753, 1
  %1755 = extractvalue { i33, i1 } %1753, 0
  %1756 = icmp slt i33 %1755, 0
  %1757 = or i1 %1754, %1756
  br i1 %1757, label %1758, label %1759, !prof !2

1758:                                             ; preds = %1749
  call void @llvm.trap() #17
  unreachable

1759:                                             ; preds = %1749
  %1760 = trunc i33 %1755 to i32
  store i32 %1760, i32* %1750, align 4
  br label %1761

1761:                                             ; preds = %1759, %1745
  %1762 = ptrtoint %"class.WTF::StringImpl"* %1708 to i64
  %1763 = bitcast i8* %212 to i64*
  %1764 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  store i64 %1762, i64* %1763, align 8
  %1765 = icmp eq %"class.WTF::StringImpl"* %1764, null
  br i1 %1765, label %1779, label %1766

1766:                                             ; preds = %1761
  %1767 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1764, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1768 = load atomic i32, i32* %1767 monotonic, align 4
  %1769 = and i32 %1768, 2
  %1770 = icmp eq i32 %1769, 0
  %1771 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1764, i64 0, i32 0
  %1772 = load i32, i32* %1771, align 4
  br i1 %1770, label %1773, label %1775

1773:                                             ; preds = %1766
  %1774 = add i32 %1772, -1
  store i32 %1774, i32* %1771, align 4
  br label %1775

1775:                                             ; preds = %1773, %1766
  %1776 = phi i32 [ %1774, %1773 ], [ %1772, %1766 ]
  %1777 = icmp eq i32 %1776, 0
  br i1 %1777, label %1778, label %1779

1778:                                             ; preds = %1775
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1764) #17
  br label %1779

1779:                                             ; preds = %1761, %1775, %1778
  store i8 1, i8* %211, align 8
  %1780 = load atomic i32, i32* %1711 monotonic, align 4
  %1781 = and i32 %1780, 2
  %1782 = icmp eq i32 %1781, 0
  %1783 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1708, i64 0, i32 0
  %1784 = load i32, i32* %1783, align 4
  br i1 %1782, label %1785, label %1787

1785:                                             ; preds = %1779
  %1786 = add i32 %1784, -1
  store i32 %1786, i32* %1783, align 4
  br label %1787

1787:                                             ; preds = %1785, %1779
  %1788 = phi i32 [ %1786, %1785 ], [ %1784, %1779 ]
  %1789 = icmp eq i32 %1788, 0
  br i1 %1789, label %1790, label %1792

1790:                                             ; preds = %1787
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1708) #17
  %1791 = load i32, i32* %1783, align 4
  br label %1792

1792:                                             ; preds = %1787, %1790
  %1793 = phi i32 [ %1788, %1787 ], [ %1791, %1790 ]
  %1794 = load atomic i32, i32* %1711 monotonic, align 4
  %1795 = and i32 %1794, 2
  %1796 = icmp eq i32 %1795, 0
  br i1 %1796, label %1797, label %1799

1797:                                             ; preds = %1792
  %1798 = add i32 %1793, -1
  store i32 %1798, i32* %1783, align 4
  br label %1799

1799:                                             ; preds = %1797, %1792
  %1800 = phi i32 [ %1798, %1797 ], [ %1793, %1792 ]
  %1801 = icmp eq i32 %1800, 0
  br i1 %1801, label %1802, label %1803

1802:                                             ; preds = %1799
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1708) #17
  br label %1803

1803:                                             ; preds = %1744, %1799, %1802
  %1804 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Attr5valueEv(%"class.blink::Attr"* %1705) #17
  %1805 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1804, i64 0, i32 0, i32 0, i32 0
  %1806 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1805, align 8
  %1807 = icmp eq %"class.WTF::StringImpl"* %1806, null
  br i1 %1807, label %1825, label %1808

1808:                                             ; preds = %1803
  %1809 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1806, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1810 = load atomic i32, i32* %1809 monotonic, align 4
  %1811 = and i32 %1810, 2
  %1812 = icmp eq i32 %1811, 0
  br i1 %1812, label %1813, label %1825

1813:                                             ; preds = %1808
  %1814 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1806, i64 0, i32 0
  %1815 = load i32, i32* %1814, align 4
  %1816 = zext i32 %1815 to i33
  %1817 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1816, i33 1) #17
  %1818 = extractvalue { i33, i1 } %1817, 1
  %1819 = extractvalue { i33, i1 } %1817, 0
  %1820 = icmp slt i33 %1819, 0
  %1821 = or i1 %1818, %1820
  br i1 %1821, label %1822, label %1823, !prof !2

1822:                                             ; preds = %1813
  call void @llvm.trap() #17
  unreachable

1823:                                             ; preds = %1813
  %1824 = trunc i33 %1819 to i32
  store i32 %1824, i32* %1814, align 4
  br label %1825

1825:                                             ; preds = %1803, %1808, %1823
  %1826 = bitcast i8* %214 to %"class.crdtp::detail::ValueMaybe.3366"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe.3366"* %1826, %"class.WTF::StringImpl"* %1806) #17
  br label %1936

1827:                                             ; preds = %1698
  br i1 %385, label %1936, label %1828

1828:                                             ; preds = %1827
  %1829 = load i32, i32* %377, align 8
  %1830 = and i32 %1829, 12
  %1831 = icmp eq i32 %1830, 8
  br i1 %1831, label %1832, label %1936

1832:                                             ; preds = %1828
  %1833 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %1834 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1833, align 8
  %1835 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1834, i64 0, i32 1, i32 0, i32 0
  %1836 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %1835, align 8
  %1837 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1836, i64 0, i32 0
  %1838 = icmp eq %"class.blink::Node"* %1837, %1
  br i1 %1838, label %1839, label %1936

1839:                                             ; preds = %1832
  %1840 = bitcast %"class.blink::Node"* %1 to %"class.blink::ShadowRoot"*
  %1841 = call %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent17GetShadowRootTypeEPNS_10ShadowRootE(%"class.blink::ShadowRoot"* nonnull %1840)
  %1842 = icmp eq %"class.WTF::StringImpl"* %1841, null
  br i1 %1842, label %1860, label %1843

1843:                                             ; preds = %1839
  %1844 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1841, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1845 = load atomic i32, i32* %1844 monotonic, align 4
  %1846 = and i32 %1845, 2
  %1847 = icmp eq i32 %1846, 0
  br i1 %1847, label %1848, label %1878

1848:                                             ; preds = %1843
  %1849 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1841, i64 0, i32 0
  %1850 = load i32, i32* %1849, align 4
  %1851 = zext i32 %1850 to i33
  %1852 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1851, i33 1) #17
  %1853 = extractvalue { i33, i1 } %1852, 1
  %1854 = extractvalue { i33, i1 } %1852, 0
  %1855 = icmp slt i33 %1854, 0
  %1856 = or i1 %1853, %1855
  br i1 %1856, label %1857, label %1858, !prof !2

1857:                                             ; preds = %1848
  call void @llvm.trap() #17
  unreachable

1858:                                             ; preds = %1848
  %1859 = trunc i33 %1854 to i32
  store i32 %1859, i32* %1849, align 4
  br label %1878

1860:                                             ; preds = %1839
  %1861 = bitcast i8* %221 to i64*
  %1862 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  store i64 0, i64* %1861, align 8
  %1863 = icmp eq %"class.WTF::StringImpl"* %1862, null
  br i1 %1863, label %1877, label %1864

1864:                                             ; preds = %1860
  %1865 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1862, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1866 = load atomic i32, i32* %1865 monotonic, align 4
  %1867 = and i32 %1866, 2
  %1868 = icmp eq i32 %1867, 0
  %1869 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1862, i64 0, i32 0
  %1870 = load i32, i32* %1869, align 4
  br i1 %1868, label %1871, label %1873

1871:                                             ; preds = %1864
  %1872 = add i32 %1870, -1
  store i32 %1872, i32* %1869, align 4
  br label %1873

1873:                                             ; preds = %1871, %1864
  %1874 = phi i32 [ %1872, %1871 ], [ %1870, %1864 ]
  %1875 = icmp eq i32 %1874, 0
  br i1 %1875, label %1876, label %1877

1876:                                             ; preds = %1873
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1862) #17
  br label %1877

1877:                                             ; preds = %1860, %1873, %1876
  store i8 1, i8* %220, align 8
  br label %1936

1878:                                             ; preds = %1858, %1843
  %1879 = load atomic i32, i32* %1844 monotonic, align 4
  %1880 = and i32 %1879, 2
  %1881 = icmp eq i32 %1880, 0
  br i1 %1881, label %1882, label %1894

1882:                                             ; preds = %1878
  %1883 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1841, i64 0, i32 0
  %1884 = load i32, i32* %1883, align 4
  %1885 = zext i32 %1884 to i33
  %1886 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1885, i33 1) #17
  %1887 = extractvalue { i33, i1 } %1886, 1
  %1888 = extractvalue { i33, i1 } %1886, 0
  %1889 = icmp slt i33 %1888, 0
  %1890 = or i1 %1887, %1889
  br i1 %1890, label %1891, label %1892, !prof !2

1891:                                             ; preds = %1882
  call void @llvm.trap() #17
  unreachable

1892:                                             ; preds = %1882
  %1893 = trunc i33 %1888 to i32
  store i32 %1893, i32* %1883, align 4
  br label %1894

1894:                                             ; preds = %1892, %1878
  %1895 = ptrtoint %"class.WTF::StringImpl"* %1841 to i64
  %1896 = bitcast i8* %221 to i64*
  %1897 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  store i64 %1895, i64* %1896, align 8
  %1898 = icmp eq %"class.WTF::StringImpl"* %1897, null
  br i1 %1898, label %1912, label %1899

1899:                                             ; preds = %1894
  %1900 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1897, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1901 = load atomic i32, i32* %1900 monotonic, align 4
  %1902 = and i32 %1901, 2
  %1903 = icmp eq i32 %1902, 0
  %1904 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1897, i64 0, i32 0
  %1905 = load i32, i32* %1904, align 4
  br i1 %1903, label %1906, label %1908

1906:                                             ; preds = %1899
  %1907 = add i32 %1905, -1
  store i32 %1907, i32* %1904, align 4
  br label %1908

1908:                                             ; preds = %1906, %1899
  %1909 = phi i32 [ %1907, %1906 ], [ %1905, %1899 ]
  %1910 = icmp eq i32 %1909, 0
  br i1 %1910, label %1911, label %1912

1911:                                             ; preds = %1908
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1897) #17
  br label %1912

1912:                                             ; preds = %1894, %1908, %1911
  store i8 1, i8* %220, align 8
  %1913 = load atomic i32, i32* %1844 monotonic, align 4
  %1914 = and i32 %1913, 2
  %1915 = icmp eq i32 %1914, 0
  %1916 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1841, i64 0, i32 0
  %1917 = load i32, i32* %1916, align 4
  br i1 %1915, label %1918, label %1920

1918:                                             ; preds = %1912
  %1919 = add i32 %1917, -1
  store i32 %1919, i32* %1916, align 4
  br label %1920

1920:                                             ; preds = %1918, %1912
  %1921 = phi i32 [ %1919, %1918 ], [ %1917, %1912 ]
  %1922 = icmp eq i32 %1921, 0
  br i1 %1922, label %1923, label %1925

1923:                                             ; preds = %1920
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1841) #17
  %1924 = load i32, i32* %1916, align 4
  br label %1925

1925:                                             ; preds = %1920, %1923
  %1926 = phi i32 [ %1921, %1920 ], [ %1924, %1923 ]
  %1927 = load atomic i32, i32* %1844 monotonic, align 4
  %1928 = and i32 %1927, 2
  %1929 = icmp eq i32 %1928, 0
  br i1 %1929, label %1930, label %1932

1930:                                             ; preds = %1925
  %1931 = add i32 %1926, -1
  store i32 %1931, i32* %1916, align 4
  br label %1932

1932:                                             ; preds = %1930, %1925
  %1933 = phi i32 [ %1931, %1930 ], [ %1926, %1925 ]
  %1934 = icmp eq i32 %1933, 0
  br i1 %1934, label %1935, label %1936

1935:                                             ; preds = %1932
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1841) #17
  br label %1936

1936:                                             ; preds = %1832, %1827, %1828, %1935, %1932, %1877, %1644, %1641, %1586, %1183, %1152, %1825, %1696
  %1937 = phi i8 [ 0, %1696 ], [ 0, %1825 ], [ %1153, %1152 ], [ %1153, %1183 ], [ 0, %1586 ], [ 0, %1641 ], [ 0, %1644 ], [ 0, %1877 ], [ 0, %1932 ], [ 0, %1935 ], [ 0, %1832 ], [ 0, %1828 ], [ 0, %1827 ]
  %1938 = load i32, i32* %377, align 8
  %1939 = and i32 %1938, 2
  %1940 = icmp eq i32 %1939, 0
  br i1 %1940, label %2047, label %1941

1941:                                             ; preds = %1936
  %1942 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1942) #17
  store i32 -1431655766, i32* %12, align 4
  br i1 %385, label %1947, label %1943

1943:                                             ; preds = %1941
  %1944 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %1945 = bitcast %"class.blink::Node"* %1944 to %"class.blink::Node"**
  %1946 = load %"class.blink::Node"*, %"class.blink::Node"** %1945, align 8
  br label %1947

1947:                                             ; preds = %1943, %1941
  %1948 = phi %"class.blink::Node"* [ %1946, %1943 ], [ null, %1941 ]
  %1949 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %1948) #17
  br i1 %1949, label %1950, label %1955

1950:                                             ; preds = %1947, %1950
  %1951 = phi %"class.blink::Node"* [ %1953, %1950 ], [ %1948, %1947 ]
  %1952 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1951, i64 0, i32 5, i32 0, i32 0
  %1953 = load %"class.blink::Node"*, %"class.blink::Node"** %1952, align 8
  %1954 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %1953) #17
  br i1 %1954, label %1950, label %1955

1955:                                             ; preds = %1950, %1947
  %1956 = phi %"class.blink::Node"* [ %1948, %1947 ], [ %1953, %1950 ]
  %1957 = icmp eq %"class.blink::Node"* %1956, null
  br i1 %1957, label %1969, label %1961

1958:                                             ; preds = %1964
  %1959 = add i32 %1963, 1
  %1960 = icmp eq %"class.blink::Node"* %1967, null
  br i1 %1960, label %1969, label %1961

1961:                                             ; preds = %1955, %1958
  %1962 = phi %"class.blink::Node"* [ %1967, %1958 ], [ %1956, %1955 ]
  %1963 = phi i32 [ %1959, %1958 ], [ 0, %1955 ]
  br label %1964

1964:                                             ; preds = %1964, %1961
  %1965 = phi %"class.blink::Node"* [ %1962, %1961 ], [ %1967, %1964 ]
  %1966 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1965, i64 0, i32 5, i32 0, i32 0
  %1967 = load %"class.blink::Node"*, %"class.blink::Node"** %1966, align 8
  %1968 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %1967) #17
  br i1 %1968, label %1964, label %1958

1969:                                             ; preds = %1958, %1955
  %1970 = phi i32 [ 0, %1955 ], [ %1959, %1958 ]
  store i32 %1970, i32* %12, align 4
  %1971 = bitcast i8* %193 to i32*
  store i32 %1970, i32* %1971, align 4
  %1972 = getelementptr inbounds i8, i8* %187, i64 56
  store i8 1, i8* %1972, align 4
  %1973 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %1974 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %1973, align 8
  %1975 = icmp eq %"class.blink::HeapHashMap.2752"* %1974, %4
  br i1 %1975, label %1976, label %1986

1976:                                             ; preds = %1969
  %1977 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 12, i32 0
  %1978 = call { %"struct.WTF::KeyValuePair.2789"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERiSF_EENS_18HashTableAddResultISB_S2_EEOT0_OT1_(%"class.WTF::HashTable.2786"* %1977, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %12) #17
  %1979 = extractvalue { %"struct.WTF::KeyValuePair.2789"*, i8 } %1978, 1
  %1980 = and i8 %1979, 1
  %1981 = icmp eq i8 %1980, 0
  br i1 %1981, label %1982, label %1986

1982:                                             ; preds = %1976
  %1983 = extractvalue { %"struct.WTF::KeyValuePair.2789"*, i8 } %1978, 0
  %1984 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %1983, i64 0, i32 1
  %1985 = load i32, i32* %12, align 4
  store i32 %1985, i32* %1984, align 4
  br label %1986

1986:                                             ; preds = %1982, %1976, %1969
  %1987 = icmp eq %"class.blink::HeapHashMap.2752"* %4, null
  br i1 %1987, label %1994, label %1988

1988:                                             ; preds = %1986
  %1989 = and i8 %1937, 1
  %1990 = icmp eq i8 %1989, 0
  %1991 = icmp ne i32 %2, 0
  %1992 = or i1 %1991, %1990
  %1993 = select i1 %1992, i32 %2, i32 1
  br label %1994

1994:                                             ; preds = %1988, %1986
  %1995 = phi i32 [ %2, %1986 ], [ %1993, %1988 ]
  %1996 = call %"class.std::__1::vector.3379"* @_ZN5blink17InspectorDOMAgent30BuildArrayForContainerChildrenEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %1, i32 %1995, i1 zeroext %3, %"class.blink::HeapHashMap.2752"* %4, %"class.std::__1::vector.3379"* %5)
  %1997 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %1996, i64 0, i32 0, i32 0
  %1998 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %1997, align 8
  %1999 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %1996, i64 0, i32 0, i32 1
  %2000 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %1999, align 8
  %2001 = icmp ne %"class.std::__1::unique_ptr.3367"* %1998, %2000
  %2002 = icmp ne i32 %1995, 0
  %2003 = or i1 %2002, %2001
  br i1 %2003, label %2004, label %2040

2004:                                             ; preds = %1994
  %2005 = ptrtoint %"class.std::__1::vector.3379"* %1996 to i64
  %2006 = getelementptr inbounds i8, i8* %187, i64 64
  %2007 = bitcast i8* %2006 to %"class.std::__1::vector.3379"**
  %2008 = load %"class.std::__1::vector.3379"*, %"class.std::__1::vector.3379"** %2007, align 8
  %2009 = bitcast i8* %2006 to i64*
  store i64 %2005, i64* %2009, align 8
  %2010 = icmp eq %"class.std::__1::vector.3379"* %2008, null
  br i1 %2010, label %2046, label %2011

2011:                                             ; preds = %2004
  %2012 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %2008, i64 0, i32 0, i32 0
  %2013 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %2012, align 8
  %2014 = icmp eq %"class.std::__1::unique_ptr.3367"* %2013, null
  br i1 %2014, label %2038, label %2015

2015:                                             ; preds = %2011
  %2016 = bitcast %"class.std::__1::unique_ptr.3367"* %2013 to i8*
  %2017 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %2008, i64 0, i32 0, i32 1
  %2018 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %2017, align 8
  %2019 = icmp eq %"class.std::__1::unique_ptr.3367"* %2018, %2013
  br i1 %2019, label %2036, label %2020

2020:                                             ; preds = %2015, %2031
  %2021 = phi %"class.std::__1::unique_ptr.3367"* [ %2022, %2031 ], [ %2018, %2015 ]
  %2022 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %2021, i64 -1
  %2023 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %2022, i64 0, i32 0, i32 0, i32 0
  %2024 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %2023, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %2023, align 8
  %2025 = icmp eq %"class.blink::protocol::DOM::Node"* %2024, null
  br i1 %2025, label %2031, label %2026

2026:                                             ; preds = %2020
  %2027 = bitcast %"class.blink::protocol::DOM::Node"* %2024 to void (%"class.blink::protocol::DOM::Node"*)***
  %2028 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %2027, align 8
  %2029 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %2028, i64 2
  %2030 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %2029, align 8
  call void %2030(%"class.blink::protocol::DOM::Node"* nonnull %2024) #17
  br label %2031

2031:                                             ; preds = %2026, %2020
  %2032 = icmp eq %"class.std::__1::unique_ptr.3367"* %2022, %2013
  br i1 %2032, label %2033, label %2020

2033:                                             ; preds = %2031
  %2034 = bitcast %"class.std::__1::vector.3379"* %2008 to i8**
  %2035 = load i8*, i8** %2034, align 8
  br label %2036

2036:                                             ; preds = %2033, %2015
  %2037 = phi i8* [ %2035, %2033 ], [ %2016, %2015 ]
  store %"class.std::__1::unique_ptr.3367"* %2013, %"class.std::__1::unique_ptr.3367"** %2017, align 8
  call void @_ZdlPv(i8* %2037) #18
  br label %2038

2038:                                             ; preds = %2036, %2011
  %2039 = bitcast %"class.std::__1::vector.3379"* %2008 to i8*
  call void @_ZdlPv(i8* %2039) #18
  br label %2046

2040:                                             ; preds = %1994
  %2041 = icmp eq %"class.std::__1::unique_ptr.3367"* %1998, null
  br i1 %2041, label %2044, label %2042

2042:                                             ; preds = %2040
  %2043 = bitcast %"class.std::__1::unique_ptr.3367"* %1998 to i8*
  store %"class.std::__1::unique_ptr.3367"* %1998, %"class.std::__1::unique_ptr.3367"** %1999, align 8
  call void @_ZdlPv(i8* %2043) #18
  br label %2044

2044:                                             ; preds = %2042, %2040
  %2045 = bitcast %"class.std::__1::vector.3379"* %1996 to i8*
  call void @_ZdlPv(i8* nonnull %2045) #18
  br label %2046

2046:                                             ; preds = %2038, %2004, %2044
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1942) #17
  br label %2047

2047:                                             ; preds = %1936, %2046
  %2048 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %2049 = icmp eq %"class.WTF::StringImpl"* %2048, null
  br i1 %2049, label %2063, label %2050

2050:                                             ; preds = %2047
  %2051 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2048, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2052 = load atomic i32, i32* %2051 monotonic, align 4
  %2053 = and i32 %2052, 2
  %2054 = icmp eq i32 %2053, 0
  %2055 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2048, i64 0, i32 0
  %2056 = load i32, i32* %2055, align 4
  br i1 %2054, label %2057, label %2059

2057:                                             ; preds = %2050
  %2058 = add i32 %2056, -1
  store i32 %2058, i32* %2055, align 4
  br label %2059

2059:                                             ; preds = %2057, %2050
  %2060 = phi i32 [ %2058, %2057 ], [ %2056, %2050 ]
  %2061 = icmp eq i32 %2060, 0
  br i1 %2061, label %2062, label %2063

2062:                                             ; preds = %2059
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2048) #17
  br label %2063

2063:                                             ; preds = %2047, %2059, %2062
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  br i1 %286, label %2077, label %2064

2064:                                             ; preds = %2063
  %2065 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2066 = load atomic i32, i32* %2065 monotonic, align 4
  %2067 = and i32 %2066, 2
  %2068 = icmp eq i32 %2067, 0
  %2069 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %2070 = load i32, i32* %2069, align 4
  br i1 %2068, label %2071, label %2073

2071:                                             ; preds = %2064
  %2072 = add i32 %2070, -1
  store i32 %2072, i32* %2069, align 4
  br label %2073

2073:                                             ; preds = %2071, %2064
  %2074 = phi i32 [ %2072, %2071 ], [ %2070, %2064 ]
  %2075 = icmp eq i32 %2074, 0
  br i1 %2075, label %2076, label %2077

2076:                                             ; preds = %2073
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #17
  br label %2077

2077:                                             ; preds = %2063, %2073, %2076
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #17
  ret %"class.blink::protocol::DOM::Node"* %234
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent11getDocumentEN5crdtp6detail10ValueMaybeIiEENS3_IbEEPNSt3__110unique_ptrINS_8protocol3DOM4NodeENS6_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly, %"class.std::__1::unique_ptr.3367"* nocapture) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %7 = bitcast i8* %6 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent11getDocumentEN5crdtp6detail10ValueMaybeIiEENS3_IbEEPNSt3__110unique_ptrINS_8protocol3DOM4NodeENS6_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %7, %"class.crdtp::detail::ValueMaybe.3365"* %2, %"class.crdtp::detail::ValueMaybe.3427"* %3, %"class.std::__1::unique_ptr.3367"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent25getNodesForSubtreeByStyleEiNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3DOM24CSSComputedStylePropertyENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEN5crdtp6detail10ValueMaybeIbEEPNS2_INS3_IiNSA_IiEEEENS7_ISK_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, %"class.std::__1::vector.3431"*, %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly, %"class.std::__1::unique_ptr.3450"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.WTF::HashMap.3456", align 8
  %12 = alloca %"class.absl::optional.3461", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::HashSet.2325", align 8
  %18 = alloca [1 x %"class.WTF::String"], align 8
  %19 = alloca %"class.blink::HeapVector.3335", align 8
  %20 = alloca i8, align 1
  %21 = alloca %"class.base::RepeatingCallback.3469", align 8
  %22 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 21, i32 2
  %23 = load i8, i8* %22, align 1, !range !3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %6
  %26 = tail call i8* @_Znwm(i64 32) #18
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast i64* %28 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %29, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i64 29, i1 false) #17
  %30 = getelementptr inbounds i8, i8* %26, i64 29
  store i8 0, i8* %30, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %8) #17
  %31 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %544

35:                                               ; preds = %25
  %36 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %36) #18
  br label %544

37:                                               ; preds = %6
  %38 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 14, i32 0, i32 0
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %38, align 8
  %40 = icmp eq %"class.blink::Document"* %39, null
  br i1 %40, label %41, label %53

41:                                               ; preds = %37
  %42 = tail call i8* @_Znwm(i64 32) #18
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast i64* %44 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %45, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0), i64 25, i1 false) #17
  %46 = getelementptr inbounds i8, i8* %42, i64 25
  store i8 0, i8* %46, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %9) #17
  %47 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %544

51:                                               ; preds = %41
  %52 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %52) #18
  br label %544

53:                                               ; preds = %37
  %54 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 32, i1 false)
  %55 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55)
  %56 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* %1, i32 %2) #17, !noalias !20
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = tail call i8* @_Znwm(i64 48) #18
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %59, i8** %60, align 8, !noalias !20
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = bitcast i64* %61 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %62, align 8, !noalias !20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %59, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i64 33, i1 false) #17
  %63 = getelementptr inbounds i8, i8* %59, i64 33
  store i8 0, i8* %63, align 1, !noalias !20
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.std::__1::basic_string"* nonnull %7) #17
  %64 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1, !noalias !20
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %58
  %69 = load i8*, i8** %60, align 8, !noalias !20
  call void @_ZdlPv(i8* %69) #18
  br label %71

70:                                               ; preds = %53
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %10) #17
  br label %71

71:                                               ; preds = %58, %68, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55)
  %72 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %81, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %73, i32* %76, align 8
  %77 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %78 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %79 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #17
  br label %543

81:                                               ; preds = %71
  %82 = bitcast %"class.WTF::HashMap.3456"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #17
  %83 = getelementptr inbounds %"class.WTF::HashMap.3456", %"class.WTF::HashMap.3456"* %11, i64 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.WTF::HashMap.3456", %"class.WTF::HashMap.3456"* %11, i64 0, i32 0, i32 1
  %85 = bitcast %"class.WTF::HashMap.3456"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 20, i1 false) #17
  %86 = getelementptr inbounds %"class.std::__1::vector.3431", %"class.std::__1::vector.3431"* %3, i64 0, i32 0, i32 0
  %87 = load %"class.std::__1::unique_ptr.3433"*, %"class.std::__1::unique_ptr.3433"** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::vector.3431", %"class.std::__1::vector.3431"* %3, i64 0, i32 0, i32 1
  %89 = load %"class.std::__1::unique_ptr.3433"*, %"class.std::__1::unique_ptr.3433"** %88, align 8
  %90 = icmp eq %"class.std::__1::unique_ptr.3433"* %87, %89
  br i1 %90, label %408, label %91

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.WTF::String"* %13 to i8*
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %95 = bitcast i32* %15 to i8*
  %96 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %97 = bitcast %"class.WTF::String"* %16 to i8*
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %99 = bitcast %"class.WTF::HashSet.2325"* %17 to i8*
  %100 = bitcast [1 x %"class.WTF::String"]* %18 to i8*
  %101 = getelementptr inbounds [1 x %"class.WTF::String"], [1 x %"class.WTF::String"]* %18, i64 0, i64 0
  %102 = getelementptr inbounds [1 x %"class.WTF::String"], [1 x %"class.WTF::String"]* %18, i64 0, i64 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.WTF::HashSet.2325", %"class.WTF::HashSet.2325"* %17, i64 0, i32 0
  %104 = getelementptr inbounds %"class.WTF::HashMap.3456", %"class.WTF::HashMap.3456"* %11, i64 0, i32 0
  %105 = bitcast %"class.WTF::HashSet.2325"* %17 to i64*
  %106 = getelementptr inbounds %"class.WTF::HashSet.2325", %"class.WTF::HashSet.2325"* %17, i64 0, i32 0, i32 1
  %107 = getelementptr inbounds %"class.WTF::HashSet.2325", %"class.WTF::HashSet.2325"* %17, i64 0, i32 0, i32 2
  %108 = getelementptr inbounds %"class.WTF::HashSet.2325", %"class.WTF::HashSet.2325"* %17, i64 0, i32 0, i32 3
  %109 = getelementptr inbounds %"class.WTF::HashSet.2325", %"class.WTF::HashSet.2325"* %17, i64 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %115 = getelementptr inbounds [1 x %"class.WTF::String"], [1 x %"class.WTF::String"]* %18, i64 0, i64 0, i32 0, i32 0
  %116 = bitcast i64* %111 to <2 x i64>*
  br label %119

117:                                              ; preds = %405
  %118 = icmp eq %"class.std::__1::unique_ptr.3433"* %407, %89
  br i1 %118, label %408, label %119

119:                                              ; preds = %91, %117
  %120 = phi %"class.std::__1::unique_ptr.3433"* [ %87, %91 ], [ %407, %117 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 24, i1 false)
  %121 = load %"class.blink::Document"*, %"class.blink::Document"** %38, align 8
  %122 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %121) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #17
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3433", %"class.std::__1::unique_ptr.3433"* %120, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.blink::protocol::DOM::CSSComputedStyleProperty"*, %"class.blink::protocol::DOM::CSSComputedStyleProperty"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::protocol::DOM::CSSComputedStyleProperty", %"class.blink::protocol::DOM::CSSComputedStyleProperty"* %124, i64 0, i32 1, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %145, label %128

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %145

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = zext i32 %135 to i33
  %137 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %136, i33 1) #17
  %138 = extractvalue { i33, i1 } %137, 1
  %139 = extractvalue { i33, i1 } %137, 0
  %140 = icmp slt i33 %139, 0
  %141 = or i1 %138, %140
  br i1 %141, label %142, label %143, !prof !2

142:                                              ; preds = %133
  call void @llvm.trap() #17
  unreachable

143:                                              ; preds = %133
  %144 = trunc i33 %139 to i32
  store i32 %144, i32* %134, align 4
  br label %145

145:                                              ; preds = %119, %128, %143
  store %"class.WTF::StringImpl"* %126, %"class.WTF::StringImpl"** %94, align 8
  call void @_ZN5blink15CSSPropertyName4FromEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.absl::optional.3461"* nonnull sret %12, %"class.blink::ExecutionContext"* %122, %"class.WTF::String"* nonnull dereferenceable(8) %13)
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #17
  br label %161

161:                                              ; preds = %145, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #17
  %162 = load i8, i8* %92, align 8, !range !3
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %164, label %171

164:                                              ; preds = %161
  %165 = call i8* @_Znwm(i64 32) #18
  store i8* %165, i8** %110, align 8
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %116, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %165, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i64 25, i1 false) #17
  %166 = getelementptr inbounds i8, i8* %165, i64 25
  store i8 0, i8* %166, align 1
  call void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %14) #17
  %167 = load i8, i8* %113, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %384

169:                                              ; preds = %164
  %170 = load i8*, i8** %110, align 8
  call void @_ZdlPv(i8* %170) #18
  br label %384

171:                                              ; preds = %161
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #17
  %172 = load i32, i32* %96, align 8
  store i32 %172, i32* %15, align 4
  %173 = load %"struct.WTF::KeyValuePair.3460"*, %"struct.WTF::KeyValuePair.3460"** %83, align 8
  %174 = icmp eq %"struct.WTF::KeyValuePair.3460"* %173, null
  %175 = load i32, i32* %84, align 8
  br i1 %174, label %231, label %176

176:                                              ; preds = %171
  %177 = add i32 %175, -1
  %178 = zext i32 %177 to i64
  %179 = shl i32 %172, 15
  %180 = xor i32 %179, -1
  %181 = add i32 %172, %180
  %182 = lshr i32 %181, 10
  %183 = xor i32 %182, %181
  %184 = mul i32 %183, 9
  %185 = lshr i32 %184, 6
  %186 = xor i32 %185, %184
  %187 = shl i32 %186, 11
  %188 = xor i32 %187, -1
  %189 = add i32 %186, %188
  %190 = lshr i32 %189, 16
  %191 = xor i32 %190, %189
  %192 = and i32 %191, %177
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %173, i64 %193
  %195 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %194, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = icmp eq i32 %196, %172
  br i1 %197, label %226, label %198

198:                                              ; preds = %176
  %199 = xor i32 %191, -1
  %200 = lshr i32 %189, 23
  %201 = add i32 %200, %199
  %202 = shl i32 %201, 12
  %203 = xor i32 %202, %201
  %204 = lshr i32 %203, 7
  %205 = xor i32 %204, %203
  %206 = shl i32 %205, 2
  %207 = xor i32 %206, %205
  %208 = lshr i32 %207, 20
  %209 = xor i32 %208, %207
  %210 = or i32 %209, 1
  %211 = zext i32 %210 to i64
  br label %212

212:                                              ; preds = %217, %198
  %213 = phi i32 [ %196, %198 ], [ %224, %217 ]
  %214 = phi i64 [ %193, %198 ], [ %221, %217 ]
  %215 = phi i64 [ 0, %198 ], [ %219, %217 ]
  %216 = icmp eq i32 %213, 0
  br i1 %216, label %231, label %217

217:                                              ; preds = %212
  %218 = icmp eq i64 %215, 0
  %219 = select i1 %218, i64 %211, i64 %215
  %220 = add i64 %219, %214
  %221 = and i64 %220, %178
  %222 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %173, i64 %221
  %223 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %222, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, %172
  br i1 %225, label %226, label %212

226:                                              ; preds = %217, %176
  %227 = phi %"struct.WTF::KeyValuePair.3460"* [ %194, %176 ], [ %222, %217 ]
  %228 = icmp eq %"struct.WTF::KeyValuePair.3460"* %227, null
  br i1 %228, label %231, label %229

229:                                              ; preds = %226
  %230 = zext i32 %175 to i64
  br label %234

231:                                              ; preds = %212, %226, %171
  %232 = zext i32 %175 to i64
  %233 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %173, i64 %232
  br label %234

234:                                              ; preds = %229, %231
  %235 = phi i64 [ %230, %229 ], [ %232, %231 ]
  %236 = phi %"struct.WTF::KeyValuePair.3460"* [ %227, %229 ], [ %233, %231 ]
  %237 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %173, i64 %235
  %238 = icmp eq %"struct.WTF::KeyValuePair.3460"* %236, %237
  br i1 %238, label %280, label %239

239:                                              ; preds = %234
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #17
  %240 = load %"class.blink::protocol::DOM::CSSComputedStyleProperty"*, %"class.blink::protocol::DOM::CSSComputedStyleProperty"** %123, align 8
  %241 = getelementptr inbounds %"class.blink::protocol::DOM::CSSComputedStyleProperty", %"class.blink::protocol::DOM::CSSComputedStyleProperty"* %240, i64 0, i32 2, i32 0, i32 0
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %261, label %244

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %261

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = zext i32 %251 to i33
  %253 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %252, i33 1) #17
  %254 = extractvalue { i33, i1 } %253, 1
  %255 = extractvalue { i33, i1 } %253, 0
  %256 = icmp slt i33 %255, 0
  %257 = or i1 %254, %256
  br i1 %257, label %258, label %259, !prof !2

258:                                              ; preds = %249
  call void @llvm.trap() #17
  unreachable

259:                                              ; preds = %249
  %260 = trunc i33 %255 to i32
  store i32 %260, i32* %250, align 4
  br label %261

261:                                              ; preds = %239, %244, %259
  store %"class.WTF::StringImpl"* %242, %"class.WTF::StringImpl"** %98, align 8
  %262 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %236, i64 0, i32 2, i32 0
  %263 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.2326"* %262, %"class.WTF::String"* nonnull dereferenceable(8) %16, %"class.WTF::String"* nonnull dereferenceable(8) %16) #17
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %265, label %279, label %266

266:                                              ; preds = %261
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 0
  %272 = load i32, i32* %271, align 4
  br i1 %270, label %273, label %275

273:                                              ; preds = %266
  %274 = add i32 %272, -1
  store i32 %274, i32* %271, align 4
  br label %275

275:                                              ; preds = %273, %266
  %276 = phi i32 [ %274, %273 ], [ %272, %266 ]
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %275
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %264) #17
  br label %279

279:                                              ; preds = %261, %275, %278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #17
  br label %383

280:                                              ; preds = %234
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #17
  %281 = load %"class.blink::protocol::DOM::CSSComputedStyleProperty"*, %"class.blink::protocol::DOM::CSSComputedStyleProperty"** %123, align 8
  %282 = getelementptr inbounds %"class.blink::protocol::DOM::CSSComputedStyleProperty", %"class.blink::protocol::DOM::CSSComputedStyleProperty"* %281, i64 0, i32 2, i32 0, i32 0
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %282, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %283, null
  br i1 %284, label %302, label %285

285:                                              ; preds = %280
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %302

290:                                              ; preds = %285
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  %293 = zext i32 %292 to i33
  %294 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %293, i33 1) #17
  %295 = extractvalue { i33, i1 } %294, 1
  %296 = extractvalue { i33, i1 } %294, 0
  %297 = icmp slt i33 %296, 0
  %298 = or i1 %295, %297
  br i1 %298, label %299, label %300, !prof !2

299:                                              ; preds = %290
  call void @llvm.trap() #17
  unreachable

300:                                              ; preds = %290
  %301 = trunc i33 %296 to i32
  store i32 %301, i32* %291, align 4
  br label %302

302:                                              ; preds = %280, %285, %300
  store %"class.WTF::StringImpl"* %283, %"class.WTF::StringImpl"** %102, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 0, i64 20, i1 false) #17
  call void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2326"* nonnull %103, i32 1) #17
  %303 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.2326"* nonnull %103, %"class.WTF::String"* nonnull dereferenceable(8) %101, %"class.WTF::String"* nonnull dereferenceable(8) %101) #17
  %304 = call { %"struct.WTF::KeyValuePair.3460"*, i8 } @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E6insertINS_17HashMapTranslatorISI_SE_S9_EERS2_SA_EENS_18HashTableAddResultISJ_SB_EEOT0_OT1_(%"class.WTF::HashTable.3457"* nonnull %104, i32* nonnull dereferenceable(4) %15, %"class.WTF::HashSet.2325"* nonnull dereferenceable(24) %17) #17
  %305 = extractvalue { %"struct.WTF::KeyValuePair.3460"*, i8 } %304, 1
  %306 = and i8 %305, 1
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %310, label %308

308:                                              ; preds = %302
  %309 = load %"class.WTF::String"*, %"class.WTF::String"** %109, align 8
  br label %332

310:                                              ; preds = %302
  %311 = extractvalue { %"struct.WTF::KeyValuePair.3460"*, i8 } %304, 0
  %312 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %311, i64 0, i32 2
  %313 = load i64, i64* %105, align 8
  %314 = bitcast %"class.WTF::HashSet.2325"* %312 to i64*
  %315 = load i64, i64* %314, align 8
  store atomic i64 %315, i64* %105 monotonic, align 8
  store atomic i64 %313, i64* %314 monotonic, align 8
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %311, i64 0, i32 2, i32 0, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = load i32, i32* %106, align 8
  store i32 %318, i32* %316, align 4
  store i32 %317, i32* %106, align 8
  %319 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %311, i64 0, i32 2, i32 0, i32 2
  %320 = load i32, i32* %319, align 4
  %321 = load i32, i32* %107, align 4
  store i32 %321, i32* %319, align 4
  store i32 %320, i32* %107, align 4
  %322 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %311, i64 0, i32 2, i32 0, i32 3
  %323 = load i32, i32* %322, align 8
  %324 = and i32 %323, 2147483647
  %325 = load i32, i32* %108, align 8
  %326 = and i32 %325, 2147483647
  %327 = and i32 %323, -2147483648
  %328 = or i32 %326, %327
  store i32 %328, i32* %322, align 8
  %329 = and i32 %325, -2147483648
  %330 = or i32 %329, %324
  store i32 %330, i32* %108, align 8
  %331 = inttoptr i64 %315 to %"class.WTF::String"*
  br label %332

332:                                              ; preds = %308, %310
  %333 = phi %"class.WTF::String"* [ %309, %308 ], [ %331, %310 ]
  %334 = icmp eq %"class.WTF::String"* %333, null
  br i1 %334, label %366, label %335, !prof !4

335:                                              ; preds = %332
  %336 = load i32, i32* %106, align 8
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %364, label %338

338:                                              ; preds = %335
  %339 = zext i32 %336 to i64
  br label %340

340:                                              ; preds = %361, %338
  %341 = phi i64 [ 0, %338 ], [ %362, %361 ]
  %342 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %333, i64 %341
  %343 = bitcast %"class.WTF::String"* %342 to i8**
  %344 = load i8*, i8** %343, align 8
  %345 = bitcast i8* %344 to %"class.WTF::StringImpl"*
  %346 = ptrtoint i8* %344 to i64
  switch i64 %346, label %347 [
    i64 -1, label %361
    i64 0, label %361
  ]

347:                                              ; preds = %340
  %348 = getelementptr inbounds i8, i8* %344, i64 8
  %349 = bitcast i8* %348 to i32*
  %350 = load atomic i32, i32* %349 monotonic, align 4
  %351 = and i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = bitcast i8* %344 to i32*
  %354 = load i32, i32* %353, align 4
  br i1 %352, label %355, label %357

355:                                              ; preds = %347
  %356 = add i32 %354, -1
  store i32 %356, i32* %353, align 4
  br label %357

357:                                              ; preds = %355, %347
  %358 = phi i32 [ %356, %355 ], [ %354, %347 ]
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %361

360:                                              ; preds = %357
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %345) #17
  br label %361

361:                                              ; preds = %360, %357, %340, %340
  %362 = add nuw nsw i64 %341, 1
  %363 = icmp eq i64 %362, %339
  br i1 %363, label %364, label %340

364:                                              ; preds = %361, %335
  %365 = bitcast %"class.WTF::String"* %333 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %365) #17
  store %"class.WTF::String"* null, %"class.WTF::String"** %109, align 8
  br label %366

366:                                              ; preds = %332, %364
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %382, label %369

369:                                              ; preds = %366
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  br i1 %373, label %376, label %378

376:                                              ; preds = %369
  %377 = add i32 %375, -1
  store i32 %377, i32* %374, align 4
  br label %378

378:                                              ; preds = %376, %369
  %379 = phi i32 [ %377, %376 ], [ %375, %369 ]
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %378
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %367) #17
  br label %382

382:                                              ; preds = %366, %378, %381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #17
  br label %383

383:                                              ; preds = %382, %279
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #17
  br label %384

384:                                              ; preds = %169, %164, %383
  %385 = phi i32 [ 0, %383 ], [ 1, %164 ], [ 1, %169 ]
  %386 = load i8, i8* %92, align 8, !range !3
  %387 = icmp eq i8 %386, 0
  br i1 %387, label %405, label %388

388:                                              ; preds = %384
  %389 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %390 = icmp eq %"class.WTF::StringImpl"* %389, null
  br i1 %390, label %404, label %391

391:                                              ; preds = %388
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %393 = load atomic i32, i32* %392 monotonic, align 4
  %394 = and i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 0, i32 0
  %397 = load i32, i32* %396, align 4
  br i1 %395, label %398, label %400

398:                                              ; preds = %391
  %399 = add i32 %397, -1
  store i32 %399, i32* %396, align 4
  br label %400

400:                                              ; preds = %398, %391
  %401 = phi i32 [ %399, %398 ], [ %397, %391 ]
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %404

403:                                              ; preds = %400
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %389) #17
  br label %404

404:                                              ; preds = %403, %400, %388
  store i8 0, i8* %92, align 8
  br label %405

405:                                              ; preds = %384, %404
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #17
  %406 = icmp eq i32 %385, 0
  %407 = getelementptr inbounds %"class.std::__1::unique_ptr.3433", %"class.std::__1::unique_ptr.3433"* %120, i64 1
  br i1 %406, label %117, label %529

408:                                              ; preds = %117, %81
  %409 = bitcast %"class.blink::HeapVector.3335"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %409) #17
  %410 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %411 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %19, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %409, i8 0, i64 16, i1 false) #17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20)
  store i8 0, i8* %20, align 1
  %412 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %4, i64 0, i32 0
  %413 = load i8, i8* %412, align 1, !range !3
  %414 = icmp eq i8 %413, 0
  %415 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %4, i64 0, i32 1
  %416 = select i1 %414, i8* %20, i8* %415
  %417 = load i8, i8* %416, align 1, !range !3
  %418 = icmp ne i8 %417, 0
  %419 = ptrtoint %"class.WTF::HashMap.3456"* %11 to i64
  %420 = call i8* @_Znwm(i64 48) #18, !noalias !23
  %421 = bitcast i8* %420 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %421, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Node"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN3WTF7HashMapIN5blink13CSSPropertyIDENS3_7HashSetINS3_6StringENS3_10StringHashENS3_10HashTraitsIS8_EENS3_18PartitionAllocatorEEENS3_7IntHashIS6_EENSA_IS6_EENSA_ISD_EESC_EEPNS5_4NodeEEJNS3_17UnretainedWrapperISI_EEEEEFbSM_EE3RunEPNS0_13BindStateBaseESM_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbPKN3WTF7HashMapIN5blink13CSSPropertyIDENS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS7_EENS2_18PartitionAllocatorEEENS2_7IntHashIS5_EENS9_IS5_EENS9_ISC_EESB_EEPNS4_4NodeEEJNS2_17UnretainedWrapperISH_EEEE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !23
  %422 = getelementptr inbounds i8, i8* %420, i64 32
  %423 = bitcast i8* %422 to i64*
  store i64 ptrtoint (i1 (%"class.WTF::HashMap.3456"*, %"class.blink::Node"*)* @_ZN5blink12_GLOBAL__N_121NodeHasMatchingStylesEPKN3WTF7HashMapINS_13CSSPropertyIDENS1_7HashSetINS1_6StringENS1_10StringHashENS1_10HashTraitsIS5_EENS1_18PartitionAllocatorEEENS1_7IntHashIS3_EENS7_IS3_EENS7_ISA_EES9_EEPNS_4NodeE to i64), i64* %423, align 8, !noalias !23
  %424 = getelementptr inbounds i8, i8* %420, i64 40
  %425 = bitcast i8* %424 to i64*
  store i64 %419, i64* %425, align 8, !noalias !23
  %426 = bitcast %"class.base::RepeatingCallback.3469"* %21 to i8**
  store i8* %420, i8** %426, align 8, !alias.scope !23
  call void @_ZN5blink17InspectorDOMAgent12CollectNodesEPNS_4NodeEibN4base17RepeatingCallbackIFbS2_EEEPNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Node"* %56, i32 2147483647, i1 zeroext %418, %"class.base::RepeatingCallback.3469"* nonnull %21, %"class.blink::HeapVector.3335"* nonnull %19)
  %427 = getelementptr inbounds %"class.base::RepeatingCallback.3469", %"class.base::RepeatingCallback.3469"* %21, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %427) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20)
  %428 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 5, i32 0, i32 0
  %429 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %428, align 8
  %430 = call i8* @_Znwm(i64 24) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %430, i8 0, i64 24, i1 false) #17
  %431 = ptrtoint i8* %430 to i64
  %432 = getelementptr inbounds %"class.std::__1::unique_ptr.3450", %"class.std::__1::unique_ptr.3450"* %5, i64 0, i32 0, i32 0, i32 0
  %433 = load %"class.std::__1::vector.2926"*, %"class.std::__1::vector.2926"** %432, align 8
  %434 = bitcast %"class.std::__1::unique_ptr.3450"* %5 to i64*
  store i64 %431, i64* %434, align 8
  %435 = icmp eq %"class.std::__1::vector.2926"* %433, null
  br i1 %435, label %447, label %436

436:                                              ; preds = %408
  %437 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %433, i64 0, i32 0, i32 0
  %438 = load i32*, i32** %437, align 8
  %439 = icmp eq i32* %438, null
  br i1 %439, label %445, label %440

440:                                              ; preds = %436
  %441 = ptrtoint i32* %438 to i64
  %442 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %433, i64 0, i32 0, i32 1
  %443 = bitcast i32** %442 to i64*
  store i64 %441, i64* %443, align 8
  %444 = bitcast i32* %438 to i8*
  call void @_ZdlPv(i8* %444) #18
  br label %445

445:                                              ; preds = %440, %436
  %446 = bitcast %"class.std::__1::vector.2926"* %433 to i8*
  call void @_ZdlPv(i8* %446) #18
  br label %447

447:                                              ; preds = %445, %408
  %448 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %410, align 8
  %449 = load i32, i32* %411, align 4
  %450 = zext i32 %449 to i64
  %451 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %448, i64 %450
  %452 = icmp eq i32 %449, 0
  br i1 %452, label %453, label %454

453:                                              ; preds = %526, %447
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %409) #17
  br label %529

454:                                              ; preds = %447, %526
  %455 = phi %"class.blink::Member.318"* [ %527, %526 ], [ %448, %447 ]
  %456 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %455, i64 0, i32 0, i32 0
  %457 = load %"class.blink::Node"*, %"class.blink::Node"** %456, align 8
  %458 = call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeEPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* %457, %"class.blink::HeapHashMap.2752"* %429)
  %459 = load %"class.std::__1::vector.2926"*, %"class.std::__1::vector.2926"** %432, align 8
  %460 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %459, i64 0, i32 0, i32 1
  %461 = load i32*, i32** %460, align 8
  %462 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %459, i64 0, i32 0, i32 2, i32 0, i32 0
  %463 = load i32*, i32** %462, align 8
  %464 = icmp eq i32* %461, %463
  %465 = ptrtoint i32* %463 to i64
  br i1 %464, label %470, label %466

466:                                              ; preds = %454
  store i32 %458, i32* %461, align 4
  %467 = getelementptr inbounds i32, i32* %461, i64 1
  %468 = ptrtoint i32* %467 to i64
  %469 = bitcast i32** %460 to i64*
  store i64 %468, i64* %469, align 8
  br label %526

470:                                              ; preds = %454
  %471 = ptrtoint i32* %461 to i64
  %472 = bitcast i32** %460 to i64*
  %473 = bitcast %"class.std::__1::vector.2926"* %459 to i64*
  %474 = load i64, i64* %473, align 8
  %475 = sub i64 %471, %474
  %476 = ashr exact i64 %475, 2
  %477 = add nsw i64 %476, 1
  %478 = icmp ugt i64 %477, 4611686018427387903
  br i1 %478, label %479, label %481

479:                                              ; preds = %470
  %480 = bitcast %"class.std::__1::vector.2926"* %459 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %480) #19
  unreachable

481:                                              ; preds = %470
  %482 = bitcast i32** %462 to i64*
  %483 = sub i64 %465, %474
  %484 = ashr exact i64 %483, 2
  %485 = icmp ult i64 %484, 2305843009213693951
  br i1 %485, label %486, label %494

486:                                              ; preds = %481
  %487 = ashr exact i64 %483, 1
  %488 = icmp ult i64 %487, %477
  %489 = select i1 %488, i64 %477, i64 %487
  %490 = icmp eq i64 %489, 0
  br i1 %490, label %499, label %491

491:                                              ; preds = %486
  %492 = icmp ugt i64 %489, 4611686018427387903
  br i1 %492, label %493, label %494

493:                                              ; preds = %491
  call void @abort() #19
  unreachable

494:                                              ; preds = %491, %481
  %495 = phi i64 [ %489, %491 ], [ 4611686018427387903, %481 ]
  %496 = shl i64 %495, 2
  %497 = call i8* @_Znwm(i64 %496) #18
  %498 = bitcast i8* %497 to i32*
  br label %499

499:                                              ; preds = %494, %486
  %500 = phi i64 [ %495, %494 ], [ 0, %486 ]
  %501 = phi i32* [ %498, %494 ], [ null, %486 ]
  %502 = getelementptr inbounds i32, i32* %501, i64 %476
  %503 = getelementptr inbounds i32, i32* %501, i64 %500
  %504 = ptrtoint i32* %503 to i64
  store i32 %458, i32* %502, align 4
  %505 = getelementptr inbounds i32, i32* %502, i64 1
  %506 = ptrtoint i32* %505 to i64
  %507 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %459, i64 0, i32 0, i32 0
  %508 = load i32*, i32** %507, align 8
  %509 = load i64, i64* %472, align 8
  %510 = ptrtoint i32* %508 to i64
  %511 = sub i64 %509, %510
  %512 = ashr exact i64 %511, 2
  %513 = sub nsw i64 0, %512
  %514 = getelementptr inbounds i32, i32* %502, i64 %513
  %515 = ptrtoint i32* %514 to i64
  %516 = icmp sgt i64 %511, 0
  br i1 %516, label %517, label %521

517:                                              ; preds = %499
  %518 = bitcast i32* %514 to i8*
  %519 = bitcast i32* %508 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %518, i8* align 4 %519, i64 %511, i1 false) #17
  %520 = load i32*, i32** %507, align 8
  br label %521

521:                                              ; preds = %517, %499
  %522 = phi i32* [ %508, %499 ], [ %520, %517 ]
  store i64 %515, i64* %473, align 8
  store i64 %506, i64* %472, align 8
  store i64 %504, i64* %482, align 8
  %523 = icmp eq i32* %522, null
  br i1 %523, label %526, label %524

524:                                              ; preds = %521
  %525 = bitcast i32* %522 to i8*
  call void @_ZdlPv(i8* %525) #18
  br label %526

526:                                              ; preds = %466, %521, %524
  %527 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %455, i64 1
  %528 = icmp eq %"class.blink::Member.318"* %527, %451
  br i1 %528, label %453, label %454

529:                                              ; preds = %405, %453
  %530 = load %"struct.WTF::KeyValuePair.3460"*, %"struct.WTF::KeyValuePair.3460"** %83, align 8
  %531 = icmp eq %"struct.WTF::KeyValuePair.3460"* %530, null
  br i1 %531, label %534, label %532, !prof !4

532:                                              ; preds = %529
  %533 = load i32, i32* %84, align 8
  call void @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E29DeleteAllBucketsAndDeallocateEPSB_j(%"struct.WTF::KeyValuePair.3460"* nonnull %530, i32 %533) #17
  store %"struct.WTF::KeyValuePair.3460"* null, %"struct.WTF::KeyValuePair.3460"** %83, align 8
  br label %534

534:                                              ; preds = %532, %529
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #17
  %535 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %536 = bitcast %"class.std::__1::basic_string"* %535 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %537 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %536, i64 0, i32 1, i32 0
  %538 = load i8, i8* %537, align 1
  %539 = icmp slt i8 %538, 0
  br i1 %539, label %540, label %543

540:                                              ; preds = %534
  %541 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %542 = load i8*, i8** %541, align 8
  call void @_ZdlPv(i8* %542) #18
  br label %543

543:                                              ; preds = %75, %534, %540
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #17
  br label %544

544:                                              ; preds = %51, %41, %35, %25, %543
  %545 = icmp eq %"class.std::__1::vector.3431"* %3, null
  br i1 %545, label %575, label %546

546:                                              ; preds = %544
  %547 = getelementptr inbounds %"class.std::__1::vector.3431", %"class.std::__1::vector.3431"* %3, i64 0, i32 0, i32 0
  %548 = load %"class.std::__1::unique_ptr.3433"*, %"class.std::__1::unique_ptr.3433"** %547, align 8
  %549 = icmp eq %"class.std::__1::unique_ptr.3433"* %548, null
  br i1 %549, label %573, label %550

550:                                              ; preds = %546
  %551 = bitcast %"class.std::__1::unique_ptr.3433"* %548 to i8*
  %552 = getelementptr inbounds %"class.std::__1::vector.3431", %"class.std::__1::vector.3431"* %3, i64 0, i32 0, i32 1
  %553 = load %"class.std::__1::unique_ptr.3433"*, %"class.std::__1::unique_ptr.3433"** %552, align 8
  %554 = icmp eq %"class.std::__1::unique_ptr.3433"* %553, %548
  br i1 %554, label %571, label %555

555:                                              ; preds = %550, %566
  %556 = phi %"class.std::__1::unique_ptr.3433"* [ %557, %566 ], [ %553, %550 ]
  %557 = getelementptr inbounds %"class.std::__1::unique_ptr.3433", %"class.std::__1::unique_ptr.3433"* %556, i64 -1
  %558 = getelementptr inbounds %"class.std::__1::unique_ptr.3433", %"class.std::__1::unique_ptr.3433"* %557, i64 0, i32 0, i32 0, i32 0
  %559 = load %"class.blink::protocol::DOM::CSSComputedStyleProperty"*, %"class.blink::protocol::DOM::CSSComputedStyleProperty"** %558, align 8
  store %"class.blink::protocol::DOM::CSSComputedStyleProperty"* null, %"class.blink::protocol::DOM::CSSComputedStyleProperty"** %558, align 8
  %560 = icmp eq %"class.blink::protocol::DOM::CSSComputedStyleProperty"* %559, null
  br i1 %560, label %566, label %561

561:                                              ; preds = %555
  %562 = bitcast %"class.blink::protocol::DOM::CSSComputedStyleProperty"* %559 to void (%"class.blink::protocol::DOM::CSSComputedStyleProperty"*)***
  %563 = load void (%"class.blink::protocol::DOM::CSSComputedStyleProperty"*)**, void (%"class.blink::protocol::DOM::CSSComputedStyleProperty"*)*** %562, align 8
  %564 = getelementptr inbounds void (%"class.blink::protocol::DOM::CSSComputedStyleProperty"*)*, void (%"class.blink::protocol::DOM::CSSComputedStyleProperty"*)** %563, i64 2
  %565 = load void (%"class.blink::protocol::DOM::CSSComputedStyleProperty"*)*, void (%"class.blink::protocol::DOM::CSSComputedStyleProperty"*)** %564, align 8
  call void %565(%"class.blink::protocol::DOM::CSSComputedStyleProperty"* nonnull %559) #17
  br label %566

566:                                              ; preds = %561, %555
  %567 = icmp eq %"class.std::__1::unique_ptr.3433"* %557, %548
  br i1 %567, label %568, label %555

568:                                              ; preds = %566
  %569 = bitcast %"class.std::__1::vector.3431"* %3 to i8**
  %570 = load i8*, i8** %569, align 8
  br label %571

571:                                              ; preds = %568, %550
  %572 = phi i8* [ %570, %568 ], [ %551, %550 ]
  store %"class.std::__1::unique_ptr.3433"* %548, %"class.std::__1::unique_ptr.3433"** %552, align 8
  call void @_ZdlPv(i8* %572) #18
  br label %573

573:                                              ; preds = %571, %546
  %574 = bitcast %"class.std::__1::vector.3431"* %3 to i8*
  call void @_ZdlPv(i8* %574) #18
  br label %575

575:                                              ; preds = %544, %573
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSPropertyName4FromEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.absl::optional.3461"* noalias sret, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = tail call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2) #17
  switch i32 %4, label %86 [
    i32 0, label %5
    i32 1, label %7
  ]

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  br label %91

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %61, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 acquire, align 4
  %14 = and i32 %13, 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %34, label %16

16:                                               ; preds = %11
  %17 = load atomic i32, i32* %12 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #17
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #17
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %16, %30
  %33 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  br label %38

34:                                               ; preds = %11
  %35 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %9) #17
  %36 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %32, %34
  %39 = phi i64 [ %33, %32 ], [ %36, %34 ]
  %40 = phi %"class.WTF::StringImpl"* [ %9, %32 ], [ %35, %34 ]
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %67

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #17
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !2

54:                                               ; preds = %45
  tail call void @llvm.trap() #17
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  %57 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %57, align 8, !alias.scope !30
  %58 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 1, i32* %58, align 8, !alias.scope !30
  %59 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %60 = bitcast %"class.WTF::AtomicString"* %59 to i64*
  store i64 %39, i64* %60, align 8, !alias.scope !30
  br label %74

61:                                               ; preds = %34, %7
  %62 = phi i64 [ %36, %34 ], [ 0, %7 ]
  %63 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %63, align 8, !alias.scope !30
  %64 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 1, i32* %64, align 8, !alias.scope !30
  %65 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %66 = bitcast %"class.WTF::AtomicString"* %65 to i64*
  store i64 %62, i64* %66, align 8, !alias.scope !30
  br label %91

67:                                               ; preds = %38
  %68 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %68, align 8, !alias.scope !30
  %69 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 1, i32* %69, align 8, !alias.scope !30
  %70 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %71 = bitcast %"class.WTF::AtomicString"* %70 to i64*
  store i64 %39, i64* %71, align 8, !alias.scope !30
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br label %74

74:                                               ; preds = %55, %67
  %75 = phi i32 [ %56, %55 ], [ %73, %67 ]
  %76 = load atomic i32, i32* %41 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %81 = add i32 %75, -1
  store i32 %81, i32* %80, align 4
  br label %82

82:                                               ; preds = %79, %74
  %83 = phi i32 [ %81, %79 ], [ %75, %74 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #17
  br label %91

86:                                               ; preds = %3
  %87 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %87, align 8, !alias.scope !33
  %88 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %4, i32* %88, align 8, !alias.scope !33
  %89 = getelementptr inbounds %"class.absl::optional.3461", %"class.absl::optional.3461"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %90 = bitcast %"class.WTF::AtomicString"* %89 to i64*
  store i64 0, i64* %90, align 8, !alias.scope !33
  br label %91

91:                                               ; preds = %85, %82, %61, %86, %5
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #1

declare void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent12CollectNodesEPNS_4NodeEibN4base17RepeatingCallbackIFbS2_EEEPNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Node"*, i32, i1 zeroext, %"class.base::RepeatingCallback.3469"*, %"class.blink::HeapVector.3335"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::Node"*, align 8
  %7 = alloca %"class.base::RepeatingCallback.3469", align 8
  %8 = alloca %"class.base::RepeatingCallback.3469", align 8
  %9 = alloca %"class.base::RepeatingCallback.3469", align 8
  store %"class.blink::Node"* %0, %"class.blink::Node"** %6, align 8
  %10 = getelementptr inbounds %"class.base::RepeatingCallback.3469", %"class.base::RepeatingCallback.3469"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %10, align 8
  %12 = icmp eq %"class.base::internal::BindStateBase"* %11, null
  %13 = ptrtoint %"class.blink::Node"* %0 to i64
  br i1 %12, label %41, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %16 = bitcast void ()** %15 to i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Node"*)**
  %17 = load i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Node"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Node"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.base::internal::BindStateBase"* nonnull %11, %"class.blink::Node"* %0) #17
  br i1 %18, label %19, label %41

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %21, %23
  br i1 %24, label %39, label %25, !prof !2

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %26, align 8
  %28 = zext i32 %21 to i64
  %29 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %27, i64 %28
  %30 = bitcast %"class.blink::Member.318"* %29 to i64*
  store atomic i64 %13, i64* %30 monotonic, align 8
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %25
  %34 = bitcast %"class.blink::Node"* %0 to i8*
  %35 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %34) #17
  br label %36

36:                                               ; preds = %33, %25
  %37 = load i32, i32* %20, align 4
  %38 = add i32 %37, 1
  store i32 %38, i32* %20, align 4
  br label %41

39:                                               ; preds = %19
  %40 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %4, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3338"* %40, %"class.blink::Node"** nonnull dereferenceable(8) %6) #17
  br label %41

41:                                               ; preds = %5, %39, %36, %14
  %42 = add nsw i32 %1, -1
  %43 = icmp slt i32 %1, 2
  br i1 %43, label %125, label %44

44:                                               ; preds = %41
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %46 = icmp eq %"class.blink::Node"* %45, null
  br i1 %46, label %101, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %45, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 12
  %51 = icmp eq i32 %50, 0
  %52 = bitcast %"class.blink::Node"* %45 to %"class.blink::Element"*
  %53 = select i1 %51, %"class.blink::Element"* %52, %"class.blink::Element"* null
  %54 = and i1 %51, %2
  br i1 %54, label %55, label %89

55:                                               ; preds = %47
  %56 = bitcast %"class.blink::Node"* %45 to i1 (%"class.blink::Node"*)***
  %57 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %56, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %57, i64 42
  %59 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %58, align 8
  %60 = call zeroext i1 %59(%"class.blink::Node"* nonnull %45) #17
  %61 = bitcast %"class.blink::Node"* %45 to %"class.blink::HTMLFrameOwnerElement"*
  br i1 %60, label %62, label %81

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %45, i64 1, i32 5
  %64 = bitcast %"class.blink::Member.318"* %63 to %"class.blink::Frame"**
  %65 = load %"class.blink::Frame"*, %"class.blink::Frame"** %64, align 8
  %66 = icmp eq %"class.blink::Frame"* %65, null
  br i1 %66, label %81, label %67

67:                                               ; preds = %62
  %68 = bitcast %"class.blink::Frame"* %65 to i1 (%"class.blink::Frame"*)***
  %69 = load i1 (%"class.blink::Frame"*)**, i1 (%"class.blink::Frame"*)*** %68, align 8
  %70 = getelementptr inbounds i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %69, i64 3
  %71 = load i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %70, align 8
  %72 = call zeroext i1 %71(%"class.blink::Frame"* nonnull %65) #17
  br i1 %72, label %73, label %81

73:                                               ; preds = %67
  %74 = call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* nonnull %61) #17
  %75 = icmp eq %"class.blink::Document"* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %74, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.base::RepeatingCallback.3469", %"class.base::RepeatingCallback.3469"* %7, i64 0, i32 0
  %79 = getelementptr inbounds %"class.base::RepeatingCallback.3469", %"class.base::RepeatingCallback.3469"* %3, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %78, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %79) #17
  call void @_ZN5blink17InspectorDOMAgent12CollectNodesEPNS_4NodeEibN4base17RepeatingCallbackIFbS2_EEEPNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Node"* %77, i32 %42, i1 zeroext true, %"class.base::RepeatingCallback.3469"* nonnull %7, %"class.blink::HeapVector.3335"* %4)
  %80 = getelementptr inbounds %"class.base::RepeatingCallback.3469", %"class.base::RepeatingCallback.3469"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %80) #17
  br label %81

81:                                               ; preds = %55, %76, %73, %62, %67
  %82 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* nonnull %53) #17
  %83 = icmp eq %"class.blink::ShadowRoot"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %82, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.base::RepeatingCallback.3469", %"class.base::RepeatingCallback.3469"* %8, i64 0, i32 0
  %87 = getelementptr inbounds %"class.base::RepeatingCallback.3469", %"class.base::RepeatingCallback.3469"* %3, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %86, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %87) #17
  call void @_ZN5blink17InspectorDOMAgent12CollectNodesEPNS_4NodeEibN4base17RepeatingCallbackIFbS2_EEEPNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Node"* %85, i32 %42, i1 zeroext true, %"class.base::RepeatingCallback.3469"* nonnull %8, %"class.blink::HeapVector.3335"* %4)
  %88 = getelementptr inbounds %"class.base::RepeatingCallback.3469", %"class.base::RepeatingCallback.3469"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %88) #17
  br label %89

89:                                               ; preds = %81, %84, %47
  %90 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %91 = icmp eq %"class.blink::Node"* %90, null
  br i1 %91, label %101, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 0, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 1
  %99 = bitcast %"class.blink::Node"* %98 to %"class.blink::Node"**
  %100 = load %"class.blink::Node"*, %"class.blink::Node"** %99, align 8
  br label %101

101:                                              ; preds = %44, %97, %92, %89
  %102 = phi %"class.blink::Node"* [ %100, %97 ], [ null, %89 ], [ null, %92 ], [ null, %44 ]
  %103 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %102) #17
  br i1 %103, label %104, label %109

104:                                              ; preds = %101, %104
  %105 = phi %"class.blink::Node"* [ %107, %104 ], [ %102, %101 ]
  %106 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %105, i64 0, i32 5, i32 0, i32 0
  %107 = load %"class.blink::Node"*, %"class.blink::Node"** %106, align 8
  %108 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %107) #17
  br i1 %108, label %104, label %109

109:                                              ; preds = %104, %101
  %110 = phi %"class.blink::Node"* [ %102, %101 ], [ %107, %104 ]
  %111 = icmp eq %"class.blink::Node"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.base::RepeatingCallback.3469", %"class.base::RepeatingCallback.3469"* %9, i64 0, i32 0
  %114 = getelementptr inbounds %"class.base::RepeatingCallback.3469", %"class.base::RepeatingCallback.3469"* %3, i64 0, i32 0
  %115 = getelementptr inbounds %"class.base::RepeatingCallback.3469", %"class.base::RepeatingCallback.3469"* %9, i64 0, i32 0, i32 0
  br label %118

116:                                              ; preds = %120
  %117 = icmp eq %"class.blink::Node"* %123, null
  br i1 %117, label %125, label %118

118:                                              ; preds = %112, %116
  %119 = phi %"class.blink::Node"* [ %110, %112 ], [ %123, %116 ]
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %113, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %114) #17
  call void @_ZN5blink17InspectorDOMAgent12CollectNodesEPNS_4NodeEibN4base17RepeatingCallbackIFbS2_EEEPNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Node"* nonnull %119, i32 %42, i1 zeroext %2, %"class.base::RepeatingCallback.3469"* nonnull %9, %"class.blink::HeapVector.3335"* %4)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %115) #17
  br label %120

120:                                              ; preds = %120, %118
  %121 = phi %"class.blink::Node"* [ %119, %118 ], [ %123, %120 ]
  %122 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %121, i64 0, i32 5, i32 0, i32 0
  %123 = load %"class.blink::Node"*, %"class.blink::Node"** %122, align 8
  %124 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %123) #17
  br i1 %124, label %120, label %116

125:                                              ; preds = %116, %109, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_121NodeHasMatchingStylesEPKN3WTF7HashMapINS_13CSSPropertyIDENS1_7HashSetINS1_6StringENS1_10StringHashENS1_10HashTraitsIS5_EENS1_18PartitionAllocatorEEENS1_7IntHashIS3_EENS7_IS3_EENS7_ISA_EES9_EEPNS_4NodeE(%"class.WTF::HashMap.3456"* nocapture readonly, %"class.blink::Node"*) #0 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = icmp eq %"class.blink::Node"* %1, null
  br i1 %4, label %149, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %149

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #17
  %12 = bitcast i8* %11 to %"class.blink::CSSComputedStyleDeclaration"*
  %13 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %12, %"class.blink::Node"* nonnull %1, i1 zeroext true, %"class.WTF::String"* nonnull dereferenceable(8) %3) #17
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #17
  br label %30

30:                                               ; preds = %10, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  %31 = getelementptr inbounds i8, i8* %11, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  %35 = getelementptr inbounds %"class.WTF::HashMap.3456", %"class.WTF::HashMap.3456"* %0, i64 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::HashMap.3456", %"class.WTF::HashMap.3456"* %0, i64 0, i32 0, i32 0
  %39 = load %"struct.WTF::KeyValuePair.3460"*, %"struct.WTF::KeyValuePair.3460"** %38, align 8
  %40 = getelementptr inbounds %"class.WTF::HashMap.3456", %"class.WTF::HashMap.3456"* %0, i64 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %39, i64 %42
  br i1 %37, label %149, label %44

44:                                               ; preds = %30
  %45 = icmp eq i32 %41, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %44, %50
  %47 = phi %"struct.WTF::KeyValuePair.3460"* [ %51, %50 ], [ %39, %44 ]
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  switch i32 %49, label %53 [
    i32 1548, label %50
    i32 0, label %50
  ]

50:                                               ; preds = %46, %46
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %47, i64 1
  %52 = icmp eq %"struct.WTF::KeyValuePair.3460"* %51, %43
  br i1 %52, label %149, label %46

53:                                               ; preds = %46, %44
  %54 = phi %"struct.WTF::KeyValuePair.3460"* [ %39, %44 ], [ %47, %46 ]
  %55 = icmp eq %"struct.WTF::KeyValuePair.3460"* %54, %43
  br i1 %55, label %149, label %56

56:                                               ; preds = %53, %147
  %57 = phi %"struct.WTF::KeyValuePair.3460"* [ %141, %147 ], [ %54, %53 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"* %12, i32 %59) #17
  %61 = icmp eq %"class.blink::CSSValue"* %60, null
  br i1 %61, label %137, label %62

62:                                               ; preds = %56
  %63 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %60) #17
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %57, i64 0, i32 2, i32 0, i32 0
  %65 = load %"class.WTF::String"*, %"class.WTF::String"** %64, align 8
  %66 = icmp eq %"class.WTF::String"* %65, null
  br i1 %66, label %119, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %57, i64 0, i32 2, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, -1
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = lshr i32 %73, 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %67
  %77 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %63) #17
  br label %78

78:                                               ; preds = %76, %67
  %79 = phi i32 [ %77, %76 ], [ %74, %67 ]
  %80 = and i32 %79, %70
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %65, i64 %81
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %119, label %86

86:                                               ; preds = %78
  %87 = xor i32 %79, -1
  %88 = lshr i32 %79, 23
  %89 = add i32 %88, %87
  %90 = shl i32 %89, 12
  %91 = xor i32 %90, %89
  %92 = lshr i32 %91, 7
  %93 = xor i32 %92, %91
  %94 = shl i32 %93, 2
  %95 = xor i32 %94, %93
  %96 = lshr i32 %95, 20
  %97 = xor i32 %96, %95
  %98 = or i32 %97, 1
  %99 = zext i32 %98 to i64
  br label %100

100:                                              ; preds = %110, %86
  %101 = phi %"class.WTF::StringImpl"* [ %84, %86 ], [ %117, %110 ]
  %102 = phi %"class.WTF::String"* [ %82, %86 ], [ %115, %110 ]
  %103 = phi i64 [ %81, %86 ], [ %114, %110 ]
  %104 = phi i64 [ 0, %86 ], [ %112, %110 ]
  %105 = bitcast %"class.WTF::String"* %102 to i8**
  %106 = load i8*, i8** %105, align 8
  %107 = icmp eq i8* %106, inttoptr (i64 -1 to i8*)
  br i1 %107, label %110, label %108

108:                                              ; preds = %100
  %109 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %101, %"class.WTF::StringImpl"* %63) #17
  br i1 %109, label %119, label %110

110:                                              ; preds = %108, %100
  %111 = icmp eq i64 %104, 0
  %112 = select i1 %111, i64 %99, i64 %104
  %113 = add i64 %112, %103
  %114 = and i64 %113, %71
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %65, i64 %114
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %119, label %100

119:                                              ; preds = %110, %108, %78, %62
  %120 = phi %"class.WTF::String"* [ null, %62 ], [ null, %78 ], [ null, %110 ], [ %102, %108 ]
  %121 = icmp ne %"class.WTF::String"* %120, null
  %122 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #17
  br i1 %121, label %149, label %137

136:                                              ; preds = %132, %119
  br i1 %121, label %149, label %137

137:                                              ; preds = %56, %136, %135
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %57, i64 1
  %139 = icmp eq %"struct.WTF::KeyValuePair.3460"* %138, %43
  br i1 %139, label %149, label %140

140:                                              ; preds = %137, %144
  %141 = phi %"struct.WTF::KeyValuePair.3460"* [ %145, %144 ], [ %138, %137 ]
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %141, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  switch i32 %143, label %147 [
    i32 1548, label %144
    i32 0, label %144
  ]

144:                                              ; preds = %140, %140
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %141, i64 1
  %146 = icmp eq %"struct.WTF::KeyValuePair.3460"* %145, %43
  br i1 %146, label %149, label %140

147:                                              ; preds = %140
  %148 = icmp eq %"struct.WTF::KeyValuePair.3460"* %141, %43
  br i1 %148, label %149, label %56

149:                                              ; preds = %50, %137, %135, %136, %147, %144, %30, %53, %5, %2
  %150 = phi i1 [ false, %5 ], [ false, %2 ], [ false, %53 ], [ false, %30 ], [ false, %144 ], [ false, %137 ], [ true, %135 ], [ true, %136 ], [ false, %147 ], [ false, %50 ]
  ret i1 %150
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeEPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Node"*, %"class.blink::HeapHashMap.2752"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = alloca %"class.blink::HeapVector.3335", align 8
  %7 = alloca %"class.blink::Node"*, align 8
  %8 = alloca %"class.blink::Node"*, align 8
  store %"class.blink::Node"* %1, %"class.blink::Node"** %5, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 14, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = icmp eq %"class.blink::Document"* %10, null
  br i1 %11, label %97, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %13, align 8
  %15 = ptrtoint %"class.blink::Document"* %10 to i64
  %16 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %14, i64 0, i32 0, i32 0
  %17 = bitcast %"class.blink::Node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = bitcast %"class.blink::Node"** %4 to i64*
  store i64 %15, i64* %18, align 8
  %19 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.3317"* %16, %"class.blink::Node"** nonnull dereferenceable(8) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br i1 %19, label %20, label %97

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %2, i64 0, i32 0
  %22 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %21, %"class.blink::Node"** nonnull dereferenceable(8) %5)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %97

24:                                               ; preds = %20
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %26 = bitcast %"class.blink::HeapVector.3335"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #17
  %27 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false) #17
  %30 = bitcast %"class.blink::Node"** %7 to i8*
  %31 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %6, i64 0, i32 0
  br label %32

32:                                               ; preds = %74, %24
  %33 = phi %"class.blink::Node"* [ %25, %24 ], [ %77, %74 ]
  %34 = bitcast %"class.blink::Node"* %33 to %"class.blink::Document"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #17
  store %"class.blink::Node"* inttoptr (i64 -6148914691236517206 to %"class.blink::Node"*), %"class.blink::Node"** %7, align 8
  %35 = icmp eq %"class.blink::Node"* %33, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %38, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::Document"*, %"class.blink::Document"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %40, i64 0, i32 0, i32 0
  %42 = icmp eq %"class.blink::Node"* %41, %33
  br i1 %42, label %43, label %46

43:                                               ; preds = %36
  %44 = call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* nonnull %34) #17
  %45 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %51

46:                                               ; preds = %36, %32
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 2, i32 0, i32 0
  %48 = bitcast %"class.blink::Node"** %47 to %"class.blink::ContainerNode"**
  %49 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %49, i64 0, i32 0
  br label %51

51:                                               ; preds = %43, %46
  %52 = phi %"class.blink::Node"* [ %50, %46 ], [ %45, %43 ]
  store %"class.blink::Node"* %52, %"class.blink::Node"** %7, align 8
  %53 = icmp eq %"class.blink::Node"* %52, null
  %54 = ptrtoint %"class.blink::Node"* %52 to i64
  br i1 %53, label %55, label %56

55:                                               ; preds = %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #17
  br label %95

56:                                               ; preds = %51
  %57 = load i32, i32* %29, align 4
  %58 = load i32, i32* %28, align 8
  %59 = icmp eq i32 %57, %58
  br i1 %59, label %73, label %60, !prof !2

60:                                               ; preds = %56
  %61 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %27, align 8
  %62 = zext i32 %57 to i64
  %63 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %61, i64 %62
  %64 = bitcast %"class.blink::Member.318"* %63 to i64*
  store atomic i64 %54, i64* %64 monotonic, align 8
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %60
  %68 = bitcast %"class.blink::Node"* %52 to i8*
  %69 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %68) #17
  br label %70

70:                                               ; preds = %67, %60
  %71 = load i32, i32* %29, align 4
  %72 = add i32 %71, 1
  store i32 %72, i32* %29, align 4
  br label %74

73:                                               ; preds = %56
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3338"* nonnull %31, %"class.blink::Node"** nonnull dereferenceable(8) %7) #17
  br label %74

74:                                               ; preds = %70, %73
  %75 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %21, %"class.blink::Node"** nonnull dereferenceable(8) %7)
  %76 = icmp eq i32 %75, 0
  %77 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #17
  br i1 %76, label %32, label %78

78:                                               ; preds = %74
  %79 = load i32, i32* %29, align 4
  %80 = add i32 %79, -1
  %81 = icmp sgt i32 %80, -1
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = bitcast %"class.blink::Node"** %8 to i8*
  %84 = bitcast %"class.blink::Node"** %8 to i64*
  br label %87

85:                                               ; preds = %87, %78
  %86 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %21, %"class.blink::Node"** nonnull dereferenceable(8) %5)
  br label %95

87:                                               ; preds = %82, %87
  %88 = phi i32 [ %80, %82 ], [ %93, %87 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #17
  %89 = call dereferenceable(8) %"class.blink::Member.318"* @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3338"* nonnull %31, i32 %88)
  %90 = bitcast %"class.blink::Member.318"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %84, align 8
  %92 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %21, %"class.blink::Node"** nonnull dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #17
  call void @_ZN5blink17InspectorDOMAgent24PushChildNodesToFrontendEiib(%"class.blink::InspectorDOMAgent"* %0, i32 %92, i32 1, i1 zeroext false)
  %93 = add nsw i32 %88, -1
  %94 = icmp sgt i32 %88, 0
  br i1 %94, label %87, label %85

95:                                               ; preds = %55, %85
  %96 = phi i32 [ %86, %85 ], [ 0, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #17
  br label %97

97:                                               ; preds = %3, %95, %20, %12
  %98 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %96, %95 ], [ %22, %20 ]
  ret i32 %98
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent25getNodesForSubtreeByStyleEiNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3DOM24CSSComputedStylePropertyENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEN5crdtp6detail10ValueMaybeIbEEPNS2_INS3_IiNSA_IiEEEENS7_ISK_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, %"class.std::__1::vector.3431"*, %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly, %"class.std::__1::unique_ptr.3450"* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %8 = bitcast i8* %7 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent25getNodesForSubtreeByStyleEiNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3DOM24CSSComputedStylePropertyENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEN5crdtp6detail10ValueMaybeIbEEPNS2_INS3_IiNSA_IiEEEENS7_ISK_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %8, i32 %2, %"class.std::__1::vector.3431"* %3, %"class.crdtp::detail::ValueMaybe.3427"* %4, %"class.std::__1::unique_ptr.3450"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent20getFlattenedDocumentEN5crdtp6detail10ValueMaybeIiEENS3_IbEEPNSt3__110unique_ptrINS6_6vectorINS7_INS_8protocol3DOM4NodeENS6_14default_deleteISB_EEEENS6_9allocatorISE_EEEENSC_ISH_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly, %"class.std::__1::unique_ptr.3376"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::unique_ptr.3367", align 8
  %10 = alloca i8, align 1
  %11 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 21, i32 2
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %5
  %15 = tail call i8* @_Znwm(i64 32) #18
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %18, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i64 29, i1 false) #17
  %19 = getelementptr inbounds i8, i8* %15, i64 29
  store i8 0, i8* %19, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %6) #17
  %20 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %126

24:                                               ; preds = %14
  %25 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %25) #18
  br label %126

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 14, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = icmp eq %"class.blink::Document"* %28, null
  br i1 %29, label %30, label %42

30:                                               ; preds = %26
  %31 = tail call i8* @_Znwm(i64 32) #18
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast i64* %33 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %34, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0), i64 25, i1 false) #17
  %35 = getelementptr inbounds i8, i8* %31, i64 25
  store i8 0, i8* %35, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %36 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %126

40:                                               ; preds = %30
  %41 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %41) #18
  br label %126

42:                                               ; preds = %26
  tail call void @_ZN5blink17InspectorDOMAgent23DiscardFrontendBindingsEv(%"class.blink::InspectorDOMAgent"* %1)
  %43 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43)
  store i32 -1, i32* %8, align 4
  %44 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %2, i64 0, i32 0
  %45 = load i8, i8* %44, align 4, !range !3
  %46 = icmp eq i8 %45, 0
  %47 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %2, i64 0, i32 1
  %48 = select i1 %46, i32* %8, i32* %47
  %49 = load i32, i32* %48, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43)
  %50 = icmp eq i32 %49, -1
  %51 = select i1 %50, i32 2147483647, i32 %49
  %52 = tail call i8* @_Znwm(i64 24) #18
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 24, i1 false) #17
  %53 = ptrtoint i8* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.3376", %"class.std::__1::unique_ptr.3376"* %4, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.std::__1::vector.3379"*, %"class.std::__1::vector.3379"** %54, align 8
  %56 = bitcast %"class.std::__1::unique_ptr.3376"* %4 to i64*
  store i64 %53, i64* %56, align 8
  %57 = icmp eq %"class.std::__1::vector.3379"* %55, null
  %58 = bitcast i8* %52 to %"class.std::__1::vector.3379"*
  br i1 %57, label %89, label %59

59:                                               ; preds = %42
  %60 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %55, i64 0, i32 0, i32 0
  %61 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %60, align 8
  %62 = icmp eq %"class.std::__1::unique_ptr.3367"* %61, null
  br i1 %62, label %86, label %63

63:                                               ; preds = %59
  %64 = bitcast %"class.std::__1::unique_ptr.3367"* %61 to i8*
  %65 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %55, i64 0, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.3367"* %66, %61
  br i1 %67, label %84, label %68

68:                                               ; preds = %63, %79
  %69 = phi %"class.std::__1::unique_ptr.3367"* [ %70, %79 ], [ %66, %63 ]
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %69, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %71, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %71, align 8
  %73 = icmp eq %"class.blink::protocol::DOM::Node"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::protocol::DOM::Node"* %72 to void (%"class.blink::protocol::DOM::Node"*)***
  %76 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %76, i64 2
  %78 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %77, align 8
  tail call void %78(%"class.blink::protocol::DOM::Node"* nonnull %72) #17
  br label %79

79:                                               ; preds = %74, %68
  %80 = icmp eq %"class.std::__1::unique_ptr.3367"* %70, %61
  br i1 %80, label %81, label %68

81:                                               ; preds = %79
  %82 = bitcast %"class.std::__1::vector.3379"* %55 to i8**
  %83 = load i8*, i8** %82, align 8
  br label %84

84:                                               ; preds = %81, %63
  %85 = phi i8* [ %83, %81 ], [ %64, %63 ]
  store %"class.std::__1::unique_ptr.3367"* %61, %"class.std::__1::unique_ptr.3367"** %65, align 8
  tail call void @_ZdlPv(i8* %85) #18
  br label %86

86:                                               ; preds = %84, %59
  %87 = bitcast %"class.std::__1::vector.3379"* %55 to i8*
  tail call void @_ZdlPv(i8* %87) #18
  %88 = load %"class.std::__1::vector.3379"*, %"class.std::__1::vector.3379"** %54, align 8
  br label %89

89:                                               ; preds = %86, %42
  %90 = phi %"class.std::__1::vector.3379"* [ %88, %86 ], [ %58, %42 ]
  %91 = bitcast %"class.std::__1::unique_ptr.3367"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #17
  %92 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %93 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %92, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10)
  store i8 0, i8* %10, align 1
  %94 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %3, i64 0, i32 0
  %95 = load i8, i8* %94, align 1, !range !3
  %96 = icmp eq i8 %95, 0
  %97 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %3, i64 0, i32 1
  %98 = select i1 %96, i8* %10, i8* %97
  %99 = load i8, i8* %98, align 1, !range !3
  %100 = icmp ne i8 %99, 0
  %101 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 5, i32 0, i32 0
  %102 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %101, align 8
  %103 = tail call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* %93, i32 %51, i1 zeroext %100, %"class.blink::HeapHashMap.2752"* %102, %"class.std::__1::vector.3379"* %90)
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::protocol::DOM::Node"* %103, %"class.blink::protocol::DOM::Node"** %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %90, i64 0, i32 0, i32 1
  %106 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %90, i64 0, i32 0, i32 2, i32 0, i32 0
  %108 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %107, align 8
  %109 = icmp ult %"class.std::__1::unique_ptr.3367"* %106, %108
  br i1 %109, label %110, label %116

110:                                              ; preds = %89
  %111 = ptrtoint %"class.blink::protocol::DOM::Node"* %103 to i64
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %104, align 8
  %112 = bitcast %"class.std::__1::unique_ptr.3367"* %106 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %106, i64 1
  %114 = ptrtoint %"class.std::__1::unique_ptr.3367"* %113 to i64
  %115 = bitcast %"class.std::__1::unique_ptr.3367"** %105 to i64*
  store i64 %114, i64* %115, align 8
  br label %117

116:                                              ; preds = %89
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3DOM4NodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3379"* %90, %"class.std::__1::unique_ptr.3367"* nonnull dereferenceable(8) %9) #17
  br label %117

117:                                              ; preds = %110, %116
  %118 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %104, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %104, align 8
  %119 = icmp eq %"class.blink::protocol::DOM::Node"* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %117
  %121 = bitcast %"class.blink::protocol::DOM::Node"* %118 to void (%"class.blink::protocol::DOM::Node"*)***
  %122 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %122, i64 2
  %124 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %123, align 8
  call void %124(%"class.blink::protocol::DOM::Node"* nonnull %118) #17
  br label %125

125:                                              ; preds = %117, %120
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #17
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %126

126:                                              ; preds = %40, %30, %24, %14, %125
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent20getFlattenedDocumentEN5crdtp6detail10ValueMaybeIiEENS3_IbEEPNSt3__110unique_ptrINS6_6vectorINS7_INS_8protocol3DOM4NodeENS6_14default_deleteISB_EEEENS6_9allocatorISE_EEEENSC_ISH_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly, %"class.std::__1::unique_ptr.3376"* nocapture) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %7 = bitcast i8* %6 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent20getFlattenedDocumentEN5crdtp6detail10ValueMaybeIiEENS3_IbEEPNSt3__110unique_ptrINS6_6vectorINS7_INS_8protocol3DOM4NodeENS6_14default_deleteISB_EEEENS6_9allocatorISE_EEEENSC_ISH_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %7, %"class.crdtp::detail::ValueMaybe.3365"* %2, %"class.crdtp::detail::ValueMaybe.3427"* %3, %"class.std::__1::unique_ptr.3376"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent24PushChildNodesToFrontendEiib(%"class.blink::InspectorDOMAgent"*, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = bitcast %"class.blink::Node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* %0, i32 %1)
  store %"class.blink::Node"* %7, %"class.blink::Node"** %5, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %182, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 12
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 0, i32 0
  %20 = icmp eq %"class.blink::Node"* %19, %7
  %21 = icmp eq i32 %12, 8
  %22 = or i1 %21, %20
  br i1 %22, label %23, label %182

23:                                               ; preds = %14, %9
  %24 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %25 = load %"struct.WTF::KeyValuePair.2773"*, %"struct.WTF::KeyValuePair.2773"** %24, align 8
  %26 = icmp eq %"struct.WTF::KeyValuePair.2773"* %25, null
  br i1 %26, label %85, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, -1
  %31 = zext i32 %30 to i64
  %32 = shl i32 %1, 15
  %33 = xor i32 %32, -1
  %34 = add i32 %33, %1
  %35 = lshr i32 %34, 10
  %36 = xor i32 %35, %34
  %37 = mul i32 %36, 9
  %38 = lshr i32 %37, 6
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 11
  %41 = xor i32 %40, -1
  %42 = add i32 %39, %41
  %43 = lshr i32 %42, 16
  %44 = xor i32 %43, %42
  %45 = and i32 %30, %44
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %25, i64 %46
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %79, label %51

51:                                               ; preds = %27
  %52 = xor i32 %44, -1
  %53 = lshr i32 %42, 23
  %54 = add i32 %53, %52
  %55 = shl i32 %54, 12
  %56 = xor i32 %55, %54
  %57 = lshr i32 %56, 7
  %58 = xor i32 %57, %56
  %59 = shl i32 %58, 2
  %60 = xor i32 %59, %58
  %61 = lshr i32 %60, 20
  %62 = xor i32 %61, %60
  %63 = or i32 %62, 1
  %64 = zext i32 %63 to i64
  br label %65

65:                                               ; preds = %70, %51
  %66 = phi i32 [ %49, %51 ], [ %77, %70 ]
  %67 = phi i64 [ %46, %51 ], [ %74, %70 ]
  %68 = phi i64 [ 0, %51 ], [ %72, %70 ]
  %69 = icmp eq i32 %66, 0
  br i1 %69, label %85, label %70

70:                                               ; preds = %65
  %71 = icmp eq i64 %68, 0
  %72 = select i1 %71, i64 %64, i64 %68
  %73 = add i64 %72, %67
  %74 = and i64 %73, %31
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %25, i64 %74
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, %1
  br i1 %78, label %79, label %65

79:                                               ; preds = %70, %27
  %80 = phi %"struct.WTF::KeyValuePair.2773"* [ %47, %27 ], [ %75, %70 ]
  %81 = icmp eq %"struct.WTF::KeyValuePair.2773"* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %80, i64 0, i32 1, i32 0, i32 0
  %84 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %83, align 8
  br label %85

85:                                               ; preds = %65, %23, %79, %82
  %86 = phi %"class.blink::HeapHashMap.2752"* [ %84, %82 ], [ null, %79 ], [ null, %23 ], [ null, %65 ]
  %87 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10, i32 0, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = icmp eq i32* %88, null
  br i1 %89, label %178, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10, i32 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = add i32 %92, -1
  %94 = zext i32 %93 to i64
  %95 = shl i32 %1, 15
  %96 = xor i32 %95, -1
  %97 = add i32 %96, %1
  %98 = lshr i32 %97, 10
  %99 = xor i32 %98, %97
  %100 = mul i32 %99, 9
  %101 = lshr i32 %100, 6
  %102 = xor i32 %101, %100
  %103 = shl i32 %102, 11
  %104 = xor i32 %103, -1
  %105 = add i32 %102, %104
  %106 = lshr i32 %105, 16
  %107 = xor i32 %106, %105
  %108 = and i32 %93, %107
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds i32, i32* %88, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, %1
  br i1 %112, label %142, label %113

113:                                              ; preds = %90
  %114 = xor i32 %107, -1
  %115 = lshr i32 %105, 23
  %116 = add i32 %115, %114
  %117 = shl i32 %116, 12
  %118 = xor i32 %117, %116
  %119 = lshr i32 %118, 7
  %120 = xor i32 %119, %118
  %121 = shl i32 %120, 2
  %122 = xor i32 %121, %120
  %123 = lshr i32 %122, 20
  %124 = xor i32 %123, %122
  %125 = or i32 %124, 1
  %126 = zext i32 %125 to i64
  br label %127

127:                                              ; preds = %132, %113
  %128 = phi i32 [ %111, %113 ], [ %138, %132 ]
  %129 = phi i64 [ %109, %113 ], [ %136, %132 ]
  %130 = phi i64 [ 0, %113 ], [ %134, %132 ]
  %131 = icmp eq i32 %128, 0
  br i1 %131, label %178, label %132

132:                                              ; preds = %127
  %133 = icmp eq i64 %130, 0
  %134 = select i1 %133, i64 %126, i64 %130
  %135 = add i64 %134, %129
  %136 = and i64 %135, %94
  %137 = getelementptr inbounds i32, i32* %88, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, %1
  br i1 %139, label %140, label %127

140:                                              ; preds = %132
  %141 = getelementptr inbounds i32, i32* %88, i64 %136
  br label %142

142:                                              ; preds = %140, %90
  %143 = phi i32* [ %110, %90 ], [ %141, %140 ]
  %144 = icmp eq i32* %143, null
  br i1 %144, label %178, label %145

145:                                              ; preds = %142
  %146 = icmp slt i32 %2, 2
  br i1 %146, label %182, label %147

147:                                              ; preds = %145
  %148 = add nsw i32 %2, -1
  %149 = and i32 %11, 2
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %155, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1
  %153 = bitcast %"class.blink::Node"* %152 to %"class.blink::Node"**
  %154 = load %"class.blink::Node"*, %"class.blink::Node"** %153, align 8
  br label %155

155:                                              ; preds = %151, %147
  %156 = phi %"class.blink::Node"* [ %154, %151 ], [ null, %147 ]
  %157 = tail call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %156) #17
  br i1 %157, label %158, label %163

158:                                              ; preds = %155, %158
  %159 = phi %"class.blink::Node"* [ %161, %158 ], [ %156, %155 ]
  %160 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %159, i64 0, i32 5, i32 0, i32 0
  %161 = load %"class.blink::Node"*, %"class.blink::Node"** %160, align 8
  %162 = tail call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %161) #17
  br i1 %162, label %158, label %163

163:                                              ; preds = %158, %155
  %164 = phi %"class.blink::Node"* [ %156, %155 ], [ %161, %158 ]
  store %"class.blink::Node"* %164, %"class.blink::Node"** %5, align 8
  %165 = icmp eq %"class.blink::Node"* %164, null
  br i1 %165, label %182, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %86, i64 0, i32 0
  br label %170

168:                                              ; preds = %173
  store %"class.blink::Node"* %176, %"class.blink::Node"** %5, align 8
  %169 = icmp eq %"class.blink::Node"* %176, null
  br i1 %169, label %182, label %170

170:                                              ; preds = %166, %168
  %171 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %167, %"class.blink::Node"** nonnull dereferenceable(8) %5)
  call void @_ZN5blink17InspectorDOMAgent24PushChildNodesToFrontendEiib(%"class.blink::InspectorDOMAgent"* %0, i32 %171, i32 %148, i1 zeroext %3)
  %172 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  br label %173

173:                                              ; preds = %173, %170
  %174 = phi %"class.blink::Node"* [ %172, %170 ], [ %176, %173 ]
  %175 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %174, i64 0, i32 5, i32 0, i32 0
  %176 = load %"class.blink::Node"*, %"class.blink::Node"** %175, align 8
  %177 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %176) #17
  br i1 %177, label %173, label %168

178:                                              ; preds = %127, %142, %85
  %179 = tail call %"class.std::__1::vector.3379"* @_ZN5blink17InspectorDOMAgent30BuildArrayForContainerChildrenEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* nonnull %7, i32 %2, i1 zeroext %3, %"class.blink::HeapHashMap.2752"* %86, %"class.std::__1::vector.3379"* null)
  %180 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %181 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %180, align 8
  tail call void @_ZN5blink8protocol3DOM8Frontend13setChildNodesEiNSt3__110unique_ptrINS3_6vectorINS4_INS1_4NodeENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.blink::protocol::DOM::Frontend"* %181, i32 %1, %"class.std::__1::vector.3379"* nonnull %179) #17
  br label %182

182:                                              ; preds = %168, %163, %14, %178, %145, %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.std::__1::vector.3379"* @_ZN5blink17InspectorDOMAgent30BuildArrayForContainerChildrenEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Node"*, i32, i1 zeroext, %"class.blink::HeapHashMap.2752"*, %"class.std::__1::vector.3379"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.3367", align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::unique_ptr.3367", align 8
  %11 = alloca i32, align 4
  %12 = tail call i8* @_Znwm(i64 24) #18
  %13 = bitcast i8* %12 to %"class.std::__1::vector.3379"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #17
  %14 = icmp eq i32 %2, 0
  br i1 %14, label %15, label %88

15:                                               ; preds = %6
  %16 = icmp eq %"class.blink::HeapHashMap.2752"* %4, null
  %17 = icmp eq %"class.blink::Node"* %1, null
  %18 = or i1 %17, %16
  br i1 %18, label %179, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %179, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %26 = bitcast %"class.blink::Node"* %25 to %"class.blink::Node"**
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %179, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Node"* %27 to i32 (%"class.blink::Node"*)***
  %31 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %30, align 8
  %32 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %31, i64 30
  %33 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %32, align 8
  %34 = tail call i32 %33(%"class.blink::Node"* nonnull %27) #17
  %35 = icmp eq i32 %34, 3
  br i1 %35, label %36, label %179

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %27, i64 0, i32 5, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %40, label %179

40:                                               ; preds = %36
  %41 = bitcast %"class.std::__1::unique_ptr.3367"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #17
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %7, i64 0, i32 0, i32 0, i32 0
  %43 = tail call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* nonnull %27, i32 0, i1 zeroext %3, %"class.blink::HeapHashMap.2752"* nonnull %4, %"class.std::__1::vector.3379"* %5)
  store %"class.blink::protocol::DOM::Node"* %43, %"class.blink::protocol::DOM::Node"** %42, align 8
  %44 = tail call i32 @_ZN5blink17InspectorDOMAgent4BindEPNS_4NodeEPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* nonnull %1, %"class.blink::HeapHashMap.2752"* nonnull %4)
  %45 = getelementptr inbounds %"class.blink::protocol::DOM::Node", %"class.blink::protocol::DOM::Node"* %43, i64 0, i32 2, i32 1
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %"class.blink::protocol::DOM::Node", %"class.blink::protocol::DOM::Node"* %43, i64 0, i32 2, i32 0
  store i8 1, i8* %46, align 4
  %47 = icmp eq %"class.std::__1::vector.3379"* %5, null
  %48 = ptrtoint %"class.blink::protocol::DOM::Node"* %43 to i64
  br i1 %47, label %61, label %49

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %5, i64 0, i32 0, i32 1
  %51 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %53 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %52, align 8
  %54 = icmp ult %"class.std::__1::unique_ptr.3367"* %51, %53
  br i1 %54, label %55, label %60

55:                                               ; preds = %49
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %42, align 8
  %56 = bitcast %"class.std::__1::unique_ptr.3367"* %51 to i64*
  store i64 %48, i64* %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %51, i64 1
  %58 = ptrtoint %"class.std::__1::unique_ptr.3367"* %57 to i64
  %59 = bitcast %"class.std::__1::unique_ptr.3367"** %50 to i64*
  store i64 %58, i64* %59, align 8
  br label %75

60:                                               ; preds = %49
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3DOM4NodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3379"* nonnull %5, %"class.std::__1::unique_ptr.3367"* nonnull dereferenceable(8) %7) #17
  br label %75

61:                                               ; preds = %40
  %62 = getelementptr inbounds i8, i8* %12, i64 8
  %63 = bitcast i8* %62 to %"class.std::__1::unique_ptr.3367"**
  %64 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %63, align 8
  %65 = getelementptr inbounds i8, i8* %12, i64 16
  %66 = bitcast i8* %65 to %"class.std::__1::unique_ptr.3367"**
  %67 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %66, align 8
  %68 = icmp ult %"class.std::__1::unique_ptr.3367"* %64, %67
  br i1 %68, label %69, label %74

69:                                               ; preds = %61
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %42, align 8
  %70 = bitcast %"class.std::__1::unique_ptr.3367"* %64 to i64*
  store i64 %48, i64* %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %64, i64 1
  %72 = ptrtoint %"class.std::__1::unique_ptr.3367"* %71 to i64
  %73 = bitcast i8* %62 to i64*
  store i64 %72, i64* %73, align 8
  br label %75

74:                                               ; preds = %61
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3DOM4NodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3379"* nonnull %13, %"class.std::__1::unique_ptr.3367"* nonnull dereferenceable(8) %7) #17
  br label %75

75:                                               ; preds = %74, %69, %60, %55
  %76 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #17
  %77 = call i32 @_ZN5blink17InspectorDOMAgent4BindEPNS_4NodeEPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* nonnull %1, %"class.blink::HeapHashMap.2752"* nonnull %4)
  store i32 %77, i32* %8, align 4
  %78 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10, i32 0
  %79 = call { i32*, i8 } @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiiEENS_18HashTableAddResultIS7_iEEOT0_OT1_(%"class.WTF::HashTable.2782"* %78, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %8) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #17
  %80 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %42, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %42, align 8
  %81 = icmp eq %"class.blink::protocol::DOM::Node"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %75
  %83 = bitcast %"class.blink::protocol::DOM::Node"* %80 to void (%"class.blink::protocol::DOM::Node"*)***
  %84 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %84, i64 2
  %86 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %85, align 8
  call void %86(%"class.blink::protocol::DOM::Node"* nonnull %80) #17
  br label %87

87:                                               ; preds = %75, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #17
  br label %179

88:                                               ; preds = %6
  %89 = icmp eq %"class.blink::Node"* %1, null
  br i1 %89, label %99, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %99, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %97 = bitcast %"class.blink::Node"* %96 to %"class.blink::Node"**
  %98 = load %"class.blink::Node"*, %"class.blink::Node"** %97, align 8
  br label %99

99:                                               ; preds = %95, %90, %88
  %100 = phi %"class.blink::Node"* [ %98, %95 ], [ null, %88 ], [ null, %90 ]
  %101 = tail call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %100) #17
  br i1 %101, label %102, label %107

102:                                              ; preds = %99, %102
  %103 = phi %"class.blink::Node"* [ %105, %102 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %103, i64 0, i32 5, i32 0, i32 0
  %105 = load %"class.blink::Node"*, %"class.blink::Node"** %104, align 8
  %106 = tail call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %105) #17
  br i1 %106, label %102, label %107

107:                                              ; preds = %102, %99
  %108 = phi %"class.blink::Node"* [ %100, %99 ], [ %105, %102 ]
  %109 = add nsw i32 %2, -1
  %110 = icmp ne %"class.blink::HeapHashMap.2752"* %4, null
  br i1 %110, label %111, label %116

111:                                              ; preds = %107
  %112 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #17
  %113 = tail call i32 @_ZN5blink17InspectorDOMAgent4BindEPNS_4NodeEPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %1, %"class.blink::HeapHashMap.2752"* nonnull %4)
  store i32 %113, i32* %9, align 4
  %114 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10, i32 0
  %115 = call { i32*, i8 } @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiiEENS_18HashTableAddResultIS7_iEEOT0_OT1_(%"class.WTF::HashTable.2782"* %114, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %9) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #17
  br label %116

116:                                              ; preds = %111, %107
  %117 = icmp eq %"class.blink::Node"* %108, null
  br i1 %117, label %179, label %118

118:                                              ; preds = %116
  %119 = bitcast %"class.std::__1::unique_ptr.3367"* %10 to i8*
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %10, i64 0, i32 0, i32 0, i32 0
  %121 = icmp eq %"class.std::__1::vector.3379"* %5, null
  %122 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %5, i64 0, i32 0, i32 1
  %123 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3367"* %10 to i64*
  %125 = bitcast %"class.std::__1::unique_ptr.3367"** %122 to i64*
  %126 = getelementptr inbounds i8, i8* %12, i64 8
  %127 = bitcast i8* %126 to %"class.std::__1::unique_ptr.3367"**
  %128 = getelementptr inbounds i8, i8* %12, i64 16
  %129 = bitcast i8* %128 to %"class.std::__1::unique_ptr.3367"**
  %130 = bitcast i8* %126 to i64*
  %131 = bitcast i32* %11 to i8*
  %132 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10, i32 0
  br label %133

133:                                              ; preds = %118, %177
  %134 = phi %"class.blink::Node"* [ %108, %118 ], [ %167, %177 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #17
  store %"class.blink::protocol::DOM::Node"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::DOM::Node"*), %"class.blink::protocol::DOM::Node"** %120, align 8
  %135 = call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* nonnull %134, i32 %109, i1 zeroext %3, %"class.blink::HeapHashMap.2752"* %4, %"class.std::__1::vector.3379"* %5)
  store %"class.blink::protocol::DOM::Node"* %135, %"class.blink::protocol::DOM::Node"** %120, align 8
  %136 = call i32 @_ZN5blink17InspectorDOMAgent4BindEPNS_4NodeEPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %1, %"class.blink::HeapHashMap.2752"* %4)
  %137 = getelementptr inbounds %"class.blink::protocol::DOM::Node", %"class.blink::protocol::DOM::Node"* %135, i64 0, i32 2, i32 1
  store i32 %136, i32* %137, align 4
  %138 = getelementptr inbounds %"class.blink::protocol::DOM::Node", %"class.blink::protocol::DOM::Node"* %135, i64 0, i32 2, i32 0
  store i8 1, i8* %138, align 4
  br i1 %121, label %149, label %139

139:                                              ; preds = %133
  %140 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %122, align 8
  %141 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %123, align 8
  %142 = icmp ult %"class.std::__1::unique_ptr.3367"* %140, %141
  br i1 %142, label %143, label %148

143:                                              ; preds = %139
  %144 = load i64, i64* %124, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %120, align 8
  %145 = bitcast %"class.std::__1::unique_ptr.3367"* %140 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %140, i64 1
  %147 = ptrtoint %"class.std::__1::unique_ptr.3367"* %146 to i64
  store i64 %147, i64* %125, align 8
  br label %159

148:                                              ; preds = %139
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3DOM4NodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3379"* nonnull %5, %"class.std::__1::unique_ptr.3367"* nonnull dereferenceable(8) %10) #17
  br label %159

149:                                              ; preds = %133
  %150 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %127, align 8
  %151 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %129, align 8
  %152 = icmp ult %"class.std::__1::unique_ptr.3367"* %150, %151
  br i1 %152, label %153, label %158

153:                                              ; preds = %149
  %154 = load i64, i64* %124, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %120, align 8
  %155 = bitcast %"class.std::__1::unique_ptr.3367"* %150 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %150, i64 1
  %157 = ptrtoint %"class.std::__1::unique_ptr.3367"* %156 to i64
  store i64 %157, i64* %130, align 8
  br label %159

158:                                              ; preds = %149
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3DOM4NodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3379"* nonnull %13, %"class.std::__1::unique_ptr.3367"* nonnull dereferenceable(8) %10) #17
  br label %159

159:                                              ; preds = %158, %153, %148, %143
  br i1 %110, label %160, label %163

160:                                              ; preds = %159
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %131) #17
  %161 = call i32 @_ZN5blink17InspectorDOMAgent4BindEPNS_4NodeEPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %1, %"class.blink::HeapHashMap.2752"* nonnull %4)
  store i32 %161, i32* %11, align 4
  %162 = call { i32*, i8 } @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiiEENS_18HashTableAddResultIS7_iEEOT0_OT1_(%"class.WTF::HashTable.2782"* %132, i32* nonnull dereferenceable(4) %11, i32* nonnull dereferenceable(4) %11) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131) #17
  br label %163

163:                                              ; preds = %160, %159
  br label %164

164:                                              ; preds = %163, %164
  %165 = phi %"class.blink::Node"* [ %167, %164 ], [ %134, %163 ]
  %166 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %165, i64 0, i32 5, i32 0, i32 0
  %167 = load %"class.blink::Node"*, %"class.blink::Node"** %166, align 8
  %168 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %167) #17
  br i1 %168, label %164, label %169

169:                                              ; preds = %164
  %170 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %120, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %120, align 8
  %171 = icmp eq %"class.blink::protocol::DOM::Node"* %170, null
  br i1 %171, label %177, label %172

172:                                              ; preds = %169
  %173 = bitcast %"class.blink::protocol::DOM::Node"* %170 to void (%"class.blink::protocol::DOM::Node"*)***
  %174 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %174, i64 2
  %176 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %175, align 8
  call void %176(%"class.blink::protocol::DOM::Node"* nonnull %170) #17
  br label %177

177:                                              ; preds = %169, %172
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #17
  %178 = icmp eq %"class.blink::Node"* %167, null
  br i1 %178, label %179, label %133

179:                                              ; preds = %177, %116, %19, %15, %36, %24, %87, %29
  ret %"class.std::__1::vector.3379"* %13
}

declare void @_ZN5blink8protocol3DOM8Frontend13setChildNodesEiNSt3__110unique_ptrINS3_6vectorINS4_INS1_4NodeENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.blink::protocol::DOM::Frontend"*, i32, %"class.std::__1::vector.3379"*) local_unnamed_addr #1

declare void @_ZN5blink16InspectorHistory5ResetEv(%"class.blink::InspectorHistory"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent28collectClassNamesFromSubtreeEiPNSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.std::__1::unique_ptr.3390"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::HashSet.2325", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.WTF::HashSet.2325"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.WTF::HashSet.2325", %"class.WTF::HashSet.2325"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashSet.2325", %"class.WTF::HashSet.2325"* %5, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashSet.2325", %"class.WTF::HashSet.2325"* %5, i64 0, i32 0, i32 2
  %11 = bitcast %"class.WTF::HashSet.2325"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 20, i1 false) #17
  %12 = tail call i8* @_Znwm(i64 24) #18
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #17
  %13 = ptrtoint i8* %12 to i64
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.3390", %"class.std::__1::unique_ptr.3390"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.std::__1::vector.3393"*, %"class.std::__1::vector.3393"** %14, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.3390"* %3 to i64*
  store i64 %13, i64* %16, align 8
  %17 = icmp eq %"class.std::__1::vector.3393"* %15, null
  br i1 %17, label %55, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %15, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::String"*, %"class.WTF::String"** %19, align 8
  %21 = icmp eq %"class.WTF::String"* %20, null
  br i1 %21, label %53, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.WTF::String"* %20 to i8*
  %24 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %15, i64 0, i32 0, i32 1
  %25 = load %"class.WTF::String"*, %"class.WTF::String"** %24, align 8
  %26 = icmp eq %"class.WTF::String"* %25, %20
  br i1 %26, label %51, label %27

27:                                               ; preds = %22, %46
  %28 = phi %"class.WTF::String"* [ %29, %46 ], [ %25, %22 ]
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 -1
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #17
  br label %46

46:                                               ; preds = %45, %42, %27
  %47 = icmp eq %"class.WTF::String"* %29, %20
  br i1 %47, label %48, label %27

48:                                               ; preds = %46
  %49 = bitcast %"class.std::__1::vector.3393"* %15 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %22
  %52 = phi i8* [ %50, %48 ], [ %23, %22 ]
  store %"class.WTF::String"* %20, %"class.WTF::String"** %24, align 8
  tail call void @_ZdlPv(i8* %52) #18
  br label %53

53:                                               ; preds = %51, %18
  %54 = bitcast %"class.std::__1::vector.3393"* %15 to i8*
  tail call void @_ZdlPv(i8* %54) #18
  br label %55

55:                                               ; preds = %53, %4
  %56 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* %1, i32 %2)
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %56, i64 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, 12
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %88, label %63

63:                                               ; preds = %58, %55
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %56, i64 0, i32 3, i32 0, i32 0
  %65 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %65, i64 0, i32 2, i32 0, i32 0
  %67 = load %"class.blink::Document"*, %"class.blink::Document"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %67, i64 0, i32 0, i32 0
  %69 = icmp eq %"class.blink::Node"* %68, %56
  br i1 %69, label %87, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %56, i64 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = and i32 %72, 12
  %74 = icmp eq i32 %73, 8
  br i1 %74, label %87, label %75

75:                                               ; preds = %70
  %76 = tail call i8* @_Znwm(i64 48) #18
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %76, i8** %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = bitcast i64* %78 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %79, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %76, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.17, i64 0, i64 0), i64 36, i1 false) #17
  %80 = getelementptr inbounds i8, i8* %76, i64 36
  store i8 0, i8* %80, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %6) #17
  %81 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %205

85:                                               ; preds = %75
  %86 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %86) #18
  br label %205

87:                                               ; preds = %70, %63
  br i1 %57, label %90, label %88

88:                                               ; preds = %58, %87
  %89 = getelementptr inbounds %"class.WTF::HashSet.2325", %"class.WTF::HashSet.2325"* %5, i64 0, i32 0
  br label %109

90:                                               ; preds = %145, %151, %87
  %91 = load i32, i32* %10, align 4
  %92 = icmp eq i32 %91, 0
  %93 = load %"class.WTF::String"*, %"class.WTF::String"** %8, align 8
  %94 = load i32, i32* %9, align 8
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %93, i64 %95
  br i1 %92, label %157, label %97

97:                                               ; preds = %90
  %98 = icmp eq i32 %94, 0
  br i1 %98, label %106, label %99

99:                                               ; preds = %97, %103
  %100 = phi %"class.WTF::String"* [ %104, %103 ], [ %93, %97 ]
  %101 = bitcast %"class.WTF::String"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %106 [
    i64 -1, label %103
    i64 0, label %103
  ]

103:                                              ; preds = %99, %99
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 1
  %105 = icmp eq %"class.WTF::String"* %104, %96
  br i1 %105, label %157, label %99

106:                                              ; preds = %99, %97
  %107 = phi %"class.WTF::String"* [ %93, %97 ], [ %100, %99 ]
  %108 = icmp eq %"class.WTF::String"* %107, %96
  br i1 %108, label %157, label %158

109:                                              ; preds = %143, %88
  %110 = phi %"class.blink::Node"* [ %56, %88 ], [ %144, %143 ]
  %111 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %110, i64 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = and i32 %112, 12
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %140

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %110, i64 1, i32 3
  %117 = bitcast %"class.blink::Member.320"* %116 to %"class.blink::ElementData"**
  %118 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %117, align 8
  %119 = icmp eq %"class.blink::ElementData"* %118, null
  br i1 %119, label %140, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %118, i64 0, i32 2, i32 0, i32 0
  %122 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %121, align 8
  %123 = icmp eq %"class.blink::SpaceSplitString::Data"* %122, null
  br i1 %123, label %140, label %124

124:                                              ; preds = %120, %134
  %125 = phi %"class.blink::SpaceSplitString::Data"* [ %139, %134 ], [ %122, %120 ]
  %126 = phi i32 [ %138, %134 ], [ 0, %120 ]
  %127 = icmp eq %"class.blink::SpaceSplitString::Data"* %125, null
  br i1 %127, label %131, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %125, i64 0, i32 2, i32 0, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  br label %131

131:                                              ; preds = %124, %128
  %132 = phi i32 [ %130, %128 ], [ 0, %124 ]
  %133 = icmp ult i32 %126, %132
  br i1 %133, label %134, label %140

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %125, i64 0, i32 2
  %136 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.361"* %135, i32 %126) #17
  %137 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKNS_12AtomicStringESD_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.2326"* nonnull %89, %"class.WTF::AtomicString"* dereferenceable(8) %136, %"class.WTF::AtomicString"* dereferenceable(8) %136) #17
  %138 = add nuw i32 %126, 1
  %139 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %121, align 8
  br label %124

140:                                              ; preds = %131, %120, %109, %115
  %141 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %110, i32 0) #17
  %142 = icmp eq %"class.blink::Node"* %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %147, %140
  %144 = phi %"class.blink::Node"* [ %141, %140 ], [ %149, %147 ]
  br label %109

145:                                              ; preds = %140
  %146 = icmp eq %"class.blink::Node"* %110, %56
  br i1 %146, label %90, label %147

147:                                              ; preds = %145, %151
  %148 = phi %"class.blink::Node"* [ %153, %151 ], [ %110, %145 ]
  %149 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %148, i32 0) #17
  %150 = icmp eq %"class.blink::Node"* %149, null
  br i1 %150, label %151, label %143

151:                                              ; preds = %147
  %152 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %148) #17
  %153 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %152, i64 0, i32 0
  %154 = icmp eq %"class.blink::ContainerNode"* %152, null
  %155 = icmp eq %"class.blink::Node"* %153, %56
  %156 = or i1 %154, %155
  br i1 %156, label %90, label %147

157:                                              ; preds = %103, %193, %203, %200, %90, %106
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %205

158:                                              ; preds = %106, %203
  %159 = phi %"class.WTF::String"* [ %197, %203 ], [ %107, %106 ]
  %160 = load %"class.std::__1::vector.3393"*, %"class.std::__1::vector.3393"** %14, align 8
  %161 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %160, i64 0, i32 0, i32 1
  %162 = load %"class.WTF::String"*, %"class.WTF::String"** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %160, i64 0, i32 0, i32 2, i32 0, i32 0
  %164 = load %"class.WTF::String"*, %"class.WTF::String"** %163, align 8
  %165 = icmp ult %"class.WTF::String"* %162, %164
  br i1 %165, label %166, label %192

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %159, i64 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %162, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %168, %"class.WTF::StringImpl"** %169, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %170, label %188, label %171

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %188

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i33
  %180 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %179, i33 1) #17
  %181 = extractvalue { i33, i1 } %180, 1
  %182 = extractvalue { i33, i1 } %180, 0
  %183 = icmp slt i33 %182, 0
  %184 = or i1 %181, %183
  br i1 %184, label %185, label %186, !prof !2

185:                                              ; preds = %176
  call void @llvm.trap() #17
  unreachable

186:                                              ; preds = %176
  %187 = trunc i33 %182 to i32
  store i32 %187, i32* %177, align 4
  br label %188

188:                                              ; preds = %186, %171, %166
  %189 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %162, i64 1
  %190 = ptrtoint %"class.WTF::String"* %189 to i64
  %191 = bitcast %"class.WTF::String"** %161 to i64*
  store i64 %190, i64* %191, align 8
  br label %193

192:                                              ; preds = %158
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_(%"class.std::__1::vector.3393"* %160, %"class.WTF::String"* dereferenceable(8) %159) #17
  br label %193

193:                                              ; preds = %188, %192
  %194 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %159, i64 1
  %195 = icmp eq %"class.WTF::String"* %194, %96
  br i1 %195, label %157, label %196

196:                                              ; preds = %193, %200
  %197 = phi %"class.WTF::String"* [ %201, %200 ], [ %194, %193 ]
  %198 = bitcast %"class.WTF::String"* %197 to i64*
  %199 = load i64, i64* %198, align 8
  switch i64 %199, label %203 [
    i64 -1, label %200
    i64 0, label %200
  ]

200:                                              ; preds = %196, %196
  %201 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %197, i64 1
  %202 = icmp eq %"class.WTF::String"* %201, %96
  br i1 %202, label %157, label %196

203:                                              ; preds = %196
  %204 = icmp eq %"class.WTF::String"* %197, %96
  br i1 %204, label %157, label %158

205:                                              ; preds = %85, %75, %157
  %206 = load %"class.WTF::String"*, %"class.WTF::String"** %8, align 8
  %207 = icmp eq %"class.WTF::String"* %206, null
  br i1 %207, label %239, label %208, !prof !4

208:                                              ; preds = %205
  %209 = load i32, i32* %9, align 8
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %237, label %211

211:                                              ; preds = %208
  %212 = zext i32 %209 to i64
  br label %213

213:                                              ; preds = %234, %211
  %214 = phi i64 [ 0, %211 ], [ %235, %234 ]
  %215 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %206, i64 %214
  %216 = bitcast %"class.WTF::String"* %215 to i8**
  %217 = load i8*, i8** %216, align 8
  %218 = bitcast i8* %217 to %"class.WTF::StringImpl"*
  %219 = ptrtoint i8* %217 to i64
  switch i64 %219, label %220 [
    i64 -1, label %234
    i64 0, label %234
  ]

220:                                              ; preds = %213
  %221 = getelementptr inbounds i8, i8* %217, i64 8
  %222 = bitcast i8* %221 to i32*
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = bitcast i8* %217 to i32*
  %227 = load i32, i32* %226, align 4
  br i1 %225, label %228, label %230

228:                                              ; preds = %220
  %229 = add i32 %227, -1
  store i32 %229, i32* %226, align 4
  br label %230

230:                                              ; preds = %228, %220
  %231 = phi i32 [ %229, %228 ], [ %227, %220 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %230
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %218) #17
  br label %234

234:                                              ; preds = %233, %230, %213, %213
  %235 = add nuw nsw i64 %214, 1
  %236 = icmp eq i64 %235, %212
  br i1 %236, label %237, label %213

237:                                              ; preds = %234, %208
  %238 = bitcast %"class.WTF::String"* %206 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %238) #17
  store %"class.WTF::String"* null, %"class.WTF::String"** %8, align 8
  br label %239

239:                                              ; preds = %205, %237
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent28collectClassNamesFromSubtreeEiPNSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.std::__1::unique_ptr.3390"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent28collectClassNamesFromSubtreeEiPNSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %6, i32 %2, %"class.std::__1::unique_ptr.3390"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent17requestChildNodesEiN5crdtp6detail10ValueMaybeIiEENS3_IbEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly) unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca i8, align 1
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9)
  store i32 1, i32* %6, align 4
  %10 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %3, i64 0, i32 0
  %11 = load i8, i8* %10, align 4, !range !3
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %3, i64 0, i32 1
  %14 = select i1 %12, i32* %6, i32* %13
  %15 = load i32, i32* %14, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9)
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %15, -1
  %18 = or i1 %16, %17
  br i1 %18, label %19, label %31

19:                                               ; preds = %5
  %20 = tail call i8* @_Znwm(i64 80) #18
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast i64* %22 to <2 x i64>*
  store <2 x i64> <i64 69, i64 -9223372036854775728>, <2 x i64>* %23, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* align 1 getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i64 69, i1 false) #17
  %24 = getelementptr inbounds i8, i8* %20, i64 69
  store i8 0, i8* %24, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %25 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %19
  %30 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %30) #18
  br label %41

31:                                               ; preds = %5
  %32 = icmp eq i32 %15, -1
  %33 = select i1 %32, i32 2147483647, i32 %15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8)
  store i8 0, i8* %8, align 1
  %34 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %4, i64 0, i32 0
  %35 = load i8, i8* %34, align 1, !range !3
  %36 = icmp eq i8 %35, 0
  %37 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %4, i64 0, i32 1
  %38 = select i1 %36, i8* %8, i8* %37
  %39 = load i8, i8* %38, align 1, !range !3
  %40 = icmp ne i8 %39, 0
  tail call void @_ZN5blink17InspectorDOMAgent24PushChildNodesToFrontendEiib(%"class.blink::InspectorDOMAgent"* %1, i32 %2, i32 %33, i1 zeroext %40)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8)
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %41

41:                                               ; preds = %29, %19, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent17requestChildNodesEiN5crdtp6detail10ValueMaybeIiEENS3_IbEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %7 = bitcast i8* %6 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent17requestChildNodesEiN5crdtp6detail10ValueMaybeIiEENS3_IbEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %7, i32 %2, %"class.crdtp::detail::ValueMaybe.3365"* %3, %"class.crdtp::detail::ValueMaybe.3427"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent13querySelectorEiRKN3WTF6StringEPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  store i32 0, i32* %4, align 4
  %12 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13)
  %14 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* %1, i32 %2) #17, !noalias !36
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %16, label %28

16:                                               ; preds = %5
  %17 = tail call i8* @_Znwm(i64 48) #18
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8, !noalias !36
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast i64* %19 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %20, align 8, !noalias !36
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %17, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i64 33, i1 false) #17
  %21 = getelementptr inbounds i8, i8* %17, i64 33
  store i8 0, i8* %21, align 1, !noalias !36
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.std::__1::basic_string"* nonnull %6) #17
  %22 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1, !noalias !36
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %16
  %27 = load i8*, i8** %18, align 8, !noalias !36
  call void @_ZdlPv(i8* %27) #18
  br label %29

28:                                               ; preds = %5
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %7) #17
  br label %29

29:                                               ; preds = %16, %26, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13)
  %30 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %31, i32* %34, align 8
  %35 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #17
  br label %137

39:                                               ; preds = %29
  br i1 %15, label %46, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = bitcast %"class.blink::Node"* %14 to %"class.blink::ContainerNode"*
  br i1 %44, label %46, label %56

46:                                               ; preds = %40, %39
  %47 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  store i8 20, i8* %48, align 1
  %49 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %49, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0), i64 20, i1 false) #17
  %50 = getelementptr inbounds i8, i8* %49, i64 20
  store i8 0, i8* %50, align 4
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %8) #17
  %51 = load i8, i8* %48, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %137

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #18
  br label %137

56:                                               ; preds = %40
  %57 = bitcast %"class.blink::DummyExceptionStateForTesting"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %57) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 56, i1 false)
  %58 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %59, align 8
  %60 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %60, align 2
  %61 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 2
  %62 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %63 = bitcast %"class.WTF::StringImpl"** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #17
  %64 = bitcast i8** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 36, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %65 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #17
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %92, label %69

69:                                               ; preds = %56
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 acquire, align 4
  %72 = and i32 %71, 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %90, label %74

74:                                               ; preds = %69
  %75 = load atomic i32, i32* %70 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %92

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #17
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %78
  call void @llvm.trap() #17
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  br label %92

90:                                               ; preds = %69
  %91 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %67) #17
  br label %92

92:                                               ; preds = %56, %74, %88, %90
  %93 = phi %"class.WTF::StringImpl"* [ %91, %90 ], [ %67, %74 ], [ %67, %88 ], [ null, %56 ]
  %94 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %95 = bitcast %"class.WTF::AtomicString"* %10 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0
  %97 = call %"class.blink::Element"* @_ZN5blink13ContainerNode13QuerySelectorERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::ContainerNode"* nonnull %45, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %96) #17
  %98 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %92
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #17
  br label %114

114:                                              ; preds = %92, %110, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #17
  %115 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 4
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %130, label %118

118:                                              ; preds = %114
  %119 = call i8* @_Znwm(i64 32) #18
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %119, i8** %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = bitcast i64* %121 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %122, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %119, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i64 24, i1 false) #17
  %123 = getelementptr inbounds i8, i8* %119, i64 24
  store i8 0, i8* %123, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %11) #17
  %124 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %136

128:                                              ; preds = %118
  %129 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %129) #18
  br label %136

130:                                              ; preds = %114
  %131 = icmp eq %"class.blink::Element"* %97, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %97, i64 0, i32 0, i32 0
  %134 = call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* %133)
  store i32 %134, i32* %4, align 4
  br label %135

135:                                              ; preds = %130, %132
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %136

136:                                              ; preds = %128, %118, %135
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %57) #17
  br label %137

137:                                              ; preds = %53, %46, %136, %33
  %138 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %139 = bitcast %"class.std::__1::basic_string"* %138 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %145) #18
  br label %146

146:                                              ; preds = %137, %143
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #17
  ret void
}

declare %"class.blink::Element"* @_ZN5blink13ContainerNode13QuerySelectorERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapHashMap.2752"*, align 8
  %4 = alloca %"class.std::__1::unique_ptr.3367", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 14, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = icmp eq %"class.blink::Document"* %6, null
  br i1 %7, label %82, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %10 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %9, align 8
  %11 = tail call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeEPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %1, %"class.blink::HeapHashMap.2752"* %10)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %82

13:                                               ; preds = %8, %32
  %14 = phi %"class.blink::Node"* [ %33, %32 ], [ %1, %8 ]
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 0, i32 0
  %22 = icmp eq %"class.blink::Node"* %21, %14
  br i1 %22, label %23, label %27

23:                                               ; preds = %16
  %24 = bitcast %"class.blink::Node"* %14 to %"class.blink::Document"*
  %25 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* nonnull %24) #17
  %26 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %32

27:                                               ; preds = %16, %13
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 2, i32 0, i32 0
  %29 = bitcast %"class.blink::Node"** %28 to %"class.blink::ContainerNode"**
  %30 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %30, i64 0, i32 0
  br label %32

32:                                               ; preds = %23, %27
  %33 = phi %"class.blink::Node"* [ %31, %27 ], [ %26, %23 ]
  %34 = icmp eq %"class.blink::Node"* %33, null
  br i1 %34, label %35, label %13

35:                                               ; preds = %32
  %36 = bitcast %"class.blink::HeapHashMap.2752"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  store %"class.blink::HeapHashMap.2752"* inttoptr (i64 -6148914691236517206 to %"class.blink::HeapHashMap.2752"*), %"class.blink::HeapHashMap.2752"** %3, align 8
  %37 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEEPhm(i64 24) #17
  %38 = bitcast i8* %37 to %"class.blink::HeapHashMap.2752"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 20, i1 false) #17
  %39 = getelementptr inbounds i8, i8* %37, i64 -4
  %40 = bitcast i8* %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = or i16 %41, 1
  store atomic i16 %42, i16* %40 release, align 2
  %43 = bitcast %"class.blink::HeapHashMap.2752"** %3 to i8**
  store i8* %37, i8** %43, align 8
  %44 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 6, i32 0
  %45 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %64, label %50, !prof !2

50:                                               ; preds = %35
  %51 = ptrtoint i8* %37 to i64
  %52 = getelementptr inbounds %"class.WTF::Vector.2756", %"class.WTF::Vector.2756"* %44, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::Member.2750"*, %"class.blink::Member.2750"** %52, align 8
  %54 = zext i32 %46 to i64
  %55 = getelementptr inbounds %"class.blink::Member.2750", %"class.blink::Member.2750"* %53, i64 %54
  %56 = bitcast %"class.blink::Member.2750"* %55 to i64*
  store atomic i64 %51, i64* %56 monotonic, align 8
  %57 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %50
  %60 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #17
  br label %61

61:                                               ; preds = %59, %50
  %62 = load i32, i32* %45, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %45, align 4
  br label %65

64:                                               ; preds = %35
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashMapINS2_INS1_4NodeEEEiNS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS8_IiEEEEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPSB_EEvOT_(%"class.WTF::Vector.2756"* %44, %"class.blink::HeapHashMap.2752"** nonnull dereferenceable(8) %3) #17
  br label %65

65:                                               ; preds = %61, %64
  %66 = call i8* @_Znwm(i64 24) #18
  %67 = bitcast i8* %66 to %"class.std::__1::vector.3379"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 24, i1 false) #17
  %68 = bitcast %"class.std::__1::unique_ptr.3367"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #17
  %69 = call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %14, i32 0, i1 zeroext false, %"class.blink::HeapHashMap.2752"* %38, %"class.std::__1::vector.3379"* null)
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::protocol::DOM::Node"* %69, %"class.blink::protocol::DOM::Node"** %70, align 8
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3DOM4NodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3379"* nonnull %67, %"class.std::__1::unique_ptr.3367"* nonnull dereferenceable(8) %4) #17
  %71 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %70, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %70, align 8
  %72 = icmp eq %"class.blink::protocol::DOM::Node"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.blink::protocol::DOM::Node"* %71 to void (%"class.blink::protocol::DOM::Node"*)***
  %75 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %75, i64 2
  %77 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %76, align 8
  call void %77(%"class.blink::protocol::DOM::Node"* nonnull %71) #17
  br label %78

78:                                               ; preds = %65, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #17
  %79 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %80 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %79, align 8
  call void @_ZN5blink8protocol3DOM8Frontend13setChildNodesEiNSt3__110unique_ptrINS3_6vectorINS4_INS1_4NodeENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.blink::protocol::DOM::Frontend"* %80, i32 0, %"class.std::__1::vector.3379"* nonnull %67) #17
  %81 = call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeEPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %1, %"class.blink::HeapHashMap.2752"* %38)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  br label %82

82:                                               ; preds = %2, %78, %8
  %83 = phi i32 [ 0, %2 ], [ %81, %78 ], [ %11, %8 ]
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i64* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 3
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = bitcast %"class.v8::Isolate"* %14 to %"class.v8::internal::Isolate"*
  %16 = load i64, i64* %10, align 8
  %17 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %15, i64 %16) #17
  %18 = tail call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %14) #17
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast i64* %17 to %"class.v8::Value"*
  %21 = tail call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %14, %"class.v8::Value"* %20) #17
  br label %22

22:                                               ; preds = %19, %12, %8
  %23 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #17
  br label %39

39:                                               ; preds = %22, %35, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent13querySelectorEiRKN3WTF6StringEPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32* nocapture) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %7 = bitcast i8* %6 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent13querySelectorEiRKN3WTF6StringEPi(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %7, i32 %2, %"class.WTF::String"* dereferenceable(8) %3, i32* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent16querySelectorAllEiRKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIiNS5_9allocatorIiEEEENS5_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.std::__1::unique_ptr.3450"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13)
  %14 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* %1, i32 %2) #17, !noalias !39
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %16, label %28

16:                                               ; preds = %5
  %17 = tail call i8* @_Znwm(i64 48) #18
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8, !noalias !39
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast i64* %19 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %20, align 8, !noalias !39
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %17, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i64 33, i1 false) #17
  %21 = getelementptr inbounds i8, i8* %17, i64 33
  store i8 0, i8* %21, align 1, !noalias !39
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.std::__1::basic_string"* nonnull %6) #17
  %22 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1, !noalias !39
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %16
  %27 = load i8*, i8** %18, align 8, !noalias !39
  call void @_ZdlPv(i8* %27) #18
  br label %29

28:                                               ; preds = %5
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %7) #17
  br label %29

29:                                               ; preds = %16, %26, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13)
  %30 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %31, i32* %34, align 8
  %35 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #17
  br label %234

39:                                               ; preds = %29
  br i1 %15, label %46, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = bitcast %"class.blink::Node"* %14 to %"class.blink::ContainerNode"*
  br i1 %44, label %46, label %56

46:                                               ; preds = %40, %39
  %47 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  store i8 20, i8* %48, align 1
  %49 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %49, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0), i64 20, i1 false) #17
  %50 = getelementptr inbounds i8, i8* %49, i64 20
  store i8 0, i8* %50, align 4
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %8) #17
  %51 = load i8, i8* %48, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %234

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #18
  br label %234

56:                                               ; preds = %40
  %57 = bitcast %"class.blink::DummyExceptionStateForTesting"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %57) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 56, i1 false)
  %58 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %59, align 8
  %60 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %60, align 2
  %61 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 2
  %62 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %63 = bitcast %"class.WTF::StringImpl"** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #17
  %64 = bitcast i8** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 36, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %65 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #17
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %92, label %69

69:                                               ; preds = %56
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 acquire, align 4
  %72 = and i32 %71, 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %90, label %74

74:                                               ; preds = %69
  %75 = load atomic i32, i32* %70 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %92

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #17
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %78
  call void @llvm.trap() #17
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  br label %92

90:                                               ; preds = %69
  %91 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %67) #17
  br label %92

92:                                               ; preds = %56, %74, %88, %90
  %93 = phi %"class.WTF::StringImpl"* [ %91, %90 ], [ %67, %74 ], [ %67, %88 ], [ null, %56 ]
  %94 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %95 = bitcast %"class.WTF::AtomicString"* %10 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0
  %97 = call %"class.blink::StaticNodeTypeList"* @_ZN5blink13ContainerNode16QuerySelectorAllERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::ContainerNode"* nonnull %45, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %96) #17
  %98 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %92
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #17
  br label %114

114:                                              ; preds = %92, %110, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #17
  %115 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 4
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %130, label %118

118:                                              ; preds = %114
  %119 = call i8* @_Znwm(i64 32) #18
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %119, i8** %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = bitcast i64* %121 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %122, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %119, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i64 24, i1 false) #17
  %123 = getelementptr inbounds i8, i8* %119, i64 24
  store i8 0, i8* %123, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %11) #17
  %124 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %233

128:                                              ; preds = %118
  %129 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %129) #18
  br label %233

130:                                              ; preds = %114
  %131 = call i8* @_Znwm(i64 24) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 0, i64 24, i1 false) #17
  %132 = ptrtoint i8* %131 to i64
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.3450", %"class.std::__1::unique_ptr.3450"* %4, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.std::__1::vector.2926"*, %"class.std::__1::vector.2926"** %133, align 8
  %135 = bitcast %"class.std::__1::unique_ptr.3450"* %4 to i64*
  store i64 %132, i64* %135, align 8
  %136 = icmp eq %"class.std::__1::vector.2926"* %134, null
  br i1 %136, label %148, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %134, i64 0, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = icmp eq i32* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %137
  %142 = ptrtoint i32* %139 to i64
  %143 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %134, i64 0, i32 0, i32 1
  %144 = bitcast i32** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = bitcast i32* %139 to i8*
  call void @_ZdlPv(i8* %145) #18
  br label %146

146:                                              ; preds = %141, %137
  %147 = bitcast %"class.std::__1::vector.2926"* %134 to i8*
  call void @_ZdlPv(i8* %147) #18
  br label %148

148:                                              ; preds = %146, %130
  %149 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %97, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %97, i64 0, i32 1, i32 0
  br label %155

154:                                              ; preds = %229, %148
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %233

155:                                              ; preds = %152, %229
  %156 = phi i32 [ 0, %152 ], [ %230, %229 ]
  %157 = load %"class.std::__1::vector.2926"*, %"class.std::__1::vector.2926"** %133, align 8
  %158 = call dereferenceable(8) %"class.blink::Member.343"* @_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.368"* %153, i32 %156) #17
  %159 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %158, i64 0, i32 0, i32 0
  %160 = load %"class.blink::Element"*, %"class.blink::Element"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %160, i64 0, i32 0, i32 0
  %162 = call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* %161)
  %163 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %157, i64 0, i32 0, i32 1
  %164 = load i32*, i32** %163, align 8
  %165 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %157, i64 0, i32 0, i32 2, i32 0, i32 0
  %166 = load i32*, i32** %165, align 8
  %167 = icmp ult i32* %164, %166
  %168 = ptrtoint i32* %166 to i64
  br i1 %167, label %169, label %173

169:                                              ; preds = %155
  store i32 %162, i32* %164, align 4
  %170 = getelementptr inbounds i32, i32* %164, i64 1
  %171 = ptrtoint i32* %170 to i64
  %172 = bitcast i32** %163 to i64*
  store i64 %171, i64* %172, align 8
  br label %229

173:                                              ; preds = %155
  %174 = ptrtoint i32* %164 to i64
  %175 = bitcast i32** %163 to i64*
  %176 = bitcast %"class.std::__1::vector.2926"* %157 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = sub i64 %174, %177
  %179 = ashr exact i64 %178, 2
  %180 = add nsw i64 %179, 1
  %181 = icmp ugt i64 %180, 4611686018427387903
  br i1 %181, label %182, label %184

182:                                              ; preds = %173
  %183 = bitcast %"class.std::__1::vector.2926"* %157 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %183) #19
  unreachable

184:                                              ; preds = %173
  %185 = bitcast i32** %165 to i64*
  %186 = sub i64 %168, %177
  %187 = ashr exact i64 %186, 2
  %188 = icmp ult i64 %187, 2305843009213693951
  br i1 %188, label %189, label %197

189:                                              ; preds = %184
  %190 = ashr exact i64 %186, 1
  %191 = icmp ult i64 %190, %180
  %192 = select i1 %191, i64 %180, i64 %190
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %202, label %194

194:                                              ; preds = %189
  %195 = icmp ugt i64 %192, 4611686018427387903
  br i1 %195, label %196, label %197

196:                                              ; preds = %194
  call void @abort() #19
  unreachable

197:                                              ; preds = %194, %184
  %198 = phi i64 [ %192, %194 ], [ 4611686018427387903, %184 ]
  %199 = shl i64 %198, 2
  %200 = call i8* @_Znwm(i64 %199) #18
  %201 = bitcast i8* %200 to i32*
  br label %202

202:                                              ; preds = %197, %189
  %203 = phi i64 [ %198, %197 ], [ 0, %189 ]
  %204 = phi i32* [ %201, %197 ], [ null, %189 ]
  %205 = getelementptr inbounds i32, i32* %204, i64 %179
  %206 = getelementptr inbounds i32, i32* %204, i64 %203
  %207 = ptrtoint i32* %206 to i64
  store i32 %162, i32* %205, align 4
  %208 = getelementptr inbounds i32, i32* %205, i64 1
  %209 = ptrtoint i32* %208 to i64
  %210 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %157, i64 0, i32 0, i32 0
  %211 = load i32*, i32** %210, align 8
  %212 = load i64, i64* %175, align 8
  %213 = ptrtoint i32* %211 to i64
  %214 = sub i64 %212, %213
  %215 = ashr exact i64 %214, 2
  %216 = sub nsw i64 0, %215
  %217 = getelementptr inbounds i32, i32* %205, i64 %216
  %218 = ptrtoint i32* %217 to i64
  %219 = icmp sgt i64 %214, 0
  br i1 %219, label %220, label %224

220:                                              ; preds = %202
  %221 = bitcast i32* %217 to i8*
  %222 = bitcast i32* %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %221, i8* align 4 %222, i64 %214, i1 false) #17
  %223 = load i32*, i32** %210, align 8
  br label %224

224:                                              ; preds = %220, %202
  %225 = phi i32* [ %211, %202 ], [ %223, %220 ]
  store i64 %218, i64* %176, align 8
  store i64 %209, i64* %175, align 8
  store i64 %207, i64* %185, align 8
  %226 = icmp eq i32* %225, null
  br i1 %226, label %229, label %227

227:                                              ; preds = %224
  %228 = bitcast i32* %225 to i8*
  call void @_ZdlPv(i8* %228) #18
  br label %229

229:                                              ; preds = %169, %224, %227
  %230 = add nuw i32 %156, 1
  %231 = load i32, i32* %149, align 4
  %232 = icmp ult i32 %230, %231
  br i1 %232, label %155, label %154

233:                                              ; preds = %128, %118, %154
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %57) #17
  br label %234

234:                                              ; preds = %53, %46, %233, %33
  %235 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %236 = bitcast %"class.std::__1::basic_string"* %235 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %237 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %236, i64 0, i32 1, i32 0
  %238 = load i8, i8* %237, align 1
  %239 = icmp slt i8 %238, 0
  br i1 %239, label %240, label %243

240:                                              ; preds = %234
  %241 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load i8*, i8** %241, align 8
  call void @_ZdlPv(i8* %242) #18
  br label %243

243:                                              ; preds = %234, %240
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #17
  ret void
}

declare %"class.blink::StaticNodeTypeList"* @_ZN5blink13ContainerNode16QuerySelectorAllERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent16querySelectorAllEiRKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIiNS5_9allocatorIiEEEENS5_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.std::__1::unique_ptr.3450"* nocapture) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %7 = bitcast i8* %6 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent16querySelectorAllEiRKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIiNS5_9allocatorIiEEEENS5_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %7, i32 %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.std::__1::unique_ptr.3450"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent15InnerParentNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %7, i64 0, i32 0, i32 0
  %9 = icmp eq %"class.blink::Node"* %8, %0
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::Node"* %0 to %"class.blink::Document"*
  %12 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* nonnull %11) #17
  %13 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %19

14:                                               ; preds = %3, %1
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.blink::Node"** %15 to %"class.blink::ContainerNode"**
  %17 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %17, i64 0, i32 0
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi %"class.blink::Node"* [ %18, %14 ], [ %13, %10 ]
  ret %"class.blink::Node"* %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.318"* @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3338"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.56, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %24, i64 %25
  ret %"class.blink::Member.318"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17InspectorDOMAgent11BoundNodeIdEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  store %"class.blink::Node"* %1, %"class.blink::Node"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %5, i64 0, i32 0
  %7 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %6, %"class.blink::Node"** nonnull dereferenceable(8) %3)
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent17setAttributeValueEiRKN3WTF6StringES4_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::Element"*, align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = bitcast %"class.blink::Element"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  store %"class.blink::Element"* null, %"class.blink::Element"** %6, align 8
  %9 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent21AssertEditableElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.blink::InspectorDOMAgent"* %1, i32 %2, %"class.blink::Element"** nonnull dereferenceable(8) %6)
  %10 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %19, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %11, i32* %14, align 8
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #17
  br label %31

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 18, i32 0, i32 0
  %21 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %20, align 8
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8
  call void @_ZN5blink9DOMEditor12SetAttributeEPNS_7ElementERKN3WTF6StringES6_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::DOMEditor"* %21, %"class.blink::Element"* %22, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4) #17
  %23 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #18
  br label %31

31:                                               ; preds = %13, %19, %28
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  ret void
}

declare void @_ZN5blink9DOMEditor12SetAttributeEPNS_7ElementERKN3WTF6StringES6_(%"class.crdtp::DispatchResponse"* sret, %"class.blink::DOMEditor"*, %"class.blink::Element"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent17setAttributeValueEiRKN3WTF6StringES4_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::Element"*, align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %9 = bitcast i8* %8 to %"class.blink::InspectorDOMAgent"*
  %10 = bitcast %"class.blink::Element"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17, !noalias !42
  store %"class.blink::Element"* null, %"class.blink::Element"** %6, align 8, !noalias !42
  %11 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #17, !noalias !42
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false) #17, !noalias !42
  call void @_ZN5blink17InspectorDOMAgent21AssertEditableElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.blink::InspectorDOMAgent"* %9, i32 %2, %"class.blink::Element"** nonnull dereferenceable(8) %6) #17, !noalias !42
  %12 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %13 = load i32, i32* %12, align 8, !noalias !42
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %21, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %13, i32* %16, align 8, !alias.scope !42
  %17 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #17, !noalias !42
  br label %34

21:                                               ; preds = %5
  %22 = getelementptr inbounds i8, i8* %8, i64 328
  %23 = bitcast i8* %22 to %"class.blink::DOMEditor"**
  %24 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %23, align 8, !noalias !42
  %25 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8, !noalias !42
  call void @_ZN5blink9DOMEditor12SetAttributeEPNS_7ElementERKN3WTF6StringES6_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::DOMEditor"* %24, %"class.blink::Element"* %25, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4) #17
  %26 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1, !noalias !42
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8, !noalias !42
  call void @_ZdlPv(i8* %33) #18
  br label %34

34:                                               ; preds = %15, %21, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #17, !noalias !42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17, !noalias !42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent19setAttributesAsTextEiRKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe.3366"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::Element"*, align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend.3475", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.crdtp::DispatchResponse", align 8
  %16 = bitcast %"class.blink::Element"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  store %"class.blink::Element"* null, %"class.blink::Element"** %6, align 8
  %17 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent21AssertEditableElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.blink::InspectorDOMAgent"* %1, i32 %2, %"class.blink::Element"** nonnull dereferenceable(8) %6)
  %18 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %27, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %19, i32* %22, align 8
  %23 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #17
  br label %498

27:                                               ; preds = %5
  %28 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %29, align 8
  %30 = bitcast %"class.WTF::StringAppend.3475"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #17
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %109, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %51

41:                                               ; preds = %34
  %42 = zext i32 %40 to i33
  %43 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #17
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !2

48:                                               ; preds = %41
  call void @llvm.trap() #17
  unreachable

49:                                               ; preds = %41
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %39, align 4
  br label %51

51:                                               ; preds = %49, %34
  %52 = phi i32 [ %50, %49 ], [ %40, %34 ]
  %53 = load atomic i32, i32* %35 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %66

56:                                               ; preds = %51
  %57 = zext i32 %52 to i33
  %58 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #17
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !2

63:                                               ; preds = %56
  call void @llvm.trap() #17
  unreachable

64:                                               ; preds = %56
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %39, align 4
  br label %66

66:                                               ; preds = %64, %51
  %67 = phi i32 [ %65, %64 ], [ %52, %51 ]
  %68 = load atomic i32, i32* %35 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %66
  %72 = add i32 %67, -1
  store i32 %72, i32* %39, align 4
  br label %73

73:                                               ; preds = %71, %66
  %74 = phi i32 [ %72, %71 ], [ %67, %66 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #17
  br label %77

77:                                               ; preds = %73, %76
  %78 = load atomic i32, i32* %35 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %92

81:                                               ; preds = %77
  %82 = load i32, i32* %39, align 4
  %83 = zext i32 %82 to i33
  %84 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #17
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !2

89:                                               ; preds = %81
  call void @llvm.trap() #17
  unreachable

90:                                               ; preds = %81
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %39, align 4
  br label %92

92:                                               ; preds = %77, %90
  %93 = bitcast %"class.WTF::StringAppend.3475"* %9 to i64*
  store i64 ptrtoint ([7 x i8]* @.str.21 to i64), i64* %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %94, align 8
  %95 = load atomic i32, i32* %35 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %113

98:                                               ; preds = %92
  %99 = load i32, i32* %39, align 4
  %100 = zext i32 %99 to i33
  %101 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #17
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !2

106:                                              ; preds = %98
  call void @llvm.trap() #17
  unreachable

107:                                              ; preds = %98
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %39, align 4
  br label %113

109:                                              ; preds = %27
  %110 = bitcast %"class.WTF::StringAppend.3475"* %9 to i64*
  store i64 ptrtoint ([7 x i8]* @.str.21 to i64), i64* %110, align 8
  %111 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %112 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0), i8** %112, align 8
  br label %125

113:                                              ; preds = %107, %92
  %114 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0), i8** %114, align 8
  %115 = load atomic i32, i32* %35 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = load i32, i32* %39, align 4
  br i1 %117, label %119, label %121

119:                                              ; preds = %113
  %120 = add i32 %118, -1
  store i32 %120, i32* %39, align 4
  br label %121

121:                                              ; preds = %119, %113
  %122 = phi i32 [ %120, %119 ], [ %118, %113 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #17
  br label %125

125:                                              ; preds = %109, %121, %124
  %126 = phi %"class.WTF::StringImpl"** [ %111, %109 ], [ %94, %121 ], [ %94, %124 ]
  %127 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.3475"* nonnull %9)
  store %"class.WTF::StringImpl"* %127, %"class.WTF::StringImpl"** %29, align 8
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #17
  br label %143

143:                                              ; preds = %125, %139, %142
  br i1 %33, label %157, label %144

144:                                              ; preds = %143
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #17
  br label %157

157:                                              ; preds = %143, %153, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #17
  %158 = bitcast %"class.blink::Element"** %6 to %"class.blink::Node"**
  %159 = load %"class.blink::Node"*, %"class.blink::Node"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %159, i64 0, i32 3, i32 0, i32 0
  %161 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %161, i64 0, i32 2, i32 0, i32 0
  %163 = load %"class.blink::Document"*, %"class.blink::Document"** %162, align 8
  %164 = call %"class.blink::DocumentFragment"* @_ZN5blink8Document22createDocumentFragmentEv(%"class.blink::Document"* %163) #17
  %165 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %160, align 8
  %166 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %165, i64 0, i32 2, i32 0, i32 0
  %167 = load %"class.blink::Document"*, %"class.blink::Document"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %167, i64 0, i32 107
  %169 = load i8, i8* %168, align 8
  %170 = and i8 %169, 1
  %171 = icmp eq i8 %170, 0
  %172 = bitcast %"class.blink::Node"* %159 to %"class.blink::Element"*
  br i1 %171, label %187, label %173

173:                                              ; preds = %157
  %174 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %159, i64 0, i32 1
  %175 = load i32, i32* %174, align 8
  %176 = and i32 %175, 48
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %187

178:                                              ; preds = %173
  %179 = call %"class.blink::HTMLElement"* @_ZNK5blink8Document4bodyEv(%"class.blink::Document"* %167) #17
  %180 = icmp eq %"class.blink::HTMLElement"* %179, null
  br i1 %180, label %187, label %181

181:                                              ; preds = %178
  %182 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %160, align 8
  %183 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %182, i64 0, i32 2, i32 0, i32 0
  %184 = load %"class.blink::Document"*, %"class.blink::Document"** %183, align 8
  %185 = call %"class.blink::HTMLElement"* @_ZNK5blink8Document4bodyEv(%"class.blink::Document"* %184) #17
  %186 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %185, i64 0, i32 0
  call void @_ZN5blink16DocumentFragment9ParseHTMLERKN3WTF6StringEPNS_7ElementENS_19ParserContentPolicyE(%"class.blink::DocumentFragment"* %164, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::Element"* %186, i32 1) #17
  br label %202

187:                                              ; preds = %157, %178, %173
  %188 = phi i1 [ true, %178 ], [ false, %173 ], [ false, %157 ]
  %189 = icmp eq %"class.blink::Node"* %159, null
  br i1 %189, label %199, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %159, i64 0, i32 1
  %192 = load i32, i32* %191, align 8
  %193 = and i32 %192, 48
  %194 = icmp eq i32 %193, 32
  br i1 %194, label %195, label %199

195:                                              ; preds = %190
  %196 = bitcast %"class.blink::Node"* %159 to %"class.blink::SVGElement"*
  %197 = call %"class.blink::SVGSVGElement"* @_ZNK5blink10SVGElement15ownerSVGElementEv(%"class.blink::SVGElement"* nonnull %196) #17
  %198 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %197, i64 0, i32 0, i32 0, i32 0
  br label %199

199:                                              ; preds = %190, %187, %195
  %200 = phi %"class.blink::Element"* [ %198, %195 ], [ null, %190 ], [ null, %187 ]
  %201 = call zeroext i1 @_ZN5blink16DocumentFragment8ParseXMLERKN3WTF6StringEPNS_7ElementENS_19ParserContentPolicyE(%"class.blink::DocumentFragment"* %164, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::Element"* %200, i32 1) #17
  br label %202

202:                                              ; preds = %199, %181
  %203 = phi i1 [ %188, %199 ], [ true, %181 ]
  %204 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %164, i64 0, i32 0, i32 1, i32 0, i32 0
  %205 = load %"class.blink::Node"*, %"class.blink::Node"** %204, align 8
  %206 = icmp eq %"class.blink::Node"* %205, null
  br i1 %206, label %213, label %207

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %205, i64 0, i32 1
  %209 = load i32, i32* %208, align 8
  %210 = and i32 %209, 12
  %211 = icmp eq i32 %210, 0
  %212 = bitcast %"class.blink::Node"* %205 to %"class.blink::Element"*
  br i1 %211, label %225, label %213

213:                                              ; preds = %207, %202
  %214 = call i8* @_Znwm(i64 48) #18
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %214, i8** %215, align 8
  %216 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %217 = bitcast i64* %216 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %217, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %214, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.23, i64 0, i64 0), i64 35, i1 false) #17
  %218 = getelementptr inbounds i8, i8* %214, i64 35
  store i8 0, i8* %218, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %10) #17
  %219 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %220 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %219, i64 0, i32 1, i32 0
  %221 = load i8, i8* %220, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %223, label %473

223:                                              ; preds = %213
  %224 = load i8*, i8** %215, align 8
  call void @_ZdlPv(i8* %224) #18
  br label %473

225:                                              ; preds = %207
  %226 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226) #17
  %227 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %227, align 8
  br i1 %203, label %272, label %228

228:                                              ; preds = %225
  %229 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i64 0) #17
  %230 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366"* %4, i64 0, i32 0
  %231 = load i8, i8* %230, align 8, !range !3
  %232 = icmp eq i8 %231, 0
  %233 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366"* %4, i64 0, i32 1
  %234 = select i1 %232, %"class.WTF::String"* %13, %"class.WTF::String"* %233
  %235 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %234, i64 0, i32 0, i32 0
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  store %"class.WTF::StringImpl"* %236, %"class.WTF::StringImpl"** %227, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %255, label %238

238:                                              ; preds = %228
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load atomic i32, i32* %239 monotonic, align 4
  %241 = and i32 %240, 2
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %255

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  %246 = zext i32 %245 to i33
  %247 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %246, i33 1) #17
  %248 = extractvalue { i33, i1 } %247, 1
  %249 = extractvalue { i33, i1 } %247, 0
  %250 = icmp slt i33 %249, 0
  %251 = or i1 %248, %250
  br i1 %251, label %252, label %253, !prof !2

252:                                              ; preds = %243
  call void @llvm.trap() #17
  unreachable

253:                                              ; preds = %243
  %254 = trunc i33 %249 to i32
  store i32 %254, i32* %244, align 4
  br label %255

255:                                              ; preds = %228, %238, %253
  %256 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %258, label %296, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  br i1 %263, label %266, label %268

266:                                              ; preds = %259
  %267 = add i32 %265, -1
  store i32 %267, i32* %264, align 4
  br label %268

268:                                              ; preds = %266, %259
  %269 = phi i32 [ %267, %266 ], [ %265, %259 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %296

271:                                              ; preds = %268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %257) #17
  br label %296

272:                                              ; preds = %225
  %273 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %273) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i64 0) #17
  %274 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366"* %4, i64 0, i32 0
  %275 = load i8, i8* %274, align 8, !range !3
  %276 = icmp eq i8 %275, 0
  %277 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366"* %4, i64 0, i32 1
  %278 = select i1 %276, %"class.WTF::String"* %12, %"class.WTF::String"* %277
  %279 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"* %278) #17
  store %"class.WTF::StringImpl"* %279, %"class.WTF::StringImpl"** %227, align 8
  %280 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %272
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #17
  br label %296

296:                                              ; preds = %295, %292, %272, %255, %268, %271
  %297 = phi i8* [ %229, %271 ], [ %229, %268 ], [ %229, %255 ], [ %273, %272 ], [ %273, %292 ], [ %273, %295 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %297) #17
  %298 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %205, i64 1, i32 3
  %299 = bitcast %"class.blink::Member.320"* %298 to %"class.blink::ElementData"**
  %300 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %299, align 8
  %301 = icmp eq %"class.blink::ElementData"* %300, null
  br i1 %301, label %329, label %302

302:                                              ; preds = %296
  call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* nonnull %212) #17
  %303 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %299, align 8
  %304 = icmp eq %"class.blink::ElementData"* %303, null
  br i1 %304, label %305, label %307

305:                                              ; preds = %302
  %306 = load i32, i32* null, align 536870912
  br label %319

307:                                              ; preds = %302
  %308 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %303, i64 0, i32 0, i32 0, i32 0
  %309 = load i32, i32* %308, align 4
  %310 = and i32 %309, 1
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %319, label %312

312:                                              ; preds = %307
  %313 = bitcast %"class.blink::ElementData"* %303 to %"class.blink::UniqueElementData"*
  %314 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %303, i64 1, i32 1
  %315 = bitcast %"class.blink::Member.354"* %314 to %"class.blink::Attribute"**
  %316 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %315, align 8
  %317 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %313, i64 0, i32 2, i32 0, i32 0, i32 2
  %318 = load i32, i32* %317, align 4
  br label %325

319:                                              ; preds = %307, %305
  %320 = phi i32 [ %306, %305 ], [ %309, %307 ]
  %321 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %303, i64 1
  %322 = bitcast %"class.blink::ElementData"* %321 to %"class.blink::Attribute"*
  %323 = lshr i32 %320, 1
  %324 = and i32 %323, 268435455
  br label %325

325:                                              ; preds = %312, %319
  %326 = phi i32 [ %324, %319 ], [ %318, %312 ]
  %327 = phi %"class.blink::Attribute"* [ %322, %319 ], [ %316, %312 ]
  %328 = icmp eq i32 %326, 0
  br i1 %328, label %329, label %336

329:                                              ; preds = %296, %325
  %330 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366"* %4, i64 0, i32 0
  %331 = load i8, i8* %330, align 8, !range !3
  %332 = icmp eq i8 %331, 0
  br i1 %332, label %427, label %333

333:                                              ; preds = %329
  %334 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 18, i32 0, i32 0
  %335 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %334, align 8
  call void @_ZN5blink9DOMEditor15RemoveAttributeEPNS_7ElementERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::DOMEditor"* %335, %"class.blink::Element"* %172, %"class.WTF::String"* nonnull dereferenceable(8) %11) #17
  br label %456

336:                                              ; preds = %325
  %337 = zext i32 %326 to i64
  %338 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %327, i64 %337
  %339 = bitcast %"class.WTF::String"* %14 to i8*
  %340 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %341 = bitcast %"class.WTF::String"* %14 to i64*
  %342 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366"* %4, i64 0, i32 0
  %343 = bitcast %"class.crdtp::DispatchResponse"* %15 to i8*
  %344 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 18, i32 0, i32 0
  %345 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %15, i64 0, i32 0
  %346 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %347 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %15, i64 0, i32 1
  %348 = bitcast %"class.std::__1::basic_string"* %346 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %349 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %348, i64 0, i32 1, i32 0
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %346, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %351 = bitcast %"class.std::__1::basic_string"* %346 to i8*
  %352 = bitcast %"class.std::__1::basic_string"* %347 to i8*
  %353 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %354 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %355 = bitcast %"class.std::__1::basic_string"* %354 to i8*
  br label %358

356:                                              ; preds = %421
  %357 = icmp eq %"class.blink::Attribute"* %423, %338
  br i1 %357, label %424, label %358

358:                                              ; preds = %336, %356
  %359 = phi %"class.blink::Attribute"* [ %327, %336 ], [ %423, %356 ]
  %360 = phi i8 [ 0, %336 ], [ %391, %356 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %339) #17
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %340, align 8
  %361 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %359, i64 0, i32 0
  %362 = call %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"* %361) #17
  store %"class.WTF::StringImpl"* %362, %"class.WTF::StringImpl"** %340, align 8
  br i1 %203, label %363, label %381

363:                                              ; preds = %358
  %364 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"* nonnull %14) #17
  %365 = ptrtoint %"class.WTF::StringImpl"* %364 to i64
  %366 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %340, align 8
  store i64 %365, i64* %341, align 8
  %367 = icmp eq %"class.WTF::StringImpl"* %366, null
  br i1 %367, label %381, label %368

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %366, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = load atomic i32, i32* %369 monotonic, align 4
  %371 = and i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %366, i64 0, i32 0
  %374 = load i32, i32* %373, align 4
  br i1 %372, label %375, label %377

375:                                              ; preds = %368
  %376 = add i32 %374, -1
  store i32 %376, i32* %373, align 4
  br label %377

377:                                              ; preds = %375, %368
  %378 = phi i32 [ %376, %375 ], [ %374, %368 ]
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %380, label %381

380:                                              ; preds = %377
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %366) #17
  br label %381

381:                                              ; preds = %363, %377, %380, %358
  %382 = load i8, i8* %342, align 8, !range !3
  %383 = icmp eq i8 %382, 0
  br i1 %383, label %388, label %384

384:                                              ; preds = %381
  %385 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %340, align 8
  %386 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %387 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %385, %"class.WTF::StringImpl"* %386) #17
  br label %388

388:                                              ; preds = %381, %384
  %389 = phi i1 [ false, %381 ], [ %387, %384 ]
  %390 = zext i1 %389 to i8
  %391 = or i8 %360, %390
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %343) #17
  %392 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %344, align 8
  %393 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %359, i64 0, i32 1, i32 0
  call void @_ZN5blink9DOMEditor12SetAttributeEPNS_7ElementERKN3WTF6StringES6_(%"class.crdtp::DispatchResponse"* nonnull sret %15, %"class.blink::DOMEditor"* %392, %"class.blink::Element"* %172, %"class.WTF::String"* nonnull dereferenceable(8) %14, %"class.WTF::String"* dereferenceable(8) %393) #17
  %394 = load i32, i32* %345, align 8
  store i32 %394, i32* %18, align 8
  %395 = load i8, i8* %349, align 1
  %396 = icmp slt i8 %395, 0
  br i1 %396, label %397, label %400

397:                                              ; preds = %388
  %398 = load i8*, i8** %350, align 8
  call void @_ZdlPv(i8* %398) #18
  %399 = load i32, i32* %18, align 8
  br label %400

400:                                              ; preds = %397, %388
  %401 = phi i32 [ %399, %397 ], [ %394, %388 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %351, i8* align 8 %352, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %343) #17
  %402 = icmp eq i32 %401, 1
  br i1 %402, label %404, label %403

403:                                              ; preds = %400
  store i32 %401, i32* %353, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %355, i8* align 8 %351, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %351, i8 0, i64 24, i1 false) #17
  br label %404

404:                                              ; preds = %400, %403
  %405 = phi i32 [ 1, %403 ], [ 0, %400 ]
  %406 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %340, align 8
  %407 = icmp eq %"class.WTF::StringImpl"* %406, null
  br i1 %407, label %421, label %408

408:                                              ; preds = %404
  %409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = load atomic i32, i32* %409 monotonic, align 4
  %411 = and i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 0
  %414 = load i32, i32* %413, align 4
  br i1 %412, label %415, label %417

415:                                              ; preds = %408
  %416 = add i32 %414, -1
  store i32 %416, i32* %413, align 4
  br label %417

417:                                              ; preds = %415, %408
  %418 = phi i32 [ %416, %415 ], [ %414, %408 ]
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %421

420:                                              ; preds = %417
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %406) #17
  br label %421

421:                                              ; preds = %404, %417, %420
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %339) #17
  %422 = icmp eq i32 %405, 0
  %423 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %359, i64 1
  br i1 %422, label %356, label %456

424:                                              ; preds = %356
  %425 = and i8 %391, 1
  %426 = icmp eq i8 %425, 0
  br i1 %426, label %427, label %455

427:                                              ; preds = %329, %424
  %428 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366"* %4, i64 0, i32 0
  %429 = load i8, i8* %428, align 8, !range !3
  %430 = icmp eq i8 %429, 0
  br i1 %430, label %455, label %431

431:                                              ; preds = %427
  %432 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366"* %4, i64 0, i32 1
  %433 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %432) #17
  %434 = icmp eq %"class.WTF::StringImpl"* %433, null
  br i1 %434, label %455, label %435

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 1
  %437 = load i32, i32* %436, align 4
  %438 = icmp ne i32 %437, 0
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %440 = load atomic i32, i32* %439 monotonic, align 4
  %441 = and i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 0
  %444 = load i32, i32* %443, align 4
  br i1 %442, label %445, label %447

445:                                              ; preds = %435
  %446 = add i32 %444, -1
  store i32 %446, i32* %443, align 4
  br label %447

447:                                              ; preds = %445, %435
  %448 = phi i32 [ %446, %445 ], [ %444, %435 ]
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %451

450:                                              ; preds = %447
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %433) #17
  br i1 %438, label %452, label %455

451:                                              ; preds = %447
  br i1 %438, label %452, label %455

452:                                              ; preds = %450, %451
  %453 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 18, i32 0, i32 0
  %454 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %453, align 8
  call void @_ZN5blink9DOMEditor15RemoveAttributeEPNS_7ElementERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::DOMEditor"* %454, %"class.blink::Element"* %172, %"class.WTF::String"* nonnull dereferenceable(8) %11) #17
  br label %456

455:                                              ; preds = %427, %424, %431, %450, %451
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %456

456:                                              ; preds = %421, %452, %455, %333
  %457 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %458 = icmp eq %"class.WTF::StringImpl"* %457, null
  br i1 %458, label %472, label %459

459:                                              ; preds = %456
  %460 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %461 = load atomic i32, i32* %460 monotonic, align 4
  %462 = and i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 0
  %465 = load i32, i32* %464, align 4
  br i1 %463, label %466, label %468

466:                                              ; preds = %459
  %467 = add i32 %465, -1
  store i32 %467, i32* %464, align 4
  br label %468

468:                                              ; preds = %466, %459
  %469 = phi i32 [ %467, %466 ], [ %465, %459 ]
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %471, label %472

471:                                              ; preds = %468
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %457) #17
  br label %472

472:                                              ; preds = %456, %468, %471
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #17
  br label %473

473:                                              ; preds = %223, %213, %472
  %474 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %475 = icmp eq %"class.WTF::StringImpl"* %474, null
  br i1 %475, label %489, label %476

476:                                              ; preds = %473
  %477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %474, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %478 = load atomic i32, i32* %477 monotonic, align 4
  %479 = and i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %474, i64 0, i32 0
  %482 = load i32, i32* %481, align 4
  br i1 %480, label %483, label %485

483:                                              ; preds = %476
  %484 = add i32 %482, -1
  store i32 %484, i32* %481, align 4
  br label %485

485:                                              ; preds = %483, %476
  %486 = phi i32 [ %484, %483 ], [ %482, %476 ]
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %489

488:                                              ; preds = %485
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %474) #17
  br label %489

489:                                              ; preds = %488, %485, %473
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  %490 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %491 = bitcast %"class.std::__1::basic_string"* %490 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %492 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %491, i64 0, i32 1, i32 0
  %493 = load i8, i8* %492, align 1
  %494 = icmp slt i8 %493, 0
  br i1 %494, label %495, label %498

495:                                              ; preds = %489
  %496 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %497 = load i8*, i8** %496, align 8
  call void @_ZdlPv(i8* %497) #18
  br label %498

498:                                              ; preds = %21, %489, %495
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.3475"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.4099", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.4099", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.4099"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #17
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4099"* nonnull %3, i8* %8) #17
  %9 = bitcast %"class.WTF::StringTypeAdapter.4099"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #17
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4099"* nonnull %2, i8* %11) #17
  %12 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3475"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #17
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.3475"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #17
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #17
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #17
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #17
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3475"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #17
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.3475"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #17
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #17
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #17
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #17
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare %"class.blink::DocumentFragment"* @_ZN5blink8Document22createDocumentFragmentEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::HTMLElement"* @_ZNK5blink8Document4bodyEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink16DocumentFragment9ParseHTMLERKN3WTF6StringEPNS_7ElementENS_19ParserContentPolicyE(%"class.blink::DocumentFragment"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Element"*, i32) local_unnamed_addr #1

declare %"class.blink::SVGSVGElement"* @_ZNK5blink10SVGElement15ownerSVGElementEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16DocumentFragment8ParseXMLERKN3WTF6StringEPNS_7ElementENS_19ParserContentPolicyE(%"class.blink::DocumentFragment"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Element"*, i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15DeprecatedLowerEv(%"class.WTF::String"*) local_unnamed_addr #1

declare void @_ZN5blink9DOMEditor15RemoveAttributeEPNS_7ElementERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret, %"class.blink::DOMEditor"*, %"class.blink::Element"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent19setAttributesAsTextEiRKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe.3366"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %7 = bitcast i8* %6 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent19setAttributesAsTextEiRKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %7, i32 %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.crdtp::detail::ValueMaybe.3366"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent15removeAttributeEiRKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Element"*, align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = bitcast %"class.blink::Element"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  store %"class.blink::Element"* null, %"class.blink::Element"** %5, align 8
  %8 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent21AssertEditableElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.blink::InspectorDOMAgent"* %1, i32 %2, %"class.blink::Element"** nonnull dereferenceable(8) %5)
  %9 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %18, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #17
  br label %30

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 18, i32 0, i32 0
  %20 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %19, align 8
  %21 = load %"class.blink::Element"*, %"class.blink::Element"** %5, align 8
  call void @_ZN5blink9DOMEditor15RemoveAttributeEPNS_7ElementERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::DOMEditor"* %20, %"class.blink::Element"* %21, %"class.WTF::String"* dereferenceable(8) %3) #17
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %12, %18, %27
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent15removeAttributeEiRKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Element"*, align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %8 = bitcast i8* %7 to %"class.blink::InspectorDOMAgent"*
  %9 = bitcast %"class.blink::Element"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17, !noalias !45
  store %"class.blink::Element"* null, %"class.blink::Element"** %5, align 8, !noalias !45
  %10 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #17, !noalias !45
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false) #17, !noalias !45
  call void @_ZN5blink17InspectorDOMAgent21AssertEditableElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.blink::InspectorDOMAgent"* %8, i32 %2, %"class.blink::Element"** nonnull dereferenceable(8) %5) #17, !noalias !45
  %11 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %12 = load i32, i32* %11, align 8, !noalias !45
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %20, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %12, i32* %15, align 8, !alias.scope !45
  %16 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #17, !noalias !45
  br label %33

20:                                               ; preds = %4
  %21 = getelementptr inbounds i8, i8* %7, i64 328
  %22 = bitcast i8* %21 to %"class.blink::DOMEditor"**
  %23 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %22, align 8, !noalias !45
  %24 = load %"class.blink::Element"*, %"class.blink::Element"** %5, align 8, !noalias !45
  call void @_ZN5blink9DOMEditor15RemoveAttributeEPNS_7ElementERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::DOMEditor"* %23, %"class.blink::Element"* %24, %"class.WTF::String"* dereferenceable(8) %3) #17
  %25 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1, !noalias !45
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8, !noalias !45
  call void @_ZdlPv(i8* %32) #18
  br label %33

33:                                               ; preds = %14, %20, %30
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #17, !noalias !45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17, !noalias !45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent10removeNodeEi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = alloca %"class.crdtp::DispatchResponse", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.blink::Node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %4, align 8
  %8 = bitcast %"class.crdtp::DispatchResponse"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent18AssertEditableNodeEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %5, %"class.blink::InspectorDOMAgent"* %1, i32 %2, %"class.blink::Node"** nonnull dereferenceable(8) %4)
  %9 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %18, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #17
  br label %37

18:                                               ; preds = %3
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %20 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %19) #17
  %21 = icmp eq %"class.blink::ContainerNode"* %20, null
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = call i8* @_Znwm(i64 32) #18
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast i64* %25 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %26, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %23, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.24, i64 0, i64 0), i64 27, i1 false) #17
  %27 = getelementptr inbounds i8, i8* %23, i64 27
  store i8 0, i8* %27, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %6) #17
  %28 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %22
  %33 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %33) #18
  br label %37

34:                                               ; preds = %18
  %35 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 18, i32 0, i32 0
  %36 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %35, align 8
  call void @_ZN5blink9DOMEditor11RemoveChildEPNS_13ContainerNodeEPNS_4NodeE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::DOMEditor"* %36, %"class.blink::ContainerNode"* nonnull %20, %"class.blink::Node"* %19) #17
  br label %37

37:                                               ; preds = %32, %22, %34, %12
  %38 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #18
  br label %46

46:                                               ; preds = %37, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  ret void
}

declare void @_ZN5blink9DOMEditor11RemoveChildEPNS_13ContainerNodeEPNS_4NodeE(%"class.crdtp::DispatchResponse"* sret, %"class.blink::DOMEditor"*, %"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent10removeNodeEi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %5 = bitcast i8* %4 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent10removeNodeEi(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %5, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent11setNodeNameEiRKN3WTF6StringEPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::Element"*, align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.crdtp::DispatchResponse", align 8
  %12 = alloca %"class.crdtp::DispatchResponse", align 8
  store i32 0, i32* %4, align 4
  %13 = bitcast %"class.blink::Element"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  store %"class.blink::Element"* null, %"class.blink::Element"** %6, align 8
  %14 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent13AssertElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.blink::InspectorDOMAgent"* %1, i32 %2, %"class.blink::Element"** nonnull dereferenceable(8) %6)
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %24, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %16, i32* %19, align 8
  %20 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #17
  br label %239

24:                                               ; preds = %5
  %25 = bitcast %"class.blink::DummyExceptionStateForTesting"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %25) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 56, i1 false)
  %26 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %27, align 8
  %28 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 2
  %30 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 5, i32 0, i32 0
  %31 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #17
  %32 = bitcast i8** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 36, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %33 = bitcast %"class.blink::Element"** %6 to %"class.blink::Node"**
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::Document"*, %"class.blink::Document"** %37, align 8
  %39 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #17
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %66, label %43

43:                                               ; preds = %24
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 acquire, align 4
  %46 = and i32 %45, 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %43
  %49 = load atomic i32, i32* %44 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %66

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #17
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  call void @llvm.trap() #17
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %66

64:                                               ; preds = %43
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %41) #17
  br label %66

66:                                               ; preds = %24, %48, %62, %64
  %67 = phi %"class.WTF::StringImpl"* [ %65, %64 ], [ %41, %48 ], [ %41, %62 ], [ null, %24 ]
  %68 = ptrtoint %"class.WTF::StringImpl"* %67 to i64
  %69 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0
  %71 = call %"class.blink::Element"* @_ZN5blink8Document23CreateElementForBindingERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::Document"* %38, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %70) #17
  %72 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #17
  br label %88

88:                                               ; preds = %66, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #17
  %89 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 4
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92

92:                                               ; preds = %88
  call void @_ZN5blink17InspectorDOMAgent10ToResponseERNS_14ExceptionStateE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %70)
  br label %230

93:                                               ; preds = %88
  %94 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8
  call void @_ZN5blink7Element19CloneAttributesFromERKS0_(%"class.blink::Element"* %71, %"class.blink::Element"* dereferenceable(104) %94) #17
  %95 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %94, i64 0, i32 0, i32 1, i32 0, i32 0
  %96 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  %97 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 18, i32 0, i32 0
  %98 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %71, i64 0, i32 0
  %99 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 0
  %100 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %101 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %102 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.std::__1::basic_string"* %100 to i8*
  %106 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  %107 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %94, i64 0, i32 0, i32 0
  br label %108

108:                                              ; preds = %119, %93
  %109 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  %110 = icmp eq %"class.blink::Node"* %109, null
  br i1 %110, label %126, label %111

111:                                              ; preds = %108
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %96) #17
  %112 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %97, align 8
  call void @_ZN5blink9DOMEditor12InsertBeforeEPNS_13ContainerNodeEPNS_4NodeES4_(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.blink::DOMEditor"* %112, %"class.blink::ContainerNode"* %98, %"class.blink::Node"* nonnull %109, %"class.blink::Node"* null) #17
  %113 = load i32, i32* %99, align 8
  store i32 %113, i32* %15, align 8
  %114 = load i8, i8* %103, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %111
  %117 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %117) #18
  %118 = load i32, i32* %15, align 8
  br label %119

119:                                              ; preds = %116, %111
  %120 = phi i32 [ %118, %116 ], [ %113, %111 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %96) #17
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %108, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %120, i32* %123, align 8
  %124 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %125 = bitcast %"class.std::__1::basic_string"* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %105, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #17
  br label %230

126:                                              ; preds = %108
  %127 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %107) #17
  %128 = bitcast %"class.crdtp::DispatchResponse"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %128) #17
  %129 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %97, align 8
  %130 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %71, i64 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %94, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %132 = load %"class.blink::Node"*, %"class.blink::Node"** %131, align 8
  call void @_ZN5blink9DOMEditor12InsertBeforeEPNS_13ContainerNodeEPNS_4NodeES4_(%"class.crdtp::DispatchResponse"* nonnull sret %11, %"class.blink::DOMEditor"* %129, %"class.blink::ContainerNode"* %127, %"class.blink::Node"* %130, %"class.blink::Node"* %132) #17
  %133 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %11, i64 0, i32 0
  %134 = load i32, i32* %133, align 8
  store i32 %134, i32* %15, align 8
  %135 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %11, i64 0, i32 1
  %136 = load i8, i8* %103, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %126
  %139 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %139) #18
  %140 = load i32, i32* %15, align 8
  br label %141

141:                                              ; preds = %138, %126
  %142 = phi i32 [ %140, %138 ], [ %134, %126 ]
  %143 = bitcast %"class.std::__1::basic_string"* %135 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %143, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %128) #17
  %144 = icmp eq i32 %142, 1
  br i1 %144, label %149, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %142, i32* %146, align 8
  %147 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %148 = bitcast %"class.std::__1::basic_string"* %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %105, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #17
  br label %230

149:                                              ; preds = %141
  %150 = bitcast %"class.crdtp::DispatchResponse"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %150) #17
  %151 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %97, align 8
  call void @_ZN5blink9DOMEditor11RemoveChildEPNS_13ContainerNodeEPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %12, %"class.blink::DOMEditor"* %151, %"class.blink::ContainerNode"* %127, %"class.blink::Node"* %107) #17
  %152 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %12, i64 0, i32 0
  %153 = load i32, i32* %152, align 8
  store i32 %153, i32* %15, align 8
  %154 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %12, i64 0, i32 1
  %155 = load i8, i8* %103, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %149
  %158 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %158) #18
  %159 = load i32, i32* %15, align 8
  br label %160

160:                                              ; preds = %157, %149
  %161 = phi i32 [ %159, %157 ], [ %153, %149 ]
  %162 = bitcast %"class.std::__1::basic_string"* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %162, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %150) #17
  %163 = icmp eq i32 %161, 1
  br i1 %163, label %168, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %161, i32* %165, align 8
  %166 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %167 = bitcast %"class.std::__1::basic_string"* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %105, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #17
  br label %230

168:                                              ; preds = %160
  %169 = call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* %130)
  store i32 %169, i32* %4, align 4
  %170 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 10, i32 0, i32 0
  %171 = load i32*, i32** %170, align 8
  %172 = icmp eq i32* %171, null
  br i1 %172, label %229, label %173

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 10, i32 0, i32 1
  %175 = load i32, i32* %174, align 8
  %176 = add i32 %175, -1
  %177 = zext i32 %176 to i64
  %178 = shl i32 %2, 15
  %179 = xor i32 %178, -1
  %180 = add i32 %179, %2
  %181 = lshr i32 %180, 10
  %182 = xor i32 %181, %180
  %183 = mul i32 %182, 9
  %184 = lshr i32 %183, 6
  %185 = xor i32 %184, %183
  %186 = shl i32 %185, 11
  %187 = xor i32 %186, -1
  %188 = add i32 %185, %187
  %189 = lshr i32 %188, 16
  %190 = xor i32 %189, %188
  %191 = and i32 %176, %190
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds i32, i32* %171, i64 %192
  %194 = load i32, i32* %193, align 4
  %195 = icmp eq i32 %194, %2
  br i1 %195, label %225, label %196

196:                                              ; preds = %173
  %197 = xor i32 %190, -1
  %198 = lshr i32 %188, 23
  %199 = add i32 %198, %197
  %200 = shl i32 %199, 12
  %201 = xor i32 %200, %199
  %202 = lshr i32 %201, 7
  %203 = xor i32 %202, %201
  %204 = shl i32 %203, 2
  %205 = xor i32 %204, %203
  %206 = lshr i32 %205, 20
  %207 = xor i32 %206, %205
  %208 = or i32 %207, 1
  %209 = zext i32 %208 to i64
  br label %210

210:                                              ; preds = %215, %196
  %211 = phi i32 [ %194, %196 ], [ %221, %215 ]
  %212 = phi i64 [ %192, %196 ], [ %219, %215 ]
  %213 = phi i64 [ 0, %196 ], [ %217, %215 ]
  %214 = icmp eq i32 %211, 0
  br i1 %214, label %229, label %215

215:                                              ; preds = %210
  %216 = icmp eq i64 %213, 0
  %217 = select i1 %216, i64 %209, i64 %213
  %218 = add i64 %217, %212
  %219 = and i64 %218, %177
  %220 = getelementptr inbounds i32, i32* %171, i64 %219
  %221 = load i32, i32* %220, align 4
  %222 = icmp eq i32 %221, %2
  br i1 %222, label %223, label %210

223:                                              ; preds = %215
  %224 = getelementptr inbounds i32, i32* %171, i64 %219
  br label %225

225:                                              ; preds = %223, %173
  %226 = phi i32* [ %193, %173 ], [ %224, %223 ]
  %227 = icmp eq i32* %226, null
  br i1 %227, label %229, label %228

228:                                              ; preds = %225
  call void @_ZN5blink17InspectorDOMAgent24PushChildNodesToFrontendEiib(%"class.blink::InspectorDOMAgent"* %1, i32 %169, i32 1, i1 zeroext false)
  br label %229

229:                                              ; preds = %210, %225, %168, %228
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %230

230:                                              ; preds = %92, %122, %229, %164, %145
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %25) #17
  %231 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %232 = bitcast %"class.std::__1::basic_string"* %231 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %233 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %232, i64 0, i32 1, i32 0
  %234 = load i8, i8* %233, align 1
  %235 = icmp slt i8 %234, 0
  br i1 %235, label %236, label %239

236:                                              ; preds = %230
  %237 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i8*, i8** %237, align 8
  call void @_ZdlPv(i8* %238) #18
  br label %239

239:                                              ; preds = %18, %230, %236
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  ret void
}

declare %"class.blink::Element"* @_ZN5blink8Document23CreateElementForBindingERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::Document"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink7Element19CloneAttributesFromERKS0_(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1

declare void @_ZN5blink9DOMEditor12InsertBeforeEPNS_13ContainerNodeEPNS_4NodeES4_(%"class.crdtp::DispatchResponse"* sret, %"class.blink::DOMEditor"*, %"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent11setNodeNameEiRKN3WTF6StringEPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32* nocapture) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %7 = bitcast i8* %6 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent11setNodeNameEiRKN3WTF6StringEPi(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %7, i32 %2, %"class.WTF::String"* dereferenceable(8) %3, i32* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent12getOuterHTMLEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEEPS6_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly, %"class.WTF::String"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::Node"*, align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.blink::HeapHashSet.3515", align 8
  %10 = bitcast %"class.blink::Node"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %7, align 8
  %11 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent10AssertNodeERKN5crdtp6detail10ValueMaybeIiEES6_RKNS3_IN3WTF6StringEEERPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorDOMAgent"* %1, %"class.crdtp::detail::ValueMaybe.3365"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe.3365"* dereferenceable(8) %3, %"class.crdtp::detail::ValueMaybe.3366"* dereferenceable(16) %4, %"class.blink::Node"** nonnull dereferenceable(8) %7)
  %12 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %21, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %13, i32* %16, align 8
  %17 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #17
  br label %52

21:                                               ; preds = %6
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %23 = bitcast %"class.blink::HeapHashSet.3515"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 20, i1 false) #17
  %24 = call %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"* %22, i32 0, i32 0, i32 0, %"class.blink::HeapHashSet.3515"* nonnull %9) #17
  %25 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %26 = bitcast %"class.WTF::String"* %5 to i64*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %21, %39, %42
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  %44 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #18
  br label %52

52:                                               ; preds = %15, %43, %49
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"*, i32, i32, i32, %"class.blink::HeapHashSet.3515"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent12getOuterHTMLEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEEPS6_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly, %"class.WTF::String"* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %8 = bitcast i8* %7 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent12getOuterHTMLEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEEPS6_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %8, %"class.crdtp::detail::ValueMaybe.3365"* %2, %"class.crdtp::detail::ValueMaybe.3365"* %3, %"class.crdtp::detail::ValueMaybe.3366"* %4, %"class.WTF::String"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent12setOuterHTMLEiRKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::DOMPatchSupport", align 8
  %6 = alloca %"class.blink::Node"*, align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.blink::Node"*, align 8
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %4
  %13 = bitcast %"class.blink::DOMPatchSupport"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 18, i32 0, i32 0
  %15 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 14, i32 0, i32 0
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  call void @_ZN5blink15DOMPatchSupportC1EPNS_9DOMEditorERNS_8DocumentE(%"class.blink::DOMPatchSupport"* nonnull %5, %"class.blink::DOMEditor"* %15, %"class.blink::Document"* dereferenceable(2848) %17) #17
  call void @_ZN5blink15DOMPatchSupport13PatchDocumentERKN3WTF6StringE(%"class.blink::DOMPatchSupport"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %3) #17
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #17
  br label %167

18:                                               ; preds = %4
  %19 = bitcast %"class.blink::Node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %6, align 8
  %20 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent18AssertEditableNodeEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.blink::InspectorDOMAgent"* %1, i32 %2, %"class.blink::Node"** nonnull dereferenceable(8) %6)
  %21 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %22, i32* %25, align 8
  %26 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %28 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #17
  br label %157

30:                                               ; preds = %18
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %37, i64 0, i32 0, i32 0
  %39 = icmp eq %"class.blink::Node"* %38, %31
  br i1 %39, label %40, label %42

40:                                               ; preds = %33
  %41 = bitcast %"class.blink::Node"* %31 to %"class.blink::Document"*
  br label %44

42:                                               ; preds = %30, %33
  %43 = call %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"* %31) #17
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi %"class.blink::Document"* [ %41, %40 ], [ %43, %42 ]
  %46 = icmp eq %"class.blink::Document"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %45, i64 0, i32 107
  %49 = load i8, i8* %48, align 8
  %50 = and i8 %49, 65
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47, %44
  %53 = call i8* @_Znwm(i64 32) #18
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %53, i8** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast i64* %55 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %56, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %53, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0), i64 24, i1 false) #17
  %57 = getelementptr inbounds i8, i8* %53, i64 24
  store i8 0, i8* %57, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %8) #17
  %58 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %157

62:                                               ; preds = %52
  %63 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %63) #18
  br label %157

64:                                               ; preds = %47
  %65 = bitcast %"class.blink::Node"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %9, align 8
  %66 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #17
  %67 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 18, i32 0, i32 0
  %68 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %67, align 8
  call void @_ZN5blink9DOMEditor12SetOuterHTMLEPNS_4NodeERKN3WTF6StringEPS2_(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.blink::DOMEditor"* %68, %"class.blink::Node"* %31, %"class.WTF::String"* dereferenceable(8) %3, %"class.blink::Node"** nonnull %9) #17
  %69 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 0
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %21, align 8
  %71 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %72 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %73 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %64
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #18
  %80 = load i32, i32* %21, align 8
  br label %81

81:                                               ; preds = %77, %64
  %82 = phi i32 [ %80, %77 ], [ %70, %64 ]
  %83 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  %84 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #17
  %85 = icmp eq i32 %82, 1
  br i1 %85, label %90, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %82, i32* %87, align 8
  %88 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %89 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %83, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #17
  br label %156

90:                                               ; preds = %81
  %91 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %92 = icmp eq %"class.blink::Node"* %91, null
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %156

94:                                               ; preds = %90
  %95 = call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* nonnull %91)
  %96 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 10, i32 0, i32 0
  %97 = load i32*, i32** %96, align 8
  %98 = icmp eq i32* %97, null
  br i1 %98, label %155, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 10, i32 0, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = add i32 %101, -1
  %103 = zext i32 %102 to i64
  %104 = shl i32 %2, 15
  %105 = xor i32 %104, -1
  %106 = add i32 %105, %2
  %107 = lshr i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = mul i32 %108, 9
  %110 = lshr i32 %109, 6
  %111 = xor i32 %110, %109
  %112 = shl i32 %111, 11
  %113 = xor i32 %112, -1
  %114 = add i32 %111, %113
  %115 = lshr i32 %114, 16
  %116 = xor i32 %115, %114
  %117 = and i32 %102, %116
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i32, i32* %97, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, %2
  br i1 %121, label %151, label %122

122:                                              ; preds = %99
  %123 = xor i32 %116, -1
  %124 = lshr i32 %114, 23
  %125 = add i32 %124, %123
  %126 = shl i32 %125, 12
  %127 = xor i32 %126, %125
  %128 = lshr i32 %127, 7
  %129 = xor i32 %128, %127
  %130 = shl i32 %129, 2
  %131 = xor i32 %130, %129
  %132 = lshr i32 %131, 20
  %133 = xor i32 %132, %131
  %134 = or i32 %133, 1
  %135 = zext i32 %134 to i64
  br label %136

136:                                              ; preds = %141, %122
  %137 = phi i32 [ %120, %122 ], [ %147, %141 ]
  %138 = phi i64 [ %118, %122 ], [ %145, %141 ]
  %139 = phi i64 [ 0, %122 ], [ %143, %141 ]
  %140 = icmp eq i32 %137, 0
  br i1 %140, label %155, label %141

141:                                              ; preds = %136
  %142 = icmp eq i64 %139, 0
  %143 = select i1 %142, i64 %135, i64 %139
  %144 = add i64 %143, %138
  %145 = and i64 %144, %103
  %146 = getelementptr inbounds i32, i32* %97, i64 %145
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, %2
  br i1 %148, label %149, label %136

149:                                              ; preds = %141
  %150 = getelementptr inbounds i32, i32* %97, i64 %145
  br label %151

151:                                              ; preds = %149, %99
  %152 = phi i32* [ %119, %99 ], [ %150, %149 ]
  %153 = icmp eq i32* %152, null
  br i1 %153, label %155, label %154

154:                                              ; preds = %151
  call void @_ZN5blink17InspectorDOMAgent24PushChildNodesToFrontendEiib(%"class.blink::InspectorDOMAgent"* %1, i32 %95, i32 1, i1 zeroext false)
  br label %155

155:                                              ; preds = %136, %151, %94, %154
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %156

156:                                              ; preds = %155, %93, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #17
  br label %157

157:                                              ; preds = %62, %52, %156, %24
  %158 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %159 = bitcast %"class.std::__1::basic_string"* %158 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  call void @_ZdlPv(i8* %165) #18
  br label %166

166:                                              ; preds = %157, %163
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  br label %167

167:                                              ; preds = %166, %12
  ret void
}

declare void @_ZN5blink15DOMPatchSupportC1EPNS_9DOMEditorERNS_8DocumentE(%"class.blink::DOMPatchSupport"*, %"class.blink::DOMEditor"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare void @_ZN5blink15DOMPatchSupport13PatchDocumentERKN3WTF6StringE(%"class.blink::DOMPatchSupport"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink9DOMEditor12SetOuterHTMLEPNS_4NodeERKN3WTF6StringEPS2_(%"class.crdtp::DispatchResponse"* sret, %"class.blink::DOMEditor"*, %"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Node"**) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent12setOuterHTMLEiRKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent12setOuterHTMLEiRKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %6, i32 %2, %"class.WTF::String"* dereferenceable(8) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent12setNodeValueEiRKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.blink::Node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %5, align 8
  %9 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent18AssertEditableNodeEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.blink::InspectorDOMAgent"* %1, i32 %2, %"class.blink::Node"** nonnull dereferenceable(8) %5)
  %10 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %19, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %11, i32* %14, align 8
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #17
  br label %43

19:                                               ; preds = %4
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %21 = bitcast %"class.blink::Node"* %20 to i32 (%"class.blink::Node"*)***
  %22 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %22, i64 30
  %24 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %23, align 8
  %25 = call i32 %24(%"class.blink::Node"* %20) #17
  %26 = icmp eq i32 %25, 3
  br i1 %26, label %39, label %27

27:                                               ; preds = %19
  %28 = call i8* @_Znwm(i64 48) #18
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %28, i8** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %31, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0), i64 32, i1 false) #17
  %32 = getelementptr inbounds i8, i8* %28, i64 32
  store i8 0, i8* %32, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %33 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %27
  %38 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %38) #18
  br label %43

39:                                               ; preds = %19
  %40 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 18, i32 0, i32 0
  %41 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %40, align 8
  %42 = bitcast %"class.blink::Node"* %20 to %"class.blink::Text"*
  call void @_ZN5blink9DOMEditor16ReplaceWholeTextEPNS_4TextERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::DOMEditor"* %41, %"class.blink::Text"* %42, %"class.WTF::String"* dereferenceable(8) %3) #17
  br label %43

43:                                               ; preds = %37, %27, %39, %13
  %44 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #18
  br label %52

52:                                               ; preds = %43, %49
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  ret void
}

declare void @_ZN5blink9DOMEditor16ReplaceWholeTextEPNS_4TextERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret, %"class.blink::DOMEditor"*, %"class.blink::Text"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent12setNodeValueEiRKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent12setNodeValueEiRKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %6, i32 %2, %"class.WTF::String"* dereferenceable(8) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent13performSearchERKN3WTF6StringEN5crdtp6detail10ValueMaybeIbEEPS2_Pi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly, %"class.WTF::String"*, i32* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %8 = alloca %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %9 = alloca %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %10 = alloca %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %11 = alloca %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %12 = alloca %"class.WTF::VectorBackedLinkedListNode.3331", align 8
  %13 = alloca %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca i8, align 1
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.blink::HeapVector.3346", align 8
  %20 = alloca %"class.blink::HeapLinkedHashSet.2098", align 8
  %21 = alloca %"class.blink::Node"*, align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.WTF::StringView", align 8
  %25 = alloca %"class.WTF::StringView", align 8
  %26 = alloca %"class.WTF::StringView", align 8
  %27 = alloca %"class.WTF::StringView", align 8
  %28 = alloca %"class.WTF::StringView", align 8
  %29 = alloca %"class.WTF::StringView", align 8
  %30 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %31 = alloca %"class.blink::ScriptValue", align 8
  %32 = alloca %"class.blink::Node"*, align 8
  %33 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %34 = alloca %"class.WTF::AtomicString", align 8
  %35 = alloca %"class.blink::Element"*, align 8
  %36 = alloca %"class.blink::HeapVector.3335"*, align 8
  %37 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 21, i32 2
  %38 = load i8, i8* %37, align 1, !range !3
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %6
  %41 = tail call i8* @_Znwm(i64 32) #18
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %41, i8** %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast i64* %43 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %44, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %41, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0), i64 24, i1 false) #17
  %45 = getelementptr inbounds i8, i8* %41, i64 24
  store i8 0, i8* %45, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %14) #17
  %46 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %1372

50:                                               ; preds = %40
  %51 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %51) #18
  br label %1372

52:                                               ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15)
  store i8 0, i8* %15, align 1
  %53 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %3, i64 0, i32 0
  %54 = load i8, i8* %53, align 1, !range !3
  %55 = icmp eq i8 %54, 0
  %56 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %3, i64 0, i32 1
  %57 = select i1 %55, i8* %15, i8* %56
  %58 = load i8, i8* %57, align 1, !range !3
  %59 = icmp ne i8 %58, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15)
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %98, label %63

63:                                               ; preds = %52
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 1
  br i1 %69, label %83, label %71

71:                                               ; preds = %63
  %72 = icmp eq i32 %65, 0
  br i1 %72, label %98, label %73

73:                                               ; preds = %71
  %74 = bitcast %"class.WTF::StringImpl"* %70 to i8*
  %75 = zext i32 %65 to i64
  %76 = tail call i8* @memchr(i8* %74, i32 60, i64 %75) #20
  %77 = icmp eq i8* %76, null
  %78 = ptrtoint i8* %76 to i64
  %79 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  %80 = sub i64 %78, %79
  %81 = trunc i64 %80 to i32
  %82 = select i1 %77, i32 -1, i32 %81
  br label %98

83:                                               ; preds = %63
  %84 = bitcast %"class.WTF::StringImpl"* %70 to i16*
  %85 = icmp eq i32 %65, 0
  br i1 %85, label %98, label %86

86:                                               ; preds = %83
  %87 = zext i32 %65 to i64
  br label %88

88:                                               ; preds = %86, %93
  %89 = phi i64 [ %94, %93 ], [ 0, %86 ]
  %90 = getelementptr inbounds i16, i16* %84, i64 %89
  %91 = load i16, i16* %90, align 2
  %92 = icmp eq i16 %91, 60
  br i1 %92, label %96, label %93

93:                                               ; preds = %88
  %94 = add nuw nsw i64 %89, 1
  %95 = icmp eq i64 %94, %87
  br i1 %95, label %98, label %88

96:                                               ; preds = %88
  %97 = trunc i64 %89 to i32
  br label %98

98:                                               ; preds = %93, %83, %71, %52, %73, %96
  %99 = phi i32 [ 0, %71 ], [ %65, %73 ], [ 0, %83 ], [ %65, %96 ], [ 0, %52 ], [ %65, %93 ]
  %100 = phi i32 [ -1, %71 ], [ %82, %73 ], [ -1, %83 ], [ %97, %96 ], [ -1, %52 ], [ -1, %93 ]
  %101 = icmp eq i32 %100, 0
  %102 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #17
  %103 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %104 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0), i8** %105, align 8
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 2, i32* %106, align 8
  br i1 %62, label %107, label %108

107:                                              ; preds = %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #17
  br label %113

108:                                              ; preds = %98
  %109 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %61, %"class.WTF::StringView"* nonnull dereferenceable(24) %16, i32 0) #17
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %111 = icmp eq i32 %109, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #17
  %112 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %112, label %113, label %116

113:                                              ; preds = %107, %108
  %114 = phi i1 [ false, %107 ], [ %111, %108 ]
  %115 = icmp eq i32 %99, 0
  br label %167

116:                                              ; preds = %108
  %117 = call i32 @_ZN3WTF10StringImpl11ReverseFindEDsj(%"class.WTF::StringImpl"* nonnull %110, i16 zeroext 62, i32 -1) #17
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %119 = add i32 %117, 1
  %120 = icmp eq i32 %119, %99
  %121 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %121, label %167, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 1
  br i1 %126, label %142, label %128

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %160, label %132

132:                                              ; preds = %128
  %133 = bitcast %"class.WTF::StringImpl"* %127 to i8*
  %134 = zext i32 %130 to i64
  %135 = call i8* @memchr(i8* %133, i32 34, i64 %134) #20
  %136 = icmp eq i8* %135, null
  %137 = ptrtoint i8* %135 to i64
  %138 = ptrtoint %"class.WTF::StringImpl"* %127 to i64
  %139 = sub i64 %137, %138
  %140 = trunc i64 %139 to i32
  %141 = select i1 %136, i32 -1, i32 %140
  br label %160

142:                                              ; preds = %122
  %143 = bitcast %"class.WTF::StringImpl"* %127 to i16*
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %160, label %147

147:                                              ; preds = %142
  %148 = zext i32 %145 to i64
  br label %149

149:                                              ; preds = %147, %154
  %150 = phi i64 [ %155, %154 ], [ 0, %147 ]
  %151 = getelementptr inbounds i16, i16* %143, i64 %150
  %152 = load i16, i16* %151, align 2
  %153 = icmp eq i16 %152, 34
  br i1 %153, label %157, label %154

154:                                              ; preds = %149
  %155 = add nuw nsw i64 %150, 1
  %156 = icmp eq i64 %155, %148
  br i1 %156, label %163, label %149

157:                                              ; preds = %149
  %158 = trunc i64 %150 to i32
  %159 = icmp eq i32 %158, 0
  br label %163

160:                                              ; preds = %142, %128, %132
  %161 = phi i32 [ -1, %142 ], [ %141, %132 ], [ -1, %128 ]
  %162 = icmp eq i32 %161, 0
  br label %163

163:                                              ; preds = %154, %157, %160
  %164 = phi i1 [ %162, %160 ], [ %159, %157 ], [ false, %154 ]
  %165 = call i32 @_ZN3WTF10StringImpl11ReverseFindEDsj(%"class.WTF::StringImpl"* nonnull %118, i16 zeroext 34, i32 -1) #17
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  br label %167

167:                                              ; preds = %116, %113, %163
  %168 = phi i1 [ %111, %163 ], [ %114, %113 ], [ %111, %116 ]
  %169 = phi %"class.WTF::StringImpl"* [ %166, %163 ], [ null, %113 ], [ null, %116 ]
  %170 = phi i1 [ %164, %163 ], [ false, %113 ], [ false, %116 ]
  %171 = phi i1 [ %120, %163 ], [ %115, %113 ], [ %120, %116 ]
  %172 = phi i32 [ %165, %163 ], [ -1, %113 ], [ -1, %116 ]
  %173 = add i32 %172, 1
  %174 = icmp eq i32 %173, %99
  %175 = and i1 %170, %174
  %176 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #17
  %177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %169, %"class.WTF::StringImpl"** %177, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %178, label %179, label %182

179:                                              ; preds = %167
  %180 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180) #17
  %181 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %181, align 8
  br label %226

182:                                              ; preds = %167
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %190, label %187

187:                                              ; preds = %182
  %188 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #17
  %189 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %169, %"class.WTF::StringImpl"** %189, align 8
  br label %206

190:                                              ; preds = %182
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = zext i32 %192 to i33
  %194 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %193, i33 1) #17
  %195 = extractvalue { i33, i1 } %194, 1
  %196 = extractvalue { i33, i1 } %194, 0
  %197 = icmp slt i33 %196, 0
  %198 = or i1 %195, %197
  br i1 %198, label %199, label %200, !prof !2

199:                                              ; preds = %190
  call void @llvm.trap() #17
  unreachable

200:                                              ; preds = %190
  %201 = trunc i33 %196 to i32
  store i32 %201, i32* %191, align 4
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %203 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #17
  %204 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %202, %"class.WTF::StringImpl"** %204, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %205, label %226, label %206

206:                                              ; preds = %187, %200
  %207 = phi %"class.WTF::StringImpl"** [ %189, %187 ], [ %204, %200 ]
  %208 = phi i8* [ %188, %187 ], [ %203, %200 ]
  %209 = phi %"class.WTF::StringImpl"* [ %169, %187 ], [ %202, %200 ]
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %226

214:                                              ; preds = %206
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = zext i32 %216 to i33
  %218 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %217, i33 1) #17
  %219 = extractvalue { i33, i1 } %218, 1
  %220 = extractvalue { i33, i1 } %218, 0
  %221 = icmp slt i33 %220, 0
  %222 = or i1 %219, %221
  br i1 %222, label %223, label %224, !prof !2

223:                                              ; preds = %214
  call void @llvm.trap() #17
  unreachable

224:                                              ; preds = %214
  %225 = trunc i33 %220 to i32
  store i32 %225, i32* %215, align 4
  br label %226

226:                                              ; preds = %179, %200, %206, %224
  %227 = phi %"class.WTF::StringImpl"** [ %181, %179 ], [ %204, %200 ], [ %207, %206 ], [ %207, %224 ]
  %228 = phi i8* [ %180, %179 ], [ %203, %200 ], [ %208, %206 ], [ %208, %224 ]
  br i1 %168, label %229, label %258

229:                                              ; preds = %226
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %236, label %232

232:                                              ; preds = %229
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = add i32 %234, -2
  br label %236

236:                                              ; preds = %229, %232
  %237 = phi i32 [ %235, %232 ], [ -2, %229 ]
  %238 = phi i32 [ %234, %232 ], [ 0, %229 ]
  %239 = sub i32 %238, %237
  %240 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %17, i32 %239, i32 %237) #17
  %241 = ptrtoint %"class.WTF::StringImpl"* %240 to i64
  %242 = bitcast %"class.WTF::String"* %17 to i64*
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  store i64 %241, i64* %242, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %288, label %245

245:                                              ; preds = %236
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  br i1 %249, label %252, label %254

252:                                              ; preds = %245
  %253 = add i32 %251, -1
  store i32 %253, i32* %250, align 4
  br label %254

254:                                              ; preds = %252, %245
  %255 = phi i32 [ %253, %252 ], [ %251, %245 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %288

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #17
  br label %288

258:                                              ; preds = %226
  br i1 %101, label %259, label %288

259:                                              ; preds = %258
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %266, label %262

262:                                              ; preds = %259
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 1
  %264 = load i32, i32* %263, align 4
  %265 = add i32 %264, -1
  br label %266

266:                                              ; preds = %259, %262
  %267 = phi i32 [ %265, %262 ], [ -1, %259 ]
  %268 = phi i32 [ %264, %262 ], [ 0, %259 ]
  %269 = sub i32 %268, %267
  %270 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %17, i32 %269, i32 %267) #17
  %271 = ptrtoint %"class.WTF::StringImpl"* %270 to i64
  %272 = bitcast %"class.WTF::String"* %17 to i64*
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  store i64 %271, i64* %272, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %273, null
  br i1 %274, label %288, label %275

275:                                              ; preds = %266
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load atomic i32, i32* %276 monotonic, align 4
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  br i1 %279, label %282, label %284

282:                                              ; preds = %275
  %283 = add i32 %281, -1
  store i32 %283, i32* %280, align 4
  br label %284

284:                                              ; preds = %282, %275
  %285 = phi i32 [ %283, %282 ], [ %281, %275 ]
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %284
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %273) #17
  br label %288

288:                                              ; preds = %266, %284, %287, %236, %254, %257, %258
  br i1 %171, label %289, label %316

289:                                              ; preds = %288
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %291 = icmp eq %"class.WTF::StringImpl"* %290, null
  br i1 %291, label %295, label %292

292:                                              ; preds = %289
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 1
  %294 = load i32, i32* %293, align 4
  br label %295

295:                                              ; preds = %289, %292
  %296 = phi i32 [ %294, %292 ], [ 0, %289 ]
  %297 = add i32 %296, -1
  %298 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %17, i32 0, i32 %297) #17
  %299 = ptrtoint %"class.WTF::StringImpl"* %298 to i64
  %300 = bitcast %"class.WTF::String"* %17 to i64*
  %301 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  store i64 %299, i64* %300, align 8
  %302 = icmp eq %"class.WTF::StringImpl"* %301, null
  br i1 %302, label %316, label %303

303:                                              ; preds = %295
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load atomic i32, i32* %304 monotonic, align 4
  %306 = and i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  br i1 %307, label %310, label %312

310:                                              ; preds = %303
  %311 = add i32 %309, -1
  store i32 %311, i32* %308, align 4
  br label %312

312:                                              ; preds = %310, %303
  %313 = phi i32 [ %311, %310 ], [ %309, %303 ]
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %312
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %301) #17
  br label %316

316:                                              ; preds = %295, %312, %315, %288
  br i1 %170, label %317, label %346

317:                                              ; preds = %316
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %319, label %324, label %320

320:                                              ; preds = %317
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 1
  %322 = load i32, i32* %321, align 4
  %323 = add i32 %322, -1
  br label %324

324:                                              ; preds = %317, %320
  %325 = phi i32 [ %323, %320 ], [ -1, %317 ]
  %326 = phi i32 [ %322, %320 ], [ 0, %317 ]
  %327 = sub i32 %326, %325
  %328 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %18, i32 %327, i32 %325) #17
  %329 = ptrtoint %"class.WTF::StringImpl"* %328 to i64
  %330 = bitcast %"class.WTF::String"* %18 to i64*
  %331 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  store i64 %329, i64* %330, align 8
  %332 = icmp eq %"class.WTF::StringImpl"* %331, null
  br i1 %332, label %346, label %333

333:                                              ; preds = %324
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = and i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 0
  %339 = load i32, i32* %338, align 4
  br i1 %337, label %340, label %342

340:                                              ; preds = %333
  %341 = add i32 %339, -1
  store i32 %341, i32* %338, align 4
  br label %342

342:                                              ; preds = %340, %333
  %343 = phi i32 [ %341, %340 ], [ %339, %333 ]
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %342
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %331) #17
  br label %346

346:                                              ; preds = %324, %342, %345, %316
  br i1 %174, label %347, label %374

347:                                              ; preds = %346
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %348, null
  br i1 %349, label %353, label %350

350:                                              ; preds = %347
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 1
  %352 = load i32, i32* %351, align 4
  br label %353

353:                                              ; preds = %347, %350
  %354 = phi i32 [ %352, %350 ], [ 0, %347 ]
  %355 = add i32 %354, -1
  %356 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %18, i32 0, i32 %355) #17
  %357 = ptrtoint %"class.WTF::StringImpl"* %356 to i64
  %358 = bitcast %"class.WTF::String"* %18 to i64*
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  store i64 %357, i64* %358, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %359, null
  br i1 %360, label %374, label %361

361:                                              ; preds = %353
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  br i1 %365, label %368, label %370

368:                                              ; preds = %361
  %369 = add i32 %367, -1
  store i32 %369, i32* %366, align 4
  br label %370

370:                                              ; preds = %368, %361
  %371 = phi i32 [ %369, %368 ], [ %367, %361 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %359) #17
  br label %374

374:                                              ; preds = %353, %370, %373, %346
  %375 = bitcast %"class.blink::HeapVector.3346"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %375) #17
  %376 = getelementptr inbounds %"class.blink::HeapVector.3346", %"class.blink::HeapVector.3346"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %377 = getelementptr inbounds %"class.blink::HeapVector.3346", %"class.blink::HeapVector.3346"* %19, i64 0, i32 0, i32 0, i32 0, i32 2
  %378 = bitcast %"class.blink::HeapVector.3346"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %378, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17InspectorDOMAgent9DocumentsEv(%"class.blink::HeapVector.3346"* nonnull sret %19, %"class.blink::InspectorDOMAgent"* %1)
  %379 = bitcast %"class.blink::HeapLinkedHashSet.2098"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %379) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %379, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %379, i8 0, i64 20, i1 false) #17
  %380 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2098", %"class.blink::HeapLinkedHashSet.2098"* %20, i64 0, i32 0, i32 1
  %381 = bitcast %"class.WTF::VectorBackedLinkedListNode.3331"* %12 to i8*
  %382 = bitcast %"class.WTF::VectorBackedLinkedList.3327"* %380 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %382, i8 0, i64 24, i1 false) #17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %381) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %381, i8 0, i64 16, i1 false) #17
  %383 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %380, i64 0, i32 0
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.3328"* %383, %"class.WTF::VectorBackedLinkedListNode.3331"* nonnull dereferenceable(16) %12) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %381) #17
  %384 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %376, align 8
  %385 = load i32, i32* %377, align 4
  %386 = zext i32 %385 to i64
  %387 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %384, i64 %386
  %388 = icmp eq i32 %385, 0
  br i1 %388, label %1121, label %389

389:                                              ; preds = %374
  %390 = bitcast %"class.blink::Node"** %21 to i8*
  %391 = bitcast %"class.WTF::StringView"* %23 to i8*
  %392 = bitcast %"class.WTF::StringView"* %24 to i8*
  %393 = bitcast %"class.WTF::StringView"* %25 to i8*
  %394 = bitcast %"class.WTF::StringView"* %26 to i8*
  %395 = bitcast %"class.WTF::StringView"* %27 to i8*
  %396 = or i1 %101, %171
  %397 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 0
  %398 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  %399 = bitcast i8** %398 to %"class.WTF::StringImpl"**
  %400 = bitcast %"class.WTF::StringView"* %23 to i64*
  %401 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  %402 = xor i1 %101, true
  %403 = xor i1 %171, true
  %404 = or i1 %402, %403
  %405 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 0
  %406 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  %407 = bitcast i8** %406 to %"class.WTF::StringImpl"**
  %408 = bitcast %"class.WTF::StringView"* %24 to i64*
  %409 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 2
  %410 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 0
  %411 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 1
  %412 = bitcast i8** %411 to %"class.WTF::StringImpl"**
  %413 = bitcast %"class.WTF::StringView"* %25 to i64*
  %414 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 2
  %415 = or i1 %171, %402
  %416 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 0
  %417 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  %418 = bitcast i8** %417 to %"class.WTF::StringImpl"**
  %419 = bitcast %"class.WTF::StringView"* %26 to i64*
  %420 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 2
  %421 = or i1 %101, %403
  %422 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 0
  %423 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 1
  %424 = bitcast i8** %423 to %"class.WTF::StringImpl"**
  %425 = bitcast %"class.WTF::StringView"* %27 to i64*
  %426 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 2
  %427 = bitcast %"class.blink::Node"** %21 to %"class.blink::Element"**
  %428 = bitcast %"class.WTF::StringView"* %28 to i8*
  %429 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 0
  %430 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 1
  %431 = bitcast i8** %430 to %"class.WTF::StringImpl"**
  %432 = bitcast %"class.WTF::StringView"* %28 to i64*
  %433 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 2
  %434 = bitcast %"class.WTF::StringView"* %29 to i8*
  %435 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 0
  %436 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 1
  %437 = bitcast i8** %436 to %"class.WTF::StringImpl"**
  %438 = bitcast %"class.WTF::StringView"* %29 to i64*
  %439 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 2
  %440 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2098", %"class.blink::HeapLinkedHashSet.2098"* %20, i64 0, i32 0
  %441 = bitcast %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %8 to i8*
  %442 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %8, i64 0, i32 0, i32 0
  %443 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %8, i64 0, i32 0, i32 1
  %444 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2098", %"class.blink::HeapLinkedHashSet.2098"* %20, i64 0, i32 0, i32 0, i32 0, i32 2
  %445 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2098", %"class.blink::HeapLinkedHashSet.2098"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %446 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2098", %"class.blink::HeapLinkedHashSet.2098"* %20, i64 0, i32 0, i32 0, i32 0, i32 1
  %447 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %8, i64 0, i32 1, i32 0, i32 0
  %448 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %8, i64 0, i32 1, i32 0, i32 1
  %449 = bitcast %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %7 to i8*
  %450 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %7, i64 0, i32 0, i32 0
  %451 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %7, i64 0, i32 0, i32 1
  %452 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %7, i64 0, i32 1, i32 0, i32 0
  %453 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %7, i64 0, i32 1, i32 0, i32 1
  %454 = bitcast %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %10 to i8*
  %455 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %10, i64 0, i32 0, i32 0
  %456 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %10, i64 0, i32 0, i32 1
  %457 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %10, i64 0, i32 1, i32 0, i32 0
  %458 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %10, i64 0, i32 1, i32 0, i32 1
  %459 = bitcast %"class.WTF::StringView"* %22 to i8*
  %460 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 0
  %461 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  %462 = bitcast i8** %461 to %"class.WTF::StringImpl"**
  %463 = bitcast %"class.WTF::StringView"* %22 to i64*
  %464 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  %465 = bitcast %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %11 to i8*
  %466 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %11, i64 0, i32 0, i32 0
  %467 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %11, i64 0, i32 0, i32 1
  %468 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %11, i64 0, i32 1, i32 0, i32 0
  %469 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %11, i64 0, i32 1, i32 0, i32 1
  br label %501

470:                                              ; preds = %1013
  %471 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %376, align 8
  %472 = load i32, i32* %377, align 4
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %471, i64 %473
  %475 = icmp eq i32 %472, 0
  br i1 %475, label %1121, label %476

476:                                              ; preds = %470
  %477 = bitcast %"class.blink::DummyExceptionStateForTesting"* %30 to i8*
  %478 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %30, i64 0, i32 0, i32 0
  %479 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %30, i64 0, i32 0, i32 1, i32 0
  %480 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %30, i64 0, i32 0, i32 1, i32 1
  %481 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %30, i64 0, i32 0, i32 1, i32 2
  %482 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %30, i64 0, i32 0, i32 5, i32 0, i32 0
  %483 = bitcast %"class.WTF::StringImpl"** %482 to i8*
  %484 = bitcast i8** %481 to i8*
  %485 = bitcast %"class.blink::ScriptValue"* %31 to i8*
  %486 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %30, i64 0, i32 0
  %487 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %31, i64 0, i32 1, i32 1, i32 0
  %488 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %30, i64 0, i32 0, i32 4
  %489 = bitcast %"class.blink::Node"** %32 to i8*
  %490 = bitcast %"class.blink::Node"** %32 to %"class.blink::Attr"**
  %491 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2098", %"class.blink::HeapLinkedHashSet.2098"* %20, i64 0, i32 0
  %492 = bitcast %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %9 to i8*
  %493 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %9, i64 0, i32 0, i32 0
  %494 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %9, i64 0, i32 0, i32 1
  %495 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2098", %"class.blink::HeapLinkedHashSet.2098"* %20, i64 0, i32 0, i32 0, i32 0, i32 2
  %496 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2098", %"class.blink::HeapLinkedHashSet.2098"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %497 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2098", %"class.blink::HeapLinkedHashSet.2098"* %20, i64 0, i32 0, i32 0, i32 0, i32 1
  %498 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %9, i64 0, i32 1, i32 0, i32 0
  %499 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %9, i64 0, i32 1, i32 0, i32 1
  %500 = bitcast %"class.blink::ScriptValue"* %31 to i8*
  br label %1049

501:                                              ; preds = %389, %1013
  %502 = phi %"class.blink::Member.326"* [ %384, %389 ], [ %1017, %1013 ]
  %503 = phi %"class.WTF::StringImpl"* [ undef, %389 ], [ %1016, %1013 ]
  %504 = phi %"class.WTF::StringImpl"* [ undef, %389 ], [ %1015, %1013 ]
  %505 = phi %"class.WTF::StringImpl"* [ undef, %389 ], [ %1014, %1013 ]
  %506 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %502, i64 0, i32 0, i32 0
  %507 = load %"class.blink::Document"*, %"class.blink::Document"** %506, align 8
  %508 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %507, i64 0, i32 47, i32 0, i32 0
  %509 = load %"class.blink::Element"*, %"class.blink::Element"** %508, align 8
  %510 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %509, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %390) #17
  store %"class.blink::Node"* %510, %"class.blink::Node"** %21, align 8
  %511 = icmp eq %"class.blink::Element"* %509, null
  br i1 %511, label %1013, label %512

512:                                              ; preds = %501, %1010
  %513 = phi %"class.WTF::StringImpl"* [ %939, %1010 ], [ %503, %501 ]
  %514 = phi %"class.WTF::StringImpl"* [ %938, %1010 ], [ %504, %501 ]
  %515 = phi %"class.WTF::StringImpl"* [ %937, %1010 ], [ %505, %501 ]
  %516 = phi %"class.blink::Node"* [ %1011, %1010 ], [ %510, %501 ]
  %517 = bitcast %"class.blink::Node"* %516 to i32 (%"class.blink::Node"*)***
  %518 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %517, align 8
  %519 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %518, i64 30
  %520 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %519, align 8
  %521 = call i32 %520(%"class.blink::Node"* nonnull %516) #17
  switch i32 %521, label %928 [
    i32 3, label %522
    i32 8, label %522
    i32 4, label %522
    i32 1, label %577
  ]

522:                                              ; preds = %512, %512, %512
  %523 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %524 = bitcast %"class.blink::Node"* %523 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %525 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %524, align 8
  %526 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %525, i64 28
  %527 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %526, align 8
  %528 = call %"class.WTF::StringImpl"* %527(%"class.blink::Node"* %523) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %459) #17
  %529 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %530 = icmp eq %"class.WTF::StringImpl"* %529, null
  br i1 %530, label %531, label %533

531:                                              ; preds = %522
  store i8* null, i8** %461, align 8
  %532 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %532, i64* %463, align 8
  br label %537

533:                                              ; preds = %522
  store %"class.WTF::StringImpl"* %529, %"class.WTF::StringImpl"** %460, align 8
  %534 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %529, i64 0, i32 1
  %535 = load i32, i32* %534, align 4
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %529, i64 1
  store %"class.WTF::StringImpl"* %536, %"class.WTF::StringImpl"** %462, align 8
  br label %537

537:                                              ; preds = %531, %533
  %538 = phi i32 [ %535, %533 ], [ 0, %531 ]
  store i32 %538, i32* %464, align 8
  %539 = icmp eq %"class.WTF::StringImpl"* %528, null
  br i1 %539, label %540, label %541

540:                                              ; preds = %537
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %459) #17
  br label %928

541:                                              ; preds = %537
  %542 = call i32 @_ZN3WTF10StringImpl16FindIgnoringCaseERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %528, %"class.WTF::StringView"* nonnull dereferenceable(24) %22, i32 0) #17
  %543 = icmp eq i32 %542, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %459) #17
  br i1 %543, label %564, label %544

544:                                              ; preds = %541
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %465)
  %545 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %383, i32 0) #17, !noalias !48
  store %"class.WTF::VectorBackedLinkedListNode.3331"* %545, %"class.WTF::VectorBackedLinkedListNode.3331"** %466, align 8, !alias.scope !48
  store %"class.WTF::VectorBackedLinkedList.3327"* %380, %"class.WTF::VectorBackedLinkedList.3327"** %467, align 8, !alias.scope !48
  %546 = load i32, i32* %444, align 4, !noalias !51
  %547 = icmp eq i32 %546, 0
  %548 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %445, align 8, !noalias !51
  %549 = load i32, i32* %446, align 8, !noalias !51
  %550 = zext i32 %549 to i64
  %551 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %548, i64 %550
  br i1 %547, label %561, label %552

552:                                              ; preds = %544
  %553 = icmp eq i32 %549, 0
  br i1 %553, label %561, label %554

554:                                              ; preds = %552, %558
  %555 = phi %"struct.WTF::KeyValuePair.3326"* [ %559, %558 ], [ %548, %552 ]
  %556 = bitcast %"struct.WTF::KeyValuePair.3326"* %555 to i64*
  %557 = load i64, i64* %556, align 8, !noalias !51
  switch i64 %557, label %561 [
    i64 -1, label %558
    i64 0, label %558
  ]

558:                                              ; preds = %554, %554
  %559 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %555, i64 1
  %560 = icmp eq %"struct.WTF::KeyValuePair.3326"* %559, %551
  br i1 %560, label %561, label %554

561:                                              ; preds = %558, %554, %552, %544
  %562 = phi %"struct.WTF::KeyValuePair.3326"* [ %551, %544 ], [ %548, %552 ], [ %555, %554 ], [ %551, %558 ]
  store %"struct.WTF::KeyValuePair.3326"* %562, %"struct.WTF::KeyValuePair.3326"** %468, align 8, !alias.scope !51
  store %"struct.WTF::KeyValuePair.3326"* %551, %"struct.WTF::KeyValuePair.3326"** %469, align 8, !alias.scope !51
  %563 = call { %"class.blink::Member.318"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet.3322"* nonnull %440, %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8 %11, %"class.blink::Node"** nonnull dereferenceable(8) %21, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %465)
  br label %564

564:                                              ; preds = %561, %541
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %528, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %566 = load atomic i32, i32* %565 monotonic, align 4
  %567 = and i32 %566, 2
  %568 = icmp eq i32 %567, 0
  %569 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %528, i64 0, i32 0
  %570 = load i32, i32* %569, align 4
  br i1 %568, label %571, label %573

571:                                              ; preds = %564
  %572 = add i32 %570, -1
  store i32 %572, i32* %569, align 4
  br label %573

573:                                              ; preds = %571, %564
  %574 = phi i32 [ %572, %571 ], [ %570, %564 ]
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %576, label %928

576:                                              ; preds = %573
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %528) #17
  br label %928

577:                                              ; preds = %512
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %391) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %392) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %393) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %394) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %395) #17
  br i1 %396, label %599, label %578

578:                                              ; preds = %577
  %579 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %580 = bitcast %"class.blink::Node"* %579 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %581 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %580, align 8
  %582 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %581, i64 27
  %583 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %582, align 8
  %584 = call %"class.WTF::StringImpl"* %583(%"class.blink::Node"* %579) #17
  %585 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %586 = icmp eq %"class.WTF::StringImpl"* %585, null
  br i1 %586, label %587, label %589

587:                                              ; preds = %578
  store i8* null, i8** %398, align 8
  %588 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %588, i64* %400, align 8
  br label %593

589:                                              ; preds = %578
  store %"class.WTF::StringImpl"* %585, %"class.WTF::StringImpl"** %397, align 8
  %590 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %585, i64 0, i32 1
  %591 = load i32, i32* %590, align 4
  %592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %585, i64 1
  store %"class.WTF::StringImpl"* %592, %"class.WTF::StringImpl"** %399, align 8
  br label %593

593:                                              ; preds = %587, %589
  %594 = phi i32 [ %591, %589 ], [ 0, %587 ]
  store i32 %594, i32* %401, align 8
  %595 = icmp eq %"class.WTF::StringImpl"* %584, null
  br i1 %595, label %599, label %596

596:                                              ; preds = %593
  %597 = call i32 @_ZN3WTF10StringImpl16FindIgnoringCaseERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %584, %"class.WTF::StringView"* nonnull dereferenceable(24) %23, i32 0) #17
  %598 = icmp eq i32 %597, -1
  br i1 %598, label %599, label %679

599:                                              ; preds = %593, %577, %596
  %600 = phi %"class.WTF::StringImpl"* [ %515, %577 ], [ %584, %596 ], [ null, %593 ]
  %601 = phi i1 [ false, %577 ], [ true, %596 ], [ true, %593 ]
  br i1 %404, label %630, label %602

602:                                              ; preds = %599
  %603 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %604 = bitcast %"class.blink::Node"* %603 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %605 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %604, align 8
  %606 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %605, i64 27
  %607 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %606, align 8
  %608 = call %"class.WTF::StringImpl"* %607(%"class.blink::Node"* %603) #17
  %609 = icmp eq %"class.WTF::StringImpl"* %608, null
  br i1 %609, label %610, label %612

610:                                              ; preds = %602
  store i8* null, i8** %406, align 8
  %611 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %611, i64* %408, align 8
  br label %616

612:                                              ; preds = %602
  store %"class.WTF::StringImpl"* %608, %"class.WTF::StringImpl"** %405, align 8
  %613 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 0, i32 1
  %614 = load i32, i32* %613, align 4
  %615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 1
  store %"class.WTF::StringImpl"* %615, %"class.WTF::StringImpl"** %407, align 8
  br label %616

616:                                              ; preds = %610, %612
  %617 = phi i32 [ %614, %612 ], [ 0, %610 ]
  store i32 %617, i32* %409, align 8
  %618 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %619 = icmp eq %"class.WTF::StringImpl"* %618, null
  br i1 %619, label %620, label %622

620:                                              ; preds = %616
  store i8* null, i8** %411, align 8
  %621 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %621, i64* %413, align 8
  br label %626

622:                                              ; preds = %616
  store %"class.WTF::StringImpl"* %618, %"class.WTF::StringImpl"** %410, align 8
  %623 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %618, i64 0, i32 1
  %624 = load i32, i32* %623, align 4
  %625 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %618, i64 1
  store %"class.WTF::StringImpl"* %625, %"class.WTF::StringImpl"** %412, align 8
  br label %626

626:                                              ; preds = %620, %622
  %627 = phi i32 [ %624, %622 ], [ 0, %620 ]
  store i32 %627, i32* %414, align 8
  %628 = call zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %24, %"class.WTF::StringView"* nonnull dereferenceable(24) %25) #17
  br i1 %628, label %629, label %630

629:                                              ; preds = %626
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %395) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %394) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %393) #17
  br label %716

630:                                              ; preds = %599, %626
  %631 = phi %"class.WTF::StringImpl"* [ %514, %599 ], [ %608, %626 ]
  %632 = phi i1 [ false, %599 ], [ true, %626 ]
  br i1 %415, label %655, label %633

633:                                              ; preds = %630
  %634 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %635 = bitcast %"class.blink::Node"* %634 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %636 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %635, align 8
  %637 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %636, i64 27
  %638 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %637, align 8
  %639 = call %"class.WTF::StringImpl"* %638(%"class.blink::Node"* %634) #17
  %640 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %641 = icmp eq %"class.WTF::StringImpl"* %640, null
  br i1 %641, label %642, label %644

642:                                              ; preds = %633
  store i8* null, i8** %417, align 8
  %643 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %643, i64* %419, align 8
  br label %648

644:                                              ; preds = %633
  store %"class.WTF::StringImpl"* %640, %"class.WTF::StringImpl"** %416, align 8
  %645 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %640, i64 0, i32 1
  %646 = load i32, i32* %645, align 4
  %647 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %640, i64 1
  store %"class.WTF::StringImpl"* %647, %"class.WTF::StringImpl"** %418, align 8
  br label %648

648:                                              ; preds = %642, %644
  %649 = phi i32 [ %646, %644 ], [ 0, %642 ]
  store i32 %649, i32* %420, align 8
  %650 = icmp eq %"class.WTF::StringImpl"* %639, null
  br i1 %650, label %653, label %651

651:                                              ; preds = %648
  %652 = call zeroext i1 @_ZNK3WTF10StringImpl22StartsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %639, %"class.WTF::StringView"* nonnull dereferenceable(24) %26) #17
  br i1 %652, label %678, label %655

653:                                              ; preds = %648
  %654 = icmp eq i32 %649, 0
  br i1 %654, label %678, label %655

655:                                              ; preds = %651, %630, %653
  %656 = phi %"class.WTF::StringImpl"* [ %513, %630 ], [ null, %653 ], [ %639, %651 ]
  %657 = phi i1 [ false, %630 ], [ true, %653 ], [ true, %651 ]
  br i1 %421, label %680, label %658

658:                                              ; preds = %655
  %659 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %660 = bitcast %"class.blink::Node"* %659 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %661 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %660, align 8
  %662 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %661, i64 27
  %663 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %662, align 8
  %664 = call %"class.WTF::StringImpl"* %663(%"class.blink::Node"* %659) #17
  %665 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %666 = icmp eq %"class.WTF::StringImpl"* %665, null
  br i1 %666, label %667, label %669

667:                                              ; preds = %658
  store i8* null, i8** %423, align 8
  %668 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %668, i64* %425, align 8
  br label %673

669:                                              ; preds = %658
  store %"class.WTF::StringImpl"* %665, %"class.WTF::StringImpl"** %422, align 8
  %670 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %665, i64 0, i32 1
  %671 = load i32, i32* %670, align 4
  %672 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %665, i64 1
  store %"class.WTF::StringImpl"* %672, %"class.WTF::StringImpl"** %424, align 8
  br label %673

673:                                              ; preds = %667, %669
  %674 = phi i32 [ %671, %669 ], [ 0, %667 ]
  store i32 %674, i32* %426, align 8
  %675 = icmp eq %"class.WTF::StringImpl"* %664, null
  br i1 %675, label %676, label %681

676:                                              ; preds = %673
  %677 = icmp eq i32 %674, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %395) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %394) #17
  br i1 %657, label %696, label %713

678:                                              ; preds = %651, %653
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %395) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %394) #17
  br label %696

679:                                              ; preds = %596
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %395) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %394) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %393) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %392) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %391) #17
  br label %743

680:                                              ; preds = %655
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %395) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %394) #17
  br i1 %657, label %696, label %713

681:                                              ; preds = %673
  %682 = call zeroext i1 @_ZNK3WTF10StringImpl20EndsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %664, %"class.WTF::StringView"* nonnull dereferenceable(24) %27) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %395) #17
  %683 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %664, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %684 = load atomic i32, i32* %683 monotonic, align 4
  %685 = and i32 %684, 2
  %686 = icmp eq i32 %685, 0
  %687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %664, i64 0, i32 0
  %688 = load i32, i32* %687, align 4
  br i1 %686, label %689, label %691

689:                                              ; preds = %681
  %690 = add i32 %688, -1
  store i32 %690, i32* %687, align 4
  br label %691

691:                                              ; preds = %689, %681
  %692 = phi i32 [ %690, %689 ], [ %688, %681 ]
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %694, label %695

694:                                              ; preds = %691
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %664) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %394) #17
  br i1 %657, label %696, label %713

695:                                              ; preds = %691
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %394) #17
  br i1 %657, label %696, label %713

696:                                              ; preds = %678, %676, %694, %680, %695
  %697 = phi %"class.WTF::StringImpl"* [ %656, %680 ], [ %656, %695 ], [ %656, %694 ], [ %656, %676 ], [ %639, %678 ]
  %698 = phi i1 [ false, %680 ], [ %682, %695 ], [ %682, %694 ], [ %677, %676 ], [ true, %678 ]
  %699 = icmp eq %"class.WTF::StringImpl"* %697, null
  br i1 %699, label %713, label %700

700:                                              ; preds = %696
  %701 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %697, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %702 = load atomic i32, i32* %701 monotonic, align 4
  %703 = and i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %697, i64 0, i32 0
  %706 = load i32, i32* %705, align 4
  br i1 %704, label %707, label %709

707:                                              ; preds = %700
  %708 = add i32 %706, -1
  store i32 %708, i32* %705, align 4
  br label %709

709:                                              ; preds = %707, %700
  %710 = phi i32 [ %708, %707 ], [ %706, %700 ]
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %712, label %713

712:                                              ; preds = %709
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %697) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %393) #17
  br i1 %632, label %716, label %734

713:                                              ; preds = %709, %696, %676, %694, %680, %695
  %714 = phi i1 [ %682, %695 ], [ false, %680 ], [ %682, %694 ], [ %677, %676 ], [ %698, %696 ], [ %698, %709 ]
  %715 = phi %"class.WTF::StringImpl"* [ %656, %695 ], [ %656, %680 ], [ %656, %694 ], [ %656, %676 ], [ null, %696 ], [ %697, %709 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %393) #17
  br i1 %632, label %716, label %734

716:                                              ; preds = %629, %712, %713
  %717 = phi %"class.WTF::StringImpl"* [ %697, %712 ], [ %715, %713 ], [ %513, %629 ]
  %718 = phi i1 [ %698, %712 ], [ %714, %713 ], [ true, %629 ]
  %719 = phi %"class.WTF::StringImpl"* [ %631, %712 ], [ %631, %713 ], [ %608, %629 ]
  %720 = icmp eq %"class.WTF::StringImpl"* %719, null
  br i1 %720, label %734, label %721

721:                                              ; preds = %716
  %722 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %719, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %723 = load atomic i32, i32* %722 monotonic, align 4
  %724 = and i32 %723, 2
  %725 = icmp eq i32 %724, 0
  %726 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %719, i64 0, i32 0
  %727 = load i32, i32* %726, align 4
  br i1 %725, label %728, label %730

728:                                              ; preds = %721
  %729 = add i32 %727, -1
  store i32 %729, i32* %726, align 4
  br label %730

730:                                              ; preds = %728, %721
  %731 = phi i32 [ %729, %728 ], [ %727, %721 ]
  %732 = icmp eq i32 %731, 0
  br i1 %732, label %733, label %734

733:                                              ; preds = %730
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %719) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %392) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %391) #17
  br i1 %601, label %738, label %760

734:                                              ; preds = %730, %716, %712, %713
  %735 = phi %"class.WTF::StringImpl"* [ %715, %713 ], [ %697, %712 ], [ %717, %716 ], [ %717, %730 ]
  %736 = phi i1 [ %714, %713 ], [ %698, %712 ], [ %718, %716 ], [ %718, %730 ]
  %737 = phi %"class.WTF::StringImpl"* [ %631, %713 ], [ %631, %712 ], [ null, %716 ], [ %719, %730 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %392) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %391) #17
  br i1 %601, label %738, label %760

738:                                              ; preds = %733, %734
  %739 = phi %"class.WTF::StringImpl"* [ %719, %733 ], [ %737, %734 ]
  %740 = phi i1 [ %718, %733 ], [ %736, %734 ]
  %741 = phi %"class.WTF::StringImpl"* [ %717, %733 ], [ %735, %734 ]
  %742 = icmp eq %"class.WTF::StringImpl"* %600, null
  br i1 %742, label %760, label %743

743:                                              ; preds = %679, %738
  %744 = phi %"class.WTF::StringImpl"* [ %513, %679 ], [ %741, %738 ]
  %745 = phi i1 [ true, %679 ], [ %740, %738 ]
  %746 = phi %"class.WTF::StringImpl"* [ %584, %679 ], [ %600, %738 ]
  %747 = phi %"class.WTF::StringImpl"* [ %514, %679 ], [ %739, %738 ]
  %748 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %746, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %749 = load atomic i32, i32* %748 monotonic, align 4
  %750 = and i32 %749, 2
  %751 = icmp eq i32 %750, 0
  %752 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %746, i64 0, i32 0
  %753 = load i32, i32* %752, align 4
  br i1 %751, label %754, label %756

754:                                              ; preds = %743
  %755 = add i32 %753, -1
  store i32 %755, i32* %752, align 4
  br label %756

756:                                              ; preds = %754, %743
  %757 = phi i32 [ %755, %754 ], [ %753, %743 ]
  %758 = icmp eq i32 %757, 0
  br i1 %758, label %759, label %760

759:                                              ; preds = %756
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %746) #17
  br i1 %745, label %765, label %788

760:                                              ; preds = %756, %738, %733, %734
  %761 = phi %"class.WTF::StringImpl"* [ %737, %734 ], [ %719, %733 ], [ %739, %738 ], [ %747, %756 ]
  %762 = phi i1 [ %736, %734 ], [ %718, %733 ], [ %740, %738 ], [ %745, %756 ]
  %763 = phi %"class.WTF::StringImpl"* [ %735, %734 ], [ %717, %733 ], [ %741, %738 ], [ %744, %756 ]
  %764 = phi %"class.WTF::StringImpl"* [ %600, %734 ], [ %600, %733 ], [ null, %738 ], [ %746, %756 ]
  br i1 %762, label %765, label %788

765:                                              ; preds = %759, %760
  %766 = phi %"class.WTF::StringImpl"* [ %746, %759 ], [ %764, %760 ]
  %767 = phi %"class.WTF::StringImpl"* [ %744, %759 ], [ %763, %760 ]
  %768 = phi %"class.WTF::StringImpl"* [ %747, %759 ], [ %761, %760 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %454)
  %769 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %383, i32 0) #17, !noalias !54
  store %"class.WTF::VectorBackedLinkedListNode.3331"* %769, %"class.WTF::VectorBackedLinkedListNode.3331"** %455, align 8, !alias.scope !54
  store %"class.WTF::VectorBackedLinkedList.3327"* %380, %"class.WTF::VectorBackedLinkedList.3327"** %456, align 8, !alias.scope !54
  %770 = load i32, i32* %444, align 4, !noalias !57
  %771 = icmp eq i32 %770, 0
  %772 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %445, align 8, !noalias !57
  %773 = load i32, i32* %446, align 8, !noalias !57
  %774 = zext i32 %773 to i64
  %775 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %772, i64 %774
  br i1 %771, label %785, label %776

776:                                              ; preds = %765
  %777 = icmp eq i32 %773, 0
  br i1 %777, label %785, label %778

778:                                              ; preds = %776, %782
  %779 = phi %"struct.WTF::KeyValuePair.3326"* [ %783, %782 ], [ %772, %776 ]
  %780 = bitcast %"struct.WTF::KeyValuePair.3326"* %779 to i64*
  %781 = load i64, i64* %780, align 8, !noalias !57
  switch i64 %781, label %785 [
    i64 -1, label %782
    i64 0, label %782
  ]

782:                                              ; preds = %778, %778
  %783 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %779, i64 1
  %784 = icmp eq %"struct.WTF::KeyValuePair.3326"* %783, %775
  br i1 %784, label %785, label %778

785:                                              ; preds = %778, %782, %765, %776
  %786 = phi %"struct.WTF::KeyValuePair.3326"* [ %775, %765 ], [ %772, %776 ], [ %779, %778 ], [ %775, %782 ]
  store %"struct.WTF::KeyValuePair.3326"* %786, %"struct.WTF::KeyValuePair.3326"** %457, align 8, !alias.scope !57
  store %"struct.WTF::KeyValuePair.3326"* %775, %"struct.WTF::KeyValuePair.3326"** %458, align 8, !alias.scope !57
  %787 = call { %"class.blink::Member.318"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet.3322"* nonnull %440, %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8 %10, %"class.blink::Node"** nonnull dereferenceable(8) %21, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %454)
  br label %928

788:                                              ; preds = %759, %760
  %789 = phi %"class.WTF::StringImpl"* [ %746, %759 ], [ %764, %760 ]
  %790 = phi %"class.WTF::StringImpl"* [ %744, %759 ], [ %763, %760 ]
  %791 = phi %"class.WTF::StringImpl"* [ %747, %759 ], [ %761, %760 ]
  %792 = load %"class.blink::Element"*, %"class.blink::Element"** %427, align 8
  %793 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %792, i64 0, i32 3, i32 0, i32 0
  %794 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %793, align 8
  %795 = icmp eq %"class.blink::ElementData"* %794, null
  br i1 %795, label %796, label %798

796:                                              ; preds = %788
  %797 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %792, i64 0, i32 0, i32 0
  br label %934

798:                                              ; preds = %788
  call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* %792) #17
  %799 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %793, align 8
  %800 = icmp eq %"class.blink::ElementData"* %799, null
  br i1 %800, label %801, label %803

801:                                              ; preds = %798
  %802 = load i32, i32* null, align 536870912
  br label %815

803:                                              ; preds = %798
  %804 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %799, i64 0, i32 0, i32 0, i32 0
  %805 = load i32, i32* %804, align 4
  %806 = and i32 %805, 1
  %807 = icmp eq i32 %806, 0
  br i1 %807, label %815, label %808

808:                                              ; preds = %803
  %809 = bitcast %"class.blink::ElementData"* %799 to %"class.blink::UniqueElementData"*
  %810 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %799, i64 1, i32 1
  %811 = bitcast %"class.blink::Member.354"* %810 to %"class.blink::Attribute"**
  %812 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %811, align 8
  %813 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %809, i64 0, i32 2, i32 0, i32 0, i32 2
  %814 = load i32, i32* %813, align 4
  br label %821

815:                                              ; preds = %803, %801
  %816 = phi i32 [ %802, %801 ], [ %805, %803 ]
  %817 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %799, i64 1
  %818 = bitcast %"class.blink::ElementData"* %817 to %"class.blink::Attribute"*
  %819 = lshr i32 %816, 1
  %820 = and i32 %819, 268435455
  br label %821

821:                                              ; preds = %808, %815
  %822 = phi i32 [ %820, %815 ], [ %814, %808 ]
  %823 = phi %"class.blink::Attribute"* [ %818, %815 ], [ %812, %808 ]
  %824 = zext i32 %822 to i64
  %825 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %823, i64 %824
  %826 = icmp eq i32 %822, 0
  br i1 %826, label %928, label %827

827:                                              ; preds = %821, %925
  %828 = phi %"class.blink::Attribute"* [ %926, %925 ], [ %823, %821 ]
  %829 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %828, i64 0, i32 0, i32 0, i32 0
  %830 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %829, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %428) #17
  %831 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %832 = icmp eq %"class.WTF::StringImpl"* %831, null
  br i1 %832, label %833, label %835

833:                                              ; preds = %827
  store i8* null, i8** %430, align 8
  %834 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %834, i64* %432, align 8
  br label %839

835:                                              ; preds = %827
  store %"class.WTF::StringImpl"* %831, %"class.WTF::StringImpl"** %429, align 8
  %836 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %831, i64 0, i32 1
  %837 = load i32, i32* %836, align 4
  %838 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %831, i64 1
  store %"class.WTF::StringImpl"* %838, %"class.WTF::StringImpl"** %431, align 8
  br label %839

839:                                              ; preds = %833, %835
  %840 = phi i32 [ %837, %835 ], [ 0, %833 ]
  store i32 %840, i32* %433, align 8
  %841 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %830, i64 0, i32 3, i32 0, i32 0, i32 0
  %842 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %841, align 8
  %843 = icmp eq %"class.WTF::StringImpl"* %842, null
  br i1 %843, label %844, label %845

844:                                              ; preds = %839
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %428) #17
  br label %868

845:                                              ; preds = %839
  %846 = call i32 @_ZN3WTF10StringImpl16FindIgnoringCaseERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %842, %"class.WTF::StringView"* nonnull dereferenceable(24) %28, i32 0) #17
  %847 = icmp eq i32 %846, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %428) #17
  br i1 %847, label %868, label %848

848:                                              ; preds = %845
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %441)
  %849 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %383, i32 0) #17, !noalias !60
  store %"class.WTF::VectorBackedLinkedListNode.3331"* %849, %"class.WTF::VectorBackedLinkedListNode.3331"** %442, align 8, !alias.scope !60
  store %"class.WTF::VectorBackedLinkedList.3327"* %380, %"class.WTF::VectorBackedLinkedList.3327"** %443, align 8, !alias.scope !60
  %850 = load i32, i32* %444, align 4, !noalias !63
  %851 = icmp eq i32 %850, 0
  %852 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %445, align 8, !noalias !63
  %853 = load i32, i32* %446, align 8, !noalias !63
  %854 = zext i32 %853 to i64
  %855 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %852, i64 %854
  br i1 %851, label %865, label %856

856:                                              ; preds = %848
  %857 = icmp eq i32 %853, 0
  br i1 %857, label %865, label %858

858:                                              ; preds = %856, %862
  %859 = phi %"struct.WTF::KeyValuePair.3326"* [ %863, %862 ], [ %852, %856 ]
  %860 = bitcast %"struct.WTF::KeyValuePair.3326"* %859 to i64*
  %861 = load i64, i64* %860, align 8, !noalias !63
  switch i64 %861, label %865 [
    i64 -1, label %862
    i64 0, label %862
  ]

862:                                              ; preds = %858, %858
  %863 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %859, i64 1
  %864 = icmp eq %"struct.WTF::KeyValuePair.3326"* %863, %855
  br i1 %864, label %865, label %858

865:                                              ; preds = %862, %858, %856, %848
  %866 = phi %"struct.WTF::KeyValuePair.3326"* [ %855, %848 ], [ %852, %856 ], [ %859, %858 ], [ %855, %862 ]
  store %"struct.WTF::KeyValuePair.3326"* %866, %"struct.WTF::KeyValuePair.3326"** %447, align 8, !alias.scope !63
  store %"struct.WTF::KeyValuePair.3326"* %855, %"struct.WTF::KeyValuePair.3326"** %448, align 8, !alias.scope !63
  %867 = call { %"class.blink::Member.318"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet.3322"* nonnull %440, %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8 %8, %"class.blink::Node"** nonnull dereferenceable(8) %21, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %441)
  br label %928

868:                                              ; preds = %844, %845
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %434) #17
  %869 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %870 = icmp eq %"class.WTF::StringImpl"* %869, null
  br i1 %870, label %871, label %873

871:                                              ; preds = %868
  store i8* null, i8** %436, align 8
  %872 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %872, i64* %438, align 8
  br label %877

873:                                              ; preds = %868
  store %"class.WTF::StringImpl"* %869, %"class.WTF::StringImpl"** %435, align 8
  %874 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %869, i64 0, i32 1
  %875 = load i32, i32* %874, align 4
  %876 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %869, i64 1
  store %"class.WTF::StringImpl"* %876, %"class.WTF::StringImpl"** %437, align 8
  br label %877

877:                                              ; preds = %871, %873
  %878 = phi i32 [ %875, %873 ], [ 0, %871 ]
  store i32 %878, i32* %439, align 8
  %879 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %828, i64 0, i32 1, i32 0, i32 0, i32 0
  %880 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %879, align 8
  %881 = icmp eq %"class.WTF::StringImpl"* %880, null
  br i1 %881, label %882, label %883

882:                                              ; preds = %877
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %434) #17
  br label %925

883:                                              ; preds = %877
  %884 = call i32 @_ZN3WTF10StringImpl16FindIgnoringCaseERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %880, %"class.WTF::StringView"* nonnull dereferenceable(24) %29, i32 0) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %434) #17
  %885 = icmp eq i32 %884, -1
  br i1 %885, label %925, label %886

886:                                              ; preds = %883
  br i1 %175, label %887, label %905

887:                                              ; preds = %886
  %888 = icmp eq i32 %884, 0
  br i1 %888, label %889, label %925

889:                                              ; preds = %887
  %890 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %879, align 8
  %891 = icmp eq %"class.WTF::StringImpl"* %890, null
  br i1 %891, label %895, label %892

892:                                              ; preds = %889
  %893 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %890, i64 0, i32 1
  %894 = load i32, i32* %893, align 4
  br label %895

895:                                              ; preds = %889, %892
  %896 = phi i32 [ %894, %892 ], [ 0, %889 ]
  %897 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %898 = icmp eq %"class.WTF::StringImpl"* %897, null
  br i1 %898, label %902, label %899

899:                                              ; preds = %895
  %900 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %897, i64 0, i32 1
  %901 = load i32, i32* %900, align 4
  br label %902

902:                                              ; preds = %895, %899
  %903 = phi i32 [ %901, %899 ], [ 0, %895 ]
  %904 = icmp eq i32 %896, %903
  br i1 %904, label %905, label %925

905:                                              ; preds = %902, %886
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %449)
  %906 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %383, i32 0) #17, !noalias !66
  store %"class.WTF::VectorBackedLinkedListNode.3331"* %906, %"class.WTF::VectorBackedLinkedListNode.3331"** %450, align 8, !alias.scope !66
  store %"class.WTF::VectorBackedLinkedList.3327"* %380, %"class.WTF::VectorBackedLinkedList.3327"** %451, align 8, !alias.scope !66
  %907 = load i32, i32* %444, align 4, !noalias !69
  %908 = icmp eq i32 %907, 0
  %909 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %445, align 8, !noalias !69
  %910 = load i32, i32* %446, align 8, !noalias !69
  %911 = zext i32 %910 to i64
  %912 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %909, i64 %911
  br i1 %908, label %922, label %913

913:                                              ; preds = %905
  %914 = icmp eq i32 %910, 0
  br i1 %914, label %922, label %915

915:                                              ; preds = %913, %919
  %916 = phi %"struct.WTF::KeyValuePair.3326"* [ %920, %919 ], [ %909, %913 ]
  %917 = bitcast %"struct.WTF::KeyValuePair.3326"* %916 to i64*
  %918 = load i64, i64* %917, align 8, !noalias !69
  switch i64 %918, label %922 [
    i64 -1, label %919
    i64 0, label %919
  ]

919:                                              ; preds = %915, %915
  %920 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %916, i64 1
  %921 = icmp eq %"struct.WTF::KeyValuePair.3326"* %920, %912
  br i1 %921, label %922, label %915

922:                                              ; preds = %919, %915, %913, %905
  %923 = phi %"struct.WTF::KeyValuePair.3326"* [ %912, %905 ], [ %909, %913 ], [ %916, %915 ], [ %912, %919 ]
  store %"struct.WTF::KeyValuePair.3326"* %923, %"struct.WTF::KeyValuePair.3326"** %452, align 8, !alias.scope !69
  store %"struct.WTF::KeyValuePair.3326"* %912, %"struct.WTF::KeyValuePair.3326"** %453, align 8, !alias.scope !69
  %924 = call { %"class.blink::Member.318"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet.3322"* nonnull %440, %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8 %7, %"class.blink::Node"** nonnull dereferenceable(8) %21, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %449)
  br label %928

925:                                              ; preds = %887, %883, %902, %882
  %926 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %828, i64 1
  %927 = icmp eq %"class.blink::Attribute"* %926, %825
  br i1 %927, label %928, label %827

928:                                              ; preds = %925, %512, %785, %540, %573, %576, %922, %865, %821
  %929 = phi %"class.WTF::StringImpl"* [ %789, %821 ], [ %789, %865 ], [ %789, %922 ], [ %515, %576 ], [ %515, %573 ], [ %515, %540 ], [ %766, %785 ], [ %515, %512 ], [ %789, %925 ]
  %930 = phi %"class.WTF::StringImpl"* [ %791, %821 ], [ %791, %865 ], [ %791, %922 ], [ %514, %576 ], [ %514, %573 ], [ %514, %540 ], [ %768, %785 ], [ %514, %512 ], [ %791, %925 ]
  %931 = phi %"class.WTF::StringImpl"* [ %790, %821 ], [ %790, %865 ], [ %790, %922 ], [ %513, %576 ], [ %513, %573 ], [ %513, %540 ], [ %767, %785 ], [ %513, %512 ], [ %790, %925 ]
  %932 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %933 = bitcast %"class.blink::Node"* %932 to %"class.blink::Element"*
  br label %934

934:                                              ; preds = %928, %796
  %935 = phi %"class.blink::Element"* [ %933, %928 ], [ %792, %796 ]
  %936 = phi %"class.blink::Node"* [ %932, %928 ], [ %797, %796 ]
  %937 = phi %"class.WTF::StringImpl"* [ %929, %928 ], [ %789, %796 ]
  %938 = phi %"class.WTF::StringImpl"* [ %930, %928 ], [ %791, %796 ]
  %939 = phi %"class.WTF::StringImpl"* [ %931, %928 ], [ %790, %796 ]
  %940 = icmp eq %"class.blink::Node"* %936, null
  br i1 %940, label %965, label %941

941:                                              ; preds = %934
  %942 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %936, i64 0, i32 1
  %943 = load i32, i32* %942, align 8
  %944 = and i32 %943, 12
  %945 = icmp eq i32 %944, 0
  br i1 %945, label %946, label %956

946:                                              ; preds = %941
  %947 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* nonnull %935) #17
  %948 = icmp eq %"class.blink::ShadowRoot"* %947, null
  br i1 %948, label %956, label %949

949:                                              ; preds = %946
  %950 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %947, i64 0, i32 4
  %951 = load i32, i32* %950, align 8
  %952 = and i32 %951, 196608
  %953 = icmp ne i32 %952, 131072
  %954 = or i1 %59, %953
  %955 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %947, i64 0, i32 0, i32 0, i32 0
  br i1 %954, label %1010, label %956

956:                                              ; preds = %949, %946, %941
  %957 = load i32, i32* %942, align 8
  %958 = and i32 %957, 2
  %959 = icmp eq i32 %958, 0
  br i1 %959, label %965, label %960

960:                                              ; preds = %956
  %961 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %936, i64 1
  %962 = bitcast %"class.blink::Node"* %961 to %"class.blink::Node"**
  %963 = load %"class.blink::Node"*, %"class.blink::Node"** %962, align 8
  %964 = icmp eq %"class.blink::Node"* %963, null
  br i1 %964, label %965, label %1010

965:                                              ; preds = %960, %956, %934
  br label %966

966:                                              ; preds = %965, %1005
  %967 = phi %"class.blink::Node"* [ %1007, %1005 ], [ %936, %965 ]
  %968 = icmp eq %"class.blink::Node"* %967, %510
  br i1 %968, label %1009, label %969

969:                                              ; preds = %966
  %970 = icmp eq %"class.blink::Node"* %967, null
  br i1 %970, label %991, label %971

971:                                              ; preds = %969
  %972 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %967, i64 0, i32 1
  %973 = load i32, i32* %972, align 8
  %974 = and i32 %973, 12
  %975 = icmp eq i32 %974, 8
  br i1 %975, label %976, label %991

976:                                              ; preds = %971
  %977 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %967, i64 0, i32 3, i32 0, i32 0
  %978 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %977, align 8
  %979 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %978, i64 0, i32 1, i32 0, i32 0
  %980 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %979, align 8
  %981 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %980, i64 0, i32 0
  %982 = icmp eq %"class.blink::Node"* %981, %967
  br i1 %982, label %983, label %991

983:                                              ; preds = %976
  %984 = bitcast %"class.blink::Node"* %967 to %"class.blink::ShadowRoot"*
  %985 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %967, i64 0, i32 2, i32 0, i32 0
  %986 = bitcast %"class.blink::Node"** %985 to %"class.blink::Element"**
  %987 = load %"class.blink::Element"*, %"class.blink::Element"** %986, align 8
  %988 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %987, i64 0, i32 0, i32 1, i32 0, i32 0
  %989 = load %"class.blink::Node"*, %"class.blink::Node"** %988, align 8
  %990 = icmp eq %"class.blink::Node"* %989, null
  br i1 %990, label %991, label %1010

991:                                              ; preds = %983, %976, %971, %969
  %992 = phi i1 [ false, %976 ], [ false, %971 ], [ false, %969 ], [ true, %983 ]
  %993 = phi %"class.blink::ShadowRoot"* [ null, %976 ], [ null, %971 ], [ null, %969 ], [ %984, %983 ]
  %994 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %967, i64 0, i32 5, i32 0, i32 0
  %995 = load %"class.blink::Node"*, %"class.blink::Node"** %994, align 8
  %996 = icmp eq %"class.blink::Node"* %995, null
  br i1 %996, label %997, label %1010

997:                                              ; preds = %991
  br i1 %992, label %998, label %1003

998:                                              ; preds = %997
  %999 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %993, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1000 = bitcast %"class.blink::Node"** %999 to %"class.blink::Element"**
  %1001 = load %"class.blink::Element"*, %"class.blink::Element"** %1000, align 8
  %1002 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1001, i64 0, i32 0
  br label %1005

1003:                                             ; preds = %997
  %1004 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %967) #17
  br label %1005

1005:                                             ; preds = %1003, %998
  %1006 = phi %"class.blink::ContainerNode"* [ %1002, %998 ], [ %1004, %1003 ]
  %1007 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1006, i64 0, i32 0
  %1008 = icmp eq %"class.blink::ContainerNode"* %1006, null
  br i1 %1008, label %1009, label %966

1009:                                             ; preds = %1005, %966
  store %"class.blink::Node"* null, %"class.blink::Node"** %21, align 8
  br label %1013

1010:                                             ; preds = %983, %991, %949, %960
  %1011 = phi %"class.blink::Node"* [ %955, %949 ], [ %963, %960 ], [ %995, %991 ], [ %989, %983 ]
  store %"class.blink::Node"* %1011, %"class.blink::Node"** %21, align 8
  %1012 = icmp eq %"class.blink::Node"* %1011, null
  br i1 %1012, label %1013, label %512

1013:                                             ; preds = %1010, %501, %1009
  %1014 = phi %"class.WTF::StringImpl"* [ %937, %1009 ], [ %505, %501 ], [ %937, %1010 ]
  %1015 = phi %"class.WTF::StringImpl"* [ %938, %1009 ], [ %504, %501 ], [ %938, %1010 ]
  %1016 = phi %"class.WTF::StringImpl"* [ %939, %1009 ], [ %503, %501 ], [ %939, %1010 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %390) #17
  %1017 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %502, i64 1
  %1018 = icmp eq %"class.blink::Member.326"* %1017, %387
  br i1 %1018, label %470, label %501

1019:                                             ; preds = %1118
  %1020 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %376, align 8
  %1021 = load i32, i32* %377, align 4
  %1022 = zext i32 %1021 to i64
  %1023 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %1020, i64 %1022
  %1024 = icmp eq i32 %1021, 0
  br i1 %1024, label %1121, label %1025

1025:                                             ; preds = %1019
  %1026 = bitcast %"class.blink::DummyExceptionStateForTesting"* %33 to i8*
  %1027 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %33, i64 0, i32 0, i32 0
  %1028 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %33, i64 0, i32 0, i32 1, i32 0
  %1029 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %33, i64 0, i32 0, i32 1, i32 1
  %1030 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %33, i64 0, i32 0, i32 1, i32 2
  %1031 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %33, i64 0, i32 0, i32 5, i32 0, i32 0
  %1032 = bitcast %"class.WTF::StringImpl"** %1031 to i8*
  %1033 = bitcast i8** %1030 to i8*
  %1034 = bitcast %"class.WTF::AtomicString"* %34 to i8*
  %1035 = bitcast %"class.WTF::AtomicString"* %34 to i64*
  %1036 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %33, i64 0, i32 0
  %1037 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 0, i32 0, i32 0, i32 0
  %1038 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %33, i64 0, i32 0, i32 4
  %1039 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2098", %"class.blink::HeapLinkedHashSet.2098"* %20, i64 0, i32 0
  %1040 = bitcast %"class.blink::Element"** %35 to i8*
  %1041 = bitcast %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %13 to i8*
  %1042 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %13, i64 0, i32 0, i32 0
  %1043 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %13, i64 0, i32 0, i32 1
  %1044 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2098", %"class.blink::HeapLinkedHashSet.2098"* %20, i64 0, i32 0, i32 0, i32 0, i32 2
  %1045 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2098", %"class.blink::HeapLinkedHashSet.2098"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %1046 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2098", %"class.blink::HeapLinkedHashSet.2098"* %20, i64 0, i32 0, i32 0, i32 0, i32 1
  %1047 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %13, i64 0, i32 1, i32 0, i32 0
  %1048 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %13, i64 0, i32 1, i32 0, i32 1
  br label %1214

1049:                                             ; preds = %476, %1118
  %1050 = phi %"class.blink::Member.326"* [ %471, %476 ], [ %1119, %1118 ]
  %1051 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %1050, i64 0, i32 0, i32 0
  %1052 = load %"class.blink::Document"*, %"class.blink::Document"** %1051, align 8
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %477) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %477, i8 -86, i64 56, i1 false)
  store i16 1, i16* %479, align 8
  store i16 0, i16* %480, align 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %483, i8 0, i64 16, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %484, i8 0, i64 36, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %478, align 8
  %1053 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1052, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %485) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %500, i8 0, i64 24, i1 false)
  %1054 = call %"class.blink::XPathResult"* @_ZN5blink22DocumentXPathEvaluator8evaluateERNS_8DocumentERKN3WTF6StringEPNS_4NodeEPNS_15XPathNSResolverEtRKNS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::Document"* dereferenceable(2848) %1052, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::Node"* %1053, %"class.blink::XPathNSResolver"* null, i16 zeroext 7, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %31, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %486) #17
  %1055 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %487, align 8
  %1056 = icmp eq %"class.blink::DOMWrapperWorld"* %1055, null
  br i1 %1056, label %1064, label %1057

1057:                                             ; preds = %1049
  %1058 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %1055, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %1058) #17
  %1059 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %1055, i64 0, i32 0, i32 0, i32 0, i32 0
  %1060 = load i32, i32* %1059, align 4
  %1061 = icmp eq i32 %1060, 0
  br i1 %1061, label %1062, label %1064

1062:                                             ; preds = %1057
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %1055) #17
  %1063 = bitcast %"class.blink::DOMWrapperWorld"* %1055 to i8*
  call void @free(i8* %1063) #17
  br label %1064

1064:                                             ; preds = %1049, %1057, %1062
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %485) #17
  %1065 = load i32, i32* %488, align 8
  %1066 = icmp eq i32 %1065, 0
  %1067 = icmp ne %"class.blink::XPathResult"* %1054, null
  %1068 = and i1 %1067, %1066
  br i1 %1068, label %1069, label %1118

1069:                                             ; preds = %1064
  %1070 = call i32 @_ZNK5blink11XPathResult14snapshotLengthERNS_14ExceptionStateE(%"class.blink::XPathResult"* nonnull %1054, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %486) #17
  %1071 = load i32, i32* %488, align 8
  %1072 = icmp eq i32 %1071, 0
  %1073 = icmp ne i32 %1070, 0
  %1074 = and i1 %1073, %1072
  br i1 %1074, label %1075, label %1118

1075:                                             ; preds = %1069, %1109
  %1076 = phi i32 [ %1112, %1109 ], [ 0, %1069 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %489) #17
  store %"class.blink::Node"* inttoptr (i64 -6148914691236517206 to %"class.blink::Node"*), %"class.blink::Node"** %32, align 8
  %1077 = call %"class.blink::Node"* @_ZN5blink11XPathResult12snapshotItemEjRNS_14ExceptionStateE(%"class.blink::XPathResult"* nonnull %1054, i32 %1076, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %486) #17
  store %"class.blink::Node"* %1077, %"class.blink::Node"** %32, align 8
  %1078 = load i32, i32* %488, align 8
  %1079 = icmp eq i32 %1078, 0
  br i1 %1079, label %1080, label %1117

1080:                                             ; preds = %1075
  %1081 = bitcast %"class.blink::Node"* %1077 to i32 (%"class.blink::Node"*)***
  %1082 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %1081, align 8
  %1083 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %1082, i64 30
  %1084 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %1083, align 8
  %1085 = call i32 %1084(%"class.blink::Node"* %1077) #17
  %1086 = icmp eq i32 %1085, 2
  br i1 %1086, label %1087, label %1092

1087:                                             ; preds = %1080
  %1088 = load %"class.blink::Attr"*, %"class.blink::Attr"** %490, align 8
  %1089 = getelementptr inbounds %"class.blink::Attr", %"class.blink::Attr"* %1088, i64 0, i32 1, i32 0, i32 0
  %1090 = load %"class.blink::Element"*, %"class.blink::Element"** %1089, align 8
  %1091 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1090, i64 0, i32 0, i32 0
  store %"class.blink::Node"* %1091, %"class.blink::Node"** %32, align 8
  br label %1092

1092:                                             ; preds = %1087, %1080
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %492)
  %1093 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %383, i32 0) #17, !noalias !72
  store %"class.WTF::VectorBackedLinkedListNode.3331"* %1093, %"class.WTF::VectorBackedLinkedListNode.3331"** %493, align 8, !alias.scope !72
  store %"class.WTF::VectorBackedLinkedList.3327"* %380, %"class.WTF::VectorBackedLinkedList.3327"** %494, align 8, !alias.scope !72
  %1094 = load i32, i32* %495, align 4, !noalias !75
  %1095 = icmp eq i32 %1094, 0
  %1096 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %496, align 8, !noalias !75
  %1097 = load i32, i32* %497, align 8, !noalias !75
  %1098 = zext i32 %1097 to i64
  %1099 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %1096, i64 %1098
  br i1 %1095, label %1109, label %1100

1100:                                             ; preds = %1092
  %1101 = icmp eq i32 %1097, 0
  br i1 %1101, label %1109, label %1102

1102:                                             ; preds = %1100, %1106
  %1103 = phi %"struct.WTF::KeyValuePair.3326"* [ %1107, %1106 ], [ %1096, %1100 ]
  %1104 = bitcast %"struct.WTF::KeyValuePair.3326"* %1103 to i64*
  %1105 = load i64, i64* %1104, align 8, !noalias !75
  switch i64 %1105, label %1109 [
    i64 -1, label %1106
    i64 0, label %1106
  ]

1106:                                             ; preds = %1102, %1102
  %1107 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %1103, i64 1
  %1108 = icmp eq %"struct.WTF::KeyValuePair.3326"* %1107, %1099
  br i1 %1108, label %1109, label %1102

1109:                                             ; preds = %1102, %1106, %1092, %1100
  %1110 = phi %"struct.WTF::KeyValuePair.3326"* [ %1099, %1092 ], [ %1096, %1100 ], [ %1103, %1102 ], [ %1099, %1106 ]
  store %"struct.WTF::KeyValuePair.3326"* %1110, %"struct.WTF::KeyValuePair.3326"** %498, align 8, !alias.scope !75
  store %"struct.WTF::KeyValuePair.3326"* %1099, %"struct.WTF::KeyValuePair.3326"** %499, align 8, !alias.scope !75
  %1111 = call { %"class.blink::Member.318"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet.3322"* nonnull %491, %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8 %9, %"class.blink::Node"** nonnull dereferenceable(8) %32, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %492)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %489) #17
  %1112 = add nuw i32 %1076, 1
  %1113 = load i32, i32* %488, align 8
  %1114 = icmp eq i32 %1113, 0
  %1115 = icmp ult i32 %1112, %1070
  %1116 = and i1 %1115, %1114
  br i1 %1116, label %1075, label %1118

1117:                                             ; preds = %1075
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %489) #17
  br label %1118

1118:                                             ; preds = %1109, %1064, %1117, %1069
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %30) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %477) #17
  %1119 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %1050, i64 1
  %1120 = icmp eq %"class.blink::Member.326"* %1119, %474
  br i1 %1120, label %1019, label %1049

1121:                                             ; preds = %1307, %374, %470, %1019
  %1122 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory16CreateIdentifierEv() #17
  %1123 = ptrtoint %"class.WTF::StringImpl"* %1122 to i64
  %1124 = bitcast %"class.WTF::String"* %4 to i64*
  %1125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %1126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1125, align 8
  store i64 %1123, i64* %1124, align 8
  %1127 = icmp eq %"class.WTF::StringImpl"* %1126, null
  br i1 %1127, label %1141, label %1128

1128:                                             ; preds = %1121
  %1129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1130 = load atomic i32, i32* %1129 monotonic, align 4
  %1131 = and i32 %1130, 2
  %1132 = icmp eq i32 %1131, 0
  %1133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1126, i64 0, i32 0
  %1134 = load i32, i32* %1133, align 4
  br i1 %1132, label %1135, label %1137

1135:                                             ; preds = %1128
  %1136 = add i32 %1134, -1
  store i32 %1136, i32* %1133, align 4
  br label %1137

1137:                                             ; preds = %1135, %1128
  %1138 = phi i32 [ %1136, %1135 ], [ %1134, %1128 ]
  %1139 = icmp eq i32 %1138, 0
  br i1 %1139, label %1140, label %1141

1140:                                             ; preds = %1137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1126) #17
  br label %1141

1141:                                             ; preds = %1140, %1137, %1121
  %1142 = bitcast %"class.blink::HeapVector.3335"** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1142) #17
  %1143 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %1144 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %1145 = icmp eq i32 %1144, 0
  br i1 %1145, label %1146, label %1149

1146:                                             ; preds = %1141
  %1147 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %1148 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %1147, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %1149

1149:                                             ; preds = %1146, %1141
  %1150 = phi i32 [ %1144, %1141 ], [ %1148, %1146 ]
  %1151 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %1143, i64 0, i32 19, i64 0
  %1152 = bitcast %"class.blink::BaseArena"** %1151 to %"class.blink::NormalPageArena"**
  %1153 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %1152, align 8
  %1154 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %1153, i64 0, i32 4
  %1155 = load i64, i64* %1154, align 8
  %1156 = icmp ult i64 %1155, 24
  br i1 %1156, label %1187, label %1157, !prof !2

1157:                                             ; preds = %1149
  %1158 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %1153, i64 0, i32 3
  %1159 = load i8*, i8** %1158, align 8
  %1160 = getelementptr inbounds i8, i8* %1159, i64 24
  store i8* %1160, i8** %1158, align 8
  %1161 = add i64 %1155, -24
  store i64 %1161, i64* %1154, align 8
  %1162 = bitcast i8* %1159 to i32*
  store i32 0, i32* %1162, align 4
  %1163 = getelementptr inbounds i8, i8* %1159, i64 4
  %1164 = bitcast i8* %1163 to i16*
  %1165 = trunc i32 %1150 to i16
  %1166 = shl i16 %1165, 2
  store atomic i16 %1166, i16* %1164 monotonic, align 2
  %1167 = getelementptr inbounds i8, i8* %1159, i64 6
  %1168 = bitcast i8* %1167 to i16*
  store i16 12, i16* %1168, align 2
  %1169 = ptrtoint i8* %1159 to i64
  %1170 = and i64 %1169, -131072
  %1171 = inttoptr i64 %1170 to i8*
  %1172 = getelementptr inbounds i8, i8* %1171, i64 4400
  %1173 = bitcast i8* %1172 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %1174 = bitcast i8* %1172 to i64*
  %1175 = load i64, i64* %1174, align 16
  %1176 = sub i64 %1169, %1175
  %1177 = lshr i64 %1176, 3
  %1178 = lshr i64 %1176, 6
  %1179 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %1173, i64 0, i32 0, i32 1, i64 %1178
  %1180 = load i8, i8* %1179, align 1
  %1181 = trunc i64 %1177 to i32
  %1182 = and i32 %1181, 7
  %1183 = shl i32 1, %1182
  %1184 = trunc i32 %1183 to i8
  %1185 = or i8 %1180, %1184
  store atomic i8 %1185, i8* %1179 release, align 1
  %1186 = getelementptr inbounds i8, i8* %1159, i64 8
  br label %1190

1187:                                             ; preds = %1149
  %1188 = zext i32 %1150 to i64
  %1189 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %1153, i64 24, i64 %1188) #17
  br label %1190

1190:                                             ; preds = %1157, %1187
  %1191 = phi i8* [ %1186, %1157 ], [ %1189, %1187 ]
  %1192 = getelementptr inbounds i8, i8* %1191, i64 -4
  %1193 = bitcast i8* %1192 to i16*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1191, i8 0, i64 16, i1 false) #17
  %1194 = load atomic i16, i16* %1193 monotonic, align 2
  %1195 = or i16 %1194, 1
  store atomic i16 %1195, i16* %1193 release, align 2
  %1196 = bitcast %"class.blink::HeapVector.3335"** %36 to i8**
  store i8* %1191, i8** %1196, align 8
  %1197 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 15, i32 0, i32 0
  %1198 = call { %"struct.WTF::KeyValuePair.2796"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERS1_PS8_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.2794"* %1197, %"class.WTF::String"* dereferenceable(8) %4, %"class.blink::HeapVector.3335"** nonnull dereferenceable(8) %36) #17
  %1199 = extractvalue { %"struct.WTF::KeyValuePair.2796"*, i8 } %1198, 0
  %1200 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %1199, i64 0, i32 1, i32 0, i32 0
  %1201 = load %"class.blink::HeapVector.3335"*, %"class.blink::HeapVector.3335"** %1200, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1142) #17
  %1202 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2098", %"class.blink::HeapLinkedHashSet.2098"* %20, i64 0, i32 0, i32 1, i32 0
  %1203 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %1202, i32 0) #17, !noalias !78
  %1204 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %1203, i64 0, i32 1
  %1205 = load i32, i32* %1204, align 4, !noalias !78
  %1206 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %1202, i32 %1205) #17, !noalias !78
  %1207 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %1202, i32 0) #17, !noalias !81
  %1208 = icmp eq %"class.WTF::VectorBackedLinkedListNode.3331"* %1206, %1207
  br i1 %1208, label %1310, label %1209

1209:                                             ; preds = %1190
  %1210 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %1201, i64 0, i32 0, i32 0, i32 0, i32 2
  %1211 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %1201, i64 0, i32 0, i32 0, i32 0, i32 1
  %1212 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %1201, i64 0, i32 0, i32 0, i32 0, i32 0
  %1213 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %1201, i64 0, i32 0
  br label %1345

1214:                                             ; preds = %1025, %1307
  %1215 = phi %"class.blink::Member.326"* [ %1020, %1025 ], [ %1308, %1307 ]
  %1216 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %1215, i64 0, i32 0, i32 0
  %1217 = load %"class.blink::Document"*, %"class.blink::Document"** %1216, align 8
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1026) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1026, i8 -86, i64 56, i1 false)
  store i16 1, i16* %1028, align 8
  store i16 0, i16* %1029, align 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %1032, i8 0, i64 16, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %1033, i8 0, i64 36, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1027, align 8
  %1218 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1217, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1034) #17
  %1219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %1220 = icmp eq %"class.WTF::StringImpl"* %1219, null
  br i1 %1220, label %1244, label %1221

1221:                                             ; preds = %1214
  %1222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1219, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1223 = load atomic i32, i32* %1222 acquire, align 4
  %1224 = and i32 %1223, 4
  %1225 = icmp eq i32 %1224, 0
  br i1 %1225, label %1242, label %1226

1226:                                             ; preds = %1221
  %1227 = load atomic i32, i32* %1222 monotonic, align 4
  %1228 = and i32 %1227, 2
  %1229 = icmp eq i32 %1228, 0
  br i1 %1229, label %1230, label %1244

1230:                                             ; preds = %1226
  %1231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1219, i64 0, i32 0
  %1232 = load i32, i32* %1231, align 4
  %1233 = zext i32 %1232 to i33
  %1234 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1233, i33 1) #17
  %1235 = extractvalue { i33, i1 } %1234, 1
  %1236 = extractvalue { i33, i1 } %1234, 0
  %1237 = icmp slt i33 %1236, 0
  %1238 = or i1 %1235, %1237
  br i1 %1238, label %1239, label %1240, !prof !2

1239:                                             ; preds = %1230
  call void @llvm.trap() #17
  unreachable

1240:                                             ; preds = %1230
  %1241 = trunc i33 %1236 to i32
  store i32 %1241, i32* %1231, align 4
  br label %1244

1242:                                             ; preds = %1221
  %1243 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %1219) #17
  br label %1244

1244:                                             ; preds = %1214, %1226, %1240, %1242
  %1245 = phi %"class.WTF::StringImpl"* [ %1243, %1242 ], [ %1219, %1226 ], [ %1219, %1240 ], [ null, %1214 ]
  %1246 = ptrtoint %"class.WTF::StringImpl"* %1245 to i64
  store i64 %1246, i64* %1035, align 8
  %1247 = call %"class.blink::StaticNodeTypeList"* @_ZN5blink13ContainerNode16QuerySelectorAllERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %1218, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %34, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %1036) #17
  %1248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1037, align 8
  %1249 = icmp eq %"class.WTF::StringImpl"* %1248, null
  br i1 %1249, label %1263, label %1250

1250:                                             ; preds = %1244
  %1251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1252 = load atomic i32, i32* %1251 monotonic, align 4
  %1253 = and i32 %1252, 2
  %1254 = icmp eq i32 %1253, 0
  %1255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1248, i64 0, i32 0
  %1256 = load i32, i32* %1255, align 4
  br i1 %1254, label %1257, label %1259

1257:                                             ; preds = %1250
  %1258 = add i32 %1256, -1
  store i32 %1258, i32* %1255, align 4
  br label %1259

1259:                                             ; preds = %1257, %1250
  %1260 = phi i32 [ %1258, %1257 ], [ %1256, %1250 ]
  %1261 = icmp eq i32 %1260, 0
  br i1 %1261, label %1262, label %1263

1262:                                             ; preds = %1259
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1248) #17
  br label %1263

1263:                                             ; preds = %1244, %1259, %1262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1034) #17
  %1264 = load i32, i32* %1038, align 8
  %1265 = icmp eq i32 %1264, 0
  %1266 = icmp ne %"class.blink::StaticNodeTypeList"* %1247, null
  %1267 = and i1 %1266, %1265
  br i1 %1267, label %1268, label %1307

1268:                                             ; preds = %1263
  %1269 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %1247, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %1270 = load i32, i32* %1269, align 4
  %1271 = icmp eq i32 %1270, 0
  br i1 %1271, label %1307, label %1272

1272:                                             ; preds = %1268
  %1273 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %1247, i64 0, i32 1, i32 0
  br label %1274

1274:                                             ; preds = %1305, %1272
  %1275 = phi i32 [ %1270, %1272 ], [ %1306, %1305 ]
  %1276 = phi i32 [ 0, %1272 ], [ %1303, %1305 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1040) #17
  %1277 = icmp ugt i32 %1275, %1276
  br i1 %1277, label %1278, label %1282

1278:                                             ; preds = %1274
  %1279 = call dereferenceable(8) %"class.blink::Member.343"* @_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.368"* %1273, i32 %1276) #17
  %1280 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %1279, i64 0, i32 0, i32 0
  %1281 = load %"class.blink::Element"*, %"class.blink::Element"** %1280, align 8
  br label %1282

1282:                                             ; preds = %1274, %1278
  %1283 = phi %"class.blink::Element"* [ %1281, %1278 ], [ null, %1274 ]
  store %"class.blink::Element"* %1283, %"class.blink::Element"** %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1041)
  %1284 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %383, i32 0) #17, !noalias !84
  store %"class.WTF::VectorBackedLinkedListNode.3331"* %1284, %"class.WTF::VectorBackedLinkedListNode.3331"** %1042, align 8, !alias.scope !84
  store %"class.WTF::VectorBackedLinkedList.3327"* %380, %"class.WTF::VectorBackedLinkedList.3327"** %1043, align 8, !alias.scope !84
  %1285 = load i32, i32* %1044, align 4, !noalias !87
  %1286 = icmp eq i32 %1285, 0
  %1287 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %1045, align 8, !noalias !87
  %1288 = load i32, i32* %1046, align 8, !noalias !87
  %1289 = zext i32 %1288 to i64
  %1290 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %1287, i64 %1289
  br i1 %1286, label %1300, label %1291

1291:                                             ; preds = %1282
  %1292 = icmp eq i32 %1288, 0
  br i1 %1292, label %1300, label %1293

1293:                                             ; preds = %1291, %1297
  %1294 = phi %"struct.WTF::KeyValuePair.3326"* [ %1298, %1297 ], [ %1287, %1291 ]
  %1295 = bitcast %"struct.WTF::KeyValuePair.3326"* %1294 to i64*
  %1296 = load i64, i64* %1295, align 8, !noalias !87
  switch i64 %1296, label %1300 [
    i64 -1, label %1297
    i64 0, label %1297
  ]

1297:                                             ; preds = %1293, %1293
  %1298 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %1294, i64 1
  %1299 = icmp eq %"struct.WTF::KeyValuePair.3326"* %1298, %1290
  br i1 %1299, label %1300, label %1293

1300:                                             ; preds = %1293, %1297, %1282, %1291
  %1301 = phi %"struct.WTF::KeyValuePair.3326"* [ %1290, %1282 ], [ %1287, %1291 ], [ %1294, %1293 ], [ %1290, %1297 ]
  store %"struct.WTF::KeyValuePair.3326"* %1301, %"struct.WTF::KeyValuePair.3326"** %1047, align 8, !alias.scope !87
  store %"struct.WTF::KeyValuePair.3326"* %1290, %"struct.WTF::KeyValuePair.3326"** %1048, align 8, !alias.scope !87
  %1302 = call { %"class.blink::Member.318"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIPNS1_7ElementEEENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet.3322"* nonnull %1039, %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8 %13, %"class.blink::Element"** nonnull dereferenceable(8) %35, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1041)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1040) #17
  %1303 = add nuw i32 %1276, 1
  %1304 = icmp eq i32 %1303, %1270
  br i1 %1304, label %1307, label %1305

1305:                                             ; preds = %1300
  %1306 = load i32, i32* %1269, align 4
  br label %1274

1307:                                             ; preds = %1300, %1263, %1268
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %33) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1026) #17
  %1308 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %1215, i64 1
  %1309 = icmp eq %"class.blink::Member.326"* %1308, %1023
  br i1 %1309, label %1121, label %1214

1310:                                             ; preds = %1367, %1190
  %1311 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %1201, i64 0, i32 0, i32 0, i32 0, i32 2
  %1312 = load i32, i32* %1311, align 4
  store i32 %1312, i32* %5, align 4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %379) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %375) #17
  %1313 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %1314 = icmp eq %"class.WTF::StringImpl"* %1313, null
  br i1 %1314, label %1328, label %1315

1315:                                             ; preds = %1310
  %1316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1313, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1317 = load atomic i32, i32* %1316 monotonic, align 4
  %1318 = and i32 %1317, 2
  %1319 = icmp eq i32 %1318, 0
  %1320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1313, i64 0, i32 0
  %1321 = load i32, i32* %1320, align 4
  br i1 %1319, label %1322, label %1324

1322:                                             ; preds = %1315
  %1323 = add i32 %1321, -1
  store i32 %1323, i32* %1320, align 4
  br label %1324

1324:                                             ; preds = %1322, %1315
  %1325 = phi i32 [ %1323, %1322 ], [ %1321, %1315 ]
  %1326 = icmp eq i32 %1325, 0
  br i1 %1326, label %1327, label %1328

1327:                                             ; preds = %1324
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1313) #17
  br label %1328

1328:                                             ; preds = %1310, %1324, %1327
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #17
  %1329 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %1330 = icmp eq %"class.WTF::StringImpl"* %1329, null
  br i1 %1330, label %1344, label %1331

1331:                                             ; preds = %1328
  %1332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1333 = load atomic i32, i32* %1332 monotonic, align 4
  %1334 = and i32 %1333, 2
  %1335 = icmp eq i32 %1334, 0
  %1336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1329, i64 0, i32 0
  %1337 = load i32, i32* %1336, align 4
  br i1 %1335, label %1338, label %1340

1338:                                             ; preds = %1331
  %1339 = add i32 %1337, -1
  store i32 %1339, i32* %1336, align 4
  br label %1340

1340:                                             ; preds = %1338, %1331
  %1341 = phi i32 [ %1339, %1338 ], [ %1337, %1331 ]
  %1342 = icmp eq i32 %1341, 0
  br i1 %1342, label %1343, label %1344

1343:                                             ; preds = %1340
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1329) #17
  br label %1344

1344:                                             ; preds = %1328, %1340, %1343
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #17
  br label %1372

1345:                                             ; preds = %1209, %1367
  %1346 = phi %"class.WTF::VectorBackedLinkedListNode.3331"* [ %1206, %1209 ], [ %1370, %1367 ]
  %1347 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %1346, i64 0, i32 2
  %1348 = load i32, i32* %1210, align 4
  %1349 = load i32, i32* %1211, align 8
  %1350 = icmp eq i32 %1348, %1349
  br i1 %1350, label %1366, label %1351, !prof !2

1351:                                             ; preds = %1345
  %1352 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %1212, align 8
  %1353 = zext i32 %1348 to i64
  %1354 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %1352, i64 %1353
  %1355 = bitcast %"class.blink::Member.318"* %1347 to i64*
  %1356 = load i64, i64* %1355, align 8
  %1357 = bitcast %"class.blink::Member.318"* %1354 to i64*
  store atomic i64 %1356, i64* %1357 monotonic, align 8
  %1358 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1359 = icmp eq i32 %1358, 0
  br i1 %1359, label %1363, label %1360

1360:                                             ; preds = %1351
  %1361 = inttoptr i64 %1356 to i8*
  %1362 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1361) #17
  br label %1363

1363:                                             ; preds = %1360, %1351
  %1364 = load i32, i32* %1210, align 4
  %1365 = add i32 %1364, 1
  store i32 %1365, i32* %1210, align 4
  br label %1367

1366:                                             ; preds = %1345
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.3338"* %1213, %"class.blink::Member.318"* dereferenceable(8) %1347) #17
  br label %1367

1367:                                             ; preds = %1363, %1366
  %1368 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %1346, i64 0, i32 1
  %1369 = load i32, i32* %1368, align 4
  %1370 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %1202, i32 %1369) #17
  %1371 = icmp eq %"class.WTF::VectorBackedLinkedListNode.3331"* %1370, %1207
  br i1 %1371, label %1310, label %1345

1372:                                             ; preds = %50, %40, %1344
  ret void
}

declare zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.blink::XPathResult"* @_ZN5blink22DocumentXPathEvaluator8evaluateERNS_8DocumentERKN3WTF6StringEPNS_4NodeEPNS_15XPathNSResolverEtRKNS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8), %"class.blink::Node"*, %"class.blink::XPathNSResolver"*, i16 zeroext, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare i32 @_ZNK5blink11XPathResult14snapshotLengthERNS_14ExceptionStateE(%"class.blink::XPathResult"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink11XPathResult12snapshotItemEjRNS_14ExceptionStateE(%"class.blink::XPathResult"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory16CreateIdentifierEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent13performSearchERKN3WTF6StringEN5crdtp6detail10ValueMaybeIbEEPS2_Pi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly, %"class.WTF::String"*, i32* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %8 = bitcast i8* %7 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent13performSearchERKN3WTF6StringEN5crdtp6detail10ValueMaybeIbEEPS2_Pi(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %8, %"class.WTF::String"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe.3427"* %3, %"class.WTF::String"* %4, i32* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent16getSearchResultsERKN3WTF6StringEiiPNSt3__110unique_ptrINS5_6vectorIiNS5_9allocatorIiEEEENS5_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.std::__1::unique_ptr.3450"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 15, i32 0
  %10 = getelementptr inbounds %"class.WTF::HashMap.2793", %"class.WTF::HashMap.2793"* %9, i64 0, i32 0
  %11 = tail call { %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.2794"* %10, %"class.WTF::String"* dereferenceable(8) %2) #17
  %12 = extractvalue { %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"* } %11, 0
  %13 = getelementptr inbounds %"class.WTF::HashMap.2793", %"class.WTF::HashMap.2793"* %9, i64 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 15, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %14, i64 %17
  %19 = icmp eq %"struct.WTF::KeyValuePair.2796"* %12, %18
  br i1 %19, label %20, label %32

20:                                               ; preds = %6
  %21 = tail call i8* @_Znwm(i64 48) #18
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 37, i64 -9223372036854775760>, <2 x i64>* %24, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29, i64 0, i64 0), i64 37, i1 false) #17
  %25 = getelementptr inbounds i8, i8* %21, i64 37
  store i8 0, i8* %25, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %26 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %152

30:                                               ; preds = %20
  %31 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %31) #18
  br label %152

32:                                               ; preds = %6
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %12, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::HeapVector.3335"*, %"class.blink::HeapVector.3335"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %34, i64 0, i32 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %3, -1
  %38 = icmp sge i32 %36, %4
  %39 = and i1 %37, %38
  %40 = icmp slt i32 %3, %4
  %41 = and i1 %40, %39
  br i1 %41, label %54, label %42

42:                                               ; preds = %32
  %43 = tail call i8* @_Znwm(i64 32) #18
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %43, i8** %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = bitcast i64* %45 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %46, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.30, i64 0, i64 0), i64 27, i1 false) #17
  %47 = getelementptr inbounds i8, i8* %43, i64 27
  store i8 0, i8* %47, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %8) #17
  %48 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %152

52:                                               ; preds = %42
  %53 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %53) #18
  br label %152

54:                                               ; preds = %32
  %55 = tail call i8* @_Znwm(i64 24) #18
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 24, i1 false) #17
  %56 = ptrtoint i8* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.3450", %"class.std::__1::unique_ptr.3450"* %5, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.std::__1::vector.2926"*, %"class.std::__1::vector.2926"** %57, align 8
  %59 = bitcast %"class.std::__1::unique_ptr.3450"* %5 to i64*
  store i64 %56, i64* %59, align 8
  %60 = icmp eq %"class.std::__1::vector.2926"* %58, null
  br i1 %60, label %72, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %58, i64 0, i32 0, i32 0
  %63 = load i32*, i32** %62, align 8
  %64 = icmp eq i32* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = ptrtoint i32* %63 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %58, i64 0, i32 0, i32 1
  %68 = bitcast i32** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast i32* %63 to i8*
  tail call void @_ZdlPv(i8* %69) #18
  br label %70

70:                                               ; preds = %65, %61
  %71 = bitcast %"class.std::__1::vector.2926"* %58 to i8*
  tail call void @_ZdlPv(i8* %71) #18
  br label %72

72:                                               ; preds = %54, %70
  br label %74

73:                                               ; preds = %149
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %152

74:                                               ; preds = %72, %149
  %75 = phi i32 [ %150, %149 ], [ %3, %72 ]
  %76 = load %"class.std::__1::vector.2926"*, %"class.std::__1::vector.2926"** %57, align 8
  %77 = load %"class.blink::HeapVector.3335"*, %"class.blink::HeapVector.3335"** %33, align 8
  %78 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %77, i64 0, i32 0
  %79 = tail call dereferenceable(8) %"class.blink::Member.318"* @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3338"* %78, i32 %75) #17
  %80 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %79, i64 0, i32 0, i32 0
  %81 = load %"class.blink::Node"*, %"class.blink::Node"** %80, align 8
  %82 = tail call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* %81)
  %83 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %76, i64 0, i32 0, i32 1
  %84 = load i32*, i32** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %76, i64 0, i32 0, i32 2, i32 0, i32 0
  %86 = load i32*, i32** %85, align 8
  %87 = icmp ult i32* %84, %86
  %88 = ptrtoint i32* %86 to i64
  br i1 %87, label %89, label %93

89:                                               ; preds = %74
  store i32 %82, i32* %84, align 4
  %90 = getelementptr inbounds i32, i32* %84, i64 1
  %91 = ptrtoint i32* %90 to i64
  %92 = bitcast i32** %83 to i64*
  store i64 %91, i64* %92, align 8
  br label %149

93:                                               ; preds = %74
  %94 = ptrtoint i32* %84 to i64
  %95 = bitcast i32** %83 to i64*
  %96 = bitcast %"class.std::__1::vector.2926"* %76 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %94, %97
  %99 = ashr exact i64 %98, 2
  %100 = add nsw i64 %99, 1
  %101 = icmp ugt i64 %100, 4611686018427387903
  br i1 %101, label %102, label %104

102:                                              ; preds = %93
  %103 = bitcast %"class.std::__1::vector.2926"* %76 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %103) #19
  unreachable

104:                                              ; preds = %93
  %105 = bitcast i32** %85 to i64*
  %106 = sub i64 %88, %97
  %107 = ashr exact i64 %106, 2
  %108 = icmp ult i64 %107, 2305843009213693951
  br i1 %108, label %109, label %117

109:                                              ; preds = %104
  %110 = ashr exact i64 %106, 1
  %111 = icmp ult i64 %110, %100
  %112 = select i1 %111, i64 %100, i64 %110
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %122, label %114

114:                                              ; preds = %109
  %115 = icmp ugt i64 %112, 4611686018427387903
  br i1 %115, label %116, label %117

116:                                              ; preds = %114
  tail call void @abort() #19
  unreachable

117:                                              ; preds = %114, %104
  %118 = phi i64 [ %112, %114 ], [ 4611686018427387903, %104 ]
  %119 = shl i64 %118, 2
  %120 = tail call i8* @_Znwm(i64 %119) #18
  %121 = bitcast i8* %120 to i32*
  br label %122

122:                                              ; preds = %117, %109
  %123 = phi i64 [ %118, %117 ], [ 0, %109 ]
  %124 = phi i32* [ %121, %117 ], [ null, %109 ]
  %125 = getelementptr inbounds i32, i32* %124, i64 %99
  %126 = getelementptr inbounds i32, i32* %124, i64 %123
  %127 = ptrtoint i32* %126 to i64
  store i32 %82, i32* %125, align 4
  %128 = getelementptr inbounds i32, i32* %125, i64 1
  %129 = ptrtoint i32* %128 to i64
  %130 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %76, i64 0, i32 0, i32 0
  %131 = load i32*, i32** %130, align 8
  %132 = load i64, i64* %95, align 8
  %133 = ptrtoint i32* %131 to i64
  %134 = sub i64 %132, %133
  %135 = ashr exact i64 %134, 2
  %136 = sub nsw i64 0, %135
  %137 = getelementptr inbounds i32, i32* %125, i64 %136
  %138 = ptrtoint i32* %137 to i64
  %139 = icmp sgt i64 %134, 0
  br i1 %139, label %140, label %144

140:                                              ; preds = %122
  %141 = bitcast i32* %137 to i8*
  %142 = bitcast i32* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %141, i8* align 4 %142, i64 %134, i1 false) #17
  %143 = load i32*, i32** %130, align 8
  br label %144

144:                                              ; preds = %140, %122
  %145 = phi i32* [ %131, %122 ], [ %143, %140 ]
  store i64 %138, i64* %96, align 8
  store i64 %129, i64* %95, align 8
  store i64 %127, i64* %105, align 8
  %146 = icmp eq i32* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  %148 = bitcast i32* %145 to i8*
  tail call void @_ZdlPv(i8* %148) #18
  br label %149

149:                                              ; preds = %89, %144, %147
  %150 = add i32 %75, 1
  %151 = icmp eq i32 %150, %4
  br i1 %151, label %73, label %74

152:                                              ; preds = %52, %42, %30, %20, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent16getSearchResultsERKN3WTF6StringEiiPNSt3__110unique_ptrINS5_6vectorIiNS5_9allocatorIiEEEENS5_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.std::__1::unique_ptr.3450"* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %8 = bitcast i8* %7 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent16getSearchResultsERKN3WTF6StringEiiPNSt3__110unique_ptrINS5_6vectorIiNS5_9allocatorIiEEEENS5_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %8, %"class.WTF::String"* dereferenceable(8) %2, i32 %3, i32 %4, %"class.std::__1::unique_ptr.3450"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent20discardSearchResultsERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 15, i32 0
  %5 = getelementptr inbounds %"class.WTF::HashMap.2793", %"class.WTF::HashMap.2793"* %4, i64 0, i32 0
  %6 = tail call { %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.2794"* %5, %"class.WTF::String"* dereferenceable(8) %2) #17
  %7 = extractvalue { %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"* } %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.2793", %"class.WTF::HashMap.2793"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 15, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %9, i64 %12
  %14 = icmp eq %"struct.WTF::KeyValuePair.2796"* %13, %7
  br i1 %14, label %16, label %15

15:                                               ; preds = %3
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE5eraseEPKSA_(%"class.WTF::HashTable.2794"* %5, %"struct.WTF::KeyValuePair.2796"* %7) #17
  br label %16

16:                                               ; preds = %3, %15
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent20discardSearchResultsERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %5 = getelementptr inbounds i8, i8* %4, i64 288
  %6 = bitcast i8* %5 to %"class.WTF::HashTable.2794"*
  %7 = tail call { %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.2794"* %6, %"class.WTF::String"* dereferenceable(8) %2) #17, !noalias !90
  %8 = extractvalue { %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"* } %7, 0
  %9 = bitcast i8* %5 to %"struct.WTF::KeyValuePair.2796"**
  %10 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %9, align 8, !noalias !90
  %11 = getelementptr inbounds i8, i8* %4, i64 296
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 8, !noalias !90
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %10, i64 %14
  %16 = icmp eq %"struct.WTF::KeyValuePair.2796"* %15, %8
  br i1 %16, label %18, label %17

17:                                               ; preds = %3
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE5eraseEPKSA_(%"class.WTF::HashTable.2794"* %6, %"struct.WTF::KeyValuePair.2796"* %8) #17
  br label %18

18:                                               ; preds = %3, %17
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

declare void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* sret, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringENSt3__110unique_ptrIN12v8_inspector12StringBufferENS0_14default_deleteIS3_EEEE(%"class.v8_inspector::StringBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent6copyToEiiN5crdtp6detail10ValueMaybeIiEEPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, i32, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, i32* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::Node"*, align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.blink::Element"*, align 8
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.blink::Node"*, align 8
  %12 = alloca %"class.crdtp::DispatchResponse", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.crdtp::DispatchResponse", align 8
  %15 = bitcast %"class.blink::Node"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %7, align 8
  %16 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent18AssertEditableNodeEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorDOMAgent"* %1, i32 %2, %"class.blink::Node"** nonnull dereferenceable(8) %7)
  %17 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %26, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %18, i32* %21, align 8
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #17
  br label %125

26:                                               ; preds = %6
  %27 = bitcast %"class.blink::Element"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  store %"class.blink::Element"* null, %"class.blink::Element"** %9, align 8
  %28 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #17
  call void @_ZN5blink17InspectorDOMAgent21AssertEditableElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.blink::InspectorDOMAgent"* %1, i32 %3, %"class.blink::Element"** nonnull dereferenceable(8) %9)
  %29 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %17, align 8
  %31 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %32 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #18
  %40 = load i32, i32* %17, align 8
  br label %41

41:                                               ; preds = %37, %26
  %42 = phi i32 [ %40, %37 ], [ %30, %26 ]
  %43 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #17
  %45 = icmp eq i32 %42, 1
  br i1 %45, label %50, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %42, i32* %47, align 8
  %48 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %49 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %43, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #17
  br label %125

50:                                               ; preds = %41
  %51 = bitcast %"class.blink::Node"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %11, align 8
  %52 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %4, i64 0, i32 0
  %53 = load i8, i8* %52, align 4, !range !3
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %79, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %4, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %79, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.crdtp::DispatchResponse"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %60) #17
  %61 = load %"class.blink::Element"*, %"class.blink::Element"** %9, align 8
  call void @_ZN5blink17InspectorDOMAgent23AssertEditableChildNodeEPNS_7ElementEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %12, %"class.blink::InspectorDOMAgent"* %1, %"class.blink::Element"* %61, i32 %57, %"class.blink::Node"** nonnull dereferenceable(8) %11)
  %62 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %12, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  store i32 %63, i32* %17, align 8
  %64 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %12, i64 0, i32 1
  %65 = load i8, i8* %34, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #18
  %70 = load i32, i32* %17, align 8
  br label %71

71:                                               ; preds = %67, %59
  %72 = phi i32 [ %70, %67 ], [ %63, %59 ]
  %73 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %73, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %60) #17
  %74 = icmp eq i32 %72, 1
  br i1 %74, label %79, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %72, i32* %76, align 8
  %77 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %78 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %43, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #17
  br label %119

79:                                               ; preds = %50, %55, %71
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %81 = call %"class.blink::Node"* @_ZNK5blink4Node9cloneNodeEb(%"class.blink::Node"* %80, i1 zeroext true) #17
  %82 = icmp eq %"class.blink::Node"* %81, null
  br i1 %82, label %83, label %93

83:                                               ; preds = %79
  %84 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  store i8 20, i8* %85, align 1
  %86 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %86, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.33, i64 0, i64 0), i64 20, i1 false) #17
  %87 = getelementptr inbounds i8, i8* %86, i64 20
  store i8 0, i8* %87, align 4
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %13) #17
  %88 = load i8, i8* %85, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %119

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %92) #18
  br label %119

93:                                               ; preds = %79
  %94 = bitcast %"class.crdtp::DispatchResponse"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94) #17
  %95 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 18, i32 0, i32 0
  %96 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %95, align 8
  %97 = bitcast %"class.blink::Element"** %9 to %"class.blink::ContainerNode"**
  %98 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %97, align 8
  %99 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  call void @_ZN5blink9DOMEditor12InsertBeforeEPNS_13ContainerNodeEPNS_4NodeES4_(%"class.crdtp::DispatchResponse"* nonnull sret %14, %"class.blink::DOMEditor"* %96, %"class.blink::ContainerNode"* %98, %"class.blink::Node"* nonnull %81, %"class.blink::Node"* %99) #17
  %100 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %14, i64 0, i32 0
  %101 = load i32, i32* %100, align 8
  store i32 %101, i32* %17, align 8
  %102 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %14, i64 0, i32 1
  %103 = load i8, i8* %34, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %109

105:                                              ; preds = %93
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #18
  %108 = load i32, i32* %17, align 8
  br label %109

109:                                              ; preds = %105, %93
  %110 = phi i32 [ %108, %105 ], [ %101, %93 ]
  %111 = bitcast %"class.std::__1::basic_string"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %111, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %94) #17
  %112 = icmp eq i32 %110, 1
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %110, i32* %114, align 8
  %115 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %116 = bitcast %"class.std::__1::basic_string"* %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %43, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #17
  br label %119

117:                                              ; preds = %109
  %118 = call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* nonnull %81)
  store i32 %118, i32* %5, align 4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %119

119:                                              ; preds = %75, %117, %113, %83, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #17
  %120 = load i8, i8* %34, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #17
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %124) #18
  br label %125

125:                                              ; preds = %46, %20, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  ret void
}

declare %"class.blink::Node"* @_ZNK5blink4Node9cloneNodeEb(%"class.blink::Node"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent6copyToEiiN5crdtp6detail10ValueMaybeIiEEPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, i32, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, i32* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %8 = bitcast i8* %7 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent6copyToEiiN5crdtp6detail10ValueMaybeIiEEPi(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %8, i32 %2, i32 %3, %"class.crdtp::detail::ValueMaybe.3365"* %4, i32* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent6moveToEiiN5crdtp6detail10ValueMaybeIiEEPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, i32, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, i32* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::Node"*, align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.blink::Element"*, align 8
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.blink::Node"*, align 8
  %13 = alloca %"class.crdtp::DispatchResponse", align 8
  %14 = alloca %"class.crdtp::DispatchResponse", align 8
  %15 = bitcast %"class.blink::Node"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %7, align 8
  %16 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent18AssertEditableNodeEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorDOMAgent"* %1, i32 %2, %"class.blink::Node"** nonnull dereferenceable(8) %7)
  %17 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %26, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %18, i32* %21, align 8
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #17
  br label %139

26:                                               ; preds = %6
  %27 = bitcast %"class.blink::Element"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  store %"class.blink::Element"* null, %"class.blink::Element"** %9, align 8
  %28 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #17
  call void @_ZN5blink17InspectorDOMAgent21AssertEditableElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.blink::InspectorDOMAgent"* %1, i32 %3, %"class.blink::Element"** nonnull dereferenceable(8) %9)
  %29 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %17, align 8
  %31 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %32 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #18
  %40 = load i32, i32* %17, align 8
  br label %41

41:                                               ; preds = %37, %26
  %42 = phi i32 [ %40, %37 ], [ %30, %26 ]
  %43 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #17
  %45 = icmp eq i32 %42, 1
  br i1 %45, label %50, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %42, i32* %47, align 8
  %48 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %49 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %43, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #17
  br label %133

50:                                               ; preds = %41
  %51 = bitcast %"class.blink::Element"** %9 to %"class.blink::Node"**
  %52 = load %"class.blink::Node"*, %"class.blink::Node"** %51, align 8
  %53 = icmp eq %"class.blink::Node"* %52, null
  %54 = bitcast %"class.blink::Node"* %52 to %"class.blink::Element"*
  %55 = bitcast %"class.blink::Node"* %52 to %"class.blink::ContainerNode"*
  br i1 %53, label %77, label %56

56:                                               ; preds = %50
  %57 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  br label %58

58:                                               ; preds = %56, %73
  %59 = phi %"class.blink::Node"* [ %52, %56 ], [ %75, %73 ]
  %60 = icmp eq %"class.blink::Node"* %59, %57
  br i1 %60, label %61, label %73

61:                                               ; preds = %58
  %62 = call i8* @_Znwm(i64 48) #18
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %62, i8** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast i64* %64 to <2 x i64>*
  store <2 x i64> <i64 43, i64 -9223372036854775760>, <2 x i64>* %65, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %62, i8* align 1 getelementptr inbounds ([44 x i8], [44 x i8]* @.str.34, i64 0, i64 0), i64 43, i1 false) #17
  %66 = getelementptr inbounds i8, i8* %62, i64 43
  store i8 0, i8* %66, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %11) #17
  %67 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %133

71:                                               ; preds = %61
  %72 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %72) #18
  br label %133

73:                                               ; preds = %58
  %74 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %59) #17
  %75 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %74, i64 0, i32 0
  %76 = icmp eq %"class.blink::ContainerNode"* %74, null
  br i1 %76, label %77, label %58

77:                                               ; preds = %73, %50
  %78 = bitcast %"class.blink::Node"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %12, align 8
  %79 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %4, i64 0, i32 0
  %80 = load i8, i8* %79, align 4, !range !3
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %107, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %4, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %107, label %86

86:                                               ; preds = %82
  %87 = bitcast %"class.crdtp::DispatchResponse"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %87) #17
  call void @_ZN5blink17InspectorDOMAgent23AssertEditableChildNodeEPNS_7ElementEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %13, %"class.blink::InspectorDOMAgent"* %1, %"class.blink::Element"* %54, i32 %84, %"class.blink::Node"** nonnull dereferenceable(8) %12)
  %88 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %13, i64 0, i32 0
  %89 = load i32, i32* %88, align 8
  store i32 %89, i32* %17, align 8
  %90 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %13, i64 0, i32 1
  %91 = load i8, i8* %34, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %97

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #18
  %96 = load i32, i32* %17, align 8
  br label %97

97:                                               ; preds = %93, %86
  %98 = phi i32 [ %96, %93 ], [ %89, %86 ]
  %99 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %99, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %87) #17
  %100 = icmp eq i32 %98, 1
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  br label %107

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %98, i32* %104, align 8
  %105 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %106 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %43, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #17
  br label %132

107:                                              ; preds = %101, %77, %82
  %108 = phi %"class.blink::Node"* [ %102, %101 ], [ null, %77 ], [ null, %82 ]
  %109 = bitcast %"class.crdtp::DispatchResponse"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #17
  %110 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 18, i32 0, i32 0
  %111 = load %"class.blink::DOMEditor"*, %"class.blink::DOMEditor"** %110, align 8
  %112 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  call void @_ZN5blink9DOMEditor12InsertBeforeEPNS_13ContainerNodeEPNS_4NodeES4_(%"class.crdtp::DispatchResponse"* nonnull sret %14, %"class.blink::DOMEditor"* %111, %"class.blink::ContainerNode"* %55, %"class.blink::Node"* %112, %"class.blink::Node"* %108) #17
  %113 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %14, i64 0, i32 0
  %114 = load i32, i32* %113, align 8
  store i32 %114, i32* %17, align 8
  %115 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %14, i64 0, i32 1
  %116 = load i8, i8* %34, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %107
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  call void @_ZdlPv(i8* %120) #18
  %121 = load i32, i32* %17, align 8
  br label %122

122:                                              ; preds = %118, %107
  %123 = phi i32 [ %121, %118 ], [ %114, %107 ]
  %124 = bitcast %"class.std::__1::basic_string"* %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %124, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #17
  %125 = icmp eq i32 %123, 1
  br i1 %125, label %130, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %123, i32* %127, align 8
  %128 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %129 = bitcast %"class.std::__1::basic_string"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %43, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #17
  br label %132

130:                                              ; preds = %122
  %131 = call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* %112)
  store i32 %131, i32* %5, align 4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %132

132:                                              ; preds = %130, %126, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #17
  br label %133

133:                                              ; preds = %46, %132, %61, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #17
  %134 = load i8, i8* %34, align 1
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  call void @_ZdlPv(i8* %138) #18
  br label %139

139:                                              ; preds = %20, %133, %136
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent6moveToEiiN5crdtp6detail10ValueMaybeIiEEPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, i32, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, i32* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %8 = bitcast i8* %7 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent6moveToEiiN5crdtp6detail10ValueMaybeIiEEPi(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %8, i32 %2, i32 %3, %"class.crdtp::detail::ValueMaybe.3365"* %4, i32* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent4undoEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 21, i32 2
  %6 = load i8, i8* %5, align 1, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = tail call i8* @_Znwm(i64 32) #18
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %12, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0), i64 24, i1 false) #17
  %13 = getelementptr inbounds i8, i8* %9, i64 24
  store i8 0, i8* %13, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %3) #17
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %8
  %19 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %19) #18
  br label %33

20:                                               ; preds = %2
  %21 = bitcast %"class.blink::DummyExceptionStateForTesting"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  %22 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %23, align 8
  %24 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 2
  %26 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringImpl"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #17
  %28 = bitcast i8** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 36, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %29 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 17, i32 0, i32 0
  %30 = load %"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0
  %32 = call zeroext i1 @_ZN5blink16InspectorHistory4UndoERNS_14ExceptionStateE(%"class.blink::InspectorHistory"* %30, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %31) #17
  call void @_ZN5blink17InspectorDOMAgent10ToResponseERNS_14ExceptionStateE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %31)
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #17
  br label %33

33:                                               ; preds = %18, %8, %20
  ret void
}

declare zeroext i1 @_ZN5blink16InspectorHistory4UndoERNS_14ExceptionStateE(%"class.blink::InspectorHistory"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent4undoEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %4 = bitcast i8* %3 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent4undoEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent4redoEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 21, i32 2
  %6 = load i8, i8* %5, align 1, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = tail call i8* @_Znwm(i64 32) #18
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %12, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0), i64 24, i1 false) #17
  %13 = getelementptr inbounds i8, i8* %9, i64 24
  store i8 0, i8* %13, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %3) #17
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %8
  %19 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %19) #18
  br label %33

20:                                               ; preds = %2
  %21 = bitcast %"class.blink::DummyExceptionStateForTesting"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  %22 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %23, align 8
  %24 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 2
  %26 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringImpl"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #17
  %28 = bitcast i8** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 36, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %29 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 17, i32 0, i32 0
  %30 = load %"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0
  %32 = call zeroext i1 @_ZN5blink16InspectorHistory4RedoERNS_14ExceptionStateE(%"class.blink::InspectorHistory"* %30, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %31) #17
  call void @_ZN5blink17InspectorDOMAgent10ToResponseERNS_14ExceptionStateE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %31)
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #17
  br label %33

33:                                               ; preds = %18, %8, %20
  ret void
}

declare zeroext i1 @_ZN5blink16InspectorHistory4RedoERNS_14ExceptionStateE(%"class.blink::InspectorHistory"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent4redoEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %4 = bitcast i8* %3 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent4redoEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent17markUndoableStateEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 21, i32 2
  %5 = load i8, i8* %4, align 1, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 32) #18
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %11, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0), i64 24, i1 false) #17
  %12 = getelementptr inbounds i8, i8* %8, i64 24
  store i8 0, i8* %12, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %3) #17
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %7
  %18 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %18) #18
  br label %22

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 17, i32 0, i32 0
  %21 = load %"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory"** %20, align 8
  tail call void @_ZN5blink16InspectorHistory17MarkUndoableStateEv(%"class.blink::InspectorHistory"* %21) #17
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %22

22:                                               ; preds = %17, %7, %19
  ret void
}

declare void @_ZN5blink16InspectorHistory17MarkUndoableStateEv(%"class.blink::InspectorHistory"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent17markUndoableStateEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5)
  %6 = getelementptr inbounds i8, i8* %4, i64 369
  %7 = load i8, i8* %6, align 1, !range !3, !noalias !93
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %2
  %10 = tail call i8* @_Znwm(i64 32) #18
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %10, i8** %11, align 8, !noalias !93
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i64* %12 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %13, align 8, !noalias !93
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %10, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0), i64 24, i1 false) #17
  %14 = getelementptr inbounds i8, i8* %10, i64 24
  store i8 0, i8* %14, align 1, !noalias !93
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %3) #17
  %15 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1, !noalias !93
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %25

19:                                               ; preds = %9
  %20 = load i8*, i8** %11, align 8, !noalias !93
  call void @_ZdlPv(i8* %20) #18
  br label %25

21:                                               ; preds = %2
  %22 = getelementptr inbounds i8, i8* %4, i64 320
  %23 = bitcast i8* %22 to %"class.blink::InspectorHistory"**
  %24 = load %"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory"** %23, align 8, !noalias !93
  tail call void @_ZN5blink16InspectorHistory17MarkUndoableStateEv(%"class.blink::InspectorHistory"* %24) #17
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %25

25:                                               ; preds = %9, %19, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent5focusEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::Node"*, align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.blink::Node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %6, align 8
  %11 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent10AssertNodeERKN5crdtp6detail10ValueMaybeIiEES6_RKNS3_IN3WTF6StringEEERPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.blink::InspectorDOMAgent"* %1, %"class.crdtp::detail::ValueMaybe.3365"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe.3365"* dereferenceable(8) %3, %"class.crdtp::detail::ValueMaybe.3366"* dereferenceable(16) %4, %"class.blink::Node"** nonnull dereferenceable(8) %6)
  %12 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %21, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %13, i32* %16, align 8
  %17 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #17
  br label %59

21:                                               ; preds = %5
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 12
  %28 = icmp eq i32 %27, 0
  %29 = bitcast %"class.blink::Node"* %22 to %"class.blink::Element"*
  br i1 %28, label %40, label %30

30:                                               ; preds = %24, %21
  %31 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 22, i8* %32, align 1
  %33 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i64 22, i1 false) #17
  %34 = getelementptr inbounds i8, i8* %33, i64 22
  store i8 0, i8* %34, align 2
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %8) #17
  %35 = load i8, i8* %32, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %59

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #18
  br label %59

40:                                               ; preds = %24
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %44, i32 13) #17
  %45 = call zeroext i1 @_ZNK5blink7Element11IsFocusableEv(%"class.blink::Element"* nonnull %29) #17
  br i1 %45, label %58, label %46

46:                                               ; preds = %40
  %47 = call i8* @_Znwm(i64 32) #18
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %47, i8** %48, align 8
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast i64* %49 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %50, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %47, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i64 0, i64 0), i64 24, i1 false) #17
  %51 = getelementptr inbounds i8, i8* %47, i64 24
  store i8 0, i8* %51, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %9) #17
  %52 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %46
  %57 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %57) #18
  br label %59

58:                                               ; preds = %40
  call void @_ZN5blink7Element5focusEv(%"class.blink::Element"* nonnull %29) #17
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %59

59:                                               ; preds = %56, %46, %37, %30, %58, %15
  %60 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %61 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %67) #18
  br label %68

68:                                               ; preds = %59, %65
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  ret void
}

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element11IsFocusableEv(%"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZN5blink7Element5focusEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent5focusEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %7 = bitcast i8* %6 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent5focusEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %7, %"class.crdtp::detail::ValueMaybe.3365"* %2, %"class.crdtp::detail::ValueMaybe.3365"* %3, %"class.crdtp::detail::ValueMaybe.3366"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent17setFileInputFilesENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEEN5crdtp6detail10ValueMaybeIiEESF_NSE_IS5_EE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.std::__1::vector.3393"*, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::Node"*, align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.WTF::Vector.630", align 8
  %11 = bitcast %"class.blink::Node"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %7, align 8
  %12 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent10AssertNodeERKN5crdtp6detail10ValueMaybeIiEES6_RKNS3_IN3WTF6StringEEERPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorDOMAgent"* %1, %"class.crdtp::detail::ValueMaybe.3365"* dereferenceable(8) %3, %"class.crdtp::detail::ValueMaybe.3365"* dereferenceable(8) %4, %"class.crdtp::detail::ValueMaybe.3366"* dereferenceable(16) %5, %"class.blink::Node"** nonnull dereferenceable(8) %7)
  %13 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %22, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %14, i32* %17, align 8
  %18 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #17
  br label %154

22:                                               ; preds = %6
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %55, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 48
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %55

30:                                               ; preds = %25
  %31 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %32 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 1, i32 2
  %35 = bitcast %"class.blink::Member.318"* %34 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br i1 %41, label %42, label %55

42:                                               ; preds = %30
  %43 = bitcast %"class.blink::Node"* %23 to %"class.blink::HTMLFormControlElement"*
  %44 = bitcast %"class.blink::Node"* %23 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %45 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %45, i64 171
  %47 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %46, align 8
  %48 = call dereferenceable(8) %"class.WTF::AtomicString"* %47(%"class.blink::HTMLFormControlElement"* nonnull %43) #17
  %49 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kFileE, align 8
  %50 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %49, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %51, %53
  br i1 %54, label %67, label %55

55:                                               ; preds = %42, %30, %22, %25
  %56 = call i8* @_Znwm(i64 48) #18
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %56, i8** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast i64* %58 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %59, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %56, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36, i64 0, i64 0), i64 32, i1 false) #17
  %60 = getelementptr inbounds i8, i8* %56, i64 32
  store i8 0, i8* %60, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %9) #17
  %61 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %154

65:                                               ; preds = %55
  %66 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %66) #18
  br label %154

67:                                               ; preds = %42
  %68 = bitcast %"class.WTF::Vector.630"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #17
  %69 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %10, i64 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %10, i64 0, i32 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %10, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 16, i1 false) #17
  %72 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %2, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::String"*, %"class.WTF::String"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %2, i64 0, i32 0, i32 1
  %75 = load %"class.WTF::String"*, %"class.WTF::String"** %74, align 8
  %76 = icmp eq %"class.WTF::String"* %73, %75
  br i1 %76, label %77, label %115

77:                                               ; preds = %148, %67
  %78 = bitcast %"class.blink::Node"* %23 to %"class.blink::HTMLInputElement"*
  call void @_ZN5blink16HTMLInputElement17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::HTMLInputElement"* nonnull %78, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %10) #17
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  %79 = load %"class.WTF::String"*, %"class.WTF::String"** %69, align 8
  %80 = icmp eq %"class.WTF::String"* %79, null
  br i1 %80, label %114, label %81, !prof !4

81:                                               ; preds = %77
  %82 = bitcast %"class.WTF::String"* %79 to i8*
  %83 = load i32, i32* %71, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %112, label %85, !prof !2

85:                                               ; preds = %81
  %86 = zext i32 %83 to i64
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 %86
  br label %88

88:                                               ; preds = %106, %85
  %89 = phi %"class.WTF::String"* [ %107, %106 ], [ %79, %85 ]
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %89, i64 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #17
  br label %106

106:                                              ; preds = %105, %102, %88
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %89, i64 1
  %108 = icmp eq %"class.WTF::String"* %107, %87
  br i1 %108, label %109, label %88

109:                                              ; preds = %106
  store i32 0, i32* %71, align 4
  %110 = bitcast %"class.WTF::Vector.630"* %10 to i8**
  %111 = load i8*, i8** %110, align 8
  br label %112

112:                                              ; preds = %109, %81
  %113 = phi i8* [ %111, %109 ], [ %82, %81 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %113) #17
  store %"class.WTF::String"* null, %"class.WTF::String"** %69, align 8
  br label %114

114:                                              ; preds = %77, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #17
  br label %154

115:                                              ; preds = %67, %151
  %116 = phi i32 [ %153, %151 ], [ 0, %67 ]
  %117 = phi i32 [ %152, %151 ], [ 0, %67 ]
  %118 = phi %"class.WTF::String"* [ %149, %151 ], [ %73, %67 ]
  %119 = icmp eq i32 %117, %116
  br i1 %119, label %147, label %120, !prof !2

120:                                              ; preds = %115
  %121 = load %"class.WTF::String"*, %"class.WTF::String"** %69, align 8
  %122 = zext i32 %117 to i64
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %118, i64 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 %122, i32 0, i32 0
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %125, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %126, label %144, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %144

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = zext i32 %134 to i33
  %136 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %135, i33 1) #17
  %137 = extractvalue { i33, i1 } %136, 1
  %138 = extractvalue { i33, i1 } %136, 0
  %139 = icmp slt i33 %138, 0
  %140 = or i1 %137, %139
  br i1 %140, label %141, label %142, !prof !2

141:                                              ; preds = %132
  call void @llvm.trap() #17
  unreachable

142:                                              ; preds = %132
  %143 = trunc i33 %138 to i32
  store i32 %143, i32* %133, align 4
  br label %144

144:                                              ; preds = %142, %127, %120
  %145 = load i32, i32* %71, align 4
  %146 = add i32 %145, 1
  store i32 %146, i32* %71, align 4
  br label %148

147:                                              ; preds = %115
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.630"* nonnull %10, %"class.WTF::String"* dereferenceable(8) %118) #17
  br label %148

148:                                              ; preds = %144, %147
  %149 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %118, i64 1
  %150 = icmp eq %"class.WTF::String"* %149, %75
  br i1 %150, label %77, label %151

151:                                              ; preds = %148
  %152 = load i32, i32* %71, align 4
  %153 = load i32, i32* %70, align 8
  br label %115

154:                                              ; preds = %65, %55, %114, %16
  %155 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %156 = bitcast %"class.std::__1::basic_string"* %155 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #18
  br label %163

163:                                              ; preds = %154, %160
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  %164 = icmp eq %"class.std::__1::vector.3393"* %2, null
  br i1 %164, label %202, label %165

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %2, i64 0, i32 0, i32 0
  %167 = load %"class.WTF::String"*, %"class.WTF::String"** %166, align 8
  %168 = icmp eq %"class.WTF::String"* %167, null
  br i1 %168, label %200, label %169

169:                                              ; preds = %165
  %170 = bitcast %"class.WTF::String"* %167 to i8*
  %171 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %2, i64 0, i32 0, i32 1
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %171, align 8
  %173 = icmp eq %"class.WTF::String"* %172, %167
  br i1 %173, label %198, label %174

174:                                              ; preds = %169, %193
  %175 = phi %"class.WTF::String"* [ %176, %193 ], [ %172, %169 ]
  %176 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %175, i64 -1
  %177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #17
  br label %193

193:                                              ; preds = %192, %189, %174
  %194 = icmp eq %"class.WTF::String"* %176, %167
  br i1 %194, label %195, label %174

195:                                              ; preds = %193
  %196 = bitcast %"class.std::__1::vector.3393"* %2 to i8**
  %197 = load i8*, i8** %196, align 8
  br label %198

198:                                              ; preds = %195, %169
  %199 = phi i8* [ %197, %195 ], [ %170, %169 ]
  store %"class.WTF::String"* %167, %"class.WTF::String"** %171, align 8
  call void @_ZdlPv(i8* %199) #18
  br label %200

200:                                              ; preds = %198, %165
  %201 = bitcast %"class.std::__1::vector.3393"* %2 to i8*
  call void @_ZdlPv(i8* %201) #18
  br label %202

202:                                              ; preds = %163, %200
  ret void
}

declare void @_ZN5blink16HTMLInputElement17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::HTMLInputElement"*, %"class.WTF::Vector.630"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent17setFileInputFilesENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEEN5crdtp6detail10ValueMaybeIiEESF_NSE_IS5_EE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.std::__1::vector.3393"*, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %8 = bitcast i8* %7 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent17setFileInputFilesENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEEN5crdtp6detail10ValueMaybeIiEESF_NSE_IS5_EE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %8, %"class.std::__1::vector.3393"* %2, %"class.crdtp::detail::ValueMaybe.3365"* %3, %"class.crdtp::detail::ValueMaybe.3365"* %4, %"class.crdtp::detail::ValueMaybe.3366"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent25setNodeStackTracesEnabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.3001", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 22
  %6 = zext i1 %2 to i8
  %7 = zext i1 %2 to i32
  %8 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 22, i32 2
  %9 = load i8, i8* %8, align 1, !range !3
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %7, %10
  br i1 %11, label %35, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 22, i32 1
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %7, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %5 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %19 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %19, i64 2
  %21 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %20, align 8
  tail call void %21(%"class.blink::InspectorAgentState::SimpleField"* %5) #17
  br label %35

22:                                               ; preds = %12
  store i8 %6, i8* %8, align 1
  %23 = bitcast %"class.blink::WebVector.3001"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #17
  %24 = getelementptr inbounds %"class.blink::WebVector.3001", %"class.blink::WebVector.3001"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.3001"* nonnull %4) #17
  %25 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 22, i32 0, i32 2
  %26 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 22, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %26, %"class.WTF::String"* dereferenceable(8) %27, %"class.blink::WebVector.3001"* nonnull %4) #17
  %28 = load i8*, i8** %24, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.blink::WebVector.3001", %"class.blink::WebVector.3001"* %4, i64 0, i32 0, i32 0, i32 1
  %32 = ptrtoint i8* %28 to i64
  %33 = bitcast i8** %31 to i64*
  store i64 %32, i64* %33, align 8
  call void @_ZdlPv(i8* nonnull %28) #18
  br label %34

34:                                               ; preds = %30, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #17
  br label %35

35:                                               ; preds = %3, %17, %34
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent25setNodeStackTracesEnabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.3001", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %6 = getelementptr inbounds i8, i8* %5, i64 376
  %7 = bitcast i8* %6 to %"class.blink::InspectorAgentState::SimpleField"*
  %8 = zext i1 %2 to i8
  %9 = zext i1 %2 to i32
  %10 = getelementptr inbounds i8, i8* %5, i64 401
  %11 = load i8, i8* %10, align 1, !range !3, !noalias !96
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %9, %12
  br i1 %13, label %39, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds i8, i8* %5, i64 400
  %16 = load i8, i8* %15, align 8, !range !3, !noalias !96
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %9, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %14
  %20 = bitcast i8* %6 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %21 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %20, align 8, !noalias !96
  %22 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %21, i64 2
  %23 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %22, align 8
  tail call void %23(%"class.blink::InspectorAgentState::SimpleField"* %7) #17
  br label %39

24:                                               ; preds = %14
  store i8 %8, i8* %10, align 1, !noalias !96
  %25 = bitcast %"class.blink::WebVector.3001"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #17, !noalias !96
  %26 = getelementptr inbounds %"class.blink::WebVector.3001", %"class.blink::WebVector.3001"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #17, !noalias !96
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.3001"* nonnull %4) #17
  %27 = getelementptr inbounds i8, i8* %5, i64 392
  %28 = bitcast i8* %27 to %"class.blink::InspectorSessionState"**
  %29 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %28, align 8, !noalias !96
  %30 = getelementptr inbounds i8, i8* %5, i64 384
  %31 = bitcast i8* %30 to %"class.WTF::String"*
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %29, %"class.WTF::String"* dereferenceable(8) %31, %"class.blink::WebVector.3001"* nonnull %4) #17
  %32 = load i8*, i8** %26, align 8, !noalias !96
  %33 = icmp eq i8* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::WebVector.3001", %"class.blink::WebVector.3001"* %4, i64 0, i32 0, i32 0, i32 1
  %36 = ptrtoint i8* %32 to i64
  %37 = bitcast i8** %35 to i64*
  store i64 %36, i64* %37, align 8, !noalias !96
  call void @_ZdlPv(i8* nonnull %32) #18
  br label %38

38:                                               ; preds = %34, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #17, !noalias !96
  br label %39

39:                                               ; preds = %3, %19, %38
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent18getNodeStackTracesEiPN5crdtp6detail8PtrMaybeIN12v8_inspector8protocol7Runtime3API10StackTraceEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.crdtp::detail::PtrMaybe.3594"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8)
  %9 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* %1, i32 %2) #17, !noalias !99
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %11, label %23

11:                                               ; preds = %4
  %12 = tail call i8* @_Znwm(i64 48) #18
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8, !noalias !99
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast i64* %14 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %15, align 8, !noalias !99
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i64 33, i1 false) #17
  %16 = getelementptr inbounds i8, i8* %12, i64 33
  store i8 0, i8* %16, align 1, !noalias !99
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull %5) #17
  %17 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1, !noalias !99
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %11
  %22 = load i8*, i8** %13, align 8, !noalias !99
  call void @_ZdlPv(i8* %22) #18
  br label %24

23:                                               ; preds = %4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %6) #17
  br label %24

24:                                               ; preds = %11, %21, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8)
  %25 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %34, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %26, i32* %29, align 8
  %30 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %31 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %33 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #17
  br label %128

34:                                               ; preds = %24
  %35 = ptrtoint %"class.blink::Node"* %9 to i64
  %36 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 9, i32 0, i32 0, i32 0
  %37 = load %"struct.WTF::KeyValuePair.2780"*, %"struct.WTF::KeyValuePair.2780"** %36, align 8
  %38 = icmp eq %"struct.WTF::KeyValuePair.2780"* %37, null
  br i1 %38, label %119, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 9, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, -1
  %43 = zext i32 %42 to i64
  %44 = shl i64 %35, 32
  %45 = xor i64 %44, -1
  %46 = add i64 %45, %35
  %47 = lshr i64 %46, 22
  %48 = xor i64 %47, %46
  %49 = shl i64 %48, 13
  %50 = xor i64 %49, -1
  %51 = add i64 %48, %50
  %52 = lshr i64 %51, 8
  %53 = xor i64 %52, %51
  %54 = mul i64 %53, 9
  %55 = lshr i64 %54, 15
  %56 = xor i64 %55, %54
  %57 = shl i64 %56, 27
  %58 = xor i64 %57, -1
  %59 = add i64 %56, %58
  %60 = lshr i64 %59, 31
  %61 = xor i64 %60, %59
  %62 = trunc i64 %61 to i32
  %63 = and i32 %42, %62
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %37, i64 %64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %66, align 8
  %68 = icmp eq %"class.blink::Node"* %67, %9
  br i1 %68, label %98, label %69

69:                                               ; preds = %39
  %70 = xor i32 %62, -1
  %71 = lshr i32 %62, 23
  %72 = add i32 %71, %70
  %73 = shl i32 %72, 12
  %74 = xor i32 %73, %72
  %75 = lshr i32 %74, 7
  %76 = xor i32 %75, %74
  %77 = shl i32 %76, 2
  %78 = xor i32 %77, %76
  %79 = lshr i32 %78, 20
  %80 = xor i32 %79, %78
  %81 = or i32 %80, 1
  %82 = zext i32 %81 to i64
  br label %83

83:                                               ; preds = %89, %69
  %84 = phi i64 [ %64, %69 ], [ %93, %89 ]
  %85 = phi i64 [ 0, %69 ], [ %91, %89 ]
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %37, i64 %84, i32 0, i32 0, i32 0
  %87 = load %"class.blink::Node"*, %"class.blink::Node"** %86, align 8
  %88 = icmp eq %"class.blink::Node"* %87, null
  br i1 %88, label %119, label %89

89:                                               ; preds = %83
  %90 = icmp eq i64 %85, 0
  %91 = select i1 %90, i64 %82, i64 %85
  %92 = add i64 %91, %84
  %93 = and i64 %92, %43
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %37, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  %97 = icmp eq %"class.blink::Node"* %96, %9
  br i1 %97, label %98, label %83

98:                                               ; preds = %89, %39
  %99 = phi %"struct.WTF::KeyValuePair.2780"* [ %65, %39 ], [ %94, %89 ]
  %100 = icmp eq %"struct.WTF::KeyValuePair.2780"* %99, null
  br i1 %100, label %119, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %99, i64 0, i32 1, i32 0, i32 0
  %103 = load %"class.blink::InspectorDOMAgent::InspectorSourceLocation"*, %"class.blink::InspectorDOMAgent::InspectorSourceLocation"** %102, align 8
  %104 = icmp eq %"class.blink::InspectorDOMAgent::InspectorSourceLocation"* %103, null
  br i1 %104, label %119, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::InspectorDOMAgent::InspectorSourceLocation", %"class.blink::InspectorDOMAgent::InspectorSourceLocation"* %103, i64 0, i32 1, i32 0, i32 0, i32 0
  %107 = load %"class.blink::SourceLocation"*, %"class.blink::SourceLocation"** %106, align 8
  %108 = call %"class.v8_inspector::protocol::Runtime::API::StackTrace"* @_ZNK5blink14SourceLocation20BuildInspectorObjectEv(%"class.blink::SourceLocation"* %107) #17
  %109 = ptrtoint %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %108 to i64
  %110 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.3594", %"class.crdtp::detail::PtrMaybe.3594"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load %"class.v8_inspector::protocol::Runtime::API::StackTrace"*, %"class.v8_inspector::protocol::Runtime::API::StackTrace"** %110, align 8
  %112 = bitcast %"class.crdtp::detail::PtrMaybe.3594"* %3 to i64*
  store i64 %109, i64* %112, align 8
  %113 = icmp eq %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %111, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %105
  %115 = bitcast %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %111 to void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)***
  %116 = load void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)**, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)** %116, i64 2
  %118 = load void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)** %117, align 8
  call void %118(%"class.v8_inspector::protocol::Runtime::API::StackTrace"* nonnull %111) #17
  br label %119

119:                                              ; preds = %83, %101, %105, %114, %98, %34
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  %120 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %121 = bitcast %"class.std::__1::basic_string"* %120 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %127) #18
  br label %128

128:                                              ; preds = %28, %119, %125
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #17
  ret void
}

declare %"class.v8_inspector::protocol::Runtime::API::StackTrace"* @_ZNK5blink14SourceLocation20BuildInspectorObjectEv(%"class.blink::SourceLocation"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent18getNodeStackTracesEiPN5crdtp6detail8PtrMaybeIN12v8_inspector8protocol7Runtime3API10StackTraceEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.crdtp::detail::PtrMaybe.3594"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent18getNodeStackTracesEiPN5crdtp6detail8PtrMaybeIN12v8_inspector8protocol7Runtime3API10StackTraceEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %6, i32 %2, %"class.crdtp::detail::PtrMaybe.3594"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent11getBoxModelEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEEPNSt3__110unique_ptrINS_8protocol3DOM8BoxModelENS8_14default_deleteISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly, %"class.std::__1::unique_ptr.3615"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::Node"*, align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.blink::Node"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %7, align 8
  %11 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent10AssertNodeERKN5crdtp6detail10ValueMaybeIiEES6_RKNS3_IN3WTF6StringEEERPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorDOMAgent"* %1, %"class.crdtp::detail::ValueMaybe.3365"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe.3365"* dereferenceable(8) %3, %"class.crdtp::detail::ValueMaybe.3366"* dereferenceable(16) %4, %"class.blink::Node"** nonnull dereferenceable(8) %7)
  %12 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %21, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %13, i32* %16, align 8
  %17 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #17
  br label %37

21:                                               ; preds = %6
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %23 = call zeroext i1 @_ZN5blink18InspectorHighlight11GetBoxModelEPNS_4NodeEPNSt3__110unique_ptrINS_8protocol3DOM8BoxModelENS3_14default_deleteIS7_EEEEb(%"class.blink::Node"* %22, %"class.std::__1::unique_ptr.3615"* %5, i1 zeroext true) #17
  br i1 %23, label %36, label %24

24:                                               ; preds = %21
  %25 = call i8* @_Znwm(i64 32) #18
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast i64* %27 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %28, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %25, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i64 0, i64 0), i64 28, i1 false) #17
  %29 = getelementptr inbounds i8, i8* %25, i64 28
  store i8 0, i8* %29, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %9) #17
  %30 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %24
  %35 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %35) #18
  br label %37

36:                                               ; preds = %21
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %37

37:                                               ; preds = %34, %24, %36, %15
  %38 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #18
  br label %46

46:                                               ; preds = %37, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  ret void
}

declare zeroext i1 @_ZN5blink18InspectorHighlight11GetBoxModelEPNS_4NodeEPNSt3__110unique_ptrINS_8protocol3DOM8BoxModelENS3_14default_deleteIS7_EEEEb(%"class.blink::Node"*, %"class.std::__1::unique_ptr.3615"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent11getBoxModelEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEEPNSt3__110unique_ptrINS_8protocol3DOM8BoxModelENS8_14default_deleteISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly, %"class.std::__1::unique_ptr.3615"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %8 = bitcast i8* %7 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent11getBoxModelEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEEPNSt3__110unique_ptrINS_8protocol3DOM8BoxModelENS8_14default_deleteISC_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %8, %"class.crdtp::detail::ValueMaybe.3365"* %2, %"class.crdtp::detail::ValueMaybe.3365"* %3, %"class.crdtp::detail::ValueMaybe.3366"* %4, %"class.std::__1::unique_ptr.3615"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent15getContentQuadsEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEEPNSt3__110unique_ptrINS8_6vectorINS9_INSA_IdNS8_9allocatorIdEEEENS8_14default_deleteISD_EEEENSB_ISG_EEEENSE_ISI_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly, %"class.std::__1::unique_ptr.3660"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::Node"*, align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.blink::Node"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %7, align 8
  %11 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent10AssertNodeERKN5crdtp6detail10ValueMaybeIiEES6_RKNS3_IN3WTF6StringEEERPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorDOMAgent"* %1, %"class.crdtp::detail::ValueMaybe.3365"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe.3365"* dereferenceable(8) %3, %"class.crdtp::detail::ValueMaybe.3366"* dereferenceable(16) %4, %"class.blink::Node"** nonnull dereferenceable(8) %7)
  %12 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %21, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %13, i32* %16, align 8
  %17 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #17
  br label %37

21:                                               ; preds = %6
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %23 = call zeroext i1 @_ZN5blink18InspectorHighlight15GetContentQuadsEPNS_4NodeEPNSt3__110unique_ptrINS3_6vectorINS4_INS5_IdNS3_9allocatorIdEEEENS3_14default_deleteIS8_EEEENS6_ISB_EEEENS9_ISD_EEEE(%"class.blink::Node"* %22, %"class.std::__1::unique_ptr.3660"* %5) #17
  br i1 %23, label %36, label %24

24:                                               ; preds = %21
  %25 = call i8* @_Znwm(i64 48) #18
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast i64* %27 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %28, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %25, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.38, i64 0, i64 0), i64 32, i1 false) #17
  %29 = getelementptr inbounds i8, i8* %25, i64 32
  store i8 0, i8* %29, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %9) #17
  %30 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %24
  %35 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %35) #18
  br label %37

36:                                               ; preds = %21
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %37

37:                                               ; preds = %34, %24, %36, %15
  %38 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #18
  br label %46

46:                                               ; preds = %37, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  ret void
}

declare zeroext i1 @_ZN5blink18InspectorHighlight15GetContentQuadsEPNS_4NodeEPNSt3__110unique_ptrINS3_6vectorINS4_INS5_IdNS3_9allocatorIdEEEENS3_14default_deleteIS8_EEEENS6_ISB_EEEENS9_ISD_EEEE(%"class.blink::Node"*, %"class.std::__1::unique_ptr.3660"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent15getContentQuadsEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEEPNSt3__110unique_ptrINS8_6vectorINS9_INSA_IdNS8_9allocatorIdEEEENS8_14default_deleteISD_EEEENSB_ISG_EEEENSE_ISI_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly, %"class.std::__1::unique_ptr.3660"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %8 = bitcast i8* %7 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent15getContentQuadsEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEEPNSt3__110unique_ptrINS8_6vectorINS9_INSA_IdNS8_9allocatorIdEEEENS8_14default_deleteISD_EEEENSB_ISG_EEEENSE_ISI_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %8, %"class.crdtp::detail::ValueMaybe.3365"* %2, %"class.crdtp::detail::ValueMaybe.3365"* %3, %"class.crdtp::detail::ValueMaybe.3366"* %4, %"class.std::__1::unique_ptr.3660"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent18getNodeForLocationEiiN5crdtp6detail10ValueMaybeIbEES4_PiPN3WTF6StringEPNS3_IiEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, i32, %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly, i32* nocapture, %"class.WTF::String"* nocapture, %"class.crdtp::detail::ValueMaybe.3365"* nocapture) unnamed_addr #0 align 2 {
  %10 = alloca %"class.blink::Node"*, align 8
  %11 = alloca i8, align 1
  %12 = alloca %"struct.blink::PhysicalOffset", align 4
  %13 = alloca i8, align 1
  %14 = alloca %"class.blink::HitTestRequest", align 8
  %15 = alloca %"class.blink::HitTestLocation", align 4
  %16 = alloca i64, align 8
  %17 = bitcast i64* %16 to %"struct.blink::PhysicalOffset"*
  %18 = alloca %"class.blink::HitTestResult", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11)
  store i8 0, i8* %11, align 1
  %20 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %4, i64 0, i32 0
  %21 = load i8, i8* %20, align 1, !range !3
  %22 = icmp eq i8 %21, 0
  %23 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %4, i64 0, i32 1
  %24 = select i1 %22, i8* %11, i8* %23
  %25 = load i8, i8* %24, align 1, !range !3
  %26 = icmp eq i8 %25, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11)
  %27 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %28, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %29, align 8
  %31 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %30) #17
  %32 = bitcast %"struct.blink::PhysicalOffset"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #17
  %33 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %12, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %12, i64 0, i32 1, i32 0
  %35 = sitofp i32 %2 to float
  %36 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %27, align 8
  %37 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %38, i64 0, i32 20
  %40 = load float, float* %39, align 8
  %41 = fmul float %40, %35
  %42 = fmul float %41, 6.400000e+01
  %43 = fcmp ult float %42, 0xC1E0000000000000
  %44 = fcmp ugt float %42, 0x41DFFFFFE0000000
  %45 = fcmp ogt float %42, 0xC1E0000000000000
  %46 = select i1 %45, float %42, float 0xC1E0000000000000
  %47 = fptosi float %46 to i32
  %48 = select i1 %43, i32 0, i32 2147483647
  %49 = select i1 %44, i32 %48, i32 %47
  %50 = sitofp i32 %3 to float
  %51 = fmul float %40, %50
  %52 = fmul float %51, 6.400000e+01
  %53 = fcmp ult float %52, 0xC1E0000000000000
  %54 = fcmp ugt float %52, 0x41DFFFFFE0000000
  %55 = fcmp ogt float %52, 0xC1E0000000000000
  %56 = select i1 %55, float %52, float 0xC1E0000000000000
  %57 = fptosi float %56 to i32
  %58 = select i1 %53, i32 0, i32 2147483647
  %59 = select i1 %54, i32 %58, i32 %57
  store i32 %49, i32* %33, align 4
  store i32 %59, i32* %34, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13)
  store i8 0, i8* %13, align 1
  %60 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %5, i64 0, i32 0
  %61 = load i8, i8* %60, align 1, !range !3
  %62 = icmp eq i8 %61, 0
  %63 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %5, i64 0, i32 1
  %64 = select i1 %62, i8* %13, i8* %63
  %65 = load i8, i8* %64, align 1, !range !3
  %66 = icmp eq i8 %65, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13)
  %67 = select i1 %66, i32 266, i32 1290
  %68 = bitcast %"class.blink::HitTestRequest"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #17
  %69 = bitcast %"class.blink::HitTestRequest"* %14 to i64*
  store i64 -6148914691236517206, i64* %69, align 8
  %70 = getelementptr inbounds %"class.blink::HitTestRequest", %"class.blink::HitTestRequest"* %14, i64 0, i32 0
  store i32 %67, i32* %70, align 8
  %71 = getelementptr inbounds %"class.blink::HitTestRequest", %"class.blink::HitTestRequest"* %14, i64 0, i32 1
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %71, align 8
  %72 = bitcast %"class.blink::HitTestLocation"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %72) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %72, i8* align 4 bitcast (%"class.blink::HitTestLocation"* @__const._ZN5blink17InspectorDOMAgent18getNodeForLocationEiiN5crdtp6detail10ValueMaybeIbEES4_PiPN3WTF6StringEPNS3_IiEE.location to i8*), i64 72, i1 false)
  %73 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #17
  %74 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %31) #17
  %75 = call i64 @_ZNK5blink14LocalFrameView15DocumentToFrameERKNS_14PhysicalOffsetE(%"class.blink::LocalFrameView"* %74, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %12) #17
  store i64 %75, i64* %16, align 8
  call void @_ZN5blink15HitTestLocationC1ERKNS_14PhysicalOffsetE(%"class.blink::HitTestLocation"* nonnull %15, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %17) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #17
  %76 = bitcast %"class.blink::HitTestResult"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %76) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 112, i1 false)
  call void @_ZN5blink13HitTestResultC1ERKNS_14HitTestRequestERKNS_15HitTestLocationE(%"class.blink::HitTestResult"* nonnull %18, %"class.blink::HitTestRequest"* nonnull dereferenceable(16) %14, %"class.blink::HitTestLocation"* nonnull dereferenceable(72) %15) #17
  %77 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %31) #17
  %78 = call %"class.blink::LayoutView"* @_ZNK5blink10LocalFrame19ContentLayoutObjectEv(%"class.blink::LocalFrame"* %77) #17
  %79 = call zeroext i1 @_ZN5blink10LayoutView7HitTestERKNS_15HitTestLocationERNS_13HitTestResultE(%"class.blink::LayoutView"* %78, %"class.blink::HitTestLocation"* nonnull dereferenceable(72) %15, %"class.blink::HitTestResult"* nonnull dereferenceable(112) %18) #17
  br i1 %26, label %80, label %81

80:                                               ; preds = %9
  call void @_ZN5blink13HitTestResult39SetToShadowHostIfInRestrictedShadowRootEv(%"class.blink::HitTestResult"* nonnull %18) #17
  br label %81

81:                                               ; preds = %9, %80
  %82 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %18, i64 0, i32 5, i32 0, i32 0
  %83 = load %"class.blink::Node"*, %"class.blink::Node"** %82, align 8
  %84 = icmp eq %"class.blink::Node"* %83, null
  br i1 %84, label %97, label %85

85:                                               ; preds = %81, %93
  %86 = phi %"class.blink::Node"* [ %95, %93 ], [ %83, %81 ]
  %87 = bitcast %"class.blink::Node"* %86 to i32 (%"class.blink::Node"*)***
  %88 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %87, align 8
  %89 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %88, i64 30
  %90 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %89, align 8
  %91 = call i32 %90(%"class.blink::Node"* nonnull %86) #17
  %92 = icmp eq i32 %91, 3
  br i1 %92, label %93, label %109

93:                                               ; preds = %85
  %94 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %86) #17
  %95 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %94, i64 0, i32 0
  %96 = icmp eq %"class.blink::ContainerNode"* %94, null
  br i1 %96, label %97, label %85

97:                                               ; preds = %93, %81
  %98 = call i8* @_Znwm(i64 32) #18
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %98, i8** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = bitcast i64* %100 to <2 x i64>*
  store <2 x i64> <i64 31, i64 -9223372036854775776>, <2 x i64>* %101, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %98, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.39, i64 0, i64 0), i64 31, i1 false) #17
  %102 = getelementptr inbounds i8, i8* %98, i64 31
  store i8 0, i8* %102, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %19) #17
  %103 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %157

107:                                              ; preds = %97
  %108 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %108) #18
  br label %157

109:                                              ; preds = %85
  %110 = call i32 @_ZN5blink18IdentifiersFactory12IntIdForNodeEPNS_4NodeE(%"class.blink::Node"* nonnull %86) #17
  store i32 %110, i32* %6, align 4
  %111 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %86, i64 0, i32 3, i32 0, i32 0
  %112 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %112, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::Document"*, %"class.blink::Document"** %113, align 8
  %115 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %114) #17
  %116 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %115, i64 0, i32 0
  %117 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %116) #17
  %118 = ptrtoint %"class.WTF::StringImpl"* %117 to i64
  %119 = bitcast %"class.WTF::String"* %7 to i64*
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  store i64 %118, i64* %119, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %109
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #17
  br label %136

136:                                              ; preds = %135, %132, %109
  %137 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 21, i32 2
  %138 = load i8, i8* %137, align 1, !range !3
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %156, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 14, i32 0, i32 0
  %142 = load %"class.blink::Document"*, %"class.blink::Document"** %141, align 8
  %143 = icmp eq %"class.blink::Document"* %142, null
  br i1 %143, label %156, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 5, i32 0, i32 0
  %146 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %145, align 8
  %147 = ptrtoint %"class.blink::Document"* %142 to i64
  %148 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::Node"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #17
  %150 = bitcast %"class.blink::Node"** %10 to i64*
  store i64 %147, i64* %150, align 8
  %151 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.3317"* %148, %"class.blink::Node"** nonnull dereferenceable(8) %10) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #17
  br i1 %151, label %152, label %156

152:                                              ; preds = %144
  %153 = call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* nonnull %86)
  %154 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %8, i64 0, i32 1
  store i32 %153, i32* %154, align 4
  %155 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %8, i64 0, i32 0
  store i8 1, i8* %155, align 4
  br label %156

156:                                              ; preds = %140, %136, %152, %144
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %157

157:                                              ; preds = %107, %97, %156
  call void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"* nonnull %18) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %76) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %72) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #17
  ret void
}

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #1

declare i64 @_ZNK5blink14LocalFrameView15DocumentToFrameERKNS_14PhysicalOffsetE(%"class.blink::LocalFrameView"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink15HitTestLocationC1ERKNS_14PhysicalOffsetE(%"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink13HitTestResultC1ERKNS_14HitTestRequestERKNS_15HitTestLocationE(%"class.blink::HitTestResult"*, %"class.blink::HitTestRequest"* dereferenceable(16), %"class.blink::HitTestLocation"* dereferenceable(72)) unnamed_addr #1

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::LayoutView"* @_ZNK5blink10LocalFrame19ContentLayoutObjectEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink10LayoutView7HitTestERKNS_15HitTestLocationERNS_13HitTestResultE(%"class.blink::LayoutView"*, %"class.blink::HitTestLocation"* dereferenceable(72), %"class.blink::HitTestResult"* dereferenceable(112)) local_unnamed_addr #1

declare void @_ZN5blink13HitTestResult39SetToShadowHostIfInRestrictedShadowRootEv(%"class.blink::HitTestResult"*) local_unnamed_addr #1

declare i32 @_ZN5blink18IdentifiersFactory12IntIdForNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent18getNodeForLocationEiiN5crdtp6detail10ValueMaybeIbEES4_PiPN3WTF6StringEPNS3_IiEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, i32, %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly, i32* nocapture, %"class.WTF::String"* nocapture, %"class.crdtp::detail::ValueMaybe.3365"* nocapture) unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %11 = bitcast i8* %10 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent18getNodeForLocationEiiN5crdtp6detail10ValueMaybeIbEES4_PiPN3WTF6StringEPNS3_IiEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %11, i32 %2, i32 %3, %"class.crdtp::detail::ValueMaybe.3427"* %4, %"class.crdtp::detail::ValueMaybe.3427"* %5, i32* %6, %"class.WTF::String"* %7, %"class.crdtp::detail::ValueMaybe.3365"* %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent11resolveNodeEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEES4_PNSt3__110unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS8_14default_deleteISE_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.std::__1::unique_ptr.3667"* nocapture) unnamed_addr #0 align 2 {
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.crdtp::detail::ValueMaybe.3365", align 4
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i64 0) #17
  %17 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366"* %4, i64 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !3
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366"* %4, i64 0, i32 1
  %21 = select i1 %19, %"class.WTF::String"* %9, %"class.WTF::String"* %20
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %15, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #17
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %30
  call void @llvm.trap() #17
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %7, %25, %40
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #17
  br label %59

59:                                               ; preds = %42, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  %60 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %2, i64 0, i32 0
  %61 = load i8, i8* %60, align 4, !range !3
  %62 = icmp ne i8 %61, 0
  %63 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %3, i64 0, i32 0
  %64 = load i8, i8* %63, align 4, !range !3
  %65 = icmp ne i8 %64, 0
  %66 = xor i1 %62, %65
  br i1 %66, label %79, label %67

67:                                               ; preds = %59
  %68 = call i8* @_Znwm(i64 64) #18
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %68, i8** %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = bitcast i64* %70 to <2 x i64>*
  store <2 x i64> <i64 49, i64 -9223372036854775744>, <2 x i64>* %71, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* align 1 getelementptr inbounds ([50 x i8], [50 x i8]* @.str.40, i64 0, i64 0), i64 49, i1 false) #17
  %72 = getelementptr inbounds i8, i8* %68, i64 49
  store i8 0, i8* %72, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %10) #17
  %73 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %140

77:                                               ; preds = %67
  %78 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %78) #18
  br label %140

79:                                               ; preds = %59
  br i1 %62, label %80, label %84

80:                                               ; preds = %79
  %81 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %2, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* %1, i32 %82)
  br label %88

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %3, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = call %"class.blink::Node"* @_ZN5blink10DOMNodeIds9NodeForIdEi(i32 %86) #17
  br label %88

88:                                               ; preds = %84, %80
  %89 = phi %"class.blink::Node"* [ %83, %80 ], [ %87, %84 ]
  %90 = icmp eq %"class.blink::Node"* %89, null
  br i1 %90, label %91, label %103

91:                                               ; preds = %88
  %92 = call i8* @_Znwm(i64 32) #18
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %92, i8** %93, align 8
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %95, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %92, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.41, i64 0, i64 0), i64 27, i1 false) #17
  %96 = getelementptr inbounds i8, i8* %92, i64 27
  store i8 0, i8* %96, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %11) #17
  %97 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %140

101:                                              ; preds = %91
  %102 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %102) #18
  br label %140

103:                                              ; preds = %88
  %104 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 3
  %105 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %104, align 8
  %106 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %12, i64 0, i32 0
  %107 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %5, i64 0, i32 0
  %108 = load i8, i8* %107, align 4, !range !3
  store i8 %108, i8* %106, align 4
  %109 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %12, i64 0, i32 1
  %110 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %5, i64 0, i32 1
  %111 = load i32, i32* %110, align 4
  store i32 %111, i32* %109, align 4
  %112 = call %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* @_ZN5blink11ResolveNodeEPN12v8_inspector18V8InspectorSessionEPNS_4NodeERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEE(%"class.v8_inspector::V8InspectorSession"* %105, %"class.blink::Node"* nonnull %89, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.crdtp::detail::ValueMaybe.3365"* nonnull %12) #17
  %113 = ptrtoint %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %112 to i64
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.3667", %"class.std::__1::unique_ptr.3667"* %6, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %114, align 8
  %116 = bitcast %"class.std::__1::unique_ptr.3667"* %6 to i64*
  store i64 %113, i64* %116, align 8
  %117 = icmp eq %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %115, null
  br i1 %117, label %124, label %118

118:                                              ; preds = %103
  %119 = bitcast %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %115 to void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)***
  %120 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %120, i64 2
  %122 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %121, align 8
  call void %122(%"class.v8_inspector::protocol::Runtime::API::RemoteObject"* nonnull %115) #17
  %123 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %114, align 8
  br label %124

124:                                              ; preds = %118, %103
  %125 = phi %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* [ %123, %118 ], [ %112, %103 ]
  %126 = icmp eq %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %125, null
  br i1 %126, label %127, label %139

127:                                              ; preds = %124
  %128 = call i8* @_Znwm(i64 64) #18
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %128, i8** %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = bitcast i64* %130 to <2 x i64>*
  store <2 x i64> <i64 50, i64 -9223372036854775744>, <2 x i64>* %131, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %128, i8* align 1 getelementptr inbounds ([51 x i8], [51 x i8]* @.str.42, i64 0, i64 0), i64 50, i1 false) #17
  %132 = getelementptr inbounds i8, i8* %128, i64 50
  store i8 0, i8* %132, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %13) #17
  %133 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %127
  %138 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %138) #18
  br label %140

139:                                              ; preds = %124
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %140

140:                                              ; preds = %137, %127, %101, %91, %77, %67, %139
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #17
  br label %156

156:                                              ; preds = %140, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  ret void
}

declare %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* @_ZN5blink11ResolveNodeEPN12v8_inspector18V8InspectorSessionEPNS_4NodeERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEE(%"class.v8_inspector::V8InspectorSession"*, %"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe.3365"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent11resolveNodeEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEES4_PNSt3__110unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS8_14default_deleteISE_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.std::__1::unique_ptr.3667"* nocapture) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %9 = bitcast i8* %8 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent11resolveNodeEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEES4_PNSt3__110unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS8_14default_deleteISE_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %9, %"class.crdtp::detail::ValueMaybe.3365"* %2, %"class.crdtp::detail::ValueMaybe.3365"* %3, %"class.crdtp::detail::ValueMaybe.3366"* %4, %"class.crdtp::detail::ValueMaybe.3365"* %5, %"class.std::__1::unique_ptr.3667"* %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent13getAttributesEiPNSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.std::__1::unique_ptr.3390"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Element"*, align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = bitcast %"class.blink::Element"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  store %"class.blink::Element"* null, %"class.blink::Element"** %5, align 8
  %8 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent13AssertElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.blink::InspectorDOMAgent"* %1, i32 %2, %"class.blink::Element"** nonnull dereferenceable(8) %5)
  %9 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %18, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #17
  br label %72

18:                                               ; preds = %4
  %19 = load %"class.blink::Element"*, %"class.blink::Element"** %5, align 8
  %20 = call %"class.std::__1::vector.3393"* @_ZN5blink17InspectorDOMAgent30BuildArrayForElementAttributesEPNS_7ElementE(%"class.blink::InspectorDOMAgent"* undef, %"class.blink::Element"* %19)
  %21 = ptrtoint %"class.std::__1::vector.3393"* %20 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.3390", %"class.std::__1::unique_ptr.3390"* %3, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.std::__1::vector.3393"*, %"class.std::__1::vector.3393"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.3390"* %3 to i64*
  store i64 %21, i64* %24, align 8
  %25 = icmp eq %"class.std::__1::vector.3393"* %23, null
  br i1 %25, label %63, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %23, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::String"*, %"class.WTF::String"** %27, align 8
  %29 = icmp eq %"class.WTF::String"* %28, null
  br i1 %29, label %61, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.WTF::String"* %28 to i8*
  %32 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %23, i64 0, i32 0, i32 1
  %33 = load %"class.WTF::String"*, %"class.WTF::String"** %32, align 8
  %34 = icmp eq %"class.WTF::String"* %33, %28
  br i1 %34, label %59, label %35

35:                                               ; preds = %30, %54
  %36 = phi %"class.WTF::String"* [ %37, %54 ], [ %33, %30 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 -1
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #17
  br label %54

54:                                               ; preds = %53, %50, %35
  %55 = icmp eq %"class.WTF::String"* %37, %28
  br i1 %55, label %56, label %35

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.3393"* %23 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %30
  %60 = phi i8* [ %58, %56 ], [ %31, %30 ]
  store %"class.WTF::String"* %28, %"class.WTF::String"** %32, align 8
  call void @_ZdlPv(i8* %60) #18
  br label %61

61:                                               ; preds = %59, %26
  %62 = bitcast %"class.std::__1::vector.3393"* %23 to i8*
  call void @_ZdlPv(i8* %62) #18
  br label %63

63:                                               ; preds = %18, %61
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  %64 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #18
  br label %72

72:                                               ; preds = %12, %63, %69
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.3393"* @_ZN5blink17InspectorDOMAgent30BuildArrayForElementAttributesEPNS_7ElementE(%"class.blink::InspectorDOMAgent"* nocapture readnone, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = tail call i8* @_Znwm(i64 24) #18
  %5 = bitcast i8* %4 to %"class.std::__1::vector.3393"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #17
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %6, align 8
  %8 = icmp eq %"class.blink::ElementData"* %7, null
  br i1 %8, label %46, label %9

9:                                                ; preds = %2
  tail call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* %1) #17
  %10 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %6, align 8
  %11 = icmp eq %"class.blink::ElementData"* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = load i32, i32* null, align 536870912
  br label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %10, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::ElementData"* %10 to %"class.blink::UniqueElementData"*
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %10, i64 1, i32 1
  %22 = bitcast %"class.blink::Member.354"* %21 to %"class.blink::Attribute"**
  %23 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %20, i64 0, i32 2, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  br label %32

26:                                               ; preds = %14, %12
  %27 = phi i32 [ %13, %12 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %10, i64 1
  %29 = bitcast %"class.blink::ElementData"* %28 to %"class.blink::Attribute"*
  %30 = lshr i32 %27, 1
  %31 = and i32 %30, 268435455
  br label %32

32:                                               ; preds = %19, %26
  %33 = phi i32 [ %31, %26 ], [ %25, %19 ]
  %34 = phi %"class.blink::Attribute"* [ %29, %26 ], [ %23, %19 ]
  %35 = zext i32 %33 to i64
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %34, i64 %35
  %37 = icmp eq i32 %33, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.WTF::String"* %3 to i8*
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds i8, i8* %4, i64 8
  %42 = bitcast i8* %41 to %"class.WTF::String"**
  %43 = getelementptr inbounds i8, i8* %4, i64 16
  %44 = bitcast i8* %43 to %"class.WTF::String"**
  %45 = bitcast i8* %41 to i64*
  br label %47

46:                                               ; preds = %106, %2, %32
  ret %"class.std::__1::vector.3393"* %5

47:                                               ; preds = %38, %106
  %48 = phi %"class.blink::Attribute"* [ %34, %38 ], [ %107, %106 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #17
  %49 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 0, i32 0
  %50 = call %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"* %49) #17
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %40, align 8
  %51 = load %"class.WTF::String"*, %"class.WTF::String"** %42, align 8
  %52 = load %"class.WTF::String"*, %"class.WTF::String"** %44, align 8
  %53 = icmp ult %"class.WTF::String"* %51, %52
  br i1 %53, label %54, label %59

54:                                               ; preds = %47
  %55 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %56 = bitcast %"class.WTF::String"* %51 to i64*
  store i64 %55, i64* %56, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %51, i64 1
  %58 = ptrtoint %"class.WTF::String"* %57 to i64
  store i64 %58, i64* %45, align 8
  br label %75

59:                                               ; preds = %47
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.3393"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %3) #17
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #17
  br label %75

75:                                               ; preds = %54, %59, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #17
  %76 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 0, i32 1
  %77 = load %"class.WTF::String"*, %"class.WTF::String"** %42, align 8
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %44, align 8
  %79 = icmp ult %"class.WTF::String"* %77, %78
  br i1 %79, label %80, label %105

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %76, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %83, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %84, label %102, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %102

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i33
  %94 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %93, i33 1) #17
  %95 = extractvalue { i33, i1 } %94, 1
  %96 = extractvalue { i33, i1 } %94, 0
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %100, !prof !2

99:                                               ; preds = %90
  call void @llvm.trap() #17
  unreachable

100:                                              ; preds = %90
  %101 = trunc i33 %96 to i32
  store i32 %101, i32* %91, align 4
  br label %102

102:                                              ; preds = %100, %85, %80
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 1
  %104 = ptrtoint %"class.WTF::String"* %103 to i64
  store i64 %104, i64* %45, align 8
  br label %106

105:                                              ; preds = %75
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKNS1_12AtomicStringEEEEvDpOT_(%"class.std::__1::vector.3393"* nonnull %5, %"class.WTF::AtomicString"* dereferenceable(8) %76) #17
  br label %106

106:                                              ; preds = %102, %105
  %107 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 1
  %108 = icmp eq %"class.blink::Attribute"* %107, %36
  br i1 %108, label %46, label %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent13getAttributesEiPNSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32, %"class.std::__1::unique_ptr.3390"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent13getAttributesEiPNSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %6, i32 %2, %"class.std::__1::unique_ptr.3390"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent11requestNodeERKN3WTF6StringEPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = bitcast %"class.blink::Node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %5, align 8
  %8 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent21NodeForRemoteObjectIdERKN3WTF6StringERPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.blink::InspectorDOMAgent"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::Node"** nonnull dereferenceable(8) %5)
  %9 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %18, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #17
  br label %29

18:                                               ; preds = %4
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %20 = call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* %19)
  store i32 %20, i32* %3, align 4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  %21 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #18
  br label %29

29:                                               ; preds = %12, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent11requestNodeERKN3WTF6StringEPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %8 = bitcast i8* %7 to %"class.blink::InspectorDOMAgent"*
  %9 = bitcast %"class.blink::Node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17, !noalias !102
  store %"class.blink::Node"* null, %"class.blink::Node"** %5, align 8, !noalias !102
  %10 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #17, !noalias !102
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false) #17, !noalias !102
  call void @_ZN5blink17InspectorDOMAgent21NodeForRemoteObjectIdERKN3WTF6StringERPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.blink::InspectorDOMAgent"* %8, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::Node"** nonnull dereferenceable(8) %5) #17, !noalias !102
  %11 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %12 = load i32, i32* %11, align 8, !noalias !102
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %20, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %12, i32* %15, align 8, !alias.scope !102
  %16 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #17, !noalias !102
  br label %31

20:                                               ; preds = %4
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8, !noalias !102
  %22 = call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %8, %"class.blink::Node"* %21) #17, !noalias !102
  store i32 %22, i32* %3, align 4, !noalias !102
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  %23 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1, !noalias !102
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8, !noalias !102
  call void @_ZdlPv(i8* %30) #18
  br label %31

31:                                               ; preds = %14, %20, %28
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #17, !noalias !102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17, !noalias !102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent17DocumentURLStringEPNS_8DocumentE(%"class.blink::Document"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = icmp eq %"class.blink::Document"* %0, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 19
  %6 = tail call zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"* %5) #17
  br i1 %6, label %7, label %8

7:                                                ; preds = %1, %4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i64 0) #17
  br label %30

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 19, i32 4, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #17
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #17
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %28, %13, %8, %7
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  ret %"class.WTF::StringImpl"* %32
}

declare zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent21DocumentBaseURLStringEPNS_8DocumentE(%"class.blink::Document"*) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"* %0) #17
  %3 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #17
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #17
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %1, %6, %21
  ret %"class.WTF::StringImpl"* %4
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent17GetShadowRootTypeEPNS_10ShadowRootE(%"class.blink::ShadowRoot"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, 16
  %6 = and i32 %5, 3
  switch i32 %6, label %9 [
    i32 1, label %8
    i32 0, label %7
  ]

7:                                                ; preds = %1
  br label %9

8:                                                ; preds = %1
  br label %9

9:                                                ; preds = %1, %8, %7
  %10 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM18ShadowRootTypeEnum6ClosedE, i64 0, i64 0), %8 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM18ShadowRootTypeEnum4OpenE, i64 0, i64 0), %7 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM18ShadowRootTypeEnum9UserAgentE, i64 0, i64 0), %1 ]
  %11 = tail call i64 @strlen(i8* nonnull %10) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %10, i64 %11) #17
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent28GetDocumentCompatibilityModeEPNS_8DocumentE(%"class.blink::Document"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 33
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %7 [
    i32 0, label %8
    i32 1, label %5
    i32 2, label %6
  ]

5:                                                ; preds = %1
  br label %8

6:                                                ; preds = %1
  br label %8

7:                                                ; preds = %1
  br label %8

8:                                                ; preds = %1, %7, %6, %5
  %9 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM21CompatibilityModeEnum12NoQuirksModeE, i64 0, i64 0), %7 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM21CompatibilityModeEnum12NoQuirksModeE, i64 0, i64 0), %6 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM21CompatibilityModeEnum17LimitedQuirksModeE, i64 0, i64 0), %5 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3DOM21CompatibilityModeEnum10QuirksModeE, i64 0, i64 0), %1 ]
  %10 = tail call i64 @strlen(i8* nonnull %9) #20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %9, i64 %10) #17
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  ret %"class.WTF::StringImpl"* %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKDsEcvS1_Ev(%"class.WTF::StringAppend.3673"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.4372", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4372", align 8
  %5 = alloca i16*, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3673", %"class.WTF::StringAppend.3673"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %10 = select i1 %8, %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"* %7
  %11 = bitcast %"class.WTF::StringTypeAdapter.4372"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.WTF::StringAppend.3673", %"class.WTF::StringAppend.3673"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #17
  %13 = load i16*, i16** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKDsEC1ES2_(%"class.WTF::StringTypeAdapter.4372"* nonnull %4, i16* %13) #17
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #17
  %16 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %17 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKDsE6lengthEv(%"class.WTF::StringAppend.3673"* %0)
  %18 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %17, i16** nonnull dereferenceable(8) %5) #17
  %19 = load i16*, i16** %5, align 8
  %20 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #17
  %21 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false) #17
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %1
  %26 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %33

27:                                               ; preds = %1
  %28 = ptrtoint %"class.WTF::StringImpl"* %23 to i64
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  %32 = bitcast %"class.WTF::StringImpl"* %31 to i8*
  br label %33

33:                                               ; preds = %25, %27
  %34 = phi i8* [ null, %25 ], [ %32, %27 ]
  %35 = phi i64 [ %26, %25 ], [ %28, %27 ]
  %36 = phi i32 [ 0, %25 ], [ %30, %27 ]
  %37 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %35, i64* %37, align 8
  store i8* %34, i8** %21, align 8
  store i32 %36, i32* %22, align 8
  %38 = bitcast %"class.WTF::StringTypeAdapter.4372"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false) #17
  %39 = load i16*, i16** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKDsEC1ES2_(%"class.WTF::StringTypeAdapter.4372"* nonnull %3, i16* %39) #17
  %40 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4098"* nonnull %40, i16* %19) #17
  %41 = load i32, i32* %22, align 8
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i16, i16* %19, i64 %42
  call void @_ZNK3WTF17StringTypeAdapterIPKDsE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4372"* nonnull %3, i16* %43) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #17
  %44 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %44, label %75, label %45

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %62

52:                                               ; preds = %45
  %53 = zext i32 %51 to i33
  %54 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #17
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !2

59:                                               ; preds = %52
  call void @llvm.trap() #17
  unreachable

60:                                               ; preds = %52
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %50, align 4
  br label %62

62:                                               ; preds = %45, %60
  %63 = phi i32 [ %61, %60 ], [ %51, %45 ]
  %64 = ptrtoint %"class.WTF::StringImpl"* %18 to i64
  %65 = load atomic i32, i32* %46 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %70 = add i32 %63, -1
  store i32 %70, i32* %69, align 4
  br label %71

71:                                               ; preds = %68, %62
  %72 = phi i32 [ %70, %68 ], [ %63, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #17
  br label %75

75:                                               ; preds = %33, %74, %71
  %76 = phi i64 [ %64, %71 ], [ %64, %74 ], [ 0, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  %77 = inttoptr i64 %76 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %77
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.blink::DocumentFragment"* @_ZNK5blink19HTMLTemplateElement7contentEv(%"class.blink::HTMLTemplateElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.3379"* @_ZN5blink17InspectorDOMAgent27BuildArrayForPseudoElementsEPNS_7ElementEPNS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS5_EENS7_10HashTraitsIS6_EENSA_IiEEEE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Element"*, %"class.blink::HeapHashMap.2752"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.3379", align 8
  %5 = alloca %"class.std::__1::unique_ptr.3367", align 8
  %6 = bitcast %"class.std::__1::vector.3379"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %4, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #17
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::unique_ptr.3367"* %5 to i8*
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %5, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.3367"** %8 to i64*
  %14 = tail call zeroext i1 @_ZN5blink13PseudoElement12IsWebExposedENS_8PseudoIdEPKNS_4NodeE(i8 zeroext 3, %"class.blink::Node"* %10) #17
  br i1 %14, label %15, label %29

15:                                               ; preds = %3
  %16 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* %1, i8 zeroext 3) #17
  %17 = icmp eq %"class.blink::PseudoElement"* %16, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %19 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = tail call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %19, i32 0, i1 zeroext false, %"class.blink::HeapHashMap.2752"* %2, %"class.std::__1::vector.3379"* null)
  store %"class.blink::protocol::DOM::Node"* %20, %"class.blink::protocol::DOM::Node"** %12, align 8
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3DOM4NodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3379"* nonnull %4, %"class.std::__1::unique_ptr.3367"* nonnull dereferenceable(8) %5) #17
  %21 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %12, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %12, align 8
  %22 = icmp eq %"class.blink::protocol::DOM::Node"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.blink::protocol::DOM::Node"* %21 to void (%"class.blink::protocol::DOM::Node"*)***
  %25 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %25, i64 2
  %27 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %26, align 8
  call void %27(%"class.blink::protocol::DOM::Node"* nonnull %21) #17
  br label %28

28:                                               ; preds = %18, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  br label %29

29:                                               ; preds = %28, %15, %3
  %30 = call zeroext i1 @_ZN5blink13PseudoElement12IsWebExposedENS_8PseudoIdEPKNS_4NodeE(i8 zeroext 4, %"class.blink::Node"* %10) #17
  br i1 %30, label %49, label %73

31:                                               ; preds = %99
  %32 = ptrtoint %"class.std::__1::unique_ptr.3367"* %101 to i64
  %33 = ptrtoint %"class.std::__1::unique_ptr.3367"* %100 to i64
  %34 = call i8* @_Znwm(i64 24) #18
  %35 = bitcast i8* %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = bitcast i8* %36 to i64*
  store i64 %32, i64* %37, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.3367"** %9 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds i8, i8* %34, i64 16
  %41 = bitcast i8* %40 to i64*
  store i64 %39, i64* %41, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #17
  %42 = bitcast i8* %34 to %"class.std::__1::vector.3379"*
  br label %47

43:                                               ; preds = %99
  %44 = icmp eq %"class.std::__1::unique_ptr.3367"* %100, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = bitcast %"class.std::__1::unique_ptr.3367"* %100 to i8*
  store %"class.std::__1::unique_ptr.3367"* %100, %"class.std::__1::unique_ptr.3367"** %8, align 8
  call void @_ZdlPv(i8* %46) #18
  br label %47

47:                                               ; preds = %31, %43, %45
  %48 = phi %"class.std::__1::vector.3379"* [ %42, %31 ], [ null, %43 ], [ null, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"class.std::__1::vector.3379"* %48

49:                                               ; preds = %29
  %50 = call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* %1, i8 zeroext 4) #17
  %51 = icmp eq %"class.blink::PseudoElement"* %50, null
  br i1 %51, label %73, label %52

52:                                               ; preds = %49
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %53 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %50, i64 0, i32 0, i32 0, i32 0
  %54 = call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %53, i32 0, i1 zeroext false, %"class.blink::HeapHashMap.2752"* %2, %"class.std::__1::vector.3379"* null)
  store %"class.blink::protocol::DOM::Node"* %54, %"class.blink::protocol::DOM::Node"** %12, align 8
  %55 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %8, align 8
  %56 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %9, align 8
  %57 = icmp ult %"class.std::__1::unique_ptr.3367"* %55, %56
  br i1 %57, label %59, label %58

58:                                               ; preds = %52
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3DOM4NodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3379"* nonnull %4, %"class.std::__1::unique_ptr.3367"* nonnull dereferenceable(8) %5) #17
  br label %64

59:                                               ; preds = %52
  %60 = ptrtoint %"class.blink::protocol::DOM::Node"* %54 to i64
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %12, align 8
  %61 = bitcast %"class.std::__1::unique_ptr.3367"* %55 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %55, i64 1
  %63 = ptrtoint %"class.std::__1::unique_ptr.3367"* %62 to i64
  store i64 %63, i64* %13, align 8
  br label %64

64:                                               ; preds = %59, %58
  %65 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %12, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %12, align 8
  %66 = icmp eq %"class.blink::protocol::DOM::Node"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %64
  %68 = bitcast %"class.blink::protocol::DOM::Node"* %65 to void (%"class.blink::protocol::DOM::Node"*)***
  %69 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %69, i64 2
  %71 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %70, align 8
  call void %71(%"class.blink::protocol::DOM::Node"* nonnull %65) #17
  br label %72

72:                                               ; preds = %67, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  br label %73

73:                                               ; preds = %72, %49, %29
  %74 = call zeroext i1 @_ZN5blink13PseudoElement12IsWebExposedENS_8PseudoIdEPKNS_4NodeE(i8 zeroext 5, %"class.blink::Node"* %10) #17
  br i1 %74, label %75, label %99

75:                                               ; preds = %73
  %76 = call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* %1, i8 zeroext 5) #17
  %77 = icmp eq %"class.blink::PseudoElement"* %76, null
  br i1 %77, label %99, label %78

78:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %79 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %76, i64 0, i32 0, i32 0, i32 0
  %80 = call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %79, i32 0, i1 zeroext false, %"class.blink::HeapHashMap.2752"* %2, %"class.std::__1::vector.3379"* null)
  store %"class.blink::protocol::DOM::Node"* %80, %"class.blink::protocol::DOM::Node"** %12, align 8
  %81 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %8, align 8
  %82 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %9, align 8
  %83 = icmp ult %"class.std::__1::unique_ptr.3367"* %81, %82
  br i1 %83, label %85, label %84

84:                                               ; preds = %78
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3DOM4NodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3379"* nonnull %4, %"class.std::__1::unique_ptr.3367"* nonnull dereferenceable(8) %5) #17
  br label %90

85:                                               ; preds = %78
  %86 = ptrtoint %"class.blink::protocol::DOM::Node"* %80 to i64
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %12, align 8
  %87 = bitcast %"class.std::__1::unique_ptr.3367"* %81 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %81, i64 1
  %89 = ptrtoint %"class.std::__1::unique_ptr.3367"* %88 to i64
  store i64 %89, i64* %13, align 8
  br label %90

90:                                               ; preds = %85, %84
  %91 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %12, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %12, align 8
  %92 = icmp eq %"class.blink::protocol::DOM::Node"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %90
  %94 = bitcast %"class.blink::protocol::DOM::Node"* %91 to void (%"class.blink::protocol::DOM::Node"*)***
  %95 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %95, i64 2
  %97 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %96, align 8
  call void %97(%"class.blink::protocol::DOM::Node"* nonnull %91) #17
  br label %98

98:                                               ; preds = %93, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  br label %99

99:                                               ; preds = %98, %75, %73
  %100 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %7, align 8
  %101 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %8, align 8
  %102 = icmp eq %"class.std::__1::unique_ptr.3367"* %100, %101
  br i1 %102, label %43, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.3408"* @_ZN5blink17InspectorDOMAgent28BuildDistributedNodesForSlotEPNS_15HTMLSlotElementE(%"class.blink::InspectorDOMAgent"* nocapture readnone, %"class.blink::HTMLSlotElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.3410", align 8
  %4 = tail call i8* @_Znwm(i64 24) #18
  %5 = bitcast i8* %4 to %"class.std::__1::vector.3408"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #17
  %6 = tail call dereferenceable(16) %"class.blink::HeapVector.3335"* @_ZNK5blink15HTMLSlotElement13AssignedNodesEv(%"class.blink::HTMLSlotElement"* %1) #17
  %7 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HeapVector.3335", %"class.blink::HeapVector.3335"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %124, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::unique_ptr.3410"* %3 to i8*
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unique_ptr.3410"* %3 to i8**
  %18 = getelementptr inbounds i8, i8* %4, i64 8
  %19 = bitcast i8* %18 to %"class.std::__1::unique_ptr.3410"**
  %20 = getelementptr inbounds i8, i8* %4, i64 16
  %21 = bitcast i8* %20 to %"class.std::__1::unique_ptr.3410"**
  %22 = bitcast %"class.std::__1::unique_ptr.3410"* %3 to i64*
  %23 = bitcast i8* %18 to i64*
  br label %24

24:                                               ; preds = %14, %121
  %25 = phi %"class.blink::Member.318"* [ %8, %14 ], [ %122, %121 ]
  %26 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %27)
  br i1 %28, label %121, label %29

29:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  store %"class.blink::protocol::DOM::BackendNode"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::DOM::BackendNode"*), %"class.blink::protocol::DOM::BackendNode"** %16, align 8
  %30 = call i8* @_Znwm(i64 32) #18
  %31 = bitcast i8* %30 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3DOM11BackendNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds i8, i8* %30, i64 16
  %33 = bitcast i8* %32 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %30, i64 24
  %37 = bitcast i8* %36 to i32*
  store i32 0, i32* %37, align 8
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %39 = bitcast %"class.blink::Node"* %38 to i32 (%"class.blink::Node"*)***
  %40 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %39, align 8
  %41 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %40, i64 30
  %42 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %41, align 8
  %43 = call i32 %42(%"class.blink::Node"* %38) #17
  store i32 %43, i32* %35, align 8
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %45 = bitcast %"class.blink::Node"* %44 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %46 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %45, align 8
  %47 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %46, i64 27
  %48 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %47, align 8
  %49 = call %"class.WTF::StringImpl"* %48(%"class.blink::Node"* %44) #17
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %68, label %51

51:                                               ; preds = %29
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #17
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %56
  call void @llvm.trap() #17
  unreachable

66:                                               ; preds = %56
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %57, align 4
  br label %68

68:                                               ; preds = %66, %51, %29
  %69 = ptrtoint %"class.WTF::StringImpl"* %49 to i64
  %70 = bitcast i8* %32 to i64*
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  store i64 %69, i64* %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #17
  br label %86

86:                                               ; preds = %68, %82, %85
  %87 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %88 = call i32 @_ZN5blink18IdentifiersFactory12IntIdForNodeEPNS_4NodeE(%"class.blink::Node"* %87) #17
  store i32 %88, i32* %37, align 8
  store i8* %30, i8** %17, align 8
  br i1 %50, label %102, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #17
  br label %102

102:                                              ; preds = %101, %98, %86
  %103 = load %"class.std::__1::unique_ptr.3410"*, %"class.std::__1::unique_ptr.3410"** %19, align 8
  %104 = load %"class.std::__1::unique_ptr.3410"*, %"class.std::__1::unique_ptr.3410"** %21, align 8
  %105 = icmp ult %"class.std::__1::unique_ptr.3410"* %103, %104
  br i1 %105, label %106, label %111

106:                                              ; preds = %102
  %107 = load i64, i64* %22, align 8
  store %"class.blink::protocol::DOM::BackendNode"* null, %"class.blink::protocol::DOM::BackendNode"** %16, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3410"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %103, i64 1
  %110 = ptrtoint %"class.std::__1::unique_ptr.3410"* %109 to i64
  store i64 %110, i64* %23, align 8
  br label %112

111:                                              ; preds = %102
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3DOM11BackendNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3408"* nonnull %5, %"class.std::__1::unique_ptr.3410"* nonnull dereferenceable(8) %3) #17
  br label %112

112:                                              ; preds = %106, %111
  %113 = load %"class.blink::protocol::DOM::BackendNode"*, %"class.blink::protocol::DOM::BackendNode"** %16, align 8
  store %"class.blink::protocol::DOM::BackendNode"* null, %"class.blink::protocol::DOM::BackendNode"** %16, align 8
  %114 = icmp eq %"class.blink::protocol::DOM::BackendNode"* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %112
  %116 = bitcast %"class.blink::protocol::DOM::BackendNode"* %113 to void (%"class.blink::protocol::DOM::BackendNode"*)***
  %117 = load void (%"class.blink::protocol::DOM::BackendNode"*)**, void (%"class.blink::protocol::DOM::BackendNode"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.blink::protocol::DOM::BackendNode"*)*, void (%"class.blink::protocol::DOM::BackendNode"*)** %117, i64 2
  %119 = load void (%"class.blink::protocol::DOM::BackendNode"*)*, void (%"class.blink::protocol::DOM::BackendNode"*)** %118, align 8
  call void %119(%"class.blink::protocol::DOM::BackendNode"* nonnull %113) #17
  br label %120

120:                                              ; preds = %112, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  br label %121

121:                                              ; preds = %24, %120
  %122 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %25, i64 1
  %123 = icmp eq %"class.blink::Member.318"* %122, %12
  br i1 %123, label %124, label %24

124:                                              ; preds = %121, %2
  ret %"class.std::__1::vector.3408"* %5
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Attr5valueEv(%"class.blink::Attr"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17InspectorDOMAgent19InnerChildNodeCountEPNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %10 = bitcast %"class.blink::Node"* %9 to %"class.blink::Node"**
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  br label %12

12:                                               ; preds = %8, %3, %1
  %13 = phi %"class.blink::Node"* [ %11, %8 ], [ null, %1 ], [ null, %3 ]
  %14 = tail call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %13) #17
  br i1 %14, label %15, label %20

15:                                               ; preds = %12, %15
  %16 = phi %"class.blink::Node"* [ %18, %15 ], [ %13, %12 ]
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 5, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = tail call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %18) #17
  br i1 %19, label %15, label %20

20:                                               ; preds = %15, %12
  %21 = phi %"class.blink::Node"* [ %13, %12 ], [ %18, %15 ]
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %34, label %26

23:                                               ; preds = %29
  %24 = add i32 %28, 1
  %25 = icmp eq %"class.blink::Node"* %32, null
  br i1 %25, label %34, label %26

26:                                               ; preds = %20, %23
  %27 = phi %"class.blink::Node"* [ %32, %23 ], [ %21, %20 ]
  %28 = phi i32 [ %24, %23 ], [ 0, %20 ]
  br label %29

29:                                               ; preds = %29, %26
  %30 = phi %"class.blink::Node"* [ %27, %26 ], [ %32, %29 ]
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 5, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = tail call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %32) #17
  br i1 %33, label %29, label %23

34:                                               ; preds = %23, %20
  %35 = phi i32 [ 0, %20 ], [ %24, %23 ]
  ret i32 %35
}

declare zeroext i1 @_ZN5blink13PseudoElement12IsWebExposedENS_8PseudoIdEPKNS_4NodeE(i8 zeroext, %"class.blink::Node"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::HeapVector.3335"* @_ZNK5blink15HTMLSlotElement13AssignedNodesEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = icmp eq %"class.blink::Node"* %0, null
  br i1 %3, label %55, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.blink::Node"* %0 to i32 (%"class.blink::Node"*)***
  %6 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %6, i64 30
  %8 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %7, align 8
  %9 = tail call i32 %8(%"class.blink::Node"* nonnull %0) #17
  %10 = icmp eq i32 %9, 3
  br i1 %10, label %11, label %55

11:                                               ; preds = %4
  %12 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  %13 = bitcast %"class.blink::Node"* %0 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %14 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %14, i64 28
  %16 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %15, align 8
  %17 = tail call %"class.WTF::StringImpl"* %16(%"class.blink::Node"* nonnull %0) #17
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  %19 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %2) #17
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %21
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %21
  %34 = phi i32 [ %32, %31 ], [ %30, %21 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #17
  br label %37

37:                                               ; preds = %11, %33, %36
  %38 = phi i1 [ %24, %33 ], [ %24, %36 ], [ true, %11 ]
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #17
  br label %54

54:                                               ; preds = %37, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  br label %55

55:                                               ; preds = %1, %4, %54
  %56 = phi i1 [ %38, %54 ], [ false, %4 ], [ false, %1 ]
  ret i1 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent20InnerPreviousSiblingEPNS_4NodeE(%"class.blink::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi %"class.blink::Node"* [ %0, %1 ], [ %5, %2 ]
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = tail call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %5)
  br i1 %6, label %2, label %7

7:                                                ; preds = %2
  ret %"class.blink::Node"* %5
}

declare %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent26DomContentLoadedEventFiredEPNS_10LocalFrameE(%"class.blink::InspectorDOMAgent"* nocapture, %"class.blink::LocalFrame"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %4, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %5, align 8
  %7 = icmp eq %"class.blink::LocalFrame"* %6, %1
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  tail call void @_ZN5blink17InspectorDOMAgent23DiscardFrontendBindingsEv(%"class.blink::InspectorDOMAgent"* %0)
  %9 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 2
  %10 = load i8, i8* %9, align 1, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %13, align 8
  tail call void @_ZN5blink8protocol3DOM8Frontend15documentUpdatedEv(%"class.blink::protocol::DOM::Frontend"* %14) #17
  br label %15

15:                                               ; preds = %8, %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent27InvalidateFrameOwnerElementEPNS_21HTMLFrameOwnerElementE(%"class.blink::InspectorDOMAgent"*, %"class.blink::HTMLFrameOwnerElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = icmp eq %"class.blink::HTMLFrameOwnerElement"* %1, null
  br i1 %6, label %56, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %9 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %9, i64 0, i32 0
  %11 = bitcast %"class.blink::Node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %12, %"class.blink::Node"** %3, align 8
  %13 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %10, %"class.blink::Node"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %56, label %15

15:                                               ; preds = %7
  %16 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %8, align 8
  %17 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %16, i64 0, i32 0
  %18 = bitcast %"class.blink::Node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  %19 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 0, i32 0
  %24 = icmp eq %"class.blink::Node"* %23, %12
  br i1 %24, label %25, label %29

25:                                               ; preds = %15
  %26 = bitcast %"class.blink::HTMLFrameOwnerElement"* %1 to %"class.blink::Document"*
  %27 = call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* nonnull %26) #17
  %28 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %34

29:                                               ; preds = %15
  %30 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %"class.blink::Node"** %30 to %"class.blink::ContainerNode"**
  %32 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %32, i64 0, i32 0
  br label %34

34:                                               ; preds = %25, %29
  %35 = phi %"class.blink::Node"* [ %33, %29 ], [ %28, %25 ]
  store %"class.blink::Node"* %35, %"class.blink::Node"** %4, align 8
  %36 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %17, %"class.blink::Node"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  %37 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %37, align 8
  call void @_ZN5blink8protocol3DOM8Frontend16childNodeRemovedEii(%"class.blink::protocol::DOM::Frontend"* %38, i32 %36, i32 %13) #17
  call void @_ZN5blink17InspectorDOMAgent6UnbindEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %12)
  %39 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %8, align 8
  %40 = call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %12, i32 0, i1 zeroext false, %"class.blink::HeapHashMap.2752"* %39, %"class.std::__1::vector.3379"* null)
  %41 = bitcast %"class.blink::Node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #17
  store %"class.blink::Node"* inttoptr (i64 -6148914691236517206 to %"class.blink::Node"*), %"class.blink::Node"** %5, align 8
  br label %42

42:                                               ; preds = %42, %34
  %43 = phi %"class.blink::Node"* [ %12, %34 ], [ %45, %42 ]
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 4, i32 0, i32 0
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %46 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %45) #17
  br i1 %46, label %42, label %47

47:                                               ; preds = %42
  store %"class.blink::Node"* %45, %"class.blink::Node"** %5, align 8
  %48 = icmp eq %"class.blink::Node"* %45, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %47
  %50 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %8, align 8
  %51 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %50, i64 0, i32 0
  %52 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %51, %"class.blink::Node"** nonnull dereferenceable(8) %5)
  br label %53

53:                                               ; preds = %49, %47
  %54 = phi i32 [ %52, %49 ], [ 0, %47 ]
  %55 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %37, align 8
  call void @_ZN5blink8protocol3DOM8Frontend17childNodeInsertedEiiNSt3__110unique_ptrINS1_4NodeENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::DOM::Frontend"* %55, i32 %36, i32 %54, %"class.blink::protocol::DOM::Node"* nonnull %40) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #17
  br label %56

56:                                               ; preds = %53, %7, %2
  ret void
}

declare void @_ZN5blink8protocol3DOM8Frontend16childNodeRemovedEii(%"class.blink::protocol::DOM::Frontend"*, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink8protocol3DOM8Frontend17childNodeInsertedEiiNSt3__110unique_ptrINS1_4NodeENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::DOM::Frontend"*, i32, i32, %"class.blink::protocol::DOM::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent13DidCommitLoadEPNS_10LocalFrameEPNS_14DocumentLoaderE(%"class.blink::InspectorDOMAgent"*, %"class.blink::LocalFrame"* nocapture readnone, %"class.blink::DocumentLoader"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %2, i64 0, i32 21, i32 0, i32 0
  %5 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %4, align 8
  %6 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %5) #17
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %11, i64 %14
  br i1 %9, label %47, label %16

16:                                               ; preds = %3
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"class.blink::Member.2749"* [ %23, %22 ], [ %11, %16 ]
  %20 = bitcast %"class.blink::Member.2749"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %25 [
    i64 -1, label %22
    i64 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %19, i64 1
  %24 = icmp eq %"class.blink::Member.2749"* %23, %15
  br i1 %24, label %47, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"class.blink::Member.2749"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"class.blink::Member.2749"* %26, %15
  br i1 %27, label %47, label %28

28:                                               ; preds = %25, %45
  %29 = phi %"class.blink::Member.2749"* [ %39, %45 ], [ %26, %25 ]
  %30 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %29, i64 0, i32 0, i32 0
  %31 = load %"struct.blink::InspectorDOMAgent::DOMListener"*, %"struct.blink::InspectorDOMAgent::DOMListener"** %30, align 8
  %32 = bitcast %"struct.blink::InspectorDOMAgent::DOMListener"* %31 to void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Document"*)***
  %33 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Document"*)**, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Document"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Document"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Document"*)** %33, i64 3
  %35 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Document"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Document"*)** %34, align 8
  tail call void %35(%"struct.blink::InspectorDOMAgent::DOMListener"* %31, %"class.blink::Document"* %6) #17
  %36 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %29, i64 1
  %37 = icmp eq %"class.blink::Member.2749"* %36, %15
  br i1 %37, label %47, label %38

38:                                               ; preds = %28, %42
  %39 = phi %"class.blink::Member.2749"* [ %43, %42 ], [ %36, %28 ]
  %40 = bitcast %"class.blink::Member.2749"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  switch i64 %41, label %45 [
    i64 -1, label %42
    i64 0, label %42
  ]

42:                                               ; preds = %38, %38
  %43 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %39, i64 1
  %44 = icmp eq %"class.blink::Member.2749"* %43, %15
  br i1 %44, label %47, label %38

45:                                               ; preds = %38
  %46 = icmp eq %"class.blink::Member.2749"* %39, %15
  br i1 %46, label %47, label %28

47:                                               ; preds = %22, %28, %45, %42, %3, %25
  %48 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %49, i64 0, i32 1, i32 0, i32 0
  %51 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %50, align 8
  %52 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %4, align 8
  %53 = icmp eq %"class.blink::LocalFrame"* %52, %51
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %52) #17
  %56 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* %55) #17
  tail call void @_ZN5blink17InspectorDOMAgent27InvalidateFrameOwnerElementEPNS_21HTMLFrameOwnerElementE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::HTMLFrameOwnerElement"* %56)
  br label %84

57:                                               ; preds = %47
  %58 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %51) #17
  %59 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 14
  %60 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.blink::Document"*, %"class.blink::Document"** %60, align 8
  %62 = icmp eq %"class.blink::Document"* %61, %58
  br i1 %62, label %84, label %63

63:                                               ; preds = %57
  tail call void @_ZN5blink17InspectorDOMAgent23DiscardFrontendBindingsEv(%"class.blink::InspectorDOMAgent"* %0) #17
  %64 = ptrtoint %"class.blink::Document"* %58 to i64
  %65 = bitcast %"class.blink::Member.326"* %59 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.blink::Document"* %58 to i8*
  %70 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %69) #17
  br label %71

71:                                               ; preds = %68, %63
  %72 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 2
  %73 = load i8, i8* %72, align 1, !range !3
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %84, label %75

75:                                               ; preds = %71
  %76 = icmp eq %"class.blink::Document"* %58, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %58, i64 0, i32 68
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %77, %75
  %82 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %83 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %82, align 8
  tail call void @_ZN5blink8protocol3DOM8Frontend15documentUpdatedEv(%"class.blink::protocol::DOM::Frontend"* %83) #17
  br label %84

84:                                               ; preds = %81, %77, %71, %57, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent30DidRestoreFromBackForwardCacheEPNS_10LocalFrameE(%"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 2
  %4 = load i8, i8* %3, align 1, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %1) #17
  %8 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %8, align 8
  tail call void @_ZN5blink8protocol3DOM8Frontend15documentUpdatedEv(%"class.blink::protocol::DOM::Frontend"* %9) #17
  br label %10

10:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent16DidInsertDOMNodeEPNS_4NodeE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.blink::Node"*, align 8
  %7 = tail call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %1)
  br i1 %7, label %183, label %8

8:                                                ; preds = %2
  tail call void @_ZN5blink17InspectorDOMAgent6UnbindEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %1)
  %9 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #17
  %10 = icmp eq %"class.blink::ContainerNode"* %9, null
  br i1 %10, label %183, label %11

11:                                               ; preds = %8
  %12 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %14, i64 0, i32 0
  %16 = bitcast %"class.blink::Node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0
  store %"class.blink::Node"* %17, %"class.blink::Node"** %4, align 8
  %18 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %15, %"class.blink::Node"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  store i32 %18, i32* %3, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %182, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = icmp eq i32* %22, null
  br i1 %23, label %79, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, -1
  %28 = zext i32 %27 to i64
  %29 = shl i32 %18, 15
  %30 = xor i32 %29, -1
  %31 = add i32 %18, %30
  %32 = lshr i32 %31, 10
  %33 = xor i32 %32, %31
  %34 = mul i32 %33, 9
  %35 = lshr i32 %34, 6
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 11
  %38 = xor i32 %37, -1
  %39 = add i32 %36, %38
  %40 = lshr i32 %39, 16
  %41 = xor i32 %40, %39
  %42 = and i32 %27, %41
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %22, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, %18
  br i1 %46, label %76, label %47

47:                                               ; preds = %24
  %48 = xor i32 %41, -1
  %49 = lshr i32 %39, 23
  %50 = add i32 %49, %48
  %51 = shl i32 %50, 12
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 7
  %54 = xor i32 %53, %52
  %55 = shl i32 %54, 2
  %56 = xor i32 %55, %54
  %57 = lshr i32 %56, 20
  %58 = xor i32 %57, %56
  %59 = or i32 %58, 1
  %60 = zext i32 %59 to i64
  br label %61

61:                                               ; preds = %66, %47
  %62 = phi i32 [ %45, %47 ], [ %72, %66 ]
  %63 = phi i64 [ %43, %47 ], [ %70, %66 ]
  %64 = phi i64 [ 0, %47 ], [ %68, %66 ]
  %65 = icmp eq i32 %62, 0
  br i1 %65, label %79, label %66

66:                                               ; preds = %61
  %67 = icmp eq i64 %64, 0
  %68 = select i1 %67, i64 %60, i64 %64
  %69 = add i64 %68, %63
  %70 = and i64 %69, %28
  %71 = getelementptr inbounds i32, i32* %22, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, %18
  br i1 %73, label %74, label %61

74:                                               ; preds = %66
  %75 = getelementptr inbounds i32, i32* %22, i64 %70
  br label %76

76:                                               ; preds = %74, %24
  %77 = phi i32* [ %44, %24 ], [ %75, %74 ]
  %78 = icmp eq i32* %77, null
  br i1 %78, label %79, label %162

79:                                               ; preds = %61, %76, %20
  %80 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #17
  store i32 -1431655766, i32* %5, align 4
  %81 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 12
  %82 = getelementptr inbounds %"class.WTF::HashMap.2785", %"class.WTF::HashMap.2785"* %81, i64 0, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.2789"*, %"struct.WTF::KeyValuePair.2789"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.2789"* %83, null
  br i1 %84, label %144, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = add i32 %87, -1
  %89 = zext i32 %88 to i64
  %90 = shl i32 %18, 15
  %91 = xor i32 %90, -1
  %92 = add i32 %18, %91
  %93 = lshr i32 %92, 10
  %94 = xor i32 %93, %92
  %95 = mul i32 %94, 9
  %96 = lshr i32 %95, 6
  %97 = xor i32 %96, %95
  %98 = shl i32 %97, 11
  %99 = xor i32 %98, -1
  %100 = add i32 %97, %99
  %101 = lshr i32 %100, 16
  %102 = xor i32 %101, %100
  %103 = and i32 %88, %102
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %83, i64 %104
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %105, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, %18
  br i1 %108, label %137, label %109

109:                                              ; preds = %85
  %110 = xor i32 %102, -1
  %111 = lshr i32 %100, 23
  %112 = add i32 %111, %110
  %113 = shl i32 %112, 12
  %114 = xor i32 %113, %112
  %115 = lshr i32 %114, 7
  %116 = xor i32 %115, %114
  %117 = shl i32 %116, 2
  %118 = xor i32 %117, %116
  %119 = lshr i32 %118, 20
  %120 = xor i32 %119, %118
  %121 = or i32 %120, 1
  %122 = zext i32 %121 to i64
  br label %123

123:                                              ; preds = %128, %109
  %124 = phi i32 [ %107, %109 ], [ %135, %128 ]
  %125 = phi i64 [ %104, %109 ], [ %132, %128 ]
  %126 = phi i64 [ 0, %109 ], [ %130, %128 ]
  %127 = icmp eq i32 %124, 0
  br i1 %127, label %144, label %128

128:                                              ; preds = %123
  %129 = icmp eq i64 %126, 0
  %130 = select i1 %129, i64 %122, i64 %126
  %131 = add i64 %130, %125
  %132 = and i64 %131, %89
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %83, i64 %132
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %133, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, %18
  br i1 %136, label %137, label %123

137:                                              ; preds = %128, %85
  %138 = phi %"struct.WTF::KeyValuePair.2789"* [ %105, %85 ], [ %133, %128 ]
  %139 = icmp eq %"struct.WTF::KeyValuePair.2789"* %138, null
  br i1 %139, label %144, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %138, i64 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = add i32 %142, 1
  br label %144

144:                                              ; preds = %123, %79, %137, %140
  %145 = phi i32 [ %143, %140 ], [ 1, %137 ], [ 1, %79 ], [ 1, %123 ]
  store i32 %145, i32* %5, align 4
  %146 = getelementptr inbounds %"class.WTF::HashMap.2785", %"class.WTF::HashMap.2785"* %81, i64 0, i32 0
  %147 = call { %"struct.WTF::KeyValuePair.2789"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERiSF_EENS_18HashTableAddResultISB_S2_EEOT0_OT1_(%"class.WTF::HashTable.2786"* %146, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %5) #17
  %148 = extractvalue { %"struct.WTF::KeyValuePair.2789"*, i8 } %147, 1
  %149 = and i8 %148, 1
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %144
  %152 = load i32, i32* %5, align 4
  br label %157

153:                                              ; preds = %144
  %154 = extractvalue { %"struct.WTF::KeyValuePair.2789"*, i8 } %147, 0
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %154, i64 0, i32 1
  %156 = load i32, i32* %5, align 4
  store i32 %156, i32* %155, align 4
  br label %157

157:                                              ; preds = %151, %153
  %158 = phi i32 [ %152, %151 ], [ %156, %153 ]
  %159 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %160 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %159, align 8
  %161 = load i32, i32* %3, align 4
  call void @_ZN5blink8protocol3DOM8Frontend21childNodeCountUpdatedEii(%"class.blink::protocol::DOM::Frontend"* %160, i32 %161, i32 %158) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #17
  br label %182

162:                                              ; preds = %76
  %163 = bitcast %"class.blink::Node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #17
  store %"class.blink::Node"* inttoptr (i64 -6148914691236517206 to %"class.blink::Node"*), %"class.blink::Node"** %6, align 8
  br label %164

164:                                              ; preds = %164, %162
  %165 = phi %"class.blink::Node"* [ %1, %162 ], [ %167, %164 ]
  %166 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %165, i64 0, i32 4, i32 0, i32 0
  %167 = load %"class.blink::Node"*, %"class.blink::Node"** %166, align 8
  %168 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %167) #17
  br i1 %168, label %164, label %169

169:                                              ; preds = %164
  store %"class.blink::Node"* %167, %"class.blink::Node"** %6, align 8
  %170 = icmp eq %"class.blink::Node"* %167, null
  br i1 %170, label %175, label %171

171:                                              ; preds = %169
  %172 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %13, align 8
  %173 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %172, i64 0, i32 0
  %174 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %173, %"class.blink::Node"** nonnull dereferenceable(8) %6)
  br label %175

175:                                              ; preds = %171, %169
  %176 = phi i32 [ %174, %171 ], [ 0, %169 ]
  %177 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %13, align 8
  %178 = call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %1, i32 0, i1 zeroext false, %"class.blink::HeapHashMap.2752"* %177, %"class.std::__1::vector.3379"* null)
  %179 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %180 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %179, align 8
  %181 = load i32, i32* %3, align 4
  call void @_ZN5blink8protocol3DOM8Frontend17childNodeInsertedEiiNSt3__110unique_ptrINS1_4NodeENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::DOM::Frontend"* %180, i32 %181, i32 %176, %"class.blink::protocol::DOM::Node"* nonnull %178) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #17
  br label %182

182:                                              ; preds = %157, %175, %11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #17
  br label %183

183:                                              ; preds = %182, %8, %2
  ret void
}

declare void @_ZN5blink8protocol3DOM8Frontend21childNodeCountUpdatedEii(%"class.blink::protocol::DOM::Frontend"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent17WillRemoveDOMNodeEPNS_4NodeE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %1)
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZN5blink17InspectorDOMAgent14DOMNodeRemovedEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %1)
  br label %5

5:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent14DOMNodeRemovedEPNS_4NodeE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.blink::Node"*, align 8
  %7 = alloca i32, align 4
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8
  %8 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #17
  %9 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %10 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %9, align 8
  %11 = ptrtoint %"class.blink::ContainerNode"* %8 to i64
  %12 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %10, i64 0, i32 0, i32 0
  %13 = bitcast %"class.blink::Node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  %14 = bitcast %"class.blink::Node"** %3 to i64*
  store i64 %11, i64* %14, align 8
  %15 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.3317"* %12, %"class.blink::Node"** nonnull dereferenceable(8) %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  br i1 %15, label %16, label %172

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %8, i64 0, i32 0
  %18 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #17
  %19 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %9, align 8
  %20 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %19, i64 0, i32 0
  %21 = bitcast %"class.blink::Node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  store %"class.blink::Node"* %17, %"class.blink::Node"** %6, align 8
  %22 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %20, %"class.blink::Node"** nonnull dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  store i32 %22, i32* %5, align 4
  %23 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = icmp eq i32* %24, null
  br i1 %25, label %81, label %26

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 10, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, -1
  %30 = zext i32 %29 to i64
  %31 = shl i32 %22, 15
  %32 = xor i32 %31, -1
  %33 = add i32 %22, %32
  %34 = lshr i32 %33, 10
  %35 = xor i32 %34, %33
  %36 = mul i32 %35, 9
  %37 = lshr i32 %36, 6
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 11
  %40 = xor i32 %39, -1
  %41 = add i32 %38, %40
  %42 = lshr i32 %41, 16
  %43 = xor i32 %42, %41
  %44 = and i32 %29, %43
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %24, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, %22
  br i1 %48, label %78, label %49

49:                                               ; preds = %26
  %50 = xor i32 %43, -1
  %51 = lshr i32 %41, 23
  %52 = add i32 %51, %50
  %53 = shl i32 %52, 12
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 7
  %56 = xor i32 %55, %54
  %57 = shl i32 %56, 2
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 20
  %60 = xor i32 %59, %58
  %61 = or i32 %60, 1
  %62 = zext i32 %61 to i64
  br label %63

63:                                               ; preds = %68, %49
  %64 = phi i32 [ %47, %49 ], [ %74, %68 ]
  %65 = phi i64 [ %45, %49 ], [ %72, %68 ]
  %66 = phi i64 [ 0, %49 ], [ %70, %68 ]
  %67 = icmp eq i32 %64, 0
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  %69 = icmp eq i64 %66, 0
  %70 = select i1 %69, i64 %62, i64 %66
  %71 = add i64 %70, %65
  %72 = and i64 %71, %30
  %73 = getelementptr inbounds i32, i32* %24, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, %22
  br i1 %75, label %76, label %63

76:                                               ; preds = %68
  %77 = getelementptr inbounds i32, i32* %24, i64 %72
  br label %78

78:                                               ; preds = %76, %26
  %79 = phi i32* [ %46, %26 ], [ %77, %76 ]
  %80 = icmp eq i32* %79, null
  br i1 %80, label %81, label %164

81:                                               ; preds = %63, %78, %16
  %82 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #17
  store i32 -1431655766, i32* %7, align 4
  %83 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 12
  %84 = getelementptr inbounds %"class.WTF::HashMap.2785", %"class.WTF::HashMap.2785"* %83, i64 0, i32 0, i32 0
  %85 = load %"struct.WTF::KeyValuePair.2789"*, %"struct.WTF::KeyValuePair.2789"** %84, align 8
  %86 = icmp eq %"struct.WTF::KeyValuePair.2789"* %85, null
  br i1 %86, label %146, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 12, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, -1
  %91 = zext i32 %90 to i64
  %92 = shl i32 %22, 15
  %93 = xor i32 %92, -1
  %94 = add i32 %22, %93
  %95 = lshr i32 %94, 10
  %96 = xor i32 %95, %94
  %97 = mul i32 %96, 9
  %98 = lshr i32 %97, 6
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 11
  %101 = xor i32 %100, -1
  %102 = add i32 %99, %101
  %103 = lshr i32 %102, 16
  %104 = xor i32 %103, %102
  %105 = and i32 %90, %104
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %85, i64 %106
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %107, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, %22
  br i1 %110, label %139, label %111

111:                                              ; preds = %87
  %112 = xor i32 %104, -1
  %113 = lshr i32 %102, 23
  %114 = add i32 %113, %112
  %115 = shl i32 %114, 12
  %116 = xor i32 %115, %114
  %117 = lshr i32 %116, 7
  %118 = xor i32 %117, %116
  %119 = shl i32 %118, 2
  %120 = xor i32 %119, %118
  %121 = lshr i32 %120, 20
  %122 = xor i32 %121, %120
  %123 = or i32 %122, 1
  %124 = zext i32 %123 to i64
  br label %125

125:                                              ; preds = %130, %111
  %126 = phi i32 [ %109, %111 ], [ %137, %130 ]
  %127 = phi i64 [ %106, %111 ], [ %134, %130 ]
  %128 = phi i64 [ 0, %111 ], [ %132, %130 ]
  %129 = icmp eq i32 %126, 0
  br i1 %129, label %146, label %130

130:                                              ; preds = %125
  %131 = icmp eq i64 %128, 0
  %132 = select i1 %131, i64 %124, i64 %128
  %133 = add i64 %132, %127
  %134 = and i64 %133, %91
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %85, i64 %134
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %135, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, %22
  br i1 %138, label %139, label %125

139:                                              ; preds = %130, %87
  %140 = phi %"struct.WTF::KeyValuePair.2789"* [ %107, %87 ], [ %135, %130 ]
  %141 = icmp eq %"struct.WTF::KeyValuePair.2789"* %140, null
  br i1 %141, label %146, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %140, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = add i32 %144, -1
  br label %146

146:                                              ; preds = %125, %81, %139, %142
  %147 = phi i32 [ %145, %142 ], [ -1, %139 ], [ -1, %81 ], [ -1, %125 ]
  store i32 %147, i32* %7, align 4
  %148 = getelementptr inbounds %"class.WTF::HashMap.2785", %"class.WTF::HashMap.2785"* %83, i64 0, i32 0
  %149 = call { %"struct.WTF::KeyValuePair.2789"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERiSF_EENS_18HashTableAddResultISB_S2_EEOT0_OT1_(%"class.WTF::HashTable.2786"* %148, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %7) #17
  %150 = extractvalue { %"struct.WTF::KeyValuePair.2789"*, i8 } %149, 1
  %151 = and i8 %150, 1
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %146
  %154 = load i32, i32* %7, align 4
  br label %159

155:                                              ; preds = %146
  %156 = extractvalue { %"struct.WTF::KeyValuePair.2789"*, i8 } %149, 0
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %156, i64 0, i32 1
  %158 = load i32, i32* %7, align 4
  store i32 %158, i32* %157, align 4
  br label %159

159:                                              ; preds = %153, %155
  %160 = phi i32 [ %154, %153 ], [ %158, %155 ]
  %161 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %162 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %161, align 8
  %163 = load i32, i32* %5, align 4
  call void @_ZN5blink8protocol3DOM8Frontend21childNodeCountUpdatedEii(%"class.blink::protocol::DOM::Frontend"* %162, i32 %163, i32 %160) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #17
  br label %170

164:                                              ; preds = %78
  %165 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %166 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %165, align 8
  %167 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %9, align 8
  %168 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %167, i64 0, i32 0
  %169 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %168, %"class.blink::Node"** nonnull dereferenceable(8) %4)
  call void @_ZN5blink8protocol3DOM8Frontend16childNodeRemovedEii(%"class.blink::protocol::DOM::Frontend"* %166, i32 %22, i32 %169) #17
  br label %170

170:                                              ; preds = %164, %159
  %171 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  call void @_ZN5blink17InspectorDOMAgent6UnbindEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %171)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #17
  br label %172

172:                                              ; preds = %2, %170
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent17WillModifyDOMAttrEPNS_7ElementERKN3WTF12AtomicStringES6_(%"class.blink::InspectorDOMAgent"* nocapture, %"class.blink::Element"* nocapture readnone, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %6, %8
  %10 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 19
  %11 = zext i1 %9 to i8
  store i8 %11, i8* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent16DidModifyDOMAttrEPNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::InspectorDOMAgent"* nocapture, %"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 19
  %8 = load i8, i8* %7, align 8, !range !3
  %9 = icmp eq i8 %8, 0
  store i8 0, i8* %7, align 8
  br i1 %9, label %10, label %82

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  store %"class.blink::Node"* %11, %"class.blink::Node"** %5, align 8
  %13 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %14, i64 0, i32 0
  %16 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %15, %"class.blink::Node"** nonnull dereferenceable(8) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %82, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %23, i64 %26
  br i1 %21, label %59, label %28

28:                                               ; preds = %18
  %29 = icmp eq i32 %25, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %28, %34
  %31 = phi %"class.blink::Member.2749"* [ %35, %34 ], [ %23, %28 ]
  %32 = bitcast %"class.blink::Member.2749"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  switch i64 %33, label %37 [
    i64 -1, label %34
    i64 0, label %34
  ]

34:                                               ; preds = %30, %30
  %35 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %31, i64 1
  %36 = icmp eq %"class.blink::Member.2749"* %35, %27
  br i1 %36, label %59, label %30

37:                                               ; preds = %30, %28
  %38 = phi %"class.blink::Member.2749"* [ %23, %28 ], [ %31, %30 ]
  %39 = icmp eq %"class.blink::Member.2749"* %38, %27
  br i1 %39, label %59, label %40

40:                                               ; preds = %37, %57
  %41 = phi %"class.blink::Member.2749"* [ %51, %57 ], [ %38, %37 ]
  %42 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %41, i64 0, i32 0, i32 0
  %43 = load %"struct.blink::InspectorDOMAgent::DOMListener"*, %"struct.blink::InspectorDOMAgent::DOMListener"** %42, align 8
  %44 = bitcast %"struct.blink::InspectorDOMAgent::DOMListener"* %43 to void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)***
  %45 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)**, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)** %45, i64 5
  %47 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)** %46, align 8
  call void %47(%"struct.blink::InspectorDOMAgent::DOMListener"* %43, %"class.blink::Element"* %1) #17
  %48 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %41, i64 1
  %49 = icmp eq %"class.blink::Member.2749"* %48, %27
  br i1 %49, label %59, label %50

50:                                               ; preds = %40, %54
  %51 = phi %"class.blink::Member.2749"* [ %55, %54 ], [ %48, %40 ]
  %52 = bitcast %"class.blink::Member.2749"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  switch i64 %53, label %57 [
    i64 -1, label %54
    i64 0, label %54
  ]

54:                                               ; preds = %50, %50
  %55 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %51, i64 1
  %56 = icmp eq %"class.blink::Member.2749"* %55, %27
  br i1 %56, label %59, label %50

57:                                               ; preds = %50
  %58 = icmp eq %"class.blink::Member.2749"* %51, %27
  br i1 %58, label %59, label %40

59:                                               ; preds = %34, %40, %57, %54, %18, %37
  %60 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %61 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %60, align 8
  %62 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #17
  %63 = call %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"* %2) #17
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  %65 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0
  call void @_ZN5blink8protocol3DOM8Frontend17attributeModifiedEiRKN3WTF6StringES6_(%"class.blink::protocol::DOM::Frontend"* %61, i32 %16, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %65) #17
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #17
  br label %81

81:                                               ; preds = %59, %77, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #17
  br label %82

82:                                               ; preds = %81, %10, %4
  ret void
}

declare void @_ZN5blink8protocol3DOM8Frontend17attributeModifiedEiRKN3WTF6StringES6_(%"class.blink::protocol::DOM::Frontend"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent16DidRemoveDOMAttrEPNS_7ElementERKNS_13QualifiedNameE(%"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %7 = bitcast %"class.blink::Node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  store %"class.blink::Node"* %6, %"class.blink::Node"** %4, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %9 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %9, i64 0, i32 0
  %11 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %10, %"class.blink::Node"** nonnull dereferenceable(8) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %76, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %18, i64 %21
  br i1 %16, label %54, label %23

23:                                               ; preds = %13
  %24 = icmp eq i32 %20, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %23, %29
  %26 = phi %"class.blink::Member.2749"* [ %30, %29 ], [ %18, %23 ]
  %27 = bitcast %"class.blink::Member.2749"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  switch i64 %28, label %32 [
    i64 -1, label %29
    i64 0, label %29
  ]

29:                                               ; preds = %25, %25
  %30 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %26, i64 1
  %31 = icmp eq %"class.blink::Member.2749"* %30, %22
  br i1 %31, label %54, label %25

32:                                               ; preds = %25, %23
  %33 = phi %"class.blink::Member.2749"* [ %18, %23 ], [ %26, %25 ]
  %34 = icmp eq %"class.blink::Member.2749"* %33, %22
  br i1 %34, label %54, label %35

35:                                               ; preds = %32, %52
  %36 = phi %"class.blink::Member.2749"* [ %46, %52 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %36, i64 0, i32 0, i32 0
  %38 = load %"struct.blink::InspectorDOMAgent::DOMListener"*, %"struct.blink::InspectorDOMAgent::DOMListener"** %37, align 8
  %39 = bitcast %"struct.blink::InspectorDOMAgent::DOMListener"* %38 to void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)***
  %40 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)**, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)** %40, i64 5
  %42 = load void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)*, void (%"struct.blink::InspectorDOMAgent::DOMListener"*, %"class.blink::Element"*)** %41, align 8
  call void %42(%"struct.blink::InspectorDOMAgent::DOMListener"* %38, %"class.blink::Element"* %1) #17
  %43 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %36, i64 1
  %44 = icmp eq %"class.blink::Member.2749"* %43, %22
  br i1 %44, label %54, label %45

45:                                               ; preds = %35, %49
  %46 = phi %"class.blink::Member.2749"* [ %50, %49 ], [ %43, %35 ]
  %47 = bitcast %"class.blink::Member.2749"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  switch i64 %48, label %52 [
    i64 -1, label %49
    i64 0, label %49
  ]

49:                                               ; preds = %45, %45
  %50 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %46, i64 1
  %51 = icmp eq %"class.blink::Member.2749"* %50, %22
  br i1 %51, label %54, label %45

52:                                               ; preds = %45
  %53 = icmp eq %"class.blink::Member.2749"* %46, %22
  br i1 %53, label %54, label %35

54:                                               ; preds = %29, %35, %52, %49, %13, %32
  %55 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %56 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %55, align 8
  %57 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #17
  %58 = call %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"* %2) #17
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %59, align 8
  call void @_ZN5blink8protocol3DOM8Frontend16attributeRemovedEiRKN3WTF6StringE(%"class.blink::protocol::DOM::Frontend"* %56, i32 %11, %"class.WTF::String"* nonnull dereferenceable(8) %5) #17
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #17
  br label %75

75:                                               ; preds = %54, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #17
  br label %76

76:                                               ; preds = %3, %75
  ret void
}

declare void @_ZN5blink8protocol3DOM8Frontend16attributeRemovedEiRKN3WTF6StringE(%"class.blink::protocol::DOM::Frontend"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.343"* @_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.368"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.56, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %24, i64 %25
  ret %"class.blink::Member.343"* %26
}

declare void @_ZN5blink8protocol3DOM8Frontend22inlineStyleInvalidatedENSt3__110unique_ptrINS3_6vectorIiNS3_9allocatorIiEEEENS3_14default_deleteIS8_EEEE(%"class.blink::protocol::DOM::Frontend"*, %"class.std::__1::vector.2926"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent21CharacterDataModifiedEPNS_13CharacterDataE(%"class.blink::InspectorDOMAgent"*, %"class.blink::CharacterData"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %5, i64 0, i32 0
  %7 = bitcast %"class.blink::Node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %1, i64 0, i32 0
  store %"class.blink::Node"* %8, %"class.blink::Node"** %3, align 8
  %9 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %6, %"class.blink::Node"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  %10 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %8)
  %11 = icmp ne i32 %9, 0
  %12 = and i1 %11, %10
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @_ZN5blink17InspectorDOMAgent14DOMNodeRemovedEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %8)
  br label %29

14:                                               ; preds = %2
  br i1 %11, label %16, label %15

15:                                               ; preds = %14
  call void @_ZN5blink17InspectorDOMAgent16DidInsertDOMNodeEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %8)
  br label %29

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %1, i64 0, i32 1
  %20 = load i8, i8* %19, align 8, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %1, i64 0, i32 2
  %24 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %23) #17
  br label %27

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %1, i64 0, i32 3
  br label %27

27:                                               ; preds = %22, %25
  %28 = phi %"class.WTF::String"* [ %24, %22 ], [ %26, %25 ]
  call void @_ZN5blink8protocol3DOM8Frontend21characterDataModifiedEiRKN3WTF6StringE(%"class.blink::protocol::DOM::Frontend"* %18, i32 %9, %"class.WTF::String"* dereferenceable(8) %28) #17
  br label %29

29:                                               ; preds = %27, %15, %13
  ret void
}

declare void @_ZN5blink8protocol3DOM8Frontend21characterDataModifiedEiRKN3WTF6StringE(%"class.blink::protocol::DOM::Frontend"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InspectorRevalidateDOMTask"* @_ZN5blink17InspectorDOMAgent14RevalidateTaskEv(%"class.blink::InspectorDOMAgent"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 16
  %3 = getelementptr inbounds %"class.blink::Member.2797", %"class.blink::Member.2797"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::InspectorRevalidateDOMTask"** %3, align 8
  %5 = icmp eq %"class.blink::InspectorRevalidateDOMTask"* %4, null
  br i1 %5, label %6, label %32

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_26InspectorRevalidateDOMTaskEEEPhm(i64 136) #17
  %8 = bitcast i8* %7 to %"class.blink::InspectorDOMAgent"**
  store %"class.blink::InspectorDOMAgent"* %0, %"class.blink::InspectorDOMAgent"** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 14, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %11, i8 zeroext 1) #17
  %13 = bitcast i8* %9 to %"class.blink::TimerBase"*
  tail call void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"* %13, %"class.base::SingleThreadTaskRunner"* %12) #17
  %14 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 88
  %16 = bitcast i8* %15 to i8**
  store i8* %7, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %7, i64 96
  %18 = bitcast i8* %17 to i64*
  store i64 ptrtoint (void (%"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::TimerBase"*)* @_ZN5blink26InspectorRevalidateDOMTask7OnTimerEPNS_9TimerBaseE to i64), i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 28, i1 false) #17
  %20 = getelementptr inbounds i8, i8* %7, i64 -4
  %21 = bitcast i8* %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = or i16 %22, 1
  store atomic i16 %23, i16* %21 release, align 2
  %24 = ptrtoint i8* %7 to i64
  %25 = bitcast %"class.blink::Member.2797"* %2 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  %28 = bitcast i8* %7 to %"class.blink::InspectorRevalidateDOMTask"*
  br i1 %27, label %32, label %29

29:                                               ; preds = %6
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %7) #17
  %31 = load %"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::InspectorRevalidateDOMTask"** %3, align 8
  br label %32

32:                                               ; preds = %1, %29, %6
  %33 = phi %"class.blink::InspectorRevalidateDOMTask"* [ %4, %1 ], [ %31, %29 ], [ %28, %6 ]
  ret %"class.blink::InspectorRevalidateDOMTask"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent22DidInvalidateStyleAttrEPNS_4NodeE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Element"*, align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.blink::Node"*, align 8
  store %"class.blink::Node"* %1, %"class.blink::Node"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %7 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %7, i64 0, i32 0
  %9 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %8, %"class.blink::Node"** nonnull dereferenceable(8) %5)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %58, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 16
  %13 = getelementptr inbounds %"class.blink::Member.2797", %"class.blink::Member.2797"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::InspectorRevalidateDOMTask"** %13, align 8
  %15 = icmp eq %"class.blink::InspectorRevalidateDOMTask"* %14, null
  br i1 %15, label %16, label %42

16:                                               ; preds = %11
  %17 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_26InspectorRevalidateDOMTaskEEEPhm(i64 136) #17
  %18 = bitcast i8* %17 to %"class.blink::InspectorDOMAgent"**
  store %"class.blink::InspectorDOMAgent"* %0, %"class.blink::InspectorDOMAgent"** %18, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  %20 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 14, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  %22 = call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %21, i8 zeroext 1) #17
  %23 = bitcast i8* %19 to %"class.blink::TimerBase"*
  call void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"* %23, %"class.base::SingleThreadTaskRunner"* %22) #17
  %24 = bitcast i8* %19 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds i8, i8* %17, i64 88
  %26 = bitcast i8* %25 to i8**
  store i8* %17, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %17, i64 96
  %28 = bitcast i8* %27 to i64*
  store i64 ptrtoint (void (%"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::TimerBase"*)* @_ZN5blink26InspectorRevalidateDOMTask7OnTimerEPNS_9TimerBaseE to i64), i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %17, i64 104
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 28, i1 false) #17
  %30 = getelementptr inbounds i8, i8* %17, i64 -4
  %31 = bitcast i8* %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = or i16 %32, 1
  store atomic i16 %33, i16* %31 release, align 2
  %34 = ptrtoint i8* %17 to i64
  %35 = bitcast %"class.blink::Member.2797"* %12 to i64*
  store atomic i64 %34, i64* %35 monotonic, align 8
  %36 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %37 = icmp eq i32 %36, 0
  %38 = bitcast i8* %17 to %"class.blink::InspectorRevalidateDOMTask"*
  br i1 %37, label %42, label %39

39:                                               ; preds = %16
  %40 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #17
  %41 = load %"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::InspectorRevalidateDOMTask"** %13, align 8
  br label %42

42:                                               ; preds = %11, %16, %39
  %43 = phi %"class.blink::InspectorRevalidateDOMTask"* [ %14, %11 ], [ %41, %39 ], [ %38, %16 ]
  %44 = bitcast %"class.blink::Node"** %5 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::Element"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46)
  %47 = bitcast %"class.blink::Element"** %3 to i64*
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %43, i64 0, i32 2, i32 0, i32 0
  %49 = call { %"class.blink::Member.343"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.1255"* %48, %"class.blink::Element"** nonnull dereferenceable(8) %3, %"class.blink::Element"** nonnull dereferenceable(8) %3) #17
  %50 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %43, i64 0, i32 1, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %50, align 8
  %52 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %51, i64 0, i32 0, i32 0
  %53 = call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %52) #17
  br i1 %53, label %54, label %57

54:                                               ; preds = %42
  %55 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %43, i64 0, i32 1, i32 0
  %56 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #17
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 131) #17
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %55, i64 0, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #17
  br label %57

57:                                               ; preds = %42, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46)
  br label %58

58:                                               ; preds = %2, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent17DidPushShadowRootEPNS_7ElementEPNS_10ShadowRootE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Element"*, %"class.blink::ShadowRoot"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %6 = tail call %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"* %5) #17
  %7 = icmp eq %"class.blink::Document"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %10 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %10, i64 0, i32 0
  %12 = bitcast %"class.blink::Node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  store %"class.blink::Node"* %5, %"class.blink::Node"** %4, align 8
  %13 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %11, %"class.blink::Node"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  call void @_ZN5blink17InspectorDOMAgent24PushChildNodesToFrontendEiib(%"class.blink::InspectorDOMAgent"* %0, i32 %13, i32 1, i1 zeroext false)
  %16 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %9, align 8
  %20 = call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %18, i32 0, i1 zeroext false, %"class.blink::HeapHashMap.2752"* %19, %"class.std::__1::vector.3379"* null)
  call void @_ZN5blink8protocol3DOM8Frontend16shadowRootPushedEiNSt3__110unique_ptrINS1_4NodeENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::DOM::Frontend"* %17, i32 %13, %"class.blink::protocol::DOM::Node"* nonnull %20) #17
  br label %21

21:                                               ; preds = %15, %8, %3
  ret void
}

declare void @_ZN5blink8protocol3DOM8Frontend16shadowRootPushedEiNSt3__110unique_ptrINS1_4NodeENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::DOM::Frontend"*, i32, %"class.blink::protocol::DOM::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent17WillPopShadowRootEPNS_7ElementEPNS_10ShadowRootE(%"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.blink::Element"*, %"class.blink::ShadowRoot"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %7 = tail call %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"* %6) #17
  %8 = icmp eq %"class.blink::Document"* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %11 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %11, i64 0, i32 0
  %13 = bitcast %"class.blink::Node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  store %"class.blink::Node"* %6, %"class.blink::Node"** %4, align 8
  %14 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %12, %"class.blink::Node"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  %15 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %10, align 8
  %16 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %15, i64 0, i32 0
  %17 = bitcast %"class.blink::Node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %18, %"class.blink::Node"** %5, align 8
  %19 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %16, %"class.blink::Node"** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %20 = icmp ne i32 %14, 0
  %21 = icmp ne i32 %19, 0
  %22 = and i1 %20, %21
  br i1 %22, label %23, label %26

23:                                               ; preds = %9
  %24 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %24, align 8
  call void @_ZN5blink8protocol3DOM8Frontend16shadowRootPoppedEii(%"class.blink::protocol::DOM::Frontend"* %25, i32 %14, i32 %19) #17
  br label %26

26:                                               ; preds = %9, %23, %3
  ret void
}

declare void @_ZN5blink8protocol3DOM8Frontend16shadowRootPoppedEii(%"class.blink::protocol::DOM::Frontend"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent26DidPerformSlotDistributionEPNS_15HTMLSlotElementE(%"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.blink::HTMLSlotElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %5, i64 0, i32 0
  %7 = bitcast %"class.blink::Node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %8, %"class.blink::Node"** %3, align 8
  %9 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %6, %"class.blink::Node"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %12, align 8
  %14 = call %"class.std::__1::vector.3408"* @_ZN5blink17InspectorDOMAgent28BuildDistributedNodesForSlotEPNS_15HTMLSlotElementE(%"class.blink::InspectorDOMAgent"* undef, %"class.blink::HTMLSlotElement"* %1)
  call void @_ZN5blink8protocol3DOM8Frontend23distributedNodesUpdatedEiNSt3__110unique_ptrINS3_6vectorINS4_INS1_11BackendNodeENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.blink::protocol::DOM::Frontend"* %13, i32 %9, %"class.std::__1::vector.3408"* %14) #17
  br label %15

15:                                               ; preds = %2, %11
  ret void
}

declare void @_ZN5blink8protocol3DOM8Frontend23distributedNodesUpdatedEiNSt3__110unique_ptrINS3_6vectorINS4_INS1_11BackendNodeENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.blink::protocol::DOM::Frontend"*, i32, %"class.std::__1::vector.3408"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent20FrameDocumentUpdatedEPNS_10LocalFrameE(%"class.blink::InspectorDOMAgent"* nocapture, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %1) #17
  %4 = icmp eq %"class.blink::Document"* %3, null
  br i1 %4, label %35, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %7, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %8, align 8
  %10 = icmp eq %"class.blink::LocalFrame"* %9, %1
  br i1 %10, label %11, label %35

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 14
  %13 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = icmp eq %"class.blink::Document"* %14, %3
  br i1 %15, label %35, label %16

16:                                               ; preds = %11
  tail call void @_ZN5blink17InspectorDOMAgent23DiscardFrontendBindingsEv(%"class.blink::InspectorDOMAgent"* %0) #17
  %17 = ptrtoint %"class.blink::Document"* %3 to i64
  %18 = bitcast %"class.blink::Member.326"* %12 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Document"* %3 to i8*
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %22) #17
  br label %24

24:                                               ; preds = %21, %16
  %25 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 21, i32 2
  %26 = load i8, i8* %25, align 1, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %3, i64 0, i32 68
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %34 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %33, align 8
  tail call void @_ZN5blink8protocol3DOM8Frontend15documentUpdatedEv(%"class.blink::protocol::DOM::Frontend"* %34) #17
  br label %35

35:                                               ; preds = %32, %28, %24, %11, %5, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent24FrameOwnerContentUpdatedEPNS_10LocalFrameEPNS_21HTMLFrameOwnerElementE(%"class.blink::InspectorDOMAgent"*, %"class.blink::LocalFrame"*, %"class.blink::HTMLFrameOwnerElement"*) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %2) #17
  %5 = icmp eq %"class.blink::Document"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  %7 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %1) #17
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %7, i64 0, i32 0, i32 0
  tail call void @_ZN5blink17InspectorDOMAgent6UnbindEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %8)
  br label %9

9:                                                ; preds = %3, %6
  tail call void @_ZN5blink17InspectorDOMAgent27InvalidateFrameOwnerElementEPNS_21HTMLFrameOwnerElementE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::HTMLFrameOwnerElement"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent20PseudoElementCreatedEPNS_13PseudoElementE(%"class.blink::InspectorDOMAgent"*, %"class.blink::PseudoElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = tail call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %4) #17
  %6 = icmp eq %"class.blink::Element"* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::PseudoElement"* %1 to i8 (%"class.blink::PseudoElement"*)***
  %9 = load i8 (%"class.blink::PseudoElement"*)**, i8 (%"class.blink::PseudoElement"*)*** %8, align 8
  %10 = getelementptr inbounds i8 (%"class.blink::PseudoElement"*)*, i8 (%"class.blink::PseudoElement"*)** %9, i64 34
  %11 = load i8 (%"class.blink::PseudoElement"*)*, i8 (%"class.blink::PseudoElement"*)** %10, align 8
  %12 = tail call zeroext i8 %11(%"class.blink::PseudoElement"* %1) #17
  %13 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %5, i64 0, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZN5blink13PseudoElement12IsWebExposedENS_8PseudoIdEPKNS_4NodeE(i8 zeroext %12, %"class.blink::Node"* %13) #17
  br i1 %14, label %15, label %27

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %17 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %17, i64 0, i32 0
  %19 = bitcast %"class.blink::Node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  store %"class.blink::Node"* %13, %"class.blink::Node"** %3, align 8
  %20 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %18, %"class.blink::Node"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %15
  call void @_ZN5blink17InspectorDOMAgent24PushChildNodesToFrontendEiib(%"class.blink::InspectorDOMAgent"* %0, i32 %20, i32 1, i1 zeroext false)
  %23 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %23, align 8
  %25 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %16, align 8
  %26 = call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %4, i32 0, i1 zeroext false, %"class.blink::HeapHashMap.2752"* %25, %"class.std::__1::vector.3379"* null)
  call void @_ZN5blink8protocol3DOM8Frontend18pseudoElementAddedEiNSt3__110unique_ptrINS1_4NodeENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::DOM::Frontend"* %24, i32 %20, %"class.blink::protocol::DOM::Node"* nonnull %26) #17
  br label %27

27:                                               ; preds = %22, %15, %7, %2
  ret void
}

declare %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink8protocol3DOM8Frontend18pseudoElementAddedEiNSt3__110unique_ptrINS1_4NodeENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::DOM::Frontend"*, i32, %"class.blink::protocol::DOM::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent22PseudoElementDestroyedEPNS_13PseudoElementE(%"class.blink::InspectorDOMAgent"*, %"class.blink::PseudoElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %6 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %6, i64 0, i32 0
  %8 = bitcast %"class.blink::Node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  %9 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %1, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %9, %"class.blink::Node"** %3, align 8
  %10 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %7, %"class.blink::Node"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %9) #17
  %14 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %5, align 8
  %15 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %14, i64 0, i32 0
  %16 = bitcast %"class.blink::Node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %13, i64 0, i32 0, i32 0
  store %"class.blink::Node"* %17, %"class.blink::Node"** %4, align 8
  %18 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEiNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IiEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3316"* %15, %"class.blink::Node"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  call void @_ZN5blink17InspectorDOMAgent6UnbindEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::Node"* %9)
  %19 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %19, align 8
  call void @_ZN5blink8protocol3DOM8Frontend20pseudoElementRemovedEii(%"class.blink::protocol::DOM::Frontend"* %20, i32 %18, i32 %10) #17
  br label %21

21:                                               ; preds = %2, %12
  ret void
}

declare void @_ZN5blink8protocol3DOM8Frontend20pseudoElementRemovedEii(%"class.blink::protocol::DOM::Frontend"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent11NodeCreatedEPNS_4NodeE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = alloca %"class.blink::InspectorDOMAgent::InspectorSourceLocation"*, align 8
  store %"class.blink::Node"* %1, %"class.blink::Node"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 22, i32 2
  %6 = load i8, i8* %5, align 1, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %40, label %8

8:                                                ; preds = %2
  %9 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation25CaptureWithFullStackTraceEv() #17
  %10 = icmp eq %"class.blink::SourceLocation"* %9, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %8
  %12 = ptrtoint %"class.blink::SourceLocation"* %9 to i64
  %13 = bitcast %"class.blink::InspectorDOMAgent::InspectorSourceLocation"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  %14 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17InspectorDOMAgent23InspectorSourceLocationEEEPhm(i64 16) #17
  %15 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink17InspectorDOMAgent23InspectorSourceLocationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = bitcast i8* %16 to i64*
  store i64 %12, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %14, i64 -4
  %19 = bitcast i8* %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = or i16 %20, 1
  store atomic i16 %21, i16* %19 release, align 2
  %22 = bitcast %"class.blink::InspectorDOMAgent::InspectorSourceLocation"** %4 to i8**
  store i8* %14, i8** %22, align 8
  %23 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 9, i32 0, i32 0
  %24 = call { %"struct.WTF::KeyValuePair.2780"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERPS3_PS8_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.2778"* %23, %"class.blink::Node"** nonnull dereferenceable(8) %3, %"class.blink::InspectorDOMAgent::InspectorSourceLocation"** nonnull dereferenceable(8) %4) #17
  %25 = extractvalue { %"struct.WTF::KeyValuePair.2780"*, i8 } %24, 1
  %26 = and i8 %25, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %39

28:                                               ; preds = %11
  %29 = extractvalue { %"struct.WTF::KeyValuePair.2780"*, i8 } %24, 0
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %29, i64 0, i32 1
  %31 = load %"class.blink::InspectorDOMAgent::InspectorSourceLocation"*, %"class.blink::InspectorDOMAgent::InspectorSourceLocation"** %4, align 8
  %32 = ptrtoint %"class.blink::InspectorDOMAgent::InspectorSourceLocation"* %31 to i64
  %33 = bitcast %"class.blink::Member.3995"* %30 to i64*
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %28
  %37 = bitcast %"class.blink::InspectorDOMAgent::InspectorSourceLocation"* %31 to i8*
  %38 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #17
  br label %39

39:                                               ; preds = %36, %28, %11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  br label %40

40:                                               ; preds = %8, %2, %39
  ret void
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation25CaptureWithFullStackTraceEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent24PortalRemoteFrameCreatedEPNS_17HTMLPortalElementE(%"class.blink::InspectorDOMAgent"*, %"class.blink::HTMLPortalElement"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HTMLPortalElement"* %1 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZN5blink17InspectorDOMAgent27InvalidateFrameOwnerElementEPNS_21HTMLFrameOwnerElementE(%"class.blink::InspectorDOMAgent"* %0, %"class.blink::HTMLFrameOwnerElement"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent11NodeForPathERKN3WTF6StringE(%"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::Vector.630", align 8
  %8 = alloca i8, align 1
  %9 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 14, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = icmp eq %"class.blink::Document"* %10, null
  br i1 %11, label %274, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.WTF::Vector.630"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #17
  %14 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %7, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #17
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %1, i16 zeroext 44, i1 zeroext false, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %7) #17
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %236, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %10, i64 0, i32 0, i32 0
  %20 = icmp eq i32 %16, 1
  br i1 %20, label %236, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  %26 = bitcast %"class.WTF::StringView"* %3 to i64*
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = bitcast %"class.WTF::StringView"* %4 to i64*
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %32 = bitcast %"class.WTF::StringView"* %5 to i8*
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %35 = bitcast i8** %34 to %"class.WTF::StringImpl"**
  %36 = bitcast %"class.WTF::StringView"* %5 to i64*
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %38 = bitcast %"class.WTF::StringView"* %6 to i8*
  %39 = bitcast %"class.WTF::StringView"* %6 to i64*
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  br label %46

42:                                               ; preds = %233
  %43 = load i32, i32* %15, align 4
  %44 = add i32 %43, -1
  %45 = icmp ult i32 %235, %44
  br i1 %45, label %46, label %236

46:                                               ; preds = %21, %42
  %47 = phi i32 [ 0, %21 ], [ %235, %42 ]
  %48 = phi %"class.blink::Node"* [ %19, %21 ], [ %217, %42 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #17
  store i8 1, i8* %8, align 1
  %49 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* nonnull %7, i32 %47) #17
  %50 = call i32 @_ZNK3WTF6String6ToUIntEPb(%"class.WTF::String"* %49, i8* nonnull %8) #17
  %51 = load i8, i8* %8, align 1, !range !3
  %52 = icmp eq i8 %51, 0
  %53 = icmp eq %"class.blink::Node"* %48, null
  br i1 %52, label %54, label %97

54:                                               ; preds = %46
  br i1 %53, label %94, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 12
  %59 = icmp eq i32 %58, 0
  %60 = bitcast %"class.blink::Node"* %48 to %"class.blink::Element"*
  br i1 %59, label %61, label %94

61:                                               ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #17
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  store i8* null, i8** %24, align 8
  %66 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %66, i64* %26, align 8
  br label %72

67:                                               ; preds = %61
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %23, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %25, align 8
  %71 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %72

72:                                               ; preds = %67, %65
  %73 = phi i64 [ %71, %67 ], [ %66, %65 ]
  %74 = phi i32 [ %69, %67 ], [ 0, %65 ]
  store i32 %74, i32* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #17
  store i64 %73, i64* %29, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.57, i64 0, i64 0), i8** %30, align 8
  store i32 1, i32* %31, align 8
  %75 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #17
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  %77 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16AuthorShadowRootEv(%"class.blink::Element"* nonnull %60) #17
  br label %94

78:                                               ; preds = %72
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #17
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  store i8* null, i8** %34, align 8
  %82 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %82, i64* %36, align 8
  br label %88

83:                                               ; preds = %78
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %33, align 8
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 1
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %35, align 8
  %87 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %88

88:                                               ; preds = %83, %81
  %89 = phi i64 [ %87, %83 ], [ %82, %81 ]
  %90 = phi i32 [ %85, %83 ], [ 0, %81 ]
  store i32 %90, i32* %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #17
  store i64 %89, i64* %39, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i64 0, i64 0), i8** %40, align 8
  store i32 1, i32* %41, align 8
  %91 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  %93 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* nonnull %60) #17
  br label %94

94:                                               ; preds = %54, %55, %76, %88, %92
  %95 = phi %"class.blink::ShadowRoot"* [ %77, %76 ], [ %93, %92 ], [ null, %88 ], [ null, %55 ], [ null, %54 ]
  %96 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %95, i64 0, i32 0, i32 0, i32 0
  br label %149

97:                                               ; preds = %46
  br i1 %53, label %107, label %98

98:                                               ; preds = %97
  %99 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 1
  %105 = bitcast %"class.blink::Node"* %104 to %"class.blink::Node"**
  %106 = load %"class.blink::Node"*, %"class.blink::Node"** %105, align 8
  br label %107

107:                                              ; preds = %103, %98, %97
  %108 = phi %"class.blink::Node"* [ %106, %103 ], [ null, %97 ], [ null, %98 ]
  %109 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %108) #17
  br i1 %109, label %110, label %115

110:                                              ; preds = %107, %110
  %111 = phi %"class.blink::Node"* [ %113, %110 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %111, i64 0, i32 5, i32 0, i32 0
  %113 = load %"class.blink::Node"*, %"class.blink::Node"** %112, align 8
  %114 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %113) #17
  br i1 %114, label %110, label %115

115:                                              ; preds = %110, %107
  %116 = phi %"class.blink::Node"* [ %108, %107 ], [ %113, %110 ]
  %117 = icmp eq %"class.blink::Node"* %116, null
  br i1 %117, label %232, label %121

118:                                              ; preds = %124
  %119 = add i32 %123, 1
  %120 = icmp eq %"class.blink::Node"* %127, null
  br i1 %120, label %129, label %121

121:                                              ; preds = %115, %118
  %122 = phi %"class.blink::Node"* [ %127, %118 ], [ %116, %115 ]
  %123 = phi i32 [ %119, %118 ], [ 0, %115 ]
  br label %124

124:                                              ; preds = %124, %121
  %125 = phi %"class.blink::Node"* [ %122, %121 ], [ %127, %124 ]
  %126 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %125, i64 0, i32 5, i32 0, i32 0
  %127 = load %"class.blink::Node"*, %"class.blink::Node"** %126, align 8
  %128 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %127) #17
  br i1 %128, label %124, label %118

129:                                              ; preds = %118
  %130 = icmp ult i32 %50, %119
  br i1 %130, label %131, label %232

131:                                              ; preds = %129
  br i1 %53, label %141, label %132

132:                                              ; preds = %131
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 1
  %134 = load i32, i32* %133, align 8
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %141, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 1
  %139 = bitcast %"class.blink::Node"* %138 to %"class.blink::Node"**
  %140 = load %"class.blink::Node"*, %"class.blink::Node"** %139, align 8
  br label %141

141:                                              ; preds = %137, %132, %131
  %142 = phi %"class.blink::Node"* [ %140, %137 ], [ null, %131 ], [ null, %132 ]
  %143 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %142) #17
  br i1 %143, label %144, label %149

144:                                              ; preds = %141, %144
  %145 = phi %"class.blink::Node"* [ %147, %144 ], [ %142, %141 ]
  %146 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %145, i64 0, i32 5, i32 0, i32 0
  %147 = load %"class.blink::Node"*, %"class.blink::Node"** %146, align 8
  %148 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %147) #17
  br i1 %148, label %144, label %149

149:                                              ; preds = %144, %141, %94
  %150 = phi %"class.blink::Node"* [ %96, %94 ], [ %142, %141 ], [ %147, %144 ]
  %151 = or i32 %47, 1
  %152 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* nonnull %7, i32 %151) #17
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %152, i64 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %173, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %173

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i33
  %165 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %164, i33 1) #17
  %166 = extractvalue { i33, i1 } %165, 1
  %167 = extractvalue { i33, i1 } %165, 0
  %168 = icmp slt i33 %167, 0
  %169 = or i1 %166, %168
  br i1 %169, label %170, label %171, !prof !2

170:                                              ; preds = %161
  call void @llvm.trap() #17
  unreachable

171:                                              ; preds = %161
  %172 = trunc i33 %167 to i32
  store i32 %172, i32* %162, align 4
  br label %173

173:                                              ; preds = %149, %156, %171
  %174 = icmp ne %"class.blink::Node"* %150, null
  %175 = icmp ne i32 %50, 0
  %176 = and i1 %174, %175
  br i1 %176, label %177, label %180

177:                                              ; preds = %173, %188
  %178 = phi i32 [ %189, %188 ], [ 0, %173 ]
  %179 = phi %"class.blink::Node"* [ %186, %188 ], [ %150, %173 ]
  br label %183

180:                                              ; preds = %188, %173
  %181 = phi %"class.blink::Node"* [ %150, %173 ], [ %186, %188 ]
  %182 = phi i1 [ %174, %173 ], [ %190, %188 ]
  br i1 %182, label %193, label %216

183:                                              ; preds = %177, %183
  %184 = phi %"class.blink::Node"* [ %186, %183 ], [ %179, %177 ]
  %185 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %184, i64 0, i32 5, i32 0, i32 0
  %186 = load %"class.blink::Node"*, %"class.blink::Node"** %185, align 8
  %187 = call zeroext i1 @_ZN5blink17InspectorDOMAgent12IsWhitespaceEPNS_4NodeE(%"class.blink::Node"* %186) #17
  br i1 %187, label %183, label %188

188:                                              ; preds = %183
  %189 = add nuw i32 %178, 1
  %190 = icmp ne %"class.blink::Node"* %186, null
  %191 = icmp ult i32 %189, %50
  %192 = and i1 %190, %191
  br i1 %192, label %177, label %180

193:                                              ; preds = %180
  %194 = bitcast %"class.blink::Node"* %181 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %195 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %194, align 8
  %196 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %195, i64 27
  %197 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %196, align 8
  %198 = call %"class.WTF::StringImpl"* %197(%"class.blink::Node"* nonnull %181) #17
  %199 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %198, %"class.WTF::StringImpl"* %154) #17
  %200 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %193
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = and i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  br i1 %205, label %208, label %210

208:                                              ; preds = %201
  %209 = add i32 %207, -1
  store i32 %209, i32* %206, align 4
  br label %210

210:                                              ; preds = %208, %201
  %211 = phi i32 [ %209, %208 ], [ %207, %201 ]
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %210
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #17
  br i1 %199, label %215, label %216

214:                                              ; preds = %210, %193
  br i1 %199, label %215, label %216

215:                                              ; preds = %213, %214
  br label %216

216:                                              ; preds = %213, %214, %180, %215
  %217 = phi %"class.blink::Node"* [ %181, %215 ], [ %48, %213 ], [ %48, %214 ], [ %48, %180 ]
  %218 = phi i32 [ 0, %215 ], [ 1, %213 ], [ 1, %214 ], [ 1, %180 ]
  br i1 %155, label %233, label %219

219:                                              ; preds = %216
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %233

231:                                              ; preds = %228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #17
  br label %233

232:                                              ; preds = %129, %115
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #17
  br label %236

233:                                              ; preds = %231, %228, %216
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #17
  %234 = icmp eq i32 %218, 0
  %235 = add i32 %47, 2
  br i1 %234, label %42, label %236

236:                                              ; preds = %42, %233, %18, %232, %12
  %237 = phi %"class.blink::Node"* [ null, %12 ], [ null, %232 ], [ %19, %18 ], [ %217, %42 ], [ null, %233 ]
  %238 = load %"class.WTF::String"*, %"class.WTF::String"** %14, align 8
  %239 = icmp eq %"class.WTF::String"* %238, null
  br i1 %239, label %273, label %240, !prof !4

240:                                              ; preds = %236
  %241 = bitcast %"class.WTF::String"* %238 to i8*
  %242 = load i32, i32* %15, align 4
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %271, label %244, !prof !2

244:                                              ; preds = %240
  %245 = zext i32 %242 to i64
  %246 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %238, i64 %245
  br label %247

247:                                              ; preds = %265, %244
  %248 = phi %"class.WTF::String"* [ %266, %265 ], [ %238, %244 ]
  %249 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %248, i64 0, i32 0, i32 0
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %249, align 8
  %251 = icmp eq %"class.WTF::StringImpl"* %250, null
  br i1 %251, label %265, label %252

252:                                              ; preds = %247
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  br i1 %256, label %259, label %261

259:                                              ; preds = %252
  %260 = add i32 %258, -1
  store i32 %260, i32* %257, align 4
  br label %261

261:                                              ; preds = %259, %252
  %262 = phi i32 [ %260, %259 ], [ %258, %252 ]
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %261
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %250) #17
  br label %265

265:                                              ; preds = %264, %261, %247
  %266 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %248, i64 1
  %267 = icmp eq %"class.WTF::String"* %266, %246
  br i1 %267, label %268, label %247

268:                                              ; preds = %265
  store i32 0, i32* %15, align 4
  %269 = bitcast %"class.WTF::Vector.630"* %7 to i8**
  %270 = load i8*, i8** %269, align 8
  br label %271

271:                                              ; preds = %268, %240
  %272 = phi i8* [ %270, %268 ], [ %241, %240 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %272) #17
  store %"class.WTF::String"* null, %"class.WTF::String"** %14, align 8
  br label %273

273:                                              ; preds = %236, %271
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #17
  br label %274

274:                                              ; preds = %2, %273
  %275 = phi %"class.blink::Node"* [ %237, %273 ], [ null, %2 ]
  ret %"class.blink::Node"* %275
}

declare i32 @_ZNK3WTF6String6ToUIntEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent24pushNodeByPathToFrontendERKN3WTF6StringEPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"* dereferenceable(8), i32* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 21, i32 2
  %8 = load i8, i8* %7, align 1, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %4
  %11 = tail call i8* @_Znwm(i64 32) #18
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %14, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %11, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0), i64 24, i1 false) #17
  %15 = getelementptr inbounds i8, i8* %11, i64 24
  store i8 0, i8* %15, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %5) #17
  %16 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %39

20:                                               ; preds = %10
  %21 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %21) #18
  br label %39

22:                                               ; preds = %4
  %23 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent11NodeForPathERKN3WTF6StringE(%"class.blink::InspectorDOMAgent"* %1, %"class.WTF::String"* dereferenceable(8) %2)
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  %26 = tail call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* nonnull %23)
  store i32 %26, i32* %3, align 4
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %39

27:                                               ; preds = %22
  %28 = tail call i8* @_Znwm(i64 32) #18
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %28, i8** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %31, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43, i64 0, i64 0), i64 29, i1 false) #17
  %32 = getelementptr inbounds i8, i8* %28, i64 29
  store i8 0, i8* %32, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %6) #17
  %33 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %27
  %38 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %37, %27, %20, %10, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent24pushNodeByPathToFrontendERKN3WTF6StringEPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"* dereferenceable(8), i32* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent24pushNodeByPathToFrontendERKN3WTF6StringEPi(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %6, %"class.WTF::String"* dereferenceable(8) %2, i32* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent31pushNodesByBackendIdsToFrontendENSt3__110unique_ptrINS1_6vectorIiNS1_9allocatorIiEEEENS1_14default_deleteIS6_EEEEPS9_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.std::__1::vector.2926"*, %"class.std::__1::unique_ptr.3450"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 14, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = icmp eq %"class.blink::Document"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 5, i32 0, i32 0
  %12 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %11, align 8
  %13 = ptrtoint %"class.blink::Document"* %8 to i64
  %14 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %12, i64 0, i32 0, i32 0
  %15 = bitcast %"class.blink::Node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  %16 = bitcast %"class.blink::Node"** %5 to i64*
  store i64 %13, i64* %16, align 8
  %17 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.3317"* %14, %"class.blink::Node"** nonnull dereferenceable(8) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  br i1 %17, label %30, label %18

18:                                               ; preds = %4, %10
  %19 = call i8* @_Znwm(i64 48) #18
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast i64* %21 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %22, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.44, i64 0, i64 0), i64 36, i1 false) #17
  %23 = getelementptr inbounds i8, i8* %19, i64 36
  store i8 0, i8* %23, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %6) #17
  %24 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %216

28:                                               ; preds = %18
  %29 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %29) #18
  br label %216

30:                                               ; preds = %10
  %31 = call i8* @_Znwm(i64 24) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #17
  %32 = ptrtoint i8* %31 to i64
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.3450", %"class.std::__1::unique_ptr.3450"* %3, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.std::__1::vector.2926"*, %"class.std::__1::vector.2926"** %33, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.3450"* %3 to i64*
  store i64 %32, i64* %35, align 8
  %36 = icmp eq %"class.std::__1::vector.2926"* %34, null
  br i1 %36, label %48, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %34, i64 0, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = icmp eq i32* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = ptrtoint i32* %39 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %34, i64 0, i32 0, i32 1
  %44 = bitcast i32** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = bitcast i32* %39 to i8*
  call void @_ZdlPv(i8* %45) #18
  br label %46

46:                                               ; preds = %41, %37
  %47 = bitcast %"class.std::__1::vector.2926"* %34 to i8*
  call void @_ZdlPv(i8* %47) #18
  br label %48

48:                                               ; preds = %46, %30
  %49 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %2, i64 0, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %2, i64 0, i32 0, i32 1
  %52 = load i32*, i32** %51, align 8
  %53 = icmp eq i32* %50, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 2, i32 0, i32 0
  br label %57

56:                                               ; preds = %213, %48
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %216

57:                                               ; preds = %54, %213
  %58 = phi i32* [ %50, %54 ], [ %214, %213 ]
  %59 = load i32, i32* %58, align 4
  %60 = call %"class.blink::Node"* @_ZN5blink10DOMNodeIds9NodeForIdEi(i32 %59) #17
  %61 = icmp eq %"class.blink::Node"* %60, null
  br i1 %61, label %145, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %60, i64 0, i32 3, i32 0, i32 0
  %64 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %64, i64 0, i32 2, i32 0, i32 0
  %66 = load %"class.blink::Document"*, %"class.blink::Document"** %65, align 8
  %67 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %66) #17
  %68 = icmp eq %"class.blink::LocalFrame"* %67, null
  br i1 %68, label %145, label %69

69:                                               ; preds = %62
  %70 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %55, align 8
  %71 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %63, align 8
  %72 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %71, i64 0, i32 2, i32 0, i32 0
  %73 = load %"class.blink::Document"*, %"class.blink::Document"** %72, align 8
  %74 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %73) #17
  %75 = call zeroext i1 @_ZNK5blink15InspectedFrames8ContainsEPNS_10LocalFrameE(%"class.blink::InspectedFrames"* %70, %"class.blink::LocalFrame"* %74) #17
  br i1 %75, label %76, label %145

76:                                               ; preds = %69
  %77 = load %"class.std::__1::vector.2926"*, %"class.std::__1::vector.2926"** %33, align 8
  %78 = call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* nonnull %60)
  %79 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %77, i64 0, i32 0, i32 1
  %80 = load i32*, i32** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %77, i64 0, i32 0, i32 2, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = icmp ult i32* %80, %82
  %84 = ptrtoint i32* %82 to i64
  br i1 %83, label %85, label %89

85:                                               ; preds = %76
  store i32 %78, i32* %80, align 4
  %86 = getelementptr inbounds i32, i32* %80, i64 1
  %87 = ptrtoint i32* %86 to i64
  %88 = bitcast i32** %79 to i64*
  store i64 %87, i64* %88, align 8
  br label %213

89:                                               ; preds = %76
  %90 = ptrtoint i32* %80 to i64
  %91 = bitcast i32** %79 to i64*
  %92 = bitcast %"class.std::__1::vector.2926"* %77 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %90, %93
  %95 = ashr exact i64 %94, 2
  %96 = add nsw i64 %95, 1
  %97 = icmp ugt i64 %96, 4611686018427387903
  br i1 %97, label %98, label %100

98:                                               ; preds = %89
  %99 = bitcast %"class.std::__1::vector.2926"* %77 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %99) #19
  unreachable

100:                                              ; preds = %89
  %101 = bitcast i32** %81 to i64*
  %102 = sub i64 %84, %93
  %103 = ashr exact i64 %102, 2
  %104 = icmp ult i64 %103, 2305843009213693951
  br i1 %104, label %105, label %113

105:                                              ; preds = %100
  %106 = ashr exact i64 %102, 1
  %107 = icmp ult i64 %106, %96
  %108 = select i1 %107, i64 %96, i64 %106
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %118, label %110

110:                                              ; preds = %105
  %111 = icmp ugt i64 %108, 4611686018427387903
  br i1 %111, label %112, label %113

112:                                              ; preds = %110
  call void @abort() #19
  unreachable

113:                                              ; preds = %110, %100
  %114 = phi i64 [ %108, %110 ], [ 4611686018427387903, %100 ]
  %115 = shl i64 %114, 2
  %116 = call i8* @_Znwm(i64 %115) #18
  %117 = bitcast i8* %116 to i32*
  br label %118

118:                                              ; preds = %113, %105
  %119 = phi i64 [ %114, %113 ], [ 0, %105 ]
  %120 = phi i32* [ %117, %113 ], [ null, %105 ]
  %121 = getelementptr inbounds i32, i32* %120, i64 %95
  %122 = getelementptr inbounds i32, i32* %120, i64 %119
  %123 = ptrtoint i32* %122 to i64
  store i32 %78, i32* %121, align 4
  %124 = getelementptr inbounds i32, i32* %121, i64 1
  %125 = ptrtoint i32* %124 to i64
  %126 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %77, i64 0, i32 0, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = load i64, i64* %91, align 8
  %129 = ptrtoint i32* %127 to i64
  %130 = sub i64 %128, %129
  %131 = ashr exact i64 %130, 2
  %132 = sub nsw i64 0, %131
  %133 = getelementptr inbounds i32, i32* %121, i64 %132
  %134 = ptrtoint i32* %133 to i64
  %135 = icmp sgt i64 %130, 0
  br i1 %135, label %136, label %140

136:                                              ; preds = %118
  %137 = bitcast i32* %133 to i8*
  %138 = bitcast i32* %127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %137, i8* align 4 %138, i64 %130, i1 false) #17
  %139 = load i32*, i32** %126, align 8
  br label %140

140:                                              ; preds = %136, %118
  %141 = phi i32* [ %127, %118 ], [ %139, %136 ]
  store i64 %134, i64* %92, align 8
  store i64 %125, i64* %91, align 8
  store i64 %123, i64* %101, align 8
  %142 = icmp eq i32* %141, null
  br i1 %142, label %213, label %143

143:                                              ; preds = %140
  %144 = bitcast i32* %141 to i8*
  call void @_ZdlPv(i8* %144) #18
  br label %213

145:                                              ; preds = %62, %57, %69
  %146 = load %"class.std::__1::vector.2926"*, %"class.std::__1::vector.2926"** %33, align 8
  %147 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %146, i64 0, i32 0, i32 1
  %148 = load i32*, i32** %147, align 8
  %149 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %146, i64 0, i32 0, i32 2, i32 0, i32 0
  %150 = load i32*, i32** %149, align 8
  %151 = icmp ult i32* %148, %150
  %152 = ptrtoint i32* %150 to i64
  br i1 %151, label %153, label %157

153:                                              ; preds = %145
  store i32 0, i32* %148, align 4
  %154 = getelementptr inbounds i32, i32* %148, i64 1
  %155 = ptrtoint i32* %154 to i64
  %156 = bitcast i32** %147 to i64*
  store i64 %155, i64* %156, align 8
  br label %213

157:                                              ; preds = %145
  %158 = ptrtoint i32* %148 to i64
  %159 = bitcast i32** %147 to i64*
  %160 = bitcast %"class.std::__1::vector.2926"* %146 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = sub i64 %158, %161
  %163 = ashr exact i64 %162, 2
  %164 = add nsw i64 %163, 1
  %165 = icmp ugt i64 %164, 4611686018427387903
  br i1 %165, label %166, label %168

166:                                              ; preds = %157
  %167 = bitcast %"class.std::__1::vector.2926"* %146 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %167) #19
  unreachable

168:                                              ; preds = %157
  %169 = bitcast i32** %149 to i64*
  %170 = sub i64 %152, %161
  %171 = ashr exact i64 %170, 2
  %172 = icmp ult i64 %171, 2305843009213693951
  br i1 %172, label %173, label %181

173:                                              ; preds = %168
  %174 = ashr exact i64 %170, 1
  %175 = icmp ult i64 %174, %164
  %176 = select i1 %175, i64 %164, i64 %174
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %186, label %178

178:                                              ; preds = %173
  %179 = icmp ugt i64 %176, 4611686018427387903
  br i1 %179, label %180, label %181

180:                                              ; preds = %178
  call void @abort() #19
  unreachable

181:                                              ; preds = %178, %168
  %182 = phi i64 [ %176, %178 ], [ 4611686018427387903, %168 ]
  %183 = shl i64 %182, 2
  %184 = call i8* @_Znwm(i64 %183) #18
  %185 = bitcast i8* %184 to i32*
  br label %186

186:                                              ; preds = %181, %173
  %187 = phi i64 [ %182, %181 ], [ 0, %173 ]
  %188 = phi i32* [ %185, %181 ], [ null, %173 ]
  %189 = getelementptr inbounds i32, i32* %188, i64 %163
  %190 = getelementptr inbounds i32, i32* %188, i64 %187
  %191 = ptrtoint i32* %190 to i64
  store i32 0, i32* %189, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = ptrtoint i32* %192 to i64
  %194 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %146, i64 0, i32 0, i32 0
  %195 = load i32*, i32** %194, align 8
  %196 = load i64, i64* %159, align 8
  %197 = ptrtoint i32* %195 to i64
  %198 = sub i64 %196, %197
  %199 = ashr exact i64 %198, 2
  %200 = sub nsw i64 0, %199
  %201 = getelementptr inbounds i32, i32* %189, i64 %200
  %202 = ptrtoint i32* %201 to i64
  %203 = icmp sgt i64 %198, 0
  br i1 %203, label %204, label %208

204:                                              ; preds = %186
  %205 = bitcast i32* %201 to i8*
  %206 = bitcast i32* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %205, i8* align 4 %206, i64 %198, i1 false) #17
  %207 = load i32*, i32** %194, align 8
  br label %208

208:                                              ; preds = %204, %186
  %209 = phi i32* [ %195, %186 ], [ %207, %204 ]
  store i64 %202, i64* %160, align 8
  store i64 %193, i64* %159, align 8
  store i64 %191, i64* %169, align 8
  %210 = icmp eq i32* %209, null
  br i1 %210, label %213, label %211

211:                                              ; preds = %208
  %212 = bitcast i32* %209 to i8*
  call void @_ZdlPv(i8* %212) #18
  br label %213

213:                                              ; preds = %211, %208, %153, %143, %140, %85
  %214 = getelementptr inbounds i32, i32* %58, i64 1
  %215 = icmp eq i32* %214, %52
  br i1 %215, label %56, label %57

216:                                              ; preds = %28, %18, %56
  %217 = icmp eq %"class.std::__1::vector.2926"* %2, null
  br i1 %217, label %229, label %218

218:                                              ; preds = %216
  %219 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %2, i64 0, i32 0, i32 0
  %220 = load i32*, i32** %219, align 8
  %221 = icmp eq i32* %220, null
  br i1 %221, label %227, label %222

222:                                              ; preds = %218
  %223 = ptrtoint i32* %220 to i64
  %224 = getelementptr inbounds %"class.std::__1::vector.2926", %"class.std::__1::vector.2926"* %2, i64 0, i32 0, i32 1
  %225 = bitcast i32** %224 to i64*
  store i64 %223, i64* %225, align 8
  %226 = bitcast i32* %220 to i8*
  call void @_ZdlPv(i8* %226) #18
  br label %227

227:                                              ; preds = %222, %218
  %228 = bitcast %"class.std::__1::vector.2926"* %2 to i8*
  call void @_ZdlPv(i8* %228) #18
  br label %229

229:                                              ; preds = %216, %227
  ret void
}

declare zeroext i1 @_ZNK5blink15InspectedFrames8ContainsEPNS_10LocalFrameE(%"class.blink::InspectedFrames"*, %"class.blink::LocalFrame"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent31pushNodesByBackendIdsToFrontendENSt3__110unique_ptrINS1_6vectorIiNS1_9allocatorIiEEEENS1_14default_deleteIS6_EEEEPS9_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.std::__1::vector.2926"*, %"class.std::__1::unique_ptr.3450"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent31pushNodesByBackendIdsToFrontendENSt3__110unique_ptrINS1_6vectorIiNS1_9allocatorIiEEEENS1_14default_deleteIS6_EEEEPS9_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %6, %"class.std::__1::vector.2926"* %2, %"class.std::__1::unique_ptr.3450"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent16setInspectedNodeEi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.crdtp::DispatchResponse", align 8
  %6 = bitcast %"class.crdtp::DispatchResponse"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7)
  %8 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* %1, i32 %2) #17, !noalias !105
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %22

10:                                               ; preds = %3
  %11 = tail call i8* @_Znwm(i64 48) #18
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %11, i8** %12, align 8, !noalias !105
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %14, align 8, !noalias !105
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %11, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i64 33, i1 false) #17
  %15 = getelementptr inbounds i8, i8* %11, i64 33
  store i8 0, i8* %15, align 1, !noalias !105
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %5, %"class.std::__1::basic_string"* nonnull %4) #17
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !105
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %10
  %21 = load i8*, i8** %12, align 8, !noalias !105
  call void @_ZdlPv(i8* %21) #18
  br label %23

22:                                               ; preds = %3
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %5) #17
  br label %23

23:                                               ; preds = %10, %20, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7)
  %24 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %33, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %25, i32* %28, align 8
  %29 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %30 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %32 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #17
  br label %54

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 3
  %35 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %34, align 8
  %36 = call i8* @_Znwm(i64 16) #18
  %37 = bitcast i8* %36 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink15InspectableNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 8
  %39 = bitcast i8* %38 to i32*
  %40 = call i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"* %8) #17
  store i32 %40, i32* %39, align 8
  %41 = bitcast i8* %36 to %"class.v8_inspector::V8InspectorSession::Inspectable"*
  %42 = bitcast %"class.v8_inspector::V8InspectorSession"* %35 to void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession::Inspectable"*)***
  %43 = load void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession::Inspectable"*)**, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession::Inspectable"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession::Inspectable"*)*, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession::Inspectable"*)** %43, i64 2
  %45 = load void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession::Inspectable"*)*, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession::Inspectable"*)** %44, align 8
  call void %45(%"class.v8_inspector::V8InspectorSession"* %35, %"class.v8_inspector::V8InspectorSession::Inspectable"* nonnull %41) #17
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  %46 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 1
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %33
  %52 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #18
  br label %54

54:                                               ; preds = %27, %33, %51
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent16setInspectedNodeEi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %5 = bitcast i8* %4 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent16setInspectedNodeEi(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %5, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent19getRelayoutBoundaryEiPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, i32* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9)
  %10 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* %1, i32 %2) #17, !noalias !108
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %12, label %24

12:                                               ; preds = %4
  %13 = tail call i8* @_Znwm(i64 48) #18
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8, !noalias !108
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %16, align 8, !noalias !108
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i64 33, i1 false) #17
  %17 = getelementptr inbounds i8, i8* %13, i64 33
  store i8 0, i8* %17, align 1, !noalias !108
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull %5) #17
  %18 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1, !noalias !108
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %12
  %23 = load i8*, i8** %14, align 8, !noalias !108
  call void @_ZdlPv(i8* %23) #18
  br label %25

24:                                               ; preds = %4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %6) #17
  br label %25

25:                                               ; preds = %12, %22, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9)
  %26 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %27, i32* %30, align 8
  %31 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %32 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %34 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #17
  br label %130

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 6, i32 0, i32 0
  br i1 %39, label %45, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.blink::NodeData"** %40 to %"class.blink::NodeRareData"**
  %43 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %43, i64 0, i32 1, i32 0, i32 0
  br label %47

45:                                               ; preds = %35
  %46 = bitcast %"class.blink::NodeData"** %40 to %"class.blink::NodeRenderingData"**
  br label %47

47:                                               ; preds = %41, %45
  %48 = phi %"class.blink::NodeRenderingData"** [ %44, %41 ], [ %46, %45 ]
  %49 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %49, i64 0, i32 1
  %51 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %50, align 8
  %52 = icmp eq %"class.blink::LayoutObject"* %51, null
  br i1 %52, label %53, label %65

53:                                               ; preds = %47
  %54 = call i8* @_Znwm(i64 64) #18
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %54, i8** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast i64* %56 to <2 x i64>*
  store <2 x i64> <i64 56, i64 -9223372036854775744>, <2 x i64>* %57, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %54, i8* align 1 getelementptr inbounds ([57 x i8], [57 x i8]* @.str.45, i64 0, i64 0), i64 56, i1 false) #17
  %58 = getelementptr inbounds i8, i8* %54, i64 56
  store i8 0, i8* %58, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %59 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %130

63:                                               ; preds = %53
  %64 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %64) #18
  br label %130

65:                                               ; preds = %47, %89
  %66 = phi %"class.blink::LayoutObject"* [ %90, %89 ], [ %51, %47 ]
  %67 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %66, i64 0, i32 6, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, null
  br i1 %69, label %70, label %77

70:                                               ; preds = %65, %70
  %71 = phi %"class.blink::LayoutObject"* [ %73, %70 ], [ %66, %65 ]
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 7
  %73 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 0, i32 6, i32 0, i32 0
  %75 = load %"class.blink::Node"*, %"class.blink::Node"** %74, align 8
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %70, label %77

77:                                               ; preds = %70, %65
  %78 = phi %"class.blink::Node"* [ %68, %65 ], [ %75, %70 ]
  %79 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %78, i64 0, i32 3, i32 0, i32 0
  %80 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %80, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::Document"*, %"class.blink::Document"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %82, i64 0, i32 47, i32 0, i32 0
  %84 = load %"class.blink::Element"*, %"class.blink::Element"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %84, i64 0, i32 0, i32 0
  %86 = icmp eq %"class.blink::Node"* %85, %68
  br i1 %86, label %92, label %87

87:                                               ; preds = %77
  %88 = call zeroext i1 @_ZNK5blink12LayoutObject18IsRelayoutBoundaryEv(%"class.blink::LayoutObject"* nonnull %66) #17
  br i1 %88, label %92, label %89

89:                                               ; preds = %87
  %90 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %66, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #17
  %91 = icmp eq %"class.blink::LayoutObject"* %90, null
  br i1 %91, label %124, label %65

92:                                               ; preds = %77, %87
  %93 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %66, i64 0, i32 6, i32 0, i32 0
  %94 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %66, i64 0, i32 4
  %95 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %94 to i96*
  %96 = load i96, i96* %95, align 4
  %97 = and i96 %96, 16777216
  %98 = icmp eq i96 %97, 0
  br i1 %98, label %99, label %110

99:                                               ; preds = %92
  %100 = load %"class.blink::Node"*, %"class.blink::Node"** %93, align 8
  %101 = icmp eq %"class.blink::Node"* %100, null
  br i1 %101, label %110, label %102

102:                                              ; preds = %99
  %103 = bitcast %"class.blink::Node"* %100 to i8 (%"class.blink::Node"*)***
  %104 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %103, align 8
  %105 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %104, i64 34
  %106 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %105, align 8
  %107 = call zeroext i8 %106(%"class.blink::Node"* nonnull %100) #17
  %108 = icmp ne i8 %107, 0
  %109 = load i96, i96* %95, align 4
  br label %110

110:                                              ; preds = %102, %99, %92
  %111 = phi i96 [ %96, %99 ], [ %109, %102 ], [ %96, %92 ]
  %112 = phi i1 [ false, %99 ], [ %108, %102 ], [ false, %92 ]
  %113 = and i96 %111, 16777216
  %114 = icmp eq i96 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %110
  %116 = load %"class.blink::Node"*, %"class.blink::Node"** %93, align 8
  br label %117

117:                                              ; preds = %115, %110
  %118 = phi %"class.blink::Node"* [ %116, %115 ], [ null, %110 ]
  br i1 %112, label %119, label %127

119:                                              ; preds = %117
  %120 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %118, i64 0, i32 2, i32 0, i32 0
  %121 = bitcast %"class.blink::Node"** %120 to %"class.blink::ContainerNode"**
  %122 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %122, i64 0, i32 0
  br label %127

124:                                              ; preds = %89
  %125 = call %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"* %10) #17
  %126 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %125, i64 0, i32 0, i32 0
  br label %127

127:                                              ; preds = %119, %117, %124
  %128 = phi %"class.blink::Node"* [ %126, %124 ], [ %123, %119 ], [ %118, %117 ]
  %129 = call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* %128)
  store i32 %129, i32* %3, align 4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %130

130:                                              ; preds = %63, %53, %127, %29
  %131 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %132 = bitcast %"class.std::__1::basic_string"* %131 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  call void @_ZdlPv(i8* %138) #18
  br label %139

139:                                              ; preds = %130, %136
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #17
  ret void
}

declare zeroext i1 @_ZNK5blink12LayoutObject18IsRelayoutBoundaryEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent19getRelayoutBoundaryEiPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, i32, i32* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent19getRelayoutBoundaryEiPi(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %6, i32 %2, i32* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent12describeNodeEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEES4_NS3_IbEEPNSt3__110unique_ptrINS_8protocol3DOM4NodeENS9_14default_deleteISD_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly, %"class.std::__1::unique_ptr.3367"* nocapture) unnamed_addr #0 align 2 {
  %9 = alloca %"class.blink::Node"*, align 8
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  %14 = bitcast %"class.blink::Node"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %9, align 8
  %15 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent10AssertNodeERKN5crdtp6detail10ValueMaybeIiEES6_RKNS3_IN3WTF6StringEEERPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.blink::InspectorDOMAgent"* %1, %"class.crdtp::detail::ValueMaybe.3365"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe.3365"* dereferenceable(8) %3, %"class.crdtp::detail::ValueMaybe.3366"* dereferenceable(16) %4, %"class.blink::Node"** nonnull dereferenceable(8) %9)
  %16 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %25, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %17, i32* %20, align 8
  %21 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #17
  br label %65

25:                                               ; preds = %8
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %28, label %38

28:                                               ; preds = %25
  %29 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 14, i8* %30, align 1
  %31 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i64 0, i64 0), i64 14, i1 false) #17
  %32 = getelementptr inbounds i8, i8* %31, i64 14
  store i8 0, i8* %32, align 2
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %11) #17
  %33 = load i8, i8* %30, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %65

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #18
  br label %65

38:                                               ; preds = %25
  %39 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39)
  store i32 0, i32* %12, align 4
  %40 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %5, i64 0, i32 0
  %41 = load i8, i8* %40, align 4, !range !3
  %42 = icmp eq i8 %41, 0
  %43 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %5, i64 0, i32 1
  %44 = select i1 %42, i32* %12, i32* %43
  %45 = load i32, i32* %44, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13)
  store i8 0, i8* %13, align 1
  %46 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %6, i64 0, i32 0
  %47 = load i8, i8* %46, align 1, !range !3
  %48 = icmp eq i8 %47, 0
  %49 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3427", %"class.crdtp::detail::ValueMaybe.3427"* %6, i64 0, i32 1
  %50 = select i1 %48, i8* %13, i8* %49
  %51 = load i8, i8* %50, align 1, !range !3
  %52 = icmp ne i8 %51, 0
  %53 = call %"class.blink::protocol::DOM::Node"* @_ZN5blink17InspectorDOMAgent18BuildObjectForNodeEPNS_4NodeEibPNS_11HeapHashMapINS_6MemberIS1_EEiN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EENS9_IiEEEEPNSt3__16vectorINSE_10unique_ptrINS_8protocol3DOM4NodeENSE_14default_deleteISJ_EEEENSE_9allocatorISM_EEEE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* nonnull %26, i32 %45, i1 zeroext %52, %"class.blink::HeapHashMap.2752"* null, %"class.std::__1::vector.3379"* null)
  %54 = ptrtoint %"class.blink::protocol::DOM::Node"* %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %7, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %55, align 8
  %57 = bitcast %"class.std::__1::unique_ptr.3367"* %7 to i64*
  store i64 %54, i64* %57, align 8
  %58 = icmp eq %"class.blink::protocol::DOM::Node"* %56, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %38
  %60 = bitcast %"class.blink::protocol::DOM::Node"* %56 to void (%"class.blink::protocol::DOM::Node"*)***
  %61 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %61, i64 2
  %63 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %62, align 8
  call void %63(%"class.blink::protocol::DOM::Node"* nonnull %56) #17
  br label %64

64:                                               ; preds = %59, %38
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39)
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %65

65:                                               ; preds = %35, %28, %64, %19
  %66 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #18
  br label %74

74:                                               ; preds = %65, %71
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent12describeNodeEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEES4_NS3_IbEEPNSt3__110unique_ptrINS_8protocol3DOM4NodeENS9_14default_deleteISD_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3427"* nocapture readonly, %"class.std::__1::unique_ptr.3367"* nocapture) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %10 = bitcast i8* %9 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent12describeNodeEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEES4_NS3_IbEEPNSt3__110unique_ptrINS_8protocol3DOM4NodeENS9_14default_deleteISD_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %10, %"class.crdtp::detail::ValueMaybe.3365"* %2, %"class.crdtp::detail::ValueMaybe.3365"* %3, %"class.crdtp::detail::ValueMaybe.3366"* %4, %"class.crdtp::detail::ValueMaybe.3365"* %5, %"class.crdtp::detail::ValueMaybe.3427"* %6, %"class.std::__1::unique_ptr.3367"* %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent22scrollIntoViewIfNeededEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEENS2_8PtrMaybeINS_8protocol3DOM4RectEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly, %"class.crdtp::detail::PtrMaybe.3761"* nocapture readonly) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::Node"*, align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca { i64, i64 }, align 8
  %12 = bitcast { i64, i64 }* %11 to %"struct.blink::PhysicalRect"*
  %13 = alloca %"class.mojo::StructPtr.3771", align 8
  %14 = bitcast %"class.blink::Node"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  store %"class.blink::Node"* null, %"class.blink::Node"** %7, align 8
  %15 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorDOMAgent10AssertNodeERKN5crdtp6detail10ValueMaybeIiEES6_RKNS3_IN3WTF6StringEEERPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorDOMAgent"* %1, %"class.crdtp::detail::ValueMaybe.3365"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe.3365"* dereferenceable(8) %3, %"class.crdtp::detail::ValueMaybe.3366"* dereferenceable(16) %4, %"class.blink::Node"** nonnull dereferenceable(8) %7)
  %16 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %25, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %17, i32* %20, align 8
  %21 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #17
  br label %214

25:                                               ; preds = %6
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  call void @_ZN5blink8Document35EnsurePaintLocationDataValidForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %30, %"class.blink::Node"* %26, i32 13) #17
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 256
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %25
  %36 = call i8* @_Znwm(i64 32) #18
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast i64* %38 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %39, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.47, i64 0, i64 0), i64 30, i1 false) #17
  %40 = getelementptr inbounds i8, i8* %36, i64 30
  store i8 0, i8* %40, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %9) #17
  %41 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %214

45:                                               ; preds = %35
  %46 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %46) #18
  br label %214

47:                                               ; preds = %25
  %48 = and i32 %32, 1
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 6, i32 0, i32 0
  br i1 %49, label %55, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.blink::NodeData"** %50 to %"class.blink::NodeRareData"**
  %53 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %53, i64 0, i32 1, i32 0, i32 0
  br label %57

55:                                               ; preds = %47
  %56 = bitcast %"class.blink::NodeData"** %50 to %"class.blink::NodeRenderingData"**
  br label %57

57:                                               ; preds = %51, %55
  %58 = phi %"class.blink::NodeRenderingData"** [ %54, %51 ], [ %56, %55 ]
  %59 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %59, i64 0, i32 1
  %61 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %60, align 8
  %62 = icmp eq %"class.blink::LayoutObject"* %61, null
  br i1 %62, label %63, label %75

63:                                               ; preds = %57
  %64 = call i8* @_Znwm(i64 48) #18
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %64, i8** %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = bitcast i64* %66 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %67, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.48, i64 0, i64 0), i64 34, i1 false) #17
  %68 = getelementptr inbounds i8, i8* %64, i64 34
  store i8 0, i8* %68, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %10) #17
  %69 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %214

73:                                               ; preds = %63
  %74 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %74) #18
  br label %214

75:                                               ; preds = %57
  %76 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #17
  %77 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %78 = call { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject28AbsoluteBoundingBoxFloatRectEj(%"class.blink::LayoutObject"* nonnull %61, i32 0) #17
  %79 = extractvalue { <2 x float>, <2 x float> } %78, 0
  %80 = extractvalue { <2 x float>, <2 x float> } %78, 1
  %81 = extractelement <2 x float> %79, i32 0
  %82 = fmul float %81, 6.400000e+01
  %83 = call float @llvm.floor.f32(float %82) #17
  %84 = fcmp ult float %83, 0xC1E0000000000000
  %85 = fcmp ugt float %83, 0x41DFFFFFE0000000
  %86 = fcmp ogt float %83, 0xC1E0000000000000
  %87 = select i1 %86, float %83, float 0xC1E0000000000000
  %88 = fptosi float %87 to i32
  %89 = select i1 %84, i32 0, i32 2147483647
  %90 = select i1 %85, i32 %89, i32 %88
  %91 = extractelement <2 x float> %79, i32 1
  %92 = fmul float %91, 6.400000e+01
  %93 = call float @llvm.floor.f32(float %92) #17
  %94 = fcmp ult float %93, 0xC1E0000000000000
  %95 = fcmp ugt float %93, 0x41DFFFFFE0000000
  %96 = fcmp ogt float %93, 0xC1E0000000000000
  %97 = select i1 %96, float %93, float 0xC1E0000000000000
  %98 = fptosi float %97 to i32
  %99 = select i1 %94, i32 0, i32 2147483647
  %100 = select i1 %95, i32 %99, i32 %98
  %101 = extractelement <2 x float> %80, i32 0
  %102 = fadd float %81, %101
  %103 = fmul float %102, 6.400000e+01
  %104 = call float @llvm.ceil.f32(float %103) #17
  %105 = fcmp ult float %104, 0xC1E0000000000000
  %106 = fcmp ugt float %104, 0x41DFFFFFE0000000
  %107 = fcmp ogt float %104, 0xC1E0000000000000
  %108 = select i1 %107, float %104, float 0xC1E0000000000000
  %109 = fptosi float %108 to i32
  %110 = select i1 %105, i32 0, i32 2147483647
  %111 = select i1 %106, i32 %110, i32 %109
  %112 = icmp sgt i32 %90, -1
  %113 = select i1 %112, i32 -2147483648, i32 2147483647
  %114 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %111, i32 %90) #17
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 %113, i32 %116, !prof !2
  %118 = extractelement <2 x float> %80, i32 1
  %119 = fadd float %91, %118
  %120 = fmul float %119, 6.400000e+01
  %121 = call float @llvm.ceil.f32(float %120) #17
  %122 = fcmp ult float %121, 0xC1E0000000000000
  %123 = fcmp ugt float %121, 0x41DFFFFFE0000000
  %124 = fcmp ogt float %121, 0xC1E0000000000000
  %125 = select i1 %124, float %121, float 0xC1E0000000000000
  %126 = fptosi float %125 to i32
  %127 = select i1 %122, i32 0, i32 2147483647
  %128 = select i1 %123, i32 %127, i32 %126
  %129 = icmp sgt i32 %100, -1
  %130 = select i1 %129, i32 -2147483648, i32 2147483647
  %131 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %128, i32 %100) #17
  %132 = extractvalue { i32, i1 } %131, 1
  %133 = extractvalue { i32, i1 } %131, 0
  %134 = select i1 %132, i32 %130, i32 %133, !prof !2
  %135 = zext i32 %100 to i64
  %136 = shl nuw i64 %135, 32
  %137 = zext i32 %90 to i64
  %138 = or i64 %136, %137
  %139 = zext i32 %134 to i64
  %140 = shl nuw i64 %139, 32
  %141 = zext i32 %117 to i64
  %142 = or i64 %140, %141
  %143 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  store i64 %138, i64* %143, align 8
  store i64 %142, i64* %77, align 8
  %144 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.3761", %"class.crdtp::detail::PtrMaybe.3761"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"class.blink::protocol::DOM::Rect"*, %"class.blink::protocol::DOM::Rect"** %144, align 8
  %146 = icmp eq %"class.blink::protocol::DOM::Rect"* %145, null
  br i1 %146, label %204, label %147

147:                                              ; preds = %75
  %148 = bitcast { i64, i64 }* %11 to i32*
  %149 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %12, i64 0, i32 1, i32 1, i32 0
  %150 = bitcast i64* %77 to i32*
  %151 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %12, i64 0, i32 0, i32 1, i32 0
  %152 = getelementptr inbounds %"class.blink::protocol::DOM::Rect", %"class.blink::protocol::DOM::Rect"* %145, i64 0, i32 1
  %153 = load double, double* %152, align 8
  %154 = fmul double %153, 6.400000e+01
  %155 = fcmp ult double %154, 0xC1E0000000000000
  %156 = fcmp ugt double %154, 0x41DFFFFFFFC00000
  %157 = fcmp ogt double %154, 0xC1E0000000000000
  %158 = select i1 %157, double %154, double 0xC1E0000000000000
  %159 = fptosi double %158 to i32
  %160 = select i1 %155, i32 0, i32 2147483647
  %161 = select i1 %156, i32 %160, i32 %159
  %162 = icmp slt i32 %161, 0
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %90, i32 %161) #17
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !2
  store i32 %167, i32* %148, align 8
  %168 = getelementptr inbounds %"class.blink::protocol::DOM::Rect", %"class.blink::protocol::DOM::Rect"* %145, i64 0, i32 2
  %169 = load double, double* %168, align 8
  %170 = fmul double %169, 6.400000e+01
  %171 = fcmp ult double %170, 0xC1E0000000000000
  %172 = fcmp ugt double %170, 0x41DFFFFFFFC00000
  %173 = fcmp ogt double %170, 0xC1E0000000000000
  %174 = select i1 %173, double %170, double 0xC1E0000000000000
  %175 = fptosi double %174 to i32
  %176 = select i1 %171, i32 0, i32 2147483647
  %177 = select i1 %172, i32 %176, i32 %175
  %178 = icmp slt i32 %177, 0
  %179 = select i1 %178, i32 -2147483648, i32 2147483647
  %180 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %100, i32 %177) #17
  %181 = extractvalue { i32, i1 } %180, 1
  %182 = extractvalue { i32, i1 } %180, 0
  %183 = select i1 %181, i32 %179, i32 %182, !prof !2
  store i32 %183, i32* %151, align 4
  %184 = getelementptr inbounds %"class.blink::protocol::DOM::Rect", %"class.blink::protocol::DOM::Rect"* %145, i64 0, i32 3
  %185 = load double, double* %184, align 8
  %186 = fmul double %185, 6.400000e+01
  %187 = fcmp ult double %186, 0xC1E0000000000000
  %188 = fcmp ugt double %186, 0x41DFFFFFFFC00000
  %189 = fcmp ogt double %186, 0xC1E0000000000000
  %190 = select i1 %189, double %186, double 0xC1E0000000000000
  %191 = fptosi double %190 to i32
  %192 = select i1 %187, i32 0, i32 2147483647
  %193 = select i1 %188, i32 %192, i32 %191
  store i32 %193, i32* %150, align 8
  %194 = getelementptr inbounds %"class.blink::protocol::DOM::Rect", %"class.blink::protocol::DOM::Rect"* %145, i64 0, i32 4
  %195 = load double, double* %194, align 8
  %196 = fmul double %195, 6.400000e+01
  %197 = fcmp ult double %196, 0xC1E0000000000000
  %198 = fcmp ugt double %196, 0x41DFFFFFFFC00000
  %199 = fcmp ogt double %196, 0xC1E0000000000000
  %200 = select i1 %199, double %196, double 0xC1E0000000000000
  %201 = fptosi double %200 to i32
  %202 = select i1 %197, i32 0, i32 2147483647
  %203 = select i1 %198, i32 %202, i32 %201
  store i32 %203, i32* %149, align 4
  br label %204

204:                                              ; preds = %75, %147
  %205 = call dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment14CenterIfNeededEv() #17
  %206 = call dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment14CenterIfNeededEv() #17
  call void @_ZN5blink15ScrollAlignment26CreateScrollIntoViewParamsERKNS_5mojom5blink15ScrollAlignmentES5_NS1_10ScrollTypeEbNS1_14ScrollBehaviorEbb(%"class.mojo::StructPtr.3771"* nonnull sret %13, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12) %205, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12) %206, i32 1, i1 zeroext true, i32 1, i1 zeroext true, i1 zeroext false) #17
  %207 = call { i64, i64 } @_ZN5blink12LayoutObject19ScrollRectToVisibleERKNS_12PhysicalRectEN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::LayoutObject"* nonnull %61, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %12, %"class.mojo::StructPtr.3771"* nonnull %13) #17
  %208 = getelementptr inbounds %"class.mojo::StructPtr.3771", %"class.mojo::StructPtr.3771"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %209 = load %"class.blink::mojom::blink::ScrollIntoViewParams"*, %"class.blink::mojom::blink::ScrollIntoViewParams"** %208, align 8
  store %"class.blink::mojom::blink::ScrollIntoViewParams"* null, %"class.blink::mojom::blink::ScrollIntoViewParams"** %208, align 8
  %210 = icmp eq %"class.blink::mojom::blink::ScrollIntoViewParams"* %209, null
  br i1 %210, label %213, label %211

211:                                              ; preds = %204
  call void @_ZN5blink5mojom5blink20ScrollIntoViewParamsD1Ev(%"class.blink::mojom::blink::ScrollIntoViewParams"* nonnull %209) #17
  %212 = bitcast %"class.blink::mojom::blink::ScrollIntoViewParams"* %209 to i8*
  call void @_ZdlPv(i8* %212) #18
  br label %213

213:                                              ; preds = %204, %211
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #17
  br label %214

214:                                              ; preds = %73, %63, %45, %35, %213, %19
  %215 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %216 = bitcast %"class.std::__1::basic_string"* %215 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %216, i64 0, i32 1, i32 0
  %218 = load i8, i8* %217, align 1
  %219 = icmp slt i8 %218, 0
  br i1 %219, label %220, label %223

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %215, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load i8*, i8** %221, align 8
  call void @_ZdlPv(i8* %222) #18
  br label %223

223:                                              ; preds = %214, %220
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  ret void
}

declare void @_ZN5blink8Document35EnsurePaintLocationDataValidForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"*, %"class.blink::Node"*, i32) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject28AbsoluteBoundingBoxFloatRectEj(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare { i64, i64 } @_ZN5blink12LayoutObject19ScrollRectToVisibleERKNS_12PhysicalRectEN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.mojo::StructPtr.3771"*) local_unnamed_addr #1

declare void @_ZN5blink15ScrollAlignment26CreateScrollIntoViewParamsERKNS_5mojom5blink15ScrollAlignmentES5_NS1_10ScrollTypeEbNS1_14ScrollBehaviorEbb(%"class.mojo::StructPtr.3771"* sret, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12), %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12), i32, i1 zeroext, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment14CenterIfNeededEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent22scrollIntoViewIfNeededEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEENS2_8PtrMaybeINS_8protocol3DOM4RectEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3365"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3366"* nocapture readonly, %"class.crdtp::detail::PtrMaybe.3761"* nocapture readonly) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %8 = bitcast i8* %7 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent22scrollIntoViewIfNeededEN5crdtp6detail10ValueMaybeIiEES4_NS3_IN3WTF6StringEEENS2_8PtrMaybeINS_8protocol3DOM4RectEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %8, %"class.crdtp::detail::ValueMaybe.3365"* %2, %"class.crdtp::detail::ValueMaybe.3365"* %3, %"class.crdtp::detail::ValueMaybe.3366"* %4, %"class.crdtp::detail::PtrMaybe.3761"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent13getFrameOwnerERKN3WTF6StringEPiPN5crdtp6detail10ValueMaybeIiEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32* nocapture, %"class.crdtp::detail::ValueMaybe.3365"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::Node"*, align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %11, align 8
  %13 = icmp eq %"class.blink::LocalFrame"* %12, null
  br i1 %13, label %49, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %12, i64 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %14, %37
  %18 = phi %"class.blink::Frame"* [ %15, %14 ], [ %43, %37 ]
  %19 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* nonnull %18) #17
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %21 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"* %20) #17
  %22 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #17
  br label %36

36:                                               ; preds = %17, %32, %35
  br i1 %21, label %103, label %37

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %18, i64 0, i32 1
  %39 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %9, align 8
  %40 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %39, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %41, i64 0, i32 0
  %43 = tail call %"class.blink::Frame"* @_ZNK5blink9FrameTree12TraverseNextEPKNS_5FrameE(%"class.blink::FrameTree"* %38, %"class.blink::Frame"* %42) #17
  %44 = icmp eq %"class.blink::Frame"* %43, null
  br i1 %44, label %45, label %17

45:                                               ; preds = %37
  %46 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %9, align 8
  %47 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %46, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %47, align 8
  br label %49

49:                                               ; preds = %45, %5
  %50 = phi %"class.blink::LocalFrame"* [ %48, %45 ], [ null, %5 ]
  %51 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %50) #17
  %52 = tail call dereferenceable(40) %"class.blink::DocumentPortals"* @_ZN5blink15DocumentPortals4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %51) #17
  %53 = getelementptr inbounds %"class.blink::DocumentPortals", %"class.blink::DocumentPortals"* %52, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::Member.3724"*, %"class.blink::Member.3724"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::DocumentPortals", %"class.blink::DocumentPortals"* %52, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.blink::Member.3724", %"class.blink::Member.3724"* %54, i64 %57
  %59 = icmp eq i32 %56, 0
  br i1 %59, label %91, label %60

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %85, %60
  %63 = phi %"class.blink::Member.3724"* [ %54, %60 ], [ %86, %85 ]
  %64 = getelementptr inbounds %"class.blink::Member.3724", %"class.blink::Member.3724"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::PortalContents"*, %"class.blink::PortalContents"** %64, align 8
  %66 = tail call %"class.blink::RemoteFrame"* @_ZNK5blink14PortalContents8GetFrameEv(%"class.blink::PortalContents"* %65) #17
  %67 = getelementptr inbounds %"class.blink::RemoteFrame", %"class.blink::RemoteFrame"* %66, i64 0, i32 0
  %68 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %67) #17
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %70 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"* %69) #17
  %71 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %62
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #17
  br label %85

85:                                               ; preds = %62, %81, %84
  %86 = getelementptr inbounds %"class.blink::Member.3724", %"class.blink::Member.3724"* %63, i64 1
  %87 = icmp eq %"class.blink::Member.3724"* %86, %58
  %88 = or i1 %70, %87
  br i1 %88, label %89, label %62

89:                                               ; preds = %85
  %90 = icmp eq %"class.blink::RemoteFrame"* %66, null
  br i1 %90, label %91, label %103

91:                                               ; preds = %49, %89
  %92 = tail call i8* @_Znwm(i64 48) #18
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %92, i8** %93, align 8
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %95, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %92, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.49, i64 0, i64 0), i64 38, i1 false) #17
  %96 = getelementptr inbounds i8, i8* %92, i64 38
  store i8 0, i8* %96, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %97 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %152

101:                                              ; preds = %91
  %102 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %102) #18
  br label %152

103:                                              ; preds = %36, %89
  %104 = phi %"class.blink::Frame"* [ %67, %89 ], [ %18, %36 ]
  %105 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %104, i64 0, i32 3, i32 0, i32 0
  %106 = load %"class.blink::FrameOwner"*, %"class.blink::FrameOwner"** %105, align 8
  %107 = icmp eq %"class.blink::FrameOwner"* %106, null
  br i1 %107, label %117, label %108

108:                                              ; preds = %103
  %109 = bitcast %"class.blink::FrameOwner"* %106 to i1 (%"class.blink::FrameOwner"*)***
  %110 = load i1 (%"class.blink::FrameOwner"*)**, i1 (%"class.blink::FrameOwner"*)*** %109, align 8
  %111 = getelementptr inbounds i1 (%"class.blink::FrameOwner"*)*, i1 (%"class.blink::FrameOwner"*)** %110, i64 3
  %112 = load i1 (%"class.blink::FrameOwner"*)*, i1 (%"class.blink::FrameOwner"*)** %111, align 8
  %113 = tail call zeroext i1 %112(%"class.blink::FrameOwner"* nonnull %106) #17
  br i1 %113, label %114, label %117

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %106, i64 -13
  %116 = icmp eq %"class.blink::FrameOwner"* %115, null
  br i1 %116, label %117, label %129

117:                                              ; preds = %103, %108, %114
  %118 = tail call i8* @_Znwm(i64 64) #18
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %118, i8** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = bitcast i64* %120 to <2 x i64>*
  store <2 x i64> <i64 54, i64 -9223372036854775744>, <2 x i64>* %121, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %118, i8* align 1 getelementptr inbounds ([55 x i8], [55 x i8]* @.str.50, i64 0, i64 0), i64 54, i1 false) #17
  %122 = getelementptr inbounds i8, i8* %118, i64 54
  store i8 0, i8* %122, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %8) #17
  %123 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %152

127:                                              ; preds = %117
  %128 = load i8*, i8** %119, align 8
  call void @_ZdlPv(i8* %128) #18
  br label %152

129:                                              ; preds = %114
  %130 = bitcast %"class.blink::FrameOwner"* %115 to %"class.blink::Node"*
  %131 = tail call i32 @_ZN5blink18IdentifiersFactory12IntIdForNodeEPNS_4NodeE(%"class.blink::Node"* nonnull %130) #17
  store i32 %131, i32* %3, align 4
  %132 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 21, i32 2
  %133 = load i8, i8* %132, align 1, !range !3
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 14, i32 0, i32 0
  %137 = load %"class.blink::Document"*, %"class.blink::Document"** %136, align 8
  %138 = icmp eq %"class.blink::Document"* %137, null
  br i1 %138, label %151, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 5, i32 0, i32 0
  %141 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %140, align 8
  %142 = ptrtoint %"class.blink::Document"* %137 to i64
  %143 = getelementptr inbounds %"class.blink::HeapHashMap.2752", %"class.blink::HeapHashMap.2752"* %141, i64 0, i32 0, i32 0
  %144 = bitcast %"class.blink::Node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #17
  %145 = bitcast %"class.blink::Node"** %6 to i64*
  store i64 %142, i64* %145, align 8
  %146 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.3317"* %143, %"class.blink::Node"** nonnull dereferenceable(8) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #17
  br i1 %146, label %147, label %151

147:                                              ; preds = %139
  %148 = call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %1, %"class.blink::Node"* nonnull %130)
  %149 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %4, i64 0, i32 1
  store i32 %148, i32* %149, align 4
  %150 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3365", %"class.crdtp::detail::ValueMaybe.3365"* %4, i64 0, i32 0
  store i8 1, i8* %150, align 4
  br label %151

151:                                              ; preds = %135, %129, %147, %139
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %152

152:                                              ; preds = %127, %117, %101, %91, %151
  ret void
}

declare %"class.blink::Frame"* @_ZNK5blink9FrameTree12TraverseNextEPKNS_5FrameE(%"class.blink::FrameTree"*, %"class.blink::Frame"*) local_unnamed_addr #1

declare dereferenceable(40) %"class.blink::DocumentPortals"* @_ZN5blink15DocumentPortals4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #1

declare %"class.blink::RemoteFrame"* @_ZNK5blink14PortalContents8GetFrameEv(%"class.blink::PortalContents"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent13getFrameOwnerERKN3WTF6StringEPiPN5crdtp6detail10ValueMaybeIiEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32* nocapture, %"class.crdtp::detail::ValueMaybe.3365"* nocapture) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %7 = bitcast i8* %6 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent13getFrameOwnerERKN3WTF6StringEPiPN5crdtp6detail10ValueMaybeIiEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %7, %"class.WTF::String"* dereferenceable(8) %2, i32* %3, %"class.crdtp::detail::ValueMaybe.3365"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorDOMAgent11getFileInfoERKN3WTF6StringEPS2_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::HandleScope", align 8
  %6 = alloca %"class.v8::Local", align 8
  %7 = alloca %"class.v8::Local.3568", align 8
  %8 = alloca %"class.std::__1::unique_ptr.3569", align 8
  %9 = alloca %"class.v8_inspector::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = bitcast %"class.v8::HandleScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 1
  %17 = bitcast %"class.v8::HandleScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  %18 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %5, %"class.v8::Isolate"* %18) #17
  %19 = bitcast %"class.v8::Local"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %6, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %20, align 8
  %21 = bitcast %"class.v8::Local.3568"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  %22 = getelementptr inbounds %"class.v8::Local.3568", %"class.v8::Local.3568"* %7, i64 0, i32 0
  store %"class.v8::Context"* null, %"class.v8::Context"** %22, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.3569"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #17
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.3569", %"class.std::__1::unique_ptr.3569"* %8, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::unique_ptr.3569"* %8 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 0, i32 3
  %27 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %26, align 8
  %28 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #17
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %33, align 8
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %35 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %34, i64* %35, align 8
  br label %43

36:                                               ; preds = %4
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %42 = bitcast i8** %41 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %42, align 8
  br label %43

43:                                               ; preds = %32, %36
  %44 = phi i32 [ %39, %36 ], [ 0, %32 ]
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %44, i32* %45, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #17
  %46 = bitcast %"class.v8_inspector::V8InspectorSession"* %27 to i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.3569"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.3568"*, %"class.std::__1::unique_ptr.3569"*)***
  %47 = load i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.3569"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.3568"*, %"class.std::__1::unique_ptr.3569"*)**, i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.3569"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.3568"*, %"class.std::__1::unique_ptr.3569"*)*** %46, align 8
  %48 = getelementptr inbounds i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.3569"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.3568"*, %"class.std::__1::unique_ptr.3569"*)*, i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.3569"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.3568"*, %"class.std::__1::unique_ptr.3569"*)** %47, i64 15
  %49 = load i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.3569"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.3568"*, %"class.std::__1::unique_ptr.3569"*)*, i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.3569"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.3568"*, %"class.std::__1::unique_ptr.3569"*)** %48, align 8
  %50 = call zeroext i1 %49(%"class.v8_inspector::V8InspectorSession"* %27, %"class.std::__1::unique_ptr.3569"* nonnull %8, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %9, %"class.v8::Local"* nonnull %6, %"class.v8::Local.3568"* nonnull %7, %"class.std::__1::unique_ptr.3569"* null) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #17
  br i1 %50, label %80, label %51

51:                                               ; preds = %43
  %52 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #17
  %53 = load %"class.v8_inspector::StringBuffer"*, %"class.v8_inspector::StringBuffer"** %24, align 8
  store %"class.v8_inspector::StringBuffer"* null, %"class.v8_inspector::StringBuffer"** %24, align 8
  %54 = call %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringENSt3__110unique_ptrIN12v8_inspector12StringBufferENS0_14default_deleteIS3_EEEE(%"class.v8_inspector::StringBuffer"* %53) #17
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %11, %"class.WTF::String"* nonnull %12, i32 0) #17
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %11) #17
  %56 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #18
  br label %63

63:                                               ; preds = %51, %60
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #17
  br label %79

79:                                               ; preds = %63, %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #17
  br label %177

80:                                               ; preds = %43
  %81 = load %"class.v8::Value"*, %"class.v8::Value"** %20, align 8
  %82 = bitcast %"class.v8::Isolate"** %16 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 8
  %85 = inttoptr i64 %84 to %"class.blink::V8PerIsolateData"**
  %86 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %85, align 8
  %87 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %86, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8File18wrapper_type_info_E, %"class.v8::Value"* %81) #17
  br i1 %87, label %100, label %88

88:                                               ; preds = %80
  %89 = call i8* @_Znwm(i64 48) #18
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %89, i8** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %92, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %89, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0), i64 34, i1 false) #17
  %93 = getelementptr inbounds i8, i8* %89, i64 34
  store i8 0, i8* %93, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %13) #17
  %94 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %177

98:                                               ; preds = %88
  %99 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %99) #18
  br label %177

100:                                              ; preds = %80
  %101 = bitcast %"class.v8::Local"* %6 to %"class.v8::Object"**
  %102 = load %"class.v8::Object"*, %"class.v8::Object"** %101, align 8
  %103 = bitcast %"class.v8::Object"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, -1
  %106 = inttoptr i64 %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = and i64 %104, -4294967296
  %109 = zext i32 %107 to i64
  %110 = or i64 %108, %109
  %111 = add i64 %110, 7
  %112 = inttoptr i64 %111 to i16*
  %113 = load i16, i16* %112, align 2
  switch i16 %113, label %118 [
    i16 1057, label %114
    i16 1056, label %114
    i16 1040, label %114
  ]

114:                                              ; preds = %100, %100, %100
  %115 = add i64 %104, 19
  %116 = inttoptr i64 %115 to i8**
  %117 = load i8*, i8** %116, align 1
  br label %120

118:                                              ; preds = %100
  %119 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #17
  br label %120

120:                                              ; preds = %114, %118
  %121 = phi i8* [ %117, %114 ], [ %119, %118 ]
  %122 = icmp eq i8* %121, null
  br i1 %122, label %123, label %135

123:                                              ; preds = %120
  %124 = call i8* @_Znwm(i64 64) #18
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %124, i8** %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = bitcast i64* %126 to <2 x i64>*
  store <2 x i64> <i64 51, i64 -9223372036854775744>, <2 x i64>* %127, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %124, i8* align 1 getelementptr inbounds ([52 x i8], [52 x i8]* @.str.52, i64 0, i64 0), i64 51, i1 false) #17
  %128 = getelementptr inbounds i8, i8* %124, i64 51
  store i8 0, i8* %128, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %14) #17
  %129 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %177

133:                                              ; preds = %123
  %134 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %134) #18
  br label %177

135:                                              ; preds = %120
  %136 = getelementptr inbounds i8, i8* %121, i64 48
  %137 = bitcast i8* %136 to %"class.WTF::StringImpl"**
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %157, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %157

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = zext i32 %147 to i33
  %149 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %148, i33 1) #17
  %150 = extractvalue { i33, i1 } %149, 1
  %151 = extractvalue { i33, i1 } %149, 0
  %152 = icmp slt i33 %151, 0
  %153 = or i1 %150, %152
  br i1 %153, label %154, label %155, !prof !2

154:                                              ; preds = %145
  call void @llvm.trap() #17
  unreachable

155:                                              ; preds = %145
  %156 = trunc i33 %151 to i32
  store i32 %156, i32* %146, align 4
  br label %157

157:                                              ; preds = %155, %140, %135
  %158 = ptrtoint %"class.WTF::StringImpl"* %138 to i64
  %159 = bitcast %"class.WTF::String"* %3 to i64*
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  store i64 %158, i64* %159, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #17
  br label %176

176:                                              ; preds = %157, %172, %175
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %177

177:                                              ; preds = %133, %123, %98, %88, %176, %79
  %178 = load %"class.v8_inspector::StringBuffer"*, %"class.v8_inspector::StringBuffer"** %24, align 8
  store %"class.v8_inspector::StringBuffer"* null, %"class.v8_inspector::StringBuffer"** %24, align 8
  %179 = icmp eq %"class.v8_inspector::StringBuffer"* %178, null
  br i1 %179, label %185, label %180

180:                                              ; preds = %177
  %181 = bitcast %"class.v8_inspector::StringBuffer"* %178 to void (%"class.v8_inspector::StringBuffer"*)***
  %182 = load void (%"class.v8_inspector::StringBuffer"*)**, void (%"class.v8_inspector::StringBuffer"*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %182, i64 1
  %184 = load void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %183, align 8
  call void %184(%"class.v8_inspector::StringBuffer"* nonnull %178) #17
  br label %185

185:                                              ; preds = %177, %180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorDOMAgent11getFileInfoERKN3WTF6StringEPS2_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMAgent"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %1, i64 -1, i32 22, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZN5blink17InspectorDOMAgent11getFileInfoERKN3WTF6StringEPS2_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMAgent"* %6, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17InspectorDOMAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 4
  %5 = bitcast %"class.blink::HeapHashSet.2743"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = bitcast %"class.blink::HeapHashSet.2743"* %4 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #17
  %12 = icmp eq i64 %6, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %6 to i8*
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* nonnull %14, i8* nonnull %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #17
  br label %19

19:                                               ; preds = %2, %13
  %20 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 2
  %21 = bitcast %"class.blink::Member.2739"* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %19
  %25 = inttoptr i64 %22 to i8*
  %26 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, i64 5
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %28, align 8
  tail call void %29(%"class.blink::Visitor"* %1, i8* nonnull %25, i8* nonnull %25, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv) #17
  br label %30

30:                                               ; preds = %19, %24
  %31 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 5
  %32 = bitcast %"class.blink::Member.2750"* %31 to i64*
  %33 = load atomic i64, i64* %32 monotonic, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = inttoptr i64 %33 to i8*
  %37 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, i64 5
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %39, align 8
  tail call void %40(%"class.blink::Visitor"* %1, i8* nonnull %36, i8* nonnull %36, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE5TraceEPNS_7VisitorEPKv) #17
  br label %41

41:                                               ; preds = %30, %35
  %42 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 6
  %43 = bitcast %"class.blink::HeapVector.2753"* %42 to i64*
  %44 = load atomic i64, i64* %43 monotonic, align 8
  %45 = icmp eq i64 %44, 0
  %46 = bitcast %"class.blink::HeapVector.2753"* %42 to i8**
  %47 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %48 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %47, i64 11
  %49 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %48, align 8
  tail call void %49(%"class.blink::Visitor"* %1, i8** %46) #17
  br i1 %45, label %56, label %50

50:                                               ; preds = %41
  %51 = inttoptr i64 %44 to i8*
  %52 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, i64 5
  %55 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, align 8
  tail call void %55(%"class.blink::Visitor"* %1, i8* nonnull %51, i8* nonnull %51, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE5TraceEPNS_7VisitorEPKv) #17
  br label %56

56:                                               ; preds = %41, %50
  %57 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 7
  %58 = bitcast %"class.blink::HeapHashMap.2760"* %57 to i64*
  %59 = load atomic i64, i64* %58 monotonic, align 8
  %60 = bitcast %"class.blink::HeapHashMap.2760"* %57 to i8**
  %61 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %62 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %61, i64 11
  %63 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %62, align 8
  tail call void %63(%"class.blink::Visitor"* %1, i8** %60) #17
  %64 = icmp eq i64 %59, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %56
  %66 = inttoptr i64 %59 to i8*
  %67 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %68 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %68, i64 5
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %69, align 8
  tail call void %70(%"class.blink::Visitor"* %1, i8* nonnull %66, i8* nonnull %66, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #17
  br label %71

71:                                               ; preds = %56, %65
  %72 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 8
  %73 = bitcast %"class.blink::HeapHashMap.2767"* %72 to i64*
  %74 = load atomic i64, i64* %73 monotonic, align 8
  %75 = bitcast %"class.blink::HeapHashMap.2767"* %72 to i8**
  %76 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %77 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %76, i64 11
  %78 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %77, align 8
  tail call void %78(%"class.blink::Visitor"* %1, i8** %75) #17
  %79 = icmp eq i64 %74, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %71
  %81 = inttoptr i64 %74 to i8*
  %82 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %83 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %83, i64 5
  %85 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %84, align 8
  tail call void %85(%"class.blink::Visitor"* %1, i8* nonnull %81, i8* nonnull %81, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #17
  br label %86

86:                                               ; preds = %71, %80
  %87 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 14
  %88 = bitcast %"class.blink::Member.326"* %87 to i64*
  %89 = load atomic i64, i64* %88 monotonic, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %86
  %92 = inttoptr i64 %89 to i8*
  %93 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %94 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %94, i64 5
  %96 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %95, align 8
  tail call void %96(%"class.blink::Visitor"* %1, i8* nonnull %92, i8* nonnull %92, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #17
  br label %97

97:                                               ; preds = %86, %91
  %98 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 16
  %99 = bitcast %"class.blink::Member.2797"* %98 to i64*
  %100 = load atomic i64, i64* %99 monotonic, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = inttoptr i64 %100 to i8*
  %104 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %105 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %105, i64 5
  %107 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %106, align 8
  tail call void %107(%"class.blink::Visitor"* %1, i8* nonnull %103, i8* nonnull %103, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26InspectorRevalidateDOMTaskEE5TraceEPNS_7VisitorEPKv) #17
  br label %108

108:                                              ; preds = %97, %102
  %109 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 15
  %110 = bitcast %"class.blink::HeapHashMap.2790"* %109 to i64*
  %111 = load atomic i64, i64* %110 monotonic, align 8
  %112 = bitcast %"class.blink::HeapHashMap.2790"* %109 to i8**
  %113 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %114 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %113, i64 11
  %115 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %114, align 8
  tail call void %115(%"class.blink::Visitor"* %1, i8** %112) #17
  %116 = icmp eq i64 %111, 0
  br i1 %116, label %123, label %117

117:                                              ; preds = %108
  %118 = inttoptr i64 %111 to i8*
  %119 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %120 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %120, i64 5
  %122 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %121, align 8
  tail call void %122(%"class.blink::Visitor"* %1, i8* nonnull %118, i8* nonnull %118, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #17
  br label %123

123:                                              ; preds = %108, %117
  %124 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 17
  %125 = bitcast %"class.blink::Member.2799"* %124 to i64*
  %126 = load atomic i64, i64* %125 monotonic, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %134, label %128

128:                                              ; preds = %123
  %129 = inttoptr i64 %126 to i8*
  %130 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %131 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %131, i64 5
  %133 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %132, align 8
  tail call void %133(%"class.blink::Visitor"* %1, i8* nonnull %129, i8* nonnull %129, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16InspectorHistoryEE5TraceEPNS_7VisitorEPKv) #17
  br label %134

134:                                              ; preds = %123, %128
  %135 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 18
  %136 = bitcast %"class.blink::Member.2811"* %135 to i64*
  %137 = load atomic i64, i64* %136 monotonic, align 8
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %134
  %140 = inttoptr i64 %137 to i8*
  %141 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %142 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %142, i64 5
  %144 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %143, align 8
  tail call void %144(%"class.blink::Visitor"* %1, i8* nonnull %140, i8* nonnull %140, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9DOMEditorEE5TraceEPNS_7VisitorEPKv) #17
  br label %145

145:                                              ; preds = %134, %139
  %146 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 9
  %147 = bitcast %"class.blink::HeapHashMap.2774"* %146 to i8*
  %148 = bitcast %"class.blink::HeapHashMap.2774"* %146 to i64*
  %149 = load atomic i64, i64* %148 monotonic, align 8
  %150 = inttoptr i64 %149 to %"struct.WTF::KeyValuePair.2780"*
  %151 = bitcast %"class.blink::HeapHashMap.2774"* %146 to i8**
  %152 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %153 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %152, i64 11
  %154 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %153, align 8
  tail call void %154(%"class.blink::Visitor"* %1, i8** %151) #17
  %155 = inttoptr i64 %149 to i8*
  %156 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %156) #17
  %157 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"struct.WTF::KeyValuePair.2780"**
  store %"struct.WTF::KeyValuePair.2780"* %150, %"struct.WTF::KeyValuePair.2780"** %157, align 8
  %158 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE1EEEvPNS_7VisitorEPKv, void (%"class.blink::Visitor"*, i8*)** %158, align 8
  %159 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %160 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %160, i64 10
  %162 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %161, align 8
  tail call void %162(%"class.blink::Visitor"* %1, i8* %155, i8** %151, i8* %155, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_4NodeEEENS_12KeyValuePairIS5_NS2_6MemberINS2_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %147) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %156) #17
  %163 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %0, i64 0, i32 0, i32 2
  %164 = bitcast %"class.blink::Member.2352"* %163 to i64*
  %165 = load atomic i64, i64* %164 monotonic, align 8
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %173, label %167

167:                                              ; preds = %145
  %168 = inttoptr i64 %165 to i8*
  %169 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %170 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %169, align 8
  %171 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %170, i64 5
  %172 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %171, align 8
  tail call void %172(%"class.blink::Visitor"* %1, i8* nonnull %168, i8* nonnull %168, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #17
  br label %173

173:                                              ; preds = %145, %167
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE5TraceEPNS_7VisitorE(%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.2352"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #17
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE(%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %6 = ptrtoint %"class.blink::CoreProbeSink"* %1 to i64
  %7 = bitcast %"class.blink::Member.2352"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::CoreProbeSink"* %1 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #17
  br label %13

13:                                               ; preds = %4, %10
  %14 = tail call i8* @_Znwm(i64 8) #18
  %15 = getelementptr inbounds %"class.crdtp::UberDispatcher", %"class.crdtp::UberDispatcher"* %2, i64 0, i32 1
  %16 = bitcast %"class.crdtp::FrontendChannel"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %19, align 8
  %21 = bitcast %"class.blink::protocol::DOM::Frontend"** %19 to i8**
  store i8* %14, i8** %21, align 8
  %22 = icmp eq %"class.blink::protocol::DOM::Frontend"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::protocol::DOM::Frontend"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #18
  br label %25

25:                                               ; preds = %13, %23
  %26 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 1
  tail call void @_ZN5blink8protocol3DOM10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"* %2, %"class.blink::protocol::DOM::Backend"* %26) #17
  %27 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3
  tail call void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"* %27, %"class.blink::InspectorSessionState"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE7DisposeEv(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = bitcast %"class.blink::InspectorBaseAgent"* %0 to void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)***
  %4 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)**, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %4, i64 8
  %6 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %5, align 8
  call void %6(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorBaseAgent"* %0) #17
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #18
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %16, align 8
  store %"class.blink::protocol::DOM::Frontend"* null, %"class.blink::protocol::DOM::Frontend"** %16, align 8
  %18 = icmp eq %"class.blink::protocol::DOM::Frontend"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::protocol::DOM::Frontend"* %17 to i8*
  call void @_ZdlPv(i8* %20) #18
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::Member.2352"* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  ret void
}

declare zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"*) local_unnamed_addr #1

declare void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"*, i64, i64, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare i32 @_ZN5blink7MakeRGBEiii(i32, i32, i32) local_unnamed_addr #1

declare i32 @_ZN5blink8MakeRGBAEiiii(i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD0Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEED2Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::InspectorBaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [47 x i8*] }, { [11 x i8*], [47 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [47 x i8*] }, { [11 x i8*], [47 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %3, align 8
  store %"class.blink::protocol::DOM::Frontend"* null, %"class.blink::protocol::DOM::Frontend"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::DOM::Frontend"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::DOM::Frontend"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  %11 = icmp eq %"class.blink::InspectorAgentState::Field"** %10, null
  %12 = bitcast %"class.blink::InspectorAgentState::Field"** %10 to i8*
  br i1 %11, label %19, label %13, !prof !4

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !2

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #17
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  br label %19

19:                                               ; preds = %18, %8
  %20 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #17
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent7RestoreEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEED1Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 -1, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.2733"* %2 to %"class.blink::InspectorBaseAgent"*
  %4 = bitcast %"class.std::__1::unique_ptr.2733"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [47 x i8*] }, { [11 x i8*], [47 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [47 x i8*] }, { [11 x i8*], [47 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.2733", %"class.std::__1::unique_ptr.2733"* %2, i64 6, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::DOM::Frontend"*, %"class.blink::protocol::DOM::Frontend"** %5, align 8
  store %"class.blink::protocol::DOM::Frontend"* null, %"class.blink::protocol::DOM::Frontend"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::DOM::Frontend"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::protocol::DOM::Frontend"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #18
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.2733", %"class.std::__1::unique_ptr.2733"* %2, i64 4
  %12 = bitcast %"class.std::__1::unique_ptr.2733"* %11 to %"class.blink::InspectorAgentState::Field"***
  %13 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  %14 = icmp eq %"class.blink::InspectorAgentState::Field"** %13, null
  %15 = bitcast %"class.blink::InspectorAgentState::Field"** %13 to i8*
  br i1 %14, label %22, label %16, !prof !4

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %3, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #17
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  br label %22

22:                                               ; preds = %21, %10
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.2733", %"class.std::__1::unique_ptr.2733"* %2, i64 3
  %24 = bitcast %"class.std::__1::unique_ptr.2733"* %23 to %"class.WTF::StringImpl"**
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #17
  br label %40

40:                                               ; preds = %22, %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3DOM8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"*, i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #1

declare void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"*, %"class.blink::Node"*, i1 zeroext, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #17
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0), i8* %21, i8* %22) #17
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.54, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #17
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #17
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #17
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #17
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E29DeleteAllBucketsAndDeallocateEPSB_j(%"struct.WTF::KeyValuePair.3460"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %49, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.3460"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #17
  ret void

8:                                                ; preds = %49, %4
  %9 = phi i64 [ 0, %4 ], [ %50, %49 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %0, i64 %9, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 1548
  br i1 %12, label %49, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %0, i64 %9, i32 2, i32 0, i32 0
  %15 = load %"class.WTF::String"*, %"class.WTF::String"** %14, align 8
  %16 = icmp eq %"class.WTF::String"* %15, null
  br i1 %16, label %49, label %17, !prof !4

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %0, i64 %9, i32 2, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %47, label %21

21:                                               ; preds = %17
  %22 = zext i32 %19 to i64
  br label %23

23:                                               ; preds = %44, %21
  %24 = phi i64 [ 0, %21 ], [ %45, %44 ]
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 %24
  %26 = bitcast %"class.WTF::String"* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast i8* %27 to %"class.WTF::StringImpl"*
  %29 = ptrtoint i8* %27 to i64
  switch i64 %29, label %30 [
    i64 -1, label %44
    i64 0, label %44
  ]

30:                                               ; preds = %23
  %31 = getelementptr inbounds i8, i8* %27, i64 8
  %32 = bitcast i8* %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = bitcast i8* %27 to i32*
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %30
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %30
  %41 = phi i32 [ %39, %38 ], [ %37, %30 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %44

44:                                               ; preds = %43, %40, %23, %23
  %45 = add nuw nsw i64 %24, 1
  %46 = icmp eq i64 %45, %22
  br i1 %46, label %47, label %23

47:                                               ; preds = %44, %17
  %48 = bitcast %"class.WTF::String"* %15 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #17
  store %"class.WTF::String"* null, %"class.WTF::String"** %14, align 8
  br label %49

49:                                               ; preds = %47, %13, %8
  %50 = add nuw nsw i64 %9, 1
  %51 = icmp eq i64 %50, %5
  br i1 %51, label %6, label %8
}

declare void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.361"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.361", %"class.WTF::Vector.361"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.56, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.WTF::Vector.361", %"class.WTF::Vector.361"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #12

declare i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #1

declare i32 @_ZN3WTF10StringImpl16FindIgnoringCaseERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #1

declare i32 @_ZN3WTF10StringImpl11ReverseFindEDsj(%"class.WTF::StringImpl"*, i16 zeroext, i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK3WTF10StringImpl22StartsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK3WTF10StringImpl20EndsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe.3366"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366"* %0, i64 0, i32 1
  %4 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #17
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #17
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %20, %5, %2
  %23 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %24 = bitcast %"class.WTF::String"* %3 to i64*
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #17
  br label %41

41:                                               ; preds = %22, %37, %40
  %42 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3366", %"class.crdtp::detail::ValueMaybe.3366"* %0, i64 0, i32 0
  store i8 1, i8* %42, align 8
  br i1 %4, label %56, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #17
  br label %56

56:                                               ; preds = %41, %52, %55
  ret void
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #1

declare void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, i16 zeroext, i1 zeroext, %"class.WTF::Vector.630"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element16AuthorShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #8

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #8

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink20ScrollIntoViewParamsD1Ev(%"class.blink::mojom::blink::ScrollIntoViewParams"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.3345"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.3345", %"class.WTF::StringAppend.3345"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #17
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #17
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend.3345", %"class.WTF::StringAppend.3345"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #17
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %33
  tail call void @llvm.trap() #17
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #17
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #17
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3338"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3338"* %0, i32 %14) #17
  %15 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %16, i64 %18
  %20 = bitcast %"class.blink::Node"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.318"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #17
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3338"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %8, align 8
  %10 = icmp eq %"class.blink::Member.318"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %11) #17
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #17
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3338"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #17
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %8, align 8
  %26 = icmp eq %"class.blink::Member.318"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.318"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #17
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #17
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #17
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.56, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0)) #17
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #17
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3338"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3338"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.3338"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.3338"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #17
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #17
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %14) #17
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #17
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.318"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.318"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.3338"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #17
  %33 = bitcast %"class.WTF::Vector.3338"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #17
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #17
  %42 = bitcast %"class.WTF::Vector.3338"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #17
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.61, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.62, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.64, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #17
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.318"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.318"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEED0Ev(%"class.blink::HeapTaskRunnerTimer.3311"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer.3311", %"class.blink::HeapTaskRunnerTimer.3311"* %0, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"* %2) #17
  %3 = bitcast %"class.blink::HeapTaskRunnerTimer.3311"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEE5FiredEv(%"class.blink::HeapTaskRunnerTimer.3311"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer.3311", %"class.blink::HeapTaskRunnerTimer.3311"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = bitcast %"class.blink::InspectorRevalidateDOMTask"** %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer.3311", %"class.blink::HeapTaskRunnerTimer.3311"* %0, i64 0, i32 2, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer.3311", %"class.blink::HeapTaskRunnerTimer.3311"* %0, i64 0, i32 2, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 %8
  %10 = bitcast i8* %9 to %"class.blink::InspectorRevalidateDOMTask"*
  %11 = and i64 %6, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %1
  %14 = bitcast i8* %9 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = add i64 %6, -1
  %17 = getelementptr i8, i8* %15, i64 %16
  %18 = bitcast i8* %17 to void (%"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::TimerBase"*)**
  %19 = load void (%"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::TimerBase"*)*, void (%"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::TimerBase"*)** %18, align 8
  br label %22

20:                                               ; preds = %1
  %21 = inttoptr i64 %6 to void (%"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::TimerBase"*)*
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi void (%"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::TimerBase"*)* [ %19, %13 ], [ %21, %20 ]
  %24 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer.3311", %"class.blink::HeapTaskRunnerTimer.3311"* %0, i64 0, i32 0
  tail call void %23(%"class.blink::InspectorRevalidateDOMTask"* %10, %"class.blink::TimerBase"* %24) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEE16BindTimerClosureEN4base7WeakPtrINS_9TimerBaseEEE(%"class.base::OnceCallback"* noalias sret, %"class.blink::HeapTaskRunnerTimer.3311"*, %"class.base::WeakPtr.4068"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::WeakPersistent.4069", align 8
  %5 = bitcast %"class.blink::WeakPersistent.4069"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.blink::HeapTaskRunnerTimer.3311", %"class.blink::HeapTaskRunnerTimer.3311"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::InspectorRevalidateDOMTask"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::WeakPersistent.4069", %"class.blink::WeakPersistent.4069"* %4, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::WeakPersistent.4069", %"class.blink::WeakPersistent.4069"* %4, i64 0, i32 0, i32 0
  store %"class.blink::InspectorRevalidateDOMTask"* %7, %"class.blink::InspectorRevalidateDOMTask"** %9, align 8, !alias.scope !111
  %10 = getelementptr inbounds %"class.blink::WeakPersistent.4069", %"class.blink::WeakPersistent.4069"* %4, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %10, align 8, !alias.scope !111
  %11 = ptrtoint %"class.blink::InspectorRevalidateDOMTask"* %7 to i64
  switch i64 %11, label %12 [
    i64 0, label %38
    i64 -1, label %38
  ]

12:                                               ; preds = %3
  %13 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !111
  %14 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %13, i64 0, i32 1
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #17, !noalias !111
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %19, !prof !2

17:                                               ; preds = %12
  %18 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %14, i8* %18) #17
  br label %19

19:                                               ; preds = %17, %12
  %20 = phi i8* [ %18, %17 ], [ %15, %12 ]
  %21 = bitcast i8* %20 to %"class.blink::ThreadState"**
  %22 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %21, align 8, !noalias !111
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %22, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %23, align 8, !noalias !111
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8, !noalias !111
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %28, label %31, !prof !2

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %29) #17
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  br label %31

31:                                               ; preds = %28, %19
  %32 = phi %"class.blink::PersistentNode"* [ %30, %28 ], [ %26, %19 ]
  %33 = bitcast %"class.blink::PersistentNode"* %32 to i64*
  %34 = load i64, i64* %33, align 8, !noalias !111
  %35 = bitcast %"class.blink::PersistentRegion"* %24 to i64*
  store i64 %34, i64* %35, align 8, !noalias !111
  %36 = bitcast %"class.blink::PersistentNode"* %32 to %"class.blink::PersistentBase.4070"**
  store %"class.blink::PersistentBase.4070"* %8, %"class.blink::PersistentBase.4070"** %36, align 8, !noalias !111
  %37 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %32, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_26InspectorRevalidateDOMTaskELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %37, align 8
  store %"class.blink::PersistentNode"* %32, %"class.blink::PersistentNode"** %10, align 8, !alias.scope !111
  br label %38

38:                                               ; preds = %3, %3, %31
  %39 = call i8* @_Znwm(i64 72) #18, !noalias !114
  %40 = bitcast i8* %39 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %40, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_26InspectorRevalidateDOMTaskEEJS6_NS4_14WeakPersistentIS7_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS3_26InspectorRevalidateDOMTaskEEJS5_NS3_14WeakPersistentIS6_EEEE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !114
  %41 = getelementptr inbounds i8, i8* %39, i64 32
  %42 = bitcast i8* %41 to i64*
  store i64 ptrtoint (void (%"class.base::WeakPtr.4068"*, %"class.blink::InspectorRevalidateDOMTask"*)* @_ZN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEE21RunInternalTrampolineEN4base7WeakPtrINS_9TimerBaseEEEPS1_ to i64), i64* %42, align 8, !noalias !114
  %43 = getelementptr inbounds i8, i8* %39, i64 40
  %44 = bitcast i8* %43 to %"struct.std::__1::__tuple_impl"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN4base7WeakPtrIN5blink9TimerBaseEEENS5_14WeakPersistentINS5_26InspectorRevalidateDOMTaskEEEEEC2IJLm0ELm1EEJS7_SA_EJEJEJS7_SA_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSE_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"* %44, %"class.base::WeakPtr.4068"* dereferenceable(16) %2, %"class.blink::WeakPersistent.4069"* nonnull dereferenceable(16) %4) #17, !noalias !114
  %45 = bitcast %"class.base::OnceCallback"* %0 to i8**
  store i8* %39, i8** %45, align 8, !alias.scope !114
  %46 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %47 = icmp eq %"class.blink::PersistentNode"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %38
  %49 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %50 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %49, i64 0, i32 1
  %51 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %50) #17
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %55, !prof !2

53:                                               ; preds = %48
  %54 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %50, i8* %54) #17
  br label %55

55:                                               ; preds = %53, %48
  %56 = phi i8* [ %54, %53 ], [ %51, %48 ]
  %57 = bitcast i8* %56 to %"class.blink::ThreadState"**
  %58 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %59, align 8
  %61 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %62 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %60, i64 0, i32 0, i32 0
  %63 = bitcast %"class.blink::PersistentRegion"* %60 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::PersistentNode"* %61 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %61, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %66, align 8
  store %"class.blink::PersistentNode"* %61, %"class.blink::PersistentNode"** %62, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %10, align 8
  br label %67

67:                                               ; preds = %38, %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HeapTaskRunnerTimerINS_26InspectorRevalidateDOMTaskEE21RunInternalTrampolineEN4base7WeakPtrINS_9TimerBaseEEEPS1_(%"class.base::WeakPtr.4068"*, %"class.blink::InspectorRevalidateDOMTask"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::WeakPtr.4068", %"class.base::WeakPtr.4068"* %0, i64 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #17
  br i1 %4, label %5, label %18

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.base::WeakPtr.4068", %"class.base::WeakPtr.4068"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i64* %6 to %"class.blink::TimerBase"**
  %8 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %7, align 8
  %9 = icmp ne %"class.blink::TimerBase"* %8, null
  %10 = icmp ne %"class.blink::InspectorRevalidateDOMTask"* %1, null
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %18

12:                                               ; preds = %5
  %13 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #17
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %7, align 8
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi %"class.blink::TimerBase"* [ %15, %14 ], [ null, %12 ]
  tail call void @_ZN5blink9TimerBase11RunInternalEv(%"class.blink::TimerBase"* %17) #17
  br label %18

18:                                               ; preds = %2, %16, %5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_26InspectorRevalidateDOMTaskEEJS6_NS4_14WeakPersistentIS7_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::WeakPtr.4068", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::WeakPtr.4068"*, %"class.blink::InspectorRevalidateDOMTask"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast %"class.base::WeakPtr.4068"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  %7 = load void (%"class.base::WeakPtr.4068"*, %"class.blink::InspectorRevalidateDOMTask"*)*, void (%"class.base::WeakPtr.4068"*, %"class.blink::InspectorRevalidateDOMTask"*)** %4, align 8
  %8 = getelementptr inbounds %"class.base::WeakPtr.4068", %"class.base::WeakPtr.4068"* %2, i64 0, i32 0, i32 0
  %9 = bitcast void ()** %5 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %8, %"class.base::internal::WeakReference"* dereferenceable(8) %9) #17
  %10 = getelementptr inbounds %"class.base::WeakPtr.4068", %"class.base::WeakPtr.4068"* %2, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  %14 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %15 = bitcast void ()** %14 to %"class.blink::InspectorRevalidateDOMTask"**
  %16 = load %"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::InspectorRevalidateDOMTask"** %15, align 8
  call void %7(%"class.base::WeakPtr.4068"* nonnull %2, %"class.blink::InspectorRevalidateDOMTask"* %16) #17
  %17 = getelementptr inbounds %"class.base::WeakPtr.4068", %"class.base::WeakPtr.4068"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS3_26InspectorRevalidateDOMTaskEEJS5_NS3_14WeakPersistentIS6_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #17
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #17
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %5, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %29 = bitcast void ()** %28 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %29) #17
  %30 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #18
  br label %31

31:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN4base7WeakPtrIN5blink9TimerBaseEEENS5_14WeakPersistentINS5_26InspectorRevalidateDOMTaskEEEEEC2IJLm0ELm1EEJS7_SA_EJEJEJS7_SA_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSE_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"*, %"class.base::WeakPtr.4068"* dereferenceable(16), %"class.blink::WeakPersistent.4069"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.base::WeakPtr.4068", %"class.base::WeakPtr.4068"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %4, %"class.base::internal::WeakReference"* dereferenceable(8) %5) #17
  %6 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::WeakPtr.4068", %"class.base::WeakPtr.4068"* %1, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::__tuple_leaf.4071", %"class.std::__1::__tuple_leaf.4071"* %9, i64 0, i32 0, i32 0
  %11 = bitcast %"class.blink::WeakPersistent.4069"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::__tuple_leaf.4071"* %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  switch i64 %12, label %15 [
    i64 0, label %41
    i64 -1, label %41
  ]

15:                                               ; preds = %3
  %16 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %17 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %16, i64 0, i32 1
  %18 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %17) #17
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %22, !prof !2

20:                                               ; preds = %15
  %21 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %17, i8* %21) #17
  br label %22

22:                                               ; preds = %20, %15
  %23 = phi i8* [ %21, %20 ], [ %18, %15 ]
  %24 = bitcast i8* %23 to %"class.blink::ThreadState"**
  %25 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %25, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %31, label %34, !prof !2

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %27, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %32) #17
  %33 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  br label %34

34:                                               ; preds = %31, %22
  %35 = phi %"class.blink::PersistentNode"* [ %33, %31 ], [ %29, %22 ]
  %36 = bitcast %"class.blink::PersistentNode"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.blink::PersistentRegion"* %27 to i64*
  store i64 %37, i64* %38, align 8
  %39 = bitcast %"class.blink::PersistentNode"* %35 to %"class.blink::PersistentBase.4070"**
  store %"class.blink::PersistentBase.4070"* %10, %"class.blink::PersistentBase.4070"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %35, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_26InspectorRevalidateDOMTaskELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %40, align 8
  store %"class.blink::PersistentNode"* %35, %"class.blink::PersistentNode"** %14, align 8
  br label %41

41:                                               ; preds = %3, %3, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_26InspectorRevalidateDOMTaskELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_26InspectorRevalidateDOMTaskELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_26InspectorRevalidateDOMTaskELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorRevalidateDOMTask"**
  %4 = load %"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::InspectorRevalidateDOMTask"** %3, align 8
  %5 = icmp eq %"class.blink::InspectorRevalidateDOMTask"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #17
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #17
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %4, i64 -1, i32 2, i32 0, i32 0, i32 3
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::InspectorRevalidateDOMTask"* null, %"class.blink::InspectorRevalidateDOMTask"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #17
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #17
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZN5blink9TimerBase11RunInternalEv(%"class.blink::TimerBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.343"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.1255"*, %"class.blink::Element"** dereferenceable(8), %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1255", %"class.WTF::HashTable.1255"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %4, align 8
  %6 = icmp eq %"class.blink::Member.343"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.343"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.1255"* %0, %"class.blink::Member.343"* null)
  %9 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.343"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1255", %"class.WTF::HashTable.1255"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Element"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::Element"*, %"class.blink::Element"** %40, align 8
  %42 = icmp eq %"class.blink::Element"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Element"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Element"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.343"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.343"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Element"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Element"* %59, inttoptr (i64 -1 to %"class.blink::Element"*)
  %67 = select i1 %66, %"class.blink::Member.343"* %60, %"class.blink::Member.343"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::Element"*, %"class.blink::Element"** %73, align 8
  %75 = icmp eq %"class.blink::Element"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.343"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.343"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #17
  %80 = getelementptr inbounds %"class.WTF::HashTable.1255", %"class.WTF::HashTable.1255"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.343"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %89 = ptrtoint %"class.blink::Element"* %88 to i64
  %90 = bitcast %"class.blink::Member.343"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::Element"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #17
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.343"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #17
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.1255", %"class.WTF::HashTable.1255"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.1255", %"class.WTF::HashTable.1255"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.343"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.1255"* %0, %"class.blink::Member.343"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.343"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.343"*, i8 } undef, %"class.blink::Member.343"* %117, 0
  %119 = insertvalue { %"class.blink::Member.343"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.343"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.343"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.1255"*, %"class.blink::Member.343"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.1255", %"class.WTF::HashTable.1255"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.1255", %"class.WTF::HashTable.1255"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0), i8* %23, i8* %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #17
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.343"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.1255"* %0, i32 %35, %"class.blink::Member.343"* %1, i8* nonnull dereferenceable(1) %4) #17
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #17
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.343"*
  %44 = call %"class.blink::Member.343"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.1255"* %0, %"class.blink::Member.343"* %43, i32 %40, %"class.blink::Member.343"* %1) #17
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.343"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.343"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.343"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.1255"*, i32, %"class.blink::Member.343"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #17
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #17
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0)) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.1255", %"class.WTF::HashTable.1255"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %31, align 8
  %33 = icmp eq %"class.blink::Member.343"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.343"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #17
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.1255", %"class.WTF::HashTable.1255"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #17
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.343"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.343"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.343"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.343"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.343"* %61, %"class.blink::Member.343"* %55
  %63 = bitcast %"class.blink::Member.343"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.343"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.343"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.1255"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #17
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.343"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.343"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.1255"* %0, %"class.blink::Member.343"* %42, i32 %1, %"class.blink::Member.343"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.343"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.343"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.343"* %87, %"class.blink::Member.343"* %82
  %89 = bitcast %"class.blink::Member.343"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.343"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.343"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.343"* %99, %"class.blink::Member.343"* %88
  %101 = bitcast %"class.blink::Member.343"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.343"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.343"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.343"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.343"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.1255"*, %"class.blink::Member.343"*, i32, %"class.blink::Member.343"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.343"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.1255", %"class.WTF::HashTable.1255"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.1255", %"class.WTF::HashTable.1255"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.343"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.343"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #17
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.1255", %"class.WTF::HashTable.1255"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.1255"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.343"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #17
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.343"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.343"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #17
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.1255", %"class.WTF::HashTable.1255"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.343"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.343"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.343"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.343"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.343"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::Element"*, %"class.blink::Element"** %70, align 8
  %72 = icmp eq %"class.blink::Element"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::Element"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.343"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.343"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.343"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.343"* %93, null
  %95 = ptrtoint %"class.blink::Member.343"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::Element"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::Element"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::Element"* %99, inttoptr (i64 -1 to %"class.blink::Element"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.343"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::Element"*, %"class.blink::Element"** %113, align 8
  %115 = icmp eq %"class.blink::Element"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.343"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.343"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.343"* %118, %"class.blink::Member.343"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.343"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.343"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.68, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 5, i32 %28, i8* getelementptr inbounds ([331 x i8], [331 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_7ElementEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0)) #17
  %30 = bitcast i8* %29 to %"class.blink::HeapHashTableBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.343"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #17
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.343"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #17
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #17
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.368"*, %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.368"* %0, i32 %14) #17
  %15 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %16, i64 %18
  %20 = bitcast %"class.blink::Element"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.343"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #17
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.368"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %8, align 8
  %10 = icmp eq %"class.blink::Member.343"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %11) #17
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.4086"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #17
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4086"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.368"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4086", %"class.blink::HeapVectorBacking.4086"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #17
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %8, align 8
  %26 = icmp eq %"class.blink::Member.343"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.343"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #17
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #17
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #17
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.56, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0)) #17
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #17
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.368"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.368"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.368"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.368"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #17
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #17
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %14) #17
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.4086"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #17
  %18 = ptrtoint %"class.blink::HeapVectorBacking.4086"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.4086"* %17, null
  %23 = icmp ne %"class.blink::Member.343"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.343"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.368"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.4086", %"class.blink::HeapVectorBacking.4086"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #17
  %33 = bitcast %"class.WTF::Vector.368"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #17
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #17
  %42 = bitcast %"class.WTF::Vector.368"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.4086", %"class.blink::HeapVectorBacking.4086"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #17
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.61, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.62, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4086"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.64, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #17
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking.4086"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking.4086"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.343"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.343"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #17
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17InspectorDOMAgentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZNK5blink17InspectorDOMAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorDOMAgent"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_26InspectorRevalidateDOMTaskEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorRevalidateDOMTask"**
  %4 = load %"class.blink::InspectorRevalidateDOMTask"*, %"class.blink::InspectorRevalidateDOMTask"** %3, align 8
  %5 = ptrtoint %"class.blink::InspectorRevalidateDOMTask"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #17
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #17
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::InspectorRevalidateDOMTask", %"class.blink::InspectorRevalidateDOMTask"* %4, i64 -1, i32 2, i32 0, i32 0, i32 3
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_26InspectorRevalidateDOMTaskEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17InspectorDOMAgentEE5TraceEPNS_7VisitorEPKv) #17
  br label %12

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds i8, i8* %1, i64 112
  %14 = bitcast i8* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = bitcast i8* %13 to i8**
  %17 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %18 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %18, i64 11
  %20 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, align 8
  tail call void %20(%"class.blink::Visitor"* %0, i8** %16) #17
  %21 = icmp eq i64 %15, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %12
  %23 = inttoptr i64 %15 to i8*
  %24 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %25, i64 5
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %0, i8* nonnull %23, i8* nonnull %23, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #17
  br label %28

28:                                               ; preds = %22, %12
  %29 = getelementptr inbounds i8, i8* %1, i64 8
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %44, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds i8, i8* %1, i64 88
  %35 = bitcast i8* %34 to i64*
  %36 = load atomic i64, i64* %35 monotonic, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %33
  %39 = inttoptr i64 %36 to i8*
  %40 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %41, i64 6
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* %34, i8* %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26InspectorRevalidateDOMTaskEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_26InspectorRevalidateDOMTaskEEEvRKNS_14LivenessBrokerEPKv) #17
  br label %44

44:                                               ; preds = %28, %33, %38
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4099", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.4099"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4099", %"class.WTF::StringTypeAdapter.4099"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.4099"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4099"* nonnull %4, i8* %21) #17
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #17
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.69, i64 0, i64 0), i8* %30, i8* %31) #17
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.70, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #17
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #17
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #17
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i64 0, i64 0), i8* %46, i8* %47) #17
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.70, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #17
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #17
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #17
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4099"*, i8*) unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4098"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.4099"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4098"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4099"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.3345"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3345", %"class.WTF::StringAppend.3345"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend.3345", %"class.WTF::StringAppend.3345"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #17
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.69, i64 0, i64 0), i8* %31, i8* %32) #17
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.70, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #17
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #17
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #17
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #17
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i64 0, i64 0), i8* %46, i8* %47) #17
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.70, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #17
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #17
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #17
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([198 x i8], [198 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapINS1_6MemberINS1_4NodeEEEiNS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS8_IiEEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8** %5) #17
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #17
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.3319"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #17
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.3319"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #17
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair.2717"*, %"struct.WTF::KeyValuePair.2717"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.2714"* %8, %"class.WTF::String"* dereferenceable(8) %7) #17
  %10 = extractvalue { %"struct.WTF::KeyValuePair.2717"*, %"struct.WTF::KeyValuePair.2717"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.2717"*, %"struct.WTF::KeyValuePair.2717"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.2717", %"struct.WTF::KeyValuePair.2717"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair.2717"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.2717", %"struct.WTF::KeyValuePair.2717"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %18
  tail call void @llvm.trap() #17
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.2717", %"struct.WTF::KeyValuePair.2717"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.2717", %"struct.WTF::KeyValuePair.2717"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8* %25, i64 %28, i8* %29) #17
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorAgentState::Field"*) local_unnamed_addr #1

declare %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8*, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2717"*, %"struct.WTF::KeyValuePair.2717"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.2714"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2714", %"class.WTF::HashTable.2714"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2717"*, %"struct.WTF::KeyValuePair.2717"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.2717"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.2714", %"class.WTF::HashTable.2714"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.2717", %"struct.WTF::KeyValuePair.2717"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.2717", %"struct.WTF::KeyValuePair.2717"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.2717"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.2717"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.2717", %"struct.WTF::KeyValuePair.2717"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2717", %"struct.WTF::KeyValuePair.2717"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.2717"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.2717"*, %"struct.WTF::KeyValuePair.2717"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.2714", %"class.WTF::HashTable.2714"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2717", %"struct.WTF::KeyValuePair.2717"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.2717"*, %"struct.WTF::KeyValuePair.2717"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2717", %"struct.WTF::KeyValuePair.2717"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.2717"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.2717"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.2717"*, %"struct.WTF::KeyValuePair.2717"* } undef, %"struct.WTF::KeyValuePair.2717"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.2717"*, %"struct.WTF::KeyValuePair.2717"* } %77, %"struct.WTF::KeyValuePair.2717"* %76, 1
  ret { %"struct.WTF::KeyValuePair.2717"*, %"struct.WTF::KeyValuePair.2717"* } %78
}

declare void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3349"*, %"class.blink::Document"** dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3349", %"class.WTF::Vector.3349"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3349", %"class.WTF::Vector.3349"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3349"* %0, i32 %14) #17
  %15 = getelementptr inbounds %"class.WTF::Vector.3349", %"class.WTF::Vector.3349"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %16, i64 %18
  %20 = bitcast %"class.blink::Document"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.326"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #17
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3349"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3349", %"class.WTF::Vector.3349"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3349", %"class.WTF::Vector.3349"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %8, align 8
  %10 = icmp eq %"class.blink::Member.326"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8DocumentEEEEEmm(i64 %11) #17
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.4115"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #17
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4115"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3349"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4115", %"class.blink::HeapVectorBacking.4115"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #17
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %8, align 8
  %26 = icmp eq %"class.blink::Member.326"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.326"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #17
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #17
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #17
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.56, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0)) #17
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #17
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3349"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8DocumentEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3349"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.3349"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3349", %"class.WTF::Vector.3349"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.3349"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.3349", %"class.WTF::Vector.3349"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #17
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #17
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8DocumentEEEEEmm(i64 %14) #17
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.4115"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #17
  %18 = ptrtoint %"class.blink::HeapVectorBacking.4115"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.3349", %"class.WTF::Vector.3349"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3349", %"class.WTF::Vector.3349"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.4115"* %17, null
  %23 = icmp ne %"class.blink::Member.326"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.326"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.3349"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.4115", %"class.blink::HeapVectorBacking.4115"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #17
  %33 = bitcast %"class.WTF::Vector.3349"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #17
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #17
  %42 = bitcast %"class.WTF::Vector.3349"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.3349", %"class.WTF::Vector.3349"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.4115", %"class.blink::HeapVectorBacking.4115"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #17
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8DocumentEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.61, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.62, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4115"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.64, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8DocumentEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #17
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking.4115"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking.4115"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.326"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.326"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #17
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8DocumentEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.2749"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.2747"*, %"struct.blink::InspectorDOMAgent::DOMListener"** dereferenceable(8), %"struct.blink::InspectorDOMAgent::DOMListener"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %4, align 8
  %6 = icmp eq %"class.blink::Member.2749"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.2749"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.2747"* %0, %"class.blink::Member.2749"* null)
  %9 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.2749"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"struct.blink::InspectorDOMAgent::DOMListener"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %39, i64 0, i32 0, i32 0
  %41 = load %"struct.blink::InspectorDOMAgent::DOMListener"*, %"struct.blink::InspectorDOMAgent::DOMListener"** %40, align 8
  %42 = icmp eq %"struct.blink::InspectorDOMAgent::DOMListener"* %41, null
  %43 = inttoptr i64 %17 to %"struct.blink::InspectorDOMAgent::DOMListener"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"struct.blink::InspectorDOMAgent::DOMListener"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.2749"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.2749"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"struct.blink::InspectorDOMAgent::DOMListener"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"struct.blink::InspectorDOMAgent::DOMListener"* %59, inttoptr (i64 -1 to %"struct.blink::InspectorDOMAgent::DOMListener"*)
  %67 = select i1 %66, %"class.blink::Member.2749"* %60, %"class.blink::Member.2749"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %72, i64 0, i32 0, i32 0
  %74 = load %"struct.blink::InspectorDOMAgent::DOMListener"*, %"struct.blink::InspectorDOMAgent::DOMListener"** %73, align 8
  %75 = icmp eq %"struct.blink::InspectorDOMAgent::DOMListener"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.2749"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.2749"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #17
  %80 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.2749"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"struct.blink::InspectorDOMAgent::DOMListener"*, %"struct.blink::InspectorDOMAgent::DOMListener"** %2, align 8
  %89 = ptrtoint %"struct.blink::InspectorDOMAgent::DOMListener"* %88 to i64
  %90 = bitcast %"class.blink::Member.2749"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"struct.blink::InspectorDOMAgent::DOMListener"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #17
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.2749"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #17
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.2749"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.2747"* %0, %"class.blink::Member.2749"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.2749"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.2749"*, i8 } undef, %"class.blink::Member.2749"* %117, 0
  %119 = insertvalue { %"class.blink::Member.2749"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.2749"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.2749"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.2747"*, %"class.blink::Member.2749"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0), i8* %23, i8* %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #17
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.2749"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.2747"* %0, i32 %35, %"class.blink::Member.2749"* %1, i8* nonnull dereferenceable(1) %4) #17
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.4119"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #17
  %43 = bitcast %"class.blink::HeapHashTableBacking.4119"* %42 to %"class.blink::Member.2749"*
  %44 = call %"class.blink::Member.2749"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.2747"* %0, %"class.blink::Member.2749"* %43, i32 %40, %"class.blink::Member.2749"* %1) #17
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.2749"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.2749"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.2749"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.2747"*, i32, %"class.blink::Member.2749"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #17
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #17
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0)) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %31, align 8
  %33 = icmp eq %"class.blink::Member.2749"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.2749"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #17
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.4119"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #17
  %45 = bitcast %"class.blink::HeapHashTableBacking.4119"* %44 to %"class.blink::Member.2749"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.2749"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.2749"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.2749"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.2749"* %61, %"class.blink::Member.2749"* %55
  %63 = bitcast %"class.blink::Member.2749"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.2749"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.2749"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.2747"* %0 to %"class.blink::HeapHashTableBacking.4119"**
  store %"class.blink::HeapHashTableBacking.4119"* %44, %"class.blink::HeapHashTableBacking.4119"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking.4119", %"class.blink::HeapHashTableBacking.4119"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #17
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.2749"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.2749"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.2747"* %0, %"class.blink::Member.2749"* %42, i32 %1, %"class.blink::Member.2749"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.2749"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.2749"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.2749"* %87, %"class.blink::Member.2749"* %82
  %89 = bitcast %"class.blink::Member.2749"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.2749"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.2749"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.2749"* %99, %"class.blink::Member.2749"* %88
  %101 = bitcast %"class.blink::Member.2749"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.2749"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.2749"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.2749"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.2749"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.2747"*, %"class.blink::Member.2749"*, i32, %"class.blink::Member.2749"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.2749"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.2749"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.2749"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #17
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.2747"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.2749"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #17
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.2749"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.2749"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #17
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.2749"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.2749"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.2749"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.2749"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.2749"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %68, i64 0, i32 0, i32 0
  %71 = load %"struct.blink::InspectorDOMAgent::DOMListener"*, %"struct.blink::InspectorDOMAgent::DOMListener"** %70, align 8
  %72 = icmp eq %"struct.blink::InspectorDOMAgent::DOMListener"* %71, null
  %73 = inttoptr i64 %45 to %"struct.blink::InspectorDOMAgent::DOMListener"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.2749"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.2749"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.2749"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.2749"* %93, null
  %95 = ptrtoint %"class.blink::Member.2749"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"struct.blink::InspectorDOMAgent::DOMListener"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"struct.blink::InspectorDOMAgent::DOMListener"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"struct.blink::InspectorDOMAgent::DOMListener"* %99, inttoptr (i64 -1 to %"struct.blink::InspectorDOMAgent::DOMListener"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.2749"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %111, i64 0, i32 0, i32 0
  %114 = load %"struct.blink::InspectorDOMAgent::DOMListener"*, %"struct.blink::InspectorDOMAgent::DOMListener"** %113, align 8
  %115 = icmp eq %"struct.blink::InspectorDOMAgent::DOMListener"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.2749"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.2749"*, %"class.blink::Member.2749"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.2749"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.2749"* %118, %"class.blink::Member.2749"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.2749"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.2749"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.4119"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.68, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.4119"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.4119"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([446 x i8], [446 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_17InspectorDOMAgent11DOMListenerEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_17InspectorDOMAgent11DOMListenerEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_17InspectorDOMAgent11DOMListenerEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2749"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #17
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %174, %20
  ret void

33:                                               ; preds = %174, %30
  %34 = phi i64 [ 0, %30 ], [ %175, %174 ]
  %35 = getelementptr inbounds %"class.blink::Member.2749", %"class.blink::Member.2749"* %3, i64 %34
  %36 = bitcast %"class.blink::Member.2749"* %35 to i64*
  br i1 %28, label %37, label %104

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %174
    i64 0, label %174
  ]

39:                                               ; preds = %37
  %40 = inttoptr i64 %38 to i8*
  %41 = and i64 %38, -131072
  %42 = inttoptr i64 %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 4138
  %44 = load i8, i8* %43, align 2
  %45 = icmp eq i8 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %39
  %47 = getelementptr inbounds i8, i8* %42, i64 4160
  br label %86

48:                                               ; preds = %39
  %49 = getelementptr inbounds i8, i8* %42, i64 4096
  %50 = bitcast i8* %49 to %"class.blink::NormalPage"*
  %51 = getelementptr inbounds i8, i8* %42, i64 4400
  %52 = bitcast i8* %51 to i8**
  %53 = bitcast i8* %51 to i64*
  %54 = load i64, i64* %53, align 16
  %55 = sub i64 %38, %54
  %56 = lshr i64 %55, 3
  %57 = lshr i64 %55, 6
  %58 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %50, i64 0, i32 2, i32 0, i32 1, i64 %57
  %59 = load atomic i8, i8* %58 acquire, align 1
  %60 = trunc i64 %56 to i32
  %61 = and i32 %60, 7
  %62 = shl i32 2, %61
  %63 = trunc i32 %62 to i8
  %64 = add i8 %63, -1
  %65 = and i8 %64, %59
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %48, %67
  %68 = phi i64 [ %69, %67 ], [ %57, %48 ]
  %69 = add i64 %68, -1
  %70 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %50, i64 0, i32 2, i32 0, i32 1, i64 %69
  %71 = load atomic i8, i8* %70 acquire, align 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %67, label %73

73:                                               ; preds = %67, %48
  %74 = phi i64 [ %57, %48 ], [ %69, %67 ]
  %75 = phi i8 [ %65, %48 ], [ %71, %67 ]
  %76 = zext i8 %75 to i32
  %77 = tail call i32 @llvm.ctlz.i32(i32 %76, i1 true) #17, !range !121
  %78 = add nsw i32 %77, -24
  %79 = shl i64 %74, 3
  %80 = or i64 %79, 7
  %81 = sext i32 %78 to i64
  %82 = sub i64 %80, %81
  %83 = shl i64 %82, 3
  %84 = load i8*, i8** %52, align 16
  %85 = getelementptr inbounds i8, i8* %84, i64 %83
  br label %86

86:                                               ; preds = %73, %46
  %87 = phi i8* [ %47, %46 ], [ %85, %73 ]
  %88 = getelementptr inbounds i8, i8* %87, i64 8
  %89 = getelementptr inbounds i8, i8* %87, i64 4
  %90 = bitcast i8* %89 to i16*
  %91 = load atomic i16, i16* %90 acquire, align 2
  %92 = lshr i16 %91, 2
  %93 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %94 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %93, i64 0, i32 0
  %95 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %94, align 8
  %96 = zext i16 %92 to i64
  %97 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %95, i64 %96
  %98 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %97, align 8
  %99 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %98, i64 0, i32 0
  %100 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %99, align 8
  %101 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %102 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %101, i64 5
  %103 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %102, align 8
  tail call void %103(%"class.blink::Visitor"* %0, i8* nonnull %40, i8* %88, void (%"class.blink::Visitor"*, i8*)* %100) #17
  br label %174

104:                                              ; preds = %33
  %105 = load i64, i64* %36, align 8
  switch i64 %105, label %106 [
    i64 -1, label %174
    i64 0, label %174
  ]

106:                                              ; preds = %104
  %107 = load atomic i64, i64* %36 monotonic, align 8
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %174, label %109

109:                                              ; preds = %106
  %110 = inttoptr i64 %107 to i8*
  %111 = and i64 %107, -131072
  %112 = inttoptr i64 %111 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 4138
  %114 = load i8, i8* %113, align 2
  %115 = icmp eq i8 %114, 1
  br i1 %115, label %116, label %118

116:                                              ; preds = %109
  %117 = getelementptr inbounds i8, i8* %112, i64 4160
  br label %156

118:                                              ; preds = %109
  %119 = getelementptr inbounds i8, i8* %112, i64 4096
  %120 = bitcast i8* %119 to %"class.blink::NormalPage"*
  %121 = getelementptr inbounds i8, i8* %112, i64 4400
  %122 = bitcast i8* %121 to i8**
  %123 = bitcast i8* %121 to i64*
  %124 = load i64, i64* %123, align 16
  %125 = sub i64 %107, %124
  %126 = lshr i64 %125, 3
  %127 = lshr i64 %125, 6
  %128 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %120, i64 0, i32 2, i32 0, i32 1, i64 %127
  %129 = load atomic i8, i8* %128 acquire, align 1
  %130 = trunc i64 %126 to i32
  %131 = and i32 %130, 7
  %132 = shl i32 2, %131
  %133 = trunc i32 %132 to i8
  %134 = add i8 %133, -1
  %135 = and i8 %134, %129
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %143

137:                                              ; preds = %118, %137
  %138 = phi i64 [ %139, %137 ], [ %127, %118 ]
  %139 = add i64 %138, -1
  %140 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %120, i64 0, i32 2, i32 0, i32 1, i64 %139
  %141 = load atomic i8, i8* %140 acquire, align 1
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %137, label %143

143:                                              ; preds = %137, %118
  %144 = phi i64 [ %127, %118 ], [ %139, %137 ]
  %145 = phi i8 [ %135, %118 ], [ %141, %137 ]
  %146 = zext i8 %145 to i32
  %147 = tail call i32 @llvm.ctlz.i32(i32 %146, i1 true) #17, !range !121
  %148 = add nsw i32 %147, -24
  %149 = shl i64 %144, 3
  %150 = or i64 %149, 7
  %151 = sext i32 %148 to i64
  %152 = sub i64 %150, %151
  %153 = shl i64 %152, 3
  %154 = load i8*, i8** %122, align 16
  %155 = getelementptr inbounds i8, i8* %154, i64 %153
  br label %156

156:                                              ; preds = %143, %116
  %157 = phi i8* [ %117, %116 ], [ %155, %143 ]
  %158 = getelementptr inbounds i8, i8* %157, i64 8
  %159 = getelementptr inbounds i8, i8* %157, i64 4
  %160 = bitcast i8* %159 to i16*
  %161 = load atomic i16, i16* %160 acquire, align 2
  %162 = lshr i16 %161, 2
  %163 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %164 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %163, i64 0, i32 0
  %165 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %164, align 8
  %166 = zext i16 %162 to i64
  %167 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %165, i64 %166
  %168 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %167, align 8
  %169 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %168, i64 0, i32 0
  %170 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %169, align 8
  %171 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %172 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %171, i64 5
  %173 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %172, align 8
  tail call void %173(%"class.blink::Visitor"* %0, i8* nonnull %110, i8* %158, void (%"class.blink::Visitor"*, i8*)* %170) #17
  br label %174

174:                                              ; preds = %104, %104, %37, %37, %156, %106, %86
  %175 = add nuw nsw i64 %34, 1
  %176 = icmp eq i64 %175, %23
  br i1 %176, label %32, label %33
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE5eraseEPKS5_(%"class.WTF::HashTable.2747"*, %"class.blink::Member.2749"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member.2749"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  %7 = and i32 %6, 2147483647
  %8 = and i32 %5, -2147483648
  %9 = or i32 %7, %8
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 4
  %13 = mul i32 %12, 6
  %14 = getelementptr inbounds %"class.WTF::HashTable.2747", %"class.WTF::HashTable.2747"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  %17 = icmp ugt i32 %15, 8
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %48

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #17
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #17
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !3
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 16
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %48, label %37

37:                                               ; preds = %26, %33
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = load i32, i32* %14, align 8
  %43 = lshr i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = tail call %"class.blink::HeapHashTableBacking.4119"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_17InspectorDOMAgent11DOMListenerEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #17
  %46 = bitcast %"class.blink::HeapHashTableBacking.4119"* %45 to %"class.blink::Member.2749"*
  %47 = tail call %"class.blink::Member.2749"* @_ZN3WTF9HashTableIN5blink6MemberINS1_17InspectorDOMAgent11DOMListenerEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.2747"* %0, %"class.blink::Member.2749"* %46, i32 %43, %"class.blink::Member.2749"* null) #17
  br label %48

48:                                               ; preds = %33, %2, %41, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashMapINS2_INS1_4NodeEEEiNS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS8_IiEEEEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2756"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2756"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2756", %"class.WTF::Vector.2756"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2756"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2756", %"class.WTF::Vector.2756"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #17
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #17
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEEEEmm(i64 %14) #17
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.4139"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE4CallEm(i64 %16) #17
  %18 = ptrtoint %"class.blink::HeapVectorBacking.4139"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2756", %"class.WTF::Vector.2756"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.2750"*, %"class.blink::Member.2750"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2756", %"class.WTF::Vector.2756"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.4139"* %17, null
  %23 = icmp ne %"class.blink::Member.2750"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.2750"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2756"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.4139", %"class.blink::HeapVectorBacking.4139"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #17
  %33 = bitcast %"class.WTF::Vector.2756"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #17
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #17
  %42 = bitcast %"class.WTF::Vector.2756"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2756", %"class.WTF::Vector.2756"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.4139", %"class.blink::HeapVectorBacking.4139"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #17
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.61, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.62, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4139"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.64, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS1_INS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEEENS5_12VectorTraitsISC_EEE14AllocateObjectISF_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.4139"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.4139"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS1_INS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEEENS5_12VectorTraitsISC_EEE14AllocateObjectISF_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([429 x i8], [429 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11HeapHashMapINS3_INS1_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEENS_12VectorTraitsISD_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2750"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.2750", %"class.blink::Member.2750"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.2750"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE5TraceEPNS_7VisitorEPKv) #17
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3319"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RiEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.3317"*, %"class.blink::Node"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3319"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3319"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.3317"* %0, %"struct.WTF::KeyValuePair.3319"* null)
  %9 = load %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3319"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Node"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.3319"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.3319"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %147, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.3319"* %60, %"struct.WTF::KeyValuePair.3319"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.3319"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.3319"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #17
  %80 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::Node"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.3319"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::Node"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.3319"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::Node"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #17
  br label %97

97:                                               ; preds = %87, %94
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %89, i64 0, i32 1
  %99 = load i32, i32* %2, align 4
  store i32 %99, i32* %98, align 4
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %135, label %102

102:                                              ; preds = %97
  %103 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %104 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %103, i64 0, i32 1
  %105 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %104) #17
  %106 = icmp eq i8* %105, null
  br i1 %106, label %107, label %109, !prof !2

107:                                              ; preds = %102
  %108 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %104, i8* %108) #17
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i8* [ %108, %107 ], [ %105, %102 ]
  %111 = bitcast i8* %110 to %"class.blink::ThreadState"**
  %112 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 9
  %114 = load i8, i8* %113, align 1, !range !3
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %135, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 13
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %121 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %120, align 8
  %122 = load atomic i64, i64* %91 monotonic, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %121, i64 0, i32 0, i32 0
  %126 = inttoptr i64 %122 to i8*
  %127 = bitcast %"class.blink::MarkingVisitor"* %121 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %128 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, i64 5
  %130 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %129, align 8
  tail call void %130(%"class.blink::Visitor"* %125, i8* nonnull %126, i8* %126, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  %131 = load i64, i64* %117, align 8
  br label %132

132:                                              ; preds = %124, %116
  %133 = phi i64 [ %119, %116 ], [ %131, %124 ]
  %134 = add i64 %133, -1
  store i64 %134, i64* %117, align 8
  br label %135

135:                                              ; preds = %97, %109, %132
  %136 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = add i32 %140, %138
  %142 = shl i32 %141, 1
  %143 = load i32, i32* %12, align 8
  %144 = icmp ult i32 %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %135
  %146 = tail call %"struct.WTF::KeyValuePair.3319"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.3317"* %0, %"struct.WTF::KeyValuePair.3319"* %89)
  br label %147

147:                                              ; preds = %58, %135, %145
  %148 = phi i8 [ 1, %135 ], [ 1, %145 ], [ 0, %58 ]
  %149 = phi %"struct.WTF::KeyValuePair.3319"* [ %89, %135 ], [ %146, %145 ], [ %60, %58 ]
  %150 = insertvalue { %"struct.WTF::KeyValuePair.3319"*, i8 } undef, %"struct.WTF::KeyValuePair.3319"* %149, 0
  %151 = insertvalue { %"struct.WTF::KeyValuePair.3319"*, i8 } %150, i8 %148, 1
  ret { %"struct.WTF::KeyValuePair.3319"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3319"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.3317"*, %"struct.WTF::KeyValuePair.3319"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0), i8* %23, i8* %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #17
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.3319"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.3317"* %0, i32 %35, %"struct.WTF::KeyValuePair.3319"* %1, i8* nonnull dereferenceable(1) %4) #17
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.4104"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #17
  %43 = bitcast %"class.blink::HeapHashTableBacking.4104"* %42 to %"struct.WTF::KeyValuePair.3319"*
  %44 = call %"struct.WTF::KeyValuePair.3319"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.3317"* %0, %"struct.WTF::KeyValuePair.3319"* %43, i32 %40, %"struct.WTF::KeyValuePair.3319"* %1) #17
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.3319"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.3319"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3319"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.3317"*, i32, %"struct.WTF::KeyValuePair.3319"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #17
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #17
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0)) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.3319"* %32, null
  br i1 %33, label %78, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.3319"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #17
  br i1 %38, label %39, label %78

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.4104"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #17
  %45 = bitcast %"class.blink::HeapHashTableBacking.4104"* %44 to %"struct.WTF::KeyValuePair.3319"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %75, %39
  %48 = phi %"struct.WTF::KeyValuePair.3319"* [ null, %39 ], [ %65, %75 ]
  %49 = bitcast %"class.WTF::HashTable.3317"* %0 to %"class.blink::HeapHashTableBacking.4104"**
  store %"class.blink::HeapHashTableBacking.4104"* %44, %"class.blink::HeapHashTableBacking.4104"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.4104", %"class.blink::HeapHashTableBacking.4104"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #17
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.3319"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.3319"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.3317"* %0, %"struct.WTF::KeyValuePair.3319"* %42, i32 %1, %"struct.WTF::KeyValuePair.3319"* %48)
  br label %78

58:                                               ; preds = %39, %75
  %59 = phi i64 [ %76, %75 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.3319"* [ %65, %75 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.3319"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.3319"* %64, %"struct.WTF::KeyValuePair.3319"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.3319"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.3319"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %75

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.3319"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %61, i64 %59, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  br label %75

75:                                               ; preds = %68, %70
  %76 = add nuw nsw i64 %59, 1
  %77 = icmp eq i64 %76, %43
  br i1 %77, label %47, label %58

78:                                               ; preds = %34, %30, %55
  %79 = phi %"struct.WTF::KeyValuePair.3319"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.3319"* %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3319"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.3317"*, %"struct.WTF::KeyValuePair.3319"*, i32, %"struct.WTF::KeyValuePair.3319"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3317", align 8
  %6 = bitcast %"class.WTF::HashTable.3317"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3317"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3319"* %1, %"struct.WTF::KeyValuePair.3319"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.3319"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.3319"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"** %19, align 8
  br label %57

21:                                               ; preds = %80
  %22 = bitcast %"class.WTF::HashTable.3317"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %81, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.3319"* [ null, %15 ], [ %83, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.3317"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #17
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.3317"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.3317"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #17
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #17
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.3319"* %29

57:                                               ; preds = %18, %80
  %58 = phi i32 [ %13, %18 ], [ %81, %80 ]
  %59 = phi %"struct.WTF::KeyValuePair.3319"* [ %20, %18 ], [ %82, %80 ]
  %60 = phi %"struct.WTF::KeyValuePair.3319"* [ null, %18 ], [ %83, %80 ]
  %61 = phi i32 [ 0, %18 ], [ %84, %80 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.3319"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %80
    i64 0, label %80
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.3319"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3317"* nonnull %5, %"class.blink::Member.318"* dereferenceable(8) %67) #17
  %69 = extractvalue { %"struct.WTF::KeyValuePair.3319"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.3319"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %59, i64 %62, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = load %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"** %19, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %75, i64 %62
  %77 = icmp eq %"struct.WTF::KeyValuePair.3319"* %76, %3
  %78 = select i1 %77, %"struct.WTF::KeyValuePair.3319"* %69, %"struct.WTF::KeyValuePair.3319"* %60
  %79 = load i32, i32* %12, align 8
  br label %80

80:                                               ; preds = %57, %57, %66
  %81 = phi i32 [ %58, %57 ], [ %79, %66 ], [ %58, %57 ]
  %82 = phi %"struct.WTF::KeyValuePair.3319"* [ %59, %57 ], [ %75, %66 ], [ %59, %57 ]
  %83 = phi %"struct.WTF::KeyValuePair.3319"* [ %60, %57 ], [ %78, %66 ], [ %60, %57 ]
  %84 = add i32 %61, 1
  %85 = icmp eq i32 %84, %81
  br i1 %85, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.4104"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.68, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_iEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IiEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.4104"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.4104"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_iEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IiEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([395 x i8], [395 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEENS_12KeyValuePairIS6_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IiEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3319"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3317"*, %"class.blink::Member.318"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member.318"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.3319"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Node"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.3319"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.3319"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.3319"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.3319"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.3319"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Node"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Node"* %63, inttoptr (i64 -1 to %"class.blink::Node"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.3319"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.3319"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.3319"*, i8 } undef, %"struct.WTF::KeyValuePair.3319"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.3319"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.3319"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2766"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERiRPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.2764"*, i32* dereferenceable(4), %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2766"*, %"struct.WTF::KeyValuePair.2766"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2766"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2766"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.2764"* %0, %"struct.WTF::KeyValuePair.2766"* null)
  %9 = load %"struct.WTF::KeyValuePair.2766"*, %"struct.WTF::KeyValuePair.2766"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2766"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.2766"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.2766"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %140, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.2766"* %52, %"struct.WTF::KeyValuePair.2766"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.2766"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.2766"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #17
  %72 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.2766"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %81, i64 0, i32 1
  %84 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %85 = ptrtoint %"class.blink::Node"* %84 to i64
  %86 = bitcast %"class.blink::Member.318"* %83 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %79
  %90 = bitcast %"class.blink::Node"* %84 to i8*
  %91 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #17
  br label %92

92:                                               ; preds = %79, %89
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %97 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %96, i64 0, i32 1
  %98 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %97) #17
  %99 = icmp eq i8* %98, null
  br i1 %99, label %100, label %102, !prof !2

100:                                              ; preds = %95
  %101 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %97, i8* %101) #17
  br label %102

102:                                              ; preds = %100, %95
  %103 = phi i8* [ %101, %100 ], [ %98, %95 ]
  %104 = bitcast i8* %103 to %"class.blink::ThreadState"**
  %105 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 9
  %107 = load i8, i8* %106, align 1, !range !3
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %128, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 13
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %110, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %113, align 8
  %115 = load atomic i64, i64* %86 monotonic, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %114, i64 0, i32 0, i32 0
  %119 = inttoptr i64 %115 to i8*
  %120 = bitcast %"class.blink::MarkingVisitor"* %114 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %121 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %121, i64 5
  %123 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %122, align 8
  tail call void %123(%"class.blink::Visitor"* %118, i8* nonnull %119, i8* %119, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  %124 = load i64, i64* %110, align 8
  br label %125

125:                                              ; preds = %117, %109
  %126 = phi i64 [ %112, %109 ], [ %124, %117 ]
  %127 = add i64 %126, -1
  store i64 %127, i64* %110, align 8
  br label %128

128:                                              ; preds = %92, %102, %125
  %129 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %129, align 4
  %132 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 3
  %133 = load i32, i32* %132, align 8
  %134 = add i32 %133, %131
  %135 = shl i32 %134, 1
  %136 = load i32, i32* %12, align 8
  %137 = icmp ult i32 %135, %136
  br i1 %137, label %140, label %138

138:                                              ; preds = %128
  %139 = tail call %"struct.WTF::KeyValuePair.2766"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.2764"* %0, %"struct.WTF::KeyValuePair.2766"* %81)
  br label %140

140:                                              ; preds = %50, %128, %138
  %141 = phi i8 [ 1, %128 ], [ 1, %138 ], [ 0, %50 ]
  %142 = phi %"struct.WTF::KeyValuePair.2766"* [ %81, %128 ], [ %139, %138 ], [ %52, %50 ]
  %143 = insertvalue { %"struct.WTF::KeyValuePair.2766"*, i8 } undef, %"struct.WTF::KeyValuePair.2766"* %142, 0
  %144 = insertvalue { %"struct.WTF::KeyValuePair.2766"*, i8 } %143, i8 %141, 1
  ret { %"struct.WTF::KeyValuePair.2766"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2766"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.2764"*, %"struct.WTF::KeyValuePair.2766"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0), i8* %23, i8* %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #17
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.2766"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.2764"* %0, i32 %35, %"struct.WTF::KeyValuePair.2766"* %1, i8* nonnull dereferenceable(1) %4) #17
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.4147"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #17
  %43 = bitcast %"class.blink::HeapHashTableBacking.4147"* %42 to %"struct.WTF::KeyValuePair.2766"*
  %44 = call %"struct.WTF::KeyValuePair.2766"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.2764"* %0, %"struct.WTF::KeyValuePair.2766"* %43, i32 %40, %"struct.WTF::KeyValuePair.2766"* %1) #17
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.2766"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.2766"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2766"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.2764"*, i32, %"struct.WTF::KeyValuePair.2766"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #17
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #17
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0)) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.2766"*, %"struct.WTF::KeyValuePair.2766"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.2766"* %32, null
  br i1 %33, label %82, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.2766"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #17
  br i1 %38, label %39, label %82

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.2766"*, %"struct.WTF::KeyValuePair.2766"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.4147"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #17
  %45 = bitcast %"class.blink::HeapHashTableBacking.4147"* %44 to %"struct.WTF::KeyValuePair.2766"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %79, %39
  %48 = phi %"struct.WTF::KeyValuePair.2766"* [ null, %39 ], [ %65, %79 ]
  %49 = bitcast %"class.WTF::HashTable.2764"* %0 to %"class.blink::HeapHashTableBacking.4147"**
  store %"class.blink::HeapHashTableBacking.4147"* %44, %"class.blink::HeapHashTableBacking.4147"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.4147", %"class.blink::HeapHashTableBacking.4147"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #17
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.2766"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.2766"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.2764"* %0, %"struct.WTF::KeyValuePair.2766"* %42, i32 %1, %"struct.WTF::KeyValuePair.2766"* %48)
  br label %82

58:                                               ; preds = %39, %79
  %59 = phi i64 [ %80, %79 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.2766"* [ %65, %79 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.2766"*, %"struct.WTF::KeyValuePair.2766"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.2766"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.2766"* %64, %"struct.WTF::KeyValuePair.2766"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %62, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, 1
  %69 = icmp ult i32 %68, 2
  br i1 %69, label %70, label %72

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.2766"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false)
  br label %79

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %64, i64 0, i32 0
  store i32 %67, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %45, i64 %59, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %61, i64 %59, i32 1
  %76 = bitcast %"class.blink::Member.318"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::Member.318"* %74 to i64*
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %70, %72
  %80 = add nuw nsw i64 %59, 1
  %81 = icmp eq i64 %80, %43
  br i1 %81, label %47, label %58

82:                                               ; preds = %34, %30, %55
  %83 = phi %"struct.WTF::KeyValuePair.2766"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.2766"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2766"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.2764"*, %"struct.WTF::KeyValuePair.2766"*, i32, %"struct.WTF::KeyValuePair.2766"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.2766"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"struct.WTF::KeyValuePair.2766"*, %"struct.WTF::KeyValuePair.2766"** %10, align 8
  br label %37

14:                                               ; preds = %124, %4
  %15 = phi %"struct.WTF::KeyValuePair.2766"* [ null, %4 ], [ %127, %124 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.WTF::KeyValuePair.2766"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #17
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair.2766"*, %"struct.WTF::KeyValuePair.2766"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.2764"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"struct.WTF::KeyValuePair.2766"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #17
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"struct.WTF::KeyValuePair.2766"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"struct.WTF::KeyValuePair.2766"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #17
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"struct.WTF::KeyValuePair.2766"* %15

37:                                               ; preds = %9, %124
  %38 = phi i32 [ %7, %9 ], [ %125, %124 ]
  %39 = phi %"struct.WTF::KeyValuePair.2766"* [ %13, %9 ], [ %126, %124 ]
  %40 = phi %"struct.WTF::KeyValuePair.2766"* [ null, %9 ], [ %127, %124 ]
  %41 = phi i32 [ 0, %9 ], [ %128, %124 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %39, i64 %42, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  %46 = icmp ult i32 %45, 2
  br i1 %46, label %124, label %47

47:                                               ; preds = %37
  %48 = shl i32 %44, 15
  %49 = xor i32 %48, -1
  %50 = add i32 %44, %49
  %51 = lshr i32 %50, 10
  %52 = xor i32 %51, %50
  %53 = mul i32 %52, 9
  %54 = lshr i32 %53, 6
  %55 = xor i32 %54, %53
  %56 = shl i32 %55, 11
  %57 = xor i32 %56, -1
  %58 = add i32 %55, %57
  %59 = lshr i32 %58, 16
  %60 = xor i32 %59, %58
  %61 = and i32 %60, %11
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %1, i64 %62
  %64 = ptrtoint %"struct.WTF::KeyValuePair.2766"* %63 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %63, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %85, label %68

68:                                               ; preds = %47
  %69 = xor i32 %60, -1
  %70 = lshr i32 %58, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"struct.WTF::KeyValuePair.2766"* %105 to i64
  %84 = inttoptr i64 %100 to %"struct.WTF::KeyValuePair.2766"*
  br label %85

85:                                               ; preds = %82, %47
  %86 = phi i64 [ %83, %82 ], [ %64, %47 ]
  %87 = phi %"struct.WTF::KeyValuePair.2766"* [ %84, %82 ], [ null, %47 ]
  %88 = icmp eq %"struct.WTF::KeyValuePair.2766"* %87, null
  %89 = ptrtoint %"struct.WTF::KeyValuePair.2766"* %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %110

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi i32 [ %66, %68 ], [ %108, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq i32 %93, %44
  br i1 %97, label %110, label %98

98:                                               ; preds = %91
  %99 = icmp eq i32 %93, -1
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %12
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %1, i64 %104
  %106 = ptrtoint %"struct.WTF::KeyValuePair.2766"* %105 to i64
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %105, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %82, label %91

110:                                              ; preds = %91, %85
  %111 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %112 = inttoptr i64 %111 to %"struct.WTF::KeyValuePair.2766"*
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %112, i64 0, i32 0
  store i32 %44, i32* %113, align 8
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %112, i64 0, i32 1
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %39, i64 %42, i32 1
  %116 = bitcast %"class.blink::Member.318"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.blink::Member.318"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = load %"struct.WTF::KeyValuePair.2766"*, %"struct.WTF::KeyValuePair.2766"** %10, align 8
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %119, i64 %42
  %121 = icmp eq %"struct.WTF::KeyValuePair.2766"* %120, %3
  %122 = select i1 %121, %"struct.WTF::KeyValuePair.2766"* %112, %"struct.WTF::KeyValuePair.2766"* %40
  %123 = load i32, i32* %6, align 8
  br label %124

124:                                              ; preds = %37, %110
  %125 = phi i32 [ %38, %37 ], [ %123, %110 ]
  %126 = phi %"struct.WTF::KeyValuePair.2766"* [ %39, %37 ], [ %119, %110 ]
  %127 = phi %"struct.WTF::KeyValuePair.2766"* [ %40, %37 ], [ %122, %110 ]
  %128 = add i32 %41, 1
  %129 = icmp eq i32 %128, %125
  br i1 %129, label %14, label %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.4147"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.68, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsINS1_10HashTraitsIiEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.4147"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.4147"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsINS1_10HashTraitsIiEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([338 x i8], [338 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIiNS_12KeyValuePairIiNS1_6MemberINS1_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSD_IS7_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #17
  br i1 %28, label %93, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.2766"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %52 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %52, i64 3
  %54 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::Visitor"* %0) #17
  %56 = icmp eq i64 %50, 0
  br i1 %56, label %93, label %57

57:                                               ; preds = %47
  %58 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %59

59:                                               ; preds = %90, %57
  %60 = phi i64 [ 0, %57 ], [ %91, %90 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %30, i64 %60, i32 0
  br i1 %55, label %62, label %76

62:                                               ; preds = %59
  %63 = load atomic i32, i32* %61 monotonic, align 4
  %64 = add i32 %63, 1
  %65 = icmp ult i32 %64, 2
  br i1 %65, label %90, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %30, i64 %60, i32 1
  %68 = bitcast %"class.blink::Member.318"* %67 to i64*
  %69 = load atomic i64, i64* %68 monotonic, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %90, label %71

71:                                               ; preds = %66
  %72 = inttoptr i64 %69 to i8*
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %74 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, i64 5
  %75 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, align 8
  tail call void %75(%"class.blink::Visitor"* %0, i8* nonnull %72, i8* nonnull %72, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  br label %90

76:                                               ; preds = %59
  %77 = load i32, i32* %61, align 4
  %78 = add i32 %77, 1
  %79 = icmp ult i32 %78, 2
  br i1 %79, label %90, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %30, i64 %60, i32 1
  %82 = bitcast %"class.blink::Member.318"* %81 to i64*
  %83 = load atomic i64, i64* %82 monotonic, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %80
  %86 = inttoptr i64 %83 to i8*
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %88 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %87, i64 5
  %89 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %88, align 8
  tail call void %89(%"class.blink::Visitor"* %0, i8* nonnull %86, i8* nonnull %86, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  br label %90

90:                                               ; preds = %85, %80, %76, %71, %66, %62
  %91 = add nuw nsw i64 %60, 1
  %92 = icmp eq i64 %91, %50
  br i1 %92, label %93, label %59

93:                                               ; preds = %90, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2773"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISK_SH_SL_EERiRPSC_EENS_18HashTableAddResultISM_SE_EEOT0_OT1_(%"class.WTF::HashTable.2771"*, i32* dereferenceable(4), %"class.blink::HeapHashMap.2752"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2773"*, %"struct.WTF::KeyValuePair.2773"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2773"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2773"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable.2771"* %0, %"struct.WTF::KeyValuePair.2773"* null)
  %9 = load %"struct.WTF::KeyValuePair.2773"*, %"struct.WTF::KeyValuePair.2773"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2773"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.2773"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.2773"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %140, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.2773"* %52, %"struct.WTF::KeyValuePair.2773"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.2773"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.2773"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #17
  %72 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.2773"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %81, i64 0, i32 1
  %84 = load %"class.blink::HeapHashMap.2752"*, %"class.blink::HeapHashMap.2752"** %2, align 8
  %85 = ptrtoint %"class.blink::HeapHashMap.2752"* %84 to i64
  %86 = bitcast %"class.blink::Member.2750"* %83 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %79
  %90 = bitcast %"class.blink::HeapHashMap.2752"* %84 to i8*
  %91 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #17
  br label %92

92:                                               ; preds = %79, %89
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %97 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %96, i64 0, i32 1
  %98 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %97) #17
  %99 = icmp eq i8* %98, null
  br i1 %99, label %100, label %102, !prof !2

100:                                              ; preds = %95
  %101 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %97, i8* %101) #17
  br label %102

102:                                              ; preds = %100, %95
  %103 = phi i8* [ %101, %100 ], [ %98, %95 ]
  %104 = bitcast i8* %103 to %"class.blink::ThreadState"**
  %105 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 9
  %107 = load i8, i8* %106, align 1, !range !3
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %128, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 13
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %110, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %113, align 8
  %115 = load atomic i64, i64* %86 monotonic, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %114, i64 0, i32 0, i32 0
  %119 = inttoptr i64 %115 to i8*
  %120 = bitcast %"class.blink::MarkingVisitor"* %114 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %121 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %121, i64 5
  %123 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %122, align 8
  tail call void %123(%"class.blink::Visitor"* %118, i8* nonnull %119, i8* %119, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE5TraceEPNS_7VisitorEPKv) #17
  %124 = load i64, i64* %110, align 8
  br label %125

125:                                              ; preds = %117, %109
  %126 = phi i64 [ %112, %109 ], [ %124, %117 ]
  %127 = add i64 %126, -1
  store i64 %127, i64* %110, align 8
  br label %128

128:                                              ; preds = %92, %102, %125
  %129 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %129, align 4
  %132 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 3
  %133 = load i32, i32* %132, align 8
  %134 = add i32 %133, %131
  %135 = shl i32 %134, 1
  %136 = load i32, i32* %12, align 8
  %137 = icmp ult i32 %135, %136
  br i1 %137, label %140, label %138

138:                                              ; preds = %128
  %139 = tail call %"struct.WTF::KeyValuePair.2773"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable.2771"* %0, %"struct.WTF::KeyValuePair.2773"* %81)
  br label %140

140:                                              ; preds = %50, %128, %138
  %141 = phi i8 [ 1, %128 ], [ 1, %138 ], [ 0, %50 ]
  %142 = phi %"struct.WTF::KeyValuePair.2773"* [ %81, %128 ], [ %139, %138 ], [ %52, %50 ]
  %143 = insertvalue { %"struct.WTF::KeyValuePair.2773"*, i8 } undef, %"struct.WTF::KeyValuePair.2773"* %142, 0
  %144 = insertvalue { %"struct.WTF::KeyValuePair.2773"*, i8 } %143, i8 %141, 1
  ret { %"struct.WTF::KeyValuePair.2773"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2773"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable.2771"*, %"struct.WTF::KeyValuePair.2773"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0), i8* %23, i8* %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #17
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.2773"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE12ExpandBufferEjPSE_Rb(%"class.WTF::HashTable.2771"* %0, i32 %35, %"struct.WTF::KeyValuePair.2773"* %1, i8* nonnull dereferenceable(1) %4) #17
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.4160"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #17
  %43 = bitcast %"class.blink::HeapHashTableBacking.4160"* %42 to %"struct.WTF::KeyValuePair.2773"*
  %44 = call %"struct.WTF::KeyValuePair.2773"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE8RehashToEPSE_jSN_(%"class.WTF::HashTable.2771"* %0, %"struct.WTF::KeyValuePair.2773"* %43, i32 %40, %"struct.WTF::KeyValuePair.2773"* %1) #17
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.2773"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.2773"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2773"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE12ExpandBufferEjPSE_Rb(%"class.WTF::HashTable.2771"*, i32, %"struct.WTF::KeyValuePair.2773"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #17
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #17
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0)) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.2773"*, %"struct.WTF::KeyValuePair.2773"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.2773"* %32, null
  br i1 %33, label %82, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.2773"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #17
  br i1 %38, label %39, label %82

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.2773"*, %"struct.WTF::KeyValuePair.2773"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.4160"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #17
  %45 = bitcast %"class.blink::HeapHashTableBacking.4160"* %44 to %"struct.WTF::KeyValuePair.2773"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %79, %39
  %48 = phi %"struct.WTF::KeyValuePair.2773"* [ null, %39 ], [ %65, %79 ]
  %49 = bitcast %"class.WTF::HashTable.2771"* %0 to %"class.blink::HeapHashTableBacking.4160"**
  store %"class.blink::HeapHashTableBacking.4160"* %44, %"class.blink::HeapHashTableBacking.4160"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.4160", %"class.blink::HeapHashTableBacking.4160"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #17
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.2773"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.2773"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE8RehashToEPSE_jSN_(%"class.WTF::HashTable.2771"* %0, %"struct.WTF::KeyValuePair.2773"* %42, i32 %1, %"struct.WTF::KeyValuePair.2773"* %48)
  br label %82

58:                                               ; preds = %39, %79
  %59 = phi i64 [ %80, %79 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.2773"* [ %65, %79 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.2773"*, %"struct.WTF::KeyValuePair.2773"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.2773"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.2773"* %64, %"struct.WTF::KeyValuePair.2773"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %62, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, 1
  %69 = icmp ult i32 %68, 2
  br i1 %69, label %70, label %72

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.2773"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false)
  br label %79

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %64, i64 0, i32 0
  store i32 %67, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %45, i64 %59, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %61, i64 %59, i32 1
  %76 = bitcast %"class.blink::Member.2750"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::Member.2750"* %74 to i64*
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %70, %72
  %80 = add nuw nsw i64 %59, 1
  %81 = icmp eq i64 %80, %43
  br i1 %81, label %47, label %58

82:                                               ; preds = %34, %30, %55
  %83 = phi %"struct.WTF::KeyValuePair.2773"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.2773"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2773"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE8RehashToEPSE_jSN_(%"class.WTF::HashTable.2771"*, %"struct.WTF::KeyValuePair.2773"*, i32, %"struct.WTF::KeyValuePair.2773"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.2773"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"struct.WTF::KeyValuePair.2773"*, %"struct.WTF::KeyValuePair.2773"** %10, align 8
  br label %37

14:                                               ; preds = %124, %4
  %15 = phi %"struct.WTF::KeyValuePair.2773"* [ null, %4 ], [ %127, %124 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.WTF::KeyValuePair.2773"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #17
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair.2773"*, %"struct.WTF::KeyValuePair.2773"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.2771"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"struct.WTF::KeyValuePair.2773"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #17
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"struct.WTF::KeyValuePair.2773"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"struct.WTF::KeyValuePair.2773"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #17
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"struct.WTF::KeyValuePair.2773"* %15

37:                                               ; preds = %9, %124
  %38 = phi i32 [ %7, %9 ], [ %125, %124 ]
  %39 = phi %"struct.WTF::KeyValuePair.2773"* [ %13, %9 ], [ %126, %124 ]
  %40 = phi %"struct.WTF::KeyValuePair.2773"* [ null, %9 ], [ %127, %124 ]
  %41 = phi i32 [ 0, %9 ], [ %128, %124 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %39, i64 %42, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  %46 = icmp ult i32 %45, 2
  br i1 %46, label %124, label %47

47:                                               ; preds = %37
  %48 = shl i32 %44, 15
  %49 = xor i32 %48, -1
  %50 = add i32 %44, %49
  %51 = lshr i32 %50, 10
  %52 = xor i32 %51, %50
  %53 = mul i32 %52, 9
  %54 = lshr i32 %53, 6
  %55 = xor i32 %54, %53
  %56 = shl i32 %55, 11
  %57 = xor i32 %56, -1
  %58 = add i32 %55, %57
  %59 = lshr i32 %58, 16
  %60 = xor i32 %59, %58
  %61 = and i32 %60, %11
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %1, i64 %62
  %64 = ptrtoint %"struct.WTF::KeyValuePair.2773"* %63 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %63, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %85, label %68

68:                                               ; preds = %47
  %69 = xor i32 %60, -1
  %70 = lshr i32 %58, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"struct.WTF::KeyValuePair.2773"* %105 to i64
  %84 = inttoptr i64 %100 to %"struct.WTF::KeyValuePair.2773"*
  br label %85

85:                                               ; preds = %82, %47
  %86 = phi i64 [ %83, %82 ], [ %64, %47 ]
  %87 = phi %"struct.WTF::KeyValuePair.2773"* [ %84, %82 ], [ null, %47 ]
  %88 = icmp eq %"struct.WTF::KeyValuePair.2773"* %87, null
  %89 = ptrtoint %"struct.WTF::KeyValuePair.2773"* %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %110

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi i32 [ %66, %68 ], [ %108, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq i32 %93, %44
  br i1 %97, label %110, label %98

98:                                               ; preds = %91
  %99 = icmp eq i32 %93, -1
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %12
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %1, i64 %104
  %106 = ptrtoint %"struct.WTF::KeyValuePair.2773"* %105 to i64
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %105, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %82, label %91

110:                                              ; preds = %91, %85
  %111 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %112 = inttoptr i64 %111 to %"struct.WTF::KeyValuePair.2773"*
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %112, i64 0, i32 0
  store i32 %44, i32* %113, align 8
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %112, i64 0, i32 1
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %39, i64 %42, i32 1
  %116 = bitcast %"class.blink::Member.2750"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.blink::Member.2750"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = load %"struct.WTF::KeyValuePair.2773"*, %"struct.WTF::KeyValuePair.2773"** %10, align 8
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %119, i64 %42
  %121 = icmp eq %"struct.WTF::KeyValuePair.2773"* %120, %3
  %122 = select i1 %121, %"struct.WTF::KeyValuePair.2773"* %112, %"struct.WTF::KeyValuePair.2773"* %40
  %123 = load i32, i32* %6, align 8
  br label %124

124:                                              ; preds = %37, %110
  %125 = phi i32 [ %38, %37 ], [ %123, %110 ]
  %126 = phi %"struct.WTF::KeyValuePair.2773"* [ %39, %37 ], [ %119, %110 ]
  %127 = phi %"struct.WTF::KeyValuePair.2773"* [ %40, %37 ], [ %122, %110 ]
  %128 = add i32 %41, 1
  %129 = icmp eq i32 %128, %125
  br i1 %129, label %14, label %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.4160"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.68, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS4_INS_4NodeEEEiNS1_10MemberHashIS6_EENS1_10HashTraitsIS7_EENSA_IiEEEEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsISC_NSA_ISE_EEEESC_NS_13HeapAllocatorEEEE14AllocateObjectISO_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.4160"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.4160"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS4_INS_4NodeEEEiNS1_10MemberHashIS6_EENS1_10HashTraitsIS7_EENSA_IiEEEEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsISC_NSA_ISE_EEEESC_NS_13HeapAllocatorEEEE14AllocateObjectISO_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([618 x i8], [618 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIiNS_12KeyValuePairIiNS1_6MemberINS1_11HeapHashMapINS5_INS1_4NodeEEEiNS_10MemberHashIS7_EENS_10HashTraitsIS8_EENSB_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #17
  br i1 %28, label %93, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.2773"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %52 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %52, i64 3
  %54 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::Visitor"* %0) #17
  %56 = icmp eq i64 %50, 0
  br i1 %56, label %93, label %57

57:                                               ; preds = %47
  %58 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %59

59:                                               ; preds = %90, %57
  %60 = phi i64 [ 0, %57 ], [ %91, %90 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %30, i64 %60, i32 0
  br i1 %55, label %62, label %76

62:                                               ; preds = %59
  %63 = load atomic i32, i32* %61 monotonic, align 4
  %64 = add i32 %63, 1
  %65 = icmp ult i32 %64, 2
  br i1 %65, label %90, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %30, i64 %60, i32 1
  %68 = bitcast %"class.blink::Member.2750"* %67 to i64*
  %69 = load atomic i64, i64* %68 monotonic, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %90, label %71

71:                                               ; preds = %66
  %72 = inttoptr i64 %69 to i8*
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %74 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, i64 5
  %75 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, align 8
  tail call void %75(%"class.blink::Visitor"* %0, i8* nonnull %72, i8* nonnull %72, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE5TraceEPNS_7VisitorEPKv) #17
  br label %90

76:                                               ; preds = %59
  %77 = load i32, i32* %61, align 4
  %78 = add i32 %77, 1
  %79 = icmp ult i32 %78, 2
  br i1 %79, label %90, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %30, i64 %60, i32 1
  %82 = bitcast %"class.blink::Member.2750"* %81 to i64*
  %83 = load atomic i64, i64* %82 monotonic, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %80
  %86 = inttoptr i64 %83 to i8*
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %88 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %87, i64 5
  %89 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %88, align 8
  tail call void %89(%"class.blink::Visitor"* %0, i8* nonnull %86, i8* nonnull %86, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapINS_6MemberINS_4NodeEEEiN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EENS8_IiEEEEE5TraceEPNS_7VisitorEPKv) #17
  br label %90

90:                                               ; preds = %85, %80, %76, %71, %66, %62
  %91 = add nuw nsw i64 %60, 1
  %92 = icmp eq i64 %91, %50
  br i1 %92, label %93, label %59

93:                                               ; preds = %90, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.2764"*, %"struct.WTF::KeyValuePair.2766"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %1, i64 0, i32 0
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.2766", %"struct.WTF::KeyValuePair.2766"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::Member.318"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  %9 = and i32 %8, 2147483647
  %10 = and i32 %7, -2147483648
  %11 = or i32 %9, %10
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = mul i32 %14, 6
  %16 = getelementptr inbounds %"class.WTF::HashTable.2764", %"class.WTF::HashTable.2764"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %15, %17
  %19 = icmp ugt i32 %17, 8
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %2
  %22 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #17
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !2

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #17
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !3
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %50, label %39

39:                                               ; preds = %28, %35
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 13
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = load i32, i32* %16, align 8
  %45 = lshr i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = tail call %"class.blink::HeapHashTableBacking.4147"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #17
  %48 = bitcast %"class.blink::HeapHashTableBacking.4147"* %47 to %"struct.WTF::KeyValuePair.2766"*
  %49 = tail call %"struct.WTF::KeyValuePair.2766"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.2764"* %0, %"struct.WTF::KeyValuePair.2766"* %48, i32 %45, %"struct.WTF::KeyValuePair.2766"* null) #17
  br label %50

50:                                               ; preds = %35, %2, %43, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE5eraseEPKSE_(%"class.WTF::HashTable.2771"*, %"struct.WTF::KeyValuePair.2773"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %1, i64 0, i32 0
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.2773", %"struct.WTF::KeyValuePair.2773"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::Member.2750"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  %9 = and i32 %8, 2147483647
  %10 = and i32 %7, -2147483648
  %11 = or i32 %9, %10
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = mul i32 %14, 6
  %16 = getelementptr inbounds %"class.WTF::HashTable.2771", %"class.WTF::HashTable.2771"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %15, %17
  %19 = icmp ugt i32 %17, 8
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %2
  %22 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #17
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !2

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #17
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !3
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %50, label %39

39:                                               ; preds = %28, %35
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 13
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = load i32, i32* %16, align 8
  %45 = lshr i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = tail call %"class.blink::HeapHashTableBacking.4160"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_11HeapHashMapINS5_INS_4NodeEEEiNS2_10MemberHashIS7_EENS2_10HashTraitsIS8_EENSB_IiEEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsISD_NSB_ISF_EEEESD_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #17
  %48 = bitcast %"class.blink::HeapHashTableBacking.4160"* %47 to %"struct.WTF::KeyValuePair.2773"*
  %49 = tail call %"struct.WTF::KeyValuePair.2773"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_11HeapHashMapINS3_INS2_4NodeEEEiNS_10MemberHashIS5_EENS_10HashTraitsIS6_EENS9_IiEEEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsISB_NS9_ISD_EEEESB_NS2_13HeapAllocatorEE8RehashToEPSE_jSN_(%"class.WTF::HashTable.2771"* %0, %"struct.WTF::KeyValuePair.2773"* %48, i32 %45, %"struct.WTF::KeyValuePair.2773"* null) #17
  br label %50

50:                                               ; preds = %35, %2, %43, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.3317"*, %"struct.WTF::KeyValuePair.3319"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.WTF::KeyValuePair.3319"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %1, i64 0, i32 1
  store i32 0, i32* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, 1
  %8 = and i32 %7, 2147483647
  %9 = and i32 %6, -2147483648
  %10 = or i32 %8, %9
  store i32 %10, i32* %5, align 8
  %11 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -1
  store i32 %13, i32* %11, align 4
  %14 = mul i32 %13, 6
  %15 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp ult i32 %14, %16
  %18 = icmp ugt i32 %16, 8
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %49

20:                                               ; preds = %2
  %21 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %22 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %21, i64 0, i32 1
  %23 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %22) #17
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %27, !prof !2

25:                                               ; preds = %20
  %26 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %22, i8* %26) #17
  br label %27

27:                                               ; preds = %25, %20
  %28 = phi i8* [ %26, %25 ], [ %23, %20 ]
  %29 = bitcast i8* %28 to %"class.blink::ThreadState"**
  %30 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 6
  %32 = load i8, i8* %31, align 8, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 16
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %49, label %38

38:                                               ; preds = %27, %34
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 13
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %38
  %43 = load i32, i32* %15, align 8
  %44 = lshr i32 %43, 1
  %45 = zext i32 %44 to i64
  %46 = tail call %"class.blink::HeapHashTableBacking.4104"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_iEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IiEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %45) #17
  %47 = bitcast %"class.blink::HeapHashTableBacking.4104"* %46 to %"struct.WTF::KeyValuePair.3319"*
  %48 = tail call %"struct.WTF::KeyValuePair.3319"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.3317"* %0, %"struct.WTF::KeyValuePair.3319"* %47, i32 %44, %"struct.WTF::KeyValuePair.3319"* null) #17
  br label %49

49:                                               ; preds = %34, %2, %42, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.3317"*, %"class.blink::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::Node"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3319"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %56 = icmp eq %"class.blink::Node"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %65 = icmp eq %"class.blink::Node"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.3319"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.3319"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.3319"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.3319"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"* } undef, %"struct.WTF::KeyValuePair.3319"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"* } %78, %"struct.WTF::KeyValuePair.3319"* %77, 1
  ret { %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"* } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_(%"class.WTF::HashTable.2782"*, i32*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.2782", %"class.WTF::HashTable.2782"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.2782", %"class.WTF::HashTable.2782"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.2782"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i32*, i32** %9, align 8
  %17 = ptrtoint i32* %16 to i64
  br label %31

18:                                               ; preds = %112
  %19 = bitcast %"class.WTF::HashTable.2782"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %113, %18 ]
  %23 = phi i32* [ null, %10 ], [ %116, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #17
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.2782", %"class.WTF::HashTable.2782"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i32* %23

31:                                               ; preds = %13, %112
  %32 = phi i64 [ %17, %13 ], [ %113, %112 ]
  %33 = phi i32 [ %7, %13 ], [ %114, %112 ]
  %34 = phi i32* [ %16, %13 ], [ %115, %112 ]
  %35 = phi i32* [ null, %13 ], [ %116, %112 ]
  %36 = phi i32 [ 0, %13 ], [ %117, %112 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  %41 = icmp ult i32 %40, 2
  br i1 %41, label %112, label %42

42:                                               ; preds = %31
  %43 = shl i32 %39, 15
  %44 = xor i32 %43, -1
  %45 = add i32 %39, %44
  %46 = lshr i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = mul i32 %47, 9
  %49 = lshr i32 %48, 6
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 11
  %52 = xor i32 %51, -1
  %53 = add i32 %50, %52
  %54 = lshr i32 %53, 16
  %55 = xor i32 %54, %53
  %56 = and i32 %55, %14
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %1, i64 %57
  %59 = ptrtoint i32* %58 to i64
  %60 = load i32, i32* %58, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %79, label %62

62:                                               ; preds = %42
  %63 = xor i32 %55, -1
  %64 = lshr i32 %53, 23
  %65 = add i32 %64, %63
  %66 = shl i32 %65, 12
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 7
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 2
  %71 = xor i32 %70, %69
  %72 = lshr i32 %71, 20
  %73 = xor i32 %72, %71
  %74 = or i32 %73, 1
  %75 = zext i32 %74 to i64
  br label %85

76:                                               ; preds = %92
  %77 = ptrtoint i32* %99 to i64
  %78 = inttoptr i64 %94 to i32*
  br label %79

79:                                               ; preds = %76, %42
  %80 = phi i64 [ %77, %76 ], [ %59, %42 ]
  %81 = phi i32* [ %78, %76 ], [ null, %42 ]
  %82 = icmp eq i32* %81, null
  %83 = ptrtoint i32* %81 to i64
  %84 = select i1 %82, i64 %80, i64 %83
  br label %103

85:                                               ; preds = %92, %62
  %86 = phi i64 [ 0, %62 ], [ %94, %92 ]
  %87 = phi i32 [ %60, %62 ], [ %101, %92 ]
  %88 = phi i64 [ %59, %62 ], [ %100, %92 ]
  %89 = phi i64 [ %57, %62 ], [ %98, %92 ]
  %90 = phi i64 [ 0, %62 ], [ %96, %92 ]
  %91 = icmp eq i32 %87, %39
  br i1 %91, label %103, label %92

92:                                               ; preds = %85
  %93 = icmp eq i32 %87, -1
  %94 = select i1 %93, i64 %88, i64 %86
  %95 = icmp eq i64 %90, 0
  %96 = select i1 %95, i64 %75, i64 %90
  %97 = add i64 %96, %89
  %98 = and i64 %97, %15
  %99 = getelementptr inbounds i32, i32* %1, i64 %98
  %100 = ptrtoint i32* %99 to i64
  %101 = load i32, i32* %99, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %76, label %85

103:                                              ; preds = %85, %79
  %104 = phi i64 [ %84, %79 ], [ %88, %85 ]
  %105 = inttoptr i64 %104 to i32*
  store i32 %39, i32* %105, align 4
  %106 = load i32*, i32** %9, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %37
  %108 = icmp eq i32* %107, %3
  %109 = select i1 %108, i32* %105, i32* %35
  %110 = load i32, i32* %6, align 8
  %111 = ptrtoint i32* %106 to i64
  br label %112

112:                                              ; preds = %31, %103
  %113 = phi i64 [ %32, %31 ], [ %111, %103 ]
  %114 = phi i32 [ %33, %31 ], [ %110, %103 ]
  %115 = phi i32* [ %34, %31 ], [ %106, %103 ]
  %116 = phi i32* [ %35, %31 ], [ %109, %103 ]
  %117 = add i32 %36, 1
  %118 = icmp eq i32 %117, %114
  br i1 %118, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2789"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSC_(%"class.WTF::HashTable.2786"*, %"struct.WTF::KeyValuePair.2789"*, i32, %"struct.WTF::KeyValuePair.2789"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.2789"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.2786", %"class.WTF::HashTable.2786"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.2786", %"class.WTF::HashTable.2786"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.2786"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.2789"*, %"struct.WTF::KeyValuePair.2789"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2789"* %16 to i64
  br label %31

18:                                               ; preds = %118
  %19 = bitcast %"class.WTF::HashTable.2786"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %119, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.2789"* [ null, %10 ], [ %122, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #17
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.2786", %"class.WTF::HashTable.2786"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair.2789"* %23

31:                                               ; preds = %13, %118
  %32 = phi i64 [ %17, %13 ], [ %119, %118 ]
  %33 = phi i32 [ %7, %13 ], [ %120, %118 ]
  %34 = phi %"struct.WTF::KeyValuePair.2789"* [ %16, %13 ], [ %121, %118 ]
  %35 = phi %"struct.WTF::KeyValuePair.2789"* [ null, %13 ], [ %122, %118 ]
  %36 = phi i32 [ 0, %13 ], [ %123, %118 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, 1
  %42 = icmp ult i32 %41, 2
  br i1 %42, label %118, label %43

43:                                               ; preds = %31
  %44 = shl i32 %40, 15
  %45 = xor i32 %44, -1
  %46 = add i32 %40, %45
  %47 = lshr i32 %46, 10
  %48 = xor i32 %47, %46
  %49 = mul i32 %48, 9
  %50 = lshr i32 %49, 6
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 11
  %53 = xor i32 %52, -1
  %54 = add i32 %51, %53
  %55 = lshr i32 %54, 16
  %56 = xor i32 %55, %54
  %57 = and i32 %56, %14
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %1, i64 %58
  %60 = ptrtoint %"struct.WTF::KeyValuePair.2789"* %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %59, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %81, label %64

64:                                               ; preds = %43
  %65 = xor i32 %56, -1
  %66 = lshr i32 %54, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %87

78:                                               ; preds = %94
  %79 = ptrtoint %"struct.WTF::KeyValuePair.2789"* %101 to i64
  %80 = inttoptr i64 %96 to %"struct.WTF::KeyValuePair.2789"*
  br label %81

81:                                               ; preds = %78, %43
  %82 = phi i64 [ %79, %78 ], [ %60, %43 ]
  %83 = phi %"struct.WTF::KeyValuePair.2789"* [ %80, %78 ], [ null, %43 ]
  %84 = icmp eq %"struct.WTF::KeyValuePair.2789"* %83, null
  %85 = ptrtoint %"struct.WTF::KeyValuePair.2789"* %83 to i64
  %86 = select i1 %84, i64 %82, i64 %85
  br label %106

87:                                               ; preds = %94, %64
  %88 = phi i64 [ 0, %64 ], [ %96, %94 ]
  %89 = phi i32 [ %62, %64 ], [ %104, %94 ]
  %90 = phi i64 [ %60, %64 ], [ %102, %94 ]
  %91 = phi i64 [ %58, %64 ], [ %100, %94 ]
  %92 = phi i64 [ 0, %64 ], [ %98, %94 ]
  %93 = icmp eq i32 %89, %40
  br i1 %93, label %106, label %94

94:                                               ; preds = %87
  %95 = icmp eq i32 %89, -1
  %96 = select i1 %95, i64 %90, i64 %88
  %97 = icmp eq i64 %92, 0
  %98 = select i1 %97, i64 %77, i64 %92
  %99 = add i64 %98, %91
  %100 = and i64 %99, %15
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %1, i64 %100
  %102 = ptrtoint %"struct.WTF::KeyValuePair.2789"* %101 to i64
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %101, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %78, label %87

106:                                              ; preds = %87, %81
  %107 = phi i64 [ %86, %81 ], [ %90, %87 ]
  %108 = inttoptr i64 %107 to %"struct.WTF::KeyValuePair.2789"*
  %109 = bitcast %"struct.WTF::KeyValuePair.2789"* %38 to i64*
  %110 = inttoptr i64 %107 to i64*
  %111 = load i64, i64* %109, align 4
  store i64 %111, i64* %110, align 4
  %112 = load %"struct.WTF::KeyValuePair.2789"*, %"struct.WTF::KeyValuePair.2789"** %9, align 8
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %112, i64 %37
  %114 = icmp eq %"struct.WTF::KeyValuePair.2789"* %113, %3
  %115 = select i1 %114, %"struct.WTF::KeyValuePair.2789"* %108, %"struct.WTF::KeyValuePair.2789"* %35
  %116 = load i32, i32* %6, align 8
  %117 = ptrtoint %"struct.WTF::KeyValuePair.2789"* %112 to i64
  br label %118

118:                                              ; preds = %31, %106
  %119 = phi i64 [ %32, %31 ], [ %117, %106 ]
  %120 = phi i32 [ %33, %31 ], [ %116, %106 ]
  %121 = phi %"struct.WTF::KeyValuePair.2789"* [ %34, %31 ], [ %112, %106 ]
  %122 = phi %"struct.WTF::KeyValuePair.2789"* [ %35, %31 ], [ %115, %106 ]
  %123 = add i32 %36, 1
  %124 = icmp eq i32 %123, %120
  br i1 %124, label %18, label %31
}

declare void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext, %"class.blink::WebVector.3001"*) local_unnamed_addr #1

declare void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::WebVector.3001"*) local_unnamed_addr #1

declare void @_ZN5blink16InspectorHistoryC1Ev(%"class.blink::InspectorHistory"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistoryEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16InspectorHistoryEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16InspectorHistoryEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16InspectorHistoryEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16InspectorHistoryEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16InspectorHistoryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorHistory"*
  tail call void @_ZNK5blink16InspectorHistory5TraceEPNS_7VisitorE(%"class.blink::InspectorHistory"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16InspectorHistoryEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink16InspectorHistory5TraceEPNS_7VisitorE(%"class.blink::InspectorHistory"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZN5blink9DOMEditorC1EPNS_16InspectorHistoryE(%"class.blink::DOMEditor"*, %"class.blink::InspectorHistory"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_9DOMEditorEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_9DOMEditorEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_9DOMEditorEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_9DOMEditorEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9DOMEditorEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9DOMEditorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DOMEditor"*
  tail call void @_ZNK5blink9DOMEditor5TraceEPNS_7VisitorE(%"class.blink::DOMEditor"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_9DOMEditorEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink9DOMEditor5TraceEPNS_7VisitorE(%"class.blink::DOMEditor"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.2326"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2326"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %70, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %115, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %24, %68
  %71 = phi %"class.WTF::String"* [ %64, %68 ], [ %28, %24 ]
  %72 = bitcast %"class.WTF::String"* %71 to i64*
  br label %81

73:                                               ; preds = %68
  %74 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 2147483647
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  br label %81

81:                                               ; preds = %70, %73
  %82 = phi i64* [ %72, %70 ], [ %74, %73 ]
  %83 = phi %"class.WTF::String"* [ %71, %70 ], [ %59, %73 ]
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %85 = bitcast %"class.WTF::String"* %2 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %84, align 8
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  store i64 %86, i64* %82, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #17
  br label %103

103:                                              ; preds = %81, %99, %102
  %104 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2326"* %0, %"class.WTF::String"* %83)
  br label %115

115:                                              ; preds = %55, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %55 ]
  %117 = phi %"class.WTF::String"* [ %83, %103 ], [ %114, %113 ], [ %48, %55 ]
  %118 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %117, 0
  %119 = insertvalue { %"class.WTF::String"*, i8 } %118, i8 %116, 1
  ret { %"class.WTF::String"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2326"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #17
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.2326"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #17
  ret %"class.WTF::String"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.2326"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2326", align 8
  %6 = bitcast %"class.WTF::HashTable.2326"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2326"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2326"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2326"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.2326"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2326"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #17
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #17
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2326"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #17
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #17
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2326"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #17
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #17
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2326"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.72, i64 0, i64 0)) #17
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #17
  %30 = bitcast i8* %29 to %"class.WTF::String"*
  %31 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.2326"* %0, %"class.WTF::String"* %30, i32 %17, %"class.WTF::String"* null) #17
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.2326"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2326"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #17
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !2

97:                                               ; preds = %88
  tail call void @llvm.trap() #17
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #17
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2326"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3460"*, i8 } @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E6insertINS_17HashMapTranslatorISI_SE_S9_EERS2_SA_EENS_18HashTableAddResultISJ_SB_EEOT0_OT1_(%"class.WTF::HashTable.3457"*, i32* dereferenceable(4), %"class.WTF::HashSet.2325"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3460"*, %"struct.WTF::KeyValuePair.3460"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3460"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3460"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E6ExpandEPSB_(%"class.WTF::HashTable.3457"* %0, %"struct.WTF::KeyValuePair.3460"* null)
  %9 = load %"struct.WTF::KeyValuePair.3460"*, %"struct.WTF::KeyValuePair.3460"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3460"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %84, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.3460"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.3460"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %123, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, 1548
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.3460"* %52, %"struct.WTF::KeyValuePair.3460"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.3460"* %59, null
  br i1 %69, label %84, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %59, i64 0, i32 2
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %59, i64 0, i32 2, i32 0, i32 1
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %59, i64 0, i32 2, i32 0, i32 2
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %59, i64 0, i32 2, i32 0, i32 3
  %76 = bitcast %"class.WTF::HashSet.2325"* %72 to i64*
  store atomic i64 0, i64* %76 monotonic, align 8
  store i32 0, i32* %73, align 4
  store i32 0, i32* %74, align 4
  store i32 0, i32* %75, align 8
  %77 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, 2147483647
  %80 = and i32 %79, 2147483647
  %81 = and i32 %78, -2147483648
  %82 = or i32 %80, %81
  store i32 %82, i32* %77, align 8
  %83 = load i32, i32* %1, align 4
  br label %84

84:                                               ; preds = %10, %68, %70
  %85 = phi i32 [ %83, %70 ], [ %16, %68 ], [ %16, %10 ]
  %86 = phi %"struct.WTF::KeyValuePair.3460"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %86, i64 0, i32 0
  store i32 %85, i32* %87, align 8
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %86, i64 0, i32 2
  %89 = bitcast %"class.WTF::HashSet.2325"* %2 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.WTF::HashSet.2325"* %88 to i64*
  %92 = load i64, i64* %91, align 8
  store atomic i64 %92, i64* %89 monotonic, align 8
  store atomic i64 %90, i64* %91 monotonic, align 8
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %86, i64 0, i32 2, i32 0, i32 1
  %94 = getelementptr inbounds %"class.WTF::HashSet.2325", %"class.WTF::HashSet.2325"* %2, i64 0, i32 0, i32 1
  %95 = load i32, i32* %93, align 4
  %96 = load i32, i32* %94, align 4
  store i32 %96, i32* %93, align 4
  store i32 %95, i32* %94, align 4
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %86, i64 0, i32 2, i32 0, i32 2
  %98 = getelementptr inbounds %"class.WTF::HashSet.2325", %"class.WTF::HashSet.2325"* %2, i64 0, i32 0, i32 2
  %99 = load i32, i32* %97, align 4
  %100 = load i32, i32* %98, align 4
  store i32 %100, i32* %97, align 4
  store i32 %99, i32* %98, align 4
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %86, i64 0, i32 2, i32 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = and i32 %102, 2147483647
  %104 = getelementptr inbounds %"class.WTF::HashSet.2325", %"class.WTF::HashSet.2325"* %2, i64 0, i32 0, i32 3
  %105 = load i32, i32* %104, align 8
  %106 = and i32 %105, 2147483647
  %107 = and i32 %102, -2147483648
  %108 = or i32 %106, %107
  store i32 %108, i32* %101, align 8
  %109 = load i32, i32* %104, align 8
  %110 = and i32 %109, -2147483648
  %111 = or i32 %110, %103
  store i32 %111, i32* %104, align 8
  %112 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %0, i64 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %112, align 4
  %115 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %0, i64 0, i32 3
  %116 = load i32, i32* %115, align 8
  %117 = add i32 %116, %114
  %118 = shl i32 %117, 1
  %119 = load i32, i32* %12, align 8
  %120 = icmp ult i32 %118, %119
  br i1 %120, label %123, label %121

121:                                              ; preds = %84
  %122 = tail call %"struct.WTF::KeyValuePair.3460"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E6ExpandEPSB_(%"class.WTF::HashTable.3457"* %0, %"struct.WTF::KeyValuePair.3460"* %86)
  br label %123

123:                                              ; preds = %50, %84, %121
  %124 = phi i8 [ 1, %84 ], [ 1, %121 ], [ 0, %50 ]
  %125 = phi %"struct.WTF::KeyValuePair.3460"* [ %86, %84 ], [ %122, %121 ], [ %52, %50 ]
  %126 = insertvalue { %"struct.WTF::KeyValuePair.3460"*, i8 } undef, %"struct.WTF::KeyValuePair.3460"* %125, 0
  %127 = insertvalue { %"struct.WTF::KeyValuePair.3460"*, i8 } %126, i8 %124, 1
  ret { %"struct.WTF::KeyValuePair.3460"*, i8 } %127
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3460"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E6ExpandEPSB_(%"class.WTF::HashTable.3457"*, %"struct.WTF::KeyValuePair.3460"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 5
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([187 x i8], [187 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink13CSSPropertyIDENS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.3460"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %31, %38
  %39 = phi i64 [ %46, %38 ], [ 0, %31 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %36, i64 %39, i32 0
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %36, i64 %39, i32 2
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %36, i64 %39, i32 2, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %36, i64 %39, i32 2, i32 0, i32 2
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %36, i64 %39, i32 2, i32 0, i32 3
  %45 = bitcast %"class.WTF::HashSet.2325"* %41 to i64*
  store atomic i64 0, i64* %45 monotonic, align 8
  store i32 0, i32* %42, align 4
  store i32 0, i32* %43, align 4
  store i32 0, i32* %44, align 8
  %46 = add nuw nsw i64 %39, 1
  %47 = icmp eq i64 %46, %33
  br i1 %47, label %48, label %38

48:                                               ; preds = %38, %31
  %49 = call %"struct.WTF::KeyValuePair.3460"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E8RehashToEPSB_jSK_(%"class.WTF::HashTable.3457"* %0, %"struct.WTF::KeyValuePair.3460"* %36, i32 %32, %"struct.WTF::KeyValuePair.3460"* %1) #17
  ret %"struct.WTF::KeyValuePair.3460"* %49
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3460"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E8RehashToEPSB_jSK_(%"class.WTF::HashTable.3457"*, %"struct.WTF::KeyValuePair.3460"*, i32, %"struct.WTF::KeyValuePair.3460"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3457", align 8
  %6 = bitcast %"class.WTF::HashTable.3457"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3457"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3460"* %1, %"struct.WTF::KeyValuePair.3460"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.3460"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.3457"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.3457"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.3460"*, %"struct.WTF::KeyValuePair.3460"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.3460"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.3457"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.3457"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.3460"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.3460"*
  call void @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E29DeleteAllBucketsAndDeallocateEPSB_j(%"struct.WTF::KeyValuePair.3460"* nonnull %37, i32 %34) #17
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.3460"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.3460"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.3460"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %45, i64 %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %49, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  switch i32 %51, label %52 [
    i32 1548, label %60
    i32 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.3460"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E8ReinsertEOSB_(%"class.WTF::HashTable.3457"* nonnull %5, %"struct.WTF::KeyValuePair.3460"* dereferenceable(32) %49)
  %54 = load %"struct.WTF::KeyValuePair.3460"*, %"struct.WTF::KeyValuePair.3460"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.3460"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.3460"* %53, %"struct.WTF::KeyValuePair.3460"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.3460"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.3460"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.3460"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3460"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS7_IS2_EENS7_ISA_EEEESG_S9_E8ReinsertEOSB_(%"class.WTF::HashTable.3457"*, %"struct.WTF::KeyValuePair.3460"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3460"*, %"struct.WTF::KeyValuePair.3460"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3457", %"class.WTF::HashTable.3457"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = load i32, i32* %3, align 4
  %11 = shl i32 %10, 15
  %12 = xor i32 %11, -1
  %13 = add i32 %10, %12
  %14 = lshr i32 %13, 10
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 9
  %17 = lshr i32 %16, 6
  %18 = xor i32 %17, %16
  %19 = shl i32 %18, 11
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 16
  %23 = xor i32 %22, %21
  %24 = and i32 %23, %8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %5, i64 %25
  %27 = ptrtoint %"struct.WTF::KeyValuePair.3460"* %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %26, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %48, label %31

31:                                               ; preds = %2
  %32 = xor i32 %23, -1
  %33 = lshr i32 %21, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %54

45:                                               ; preds = %61
  %46 = ptrtoint %"struct.WTF::KeyValuePair.3460"* %68 to i64
  %47 = inttoptr i64 %63 to %"struct.WTF::KeyValuePair.3460"*
  br label %48

48:                                               ; preds = %45, %2
  %49 = phi i64 [ %46, %45 ], [ %27, %2 ]
  %50 = phi %"struct.WTF::KeyValuePair.3460"* [ %47, %45 ], [ null, %2 ]
  %51 = icmp eq %"struct.WTF::KeyValuePair.3460"* %50, null
  %52 = ptrtoint %"struct.WTF::KeyValuePair.3460"* %50 to i64
  %53 = select i1 %51, i64 %49, i64 %52
  br label %73

54:                                               ; preds = %61, %31
  %55 = phi i64 [ 0, %31 ], [ %63, %61 ]
  %56 = phi i32 [ %29, %31 ], [ %71, %61 ]
  %57 = phi i64 [ %27, %31 ], [ %69, %61 ]
  %58 = phi i64 [ %25, %31 ], [ %67, %61 ]
  %59 = phi i64 [ 0, %31 ], [ %65, %61 ]
  %60 = icmp eq i32 %56, %10
  br i1 %60, label %73, label %61

61:                                               ; preds = %54
  %62 = icmp eq i32 %56, 1548
  %63 = select i1 %62, i64 %57, i64 %55
  %64 = icmp eq i64 %59, 0
  %65 = select i1 %64, i64 %44, i64 %59
  %66 = add i64 %65, %58
  %67 = and i64 %66, %9
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %5, i64 %67
  %69 = ptrtoint %"struct.WTF::KeyValuePair.3460"* %68 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %68, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %45, label %54

73:                                               ; preds = %54, %48
  %74 = phi i64 [ %53, %48 ], [ %57, %54 ]
  %75 = inttoptr i64 %74 to %"struct.WTF::KeyValuePair.3460"*
  tail call void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink13CSSPropertyIDENS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEES9_NS_18HashMapValueTraitsINS7_IS3_EENS7_ISA_EEEELb1EE4MoveEOSB_RSB_(%"struct.WTF::KeyValuePair.3460"* dereferenceable(32) %1, %"struct.WTF::KeyValuePair.3460"* dereferenceable(32) %75)
  ret %"struct.WTF::KeyValuePair.3460"* %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink13CSSPropertyIDENS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEES9_NS_18HashMapValueTraitsINS7_IS3_EENS7_ISA_EEEELb1EE4MoveEOSB_RSB_(%"struct.WTF::KeyValuePair.3460"* dereferenceable(32), %"struct.WTF::KeyValuePair.3460"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %1, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %38, label %6, !prof !4

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %1, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %13
  %15 = bitcast %"class.WTF::String"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %18 = ptrtoint i8* %16 to i64
  switch i64 %18, label %19 [
    i64 -1, label %33
    i64 0, label %33
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %16 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #17
  br label %33

33:                                               ; preds = %32, %29, %12, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %6
  %37 = bitcast %"class.WTF::String"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #17
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %38

38:                                               ; preds = %2, %36
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %1, i64 0, i32 0
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %0, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %39, align 8
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %1, i64 0, i32 2
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %0, i64 0, i32 2
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %1, i64 0, i32 2, i32 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %1, i64 0, i32 2, i32 0, i32 2
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %1, i64 0, i32 2, i32 0, i32 3
  %47 = bitcast %"class.WTF::HashSet.2325"* %43 to i64*
  %48 = bitcast %"class.WTF::HashSet.2325"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 20, i1 false) #17
  %49 = load i64, i64* %47, align 8
  %50 = bitcast %"class.WTF::HashSet.2325"* %42 to i64*
  store atomic i64 0, i64* %47 monotonic, align 8
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %0, i64 0, i32 2, i32 0, i32 1
  %52 = load i32, i32* %44, align 4
  %53 = load i32, i32* %51, align 4
  store i32 %53, i32* %44, align 4
  store i32 %52, i32* %51, align 4
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %0, i64 0, i32 2, i32 0, i32 2
  %55 = load i32, i32* %45, align 4
  %56 = load i32, i32* %54, align 4
  store i32 %56, i32* %45, align 4
  store i32 %55, i32* %54, align 4
  %57 = load i32, i32* %46, align 8
  %58 = and i32 %57, 2147483647
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.3460", %"struct.WTF::KeyValuePair.3460"* %0, i64 0, i32 2, i32 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, 2147483647
  %62 = and i32 %57, -2147483648
  %63 = or i32 %61, %62
  store i32 %63, i32* %46, align 8
  %64 = load i32, i32* %59, align 8
  %65 = and i32 %64, -2147483648
  %66 = or i32 %65, %58
  store i32 %66, i32* %59, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN3WTF7HashMapIN5blink13CSSPropertyIDENS3_7HashSetINS3_6StringENS3_10StringHashENS3_10HashTraitsIS8_EENS3_18PartitionAllocatorEEENS3_7IntHashIS6_EENSA_IS6_EENSA_ISD_EESC_EEPNS5_4NodeEEJNS3_17UnretainedWrapperISI_EEEEEFbSM_EE3RunEPNS0_13BindStateBaseESM_(%"class.base::internal::BindStateBase"*, %"class.blink::Node"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to i1 (%"class.WTF::HashMap.3456"*, %"class.blink::Node"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.WTF::HashMap.3456"**
  %7 = load %"class.WTF::HashMap.3456"*, %"class.WTF::HashMap.3456"** %6, align 8
  %8 = load i1 (%"class.WTF::HashMap.3456"*, %"class.blink::Node"*)*, i1 (%"class.WTF::HashMap.3456"*, %"class.blink::Node"*)** %4, align 8
  %9 = tail call zeroext i1 %8(%"class.WTF::HashMap.3456"* %7, %"class.blink::Node"* %1) #17
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbPKN3WTF7HashMapIN5blink13CSSPropertyIDENS2_7HashSetINS2_6StringENS2_10StringHashENS2_10HashTraitsIS7_EENS2_18PartitionAllocatorEEENS2_7IntHashIS5_EENS9_IS5_EENS9_ISC_EESB_EEPNS4_4NodeEEJNS2_17UnretainedWrapperISH_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #16

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3DOM4NodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3379"*, %"class.std::__1::unique_ptr.3367"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3367"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3379"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3379"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3367"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3367"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3367"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3367"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3367"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3367"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3367"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3379", %"class.std::__1::vector.3379"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3367"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3367"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::DOM::Node"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3367"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3367"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3367"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3367"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !122

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3367"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3367"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3367"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3367"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3367"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3367"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3367"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3367"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3367"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3367"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3367"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3367"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3367"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3367"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3367"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3367"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3367"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3367"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3367"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3367"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3367"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3367"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3367"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3367"*, %"class.std::__1::unique_ptr.3367"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3367"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3367"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3367"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3367"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3367"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.3367"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3367", %"class.std::__1::unique_ptr.3367"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::DOM::Node"*, %"class.blink::protocol::DOM::Node"** %142, align 8
  store %"class.blink::protocol::DOM::Node"* null, %"class.blink::protocol::DOM::Node"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::DOM::Node"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::DOM::Node"* %143 to void (%"class.blink::protocol::DOM::Node"*)***
  %147 = load void (%"class.blink::protocol::DOM::Node"*)**, void (%"class.blink::protocol::DOM::Node"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::DOM::Node"*)*, void (%"class.blink::protocol::DOM::Node"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::DOM::Node"* nonnull %143) #17
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.3367"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKNS_12AtomicStringESD_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.2326"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2326"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #17
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !2

97:                                               ; preds = %88
  tail call void @llvm.trap() #17
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #17
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.2326", %"class.WTF::HashTable.2326"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2326"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKS2_EEEvDpOT_(%"class.std::__1::vector.3393"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3393"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3393"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %43, label %61, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i33
  %53 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #17
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %59, !prof !2

58:                                               ; preds = %49
  tail call void @llvm.trap() #17
  unreachable

59:                                               ; preds = %49
  %60 = trunc i33 %55 to i32
  store i32 %60, i32* %50, align 4
  br label %61

61:                                               ; preds = %34, %44, %59
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %63 = ptrtoint %"class.WTF::String"* %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %0, i64 0, i32 0, i32 0
  %65 = load %"class.WTF::String"*, %"class.WTF::String"** %64, align 8
  %66 = ptrtoint %"class.WTF::String"* %65 to i64
  %67 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %68 = icmp eq %"class.WTF::String"* %67, %65
  br i1 %68, label %150, label %69

69:                                               ; preds = %61
  %70 = getelementptr %"class.WTF::String", %"class.WTF::String"* %67, i64 -1, i32 0, i32 0
  %71 = ptrtoint %"class.WTF::StringImpl"** %70 to i64
  %72 = sub i64 %71, %66
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %89, label %77

77:                                               ; preds = %69, %77
  %78 = phi %"class.WTF::String"* [ %81, %77 ], [ %37, %69 ]
  %79 = phi %"class.WTF::String"* [ %82, %77 ], [ %67, %69 ]
  %80 = phi i64 [ %87, %77 ], [ %75, %69 ]
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -1
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -1
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %82, i64 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::String"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.WTF::String"* %81 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %87 = add i64 %80, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %77, !llvm.loop !124

89:                                               ; preds = %77, %69
  %90 = phi %"class.WTF::String"* [ undef, %69 ], [ %81, %77 ]
  %91 = phi %"class.WTF::String"* [ %37, %69 ], [ %81, %77 ]
  %92 = phi %"class.WTF::String"* [ %67, %69 ], [ %82, %77 ]
  %93 = icmp ult i64 %72, 56
  br i1 %93, label %146, label %94

94:                                               ; preds = %89, %94
  %95 = phi %"class.WTF::String"* [ %139, %94 ], [ %91, %89 ]
  %96 = phi %"class.WTF::String"* [ %140, %94 ], [ %92, %89 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -1
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -1
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %100 = bitcast %"class.WTF::String"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.WTF::String"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %99, align 8
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -2
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -2
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -3
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -3
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.WTF::String"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -4
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -4
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 0, i32 0, i32 0
  %118 = bitcast %"class.WTF::String"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.WTF::String"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -5
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -5
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %124 = bitcast %"class.WTF::String"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.WTF::String"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  %127 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -6
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -6
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %128, i64 0, i32 0, i32 0
  %130 = bitcast %"class.WTF::String"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.WTF::String"* %127 to i64*
  store i64 %131, i64* %132, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %129, align 8
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -7
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -7
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %134, i64 0, i32 0, i32 0
  %136 = bitcast %"class.WTF::String"* %134 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.WTF::String"* %133 to i64*
  store i64 %137, i64* %138, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %135, align 8
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -8
  %140 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -8
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 0, i32 0, i32 0
  %142 = bitcast %"class.WTF::String"* %140 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.WTF::String"* %139 to i64*
  store i64 %143, i64* %144, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %141, align 8
  %145 = icmp eq %"class.WTF::String"* %140, %65
  br i1 %145, label %146, label %94

146:                                              ; preds = %94, %89
  %147 = phi %"class.WTF::String"* [ %90, %89 ], [ %139, %94 ]
  %148 = load i64, i64* %6, align 8
  %149 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %150

150:                                              ; preds = %61, %146
  %151 = phi %"class.WTF::String"* [ %149, %146 ], [ %65, %61 ]
  %152 = phi %"class.WTF::String"* [ %147, %146 ], [ %37, %61 ]
  %153 = phi i64 [ %148, %146 ], [ %66, %61 ]
  %154 = ptrtoint %"class.WTF::String"* %152 to i64
  store i64 %154, i64* %6, align 8
  store i64 %63, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %155 = inttoptr i64 %153 to %"class.WTF::String"*
  %156 = icmp eq %"class.WTF::String"* %151, %155
  br i1 %156, label %178, label %157

157:                                              ; preds = %150, %176
  %158 = phi %"class.WTF::String"* [ %159, %176 ], [ %151, %150 ]
  %159 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %158, i64 -1
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %159, i64 0, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #17
  br label %176

176:                                              ; preds = %175, %172, %157
  %177 = icmp eq %"class.WTF::String"* %159, %155
  br i1 %177, label %178, label %157

178:                                              ; preds = %176, %150
  %179 = icmp eq i64 %153, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %178
  %181 = inttoptr i64 %153 to i8*
  tail call void @_ZdlPv(i8* %181) #18
  br label %182

182:                                              ; preds = %178, %180
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IiEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.3317"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3319"*, %"struct.WTF::KeyValuePair.3319"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3319"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.3317", %"class.WTF::HashTable.3317"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::Node"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::Node"*
  %38 = icmp eq %"class.blink::Node"* %36, %37
  br i1 %38, label %68, label %39

39:                                               ; preds = %6
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %59, %39
  %54 = phi i64 [ %33, %39 ], [ %63, %59 ]
  %55 = phi i64 [ 0, %39 ], [ %61, %59 ]
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %4, i64 %54, i32 0, i32 0, i32 0
  %57 = load %"class.blink::Node"*, %"class.blink::Node"** %56, align 8
  %58 = icmp eq %"class.blink::Node"* %57, null
  br i1 %58, label %68, label %59

59:                                               ; preds = %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %52, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.3319", %"struct.WTF::KeyValuePair.3319"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::Node"*, %"class.blink::Node"** %65, align 8
  %67 = icmp eq %"class.blink::Node"* %66, %37
  br i1 %67, label %68, label %53

68:                                               ; preds = %53, %59, %2, %6
  %69 = phi %"struct.WTF::KeyValuePair.3319"* [ null, %2 ], [ %34, %6 ], [ null, %53 ], [ %64, %59 ]
  %70 = icmp ne %"struct.WTF::KeyValuePair.3319"* %69, null
  ret i1 %70
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashMapINS2_INS1_4NodeEEEiNS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS8_IiEEEEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPSB_EEvOT_(%"class.WTF::Vector.2756"*, %"class.blink::HeapHashMap.2752"** dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2756", %"class.WTF::Vector.2756"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2756", %"class.WTF::Vector.2756"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashMapINS2_INS1_4NodeEEEiNS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS8_IiEEEEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2756"* %0, i32 %14) #17
  %15 = getelementptr inbounds %"class.WTF::Vector.2756", %"class.WTF::Vector.2756"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2750"*, %"class.blink::Member.2750"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2750", %"class.blink::Member.2750"* %16, i64 %18
  %20 = bitcast %"class.blink::HeapHashMap.2752"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.2750"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #17
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashMapINS2_INS1_4NodeEEEiNS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS8_IiEEEEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2756"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2756", %"class.WTF::Vector.2756"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2756", %"class.WTF::Vector.2756"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2750"*, %"class.blink::Member.2750"** %8, align 8
  %10 = icmp eq %"class.blink::Member.2750"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEEEEmm(i64 %11) #17
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.4139"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashMapINS2_INS_4NodeEEEiN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EENS9_IiEEEEEENS6_12VectorTraitsISD_EEEEE4CallEm(i64 %14) #17
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4139"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2756"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4139", %"class.blink::HeapVectorBacking.4139"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #17
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.2750"*, %"class.blink::Member.2750"** %8, align 8
  %26 = icmp eq %"class.blink::Member.2750"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.2750"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #17
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #17
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #17
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.56, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0)) #17
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #17
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashMapINS2_INS1_4NodeEEEiNS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS8_IiEEEEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2756"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3475"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4099", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.4099"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4099", %"class.WTF::StringTypeAdapter.4099"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.4099"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4099"* nonnull %4, i8* %14) #17
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3476"* %9) #17
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3476"* %9) #17
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #17
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.69, i64 0, i64 0), i8* %25, i8* %26) #17
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.70, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #17
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #17
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #17
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #17
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i64 0, i64 0), i8* %41, i8* %42) #17
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.70, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #17
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #17
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #17
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.3475"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.4099", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.4099", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.4099"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.4099"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4099"* nonnull %5, i8* %10) #17
  %11 = bitcast %"class.WTF::StringTypeAdapter.4099"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4099", %"class.WTF::StringTypeAdapter.4099"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #17
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4099"* nonnull %3, i8* %14) #17
  %15 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #17
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.4099"* nonnull %3, i8* %1) #17
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4098"* nonnull %34, i8* %37) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #17
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3476"* %6) #17
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.4099"* nonnull %5, i8* %40) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.3475"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.4099", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.4099", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.4099"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.4099"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4099"* nonnull %5, i8* %10) #17
  %11 = bitcast %"class.WTF::StringTypeAdapter.4099"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4099", %"class.WTF::StringTypeAdapter.4099"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #17
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4099"* nonnull %3, i8* %14) #17
  %15 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.3475", %"class.WTF::StringAppend.3475"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #17
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4099"* nonnull %3, i16* %1) #17
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4098"* nonnull %34, i16* %37) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #17
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3476"* %6) #17
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4099"* nonnull %5, i16* %40) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3476"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4099", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.4099"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4099", %"class.WTF::StringTypeAdapter.4099"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.3476", %"class.WTF::StringAppend.3476"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.4099"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4099"* nonnull %4, i8* %13) #17
  %14 = getelementptr inbounds %"class.WTF::StringAppend.3476", %"class.WTF::StringAppend.3476"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #17
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.69, i64 0, i64 0), i8* %30, i8* %31) #17
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.70, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #17
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #17
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #17
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i64 0, i64 0), i8* %45, i8* %46) #17
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.70, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #17
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #17
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #17
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF15ConstructTraitsINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEENS_12VectorTraitsIS7_EES6_E25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8*, %"class.WTF::VectorBackedLinkedListNode.3331"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::VectorBackedLinkedListNode.3331"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast i8* %0 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %1, i64 0, i32 2
  %8 = bitcast %"class.blink::Member.318"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast i8* %6 to i64*
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = bitcast i8* %0 to %"class.WTF::VectorBackedLinkedListNode.3331"*
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %2
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #17
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #17
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 9
  %26 = load i8, i8* %25, align 1, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 13
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %32, align 8
  %34 = load atomic i64, i64* %10 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %33, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to i8*
  %39 = bitcast %"class.blink::MarkingVisitor"* %33 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %37, i8* nonnull %38, i8* %38, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  %43 = load i64, i64* %29, align 8
  br label %44

44:                                               ; preds = %36, %28
  %45 = phi i64 [ %31, %28 ], [ %43, %36 ]
  %46 = add i64 %45, -1
  store i64 %46, i64* %29, align 8
  br label %47

47:                                               ; preds = %2, %21, %44
  ret %"class.WTF::VectorBackedLinkedListNode.3331"* %11
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.3328"*, %"class.WTF::VectorBackedLinkedListNode.3331"* dereferenceable(16)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3328", %"class.WTF::Vector.3328"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3328", %"class.WTF::Vector.3328"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedListNode.3331"** %6, align 8
  %8 = icmp ugt %"class.WTF::VectorBackedLinkedListNode.3331"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::VectorBackedLinkedListNode.3331"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3328", %"class.WTF::Vector.3328"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.3328"* %0, i32 %22) #17
  %23 = load %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedListNode.3331"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3331"* %1 to i64
  %26 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3331"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 4
  %29 = getelementptr inbounds %"class.WTF::Vector.3328", %"class.WTF::Vector.3328"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.3328"* %0, i32 %37) #17
  %38 = load %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedListNode.3331"** %6, align 8
  %39 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.WTF::VectorBackedLinkedListNode.3331"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.WTF::VectorBackedLinkedListNode.3331"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %41, i64 %44
  %46 = bitcast %"class.WTF::VectorBackedLinkedListNode.3331"* %45 to i8*
  %47 = tail call %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF15ConstructTraitsINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEENS_12VectorTraitsIS7_EES6_E25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8* %46, %"class.WTF::VectorBackedLinkedListNode.3331"* dereferenceable(16) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.3328"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3328", %"class.WTF::Vector.3328"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3328", %"class.WTF::Vector.3328"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedListNode.3331"** %8, align 8
  %10 = icmp eq %"class.WTF::VectorBackedLinkedListNode.3331"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEES0_EEEEmm(i64 %11) #17
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 4
  %15 = tail call %"class.blink::HeapVectorBacking.4250"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64 %14) #17
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4250"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3328"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4250", %"class.blink::HeapVectorBacking.4250"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #17
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedListNode.3331"** %8, align 8
  %26 = icmp eq %"class.WTF::VectorBackedLinkedListNode.3331"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.WTF::VectorBackedLinkedListNode.3331"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #17
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 4
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #17
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #17
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.56, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0)) #17
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #17
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.3328"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.3328"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.3328"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3328", %"class.WTF::Vector.3328"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.3328"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.3328", %"class.WTF::Vector.3328"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #17
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #17
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEES0_EEEEmm(i64 %14) #17
  %16 = lshr i64 %15, 4
  %17 = tail call %"class.blink::HeapVectorBacking.4250"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64 %16) #17
  %18 = ptrtoint %"class.blink::HeapVectorBacking.4250"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.3328", %"class.WTF::Vector.3328"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedListNode.3331"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3328", %"class.WTF::Vector.3328"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.4250"* %17, null
  %23 = icmp ne %"class.WTF::VectorBackedLinkedListNode.3331"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.WTF::VectorBackedLinkedListNode.3331"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.3328"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 4
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.4250", %"class.blink::HeapVectorBacking.4250"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #17
  %33 = bitcast %"class.WTF::Vector.3328"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #17
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #17
  %42 = bitcast %"class.WTF::Vector.3328"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.3328", %"class.WTF::Vector.3328"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.4250", %"class.blink::HeapVectorBacking.4250"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #17
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 8388608
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 8388608) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.61, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.62, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 4
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4250"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.64, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.4250"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.4250"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([259 x i8], [259 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS_26VectorBackedLinkedListNodeINS1_6MemberINS1_4NodeEEENS1_13HeapAllocatorEEENS_12VectorTraitsIS8_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.WTF::VectorBackedLinkedListNode.3331"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %3, i64 %28, i32 2
  %30 = bitcast %"class.blink::Member.318"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.318"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet.3322"*, %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8, %"class.blink::Node"** dereferenceable(8), i32) local_unnamed_addr #0 comdat align 2 {
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #17
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #17
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 14
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet.3322", %"class.WTF::LinkedHashSet.3322"* %0, i64 0, i32 0, i32 0
  %19 = tail call { %"struct.WTF::KeyValuePair.3326"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.3324"* %18, %"class.blink::Node"** dereferenceable(8) %2, i32* nonnull dereferenceable(4) @_ZN3WTFL9kNotFoundE) #17
  %20 = extractvalue { %"struct.WTF::KeyValuePair.3326"*, i8 } %19, 0
  %21 = extractvalue { %"struct.WTF::KeyValuePair.3326"*, i8 } %19, 1
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.WTF::LinkedHashSet.3322", %"class.WTF::LinkedHashSet.3322"* %0, i64 0, i32 1
  br i1 %23, label %41, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedListNode.3331"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %29 = load %"class.WTF::VectorBackedLinkedList.3327"*, %"class.WTF::VectorBackedLinkedList.3327"** %28, align 8
  %30 = tail call { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6insertIRPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList.3327"* %24, %"class.WTF::VectorBackedLinkedListNode.3331"* %27, %"class.WTF::VectorBackedLinkedList.3327"* %29, %"class.blink::Node"** dereferenceable(8) %2)
  %31 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } %30, 0
  %32 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } %30, 1
  %33 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3331"* %31 to i64
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %32, i64 0, i32 0
  %35 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %34, i32 0) #17
  %36 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3331"* %35 to i64
  %37 = sub i64 %33, %36
  %38 = lshr exact i64 %37, 4
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %20, i64 0, i32 1
  store i32 %39, i32* %40, align 8
  br label %54

41:                                               ; preds = %11
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %20, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %24, i64 0, i32 0
  %45 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %44, i32 %43) #17
  %46 = icmp eq i32 %3, 1
  br i1 %46, label %54, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedListNode.3331"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %51 = load %"class.WTF::VectorBackedLinkedList.3327"*, %"class.WTF::VectorBackedLinkedList.3327"** %50, align 8
  %52 = tail call { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_(%"class.WTF::VectorBackedLinkedList.3327"* %24, %"class.WTF::VectorBackedLinkedListNode.3331"* %45, %"class.WTF::VectorBackedLinkedList.3327"* %24, %"class.WTF::VectorBackedLinkedListNode.3331"* %49, %"class.WTF::VectorBackedLinkedList.3327"* %51)
  %53 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } %52, 0
  br label %54

54:                                               ; preds = %41, %47, %25
  %55 = phi %"class.WTF::VectorBackedLinkedListNode.3331"* [ %53, %47 ], [ %31, %25 ], [ %45, %41 ]
  %56 = phi i8 [ 0, %47 ], [ 1, %25 ], [ 0, %41 ]
  %57 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %55, i64 0, i32 2
  %58 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %59 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %58, i64 0, i32 1
  %60 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %59) #17
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %64, !prof !2

62:                                               ; preds = %54
  %63 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %59, i8* %63) #17
  br label %64

64:                                               ; preds = %54, %62
  %65 = phi i8* [ %63, %62 ], [ %60, %54 ]
  %66 = bitcast i8* %65 to %"class.blink::ThreadState"**
  %67 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %67, i64 0, i32 14
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = insertvalue { %"class.blink::Member.318"*, i8 } undef, %"class.blink::Member.318"* %57, 0
  %72 = insertvalue { %"class.blink::Member.318"*, i8 } %71, i8 %56, 1
  ret { %"class.blink::Member.318"*, i8 } %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6insertIRPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList.3327"*, %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode.3331", align 8
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3331"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %7, i32 0) #17
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3331"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %13, i32 %12) #17
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %84

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.WTF::VectorBackedLinkedListNode.3331"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #17
  %24 = bitcast %"class.blink::Node"** %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %5, i64 0, i32 0
  store i32 %16, i32* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %5, i64 0, i32 1
  store i32 %12, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %5, i64 0, i32 2
  %29 = bitcast %"class.blink::Member.318"* %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %22, %31
  br i1 %32, label %82, label %33, !prof !2

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedListNode.3331"** %34, align 8
  %36 = zext i32 %22 to i64
  %37 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %35, i64 %36
  %38 = bitcast %"class.WTF::VectorBackedLinkedListNode.3331"* %5 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.WTF::VectorBackedLinkedListNode.3331"* %37 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %35, i64 %36, i32 2
  %42 = load i64, i64* %29, align 8
  %43 = bitcast %"class.blink::Member.318"* %41 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %79, label %46

46:                                               ; preds = %33
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #17
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #17
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 9
  %58 = load i8, i8* %57, align 1, !range !3
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %79, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 13
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %61, align 8
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %64, align 8
  %66 = load atomic i64, i64* %43 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %65, i64 0, i32 0, i32 0
  %70 = inttoptr i64 %66 to i8*
  %71 = bitcast %"class.blink::MarkingVisitor"* %65 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, i64 5
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, align 8
  tail call void %74(%"class.blink::Visitor"* %69, i8* nonnull %70, i8* %70, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  %75 = load i64, i64* %61, align 8
  br label %76

76:                                               ; preds = %68, %60
  %77 = phi i64 [ %63, %60 ], [ %75, %68 ]
  %78 = add i64 %77, -1
  store i64 %78, i64* %61, align 8
  br label %79

79:                                               ; preds = %33, %53, %76
  %80 = load i32, i32* %21, align 4
  %81 = add i32 %80, 1
  store i32 %81, i32* %21, align 4
  br label %83

82:                                               ; preds = %20
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.3328"* %13, %"class.WTF::VectorBackedLinkedListNode.3331"* nonnull dereferenceable(16) %5) #17
  br label %83

83:                                               ; preds = %79, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #17
  br label %101

84:                                               ; preds = %4
  %85 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %13, i32 %18) #17
  %86 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %85, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %17, align 8
  %88 = bitcast %"class.blink::Node"** %3 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::VectorBackedLinkedListNode.3331"* %85 to i64*
  %91 = shl i64 %10, 28
  %92 = zext i32 %16 to i64
  %93 = or i64 %91, %92
  store i64 %93, i64* %90, align 8
  %94 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %85, i64 0, i32 2
  %95 = bitcast %"class.blink::Member.318"* %94 to i64*
  store atomic i64 %89, i64* %95 monotonic, align 8
  %96 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %84
  %99 = inttoptr i64 %89 to i8*
  %100 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %99) #17
  br label %101

101:                                              ; preds = %98, %84, %83
  %102 = phi i32 [ %22, %83 ], [ %18, %84 ], [ %18, %98 ]
  %103 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %13, i32 %16) #17
  %104 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %103, i64 0, i32 1
  store i32 %102, i32* %104, align 4
  %105 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %13, i32 %12) #17
  %106 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %105, i64 0, i32 0
  store i32 %102, i32* %106, align 8
  %107 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %0, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 4
  %110 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %13, i32 %102) #17
  %111 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } undef, %"class.WTF::VectorBackedLinkedListNode.3331"* %110, 0
  %112 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } %111, %"class.WTF::VectorBackedLinkedList.3327"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_(%"class.WTF::VectorBackedLinkedList.3327"*, %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"*, %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"*) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3331"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %7, i32 0) #17
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3331"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = icmp eq %"class.WTF::VectorBackedLinkedListNode.3331"* %1, %3
  %14 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %0, i64 0, i32 0
  %15 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %14, i32 %12) #17
  br i1 %13, label %41, label %16

16:                                               ; preds = %5
  %17 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3331"* %3 to i64
  %18 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %4, i64 0, i32 0
  %19 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %18, i32 0) #17
  %20 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3331"* %19 to i64
  %21 = sub i64 %17, %20
  %22 = lshr exact i64 %21, 4
  %23 = trunc i64 %22 to i32
  %24 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %14, i32 %23) #17
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %12
  br i1 %27, label %39, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %15, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %15, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %14, i32 %30) #17
  %34 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %14, i32 %32) #17
  %35 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %33, i64 0, i32 1
  store i32 %32, i32* %35, align 4
  %36 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %34, i64 0, i32 0
  store i32 %30, i32* %36, align 8
  %37 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %14, i32 %26) #17
  %38 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %37, i64 0, i32 1
  store i32 %12, i32* %38, align 4
  store i32 %12, i32* %25, align 8
  store i32 %26, i32* %29, align 8
  store i32 %23, i32* %31, align 4
  br label %39

39:                                               ; preds = %16, %28
  %40 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %14, i32 %12) #17
  br label %41

41:                                               ; preds = %39, %5
  %42 = phi %"class.WTF::VectorBackedLinkedListNode.3331"* [ %15, %5 ], [ %40, %39 ]
  %43 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } undef, %"class.WTF::VectorBackedLinkedListNode.3331"* %42, 0
  %44 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } %43, %"class.WTF::VectorBackedLinkedList.3327"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3326"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.3324"*, %"class.blink::Node"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3326"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.3324"* %0, %"struct.WTF::KeyValuePair.3326"* null)
  %9 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3326"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Node"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.3326"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.3326"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %147, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.3326"* %60, %"struct.WTF::KeyValuePair.3326"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.3326"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.3326"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #17
  %80 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::Node"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.3326"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::Node"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.3326"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::Node"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #17
  br label %97

97:                                               ; preds = %87, %94
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %89, i64 0, i32 1
  %99 = load i32, i32* %2, align 4
  store i32 %99, i32* %98, align 4
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %135, label %102

102:                                              ; preds = %97
  %103 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %104 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %103, i64 0, i32 1
  %105 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %104) #17
  %106 = icmp eq i8* %105, null
  br i1 %106, label %107, label %109, !prof !2

107:                                              ; preds = %102
  %108 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %104, i8* %108) #17
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i8* [ %108, %107 ], [ %105, %102 ]
  %111 = bitcast i8* %110 to %"class.blink::ThreadState"**
  %112 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 9
  %114 = load i8, i8* %113, align 1, !range !3
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %135, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 13
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %121 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %120, align 8
  %122 = load atomic i64, i64* %91 monotonic, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %121, i64 0, i32 0, i32 0
  %126 = inttoptr i64 %122 to i8*
  %127 = bitcast %"class.blink::MarkingVisitor"* %121 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %128 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, i64 5
  %130 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %129, align 8
  tail call void %130(%"class.blink::Visitor"* %125, i8* nonnull %126, i8* %126, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  %131 = load i64, i64* %117, align 8
  br label %132

132:                                              ; preds = %124, %116
  %133 = phi i64 [ %119, %116 ], [ %131, %124 ]
  %134 = add i64 %133, -1
  store i64 %134, i64* %117, align 8
  br label %135

135:                                              ; preds = %97, %109, %132
  %136 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = add i32 %140, %138
  %142 = shl i32 %141, 1
  %143 = load i32, i32* %12, align 8
  %144 = icmp ult i32 %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %135
  %146 = tail call %"struct.WTF::KeyValuePair.3326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.3324"* %0, %"struct.WTF::KeyValuePair.3326"* %89)
  br label %147

147:                                              ; preds = %58, %135, %145
  %148 = phi i8 [ 1, %135 ], [ 1, %145 ], [ 0, %58 ]
  %149 = phi %"struct.WTF::KeyValuePair.3326"* [ %89, %135 ], [ %146, %145 ], [ %60, %58 ]
  %150 = insertvalue { %"struct.WTF::KeyValuePair.3326"*, i8 } undef, %"struct.WTF::KeyValuePair.3326"* %149, 0
  %151 = insertvalue { %"struct.WTF::KeyValuePair.3326"*, i8 } %150, i8 %148, 1
  ret { %"struct.WTF::KeyValuePair.3326"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.3324"*, %"struct.WTF::KeyValuePair.3326"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0), i8* %23, i8* %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #17
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.3326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.3324"* %0, i32 %35, %"struct.WTF::KeyValuePair.3326"* %1, i8* nonnull dereferenceable(1) %4) #17
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.4257"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #17
  %43 = bitcast %"class.blink::HeapHashTableBacking.4257"* %42 to %"struct.WTF::KeyValuePair.3326"*
  %44 = call %"struct.WTF::KeyValuePair.3326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.3324"* %0, %"struct.WTF::KeyValuePair.3326"* %43, i32 %40, %"struct.WTF::KeyValuePair.3326"* %1) #17
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.3326"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.3326"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.3324"*, i32, %"struct.WTF::KeyValuePair.3326"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #17
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #17
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0)) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.3326"* %32, null
  br i1 %33, label %78, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.3326"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #17
  br i1 %38, label %39, label %78

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.4257"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #17
  %45 = bitcast %"class.blink::HeapHashTableBacking.4257"* %44 to %"struct.WTF::KeyValuePair.3326"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %75, %39
  %48 = phi %"struct.WTF::KeyValuePair.3326"* [ null, %39 ], [ %65, %75 ]
  %49 = bitcast %"class.WTF::HashTable.3324"* %0 to %"class.blink::HeapHashTableBacking.4257"**
  store %"class.blink::HeapHashTableBacking.4257"* %44, %"class.blink::HeapHashTableBacking.4257"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.4257", %"class.blink::HeapHashTableBacking.4257"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #17
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.3326"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.3326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.3324"* %0, %"struct.WTF::KeyValuePair.3326"* %42, i32 %1, %"struct.WTF::KeyValuePair.3326"* %48)
  br label %78

58:                                               ; preds = %39, %75
  %59 = phi i64 [ %76, %75 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.3326"* [ %65, %75 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.3326"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.3326"* %64, %"struct.WTF::KeyValuePair.3326"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.3326"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.3326"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %75

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.3326"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %61, i64 %59, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  br label %75

75:                                               ; preds = %68, %70
  %76 = add nuw nsw i64 %59, 1
  %77 = icmp eq i64 %76, %43
  br i1 %77, label %47, label %58

78:                                               ; preds = %34, %30, %55
  %79 = phi %"struct.WTF::KeyValuePair.3326"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.3326"* %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.3324"*, %"struct.WTF::KeyValuePair.3326"*, i32, %"struct.WTF::KeyValuePair.3326"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3324", align 8
  %6 = bitcast %"class.WTF::HashTable.3324"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3324"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3326"* %1, %"struct.WTF::KeyValuePair.3326"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.3326"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.3326"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %19, align 8
  br label %57

21:                                               ; preds = %80
  %22 = bitcast %"class.WTF::HashTable.3324"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %81, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.3326"* [ null, %15 ], [ %83, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.3324"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #17
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.3324"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.3324"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #17
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #17
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.3326"* %29

57:                                               ; preds = %18, %80
  %58 = phi i32 [ %13, %18 ], [ %81, %80 ]
  %59 = phi %"struct.WTF::KeyValuePair.3326"* [ %20, %18 ], [ %82, %80 ]
  %60 = phi %"struct.WTF::KeyValuePair.3326"* [ null, %18 ], [ %83, %80 ]
  %61 = phi i32 [ 0, %18 ], [ %84, %80 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.3326"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %80
    i64 0, label %80
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.3326"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3324"* nonnull %5, %"class.blink::Member.318"* dereferenceable(8) %67) #17
  %69 = extractvalue { %"struct.WTF::KeyValuePair.3326"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.3326"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %59, i64 %62, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %19, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %75, i64 %62
  %77 = icmp eq %"struct.WTF::KeyValuePair.3326"* %76, %3
  %78 = select i1 %77, %"struct.WTF::KeyValuePair.3326"* %69, %"struct.WTF::KeyValuePair.3326"* %60
  %79 = load i32, i32* %12, align 8
  br label %80

80:                                               ; preds = %57, %57, %66
  %81 = phi i32 [ %58, %57 ], [ %79, %66 ], [ %58, %57 ]
  %82 = phi %"struct.WTF::KeyValuePair.3326"* [ %59, %57 ], [ %75, %66 ], [ %59, %57 ]
  %83 = phi %"struct.WTF::KeyValuePair.3326"* [ %60, %57 ], [ %78, %66 ], [ %60, %57 ]
  %84 = add i32 %61, 1
  %85 = icmp eq i32 %84, %81
  br i1 %85, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.4257"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.68, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.4257"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.4257"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([413 x i8], [413 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.3326"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #17
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.3326"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3326"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3324"*, %"class.blink::Member.318"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member.318"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.3326"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Node"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.3326"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.3326"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.3326"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.3326"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.3326"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Node"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Node"* %63, inttoptr (i64 -1 to %"class.blink::Node"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.3326"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.3326"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.3326"*, i8 } undef, %"struct.WTF::KeyValuePair.3326"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.3326"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.3326"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3328", %"class.WTF::Vector.3328"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.56, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.WTF::Vector.3328", %"class.WTF::Vector.3328"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedListNode.3331"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode.3331"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3328", %"class.WTF::Vector.3328"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.56, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.WTF::Vector.3328", %"class.WTF::Vector.3328"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedListNode.3331"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode.3331"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.318"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIPNS1_7ElementEEENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet.3322"*, %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8, %"class.blink::Element"** dereferenceable(8), i32) local_unnamed_addr #0 comdat align 2 {
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #17
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #17
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 14
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet.3322", %"class.WTF::LinkedHashSet.3322"* %0, i64 0, i32 0, i32 0
  %19 = tail call { %"struct.WTF::KeyValuePair.3326"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPNS1_7ElementERKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.3324"* %18, %"class.blink::Element"** dereferenceable(8) %2, i32* nonnull dereferenceable(4) @_ZN3WTFL9kNotFoundE) #17
  %20 = extractvalue { %"struct.WTF::KeyValuePair.3326"*, i8 } %19, 0
  %21 = extractvalue { %"struct.WTF::KeyValuePair.3326"*, i8 } %19, 1
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.WTF::LinkedHashSet.3322", %"class.WTF::LinkedHashSet.3322"* %0, i64 0, i32 1
  br i1 %23, label %41, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedListNode.3331"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %29 = load %"class.WTF::VectorBackedLinkedList.3327"*, %"class.WTF::VectorBackedLinkedList.3327"** %28, align 8
  %30 = tail call { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6insertIPNS1_7ElementEEENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList.3327"* %24, %"class.WTF::VectorBackedLinkedListNode.3331"* %27, %"class.WTF::VectorBackedLinkedList.3327"* %29, %"class.blink::Element"** dereferenceable(8) %2)
  %31 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } %30, 0
  %32 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } %30, 1
  %33 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3331"* %31 to i64
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %32, i64 0, i32 0
  %35 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %34, i32 0) #17
  %36 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3331"* %35 to i64
  %37 = sub i64 %33, %36
  %38 = lshr exact i64 %37, 4
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %20, i64 0, i32 1
  store i32 %39, i32* %40, align 8
  br label %54

41:                                               ; preds = %11
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %20, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %24, i64 0, i32 0
  %45 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %44, i32 %43) #17
  %46 = icmp eq i32 %3, 1
  br i1 %46, label %54, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedListNode.3331"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %51 = load %"class.WTF::VectorBackedLinkedList.3327"*, %"class.WTF::VectorBackedLinkedList.3327"** %50, align 8
  %52 = tail call { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_(%"class.WTF::VectorBackedLinkedList.3327"* %24, %"class.WTF::VectorBackedLinkedListNode.3331"* %45, %"class.WTF::VectorBackedLinkedList.3327"* %24, %"class.WTF::VectorBackedLinkedListNode.3331"* %49, %"class.WTF::VectorBackedLinkedList.3327"* %51)
  %53 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } %52, 0
  br label %54

54:                                               ; preds = %41, %47, %25
  %55 = phi %"class.WTF::VectorBackedLinkedListNode.3331"* [ %53, %47 ], [ %31, %25 ], [ %45, %41 ]
  %56 = phi i8 [ 0, %47 ], [ 1, %25 ], [ 0, %41 ]
  %57 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %55, i64 0, i32 2
  %58 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %59 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %58, i64 0, i32 1
  %60 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %59) #17
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %64, !prof !2

62:                                               ; preds = %54
  %63 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %59, i8* %63) #17
  br label %64

64:                                               ; preds = %54, %62
  %65 = phi i8* [ %63, %62 ], [ %60, %54 ]
  %66 = bitcast i8* %65 to %"class.blink::ThreadState"**
  %67 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %67, i64 0, i32 14
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = insertvalue { %"class.blink::Member.318"*, i8 } undef, %"class.blink::Member.318"* %57, 0
  %72 = insertvalue { %"class.blink::Member.318"*, i8 } %71, i8 %56, 1
  ret { %"class.blink::Member.318"*, i8 } %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6insertIPNS1_7ElementEEENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList.3327"*, %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"*, %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode.3331", align 8
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3331"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %7, i32 0) #17
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3331"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %13, i32 %12) #17
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %84

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.WTF::VectorBackedLinkedListNode.3331"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #17
  %24 = bitcast %"class.blink::Element"** %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %5, i64 0, i32 0
  store i32 %16, i32* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %5, i64 0, i32 1
  store i32 %12, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %5, i64 0, i32 2
  %29 = bitcast %"class.blink::Member.318"* %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %22, %31
  br i1 %32, label %82, label %33, !prof !2

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedListNode.3331"** %34, align 8
  %36 = zext i32 %22 to i64
  %37 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %35, i64 %36
  %38 = bitcast %"class.WTF::VectorBackedLinkedListNode.3331"* %5 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.WTF::VectorBackedLinkedListNode.3331"* %37 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %35, i64 %36, i32 2
  %42 = load i64, i64* %29, align 8
  %43 = bitcast %"class.blink::Member.318"* %41 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %79, label %46

46:                                               ; preds = %33
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #17
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #17
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 9
  %58 = load i8, i8* %57, align 1, !range !3
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %79, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 13
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %61, align 8
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %64, align 8
  %66 = load atomic i64, i64* %43 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %65, i64 0, i32 0, i32 0
  %70 = inttoptr i64 %66 to i8*
  %71 = bitcast %"class.blink::MarkingVisitor"* %65 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, i64 5
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, align 8
  tail call void %74(%"class.blink::Visitor"* %69, i8* nonnull %70, i8* %70, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  %75 = load i64, i64* %61, align 8
  br label %76

76:                                               ; preds = %68, %60
  %77 = phi i64 [ %63, %60 ], [ %75, %68 ]
  %78 = add i64 %77, -1
  store i64 %78, i64* %61, align 8
  br label %79

79:                                               ; preds = %33, %53, %76
  %80 = load i32, i32* %21, align 4
  %81 = add i32 %80, 1
  store i32 %81, i32* %21, align 4
  br label %83

82:                                               ; preds = %20
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.3328"* %13, %"class.WTF::VectorBackedLinkedListNode.3331"* nonnull dereferenceable(16) %5) #17
  br label %83

83:                                               ; preds = %79, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #17
  br label %101

84:                                               ; preds = %4
  %85 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %13, i32 %18) #17
  %86 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %85, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %17, align 8
  %88 = bitcast %"class.blink::Element"** %3 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::VectorBackedLinkedListNode.3331"* %85 to i64*
  %91 = shl i64 %10, 28
  %92 = zext i32 %16 to i64
  %93 = or i64 %91, %92
  store i64 %93, i64* %90, align 8
  %94 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %85, i64 0, i32 2
  %95 = bitcast %"class.blink::Member.318"* %94 to i64*
  store atomic i64 %89, i64* %95 monotonic, align 8
  %96 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %84
  %99 = inttoptr i64 %89 to i8*
  %100 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %99) #17
  br label %101

101:                                              ; preds = %98, %84, %83
  %102 = phi i32 [ %22, %83 ], [ %18, %84 ], [ %18, %98 ]
  %103 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %13, i32 %16) #17
  %104 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %103, i64 0, i32 1
  store i32 %102, i32* %104, align 4
  %105 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %13, i32 %12) #17
  %106 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3331", %"class.WTF::VectorBackedLinkedListNode.3331"* %105, i64 0, i32 0
  store i32 %102, i32* %106, align 8
  %107 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3327", %"class.WTF::VectorBackedLinkedList.3327"* %0, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 4
  %110 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3331"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.3328"* %13, i32 %102) #17
  %111 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } undef, %"class.WTF::VectorBackedLinkedListNode.3331"* %110, 0
  %112 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } %111, %"class.WTF::VectorBackedLinkedList.3327"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode.3331"*, %"class.WTF::VectorBackedLinkedList.3327"* } %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3326"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPNS1_7ElementERKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.3324"*, %"class.blink::Element"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3326"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.3324"* %0, %"struct.WTF::KeyValuePair.3326"* null)
  %9 = load %"struct.WTF::KeyValuePair.3326"*, %"struct.WTF::KeyValuePair.3326"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3326"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Element"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  %44 = inttoptr i64 %17 to %"class.blink::Element"*
  br i1 %42, label %88, label %45

45:                                               ; preds = %10
  %46 = xor i32 %36, -1
  %47 = lshr i32 %36, 23
  %48 = add i32 %47, %46
  %49 = shl i32 %48, 12
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 7
  %52 = xor i32 %51, %50
  %53 = shl i32 %52, 2
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 20
  %56 = xor i32 %55, %54
  %57 = or i32 %56, 1
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %45, %66
  %60 = phi %"class.blink::Node"* [ %41, %45 ], [ %75, %66 ]
  %61 = phi %"struct.WTF::KeyValuePair.3326"* [ %39, %45 ], [ %73, %66 ]
  %62 = phi %"struct.WTF::KeyValuePair.3326"* [ null, %45 ], [ %68, %66 ]
  %63 = phi i64 [ %38, %45 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %45 ], [ %70, %66 ]
  %65 = icmp eq %"class.blink::Node"* %60, %43
  br i1 %65, label %148, label %66

66:                                               ; preds = %59
  %67 = icmp eq %"class.blink::Node"* %60, inttoptr (i64 -1 to %"class.blink::Node"*)
  %68 = select i1 %67, %"struct.WTF::KeyValuePair.3326"* %61, %"struct.WTF::KeyValuePair.3326"* %62
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %58, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %15
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %11, i64 %72
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::Node"*, %"class.blink::Node"** %74, align 8
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %77, label %59

77:                                               ; preds = %66
  %78 = icmp eq %"struct.WTF::KeyValuePair.3326"* %68, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %77
  %80 = bitcast %"struct.WTF::KeyValuePair.3326"* %68 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %80, i64 16) #17
  %81 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  %87 = load %"class.blink::Element"*, %"class.blink::Element"** %1, align 8
  br label %88

88:                                               ; preds = %10, %77, %79
  %89 = phi %"class.blink::Element"* [ %87, %79 ], [ %44, %77 ], [ %44, %10 ]
  %90 = phi %"struct.WTF::KeyValuePair.3326"* [ %68, %79 ], [ %73, %77 ], [ %39, %10 ]
  %91 = ptrtoint %"class.blink::Element"* %89 to i64
  %92 = bitcast %"struct.WTF::KeyValuePair.3326"* %90 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %88
  %96 = bitcast %"class.blink::Element"* %89 to i8*
  %97 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #17
  br label %98

98:                                               ; preds = %88, %95
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.3326", %"struct.WTF::KeyValuePair.3326"* %90, i64 0, i32 1
  %100 = load i32, i32* %2, align 4
  store i32 %100, i32* %99, align 4
  %101 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %136, label %103

103:                                              ; preds = %98
  %104 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %105 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %104, i64 0, i32 1
  %106 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %105) #17
  %107 = icmp eq i8* %106, null
  br i1 %107, label %108, label %110, !prof !2

108:                                              ; preds = %103
  %109 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %105, i8* %109) #17
  br label %110

110:                                              ; preds = %108, %103
  %111 = phi i8* [ %109, %108 ], [ %106, %103 ]
  %112 = bitcast i8* %111 to %"class.blink::ThreadState"**
  %113 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %113, i64 0, i32 9
  %115 = load i8, i8* %114, align 1, !range !3
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %136, label %117

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %113, i64 0, i32 13
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 1
  store i64 %120, i64* %118, align 8
  %121 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %113, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %122 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %121, align 8
  %123 = load atomic i64, i64* %92 monotonic, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %133, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %122, i64 0, i32 0, i32 0
  %127 = inttoptr i64 %123 to i8*
  %128 = bitcast %"class.blink::MarkingVisitor"* %122 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %129 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %129, i64 5
  %131 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %130, align 8
  tail call void %131(%"class.blink::Visitor"* %126, i8* nonnull %127, i8* %127, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  %132 = load i64, i64* %118, align 8
  br label %133

133:                                              ; preds = %125, %117
  %134 = phi i64 [ %120, %117 ], [ %132, %125 ]
  %135 = add i64 %134, -1
  store i64 %135, i64* %118, align 8
  br label %136

136:                                              ; preds = %98, %110, %133
  %137 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = add i32 %138, 1
  store i32 %139, i32* %137, align 4
  %140 = getelementptr inbounds %"class.WTF::HashTable.3324", %"class.WTF::HashTable.3324"* %0, i64 0, i32 3
  %141 = load i32, i32* %140, align 8
  %142 = add i32 %141, %139
  %143 = shl i32 %142, 1
  %144 = load i32, i32* %12, align 8
  %145 = icmp ult i32 %143, %144
  br i1 %145, label %148, label %146

146:                                              ; preds = %136
  %147 = tail call %"struct.WTF::KeyValuePair.3326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.3324"* %0, %"struct.WTF::KeyValuePair.3326"* %90)
  br label %148

148:                                              ; preds = %59, %136, %146
  %149 = phi i8 [ 1, %136 ], [ 1, %146 ], [ 0, %59 ]
  %150 = phi %"struct.WTF::KeyValuePair.3326"* [ %90, %136 ], [ %147, %146 ], [ %61, %59 ]
  %151 = insertvalue { %"struct.WTF::KeyValuePair.3326"*, i8 } undef, %"struct.WTF::KeyValuePair.3326"* %150, 0
  %152 = insertvalue { %"struct.WTF::KeyValuePair.3326"*, i8 } %151, i8 %149, 1
  ret { %"struct.WTF::KeyValuePair.3326"*, i8 } %152
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #17
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #17
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2796"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERS1_PS8_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.2794"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::HeapVector.3335"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2796"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2796"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.2794"* %0, %"struct.WTF::KeyValuePair.2796"* null)
  %9 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2796"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.2796"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.2796"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.2796"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %176, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.2796"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.2796"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.2796"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #17
  %72 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.2796"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #17
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  tail call void @llvm.trap() #17
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.2796"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #17
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %79, i64 0, i32 1
  %120 = load %"class.blink::HeapVector.3335"*, %"class.blink::HeapVector.3335"** %2, align 8
  %121 = ptrtoint %"class.blink::HeapVector.3335"* %120 to i64
  %122 = bitcast %"class.blink::Member.3333"* %119 to i64*
  store atomic i64 %121, i64* %122 monotonic, align 8
  %123 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %118
  %126 = bitcast %"class.blink::HeapVector.3335"* %120 to i8*
  %127 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %126) #17
  br label %128

128:                                              ; preds = %118, %125
  %129 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %164, label %131

131:                                              ; preds = %128
  %132 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %133 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %132, i64 0, i32 1
  %134 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %133) #17
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %138, !prof !2

136:                                              ; preds = %131
  %137 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %133, i8* %137) #17
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i8* [ %137, %136 ], [ %134, %131 ]
  %140 = bitcast i8* %139 to %"class.blink::ThreadState"**
  %141 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 9
  %143 = load i8, i8* %142, align 1, !range !3
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %164, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 13
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %146, align 8
  %149 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %149, align 8
  %151 = load atomic i64, i64* %122 monotonic, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %150, i64 0, i32 0, i32 0
  %155 = inttoptr i64 %151 to i8*
  %156 = bitcast %"class.blink::MarkingVisitor"* %150 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %157 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %157, i64 5
  %159 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %158, align 8
  tail call void %159(%"class.blink::Visitor"* %154, i8* nonnull %155, i8* %155, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE5TraceEPNS_7VisitorEPKv) #17
  %160 = load i64, i64* %146, align 8
  br label %161

161:                                              ; preds = %153, %145
  %162 = phi i64 [ %148, %145 ], [ %160, %153 ]
  %163 = add i64 %162, -1
  store i64 %163, i64* %146, align 8
  br label %164

164:                                              ; preds = %128, %138, %161
  %165 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %165, align 4
  %168 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 3
  %169 = load i32, i32* %168, align 8
  %170 = add i32 %169, %167
  %171 = shl i32 %170, 1
  %172 = load i32, i32* %12, align 8
  %173 = icmp ult i32 %171, %172
  br i1 %173, label %176, label %174

174:                                              ; preds = %164
  %175 = tail call %"struct.WTF::KeyValuePair.2796"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.2794"* %0, %"struct.WTF::KeyValuePair.2796"* %79)
  br label %176

176:                                              ; preds = %54, %164, %174
  %177 = phi i8 [ 1, %164 ], [ 1, %174 ], [ 0, %54 ]
  %178 = phi %"struct.WTF::KeyValuePair.2796"* [ %79, %164 ], [ %175, %174 ], [ %47, %54 ]
  %179 = insertvalue { %"struct.WTF::KeyValuePair.2796"*, i8 } undef, %"struct.WTF::KeyValuePair.2796"* %178, 0
  %180 = insertvalue { %"struct.WTF::KeyValuePair.2796"*, i8 } %179, i8 %177, 1
  ret { %"struct.WTF::KeyValuePair.2796"*, i8 } %180
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2796"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.2794"*, %"struct.WTF::KeyValuePair.2796"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0), i8* %23, i8* %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #17
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.2796"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE12ExpandBufferEjPSA_Rb(%"class.WTF::HashTable.2794"* %0, i32 %35, %"struct.WTF::KeyValuePair.2796"* %1, i8* nonnull dereferenceable(1) %4) #17
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.4270"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #17
  %43 = bitcast %"class.blink::HeapHashTableBacking.4270"* %42 to %"struct.WTF::KeyValuePair.2796"*
  %44 = call %"struct.WTF::KeyValuePair.2796"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.2794"* %0, %"struct.WTF::KeyValuePair.2796"* %43, i32 %40, %"struct.WTF::KeyValuePair.2796"* %1) #17
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.2796"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.2796"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2796"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE12ExpandBufferEjPSA_Rb(%"class.WTF::HashTable.2794"*, i32, %"struct.WTF::KeyValuePair.2796"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #17
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #17
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0)) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.2796"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.2796"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #17
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.4270"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #17
  %45 = bitcast %"class.blink::HeapHashTableBacking.4270"* %44 to %"struct.WTF::KeyValuePair.2796"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.2796"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.2794"* %0 to %"class.blink::HeapHashTableBacking.4270"**
  store %"class.blink::HeapHashTableBacking.4270"* %44, %"class.blink::HeapHashTableBacking.4270"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.4270", %"class.blink::HeapHashTableBacking.4270"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #17
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.2796"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.2796"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.2794"* %0, %"struct.WTF::KeyValuePair.2796"* %42, i32 %1, %"struct.WTF::KeyValuePair.2796"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.2796"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.2796"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.2796"* %64, %"struct.WTF::KeyValuePair.2796"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %62, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.2796"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.2796"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #17
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.2796"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.3333"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.3333"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %96, i64 %59, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #17
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.2796"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.2796"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2796"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.2794"*, %"struct.WTF::KeyValuePair.2796"*, i32, %"struct.WTF::KeyValuePair.2796"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2794", align 8
  %6 = bitcast %"class.WTF::HashTable.2794"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2794"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2796"* %1, %"struct.WTF::KeyValuePair.2796"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.2796"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.2796"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %19, align 8
  br label %88

21:                                               ; preds = %131
  %22 = bitcast %"class.WTF::HashTable.2794"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %132, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.2796"* [ null, %15 ], [ %134, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.2794"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #17
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.2794"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.2794"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #17
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.2796"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %79, %54
  %57 = phi i64 [ 0, %54 ], [ %80, %79 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %50, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  switch i64 %61, label %62 [
    i64 -1, label %79
    i64 0, label %79
  ]

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #17
  br label %75

75:                                               ; preds = %74, %71
  %76 = bitcast %"struct.WTF::KeyValuePair.2796"* %58 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %50, i64 %57, i32 1
  %78 = bitcast %"class.blink::Member.3333"* %77 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %75, %56, %56
  %80 = add nuw nsw i64 %57, 1
  %81 = icmp eq i64 %80, %55
  br i1 %81, label %82, label %56

82:                                               ; preds = %79, %52
  %83 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %83) #17
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %49, %82
  %85 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, -2147483648
  store i32 %87, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.2796"* %29

88:                                               ; preds = %18, %131
  %89 = phi i32 [ %13, %18 ], [ %132, %131 ]
  %90 = phi %"struct.WTF::KeyValuePair.2796"* [ %20, %18 ], [ %133, %131 ]
  %91 = phi %"struct.WTF::KeyValuePair.2796"* [ null, %18 ], [ %134, %131 ]
  %92 = phi i32 [ 0, %18 ], [ %135, %131 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %90, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"struct.WTF::KeyValuePair.2796"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %98 [
    i64 -1, label %131
    i64 0, label %131
  ]

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %94, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair.2796"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2794"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %99) #17
  %101 = extractvalue { %"struct.WTF::KeyValuePair.2796"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #17
  br label %118

118:                                              ; preds = %98, %114, %117
  %119 = load i64, i64* %96, align 8
  %120 = bitcast %"struct.WTF::KeyValuePair.2796"* %101 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %101, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %90, i64 %93, i32 1
  %123 = bitcast %"class.blink::Member.3333"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.3333"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %19, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %126, i64 %93
  %128 = icmp eq %"struct.WTF::KeyValuePair.2796"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair.2796"* %101, %"struct.WTF::KeyValuePair.2796"* %91
  %130 = load i32, i32* %12, align 8
  br label %131

131:                                              ; preds = %88, %88, %118
  %132 = phi i32 [ %89, %88 ], [ %130, %118 ], [ %89, %88 ]
  %133 = phi %"struct.WTF::KeyValuePair.2796"* [ %90, %88 ], [ %126, %118 ], [ %90, %88 ]
  %134 = phi %"struct.WTF::KeyValuePair.2796"* [ %91, %88 ], [ %129, %118 ], [ %91, %88 ]
  %135 = add i32 %92, 1
  %136 = icmp eq i32 %135, %132
  br i1 %136, label %21, label %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.4270"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.68, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_10HeapVectorINS5_INS_4NodeEEELj0EEEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.4270"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.4270"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_10HeapVectorINS5_INS_4NodeEEELj0EEEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([444 x i8], [444 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_10HeapVectorINS6_INS1_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #17
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_10HeapVectorINS6_INS5_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSG_ISB_EEEESH_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #17
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_4NodeEEELj0EEEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.2796"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %22, i64 %25, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_10HeapVectorINS6_INS5_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSG_ISB_EEEESH_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.2796"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #17
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.2796"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.3333"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE5TraceEPNS_7VisitorEPKv) #17
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.3333"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEE5TraceEPNS_7VisitorEPKv) #17
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2796"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2794"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #17
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.2796"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.2796"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.2796"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.2796"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.2796"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.2796"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.2796"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.2796"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #17
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.2796"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.2796"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.2796"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.2796"*, i8 } undef, %"struct.WTF::KeyValuePair.2796"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.2796"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.2796"*, i8 } %77
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.3338"*, %"class.blink::Member.318"* dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %6, align 8
  %8 = icmp ugt %"class.blink::Member.318"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Member.318"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3338"* %0, i32 %22) #17
  %23 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::Member.318"* %1 to i64
  %26 = ptrtoint %"class.blink::Member.318"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.WTF::Vector.3338", %"class.WTF::Vector.3338"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3338"* %0, i32 %37) #17
  %38 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::Member.318"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::Member.318"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %41, i64 %44
  %46 = bitcast %"class.blink::Member.318"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Member.318"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = inttoptr i64 %47 to i8*
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #17
  br label %54

54:                                               ; preds = %40, %51
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.2794"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.2796"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.2796"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.2796"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.2796"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.2796"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.2796"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"* } undef, %"struct.WTF::KeyValuePair.2796"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"* } %77, %"struct.WTF::KeyValuePair.2796"* %76, 1
  ret { %"struct.WTF::KeyValuePair.2796"*, %"struct.WTF::KeyValuePair.2796"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE5eraseEPKSA_(%"class.WTF::HashTable.2794"*, %"struct.WTF::KeyValuePair.2796"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = bitcast %"struct.WTF::KeyValuePair.2796"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %20, align 8
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.2796", %"struct.WTF::KeyValuePair.2796"* %1, i64 0, i32 1
  %22 = bitcast %"class.blink::Member.3333"* %21 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, 1
  %26 = and i32 %25, 2147483647
  %27 = and i32 %24, -2147483648
  %28 = or i32 %26, %27
  store i32 %28, i32* %23, align 8
  %29 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, -1
  store i32 %31, i32* %29, align 4
  %32 = mul i32 %31, 6
  %33 = getelementptr inbounds %"class.WTF::HashTable.2794", %"class.WTF::HashTable.2794"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp ult i32 %32, %34
  %36 = icmp ugt i32 %34, 8
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %67

38:                                               ; preds = %19
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #17
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !2

43:                                               ; preds = %38
  %44 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #17
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i8* [ %44, %43 ], [ %41, %38 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 6
  %50 = load i8, i8* %49, align 8, !range !3
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 16
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %67, label %56

56:                                               ; preds = %45, %52
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 13
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = load i32, i32* %33, align 8
  %62 = lshr i32 %61, 1
  %63 = zext i32 %62 to i64
  %64 = tail call %"class.blink::HeapHashTableBacking.4270"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_4NodeEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %63) #17
  %65 = bitcast %"class.blink::HeapHashTableBacking.4270"* %64 to %"struct.WTF::KeyValuePair.2796"*
  %66 = tail call %"struct.WTF::KeyValuePair.2796"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10HeapVectorINS4_INS3_4NodeEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS3_13HeapAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.2794"* %0, %"struct.WTF::KeyValuePair.2796"* %65, i32 %62, %"struct.WTF::KeyValuePair.2796"* null) #17
  br label %67

67:                                               ; preds = %52, %19, %60, %56
  ret void
}

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.630"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #17
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #17
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #17
  %47 = bitcast %"class.WTF::Vector.630"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #17
  %51 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #17
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #17
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #17
  %87 = bitcast %"class.WTF::Vector.630"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #17
  %91 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #17
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !2

122:                                              ; preds = %113
  tail call void @llvm.trap() #17
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.61, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.73, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #17
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKDsE6lengthEv(%"class.WTF::StringAppend.3673"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4372", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.3673", %"class.WTF::StringAppend.3673"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.4372"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4372", %"class.WTF::StringTypeAdapter.4372"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.3673", %"class.WTF::StringAppend.3673"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.4372"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i16*, i16** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKDsEC1ES2_(%"class.WTF::StringTypeAdapter.4372"* nonnull %4, i16* %21) #17
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #17
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.69, i64 0, i64 0), i8* %30, i8* %31) #17
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.70, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #17
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #17
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #17
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i64 0, i64 0), i8* %46, i8* %47) #17
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.70, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #17
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #17
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #17
  ret i32 %23
}

declare void @_ZN3WTF17StringTypeAdapterIPKDsEC1ES2_(%"class.WTF::StringTypeAdapter.4372"*, i16*) unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKDsE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4372"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2789"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERiSF_EENS_18HashTableAddResultISB_S2_EEOT0_OT1_(%"class.WTF::HashTable.2786"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2786", %"class.WTF::HashTable.2786"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2789"*, %"struct.WTF::KeyValuePair.2789"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2789"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2789"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.2786"* %0, %"struct.WTF::KeyValuePair.2789"* null)
  %9 = load %"struct.WTF::KeyValuePair.2789"*, %"struct.WTF::KeyValuePair.2789"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2789"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2786", %"class.WTF::HashTable.2786"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.2789"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.2789"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %96, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.2789"* %52, %"struct.WTF::KeyValuePair.2789"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.2789"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.2789"* %59 to i64*
  store i64 0, i64* %71, align 4
  %72 = getelementptr inbounds %"class.WTF::HashTable.2786", %"class.WTF::HashTable.2786"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.2789"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.2789", %"struct.WTF::KeyValuePair.2789"* %81, i64 0, i32 1
  %84 = load i32, i32* %2, align 4
  store i32 %84, i32* %83, align 4
  %85 = getelementptr inbounds %"class.WTF::HashTable.2786", %"class.WTF::HashTable.2786"* %0, i64 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds %"class.WTF::HashTable.2786", %"class.WTF::HashTable.2786"* %0, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, %87
  %91 = shl i32 %90, 1
  %92 = load i32, i32* %12, align 8
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %79
  %95 = tail call %"struct.WTF::KeyValuePair.2789"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.2786"* %0, %"struct.WTF::KeyValuePair.2789"* %81)
  br label %96

96:                                               ; preds = %50, %79, %94
  %97 = phi i8 [ 1, %79 ], [ 1, %94 ], [ 0, %50 ]
  %98 = phi %"struct.WTF::KeyValuePair.2789"* [ %81, %79 ], [ %95, %94 ], [ %52, %50 ]
  %99 = insertvalue { %"struct.WTF::KeyValuePair.2789"*, i8 } undef, %"struct.WTF::KeyValuePair.2789"* %98, 0
  %100 = insertvalue { %"struct.WTF::KeyValuePair.2789"*, i8 } %99, i8 %97, 1
  ret { %"struct.WTF::KeyValuePair.2789"*, i8 } %100
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2789"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.2786"*, %"struct.WTF::KeyValuePair.2789"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2786", %"class.WTF::HashTable.2786"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2786", %"class.WTF::HashTable.2786"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiiEEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.2789"*
  %37 = call %"struct.WTF::KeyValuePair.2789"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiiEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSC_(%"class.WTF::HashTable.2786"* %0, %"struct.WTF::KeyValuePair.2789"* %36, i32 %32, %"struct.WTF::KeyValuePair.2789"* %1) #17
  ret %"struct.WTF::KeyValuePair.2789"* %37
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.3393"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3393"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3393"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %41 = bitcast %"class.WTF::String"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.WTF::String"* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %45 = ptrtoint %"class.WTF::String"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::String"*, %"class.WTF::String"** %46, align 8
  %48 = ptrtoint %"class.WTF::String"* %47 to i64
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %50 = icmp eq %"class.WTF::String"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.WTF::String", %"class.WTF::String"* %49, i64 -1, i32 0, i32 0
  %53 = ptrtoint %"class.WTF::StringImpl"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.WTF::String"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.WTF::String"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 -1
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 -1
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"class.WTF::String"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.WTF::String"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !125

71:                                               ; preds = %59, %51
  %72 = phi %"class.WTF::String"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.WTF::String"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.WTF::String"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.WTF::String"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.WTF::String"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -1
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -1
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 0, i32 0, i32 0
  %82 = bitcast %"class.WTF::String"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.WTF::String"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %81, align 8
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -2
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -2
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 0, i32 0, i32 0
  %88 = bitcast %"class.WTF::String"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::String"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -3
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -3
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 0, i32 0, i32 0
  %94 = bitcast %"class.WTF::String"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.WTF::String"* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %93, align 8
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -4
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -4
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %100 = bitcast %"class.WTF::String"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.WTF::String"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %99, align 8
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -5
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -5
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -6
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -6
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.WTF::String"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -7
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -7
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 0, i32 0, i32 0
  %118 = bitcast %"class.WTF::String"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.WTF::String"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -8
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -8
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %124 = bitcast %"class.WTF::String"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.WTF::String"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  %127 = icmp eq %"class.WTF::String"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.WTF::String"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.WTF::String"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.WTF::String"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.WTF::String"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.WTF::String"*
  %138 = icmp eq %"class.WTF::String"* %133, %137
  br i1 %138, label %160, label %139

139:                                              ; preds = %132, %158
  %140 = phi %"class.WTF::String"* [ %141, %158 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 -1
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #17
  br label %158

158:                                              ; preds = %157, %154, %139
  %159 = icmp eq %"class.WTF::String"* %141, %137
  br i1 %159, label %160, label %139

160:                                              ; preds = %158, %132
  %161 = icmp eq i64 %135, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %160
  %163 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %163) #18
  br label %164

164:                                              ; preds = %160, %162
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKNS1_12AtomicStringEEEEvDpOT_(%"class.std::__1::vector.3393"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3393"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3393"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %43, label %61, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i33
  %53 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #17
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %59, !prof !2

58:                                               ; preds = %49
  tail call void @llvm.trap() #17
  unreachable

59:                                               ; preds = %49
  %60 = trunc i33 %55 to i32
  store i32 %60, i32* %50, align 4
  br label %61

61:                                               ; preds = %34, %44, %59
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %63 = ptrtoint %"class.WTF::String"* %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.3393", %"class.std::__1::vector.3393"* %0, i64 0, i32 0, i32 0
  %65 = load %"class.WTF::String"*, %"class.WTF::String"** %64, align 8
  %66 = ptrtoint %"class.WTF::String"* %65 to i64
  %67 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %68 = icmp eq %"class.WTF::String"* %67, %65
  br i1 %68, label %150, label %69

69:                                               ; preds = %61
  %70 = getelementptr %"class.WTF::String", %"class.WTF::String"* %67, i64 -1, i32 0, i32 0
  %71 = ptrtoint %"class.WTF::StringImpl"** %70 to i64
  %72 = sub i64 %71, %66
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %89, label %77

77:                                               ; preds = %69, %77
  %78 = phi %"class.WTF::String"* [ %81, %77 ], [ %37, %69 ]
  %79 = phi %"class.WTF::String"* [ %82, %77 ], [ %67, %69 ]
  %80 = phi i64 [ %87, %77 ], [ %75, %69 ]
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -1
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -1
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %82, i64 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::String"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.WTF::String"* %81 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %87 = add i64 %80, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %77, !llvm.loop !126

89:                                               ; preds = %77, %69
  %90 = phi %"class.WTF::String"* [ undef, %69 ], [ %81, %77 ]
  %91 = phi %"class.WTF::String"* [ %37, %69 ], [ %81, %77 ]
  %92 = phi %"class.WTF::String"* [ %67, %69 ], [ %82, %77 ]
  %93 = icmp ult i64 %72, 56
  br i1 %93, label %146, label %94

94:                                               ; preds = %89, %94
  %95 = phi %"class.WTF::String"* [ %139, %94 ], [ %91, %89 ]
  %96 = phi %"class.WTF::String"* [ %140, %94 ], [ %92, %89 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -1
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -1
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %100 = bitcast %"class.WTF::String"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.WTF::String"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %99, align 8
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -2
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -2
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -3
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -3
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.WTF::String"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -4
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -4
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 0, i32 0, i32 0
  %118 = bitcast %"class.WTF::String"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.WTF::String"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -5
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -5
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %124 = bitcast %"class.WTF::String"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.WTF::String"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  %127 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -6
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -6
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %128, i64 0, i32 0, i32 0
  %130 = bitcast %"class.WTF::String"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.WTF::String"* %127 to i64*
  store i64 %131, i64* %132, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %129, align 8
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -7
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -7
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %134, i64 0, i32 0, i32 0
  %136 = bitcast %"class.WTF::String"* %134 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.WTF::String"* %133 to i64*
  store i64 %137, i64* %138, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %135, align 8
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 -8
  %140 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 -8
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 0, i32 0, i32 0
  %142 = bitcast %"class.WTF::String"* %140 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.WTF::String"* %139 to i64*
  store i64 %143, i64* %144, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %141, align 8
  %145 = icmp eq %"class.WTF::String"* %140, %65
  br i1 %145, label %146, label %94

146:                                              ; preds = %94, %89
  %147 = phi %"class.WTF::String"* [ %90, %89 ], [ %139, %94 ]
  %148 = load i64, i64* %6, align 8
  %149 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %150

150:                                              ; preds = %61, %146
  %151 = phi %"class.WTF::String"* [ %149, %146 ], [ %65, %61 ]
  %152 = phi %"class.WTF::String"* [ %147, %146 ], [ %37, %61 ]
  %153 = phi i64 [ %148, %146 ], [ %66, %61 ]
  %154 = ptrtoint %"class.WTF::String"* %152 to i64
  store i64 %154, i64* %6, align 8
  store i64 %63, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %155 = inttoptr i64 %153 to %"class.WTF::String"*
  %156 = icmp eq %"class.WTF::String"* %151, %155
  br i1 %156, label %178, label %157

157:                                              ; preds = %150, %176
  %158 = phi %"class.WTF::String"* [ %159, %176 ], [ %151, %150 ]
  %159 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %158, i64 -1
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %159, i64 0, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #17
  br label %176

176:                                              ; preds = %175, %172, %157
  %177 = icmp eq %"class.WTF::String"* %159, %155
  br i1 %177, label %178, label %157

178:                                              ; preds = %176, %150
  %179 = icmp eq i64 %153, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %178
  %181 = inttoptr i64 %153 to i8*
  tail call void @_ZdlPv(i8* %181) #18
  br label %182

182:                                              ; preds = %178, %180
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiiEENS_18HashTableAddResultIS7_iEEOT0_OT1_(%"class.WTF::HashTable.2782"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2782", %"class.WTF::HashTable.2782"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi(%"class.WTF::HashTable.2782"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2782", %"class.WTF::HashTable.2782"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %11, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %75, label %35

35:                                               ; preds = %10
  %36 = xor i32 %29, -1
  %37 = lshr i32 %27, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %35, %56
  %50 = phi i32 [ %33, %35 ], [ %64, %56 ]
  %51 = phi i32* [ %32, %35 ], [ %63, %56 ]
  %52 = phi i32* [ null, %35 ], [ %58, %56 ]
  %53 = phi i64 [ %31, %35 ], [ %62, %56 ]
  %54 = phi i64 [ 0, %35 ], [ %60, %56 ]
  %55 = icmp eq i32 %50, %16
  br i1 %55, label %89, label %56

56:                                               ; preds = %49
  %57 = icmp eq i32 %50, -1
  %58 = select i1 %57, i32* %51, i32* %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %48, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %15
  %63 = getelementptr inbounds i32, i32* %11, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %56
  %67 = icmp eq i32* %58, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %66
  store i32 0, i32* %58, align 4
  %69 = getelementptr inbounds %"class.WTF::HashTable.2782", %"class.WTF::HashTable.2782"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, 2147483647
  %72 = and i32 %71, 2147483647
  %73 = and i32 %70, -2147483648
  %74 = or i32 %72, %73
  store i32 %74, i32* %69, align 8
  br label %75

75:                                               ; preds = %10, %66, %68
  %76 = phi i32* [ %58, %68 ], [ %63, %66 ], [ %32, %10 ]
  %77 = load i32, i32* %2, align 4
  store i32 %77, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::HashTable.2782", %"class.WTF::HashTable.2782"* %0, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = getelementptr inbounds %"class.WTF::HashTable.2782", %"class.WTF::HashTable.2782"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, %80
  %84 = shl i32 %83, 1
  %85 = load i32, i32* %12, align 8
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %75
  %88 = tail call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi(%"class.WTF::HashTable.2782"* %0, i32* %76)
  br label %89

89:                                               ; preds = %49, %75, %87
  %90 = phi i8 [ 1, %75 ], [ 1, %87 ], [ 0, %49 ]
  %91 = phi i32* [ %76, %75 ], [ %88, %87 ], [ %51, %49 ]
  %92 = insertvalue { i32*, i8 } undef, i32* %91, 0
  %93 = insertvalue { i32*, i8 } %92, i8 %90, 1
  ret { i32*, i8 } %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi(%"class.WTF::HashTable.2782"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2782", %"class.WTF::HashTable.2782"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2782", %"class.WTF::HashTable.2782"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #17
  %36 = bitcast i8* %35 to i32*
  %37 = call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_(%"class.WTF::HashTable.2782"* %0, i32* %36, i32 %32, i32* %1) #17
  ret i32* %37
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3DOM11BackendNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3408"*, %"class.std::__1::unique_ptr.3410"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3408", %"class.std::__1::vector.3408"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3410"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3408"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3408"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3408", %"class.std::__1::vector.3408"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3410"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3410"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3410"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3410"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3410"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::DOM::BackendNode"* null, %"class.blink::protocol::DOM::BackendNode"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3410"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3410"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3408", %"class.std::__1::vector.3408"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3410"*, %"class.std::__1::unique_ptr.3410"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3410"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3410"*, %"class.std::__1::unique_ptr.3410"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3410"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::DOM::BackendNode"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3410"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3410"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3410"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::DOM::BackendNode"* null, %"class.blink::protocol::DOM::BackendNode"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3410"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !127

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3410"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3410"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3410"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3410"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3410"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3410"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::DOM::BackendNode"* null, %"class.blink::protocol::DOM::BackendNode"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3410"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3410"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::DOM::BackendNode"* null, %"class.blink::protocol::DOM::BackendNode"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3410"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3410"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::DOM::BackendNode"* null, %"class.blink::protocol::DOM::BackendNode"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3410"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3410"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::DOM::BackendNode"* null, %"class.blink::protocol::DOM::BackendNode"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3410"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3410"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::DOM::BackendNode"* null, %"class.blink::protocol::DOM::BackendNode"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3410"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3410"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::DOM::BackendNode"* null, %"class.blink::protocol::DOM::BackendNode"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3410"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3410"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::DOM::BackendNode"* null, %"class.blink::protocol::DOM::BackendNode"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3410"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3410"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::DOM::BackendNode"* null, %"class.blink::protocol::DOM::BackendNode"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3410"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3410"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3410"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3410"*, %"class.std::__1::unique_ptr.3410"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3410"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3410"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3410"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3410"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3410"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.3410"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3410", %"class.std::__1::unique_ptr.3410"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::DOM::BackendNode"*, %"class.blink::protocol::DOM::BackendNode"** %142, align 8
  store %"class.blink::protocol::DOM::BackendNode"* null, %"class.blink::protocol::DOM::BackendNode"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::DOM::BackendNode"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::DOM::BackendNode"* %143 to void (%"class.blink::protocol::DOM::BackendNode"*)***
  %147 = load void (%"class.blink::protocol::DOM::BackendNode"*)**, void (%"class.blink::protocol::DOM::BackendNode"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::DOM::BackendNode"*)*, void (%"class.blink::protocol::DOM::BackendNode"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::DOM::BackendNode"*)*, void (%"class.blink::protocol::DOM::BackendNode"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::DOM::BackendNode"* nonnull %143) #17
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.3410"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_26InspectorRevalidateDOMTaskEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_26InspectorRevalidateDOMTaskEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_26InspectorRevalidateDOMTaskEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_26InspectorRevalidateDOMTaskEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26InspectorRevalidateDOMTaskEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_26InspectorRevalidateDOMTaskEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  %3 = bitcast i8* %2 to %"class.blink::TimerBase"*
  tail call void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_26InspectorRevalidateDOMTaskEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17InspectorDOMAgent23InspectorSourceLocationEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17InspectorDOMAgent23InspectorSourceLocationEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink17InspectorDOMAgent23InspectorSourceLocationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 8
  %4 = bitcast i8* %3 to %"class.blink::SourceLocation"**
  %5 = load %"class.blink::SourceLocation"*, %"class.blink::SourceLocation"** %4, align 8
  store %"class.blink::SourceLocation"* null, %"class.blink::SourceLocation"** %4, align 8
  %6 = icmp eq %"class.blink::SourceLocation"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %5) #17
  %8 = bitcast %"class.blink::SourceLocation"* %5 to i8*
  tail call void @free(i8* %8) #17
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InspectorDOMAgent23InspectorSourceLocation5TraceEPNS_7VisitorE(%"class.blink::InspectorDOMAgent::InspectorSourceLocation"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2780"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERPS3_PS8_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.2778"*, %"class.blink::Node"** dereferenceable(8), %"class.blink::InspectorDOMAgent::InspectorSourceLocation"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2780"*, %"struct.WTF::KeyValuePair.2780"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2780"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2780"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.2778"* %0, %"struct.WTF::KeyValuePair.2780"* null)
  %9 = load %"struct.WTF::KeyValuePair.2780"*, %"struct.WTF::KeyValuePair.2780"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2780"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Node"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.2780"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.2780"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %153, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.2780"* %60, %"struct.WTF::KeyValuePair.2780"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.2780"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.2780"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #17
  %80 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::Node"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.2780"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::Node"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.2780"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::Node"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #17
  br label %97

97:                                               ; preds = %94, %87
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %89, i64 0, i32 1
  %99 = load %"class.blink::InspectorDOMAgent::InspectorSourceLocation"*, %"class.blink::InspectorDOMAgent::InspectorSourceLocation"** %2, align 8
  %100 = ptrtoint %"class.blink::InspectorDOMAgent::InspectorSourceLocation"* %99 to i64
  %101 = bitcast %"class.blink::Member.3995"* %98 to i64*
  store atomic i64 %100, i64* %101 monotonic, align 8
  %102 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %97
  %105 = bitcast %"class.blink::InspectorDOMAgent::InspectorSourceLocation"* %99 to i8*
  %106 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #17
  br label %107

107:                                              ; preds = %97, %104
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_4NodeEEENS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_ISA_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2780"* %89) #17
  %108 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %0, i64 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, %110
  %114 = shl i32 %113, 1
  %115 = load i32, i32* %12, align 8
  %116 = icmp ult i32 %114, %115
  br i1 %116, label %119, label %117

117:                                              ; preds = %107
  %118 = tail call %"struct.WTF::KeyValuePair.2780"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.2778"* %0, %"struct.WTF::KeyValuePair.2780"* %89)
  br label %153

119:                                              ; preds = %107
  %120 = mul i32 %110, 6
  %121 = icmp ult i32 %120, %115
  %122 = icmp ugt i32 %115, 8
  %123 = and i1 %121, %122
  br i1 %123, label %124, label %153

124:                                              ; preds = %119
  %125 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %126 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %125, i64 0, i32 1
  %127 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %126) #17
  %128 = icmp eq i8* %127, null
  br i1 %128, label %129, label %131, !prof !2

129:                                              ; preds = %124
  %130 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %126, i8* %130) #17
  br label %131

131:                                              ; preds = %129, %124
  %132 = phi i8* [ %130, %129 ], [ %127, %124 ]
  %133 = bitcast i8* %132 to %"class.blink::ThreadState"**
  %134 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %134, i64 0, i32 6
  %136 = load i8, i8* %135, align 8, !range !3
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %134, i64 0, i32 16
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %153, label %142

142:                                              ; preds = %131, %138
  %143 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %134, i64 0, i32 13
  %144 = load i64, i64* %143, align 8
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %153

146:                                              ; preds = %142
  %147 = load i32, i32* %12, align 8
  %148 = lshr i32 %147, 1
  %149 = zext i32 %148 to i64
  %150 = tail call %"class.blink::HeapHashTableBacking.4383"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64 %149) #17
  %151 = bitcast %"class.blink::HeapHashTableBacking.4383"* %150 to %"struct.WTF::KeyValuePair.2780"*
  %152 = tail call %"struct.WTF::KeyValuePair.2780"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.2778"* %0, %"struct.WTF::KeyValuePair.2780"* %151, i32 %148, %"struct.WTF::KeyValuePair.2780"* %89) #17
  br label %153

153:                                              ; preds = %58, %138, %119, %117, %146, %142
  %154 = phi i8 [ 1, %142 ], [ 1, %146 ], [ 1, %117 ], [ 1, %119 ], [ 1, %138 ], [ 0, %58 ]
  %155 = phi %"struct.WTF::KeyValuePair.2780"* [ %89, %142 ], [ %152, %146 ], [ %118, %117 ], [ %89, %119 ], [ %89, %138 ], [ %60, %58 ]
  %156 = insertvalue { %"struct.WTF::KeyValuePair.2780"*, i8 } undef, %"struct.WTF::KeyValuePair.2780"* %155, 0
  %157 = insertvalue { %"struct.WTF::KeyValuePair.2780"*, i8 } %156, i8 %154, 1
  ret { %"struct.WTF::KeyValuePair.2780"*, i8 } %157
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2780"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.2778"*, %"struct.WTF::KeyValuePair.2780"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i64 0, i64 0), i8* %23, i8* %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #17
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.2780"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE12ExpandBufferEjPSA_Rb(%"class.WTF::HashTable.2778"* %0, i32 %35, %"struct.WTF::KeyValuePair.2780"* %1, i8* nonnull dereferenceable(1) %4) #17
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.4383"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #17
  %43 = bitcast %"class.blink::HeapHashTableBacking.4383"* %42 to %"struct.WTF::KeyValuePair.2780"*
  %44 = call %"struct.WTF::KeyValuePair.2780"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.2778"* %0, %"struct.WTF::KeyValuePair.2780"* %43, i32 %40, %"struct.WTF::KeyValuePair.2780"* %1) #17
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.2780"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.2780"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_4NodeEEENS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_ISA_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2780"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %48, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #17
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #17
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %0, i64 0, i32 1
  %26 = bitcast %"class.blink::Member.3995"* %25 to i8*
  %27 = bitcast %"struct.WTF::KeyValuePair.2780"* %0 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %18
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %24, i8* nonnull %31, i8* %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  br label %36

36:                                               ; preds = %18, %30
  %37 = load atomic i64, i64* %27 monotonic, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to i8*
  %41 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 9
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %24, i8* %40, i8* %26, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink17MemberTraceTraitsINS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEE5TraceEPNS_7VisitorEPKv) #17
  br label %45

45:                                               ; preds = %36, %39
  %46 = load i64, i64* %19, align 8
  %47 = add i64 %46, -1
  store i64 %47, i64* %19, align 8
  br label %48

48:                                               ; preds = %1, %11, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17MemberTraceTraitsINS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17InspectorDOMAgent23InspectorSourceLocationEE5TraceEPNS_7VisitorEPKv) #17
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2780"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE12ExpandBufferEjPSA_Rb(%"class.WTF::HashTable.2778"*, i32, %"struct.WTF::KeyValuePair.2780"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #17
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #17
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0)) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.2780"*, %"struct.WTF::KeyValuePair.2780"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.2780"* %32, null
  br i1 %33, label %80, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.2780"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #17
  br i1 %38, label %39, label %80

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.2780"*, %"struct.WTF::KeyValuePair.2780"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.4383"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #17
  %45 = bitcast %"class.blink::HeapHashTableBacking.4383"* %44 to %"struct.WTF::KeyValuePair.2780"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %77, %39
  %48 = phi %"struct.WTF::KeyValuePair.2780"* [ null, %39 ], [ %65, %77 ]
  %49 = bitcast %"class.WTF::HashTable.2778"* %0 to %"class.blink::HeapHashTableBacking.4383"**
  store %"class.blink::HeapHashTableBacking.4383"* %44, %"class.blink::HeapHashTableBacking.4383"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.4383", %"class.blink::HeapHashTableBacking.4383"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #17
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.2780"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.2780"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.2778"* %0, %"struct.WTF::KeyValuePair.2780"* %42, i32 %1, %"struct.WTF::KeyValuePair.2780"* %48)
  br label %80

58:                                               ; preds = %39, %77
  %59 = phi i64 [ %78, %77 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.2780"* [ %65, %77 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.2780"*, %"struct.WTF::KeyValuePair.2780"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.2780"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.2780"* %64, %"struct.WTF::KeyValuePair.2780"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.2780"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.2780"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %77

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.2780"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %61, i64 %59, i32 1
  %74 = bitcast %"class.blink::Member.3995"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.3995"* %72 to i64*
  store i64 %75, i64* %76, align 8
  br label %77

77:                                               ; preds = %68, %70
  %78 = add nuw nsw i64 %59, 1
  %79 = icmp eq i64 %78, %43
  br i1 %79, label %47, label %58

80:                                               ; preds = %34, %30, %55
  %81 = phi %"struct.WTF::KeyValuePair.2780"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.2780"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2780"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.2778"*, %"struct.WTF::KeyValuePair.2780"*, i32, %"struct.WTF::KeyValuePair.2780"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2778", align 8
  %6 = bitcast %"class.WTF::HashTable.2778"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2778"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2780"* %1, %"struct.WTF::KeyValuePair.2780"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.2780"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.2780"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.2780"*, %"struct.WTF::KeyValuePair.2780"** %19, align 8
  br label %57

21:                                               ; preds = %82
  %22 = bitcast %"class.WTF::HashTable.2778"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %83, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.2780"* [ null, %15 ], [ %85, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.2778"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #17
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.2778"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.2778"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #17
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.2780"*
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPSA_j(%"struct.WTF::KeyValuePair.2780"* nonnull %52, i32 %41) #17
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.2780"* %29

57:                                               ; preds = %18, %82
  %58 = phi i32 [ %13, %18 ], [ %83, %82 ]
  %59 = phi %"struct.WTF::KeyValuePair.2780"* [ %20, %18 ], [ %84, %82 ]
  %60 = phi %"struct.WTF::KeyValuePair.2780"* [ null, %18 ], [ %85, %82 ]
  %61 = phi i32 [ 0, %18 ], [ %86, %82 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.2780"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %82
    i64 0, label %82
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.2780"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.2778"* nonnull %5, %"class.blink::WeakMember.1497"* dereferenceable(8) %67) #17
  %69 = extractvalue { %"struct.WTF::KeyValuePair.2780"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.2780"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %59, i64 %62, i32 1
  %74 = bitcast %"class.blink::Member.3995"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.3995"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"struct.WTF::KeyValuePair.2780"*, %"struct.WTF::KeyValuePair.2780"** %19, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %77, i64 %62
  %79 = icmp eq %"struct.WTF::KeyValuePair.2780"* %78, %3
  %80 = select i1 %79, %"struct.WTF::KeyValuePair.2780"* %69, %"struct.WTF::KeyValuePair.2780"* %60
  %81 = load i32, i32* %12, align 8
  br label %82

82:                                               ; preds = %57, %57, %66
  %83 = phi i32 [ %58, %57 ], [ %81, %66 ], [ %58, %57 ]
  %84 = phi %"struct.WTF::KeyValuePair.2780"* [ %59, %57 ], [ %77, %66 ], [ %59, %57 ]
  %85 = phi %"struct.WTF::KeyValuePair.2780"* [ %60, %57 ], [ %80, %66 ], [ %60, %57 ]
  %86 = add i32 %61, 1
  %87 = icmp eq i32 %86, %83
  br i1 %87, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.4383"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.68, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS1_12KeyValuePairIS5_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.4383"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.4383"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS1_12KeyValuePairIS5_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([535 x i8], [535 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS6_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberINS3_4NodeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberINS3_4NodeEEENS_12KeyValuePairIS6_NS3_6MemberINS3_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.2780"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #17
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %69, %20
  ret void

33:                                               ; preds = %69, %30
  %34 = phi i64 [ 0, %30 ], [ %70, %69 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.2780"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %69
    i64 0, label %69
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.3995"* %40 to i8*
  %42 = inttoptr i64 %38 to i8*
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %0, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 9
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* %42, i8* %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink17MemberTraceTraitsINS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEE5TraceEPNS_7VisitorEPKv) #17
  br label %69

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %69
    i64 0, label %69
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.3995"* %52 to i8*
  %54 = load atomic i64, i64* %36 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #17
  br label %61

61:                                               ; preds = %56, %51
  %62 = load atomic i64, i64* %36 monotonic, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %61
  %65 = inttoptr i64 %62 to i8*
  %66 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %67 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, i64 9
  %68 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, align 8
  tail call void %68(%"class.blink::Visitor"* %0, i8* %65, i8* %53, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink17MemberTraceTraitsINS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEE5TraceEPNS_7VisitorEPKv) #17
  br label %69

69:                                               ; preds = %49, %49, %37, %37, %64, %61, %39
  %70 = add nuw nsw i64 %34, 1
  %71 = icmp eq i64 %70, %23
  br i1 %71, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2780"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.2778"*, %"class.blink::WeakMember.1497"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2780"*, %"struct.WTF::KeyValuePair.2780"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2778", %"class.WTF::HashTable.2778"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::WeakMember.1497"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.2780"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Node"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.2780"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.2780"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.2780"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.2780"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.2780"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Node"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Node"* %63, inttoptr (i64 -1 to %"class.blink::Node"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.2780"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.2780"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.2780"*, i8 } undef, %"struct.WTF::KeyValuePair.2780"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.2780"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.2780"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_4NodeEEENS_12KeyValuePairIS4_NS1_6MemberINS1_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPSA_j(%"struct.WTF::KeyValuePair.2780"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %39, label %5

5:                                                ; preds = %2
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #17
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #17
  br label %12

12:                                               ; preds = %5, %10
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 9
  %17 = load i8, i8* %16, align 1, !range !3
  %18 = icmp ne i8 %17, 0
  %19 = icmp ne i32 %1, 0
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %39

21:                                               ; preds = %12
  %22 = zext i32 %1 to i64
  br label %23

23:                                               ; preds = %36, %21
  %24 = phi i64 [ 0, %21 ], [ %37, %36 ]
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %0, i64 %24
  %26 = bitcast %"struct.WTF::KeyValuePair.2780"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %28 [
    i64 -1, label %36
    i64 0, label %36
  ]

28:                                               ; preds = %23
  store atomic i64 -1, i64* %26 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #17
  br label %33

33:                                               ; preds = %28, %31
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %0, i64 %24, i32 1
  %35 = bitcast %"class.blink::Member.3995"* %34 to i64*
  store atomic i64 0, i64* %35 monotonic, align 8
  br label %36

36:                                               ; preds = %23, %23, %33
  %37 = add nuw nsw i64 %24, 1
  %38 = icmp eq i64 %37, %22
  br i1 %38, label %39, label %23

39:                                               ; preds = %36, %12, %2
  %40 = bitcast %"struct.WTF::KeyValuePair.2780"* %0 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* %40) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.56, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink15InspectableNode3getEN2v85LocalINS1_7ContextEEE(%"class.blink::InspectableNode"*, %"class.v8::Context"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectableNode", %"class.blink::InspectableNode"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = tail call %"class.blink::Node"* @_ZN5blink10DOMNodeIds9NodeForIdEi(i32 %4) #17
  %6 = tail call %"class.v8::Value"* @_ZN5blink11NodeV8ValueEN2v85LocalINS0_7ContextEEEPNS_4NodeE(%"class.v8::Context"* %1, %"class.blink::Node"* %5) #17
  ret %"class.v8::Value"* %6
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15InspectableNodeD0Ev(%"class.blink::InspectableNode"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::InspectableNode"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector18V8InspectorSession11InspectableD2Ev(%"class.v8_inspector::V8InspectorSession::Inspectable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.v8::Value"* @_ZN5blink11NodeV8ValueEN2v85LocalINS0_7ContextEEEPNS_4NodeE(%"class.v8::Context"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectedFrames"*
  tail call void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

declare void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_4NodeEEENS_12KeyValuePairIS5_NS2_6MemberINS2_17InspectorDOMAgent23InspectorSourceLocationEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.2780"**
  %4 = load %"struct.WTF::KeyValuePair.2780"*, %"struct.WTF::KeyValuePair.2780"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.2780"* %4, null
  br i1 %5, label %64, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %4, i64 %10
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %11, i64 -1
  %13 = icmp ult %"struct.WTF::KeyValuePair.2780"* %12, %4
  br i1 %13, label %64, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %60
  %20 = phi %"struct.WTF::KeyValuePair.2780"* [ %12, %14 ], [ %61, %60 ]
  %21 = phi %"struct.WTF::KeyValuePair.2780"* [ %11, %14 ], [ %20, %60 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = ptrtoint %"class.blink::Node"* %23 to i64
  switch i64 %24, label %25 [
    i64 -1, label %60
    i64 0, label %60
  ]

25:                                               ; preds = %19
  %26 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %27 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %26, i64 0, i32 1
  %28 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %27) #17
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %32, !prof !2

30:                                               ; preds = %25
  %31 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %27, i8* %31) #17
  br label %32

32:                                               ; preds = %30, %25
  %33 = phi i8* [ %31, %30 ], [ %28, %25 ]
  %34 = bitcast i8* %33 to %"class.blink::ThreadState"**
  %35 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %34, align 8
  %36 = icmp eq %"class.blink::ThreadState"* %35, null
  br i1 %36, label %60, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 -1, i32 6
  %39 = bitcast %"class.blink::Member.322"* %38 to %"class.blink::HeapObjectHeader"*
  %40 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %39, i64 0, i32 2
  %41 = load i16, i16* %40, align 2
  %42 = and i16 %41, 1
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %44, label %60

44:                                               ; preds = %37
  %45 = bitcast %"struct.WTF::KeyValuePair.2780"* %20 to i64*
  store atomic i64 -1, i64* %45 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #17
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %21, i64 -1, i32 1
  %52 = bitcast %"class.blink::Member.3995"* %51 to i64*
  store atomic i64 0, i64* %52 monotonic, align 8
  %53 = load i32, i32* %16, align 8
  %54 = add i32 %53, 1
  %55 = and i32 %54, 2147483647
  %56 = and i32 %53, -2147483648
  %57 = or i32 %55, %56
  store i32 %57, i32* %16, align 8
  %58 = load i32, i32* %18, align 4
  %59 = add i32 %58, -1
  store i32 %59, i32* %18, align 4
  br label %60

60:                                               ; preds = %19, %19, %32, %37, %50
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %20, i64 -1
  %62 = load %"struct.WTF::KeyValuePair.2780"*, %"struct.WTF::KeyValuePair.2780"** %3, align 8
  %63 = icmp ult %"struct.WTF::KeyValuePair.2780"* %61, %62
  br i1 %63, label %64, label %19

64:                                               ; preds = %60, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_4NodeEEENS2_12KeyValuePairIS6_NS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE1EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.2780"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #17
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %60, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %57, %30
  %33 = phi i64 [ 0, %30 ], [ %58, %57 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.2780"* %34 to i64*
  br i1 %28, label %36, label %45

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %57
    i64 0, label %57
  ]

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %3, i64 %33, i32 1
  %40 = bitcast %"class.blink::Member.3995"* %39 to i8*
  %41 = inttoptr i64 %37 to i8*
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 9
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %0, i8* %41, i8* %40, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink17MemberTraceTraitsINS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEE5TraceEPNS_7VisitorEPKv) #17
  br label %57

45:                                               ; preds = %32
  %46 = load i64, i64* %35, align 8
  switch i64 %46, label %47 [
    i64 -1, label %57
    i64 0, label %57
  ]

47:                                               ; preds = %45
  %48 = load atomic i64, i64* %35 monotonic, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %57, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.2780", %"struct.WTF::KeyValuePair.2780"* %3, i64 %33, i32 1
  %52 = bitcast %"class.blink::Member.3995"* %51 to i8*
  %53 = inttoptr i64 %48 to i8*
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 9
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %0, i8* %53, i8* %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink17MemberTraceTraitsINS_6MemberINS_17InspectorDOMAgent23InspectorSourceLocationEEEE5TraceEPNS_7VisitorEPKv) #17
  br label %57

57:                                               ; preds = %50, %47, %45, %45, %38, %36, %36
  %58 = add nuw nsw i64 %33, 1
  %59 = icmp eq i64 %58, %23
  br i1 %59, label %60, label %32

60:                                               ; preds = %57, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CoreProbeSink"*
  tail call void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

declare void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZN5blink8protocol3DOM10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"*, %"class.blink::protocol::DOM::Backend"*) local_unnamed_addr #1

declare void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorSessionState"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }
attributes #20 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink17InspectorDOMAgent6enableEv: argument 0"}
!16 = distinct !{!16, !"_ZN5blink17InspectorDOMAgent6enableEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink17InspectorDOMAgent6enableEv: argument 0"}
!19 = distinct !{!19, !"_ZN5blink17InspectorDOMAgent6enableEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE: argument 0"}
!22 = distinct !{!22, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE"}
!23 = !{!24, !26, !28}
!24 = distinct !{!24, !25, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN3WTF7HashMapIN5blink13CSSPropertyIDENS3_7HashSetINS3_6StringENS3_10StringHashENS3_10HashTraitsIS8_EENS3_18PartitionAllocatorEEENS3_7IntHashIS6_EENSA_IS6_EENSA_ISD_EESC_EEPNS5_4NodeEEJNS3_17UnretainedWrapperISI_EEEEEDcOT0_DpOT1_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN3WTF7HashMapIN5blink13CSSPropertyIDENS3_7HashSetINS3_6StringENS3_10StringHashENS3_10HashTraitsIS8_EENS3_18PartitionAllocatorEEENS3_7IntHashIS6_EENSA_IS6_EENSA_ISD_EESC_EEPNS5_4NodeEEJNS3_17UnretainedWrapperISI_EEEEEDcOT0_DpOT1_"}
!26 = distinct !{!26, !27, !"_ZN4base13BindRepeatingIRPFbPKN3WTF7HashMapIN5blink13CSSPropertyIDENS1_7HashSetINS1_6StringENS1_10StringHashENS1_10HashTraitsIS6_EENS1_18PartitionAllocatorEEENS1_7IntHashIS4_EENS8_IS4_EENS8_ISB_EESA_EEPNS3_4NodeEEJNS1_17UnretainedWrapperISG_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOST_DpOSU_: argument 0"}
!27 = distinct !{!27, !"_ZN4base13BindRepeatingIRPFbPKN3WTF7HashMapIN5blink13CSSPropertyIDENS1_7HashSetINS1_6StringENS1_10StringHashENS1_10HashTraitsIS6_EENS1_18PartitionAllocatorEEENS1_7IntHashIS4_EENS8_IS4_EENS8_ISB_EESA_EEPNS3_4NodeEEJNS1_17UnretainedWrapperISG_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOST_DpOSU_"}
!28 = distinct !{!28, !29, !"_ZN3WTF13BindRepeatingIPFbPKNS_7HashMapIN5blink13CSSPropertyIDENS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEENS_7IntHashIS3_EENS7_IS3_EENS7_ISA_EES9_EEPNS2_4NodeEEJNS_17UnretainedWrapperISF_EEEFbSJ_EEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!29 = distinct !{!29, !"_ZN3WTF13BindRepeatingIPFbPKNS_7HashMapIN5blink13CSSPropertyIDENS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEENS_7IntHashIS3_EENS7_IS3_EENS7_ISA_EES9_EEPNS2_4NodeEEJNS_17UnretainedWrapperISF_EEEFbSJ_EEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN4absl13make_optionalIN5blink15CSSPropertyNameEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_: argument 0"}
!32 = distinct !{!32, !"_ZN4absl13make_optionalIN5blink15CSSPropertyNameEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN4absl13make_optionalIN5blink15CSSPropertyNameEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_: argument 0"}
!35 = distinct !{!35, !"_ZN4absl13make_optionalIN5blink15CSSPropertyNameEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE: argument 0"}
!38 = distinct !{!38, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE: argument 0"}
!41 = distinct !{!41, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN5blink17InspectorDOMAgent17setAttributeValueEiRKN3WTF6StringES4_: argument 0"}
!44 = distinct !{!44, !"_ZN5blink17InspectorDOMAgent17setAttributeValueEiRKN3WTF6StringES4_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN5blink17InspectorDOMAgent15removeAttributeEiRKN3WTF6StringE: argument 0"}
!47 = distinct !{!47, !"_ZN5blink17InspectorDOMAgent15removeAttributeEiRKN3WTF6StringE"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!50 = distinct !{!50, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!51 = !{!52, !49}
!52 = distinct !{!52, !53, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!53 = distinct !{!53, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!56 = distinct !{!56, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!57 = !{!58, !55}
!58 = distinct !{!58, !59, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!59 = distinct !{!59, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!62 = distinct !{!62, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!63 = !{!64, !61}
!64 = distinct !{!64, !65, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!65 = distinct !{!65, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!68 = distinct !{!68, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!69 = !{!70, !67}
!70 = distinct !{!70, !71, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!71 = distinct !{!71, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!74 = distinct !{!74, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!75 = !{!76, !73}
!76 = distinct !{!76, !77, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!77 = distinct !{!77, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv: argument 0"}
!80 = distinct !{!80, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!83 = distinct !{!83, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!86 = distinct !{!86, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!87 = !{!88, !85}
!88 = distinct !{!88, !89, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!89 = distinct !{!89, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZN5blink17InspectorDOMAgent20discardSearchResultsERKN3WTF6StringE: argument 0"}
!92 = distinct !{!92, !"_ZN5blink17InspectorDOMAgent20discardSearchResultsERKN3WTF6StringE"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZN5blink17InspectorDOMAgent17markUndoableStateEv: argument 0"}
!95 = distinct !{!95, !"_ZN5blink17InspectorDOMAgent17markUndoableStateEv"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZN5blink17InspectorDOMAgent25setNodeStackTracesEnabledEb: argument 0"}
!98 = distinct !{!98, !"_ZN5blink17InspectorDOMAgent25setNodeStackTracesEnabledEb"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE: argument 0"}
!101 = distinct !{!101, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZN5blink17InspectorDOMAgent11requestNodeERKN3WTF6StringEPi: argument 0"}
!104 = distinct !{!104, !"_ZN5blink17InspectorDOMAgent11requestNodeERKN3WTF6StringEPi"}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE: argument 0"}
!107 = distinct !{!107, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE: argument 0"}
!110 = distinct !{!110, !"_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZN5blink18WrapWeakPersistentINS_26InspectorRevalidateDOMTaskEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!113 = distinct !{!113, !"_ZN5blink18WrapWeakPersistentINS_26InspectorRevalidateDOMTaskEEENS_14WeakPersistentIT_EEPS3_"}
!114 = !{!115, !117, !119}
!115 = distinct !{!115, !116, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_26InspectorRevalidateDOMTaskEEJS6_NS4_14WeakPersistentIS7_EEEEEDcOT0_DpOT1_: argument 0"}
!116 = distinct !{!116, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS4_26InspectorRevalidateDOMTaskEEJS6_NS4_14WeakPersistentIS7_EEEEEDcOT0_DpOT1_"}
!117 = distinct !{!117, !118, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS2_26InspectorRevalidateDOMTaskEEJS4_NS2_14WeakPersistentIS5_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!118 = distinct !{!118, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN5blink9TimerBaseEEEPNS2_26InspectorRevalidateDOMTaskEEJS4_NS2_14WeakPersistentIS5_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!119 = distinct !{!119, !120, !"_ZN3WTF4BindIPFvN4base7WeakPtrIN5blink9TimerBaseEEEPNS3_26InspectorRevalidateDOMTaskEEJS5_NS3_14WeakPersistentIS6_EEEFvvEEENS1_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!120 = distinct !{!120, !"_ZN3WTF4BindIPFvN4base7WeakPtrIN5blink9TimerBaseEEEPNS3_26InspectorRevalidateDOMTaskEEJS5_NS3_14WeakPersistentIS6_EEEFvvEEENS1_12OnceCallbackIT1_EEOT_DpOT0_"}
!121 = !{i32 24, i32 33}
!122 = distinct !{!122, !123}
!123 = !{!"llvm.loop.unroll.disable"}
!124 = distinct !{!124, !123}
!125 = distinct !{!125, !123}
!126 = distinct !{!126, !123}
!127 = distinct !{!127, !123}
