; ModuleID = '../../native_client/src/trusted/service_runtime/sel_ldr_filename.cc'
source_filename = "../../native_client/src/trusted/service_runtime/sel_ldr_filename.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClApp = type { i8, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.NaClMutex, %struct.NaClCondVar, [151 x %struct.NaClSyscallTableEntry], %struct.NaClResourceNaClApp, i32, i32, %struct.NaClVmmap, %struct.NaClIntervalMultiset*, %struct.NaClDescEffector*, i32, i32, %struct.NaClDesc*, %struct.NaClMutex, i8*, %struct.NaClDynamicRegion*, i32, i32, i32, i32, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationCache*, i32, i32, i32, i32, i32, i64, %struct.NaClMutex, %struct.DynArray, i32, %struct.NaClFastMutex, %struct.DynArray, %struct.NaClDebugCallbacks*, %struct.NaClDesc*, %struct.NaClDesc*, %struct.NaClMutex, i32, i32, i32, i32, i32, i32, i32, %struct.NaClValidatorInterface* }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%struct.NaClSyscallTableEntry = type { i32 (%struct.NaClAppThread*)* }
%struct.NaClAppThread = type opaque
%struct.NaClResourceNaClApp = type { %struct.NaClResource, %struct.NaClApp* }
%struct.NaClResource = type { %struct.NaClResourceSchemes*, i64 }
%struct.NaClResourceSchemes = type { i8*, i32, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)* }
%struct.NaClVmmap = type { %struct.NaClVmmapEntry**, i64, i64, i32 }
%struct.NaClVmmapEntry = type { i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64 }
%struct.NaClIntervalMultiset = type { %struct.NaClIntervalMultisetVtbl* }
%struct.NaClIntervalMultisetVtbl = type { void (%struct.NaClIntervalMultiset*)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, i32 (%struct.NaClIntervalMultiset*, i32, i32)* }
%struct.NaClDescEffector = type opaque
%struct.NaClDynamicRegion = type opaque
%struct.NaClCPUFeaturesAbstract = type opaque
%struct.NaClValidationCache = type opaque
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.DynArray = type { i64, i8**, i64, i32*, i64 }
%struct.NaClDebugCallbacks = type { void (%struct.NaClAppThread*)*, void (%struct.NaClAppThread*)*, void ()* }
%struct.NaClDesc = type opaque
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%struct.NaClValidatorInterface = type { i32, i32, i32, i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*, i32 (i8*, i8*, i8)*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*)*, i64, void (%struct.NaClCPUFeaturesAbstract*)*, void (%struct.NaClCPUFeaturesAbstract*)*, i32 (i64, i64, i8*, i64, %struct.NaClCPUFeaturesAbstract*)* }
%struct.NaClValidationMetadata = type opaque
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.2 }
%union.anon.2 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.3 }
%struct.anon.3 = type { i8 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }

@.str = private unnamed_addr constant [39 x i8] c"NaClSys: invalid address for pathname\0A\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"NaClSys: pathname string too long\0A\00", align 1
@NaClRootDir = external local_unnamed_addr global i8*, align 8
@NaClRootDirLen = external local_unnamed_addr global i64, align 8
@.str.2 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"Dest cannot be empty path\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.5 = private unnamed_addr constant [68 x i8] c"../../native_client/src/trusted/service_runtime/sel_ldr_filename.cc\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"dest_max_size == NACL_CONFIG_PATH_MAX\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"raw_path.length() < NACL_CONFIG_PATH_MAX\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"Pathname too long: %s\0A\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"NaClHostDescGetcwd failed\0A\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"Unexpected error validating path\0A\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"path.length() >= 1\00", align 1
@.str.14 = private unnamed_addr constant [52 x i8] c"PathContainsRootPrefix(path.c_str(), path.length())\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CopyHostPathInFromUser(%struct.NaClApp*, i8*, i64, i32) local_unnamed_addr #0 {
  %5 = alloca %struct.stat, align 8
  %6 = alloca %struct.stat, align 8
  %7 = alloca [1024 x i8], align 16
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = zext i32 %3 to i64
  %13 = tail call i32 @NaClCopyInFromUserZStr(%struct.NaClApp* %0, i8* %1, i64 %2, i64 %12) #12
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %4
  %16 = load i8, i8* %1, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #12
  br label %285

19:                                               ; preds = %15
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0)) #12
  br label %285

20:                                               ; preds = %4
  %21 = load i8*, i8** @NaClRootDir, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %285, label %23

23:                                               ; preds = %20
  %24 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false) #12
  %28 = tail call i64 @strlen(i8* %1) #12
  %29 = icmp ugt i64 %28, -17
  br i1 %29, label %30, label %32

30:                                               ; preds = %23
  %31 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %31) #13
  unreachable

32:                                               ; preds = %23
  %33 = icmp ult i64 %28, 23
  br i1 %33, label %40, label %34

34:                                               ; preds = %32
  %35 = add nuw i64 %28, 16
  %36 = and i64 %35, -16
  %37 = tail call i8* @_Znwm(i64 %36) #14
  store i8* %37, i8** %25, align 8
  %38 = or i64 %36, -9223372036854775808
  store i64 %38, i64* %27, align 8
  store i64 %28, i64* %26, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %45

40:                                               ; preds = %32
  %41 = trunc i64 %28 to i8
  %42 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1
  %44 = icmp eq i64 %28, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %40, %34
  %46 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %40 ], [ %39, %34 ]
  %47 = phi i8* [ %24, %40 ], [ %37, %34 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %47, i8* align 1 %1, i64 %28, i1 false) #12
  br label %48

48:                                               ; preds = %45, %40
  %49 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %40 ], [ %46, %45 ]
  %50 = phi i8* [ %24, %40 ], [ %47, %45 ]
  %51 = getelementptr inbounds i8, i8* %50, i64 %28
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = load i64, i64* %26, align 8
  %56 = zext i8 %53 to i64
  %57 = select i1 %54, i64 %55, i64 %56
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %48
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #12
  br label %278

60:                                               ; preds = %48
  %61 = icmp eq i64 %2, 1024
  br i1 %61, label %63, label %62

62:                                               ; preds = %60
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0), i32 159, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #12
  br label %63

63:                                               ; preds = %62, %60
  %64 = icmp sgt i8 %53, -1
  %65 = icmp ult i64 %55, 1024
  %66 = or i1 %64, %65
  br i1 %66, label %68, label %67

67:                                               ; preds = %63
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0), i32 160, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #12
  br label %68

68:                                               ; preds = %67, %63
  %69 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #12
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 24, i1 false)
  %73 = load i8*, i8** %25, align 8
  %74 = select i1 %54, i8* %73, i8* %24
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 47
  br i1 %76, label %105, label %77

77:                                               ; preds = %68
  %78 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %78) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %78, i8 -86, i64 1024, i1 false) #12
  %79 = call i32 @NaClHostDescGetcwd(i8* nonnull %78, i64 1024) #12
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %77
  call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0)) #12
  br label %103

82:                                               ; preds = %77
  %83 = call i64 @strlen(i8* nonnull %78) #15
  %84 = load i64, i64* @NaClRootDirLen, align 8
  %85 = icmp ugt i64 %84, %83
  br i1 %85, label %103, label %86

86:                                               ; preds = %82
  %87 = load i8*, i8** @NaClRootDir, align 8
  %88 = call i32 @strncmp(i8* %87, i8* nonnull %78, i64 %84) #15
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %103

90:                                               ; preds = %86
  %91 = icmp ult i64 %84, %83
  br i1 %91, label %92, label %96

92:                                               ; preds = %90
  %93 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %84
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 47
  br i1 %95, label %96, label %103

96:                                               ; preds = %92, %90
  %97 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %84
  %98 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %9, i8* %97) #12
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %9, i8 signext 47) #12
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %78) #12
  %99 = load i8, i8* %52, align 1
  %100 = load i8*, i8** %25, align 8
  %101 = load i64, i64* %26, align 8
  %102 = zext i8 %99 to i64
  br label %105

103:                                              ; preds = %92, %86, %82, %81
  %104 = phi i32 [ %79, %81 ], [ -13, %82 ], [ -13, %86 ], [ -13, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %78) #12
  br label %270

105:                                              ; preds = %96, %68
  %106 = phi i64 [ %56, %68 ], [ %102, %96 ]
  %107 = phi i64 [ %55, %68 ], [ %101, %96 ]
  %108 = phi i8* [ %73, %68 ], [ %100, %96 ]
  %109 = phi i8 [ %53, %68 ], [ %99, %96 ]
  %110 = icmp slt i8 %109, 0
  %111 = select i1 %110, i8* %108, i8* %24
  %112 = select i1 %110, i64 %107, i64 %106
  %113 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %9, i8* %111, i64 %112) #12
  %114 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #12
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 0, i64 24, i1 false) #12
  %117 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #12
  %118 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 0, i64 24, i1 false) #12
  call void @_Z24CanonicalizeAbsolutePathRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPS5_PNS_6vectorIS5_NS3_IS5_EEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, %"class.std::__1::basic_string"* nonnull %10, %"class.std::__1::vector"* nonnull %11) #12
  %120 = bitcast %"class.std::__1::basic_string"** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.std::__1::vector"* %11 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %121, %123
  br i1 %124, label %167, label %125

125:                                              ; preds = %105
  %126 = bitcast %struct.stat* %6 to i8*
  %127 = bitcast %struct.stat* %6 to %struct.stat64*
  br label %128

128:                                              ; preds = %155, %125
  %129 = phi i64 [ %123, %125 ], [ %158, %155 ]
  %130 = phi i64 [ 0, %125 ], [ %156, %155 ]
  %131 = inttoptr i64 %129 to %"class.std::__1::basic_string"*
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %131, i64 %130
  %133 = load i8*, i8** @NaClRootDir, align 8
  %134 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* %132, i64 0, i8* %133) #12
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %126) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 144, i1 false) #12
  %135 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %118, align 8
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 %130
  %137 = bitcast %"class.std::__1::basic_string"* %136 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %128
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %136, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  br label %146

144:                                              ; preds = %128
  %145 = bitcast %"class.std::__1::basic_string"* %136 to i8*
  br label %146

146:                                              ; preds = %144, %141
  %147 = phi i8* [ %143, %141 ], [ %145, %144 ]
  %148 = call i32 @__xstat64(i32 1, i8* %147, %struct.stat64* nonnull %127) #12
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %155, label %150

150:                                              ; preds = %146
  %151 = tail call i32* @__errno_location() #16
  %152 = load i32, i32* %151, align 4
  switch i32 %152, label %162 [
    i32 40, label %153
    i32 75, label %153
    i32 12, label %153
  ]

153:                                              ; preds = %150, %150, %150
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0)) #12
  %154 = load i32, i32* %151, align 4
  br label %162

155:                                              ; preds = %146
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %126) #12
  %156 = add i64 %130, 1
  %157 = load i64, i64* %120, align 8
  %158 = load i64, i64* %122, align 8
  %159 = sub i64 %157, %158
  %160 = sdiv exact i64 %159, 24
  %161 = icmp eq i64 %156, %160
  br i1 %161, label %167, label %128

162:                                              ; preds = %153, %150
  %163 = phi i32 [ %152, %150 ], [ %154, %153 ]
  %164 = call i32 @NaClXlateErrno(i32 %163) #12
  %165 = sub nsw i32 0, %164
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %126) #12
  %166 = icmp eq i32 %164, 0
  br i1 %166, label %167, label %237

167:                                              ; preds = %155, %162, %105
  %168 = load i8*, i8** @NaClRootDir, align 8
  %169 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %10, i64 0, i8* %168) #12
  %170 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %170, i64 0, i32 1, i32 0
  %172 = load i8, i8* %171, align 1
  %173 = icmp slt i8 %172, 0
  %174 = load i64, i64* %116, align 8
  %175 = zext i8 %172 to i64
  %176 = select i1 %173, i64 %174, i64 %175
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %182

178:                                              ; preds = %167
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0), i32 104, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0)) #12
  %179 = load i8, i8* %171, align 1
  %180 = load i64, i64* %116, align 8
  %181 = zext i8 %179 to i64
  br label %182

182:                                              ; preds = %178, %167
  %183 = phi i64 [ %175, %167 ], [ %181, %178 ]
  %184 = phi i64 [ %174, %167 ], [ %180, %178 ]
  %185 = phi i8 [ %172, %167 ], [ %179, %178 ]
  %186 = icmp slt i8 %185, 0
  %187 = load i8*, i8** %115, align 8
  %188 = select i1 %186, i8* %187, i8* %114
  %189 = select i1 %186, i64 %184, i64 %183
  %190 = load i64, i64* @NaClRootDirLen, align 8
  %191 = icmp ugt i64 %190, %189
  br i1 %191, label %202, label %192

192:                                              ; preds = %182
  %193 = load i8*, i8** @NaClRootDir, align 8
  %194 = call i32 @strncmp(i8* %193, i8* %188, i64 %190) #15
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %202

196:                                              ; preds = %192
  %197 = icmp ult i64 %190, %189
  br i1 %197, label %198, label %205

198:                                              ; preds = %196
  %199 = getelementptr inbounds i8, i8* %188, i64 %190
  %200 = load i8, i8* %199, align 1
  %201 = icmp eq i8 %200, 47
  br i1 %201, label %205, label %202

202:                                              ; preds = %198, %192, %182
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0), i32 105, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14, i64 0, i64 0)) #12
  %203 = load i8, i8* %171, align 1
  %204 = load i8*, i8** %115, align 8
  br label %205

205:                                              ; preds = %202, %198, %196
  %206 = phi i8* [ %187, %198 ], [ %187, %196 ], [ %204, %202 ]
  %207 = phi i8 [ %185, %198 ], [ %185, %196 ], [ %203, %202 ]
  %208 = icmp slt i8 %207, 0
  %209 = select i1 %208, i8* %206, i8* %114
  %210 = bitcast %struct.stat* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %210) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %210, i8 -86, i64 144, i1 false) #12
  %211 = bitcast %struct.stat* %5 to %struct.stat64*
  %212 = call i32 @__lxstat64(i32 1, i8* %209, %struct.stat64* nonnull %211) #12
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %215, label %214

214:                                              ; preds = %205
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %210) #12
  br label %220

215:                                              ; preds = %205
  %216 = getelementptr inbounds %struct.stat, %struct.stat* %5, i64 0, i32 3
  %217 = load i32, i32* %216, align 8
  %218 = and i32 %217, 61440
  %219 = icmp eq i32 %218, 40960
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %210) #12
  br i1 %219, label %237, label %220

220:                                              ; preds = %215, %214
  %221 = load i8, i8* %171, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %223, label %228

223:                                              ; preds = %220
  %224 = load i64, i64* %116, align 8
  %225 = add i64 %224, 1
  %226 = icmp ugt i64 %225, %2
  %227 = load i8*, i8** %115, align 8
  br i1 %226, label %231, label %233

228:                                              ; preds = %220
  %229 = zext i8 %221 to i64
  %230 = icmp ult i64 %229, %2
  br i1 %230, label %233, label %231

231:                                              ; preds = %228, %223
  %232 = phi i8* [ %227, %223 ], [ %114, %228 ]
  call void (i32, i8*, ...) @NaClLog(i32 -2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %232) #12
  br label %237

233:                                              ; preds = %228, %223
  %234 = phi i8* [ %227, %223 ], [ %114, %228 ]
  %235 = call i64 @llvm.objectsize.i64.p0i8(i8* %1, i1 false, i1 true, i1 false) #12
  %236 = call i8* @__strcpy_chk(i8* %1, i8* %234, i64 %235) #12
  br label %237

237:                                              ; preds = %233, %231, %215, %162
  %238 = phi i32 [ -36, %231 ], [ 0, %233 ], [ %165, %162 ], [ -13, %215 ]
  %239 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %118, align 8
  %240 = icmp eq %"class.std::__1::basic_string"* %239, null
  br i1 %240, label %262, label %241

241:                                              ; preds = %237
  %242 = bitcast %"class.std::__1::basic_string"* %239 to i8*
  %243 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %119, align 8
  %244 = icmp eq %"class.std::__1::basic_string"* %243, %239
  br i1 %244, label %260, label %245

245:                                              ; preds = %241, %255
  %246 = phi %"class.std::__1::basic_string"* [ %247, %255 ], [ %243, %241 ]
  %247 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %246, i64 -1
  %248 = bitcast %"class.std::__1::basic_string"* %247 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %249 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %248, i64 0, i32 1, i32 0
  %250 = load i8, i8* %249, align 1
  %251 = icmp slt i8 %250, 0
  br i1 %251, label %252, label %255

252:                                              ; preds = %245
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %247, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load i8*, i8** %253, align 8
  call void @_ZdlPv(i8* %254) #14
  br label %255

255:                                              ; preds = %252, %245
  %256 = icmp eq %"class.std::__1::basic_string"* %247, %239
  br i1 %256, label %257, label %245

257:                                              ; preds = %255
  %258 = bitcast %"class.std::__1::vector"* %11 to i8**
  %259 = load i8*, i8** %258, align 8
  br label %260

260:                                              ; preds = %257, %241
  %261 = phi i8* [ %259, %257 ], [ %242, %241 ]
  store %"class.std::__1::basic_string"* %239, %"class.std::__1::basic_string"** %119, align 8
  call void @_ZdlPv(i8* %261) #14
  br label %262

262:                                              ; preds = %260, %237
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #12
  %263 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %264 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %263, i64 0, i32 1, i32 0
  %265 = load i8, i8* %264, align 1
  %266 = icmp slt i8 %265, 0
  br i1 %266, label %267, label %269

267:                                              ; preds = %262
  %268 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %268) #14
  br label %269

269:                                              ; preds = %267, %262
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #12
  br label %270

270:                                              ; preds = %269, %103
  %271 = phi i32 [ %238, %269 ], [ %104, %103 ]
  %272 = load i8, i8* %72, align 1
  %273 = icmp slt i8 %272, 0
  br i1 %273, label %274, label %276

274:                                              ; preds = %270
  %275 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %275) #14
  br label %276

276:                                              ; preds = %274, %270
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #12
  %277 = load i8, i8* %52, align 1
  br label %278

278:                                              ; preds = %276, %59
  %279 = phi i8 [ %53, %59 ], [ %277, %276 ]
  %280 = phi i32 [ -2, %59 ], [ %271, %276 ]
  %281 = icmp slt i8 %279, 0
  br i1 %281, label %282, label %284

282:                                              ; preds = %278
  %283 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %283) #14
  br label %284

284:                                              ; preds = %278, %282
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  br label %285

285:                                              ; preds = %20, %284, %19, %18
  %286 = phi i32 [ %280, %284 ], [ -14, %18 ], [ -36, %19 ], [ 0, %20 ]
  ret i32 %286
}

declare i32 @NaClCopyInFromUserZStr(%struct.NaClApp*, i8*, i64, i64) local_unnamed_addr #1

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CopyHostPathOutToUser(%struct.NaClApp*, i32, i8*) local_unnamed_addr #0 {
  %4 = tail call i64 @strlen(i8* %2) #15
  %5 = load i8*, i8** @NaClRootDir, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %13

7:                                                ; preds = %3
  %8 = zext i32 %1 to i64
  %9 = add i64 %4, 1
  %10 = tail call i32 @NaClCopyOutToUser(%struct.NaClApp* %0, i64 %8, i8* %2, i64 %9) #12
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %11, i32 -14, i32 0
  br label %42

13:                                               ; preds = %3
  %14 = load i64, i64* @NaClRootDirLen, align 8
  %15 = icmp ult i64 %4, %14
  br i1 %15, label %42, label %16

16:                                               ; preds = %13
  %17 = tail call i32 @strncmp(i8* nonnull %5, i8* %2, i64 %14) #15
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %42

19:                                               ; preds = %16
  %20 = icmp ugt i64 %4, %14
  %21 = getelementptr inbounds i8, i8* %2, i64 %14
  %22 = load i8, i8* %21, align 1
  br i1 %20, label %23, label %27

23:                                               ; preds = %19
  %24 = icmp eq i8 %22, 47
  br i1 %24, label %25, label %42

25:                                               ; preds = %23
  %26 = zext i32 %1 to i64
  br label %34

27:                                               ; preds = %19
  %28 = icmp eq i8 %22, 0
  %29 = zext i32 %1 to i64
  br i1 %28, label %30, label %34

30:                                               ; preds = %27
  %31 = tail call i32 @NaClCopyOutToUser(%struct.NaClApp* %0, i64 %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 2) #12
  %32 = icmp eq i32 %31, 0
  %33 = select i1 %32, i32 -14, i32 0
  br label %42

34:                                               ; preds = %25, %27
  %35 = phi i64 [ %26, %25 ], [ %29, %27 ]
  %36 = getelementptr inbounds i8, i8* %2, i64 %14
  %37 = add i64 %4, 1
  %38 = sub i64 %37, %14
  %39 = tail call i32 @NaClCopyOutToUser(%struct.NaClApp* %0, i64 %35, i8* %36, i64 %38) #12
  %40 = icmp eq i32 %39, 0
  %41 = select i1 %40, i32 -14, i32 0
  br label %42

42:                                               ; preds = %23, %16, %13, %34, %30, %7
  %43 = phi i32 [ %12, %7 ], [ %33, %30 ], [ %41, %34 ], [ -13, %13 ], [ -13, %16 ], [ -13, %23 ]
  ret i32 %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare i32 @NaClCopyOutToUser(%struct.NaClApp*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_Z24CanonicalizeAbsolutePathRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPS5_PNS_6vectorIS5_NS3_IS5_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*, %"class.std::__1::vector"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @NaClHostDescGetcwd(i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #6

declare i32 @NaClXlateErrno(i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #7

; Function Attrs: nounwind
declare i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i8* @__strcpy_chk(i8*, i8*, i64) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }
attributes #16 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
