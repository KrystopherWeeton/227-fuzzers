; ModuleID = '../../third_party/webrtc/common_audio/signal_processing/resample.c'
source_filename = "../../third_party/webrtc/common_audio/signal_processing/resample.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.WebRtcSpl_State22khzTo16khz = type { [8 x i32], [8 x i32], [8 x i32] }
%struct.WebRtcSpl_State16khzTo22khz = type { [8 x i32], [8 x i32] }
%struct.WebRtcSpl_State22khzTo8khz = type { [16 x i32], [8 x i32], [8 x i32] }
%struct.WebRtcSpl_State8khzTo22khz = type { [8 x i32], [8 x i32], [8 x i32] }

; Function Attrs: nounwind ssp uwtable
define hidden void @WebRtcSpl_Resample22khzTo16khz(i16*, i16*, %struct.WebRtcSpl_State22khzTo16khz*, i32*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds i32, i32* %3, i64 16
  %6 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo16khz, %struct.WebRtcSpl_State22khzTo16khz* %2, i64 0, i32 0, i64 0
  %7 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo16khz, %struct.WebRtcSpl_State22khzTo16khz* %2, i64 0, i32 1, i64 0
  %8 = getelementptr inbounds i32, i32* %3, i64 8
  %9 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo16khz, %struct.WebRtcSpl_State22khzTo16khz* %2, i64 0, i32 1, i64 1
  %10 = getelementptr inbounds i32, i32* %3, i64 9
  %11 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo16khz, %struct.WebRtcSpl_State22khzTo16khz* %2, i64 0, i32 1, i64 2
  %12 = getelementptr inbounds i32, i32* %3, i64 10
  %13 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo16khz, %struct.WebRtcSpl_State22khzTo16khz* %2, i64 0, i32 1, i64 3
  %14 = getelementptr inbounds i32, i32* %3, i64 11
  %15 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo16khz, %struct.WebRtcSpl_State22khzTo16khz* %2, i64 0, i32 1, i64 4
  %16 = getelementptr inbounds i32, i32* %3, i64 12
  %17 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo16khz, %struct.WebRtcSpl_State22khzTo16khz* %2, i64 0, i32 1, i64 5
  %18 = getelementptr inbounds i32, i32* %3, i64 13
  %19 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo16khz, %struct.WebRtcSpl_State22khzTo16khz* %2, i64 0, i32 1, i64 6
  %20 = getelementptr inbounds i32, i32* %3, i64 14
  %21 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo16khz, %struct.WebRtcSpl_State22khzTo16khz* %2, i64 0, i32 1, i64 7
  %22 = getelementptr inbounds i32, i32* %3, i64 15
  %23 = getelementptr inbounds i32, i32* %3, i64 96
  %24 = getelementptr inbounds i32, i32* %3, i64 97
  %25 = getelementptr inbounds i32, i32* %3, i64 98
  %26 = getelementptr inbounds i32, i32* %3, i64 99
  %27 = getelementptr inbounds i32, i32* %3, i64 100
  %28 = getelementptr inbounds i32, i32* %3, i64 101
  %29 = getelementptr inbounds i32, i32* %3, i64 102
  %30 = getelementptr inbounds i32, i32* %3, i64 103
  %31 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo16khz, %struct.WebRtcSpl_State22khzTo16khz* %2, i64 0, i32 2, i64 0
  br label %32

32:                                               ; preds = %32, %4
  %33 = phi i32 [ 0, %4 ], [ %54, %32 ]
  %34 = phi i16* [ %0, %4 ], [ %52, %32 ]
  %35 = phi i16* [ %1, %4 ], [ %53, %32 ]
  tail call void @WebRtcSpl_UpBy2ShortToInt(i16* %34, i32 44, i32* %5, i32* %6) #5
  %36 = load i32, i32* %7, align 4
  store i32 %36, i32* %8, align 4
  %37 = load i32, i32* %9, align 4
  store i32 %37, i32* %10, align 4
  %38 = load i32, i32* %11, align 4
  store i32 %38, i32* %12, align 4
  %39 = load i32, i32* %13, align 4
  store i32 %39, i32* %14, align 4
  %40 = load i32, i32* %15, align 4
  store i32 %40, i32* %16, align 4
  %41 = load i32, i32* %17, align 4
  store i32 %41, i32* %18, align 4
  %42 = load i32, i32* %19, align 4
  store i32 %42, i32* %20, align 4
  %43 = load i32, i32* %21, align 4
  store i32 %43, i32* %22, align 4
  %44 = load i32, i32* %23, align 4
  store i32 %44, i32* %7, align 4
  %45 = load i32, i32* %24, align 4
  store i32 %45, i32* %9, align 4
  %46 = load i32, i32* %25, align 4
  store i32 %46, i32* %11, align 4
  %47 = load i32, i32* %26, align 4
  store i32 %47, i32* %13, align 4
  %48 = load i32, i32* %27, align 4
  store i32 %48, i32* %15, align 4
  %49 = load i32, i32* %28, align 4
  store i32 %49, i32* %17, align 4
  %50 = load i32, i32* %29, align 4
  store i32 %50, i32* %19, align 4
  %51 = load i32, i32* %30, align 4
  store i32 %51, i32* %21, align 4
  tail call void @WebRtcSpl_Resample44khzTo32khz(i32* %8, i32* %3, i64 8) #5
  tail call void @WebRtcSpl_DownBy2IntToShort(i32* %3, i32 64, i16* %35, i32* %31) #5
  %52 = getelementptr inbounds i16, i16* %34, i64 44
  %53 = getelementptr inbounds i16, i16* %35, i64 32
  %54 = add nuw nsw i32 %33, 1
  %55 = icmp eq i32 %54, 5
  br i1 %55, label %56, label %32

56:                                               ; preds = %32
  ret void
}

declare void @WebRtcSpl_UpBy2ShortToInt(i16*, i32, i32*, i32*) local_unnamed_addr #1

declare void @WebRtcSpl_Resample44khzTo32khz(i32*, i32*, i64) local_unnamed_addr #1

declare void @WebRtcSpl_DownBy2IntToShort(i32*, i32, i16*, i32*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @WebRtcSpl_ResetResample22khzTo16khz(%struct.WebRtcSpl_State22khzTo16khz* nocapture) local_unnamed_addr #2 {
  %2 = bitcast %struct.WebRtcSpl_State22khzTo16khz* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 96, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @WebRtcSpl_Resample16khzTo22khz(i16*, i16* nocapture, %struct.WebRtcSpl_State16khzTo22khz*, i32*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds i32, i32* %3, i64 8
  %6 = getelementptr inbounds %struct.WebRtcSpl_State16khzTo22khz, %struct.WebRtcSpl_State16khzTo22khz* %2, i64 0, i32 0, i64 0
  %7 = getelementptr inbounds %struct.WebRtcSpl_State16khzTo22khz, %struct.WebRtcSpl_State16khzTo22khz* %2, i64 0, i32 1, i64 0
  %8 = getelementptr inbounds %struct.WebRtcSpl_State16khzTo22khz, %struct.WebRtcSpl_State16khzTo22khz* %2, i64 0, i32 1, i64 1
  %9 = getelementptr inbounds i32, i32* %3, i64 1
  %10 = getelementptr inbounds %struct.WebRtcSpl_State16khzTo22khz, %struct.WebRtcSpl_State16khzTo22khz* %2, i64 0, i32 1, i64 2
  %11 = getelementptr inbounds i32, i32* %3, i64 2
  %12 = getelementptr inbounds %struct.WebRtcSpl_State16khzTo22khz, %struct.WebRtcSpl_State16khzTo22khz* %2, i64 0, i32 1, i64 3
  %13 = getelementptr inbounds i32, i32* %3, i64 3
  %14 = getelementptr inbounds %struct.WebRtcSpl_State16khzTo22khz, %struct.WebRtcSpl_State16khzTo22khz* %2, i64 0, i32 1, i64 4
  %15 = getelementptr inbounds i32, i32* %3, i64 4
  %16 = getelementptr inbounds %struct.WebRtcSpl_State16khzTo22khz, %struct.WebRtcSpl_State16khzTo22khz* %2, i64 0, i32 1, i64 5
  %17 = getelementptr inbounds i32, i32* %3, i64 5
  %18 = getelementptr inbounds %struct.WebRtcSpl_State16khzTo22khz, %struct.WebRtcSpl_State16khzTo22khz* %2, i64 0, i32 1, i64 6
  %19 = getelementptr inbounds i32, i32* %3, i64 6
  %20 = getelementptr inbounds %struct.WebRtcSpl_State16khzTo22khz, %struct.WebRtcSpl_State16khzTo22khz* %2, i64 0, i32 1, i64 7
  %21 = getelementptr inbounds i32, i32* %3, i64 7
  %22 = getelementptr inbounds i32, i32* %3, i64 80
  %23 = getelementptr inbounds i32, i32* %3, i64 81
  %24 = getelementptr inbounds i32, i32* %3, i64 82
  %25 = getelementptr inbounds i32, i32* %3, i64 83
  %26 = getelementptr inbounds i32, i32* %3, i64 84
  %27 = getelementptr inbounds i32, i32* %3, i64 85
  %28 = getelementptr inbounds i32, i32* %3, i64 86
  %29 = getelementptr inbounds i32, i32* %3, i64 87
  br label %30

30:                                               ; preds = %321, %4
  %31 = phi i32 [ 0, %4 ], [ %324, %321 ]
  %32 = phi i16* [ %0, %4 ], [ %322, %321 ]
  %33 = phi i16* [ %1, %4 ], [ %323, %321 ]
  tail call void @WebRtcSpl_UpBy2ShortToInt(i16* %32, i32 40, i32* %5, i32* %6) #5
  %34 = load i32, i32* %7, align 4
  store i32 %34, i32* %3, align 4
  %35 = load i32, i32* %8, align 4
  store i32 %35, i32* %9, align 4
  %36 = load i32, i32* %10, align 4
  store i32 %36, i32* %11, align 4
  %37 = load i32, i32* %12, align 4
  store i32 %37, i32* %13, align 4
  %38 = load i32, i32* %14, align 4
  store i32 %38, i32* %15, align 4
  %39 = load i32, i32* %16, align 4
  store i32 %39, i32* %17, align 4
  %40 = load i32, i32* %18, align 4
  store i32 %40, i32* %19, align 4
  %41 = load i32, i32* %20, align 4
  store i32 %41, i32* %21, align 4
  %42 = load i32, i32* %22, align 4
  store i32 %42, i32* %7, align 4
  %43 = load i32, i32* %23, align 4
  store i32 %43, i32* %8, align 4
  %44 = load i32, i32* %24, align 4
  store i32 %44, i32* %10, align 4
  %45 = load i32, i32* %25, align 4
  store i32 %45, i32* %12, align 4
  %46 = load i32, i32* %26, align 4
  store i32 %46, i32* %14, align 4
  %47 = load i32, i32* %27, align 4
  store i32 %47, i32* %16, align 4
  %48 = load i32, i32* %28, align 4
  store i32 %48, i32* %18, align 4
  %49 = load i32, i32* %29, align 4
  store i32 %49, i32* %20, align 4
  br label %50

50:                                               ; preds = %50, %30
  %51 = phi i32 [ 0, %30 ], [ %319, %50 ]
  %52 = phi i32* [ %3, %30 ], [ %71, %50 ]
  %53 = phi i16* [ %33, %30 ], [ %318, %50 ]
  %54 = getelementptr inbounds i32, i32* %52, i64 3
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %55, 32767
  %57 = select i1 %56, i32 %55, i32 32767
  %58 = icmp sgt i32 %57, -32768
  %59 = select i1 %58, i32 %57, i32 -32768
  %60 = trunc i32 %59 to i16
  store i16 %60, i16* %53, align 2
  %61 = getelementptr inbounds i16, i16* %53, i64 1
  %62 = getelementptr inbounds i16, i16* %53, i64 10
  %63 = getelementptr inbounds i32, i32* %52, i64 2
  %64 = getelementptr inbounds i32, i32* %52, i64 5
  %65 = getelementptr inbounds i32, i32* %52, i64 6
  %66 = getelementptr inbounds i32, i32* %52, i64 7
  %67 = bitcast i32* %52 to <8 x i32>*
  %68 = load <8 x i32>, <8 x i32>* %67, align 4
  %69 = mul nsw <8 x i32> %68, <i32 127, i32 -712, i32 2359, i32 -6333, i32 23456, i32 16775, i32 -3695, i32 945>
  %70 = getelementptr inbounds i32, i32* %52, i64 17
  %71 = getelementptr inbounds i32, i32* %52, i64 16
  %72 = getelementptr inbounds i32, i32* %52, i64 15
  %73 = bitcast i32* %72 to <8 x i32>*
  %74 = load <8 x i32>, <8 x i32>* %73, align 4
  %75 = mul nsw <8 x i32> %74, <i32 945, i32 -3695, i32 16775, i32 23456, i32 -6333, i32 2359, i32 -712, i32 127>
  %76 = getelementptr inbounds i32, i32* %52, i64 8
  %77 = load i32, i32* %76, align 4
  %78 = mul nsw i32 %77, -154
  %79 = shufflevector <8 x i32> %69, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %80 = add nsw <8 x i32> %69, %79
  %81 = shufflevector <8 x i32> %80, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %82 = add nsw <8 x i32> %80, %81
  %83 = shufflevector <8 x i32> %82, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %84 = add nsw <8 x i32> %82, %83
  %85 = extractelement <8 x i32> %84, i32 0
  %86 = add nsw i32 %85, %78
  %87 = add nsw i32 %86, 16384
  %88 = getelementptr inbounds i32, i32* %52, i64 14
  %89 = load i32, i32* %88, align 4
  %90 = mul nsw i32 %89, -154
  %91 = shufflevector <8 x i32> %75, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %92 = add nsw <8 x i32> %75, %91
  %93 = shufflevector <8 x i32> %92, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %94 = add nsw <8 x i32> %92, %93
  %95 = shufflevector <8 x i32> %94, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %96 = add nsw <8 x i32> %94, %95
  %97 = extractelement <8 x i32> %96, i32 0
  %98 = add nsw i32 %97, %90
  %99 = add nsw i32 %98, 16384
  %100 = ashr i32 %87, 15
  %101 = icmp slt i32 %100, 32767
  %102 = select i1 %101, i32 %100, i32 32767
  %103 = icmp sgt i32 %102, -32768
  %104 = select i1 %103, i32 %102, i32 -32768
  %105 = ashr i32 %99, 15
  %106 = icmp slt i32 %105, 32767
  %107 = select i1 %106, i32 %105, i32 32767
  %108 = icmp sgt i32 %107, -32768
  %109 = select i1 %108, i32 %107, i32 -32768
  %110 = trunc i32 %104 to i16
  store i16 %110, i16* %61, align 2
  %111 = trunc i32 %109 to i16
  store i16 %111, i16* %62, align 2
  %112 = getelementptr inbounds i16, i16* %53, i64 2
  %113 = getelementptr inbounds i16, i16* %53, i64 9
  %114 = getelementptr inbounds i32, i32* %52, i64 9
  %115 = bitcast i32* %63 to <8 x i32>*
  %116 = load <8 x i32>, <8 x i32>* %115, align 4
  %117 = mul nsw <8 x i32> %116, <i32 -39, i32 230, i32 -830, i32 2785, i32 32366, i32 -2324, i32 760, i32 -218>
  %118 = getelementptr inbounds i32, i32* %52, i64 13
  %119 = bitcast i32* %118 to <8 x i32>*
  %120 = load <8 x i32>, <8 x i32>* %119, align 4
  %121 = mul nsw <8 x i32> %120, <i32 -218, i32 760, i32 -2324, i32 32366, i32 2785, i32 -830, i32 230, i32 -39>
  %122 = getelementptr inbounds i32, i32* %52, i64 10
  %123 = load i32, i32* %122, align 4
  %124 = mul nsw i32 %123, 38
  %125 = shufflevector <8 x i32> %117, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %126 = add nsw <8 x i32> %117, %125
  %127 = shufflevector <8 x i32> %126, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %128 = add nsw <8 x i32> %126, %127
  %129 = shufflevector <8 x i32> %128, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %130 = add nsw <8 x i32> %128, %129
  %131 = extractelement <8 x i32> %130, i32 0
  %132 = add nsw i32 %131, %124
  %133 = add nsw i32 %132, 16384
  %134 = getelementptr inbounds i32, i32* %52, i64 12
  %135 = load i32, i32* %134, align 4
  %136 = mul nsw i32 %135, 38
  %137 = shufflevector <8 x i32> %121, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %138 = add nsw <8 x i32> %121, %137
  %139 = shufflevector <8 x i32> %138, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %140 = add nsw <8 x i32> %138, %139
  %141 = shufflevector <8 x i32> %140, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %142 = add nsw <8 x i32> %140, %141
  %143 = extractelement <8 x i32> %142, i32 0
  %144 = add nsw i32 %143, %136
  %145 = add nsw i32 %144, 16384
  %146 = ashr i32 %133, 15
  %147 = icmp slt i32 %146, 32767
  %148 = select i1 %147, i32 %146, i32 32767
  %149 = icmp sgt i32 %148, -32768
  %150 = select i1 %149, i32 %148, i32 -32768
  %151 = ashr i32 %145, 15
  %152 = icmp slt i32 %151, 32767
  %153 = select i1 %152, i32 %151, i32 32767
  %154 = icmp sgt i32 %153, -32768
  %155 = select i1 %154, i32 %153, i32 -32768
  %156 = trunc i32 %150 to i16
  store i16 %156, i16* %112, align 2
  %157 = trunc i32 %155 to i16
  store i16 %157, i16* %113, align 2
  %158 = getelementptr inbounds i16, i16* %53, i64 3
  %159 = getelementptr inbounds i16, i16* %53, i64 8
  %160 = bitcast i32* %54 to <8 x i32>*
  %161 = load <8 x i32>, <8 x i32>* %160, align 4
  %162 = mul nsw <8 x i32> %161, <i32 117, i32 -663, i32 2222, i32 -6133, i32 26634, i32 13070, i32 -3174, i32 831>
  %163 = bitcast i32* %134 to <8 x i32>*
  %164 = load <8 x i32>, <8 x i32>* %163, align 4
  %165 = mul nsw <8 x i32> %164, <i32 831, i32 -3174, i32 13070, i32 26634, i32 -6133, i32 2222, i32 -663, i32 117>
  %166 = getelementptr inbounds i32, i32* %52, i64 11
  %167 = load i32, i32* %166, align 4
  %168 = mul nsw i32 %167, -137
  %169 = add i32 %168, 16384
  %170 = shufflevector <8 x i32> %162, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %171 = add <8 x i32> %162, %170
  %172 = shufflevector <8 x i32> %171, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %173 = add <8 x i32> %171, %172
  %174 = shufflevector <8 x i32> %173, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %175 = add <8 x i32> %173, %174
  %176 = extractelement <8 x i32> %175, i32 0
  %177 = add i32 %176, %169
  %178 = shufflevector <8 x i32> %165, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %179 = add <8 x i32> %165, %178
  %180 = shufflevector <8 x i32> %179, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %181 = add <8 x i32> %179, %180
  %182 = shufflevector <8 x i32> %181, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %183 = add <8 x i32> %181, %182
  %184 = extractelement <8 x i32> %183, i32 0
  %185 = add i32 %184, %169
  %186 = ashr i32 %177, 15
  %187 = icmp slt i32 %186, 32767
  %188 = select i1 %187, i32 %186, i32 32767
  %189 = icmp sgt i32 %188, -32768
  %190 = select i1 %189, i32 %188, i32 -32768
  %191 = ashr i32 %185, 15
  %192 = icmp slt i32 %191, 32767
  %193 = select i1 %192, i32 %191, i32 32767
  %194 = icmp sgt i32 %193, -32768
  %195 = select i1 %194, i32 %193, i32 -32768
  %196 = trunc i32 %190 to i16
  store i16 %196, i16* %158, align 2
  %197 = trunc i32 %195 to i16
  store i16 %197, i16* %159, align 2
  %198 = getelementptr inbounds i16, i16* %53, i64 4
  %199 = getelementptr inbounds i16, i16* %53, i64 7
  %200 = load i32, i32* %64, align 4
  %201 = mul nsw i32 %200, -77
  %202 = load i32, i32* %70, align 4
  %203 = mul nsw i32 %202, -77
  %204 = load i32, i32* %65, align 4
  %205 = mul nsw i32 %204, 457
  %206 = load i32, i32* %71, align 4
  %207 = mul nsw i32 %206, 457
  %208 = load i32, i32* %66, align 4
  %209 = mul nsw i32 %208, -1677
  %210 = load i32, i32* %72, align 4
  %211 = mul nsw i32 %210, -1677
  %212 = load i32, i32* %76, align 4
  %213 = mul nsw i32 %212, 5958
  %214 = load i32, i32* %88, align 4
  %215 = mul nsw i32 %214, 5958
  %216 = load i32, i32* %114, align 4
  %217 = mul nsw i32 %216, 31175
  %218 = load i32, i32* %118, align 4
  %219 = mul nsw i32 %218, 31175
  %220 = load i32, i32* %122, align 4
  %221 = mul nsw i32 %220, -4136
  %222 = load i32, i32* %134, align 4
  %223 = mul nsw i32 %222, -4136
  %224 = load i32, i32* %166, align 4
  %225 = mul nsw i32 %224, 1405
  %226 = mul nsw i32 %222, -408
  %227 = mul nsw i32 %220, -408
  %228 = mul nsw i32 %218, 71
  %229 = add i32 %225, 16384
  %230 = add i32 %229, %201
  %231 = add i32 %230, %205
  %232 = add i32 %231, %209
  %233 = add i32 %232, %213
  %234 = add i32 %233, %217
  %235 = add i32 %234, %228
  %236 = add i32 %235, %221
  %237 = add i32 %236, %226
  %238 = mul nsw i32 %216, 71
  %239 = add i32 %229, %203
  %240 = add i32 %239, %207
  %241 = add i32 %240, %211
  %242 = add i32 %241, %215
  %243 = add i32 %242, %238
  %244 = add i32 %243, %219
  %245 = add i32 %244, %227
  %246 = add i32 %245, %223
  %247 = ashr i32 %237, 15
  %248 = icmp slt i32 %247, 32767
  %249 = select i1 %248, i32 %247, i32 32767
  %250 = icmp sgt i32 %249, -32768
  %251 = select i1 %250, i32 %249, i32 -32768
  %252 = ashr i32 %246, 15
  %253 = icmp slt i32 %252, 32767
  %254 = select i1 %253, i32 %252, i32 32767
  %255 = icmp sgt i32 %254, -32768
  %256 = select i1 %255, i32 %254, i32 -32768
  %257 = trunc i32 %251 to i16
  store i16 %257, i16* %198, align 2
  %258 = trunc i32 %256 to i16
  store i16 %258, i16* %199, align 2
  %259 = getelementptr inbounds i16, i16* %53, i64 5
  %260 = getelementptr inbounds i16, i16* %53, i64 6
  %261 = load i32, i32* %65, align 4
  %262 = mul nsw i32 %261, 98
  %263 = load i32, i32* %71, align 4
  %264 = mul nsw i32 %263, 98
  %265 = load i32, i32* %66, align 4
  %266 = mul nsw i32 %265, -560
  %267 = load i32, i32* %72, align 4
  %268 = mul nsw i32 %267, -560
  %269 = load i32, i32* %76, align 4
  %270 = mul nsw i32 %269, 1900
  %271 = load i32, i32* %88, align 4
  %272 = mul nsw i32 %271, 1900
  %273 = load i32, i32* %114, align 4
  %274 = mul nsw i32 %273, -5406
  %275 = load i32, i32* %118, align 4
  %276 = mul nsw i32 %275, -5406
  %277 = load i32, i32* %122, align 4
  %278 = mul nsw i32 %277, 29240
  %279 = load i32, i32* %134, align 4
  %280 = mul nsw i32 %279, 29240
  %281 = load i32, i32* %166, align 4
  %282 = mul nsw i32 %281, 9423
  %283 = mul nsw i32 %279, -2480
  %284 = mul nsw i32 %277, -2480
  %285 = mul nsw i32 %275, 663
  %286 = mul nsw i32 %273, 663
  %287 = mul nsw i32 %271, -110
  %288 = add i32 %282, 16384
  %289 = add i32 %288, %262
  %290 = add i32 %289, %266
  %291 = add i32 %290, %270
  %292 = add i32 %291, %287
  %293 = add i32 %292, %274
  %294 = add i32 %293, %285
  %295 = add i32 %294, %278
  %296 = add i32 %295, %283
  %297 = mul nsw i32 %269, -110
  %298 = add i32 %288, %264
  %299 = add i32 %298, %268
  %300 = add i32 %299, %297
  %301 = add i32 %300, %272
  %302 = add i32 %301, %286
  %303 = add i32 %302, %276
  %304 = add i32 %303, %284
  %305 = add i32 %304, %280
  %306 = ashr i32 %296, 15
  %307 = icmp slt i32 %306, 32767
  %308 = select i1 %307, i32 %306, i32 32767
  %309 = icmp sgt i32 %308, -32768
  %310 = select i1 %309, i32 %308, i32 -32768
  %311 = ashr i32 %305, 15
  %312 = icmp slt i32 %311, 32767
  %313 = select i1 %312, i32 %311, i32 32767
  %314 = icmp sgt i32 %313, -32768
  %315 = select i1 %314, i32 %313, i32 -32768
  %316 = trunc i32 %310 to i16
  store i16 %316, i16* %259, align 2
  %317 = trunc i32 %315 to i16
  store i16 %317, i16* %260, align 2
  %318 = getelementptr inbounds i16, i16* %53, i64 11
  %319 = add nuw nsw i32 %51, 1
  %320 = icmp eq i32 %319, 5
  br i1 %320, label %321, label %50

321:                                              ; preds = %50
  %322 = getelementptr inbounds i16, i16* %32, i64 40
  %323 = getelementptr inbounds i16, i16* %33, i64 55
  %324 = add nuw nsw i32 %31, 1
  %325 = icmp eq i32 %324, 4
  br i1 %325, label %326, label %30

326:                                              ; preds = %321
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @WebRtcSpl_ResetResample16khzTo22khz(%struct.WebRtcSpl_State16khzTo22khz* nocapture) local_unnamed_addr #2 {
  %2 = bitcast %struct.WebRtcSpl_State16khzTo22khz* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 64, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @WebRtcSpl_Resample22khzTo8khz(i16*, i16*, %struct.WebRtcSpl_State22khzTo8khz*, i32*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds i32, i32* %3, i64 16
  %6 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo8khz, %struct.WebRtcSpl_State22khzTo8khz* %2, i64 0, i32 0, i64 0
  %7 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo8khz, %struct.WebRtcSpl_State22khzTo8khz* %2, i64 0, i32 1, i64 0
  %8 = getelementptr inbounds i32, i32* %3, i64 8
  %9 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo8khz, %struct.WebRtcSpl_State22khzTo8khz* %2, i64 0, i32 1, i64 1
  %10 = getelementptr inbounds i32, i32* %3, i64 9
  %11 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo8khz, %struct.WebRtcSpl_State22khzTo8khz* %2, i64 0, i32 1, i64 2
  %12 = getelementptr inbounds i32, i32* %3, i64 10
  %13 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo8khz, %struct.WebRtcSpl_State22khzTo8khz* %2, i64 0, i32 1, i64 3
  %14 = getelementptr inbounds i32, i32* %3, i64 11
  %15 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo8khz, %struct.WebRtcSpl_State22khzTo8khz* %2, i64 0, i32 1, i64 4
  %16 = getelementptr inbounds i32, i32* %3, i64 12
  %17 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo8khz, %struct.WebRtcSpl_State22khzTo8khz* %2, i64 0, i32 1, i64 5
  %18 = getelementptr inbounds i32, i32* %3, i64 13
  %19 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo8khz, %struct.WebRtcSpl_State22khzTo8khz* %2, i64 0, i32 1, i64 6
  %20 = getelementptr inbounds i32, i32* %3, i64 14
  %21 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo8khz, %struct.WebRtcSpl_State22khzTo8khz* %2, i64 0, i32 1, i64 7
  %22 = getelementptr inbounds i32, i32* %3, i64 15
  %23 = getelementptr inbounds i32, i32* %3, i64 118
  %24 = getelementptr inbounds i32, i32* %3, i64 119
  %25 = getelementptr inbounds i32, i32* %3, i64 120
  %26 = getelementptr inbounds i32, i32* %3, i64 121
  %27 = getelementptr inbounds i32, i32* %3, i64 122
  %28 = getelementptr inbounds i32, i32* %3, i64 123
  %29 = getelementptr inbounds i32, i32* %3, i64 124
  %30 = getelementptr inbounds i32, i32* %3, i64 125
  %31 = getelementptr inbounds %struct.WebRtcSpl_State22khzTo8khz, %struct.WebRtcSpl_State22khzTo8khz* %2, i64 0, i32 2, i64 0
  tail call void @WebRtcSpl_LPBy2ShortToInt(i16* %0, i32 110, i32* %5, i32* %6) #5
  %32 = load i32, i32* %7, align 4
  store i32 %32, i32* %8, align 4
  %33 = load i32, i32* %9, align 4
  store i32 %33, i32* %10, align 4
  %34 = load i32, i32* %11, align 4
  store i32 %34, i32* %12, align 4
  %35 = load i32, i32* %13, align 4
  store i32 %35, i32* %14, align 4
  %36 = load i32, i32* %15, align 4
  store i32 %36, i32* %16, align 4
  %37 = load i32, i32* %17, align 4
  store i32 %37, i32* %18, align 4
  %38 = load i32, i32* %19, align 4
  store i32 %38, i32* %20, align 4
  %39 = load i32, i32* %21, align 4
  store i32 %39, i32* %22, align 4
  %40 = load i32, i32* %23, align 4
  store i32 %40, i32* %7, align 4
  %41 = load i32, i32* %24, align 4
  store i32 %41, i32* %9, align 4
  %42 = load i32, i32* %25, align 4
  store i32 %42, i32* %11, align 4
  %43 = load i32, i32* %26, align 4
  store i32 %43, i32* %13, align 4
  %44 = load i32, i32* %27, align 4
  store i32 %44, i32* %15, align 4
  %45 = load i32, i32* %28, align 4
  store i32 %45, i32* %17, align 4
  %46 = load i32, i32* %29, align 4
  store i32 %46, i32* %19, align 4
  %47 = load i32, i32* %30, align 4
  store i32 %47, i32* %21, align 4
  tail call void @WebRtcSpl_Resample44khzTo32khz(i32* %8, i32* %3, i64 10) #5
  tail call void @WebRtcSpl_DownBy2IntToShort(i32* %3, i32 80, i16* %1, i32* %31) #5
  %48 = getelementptr inbounds i16, i16* %0, i64 110
  %49 = getelementptr inbounds i16, i16* %1, i64 40
  tail call void @WebRtcSpl_LPBy2ShortToInt(i16* %48, i32 110, i32* %5, i32* %6) #5
  %50 = load i32, i32* %7, align 4
  store i32 %50, i32* %8, align 4
  %51 = load i32, i32* %9, align 4
  store i32 %51, i32* %10, align 4
  %52 = load i32, i32* %11, align 4
  store i32 %52, i32* %12, align 4
  %53 = load i32, i32* %13, align 4
  store i32 %53, i32* %14, align 4
  %54 = load i32, i32* %15, align 4
  store i32 %54, i32* %16, align 4
  %55 = load i32, i32* %17, align 4
  store i32 %55, i32* %18, align 4
  %56 = load i32, i32* %19, align 4
  store i32 %56, i32* %20, align 4
  %57 = load i32, i32* %21, align 4
  store i32 %57, i32* %22, align 4
  %58 = load i32, i32* %23, align 4
  store i32 %58, i32* %7, align 4
  %59 = load i32, i32* %24, align 4
  store i32 %59, i32* %9, align 4
  %60 = load i32, i32* %25, align 4
  store i32 %60, i32* %11, align 4
  %61 = load i32, i32* %26, align 4
  store i32 %61, i32* %13, align 4
  %62 = load i32, i32* %27, align 4
  store i32 %62, i32* %15, align 4
  %63 = load i32, i32* %28, align 4
  store i32 %63, i32* %17, align 4
  %64 = load i32, i32* %29, align 4
  store i32 %64, i32* %19, align 4
  %65 = load i32, i32* %30, align 4
  store i32 %65, i32* %21, align 4
  tail call void @WebRtcSpl_Resample44khzTo32khz(i32* %8, i32* %3, i64 10) #5
  tail call void @WebRtcSpl_DownBy2IntToShort(i32* %3, i32 80, i16* %49, i32* %31) #5
  ret void
}

declare void @WebRtcSpl_LPBy2ShortToInt(i16*, i32, i32*, i32*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @WebRtcSpl_ResetResample22khzTo8khz(%struct.WebRtcSpl_State22khzTo8khz* nocapture) local_unnamed_addr #2 {
  %2 = bitcast %struct.WebRtcSpl_State22khzTo8khz* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 128, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @WebRtcSpl_Resample8khzTo22khz(i16*, i16*, %struct.WebRtcSpl_State8khzTo22khz*, i32*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds i32, i32* %3, i64 18
  %6 = getelementptr inbounds %struct.WebRtcSpl_State8khzTo22khz, %struct.WebRtcSpl_State8khzTo22khz* %2, i64 0, i32 0, i64 0
  %7 = getelementptr inbounds %struct.WebRtcSpl_State8khzTo22khz, %struct.WebRtcSpl_State8khzTo22khz* %2, i64 0, i32 1, i64 0
  %8 = getelementptr inbounds i32, i32* %3, i64 10
  %9 = getelementptr inbounds %struct.WebRtcSpl_State8khzTo22khz, %struct.WebRtcSpl_State8khzTo22khz* %2, i64 0, i32 1, i64 1
  %10 = getelementptr inbounds i32, i32* %3, i64 11
  %11 = getelementptr inbounds %struct.WebRtcSpl_State8khzTo22khz, %struct.WebRtcSpl_State8khzTo22khz* %2, i64 0, i32 1, i64 2
  %12 = getelementptr inbounds i32, i32* %3, i64 12
  %13 = getelementptr inbounds %struct.WebRtcSpl_State8khzTo22khz, %struct.WebRtcSpl_State8khzTo22khz* %2, i64 0, i32 1, i64 3
  %14 = getelementptr inbounds i32, i32* %3, i64 13
  %15 = getelementptr inbounds %struct.WebRtcSpl_State8khzTo22khz, %struct.WebRtcSpl_State8khzTo22khz* %2, i64 0, i32 1, i64 4
  %16 = getelementptr inbounds i32, i32* %3, i64 14
  %17 = getelementptr inbounds %struct.WebRtcSpl_State8khzTo22khz, %struct.WebRtcSpl_State8khzTo22khz* %2, i64 0, i32 1, i64 5
  %18 = getelementptr inbounds i32, i32* %3, i64 15
  %19 = getelementptr inbounds %struct.WebRtcSpl_State8khzTo22khz, %struct.WebRtcSpl_State8khzTo22khz* %2, i64 0, i32 1, i64 6
  %20 = getelementptr inbounds i32, i32* %3, i64 16
  %21 = getelementptr inbounds %struct.WebRtcSpl_State8khzTo22khz, %struct.WebRtcSpl_State8khzTo22khz* %2, i64 0, i32 1, i64 7
  %22 = getelementptr inbounds i32, i32* %3, i64 17
  %23 = getelementptr inbounds i32, i32* %3, i64 90
  %24 = getelementptr inbounds i32, i32* %3, i64 91
  %25 = getelementptr inbounds i32, i32* %3, i64 92
  %26 = getelementptr inbounds i32, i32* %3, i64 93
  %27 = getelementptr inbounds i32, i32* %3, i64 94
  %28 = getelementptr inbounds i32, i32* %3, i64 95
  %29 = getelementptr inbounds i32, i32* %3, i64 96
  %30 = getelementptr inbounds i32, i32* %3, i64 97
  %31 = getelementptr inbounds %struct.WebRtcSpl_State8khzTo22khz, %struct.WebRtcSpl_State8khzTo22khz* %2, i64 0, i32 2, i64 0
  tail call void @WebRtcSpl_UpBy2ShortToInt(i16* %0, i32 40, i32* %5, i32* %6) #5
  %32 = load i32, i32* %7, align 4
  store i32 %32, i32* %8, align 4
  %33 = load i32, i32* %9, align 4
  store i32 %33, i32* %10, align 4
  %34 = load i32, i32* %11, align 4
  store i32 %34, i32* %12, align 4
  %35 = load i32, i32* %13, align 4
  store i32 %35, i32* %14, align 4
  %36 = load i32, i32* %15, align 4
  store i32 %36, i32* %16, align 4
  %37 = load i32, i32* %17, align 4
  store i32 %37, i32* %18, align 4
  %38 = load i32, i32* %19, align 4
  store i32 %38, i32* %20, align 4
  %39 = load i32, i32* %21, align 4
  store i32 %39, i32* %22, align 4
  %40 = load i32, i32* %23, align 4
  store i32 %40, i32* %7, align 4
  %41 = load i32, i32* %24, align 4
  store i32 %41, i32* %9, align 4
  %42 = load i32, i32* %25, align 4
  store i32 %42, i32* %11, align 4
  %43 = load i32, i32* %26, align 4
  store i32 %43, i32* %13, align 4
  %44 = load i32, i32* %27, align 4
  store i32 %44, i32* %15, align 4
  %45 = load i32, i32* %28, align 4
  store i32 %45, i32* %17, align 4
  %46 = load i32, i32* %29, align 4
  store i32 %46, i32* %19, align 4
  %47 = load i32, i32* %30, align 4
  store i32 %47, i32* %21, align 4
  tail call void @WebRtcSpl_32khzTo22khzIntToInt(i32* %8, i32* %3, i32 5)
  tail call void @WebRtcSpl_UpBy2IntToShort(i32* %3, i32 55, i16* %1, i32* %31) #5
  %48 = getelementptr inbounds i16, i16* %0, i64 40
  %49 = getelementptr inbounds i16, i16* %1, i64 110
  tail call void @WebRtcSpl_UpBy2ShortToInt(i16* %48, i32 40, i32* %5, i32* %6) #5
  %50 = load i32, i32* %7, align 4
  store i32 %50, i32* %8, align 4
  %51 = load i32, i32* %9, align 4
  store i32 %51, i32* %10, align 4
  %52 = load i32, i32* %11, align 4
  store i32 %52, i32* %12, align 4
  %53 = load i32, i32* %13, align 4
  store i32 %53, i32* %14, align 4
  %54 = load i32, i32* %15, align 4
  store i32 %54, i32* %16, align 4
  %55 = load i32, i32* %17, align 4
  store i32 %55, i32* %18, align 4
  %56 = load i32, i32* %19, align 4
  store i32 %56, i32* %20, align 4
  %57 = load i32, i32* %21, align 4
  store i32 %57, i32* %22, align 4
  %58 = load i32, i32* %23, align 4
  store i32 %58, i32* %7, align 4
  %59 = load i32, i32* %24, align 4
  store i32 %59, i32* %9, align 4
  %60 = load i32, i32* %25, align 4
  store i32 %60, i32* %11, align 4
  %61 = load i32, i32* %26, align 4
  store i32 %61, i32* %13, align 4
  %62 = load i32, i32* %27, align 4
  store i32 %62, i32* %15, align 4
  %63 = load i32, i32* %28, align 4
  store i32 %63, i32* %17, align 4
  %64 = load i32, i32* %29, align 4
  store i32 %64, i32* %19, align 4
  %65 = load i32, i32* %30, align 4
  store i32 %65, i32* %21, align 4
  tail call void @WebRtcSpl_32khzTo22khzIntToInt(i32* %8, i32* %3, i32 5)
  tail call void @WebRtcSpl_UpBy2IntToShort(i32* %3, i32 55, i16* %49, i32* %31) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcSpl_32khzTo22khzIntToInt(i32* nocapture readonly, i32* nocapture, i32) local_unnamed_addr #3 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %305

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %303, %5 ], [ 0, %3 ]
  %7 = phi i32* [ %65, %5 ], [ %0, %3 ]
  %8 = phi i32* [ %302, %5 ], [ %1, %3 ]
  %9 = getelementptr inbounds i32, i32* %7, i64 3
  %10 = load i32, i32* %9, align 4
  %11 = shl i32 %10, 15
  %12 = or i32 %11, 16384
  store i32 %12, i32* %8, align 4
  %13 = getelementptr inbounds i32, i32* %7, i64 22
  %14 = getelementptr inbounds i32, i32* %8, i64 1
  %15 = getelementptr inbounds i32, i32* %8, i64 10
  %16 = load i32, i32* %7, align 4
  %17 = mul nsw i32 %16, 127
  %18 = add nsw i32 %17, 16384
  %19 = load i32, i32* %13, align 4
  %20 = mul nsw i32 %19, 127
  %21 = add nsw i32 %20, 16384
  %22 = getelementptr inbounds i32, i32* %7, i64 1
  %23 = load i32, i32* %22, align 4
  %24 = mul nsw i32 %23, -712
  %25 = add nsw i32 %18, %24
  %26 = getelementptr inbounds i32, i32* %7, i64 21
  %27 = load i32, i32* %26, align 4
  %28 = mul nsw i32 %27, -712
  %29 = add nsw i32 %21, %28
  %30 = getelementptr inbounds i32, i32* %7, i64 2
  %31 = load i32, i32* %30, align 4
  %32 = mul nsw i32 %31, 2359
  %33 = add nsw i32 %25, %32
  %34 = getelementptr inbounds i32, i32* %7, i64 20
  %35 = load i32, i32* %34, align 4
  %36 = mul nsw i32 %35, 2359
  %37 = add nsw i32 %29, %36
  %38 = load i32, i32* %9, align 4
  %39 = mul nsw i32 %38, -6333
  %40 = add nsw i32 %33, %39
  %41 = getelementptr inbounds i32, i32* %7, i64 19
  %42 = load i32, i32* %41, align 4
  %43 = mul nsw i32 %42, -6333
  %44 = add nsw i32 %37, %43
  %45 = getelementptr inbounds i32, i32* %7, i64 4
  %46 = load i32, i32* %45, align 4
  %47 = mul nsw i32 %46, 23456
  %48 = add nsw i32 %40, %47
  %49 = getelementptr inbounds i32, i32* %7, i64 18
  %50 = load i32, i32* %49, align 4
  %51 = mul nsw i32 %50, 23456
  %52 = add nsw i32 %44, %51
  %53 = getelementptr inbounds i32, i32* %7, i64 5
  %54 = load i32, i32* %53, align 4
  %55 = mul nsw i32 %54, 16775
  %56 = add nsw i32 %48, %55
  %57 = getelementptr inbounds i32, i32* %7, i64 17
  %58 = load i32, i32* %57, align 4
  %59 = mul nsw i32 %58, 16775
  %60 = add nsw i32 %52, %59
  %61 = getelementptr inbounds i32, i32* %7, i64 6
  %62 = load i32, i32* %61, align 4
  %63 = mul nsw i32 %62, -3695
  %64 = add nsw i32 %56, %63
  %65 = getelementptr inbounds i32, i32* %7, i64 16
  %66 = load i32, i32* %65, align 4
  %67 = mul nsw i32 %66, -3695
  %68 = add nsw i32 %60, %67
  %69 = getelementptr inbounds i32, i32* %7, i64 7
  %70 = load i32, i32* %69, align 4
  %71 = mul nsw i32 %70, 945
  %72 = add nsw i32 %64, %71
  %73 = getelementptr inbounds i32, i32* %7, i64 15
  %74 = load i32, i32* %73, align 4
  %75 = mul nsw i32 %74, 945
  %76 = add nsw i32 %68, %75
  %77 = getelementptr inbounds i32, i32* %7, i64 8
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, -154
  %80 = add nsw i32 %72, %79
  store i32 %80, i32* %14, align 4
  %81 = getelementptr inbounds i32, i32* %7, i64 14
  %82 = load i32, i32* %81, align 4
  %83 = mul nsw i32 %82, -154
  %84 = add nsw i32 %76, %83
  store i32 %84, i32* %15, align 4
  %85 = getelementptr inbounds i32, i32* %8, i64 2
  %86 = getelementptr inbounds i32, i32* %8, i64 9
  %87 = load i32, i32* %30, align 4
  %88 = mul nsw i32 %87, -39
  %89 = add nsw i32 %88, 16384
  %90 = load i32, i32* %34, align 4
  %91 = mul nsw i32 %90, -39
  %92 = add nsw i32 %91, 16384
  %93 = load i32, i32* %9, align 4
  %94 = mul nsw i32 %93, 230
  %95 = add nsw i32 %89, %94
  %96 = load i32, i32* %41, align 4
  %97 = mul nsw i32 %96, 230
  %98 = add nsw i32 %92, %97
  %99 = load i32, i32* %45, align 4
  %100 = mul nsw i32 %99, -830
  %101 = add nsw i32 %95, %100
  %102 = load i32, i32* %49, align 4
  %103 = mul nsw i32 %102, -830
  %104 = add nsw i32 %98, %103
  %105 = load i32, i32* %53, align 4
  %106 = mul nsw i32 %105, 2785
  %107 = add nsw i32 %101, %106
  %108 = load i32, i32* %57, align 4
  %109 = mul nsw i32 %108, 2785
  %110 = add nsw i32 %104, %109
  %111 = load i32, i32* %61, align 4
  %112 = mul nsw i32 %111, 32366
  %113 = add nsw i32 %107, %112
  %114 = load i32, i32* %65, align 4
  %115 = mul nsw i32 %114, 32366
  %116 = add nsw i32 %110, %115
  %117 = load i32, i32* %69, align 4
  %118 = mul nsw i32 %117, -2324
  %119 = add nsw i32 %113, %118
  %120 = load i32, i32* %73, align 4
  %121 = mul nsw i32 %120, -2324
  %122 = add nsw i32 %116, %121
  %123 = load i32, i32* %77, align 4
  %124 = mul nsw i32 %123, 760
  %125 = add nsw i32 %119, %124
  %126 = load i32, i32* %81, align 4
  %127 = mul nsw i32 %126, 760
  %128 = add nsw i32 %122, %127
  %129 = getelementptr inbounds i32, i32* %7, i64 9
  %130 = load i32, i32* %129, align 4
  %131 = mul nsw i32 %130, -218
  %132 = add nsw i32 %125, %131
  %133 = getelementptr inbounds i32, i32* %7, i64 13
  %134 = load i32, i32* %133, align 4
  %135 = mul nsw i32 %134, -218
  %136 = add nsw i32 %128, %135
  %137 = getelementptr inbounds i32, i32* %7, i64 10
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, 38
  %140 = add nsw i32 %132, %139
  store i32 %140, i32* %85, align 4
  %141 = getelementptr inbounds i32, i32* %7, i64 12
  %142 = load i32, i32* %141, align 4
  %143 = mul nsw i32 %142, 38
  %144 = add nsw i32 %136, %143
  store i32 %144, i32* %86, align 4
  %145 = getelementptr inbounds i32, i32* %8, i64 3
  %146 = getelementptr inbounds i32, i32* %8, i64 8
  %147 = load i32, i32* %9, align 4
  %148 = mul nsw i32 %147, 117
  %149 = add nsw i32 %148, 16384
  %150 = load i32, i32* %41, align 4
  %151 = mul nsw i32 %150, 117
  %152 = add nsw i32 %151, 16384
  %153 = load i32, i32* %45, align 4
  %154 = mul nsw i32 %153, -663
  %155 = add nsw i32 %149, %154
  %156 = load i32, i32* %49, align 4
  %157 = mul nsw i32 %156, -663
  %158 = add nsw i32 %152, %157
  %159 = load i32, i32* %53, align 4
  %160 = mul nsw i32 %159, 2222
  %161 = add nsw i32 %155, %160
  %162 = load i32, i32* %57, align 4
  %163 = mul nsw i32 %162, 2222
  %164 = add nsw i32 %158, %163
  %165 = load i32, i32* %61, align 4
  %166 = mul nsw i32 %165, -6133
  %167 = add nsw i32 %161, %166
  %168 = load i32, i32* %65, align 4
  %169 = mul nsw i32 %168, -6133
  %170 = add nsw i32 %164, %169
  %171 = load i32, i32* %69, align 4
  %172 = mul nsw i32 %171, 26634
  %173 = add nsw i32 %167, %172
  %174 = load i32, i32* %73, align 4
  %175 = mul nsw i32 %174, 26634
  %176 = add nsw i32 %170, %175
  %177 = load i32, i32* %77, align 4
  %178 = mul nsw i32 %177, 13070
  %179 = add nsw i32 %173, %178
  %180 = load i32, i32* %81, align 4
  %181 = mul nsw i32 %180, 13070
  %182 = add nsw i32 %176, %181
  %183 = load i32, i32* %129, align 4
  %184 = mul nsw i32 %183, -3174
  %185 = add nsw i32 %179, %184
  %186 = load i32, i32* %133, align 4
  %187 = mul nsw i32 %186, -3174
  %188 = add nsw i32 %182, %187
  %189 = load i32, i32* %137, align 4
  %190 = mul nsw i32 %189, 831
  %191 = add nsw i32 %185, %190
  %192 = load i32, i32* %141, align 4
  %193 = mul nsw i32 %192, 831
  %194 = add nsw i32 %188, %193
  %195 = getelementptr inbounds i32, i32* %7, i64 11
  %196 = load i32, i32* %195, align 4
  %197 = mul nsw i32 %196, -137
  %198 = add nsw i32 %191, %197
  store i32 %198, i32* %145, align 4
  %199 = load i32, i32* %195, align 4
  %200 = mul nsw i32 %199, -137
  %201 = add nsw i32 %194, %200
  store i32 %201, i32* %146, align 4
  %202 = getelementptr inbounds i32, i32* %8, i64 4
  %203 = getelementptr inbounds i32, i32* %8, i64 7
  %204 = load i32, i32* %53, align 4
  %205 = mul nsw i32 %204, -77
  %206 = add nsw i32 %205, 16384
  %207 = load i32, i32* %57, align 4
  %208 = mul nsw i32 %207, -77
  %209 = add nsw i32 %208, 16384
  %210 = load i32, i32* %61, align 4
  %211 = mul nsw i32 %210, 457
  %212 = add nsw i32 %206, %211
  %213 = load i32, i32* %65, align 4
  %214 = mul nsw i32 %213, 457
  %215 = add nsw i32 %209, %214
  %216 = load i32, i32* %69, align 4
  %217 = mul nsw i32 %216, -1677
  %218 = add nsw i32 %212, %217
  %219 = load i32, i32* %73, align 4
  %220 = mul nsw i32 %219, -1677
  %221 = add nsw i32 %215, %220
  %222 = load i32, i32* %77, align 4
  %223 = mul nsw i32 %222, 5958
  %224 = add nsw i32 %218, %223
  %225 = load i32, i32* %81, align 4
  %226 = mul nsw i32 %225, 5958
  %227 = add nsw i32 %221, %226
  %228 = load i32, i32* %129, align 4
  %229 = mul nsw i32 %228, 31175
  %230 = add nsw i32 %224, %229
  %231 = load i32, i32* %133, align 4
  %232 = mul nsw i32 %231, 31175
  %233 = add nsw i32 %227, %232
  %234 = load i32, i32* %137, align 4
  %235 = mul nsw i32 %234, -4136
  %236 = add nsw i32 %230, %235
  %237 = load i32, i32* %141, align 4
  %238 = mul nsw i32 %237, -4136
  %239 = add nsw i32 %233, %238
  %240 = load i32, i32* %195, align 4
  %241 = mul nsw i32 %240, 1405
  %242 = add nsw i32 %236, %241
  %243 = add nsw i32 %239, %241
  %244 = mul nsw i32 %237, -408
  %245 = add nsw i32 %242, %244
  %246 = mul nsw i32 %234, -408
  %247 = add nsw i32 %243, %246
  %248 = mul nsw i32 %231, 71
  %249 = add nsw i32 %245, %248
  store i32 %249, i32* %202, align 4
  %250 = load i32, i32* %129, align 4
  %251 = mul nsw i32 %250, 71
  %252 = add nsw i32 %247, %251
  store i32 %252, i32* %203, align 4
  %253 = getelementptr inbounds i32, i32* %8, i64 5
  %254 = getelementptr inbounds i32, i32* %8, i64 6
  %255 = load i32, i32* %61, align 4
  %256 = mul nsw i32 %255, 98
  %257 = add nsw i32 %256, 16384
  %258 = load i32, i32* %65, align 4
  %259 = mul nsw i32 %258, 98
  %260 = add nsw i32 %259, 16384
  %261 = load i32, i32* %69, align 4
  %262 = mul nsw i32 %261, -560
  %263 = add nsw i32 %257, %262
  %264 = load i32, i32* %73, align 4
  %265 = mul nsw i32 %264, -560
  %266 = add nsw i32 %260, %265
  %267 = load i32, i32* %77, align 4
  %268 = mul nsw i32 %267, 1900
  %269 = add nsw i32 %263, %268
  %270 = load i32, i32* %81, align 4
  %271 = mul nsw i32 %270, 1900
  %272 = add nsw i32 %266, %271
  %273 = load i32, i32* %129, align 4
  %274 = mul nsw i32 %273, -5406
  %275 = add nsw i32 %269, %274
  %276 = load i32, i32* %133, align 4
  %277 = mul nsw i32 %276, -5406
  %278 = add nsw i32 %272, %277
  %279 = load i32, i32* %137, align 4
  %280 = mul nsw i32 %279, 29240
  %281 = add nsw i32 %275, %280
  %282 = load i32, i32* %141, align 4
  %283 = mul nsw i32 %282, 29240
  %284 = add nsw i32 %278, %283
  %285 = load i32, i32* %195, align 4
  %286 = mul nsw i32 %285, 9423
  %287 = add nsw i32 %281, %286
  %288 = add nsw i32 %284, %286
  %289 = mul nsw i32 %282, -2480
  %290 = add nsw i32 %287, %289
  %291 = mul nsw i32 %279, -2480
  %292 = add nsw i32 %288, %291
  %293 = mul nsw i32 %276, 663
  %294 = add nsw i32 %290, %293
  %295 = mul nsw i32 %273, 663
  %296 = add nsw i32 %292, %295
  %297 = mul nsw i32 %270, -110
  %298 = add nsw i32 %294, %297
  store i32 %298, i32* %253, align 4
  %299 = load i32, i32* %77, align 4
  %300 = mul nsw i32 %299, -110
  %301 = add nsw i32 %296, %300
  store i32 %301, i32* %254, align 4
  %302 = getelementptr inbounds i32, i32* %8, i64 11
  %303 = add nuw nsw i32 %6, 1
  %304 = icmp eq i32 %303, %2
  br i1 %304, label %305, label %5

305:                                              ; preds = %5, %3
  ret void
}

declare void @WebRtcSpl_UpBy2IntToShort(i32*, i32, i16*, i32*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @WebRtcSpl_ResetResample8khzTo22khz(%struct.WebRtcSpl_State8khzTo22khz* nocapture) local_unnamed_addr #2 {
  %2 = bitcast %struct.WebRtcSpl_State8khzTo22khz* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 96, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
