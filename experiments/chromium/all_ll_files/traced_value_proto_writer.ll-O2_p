; ModuleID = '../../services/tracing/public/cpp/perfetto/traced_value_proto_writer.cc'
source_filename = "../../services/tracing/public/cpp/perfetto/traced_value_proto_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.tracing::PerfettoProtoAppender" = type { %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender", %"class.std::__1::vector", %"class.perfetto::protos::pbzero::DebugAnnotation"* }
%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"*, %"class.std::__1::__compressed_pair" }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.protozero::ContiguousMemoryRange"* }
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.protozero::MessageHandle" = type { %"class.protozero::MessageHandleBase" }
%"class.protozero::MessageHandleBase" = type { %"class.protozero::Message"* }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.21", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.23", i64, i64 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.17" }
%"struct.std::__1::__split_buffer" = type { %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"**, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.protozero::MessageHandle"** }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.tracing::(anonymous namespace)::ProtoWriter" = type { %"class.base::trace_event::TracedValue::Writer", %"class.std::__1::stack", %"class.protozero::RootMessage", %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter" }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue.base" = type { %"class.protozero::Message.base" }
%"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::trace_event::TraceEventMemoryOverhead" = type { [14 x %"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize"] }
%"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize" = type { i64, i64, i64 }
%"struct.std::__1::__split_buffer.46" = type { %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"**, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::allocator.15"* }
%"class.std::__1::allocator.15" = type { i8 }

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZNSt3__15dequeIN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS7_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS8_EEE9push_backEOS8_ = comdat any

$_ZNSt3__114__split_bufferIPN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS8_EEE10push_frontEOS8_ = comdat any

$_ZNSt3__114__split_bufferIPN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEERNS_9allocatorIS8_EEE10push_frontERKS8_ = comdat any

$_ZNSt3__112__deque_baseIN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS7_EEE5clearEv = comdat any

@_ZTVN7tracing21PerfettoProtoAppenderE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.tracing::PerfettoProtoAppender"*)* @_ZN7tracing21PerfettoProtoAppenderD2Ev to i8*), i8* bitcast (void (%"class.tracing::PerfettoProtoAppender"*)* @_ZN7tracing21PerfettoProtoAppenderD0Ev to i8*), i8* bitcast (void (%"class.tracing::PerfettoProtoAppender"*, i8*, i8*)* @_ZN7tracing21PerfettoProtoAppender9AddBufferEPhS1_ to i8*), i8* bitcast (i64 (%"class.tracing::PerfettoProtoAppender"*, i32)* @_ZN7tracing21PerfettoProtoAppender8FinalizeEj to i8*)] }, align 8
@_ZTVN7tracing12_GLOBAL__N_111ProtoWriterE = internal unnamed_addr constant { [31 x i8*] } { [31 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*)* @_ZN7tracing12_GLOBAL__N_111ProtoWriterD2Ev to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*)* @_ZN7tracing12_GLOBAL__N_111ProtoWriterD0Ev to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter10BeginArrayEv to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter15BeginDictionaryEv to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter13EndDictionaryEv to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter8EndArrayEv to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*, i32)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter10SetIntegerEPKci to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*, double)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter9SetDoubleEPKcd to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*, i1)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter10SetBooleanEPKcb to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*, i8*, i64)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter9SetStringEPKcN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*, %"class.base::trace_event::TracedValue::Writer"*)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter8SetValueEPKcPN4base11trace_event11TracedValue6WriterE to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter15BeginDictionaryEPKc to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter10BeginArrayEPKc to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*, i64, i32)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter24SetIntegerWithCopiedNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEi to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*, i64, double)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter23SetDoubleWithCopiedNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEd to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*, i64, i1)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter24SetBooleanWithCopiedNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*, i64, i8*, i64)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter23SetStringWithCopiedNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES7_ to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*, i64, %"class.base::trace_event::TracedValue::Writer"*)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter22SetValueWithCopiedNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_11trace_event11TracedValue6WriterE to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*, i64)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter29BeginDictionaryWithCopiedNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*, i64)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter24BeginArrayWithCopiedNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i32)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter13AppendIntegerEi to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, double)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter12AppendDoubleEd to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i1)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter13AppendBooleanEb to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*, i64)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter12AppendStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, %"class.std::__1::basic_string"*)* @_ZNK7tracing12_GLOBAL__N_111ProtoWriter19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.tracing::(anonymous namespace)::ProtoWriter"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter13AppendToProtoEPN4base11trace_event24ConvertableToTraceFormat13ProtoAppenderE to i8*), i8* bitcast (void (%"class.tracing::(anonymous namespace)::ProtoWriter"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)* @_ZN7tracing12_GLOBAL__N_111ProtoWriter27EstimateTraceMemoryOverheadEPN4base11trace_event24TraceEventMemoryOverheadE to i8*), i8* bitcast (i1 (%"class.tracing::(anonymous namespace)::ProtoWriter"*)* @_ZNK7tracing12_GLOBAL__N_111ProtoWriter14IsPickleWriterEv to i8*), i8* bitcast (i1 (%"class.tracing::(anonymous namespace)::ProtoWriter"*)* @_ZNK7tracing12_GLOBAL__N_111ProtoWriter13IsProtoWriterEv to i8*)] }, align 8

@_ZN7tracing21PerfettoProtoAppenderC1EPN8perfetto6protos6pbzero15DebugAnnotationE = hidden unnamed_addr alias void (%"class.tracing::PerfettoProtoAppender"*, %"class.perfetto::protos::pbzero::DebugAnnotation"*), void (%"class.tracing::PerfettoProtoAppender"*, %"class.perfetto::protos::pbzero::DebugAnnotation"*)* @_ZN7tracing21PerfettoProtoAppenderC2EPN8perfetto6protos6pbzero15DebugAnnotationE
@_ZN7tracing21PerfettoProtoAppenderD1Ev = hidden unnamed_addr alias void (%"class.tracing::PerfettoProtoAppender"*), void (%"class.tracing::PerfettoProtoAppender"*)* @_ZN7tracing21PerfettoProtoAppenderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7tracing21PerfettoProtoAppenderC2EPN8perfetto6protos6pbzero15DebugAnnotationE(%"class.tracing::PerfettoProtoAppender"* nocapture, %"class.perfetto::protos::pbzero::DebugAnnotation"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.tracing::PerfettoProtoAppender", %"class.tracing::PerfettoProtoAppender"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7tracing21PerfettoProtoAppenderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.tracing::PerfettoProtoAppender", %"class.tracing::PerfettoProtoAppender"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"class.tracing::PerfettoProtoAppender", %"class.tracing::PerfettoProtoAppender"* %0, i64 0, i32 2
  store %"class.perfetto::protos::pbzero::DebugAnnotation"* %1, %"class.perfetto::protos::pbzero::DebugAnnotation"** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7tracing21PerfettoProtoAppenderD2Ev(%"class.tracing::PerfettoProtoAppender"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tracing::PerfettoProtoAppender", %"class.tracing::PerfettoProtoAppender"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7tracing21PerfettoProtoAppenderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tracing::PerfettoProtoAppender", %"class.tracing::PerfettoProtoAppender"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"** %3, align 8
  %5 = icmp eq %"struct.protozero::ContiguousMemoryRange"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %4 to i64
  %8 = getelementptr inbounds %"class.tracing::PerfettoProtoAppender", %"class.tracing::PerfettoProtoAppender"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.protozero::ContiguousMemoryRange"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.protozero::ContiguousMemoryRange"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7tracing21PerfettoProtoAppenderD0Ev(%"class.tracing::PerfettoProtoAppender"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tracing::PerfettoProtoAppender", %"class.tracing::PerfettoProtoAppender"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7tracing21PerfettoProtoAppenderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tracing::PerfettoProtoAppender", %"class.tracing::PerfettoProtoAppender"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"** %3, align 8
  %5 = icmp eq %"struct.protozero::ContiguousMemoryRange"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %4 to i64
  %8 = getelementptr inbounds %"class.tracing::PerfettoProtoAppender", %"class.tracing::PerfettoProtoAppender"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.protozero::ContiguousMemoryRange"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.protozero::ContiguousMemoryRange"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.tracing::PerfettoProtoAppender"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7tracing21PerfettoProtoAppender9AddBufferEPhS1_(%"class.tracing::PerfettoProtoAppender"*, i8*, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.tracing::PerfettoProtoAppender", %"class.tracing::PerfettoProtoAppender"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.tracing::PerfettoProtoAppender", %"class.tracing::PerfettoProtoAppender"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"** %5, align 8
  %7 = getelementptr inbounds %"class.tracing::PerfettoProtoAppender", %"class.tracing::PerfettoProtoAppender"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"** %7, align 8
  %9 = icmp ult %"struct.protozero::ContiguousMemoryRange"* %6, %8
  %10 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %8 to i64
  br i1 %9, label %11, label %16

11:                                               ; preds = %3
  %12 = bitcast %"struct.protozero::ContiguousMemoryRange"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #10
  %13 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %6, i64 1
  %14 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %13 to i64
  %15 = bitcast %"struct.protozero::ContiguousMemoryRange"** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %74

16:                                               ; preds = %3
  %17 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %6 to i64
  %18 = bitcast %"struct.protozero::ContiguousMemoryRange"** %5 to i64*
  %19 = bitcast %"class.std::__1::vector"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 4
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 1152921504606846975
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #12
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"struct.protozero::ContiguousMemoryRange"** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 4
  %31 = icmp ult i64 %30, 576460752303423487
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 3
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 1152921504606846975
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 1152921504606846975, %27 ]
  %42 = shl i64 %41, 4
  %43 = tail call i8* @_Znwm(i64 %42) #11
  %44 = bitcast i8* %43 to %"struct.protozero::ContiguousMemoryRange"*
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"struct.protozero::ContiguousMemoryRange"* [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %47, i64 %22
  %49 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %47, i64 %46
  %50 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %49 to i64
  %51 = bitcast %"struct.protozero::ContiguousMemoryRange"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #10
  %52 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %48, i64 1
  %53 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %55 = load %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 4
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %48, i64 %60
  %62 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %"struct.protozero::ContiguousMemoryRange"* %61 to i8*
  %66 = bitcast %"struct.protozero::ContiguousMemoryRange"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %58, i1 false) #10
  %67 = load %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"struct.protozero::ContiguousMemoryRange"* [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq %"struct.protozero::ContiguousMemoryRange"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = bitcast %"struct.protozero::ContiguousMemoryRange"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #11
  %73 = load %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"** %5, align 8
  br label %74

74:                                               ; preds = %11, %68, %71
  %75 = phi %"struct.protozero::ContiguousMemoryRange"* [ %13, %11 ], [ %52, %68 ], [ %73, %71 ]
  %76 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %75, i64 -1, i32 0
  store i8* %1, i8** %76, align 8
  %77 = load %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"** %5, align 8
  %78 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %77, i64 -1, i32 1
  store i8* %2, i8** %78, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7tracing21PerfettoProtoAppender8FinalizeEj(%"class.tracing::PerfettoProtoAppender"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.tracing::PerfettoProtoAppender", %"class.tracing::PerfettoProtoAppender"* %0, i64 0, i32 2
  %4 = bitcast %"class.perfetto::protos::pbzero::DebugAnnotation"** %3 to %"class.protozero::Message"**
  %5 = load %"class.protozero::Message"*, %"class.protozero::Message"** %4, align 8
  %6 = getelementptr inbounds %"class.tracing::PerfettoProtoAppender", %"class.tracing::PerfettoProtoAppender"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"** %6, align 8
  %8 = getelementptr inbounds %"class.tracing::PerfettoProtoAppender", %"class.tracing::PerfettoProtoAppender"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.protozero::ContiguousMemoryRange"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = ashr exact i64 %12, 4
  %14 = tail call i64 @_ZN9protozero7Message20AppendScatteredBytesEjPNS_21ContiguousMemoryRangeEm(%"class.protozero::Message"* %5, i32 %1, %"struct.protozero::ContiguousMemoryRange"* %7, i64 %13) #10
  ret i64 %14
}

declare i64 @_ZN9protozero7Message20AppendScatteredBytesEjPNS_21ContiguousMemoryRangeEm(%"class.protozero::Message"*, i32, %"struct.protozero::ContiguousMemoryRange"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7tracing30RegisterTracedValueProtoWriterEv() local_unnamed_addr #0 {
  tail call void @_ZN4base11trace_event11TracedValue24SetWriterFactoryCallbackEPFNSt3__110unique_ptrINS1_6WriterENS2_14default_deleteIS4_EEEEmE(%"class.base::trace_event::TracedValue::Writer"* (i64)* nonnull @_ZN7tracing12_GLOBAL__N_128CreateNestedValueProtoWriterEm) #10
  ret void
}

declare void @_ZN4base11trace_event11TracedValue24SetWriterFactoryCallbackEPFNSt3__110unique_ptrINS1_6WriterENS2_14default_deleteIS4_EEEEmE(%"class.base::trace_event::TracedValue::Writer"* (i64)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::trace_event::TracedValue::Writer"* @_ZN7tracing12_GLOBAL__N_128CreateNestedValueProtoWriterEm(i64) #0 {
  %2 = alloca [15 x i8], align 2
  %3 = alloca %"class.protozero::MessageHandle", align 8
  %4 = tail call i8* @_Znwm(i64 248) #11
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*] }, { [31 x i8*] }* @_ZTVN7tracing12_GLOBAL__N_111ProtoWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false) #10
  %7 = getelementptr inbounds i8, i8* %4, i64 56
  %8 = getelementptr inbounds i8, i8* %4, i64 104
  %9 = bitcast i8* %8 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %9) #10
  %10 = bitcast i8* %7 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %10, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %9) #10
  %11 = getelementptr inbounds i8, i8* %4, i64 128
  %12 = bitcast i8* %11 to %"class.protozero::ScatteredHeapBuffer"*
  %13 = icmp eq i64 %0, 0
  %14 = select i1 %13, i64 128, i64 %0
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* %12, i64 %14, i64 131072) #10
  %15 = getelementptr inbounds i8, i8* %4, i64 208
  %16 = bitcast i8* %15 to %"class.protozero::ScatteredStreamWriter"*
  %17 = bitcast i8* %11 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %16, %"class.protozero::ScatteredStreamWriter::Delegate"* %17) #10
  %18 = bitcast i8* %8 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %18, i64 1) #10
  %19 = bitcast i8* %8 to %"struct.std::__1::__list_node"**
  %20 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %20, i64 0, i32 1, i32 1
  store i32 0, i32* %21, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %10, %"class.protozero::ScatteredStreamWriter"* %16, %"class.protozero::MessageArena"* %9) #10
  %22 = getelementptr inbounds i8, i8* %4, i64 152
  %23 = bitcast i8* %22 to i8**
  store i8* %15, i8** %23, align 8
  %24 = tail call { i8*, i8* } @_ZN9protozero19ScatteredHeapBuffer12GetNewBufferEv(%"class.protozero::ScatteredHeapBuffer"* %12) #10
  %25 = extractvalue { i8*, i8* } %24, 0
  %26 = extractvalue { i8*, i8* } %24, 1
  tail call void @_ZN9protozero21ScatteredStreamWriter5ResetENS_21ContiguousMemoryRangeE(%"class.protozero::ScatteredStreamWriter"* %16, i8* %25, i8* %26) #10
  %27 = bitcast %"class.protozero::MessageHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %3, i64 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"* nonnull %28, %"class.protozero::Message"* %10) #10
  %29 = getelementptr inbounds i8, i8* %4, i64 24
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds i8, i8* %4, i64 16
  %33 = bitcast i8* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %31, %34
  %36 = icmp eq i64 %35, 0
  %37 = shl i64 %35, 6
  %38 = add i64 %37, -1
  %39 = select i1 %36, i64 0, i64 %38
  %40 = getelementptr inbounds i8, i8* %4, i64 40
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i8, i8* %4, i64 48
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, %42
  %47 = icmp eq i64 %39, %46
  %48 = inttoptr i64 %34 to %"class.protozero::MessageHandle"**
  %49 = inttoptr i64 %31 to %"class.protozero::MessageHandle"**
  br i1 %47, label %50, label %59

50:                                               ; preds = %1
  %51 = bitcast i8* %32 to %"class.protozero::MessageHandle"***
  %52 = bitcast i8* %29 to %"class.protozero::MessageHandle"***
  %53 = bitcast i8* %6 to %"class.std::__1::deque"*
  call void @_ZNSt3__15dequeIN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS7_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %53) #10
  %54 = load i64, i64* %44, align 8
  %55 = load i64, i64* %41, align 8
  %56 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %51, align 8
  %57 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %52, align 8
  %58 = add i64 %55, %54
  br label %59

59:                                               ; preds = %50, %1
  %60 = phi i64 [ %58, %50 ], [ %46, %1 ]
  %61 = phi %"class.protozero::MessageHandle"** [ %57, %50 ], [ %49, %1 ]
  %62 = phi %"class.protozero::MessageHandle"** [ %56, %50 ], [ %48, %1 ]
  %63 = icmp eq %"class.protozero::MessageHandle"** %61, %62
  br i1 %63, label %70, label %64

64:                                               ; preds = %59
  %65 = lshr i64 %60, 9
  %66 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %62, i64 %65
  %67 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %66, align 8
  %68 = and i64 %60, 511
  %69 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %67, i64 %68
  br label %70

70:                                               ; preds = %64, %59
  %71 = phi %"class.protozero::MessageHandle"* [ %69, %64 ], [ null, %59 ]
  %72 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %71, i64 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"* %72, %"class.protozero::MessageHandleBase"* nonnull dereferenceable(8) %28) #10
  %73 = load i64, i64* %44, align 8
  %74 = add i64 %73, 1
  store i64 %74, i64* %44, align 8
  call void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  %75 = getelementptr inbounds i8, i8* %4, i64 72
  %76 = bitcast i8* %75 to %"class.protozero::Message"**
  %77 = load %"class.protozero::Message"*, %"class.protozero::Message"** %76, align 8
  %78 = icmp eq %"class.protozero::Message"* %77, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %70
  call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %10) #10
  br label %80

80:                                               ; preds = %79, %70
  %81 = getelementptr inbounds [15 x i8], [15 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %81) #10
  %82 = getelementptr inbounds [15 x i8], [15 x i8]* %2, i64 0, i64 1
  %83 = getelementptr inbounds [15 x i8], [15 x i8]* %2, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %83, i8 -86, i64 13, i1 false) #10
  store i8 8, i8* %81, align 2
  store i8 1, i8* %82, align 1
  %84 = bitcast i8* %7 to %"class.protozero::ScatteredStreamWriter"**
  %85 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %84, align 8
  %86 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %85, i64 0, i32 2
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 2
  %89 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %85, i64 0, i32 1, i32 1
  %90 = load i8*, i8** %89, align 8
  %91 = icmp ugt i8* %88, %90
  br i1 %91, label %96, label %92, !prof !2

92:                                               ; preds = %80
  %93 = bitcast [15 x i8]* %2 to i16*
  %94 = bitcast i8* %87 to i16*
  %95 = load i16, i16* %93, align 2
  store i16 %95, i16* %94, align 1
  store i8* %88, i8** %86, align 8
  br label %97

96:                                               ; preds = %80
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %85, i8* nonnull %81, i64 2) #10
  br label %97

97:                                               ; preds = %96, %92
  %98 = getelementptr inbounds i8, i8* %4, i64 88
  %99 = bitcast i8* %98 to i32*
  %100 = load i32, i32* %99, align 8
  %101 = add i32 %100, 2
  store i32 %101, i32* %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %81) #10
  %102 = bitcast i8* %4 to %"class.base::trace_event::TracedValue::Writer"*
  ret %"class.base::trace_event::TracedValue::Writer"* %102
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #2

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #2

declare void @_ZN9protozero21ScatteredStreamWriter5ResetENS_21ContiguousMemoryRangeE(%"class.protozero::ScatteredStreamWriter"*, i8*, i8*) local_unnamed_addr #2

declare { i8*, i8* } @_ZN9protozero19ScatteredHeapBuffer12GetNewBufferEv(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriterD2Ev(%"class.tracing::(anonymous namespace)::ProtoWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*] }, { [31 x i8*] }* @_ZTVN7tracing12_GLOBAL__N_111ProtoWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %43, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %5, -1
  %11 = add i64 %10, %9
  %12 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %12, align 8
  %14 = lshr i64 %11, 9
  %15 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %13, i64 %14
  %16 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %15, align 8
  %17 = and i64 %11, 511
  %18 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %16, i64 %17, i32 0
  tail call void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"* %18) #10
  %19 = load i64, i64* %4, align 8
  %20 = add i64 %19, -1
  store i64 %20, i64* %4, align 8
  %21 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %22 = bitcast %"class.protozero::MessageHandle"*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.protozero::MessageHandle"*** %12 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = icmp eq i64 %26, 0
  %28 = shl i64 %26, 6
  %29 = add i64 %28, -1
  %30 = select i1 %27, i64 0, i64 %29
  %31 = load i64, i64* %8, align 8
  %32 = sub i64 1, %19
  %33 = sub i64 %32, %31
  %34 = add i64 %33, %30
  %35 = icmp ult i64 %34, 1024
  br i1 %35, label %43, label %36

36:                                               ; preds = %7
  %37 = inttoptr i64 %23 to %"class.protozero::MessageHandle"**
  %38 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %37, i64 -1
  %39 = bitcast %"class.protozero::MessageHandle"** %38 to i8**
  %40 = load i8*, i8** %39, align 8
  tail call void @_ZdlPv(i8* %40) #11
  %41 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %21, align 8
  %42 = getelementptr %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %41, i64 -1
  store %"class.protozero::MessageHandle"** %42, %"class.protozero::MessageHandle"*** %21, align 8
  br label %43

43:                                               ; preds = %36, %7, %1
  %44 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 4
  tail call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %44) #10
  %45 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 3
  tail call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %45) #10
  %46 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 2, i32 1
  tail call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %46) #10
  %47 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__112__deque_baseIN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS7_EEE5clearEv(%"class.std::__1::__deque_base"* %47) #10
  %48 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %49 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %48, align 8
  %50 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %51 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %50, align 8
  %52 = icmp eq %"class.protozero::MessageHandle"** %49, %51
  br i1 %52, label %71, label %53

53:                                               ; preds = %43, %53
  %54 = phi %"class.protozero::MessageHandle"** [ %57, %53 ], [ %49, %43 ]
  %55 = bitcast %"class.protozero::MessageHandle"** %54 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #11
  %57 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %54, i64 1
  %58 = icmp eq %"class.protozero::MessageHandle"** %57, %51
  br i1 %58, label %59, label %53

59:                                               ; preds = %53
  %60 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %48, align 8
  %61 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %50, align 8
  %62 = icmp eq %"class.protozero::MessageHandle"** %61, %60
  br i1 %62, label %71, label %63

63:                                               ; preds = %59
  %64 = ptrtoint %"class.protozero::MessageHandle"** %60 to i64
  %65 = getelementptr %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %61, i64 -1
  %66 = ptrtoint %"class.protozero::MessageHandle"** %65 to i64
  %67 = sub i64 %66, %64
  %68 = lshr i64 %67, 3
  %69 = xor i64 %68, -1
  %70 = getelementptr %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %61, i64 %69
  store %"class.protozero::MessageHandle"** %70, %"class.protozero::MessageHandle"*** %50, align 8
  br label %71

71:                                               ; preds = %63, %59, %43
  %72 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %72, align 8
  %74 = icmp eq %"class.protozero::MessageHandle"** %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.protozero::MessageHandle"** %73 to i8*
  tail call void @_ZdlPv(i8* %76) #11
  br label %77

77:                                               ; preds = %71, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriterD0Ev(%"class.tracing::(anonymous namespace)::ProtoWriter"*) unnamed_addr #0 align 2 {
  tail call void @_ZN7tracing12_GLOBAL__N_111ProtoWriterD2Ev(%"class.tracing::(anonymous namespace)::ProtoWriter"* %0) #10
  %2 = bitcast %"class.tracing::(anonymous namespace)::ProtoWriter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter10BeginArrayEv(%"class.tracing::(anonymous namespace)::ProtoWriter"*) unnamed_addr #0 align 2 {
  %2 = alloca [15 x i8], align 2
  %3 = alloca %"class.protozero::MessageHandle", align 8
  %4 = bitcast %"class.protozero::MessageHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %6, -1
  %10 = add i64 %9, %8
  %11 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %11, align 8
  %13 = lshr i64 %10, 9
  %14 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %12, i64 %13
  %15 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %14, align 8
  %16 = and i64 %10, 511
  %17 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %15, i64 %16, i32 0, i32 0
  %18 = load %"class.protozero::Message"*, %"class.protozero::Message"** %17, align 8
  %19 = tail call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %18, i32 4) #10
  %20 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %3, i64 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"* nonnull %20, %"class.protozero::Message"* %19) #10
  %21 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %22 = bitcast %"class.protozero::MessageHandle"*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.protozero::MessageHandle"*** %11 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = icmp eq i64 %26, 0
  %28 = shl i64 %26, 6
  %29 = add i64 %28, -1
  %30 = select i1 %27, i64 0, i64 %29
  %31 = load i64, i64* %7, align 8
  %32 = load i64, i64* %5, align 8
  %33 = add i64 %32, %31
  %34 = icmp eq i64 %30, %33
  %35 = inttoptr i64 %25 to %"class.protozero::MessageHandle"**
  %36 = inttoptr i64 %23 to %"class.protozero::MessageHandle"**
  br i1 %34, label %37, label %44

37:                                               ; preds = %1
  %38 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0
  call void @_ZNSt3__15dequeIN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS7_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %38) #10
  %39 = load i64, i64* %5, align 8
  %40 = load i64, i64* %7, align 8
  %41 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %11, align 8
  %42 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %21, align 8
  %43 = add i64 %40, %39
  br label %44

44:                                               ; preds = %37, %1
  %45 = phi i64 [ %43, %37 ], [ %33, %1 ]
  %46 = phi %"class.protozero::MessageHandle"** [ %42, %37 ], [ %36, %1 ]
  %47 = phi %"class.protozero::MessageHandle"** [ %41, %37 ], [ %35, %1 ]
  %48 = icmp eq %"class.protozero::MessageHandle"** %46, %47
  br i1 %48, label %55, label %49

49:                                               ; preds = %44
  %50 = lshr i64 %45, 9
  %51 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %47, i64 %50
  %52 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %51, align 8
  %53 = and i64 %45, 511
  %54 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %52, i64 %53
  br label %55

55:                                               ; preds = %44, %49
  %56 = phi %"class.protozero::MessageHandle"* [ %54, %49 ], [ null, %44 ]
  %57 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %56, i64 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"* %57, %"class.protozero::MessageHandleBase"* nonnull dereferenceable(8) %20) #10
  %58 = load i64, i64* %5, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %5, align 8
  call void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  %60 = load i64, i64* %5, align 8
  %61 = load i64, i64* %7, align 8
  %62 = add i64 %60, -1
  %63 = add i64 %62, %61
  %64 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %11, align 8
  %65 = lshr i64 %63, 9
  %66 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %64, i64 %65
  %67 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %66, align 8
  %68 = and i64 %63, 511
  %69 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %67, i64 %68
  %70 = bitcast %"class.protozero::MessageHandle"* %69 to %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"**
  %71 = load %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"*, %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"** %70, align 8
  %72 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %71, i64 0, i32 0, i32 2
  %73 = load %"class.protozero::Message"*, %"class.protozero::Message"** %72, align 8
  %74 = icmp eq %"class.protozero::Message"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %55
  %76 = bitcast %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %71 to %"class.protozero::Message"*
  call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %76) #10
  br label %77

77:                                               ; preds = %75, %55
  %78 = getelementptr inbounds [15 x i8], [15 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %78) #10
  %79 = getelementptr inbounds [15 x i8], [15 x i8]* %2, i64 0, i64 1
  %80 = getelementptr inbounds [15 x i8], [15 x i8]* %2, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %80, i8 -86, i64 13, i1 false) #10
  store i8 8, i8* %78, align 2
  store i8 2, i8* %79, align 1
  %81 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %71, i64 0, i32 0, i32 0
  %82 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %81, align 8
  %83 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %82, i64 0, i32 2
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 2
  %86 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %82, i64 0, i32 1, i32 1
  %87 = load i8*, i8** %86, align 8
  %88 = icmp ugt i8* %85, %87
  br i1 %88, label %93, label %89, !prof !2

89:                                               ; preds = %77
  %90 = bitcast [15 x i8]* %2 to i16*
  %91 = bitcast i8* %84 to i16*
  %92 = load i16, i16* %90, align 2
  store i16 %92, i16* %91, align 1
  store i8* %85, i8** %83, align 8
  br label %94

93:                                               ; preds = %77
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %82, i8* nonnull %78, i64 2) #10
  br label %94

94:                                               ; preds = %89, %93
  %95 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %71, i64 0, i32 0, i32 4
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, 2
  store i32 %97, i32* %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %78) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter15BeginDictionaryEv(%"class.tracing::(anonymous namespace)::ProtoWriter"*) unnamed_addr #0 align 2 {
  %2 = alloca [15 x i8], align 2
  %3 = alloca %"class.protozero::MessageHandle", align 8
  %4 = bitcast %"class.protozero::MessageHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %6, -1
  %10 = add i64 %9, %8
  %11 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %11, align 8
  %13 = lshr i64 %10, 9
  %14 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %12, i64 %13
  %15 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %14, align 8
  %16 = and i64 %10, 511
  %17 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %15, i64 %16, i32 0, i32 0
  %18 = load %"class.protozero::Message"*, %"class.protozero::Message"** %17, align 8
  %19 = tail call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %18, i32 4) #10
  %20 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %3, i64 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"* nonnull %20, %"class.protozero::Message"* %19) #10
  %21 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %22 = bitcast %"class.protozero::MessageHandle"*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.protozero::MessageHandle"*** %11 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = icmp eq i64 %26, 0
  %28 = shl i64 %26, 6
  %29 = add i64 %28, -1
  %30 = select i1 %27, i64 0, i64 %29
  %31 = load i64, i64* %7, align 8
  %32 = load i64, i64* %5, align 8
  %33 = add i64 %32, %31
  %34 = icmp eq i64 %30, %33
  %35 = inttoptr i64 %25 to %"class.protozero::MessageHandle"**
  %36 = inttoptr i64 %23 to %"class.protozero::MessageHandle"**
  br i1 %34, label %37, label %44

37:                                               ; preds = %1
  %38 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0
  call void @_ZNSt3__15dequeIN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS7_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %38) #10
  %39 = load i64, i64* %5, align 8
  %40 = load i64, i64* %7, align 8
  %41 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %11, align 8
  %42 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %21, align 8
  %43 = add i64 %40, %39
  br label %44

44:                                               ; preds = %37, %1
  %45 = phi i64 [ %43, %37 ], [ %33, %1 ]
  %46 = phi %"class.protozero::MessageHandle"** [ %42, %37 ], [ %36, %1 ]
  %47 = phi %"class.protozero::MessageHandle"** [ %41, %37 ], [ %35, %1 ]
  %48 = icmp eq %"class.protozero::MessageHandle"** %46, %47
  br i1 %48, label %55, label %49

49:                                               ; preds = %44
  %50 = lshr i64 %45, 9
  %51 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %47, i64 %50
  %52 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %51, align 8
  %53 = and i64 %45, 511
  %54 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %52, i64 %53
  br label %55

55:                                               ; preds = %44, %49
  %56 = phi %"class.protozero::MessageHandle"* [ %54, %49 ], [ null, %44 ]
  %57 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %56, i64 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"* %57, %"class.protozero::MessageHandleBase"* nonnull dereferenceable(8) %20) #10
  %58 = load i64, i64* %5, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %5, align 8
  call void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  %60 = load i64, i64* %5, align 8
  %61 = load i64, i64* %7, align 8
  %62 = add i64 %60, -1
  %63 = add i64 %62, %61
  %64 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %11, align 8
  %65 = lshr i64 %63, 9
  %66 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %64, i64 %65
  %67 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %66, align 8
  %68 = and i64 %63, 511
  %69 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %67, i64 %68
  %70 = bitcast %"class.protozero::MessageHandle"* %69 to %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"**
  %71 = load %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"*, %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"** %70, align 8
  %72 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %71, i64 0, i32 0, i32 2
  %73 = load %"class.protozero::Message"*, %"class.protozero::Message"** %72, align 8
  %74 = icmp eq %"class.protozero::Message"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %55
  %76 = bitcast %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %71 to %"class.protozero::Message"*
  call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %76) #10
  br label %77

77:                                               ; preds = %75, %55
  %78 = getelementptr inbounds [15 x i8], [15 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %78) #10
  %79 = getelementptr inbounds [15 x i8], [15 x i8]* %2, i64 0, i64 1
  %80 = getelementptr inbounds [15 x i8], [15 x i8]* %2, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %80, i8 -86, i64 13, i1 false) #10
  store i8 8, i8* %78, align 2
  store i8 1, i8* %79, align 1
  %81 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %71, i64 0, i32 0, i32 0
  %82 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %81, align 8
  %83 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %82, i64 0, i32 2
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 2
  %86 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %82, i64 0, i32 1, i32 1
  %87 = load i8*, i8** %86, align 8
  %88 = icmp ugt i8* %85, %87
  br i1 %88, label %93, label %89, !prof !2

89:                                               ; preds = %77
  %90 = bitcast [15 x i8]* %2 to i16*
  %91 = bitcast i8* %84 to i16*
  %92 = load i16, i16* %90, align 2
  store i16 %92, i16* %91, align 1
  store i8* %85, i8** %83, align 8
  br label %94

93:                                               ; preds = %77
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %82, i8* nonnull %78, i64 2) #10
  br label %94

94:                                               ; preds = %89, %93
  %95 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %71, i64 0, i32 0, i32 4
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, 2
  store i32 %97, i32* %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %78) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter13EndDictionaryEv(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %3, -1
  %7 = add i64 %6, %5
  %8 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %9 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %8, align 8
  %10 = lshr i64 %7, 9
  %11 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %9, i64 %10
  %12 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %11, align 8
  %13 = and i64 %7, 511
  %14 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %12, i64 %13, i32 0
  tail call void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"* %14) #10
  %15 = load i64, i64* %2, align 8
  %16 = add i64 %15, -1
  store i64 %16, i64* %2, align 8
  %17 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast %"class.protozero::MessageHandle"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.protozero::MessageHandle"*** %8 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = icmp eq i64 %22, 0
  %24 = shl i64 %22, 6
  %25 = add i64 %24, -1
  %26 = select i1 %23, i64 0, i64 %25
  %27 = load i64, i64* %4, align 8
  %28 = sub i64 1, %15
  %29 = sub i64 %28, %27
  %30 = add i64 %29, %26
  %31 = icmp ult i64 %30, 1024
  br i1 %31, label %39, label %32

32:                                               ; preds = %1
  %33 = inttoptr i64 %19 to %"class.protozero::MessageHandle"**
  %34 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %33, i64 -1
  %35 = bitcast %"class.protozero::MessageHandle"** %34 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #11
  %37 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %17, align 8
  %38 = getelementptr %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %37, i64 -1
  store %"class.protozero::MessageHandle"** %38, %"class.protozero::MessageHandle"*** %17, align 8
  br label %39

39:                                               ; preds = %1, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter8EndArrayEv(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %3, -1
  %7 = add i64 %6, %5
  %8 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %9 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %8, align 8
  %10 = lshr i64 %7, 9
  %11 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %9, i64 %10
  %12 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %11, align 8
  %13 = and i64 %7, 511
  %14 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %12, i64 %13, i32 0
  tail call void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"* %14) #10
  %15 = load i64, i64* %2, align 8
  %16 = add i64 %15, -1
  store i64 %16, i64* %2, align 8
  %17 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast %"class.protozero::MessageHandle"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.protozero::MessageHandle"*** %8 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = icmp eq i64 %22, 0
  %24 = shl i64 %22, 6
  %25 = add i64 %24, -1
  %26 = select i1 %23, i64 0, i64 %25
  %27 = load i64, i64* %4, align 8
  %28 = sub i64 1, %15
  %29 = sub i64 %28, %27
  %30 = add i64 %29, %26
  %31 = icmp ult i64 %30, 1024
  br i1 %31, label %39, label %32

32:                                               ; preds = %1
  %33 = inttoptr i64 %19 to %"class.protozero::MessageHandle"**
  %34 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %33, i64 -1
  %35 = bitcast %"class.protozero::MessageHandle"** %34 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #11
  %37 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %17, align 8
  %38 = getelementptr %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %37, i64 -1
  store %"class.protozero::MessageHandle"** %38, %"class.protozero::MessageHandle"*** %17, align 8
  br label %39

39:                                               ; preds = %1, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter10SetIntegerEPKci(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readonly, i8* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = alloca [15 x i8], align 1
  %5 = tail call fastcc %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* @_ZN7tracing12_GLOBAL__N_111ProtoWriter12AddDictEntryEPKc(%"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i8* %1)
  %6 = sext i32 %2 to i64
  %7 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %5, i64 0, i32 0, i32 2
  %8 = load %"class.protozero::Message"*, %"class.protozero::Message"** %7, align 8
  %9 = icmp eq %"class.protozero::Message"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %5 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %11) #10
  br label %12

12:                                               ; preds = %10, %3
  %13 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %13) #10
  %14 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -86, i64 14, i1 false) #10
  store i8 40, i8* %13, align 1
  %15 = icmp ugt i32 %2, 127
  %16 = trunc i32 %2 to i8
  br i1 %15, label %17, label %28

17:                                               ; preds = %12, %17
  %18 = phi i8 [ %25, %17 ], [ %16, %12 ]
  %19 = phi i64 [ %23, %17 ], [ %6, %12 ]
  %20 = phi i8* [ %22, %17 ], [ %14, %12 ]
  %21 = or i8 %18, -128
  %22 = getelementptr inbounds i8, i8* %20, i64 1
  store i8 %21, i8* %20, align 1
  %23 = lshr i64 %19, 7
  %24 = icmp ugt i64 %19, 16383
  %25 = trunc i64 %23 to i8
  br i1 %24, label %17, label %26

26:                                               ; preds = %17
  %27 = trunc i64 %23 to i8
  br label %28

28:                                               ; preds = %26, %12
  %29 = phi i8* [ %14, %12 ], [ %22, %26 ]
  %30 = phi i8 [ %16, %12 ], [ %27, %26 ]
  store i8 %30, i8* %29, align 1
  %31 = getelementptr inbounds i8, i8* %29, i64 1
  %32 = ptrtoint i8* %31 to i64
  %33 = ptrtoint [15 x i8]* %4 to i64
  %34 = sub i64 %32, %33
  %35 = trunc i64 %34 to i32
  %36 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %5, i64 0, i32 0, i32 0
  %37 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %36, align 8
  %38 = and i64 %34, 4294967295
  %39 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %37, i64 0, i32 2
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 %38
  %42 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %37, i64 0, i32 1, i32 1
  %43 = load i8*, i8** %42, align 8
  %44 = icmp ugt i8* %41, %43
  br i1 %44, label %46, label %45, !prof !2

45:                                               ; preds = %28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* nonnull align 1 %13, i64 %38, i1 false) #10
  store i8* %41, i8** %39, align 8
  br label %47

46:                                               ; preds = %28
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %37, i8* nonnull %13, i64 %38) #10
  br label %47

47:                                               ; preds = %45, %46
  %48 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %5, i64 0, i32 0, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = add i32 %49, %35
  store i32 %50, i32* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter9SetDoubleEPKcd(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readonly, i8* nocapture readonly, double) unnamed_addr #0 align 2 {
  %4 = alloca [15 x i8], align 1
  %5 = tail call fastcc %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* @_ZN7tracing12_GLOBAL__N_111ProtoWriter12AddDictEntryEPKc(%"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i8* %1)
  %6 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %5, i64 0, i32 0, i32 2
  %7 = load %"class.protozero::Message"*, %"class.protozero::Message"** %6, align 8
  %8 = icmp eq %"class.protozero::Message"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %5 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %10) #10
  br label %11

11:                                               ; preds = %9, %3
  %12 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %12) #10
  %13 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %13, i8 -86, i64 6, i1 false) #10
  store i8 49, i8* %12, align 1
  %14 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 1
  %15 = bitcast i8* %14 to double*
  store double %2, double* %15, align 1
  %16 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %5, i64 0, i32 0, i32 0
  %17 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %16, align 8
  %18 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %17, i64 0, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 9
  %21 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %17, i64 0, i32 1, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = icmp ugt i8* %20, %22
  br i1 %23, label %25, label %24, !prof !2

24:                                               ; preds = %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* nonnull align 1 %12, i64 9, i1 false) #10
  store i8* %20, i8** %18, align 8
  br label %26

25:                                               ; preds = %11
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %17, i8* nonnull %12, i64 9) #10
  br label %26

26:                                               ; preds = %24, %25
  %27 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %5, i64 0, i32 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, 9
  store i32 %29, i32* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter10SetBooleanEPKcb(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readonly, i8* nocapture readonly, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca [15 x i8], align 2
  %5 = tail call fastcc %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* @_ZN7tracing12_GLOBAL__N_111ProtoWriter12AddDictEntryEPKc(%"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i8* %1)
  %6 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %5, i64 0, i32 0, i32 2
  %7 = load %"class.protozero::Message"*, %"class.protozero::Message"** %6, align 8
  %8 = icmp eq %"class.protozero::Message"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %5 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %10) #10
  br label %11

11:                                               ; preds = %9, %3
  %12 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %12) #10
  %13 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %13, i8 -86, i64 13, i1 false) #10
  store i8 56, i8* %12, align 2
  %14 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 1
  %15 = zext i1 %2 to i8
  store i8 %15, i8* %14, align 1
  %16 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %5, i64 0, i32 0, i32 0
  %17 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %16, align 8
  %18 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %17, i64 0, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 2
  %21 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %17, i64 0, i32 1, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = icmp ugt i8* %20, %22
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %11
  %25 = bitcast [15 x i8]* %4 to i16*
  %26 = bitcast i8* %19 to i16*
  %27 = load i16, i16* %25, align 2
  store i16 %27, i16* %26, align 1
  store i8* %20, i8** %18, align 8
  br label %29

28:                                               ; preds = %11
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %17, i8* nonnull %12, i64 2) #10
  br label %29

29:                                               ; preds = %24, %28
  %30 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %5, i64 0, i32 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, 2
  store i32 %32, i32* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter9SetStringEPKcN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readonly, i8* nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* @_ZN7tracing12_GLOBAL__N_111ProtoWriter12AddDictEntryEPKc(%"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i8* %1)
  %6 = bitcast %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %5 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message11AppendBytesEjPKvm(%"class.protozero::Message"* %6, i32 8, i8* %2, i64 %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter8SetValueEPKcPN4base11trace_event11TracedValue6WriterE(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readonly, i8* nocapture readonly, %"class.base::trace_event::TracedValue::Writer"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = getelementptr inbounds %"class.base::trace_event::TracedValue::Writer", %"class.base::trace_event::TracedValue::Writer"* %2, i64 6
  %7 = bitcast %"class.base::trace_event::TracedValue::Writer"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %49, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::trace_event::TracedValue::Writer", %"class.base::trace_event::TracedValue::Writer"* %2, i64 5
  %12 = bitcast %"class.base::trace_event::TracedValue::Writer"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %8, -1
  %15 = add i64 %14, %13
  %16 = getelementptr inbounds %"class.base::trace_event::TracedValue::Writer", %"class.base::trace_event::TracedValue::Writer"* %2, i64 2
  %17 = bitcast %"class.base::trace_event::TracedValue::Writer"* %16 to %"class.protozero::MessageHandle"***
  %18 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %17, align 8
  %19 = lshr i64 %15, 9
  %20 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %18, i64 %19
  %21 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %20, align 8
  %22 = and i64 %15, 511
  %23 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %21, i64 %22, i32 0
  tail call void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"* %23) #10
  %24 = load i64, i64* %7, align 8
  %25 = add i64 %24, -1
  store i64 %25, i64* %7, align 8
  %26 = getelementptr inbounds %"class.base::trace_event::TracedValue::Writer", %"class.base::trace_event::TracedValue::Writer"* %2, i64 3
  %27 = bitcast %"class.base::trace_event::TracedValue::Writer"* %26 to %"class.protozero::MessageHandle"***
  %28 = bitcast %"class.base::trace_event::TracedValue::Writer"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::trace_event::TracedValue::Writer"* %16 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = icmp eq i64 %32, 0
  %34 = shl i64 %32, 6
  %35 = add i64 %34, -1
  %36 = select i1 %33, i64 0, i64 %35
  %37 = load i64, i64* %12, align 8
  %38 = sub i64 1, %24
  %39 = sub i64 %38, %37
  %40 = add i64 %39, %36
  %41 = icmp ult i64 %40, 1024
  br i1 %41, label %49, label %42

42:                                               ; preds = %10
  %43 = inttoptr i64 %29 to %"class.protozero::MessageHandle"**
  %44 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %43, i64 -1
  %45 = bitcast %"class.protozero::MessageHandle"** %44 to i8**
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #11
  %47 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %27, align 8
  %48 = getelementptr %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %47, i64 -1
  store %"class.protozero::MessageHandle"** %48, %"class.protozero::MessageHandle"*** %27, align 8
  br label %49

49:                                               ; preds = %42, %10, %3
  %50 = getelementptr inbounds %"class.base::trace_event::TracedValue::Writer", %"class.base::trace_event::TracedValue::Writer"* %2, i64 7
  %51 = bitcast %"class.base::trace_event::TracedValue::Writer"* %50 to %"class.protozero::Message"*
  %52 = tail call i32 @_ZN9protozero7Message8FinalizeEv(%"class.protozero::Message"* %51) #10
  %53 = getelementptr inbounds %"class.base::trace_event::TracedValue::Writer", %"class.base::trace_event::TracedValue::Writer"* %2, i64 16
  %54 = bitcast %"class.base::trace_event::TracedValue::Writer"* %53 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBuffer28AdjustUsedSizeOfCurrentSliceEv(%"class.protozero::ScatteredHeapBuffer"* %54) #10
  %55 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %56, -1
  %60 = add i64 %59, %58
  %61 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %62 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %61, align 8
  %63 = lshr i64 %60, 9
  %64 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %62, i64 %63
  %65 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %64, align 8
  %66 = and i64 %60, 511
  %67 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %65, i64 %66, i32 0, i32 0
  %68 = load %"class.protozero::Message"*, %"class.protozero::Message"** %67, align 8
  %69 = tail call i64 @strlen(i8* %1) #10
  %70 = icmp ugt i64 %69, -17
  br i1 %70, label %71, label %73

71:                                               ; preds = %49
  %72 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %72) #12
  unreachable

73:                                               ; preds = %49
  %74 = icmp ult i64 %69, 23
  br i1 %74, label %85, label %75

75:                                               ; preds = %73
  %76 = add nuw i64 %69, 16
  %77 = and i64 %76, -16
  %78 = tail call i8* @_Znwm(i64 %77) #11
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %78, i8** %79, align 8
  %80 = or i64 %77, -9223372036854775808
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %69, i64* %82, align 8
  %83 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %91

85:                                               ; preds = %73
  %86 = trunc i64 %69 to i8
  %87 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  store i8 %86, i8* %88, align 1
  %89 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %90 = icmp eq i64 %69, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %85, %75
  %92 = phi i8* [ %89, %85 ], [ %84, %75 ]
  %93 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %87, %85 ], [ %83, %75 ]
  %94 = phi i8* [ %89, %85 ], [ %78, %75 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %94, i8* align 1 %1, i64 %69, i1 false) #10
  br label %95

95:                                               ; preds = %85, %91
  %96 = phi i8* [ %89, %85 ], [ %92, %91 ]
  %97 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %87, %85 ], [ %93, %91 ]
  %98 = phi i8* [ %89, %85 ], [ %94, %91 ]
  %99 = getelementptr inbounds i8, i8* %98, i64 %69
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = zext i8 %101 to i64
  %108 = select i1 %102, i8* %104, i8* %96
  %109 = select i1 %102, i64 %106, i64 %107
  call void @_ZN9protozero7Message11AppendBytesEjPKvm(%"class.protozero::Message"* %68, i32 2, i8* %108, i64 %109) #10
  %110 = load i8, i8* %100, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %95
  %113 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %113) #11
  br label %114

114:                                              ; preds = %95, %112
  %115 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #10
  %116 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %118 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 0, i64 24, i1 false) #10
  %119 = getelementptr inbounds %"class.base::trace_event::TracedValue::Writer", %"class.base::trace_event::TracedValue::Writer"* %2, i64 20
  %120 = bitcast %"class.base::trace_event::TracedValue::Writer"* %119 to %"class.protozero::ScatteredHeapBuffer::Slice"**
  %121 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %120, align 8
  %122 = getelementptr inbounds %"class.base::trace_event::TracedValue::Writer", %"class.base::trace_event::TracedValue::Writer"* %2, i64 21
  %123 = bitcast %"class.base::trace_event::TracedValue::Writer"* %122 to %"class.protozero::ScatteredHeapBuffer::Slice"**
  %124 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %123, align 8
  %125 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %121, %124
  %126 = bitcast %"struct.protozero::ContiguousMemoryRange"** %117 to i64*
  br i1 %125, label %133, label %127

127:                                              ; preds = %114
  %128 = bitcast %"class.std::__1::vector"* %5 to i64*
  %129 = bitcast %"struct.protozero::ContiguousMemoryRange"** %118 to i64*
  br label %157

130:                                              ; preds = %227
  %131 = load %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"** %116, align 8
  %132 = load i64, i64* %126, align 8
  br label %133

133:                                              ; preds = %114, %130
  %134 = phi i64 [ %132, %130 ], [ 0, %114 ]
  %135 = phi %"struct.protozero::ContiguousMemoryRange"* [ %131, %130 ], [ null, %114 ]
  %136 = load i64, i64* %55, align 8
  %137 = load i64, i64* %57, align 8
  %138 = add i64 %136, -1
  %139 = add i64 %138, %137
  %140 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %61, align 8
  %141 = lshr i64 %139, 9
  %142 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %140, i64 %141
  %143 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %142, align 8
  %144 = and i64 %139, 511
  %145 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %143, i64 %144, i32 0, i32 0
  %146 = load %"class.protozero::Message"*, %"class.protozero::Message"** %145, align 8
  %147 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %135 to i64
  %148 = sub i64 %134, %147
  %149 = ashr exact i64 %148, 4
  %150 = call i64 @_ZN9protozero7Message20AppendScatteredBytesEjPNS_21ContiguousMemoryRangeEm(%"class.protozero::Message"* %146, i32 3, %"struct.protozero::ContiguousMemoryRange"* %135, i64 %149) #10
  %151 = load %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"** %116, align 8
  %152 = icmp eq %"struct.protozero::ContiguousMemoryRange"* %151, null
  br i1 %152, label %156, label %153

153:                                              ; preds = %133
  %154 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %151 to i64
  store i64 %154, i64* %126, align 8
  %155 = bitcast %"struct.protozero::ContiguousMemoryRange"* %151 to i8*
  call void @_ZdlPv(i8* %155) #11
  br label %156

156:                                              ; preds = %133, %153
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #10
  ret void

157:                                              ; preds = %230, %127
  %158 = phi i64 [ 0, %127 ], [ %233, %230 ]
  %159 = phi %"struct.protozero::ContiguousMemoryRange"* [ null, %127 ], [ %232, %230 ]
  %160 = phi %"struct.protozero::ContiguousMemoryRange"* [ null, %127 ], [ %231, %230 ]
  %161 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %121, %127 ], [ %228, %230 ]
  %162 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %161, i64 0, i32 0, i32 0, i32 0, i32 0
  %163 = load i8*, i8** %162, align 8
  %164 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %161, i64 0, i32 1
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds i8, i8* %163, i64 %165
  %167 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %161, i64 0, i32 2
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 0, %168
  %170 = getelementptr inbounds i8, i8* %166, i64 %169
  %171 = icmp ult %"struct.protozero::ContiguousMemoryRange"* %160, %159
  %172 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %159 to i64
  br i1 %171, label %173, label %178

173:                                              ; preds = %157
  %174 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %160, i64 0, i32 0
  store i8* %163, i8** %174, align 8
  %175 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %160, i64 0, i32 1
  store i8* %170, i8** %175, align 8
  %176 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %160, i64 1
  %177 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %176 to i64
  store i64 %177, i64* %126, align 8
  br label %227

178:                                              ; preds = %157
  %179 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %160 to i64
  %180 = load i64, i64* %128, align 8
  %181 = sub i64 %179, %180
  %182 = ashr exact i64 %181, 4
  %183 = add nsw i64 %182, 1
  %184 = icmp ugt i64 %183, 1152921504606846975
  br i1 %184, label %185, label %187

185:                                              ; preds = %178
  %186 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %186) #12
  unreachable

187:                                              ; preds = %178
  %188 = sub i64 %172, %180
  %189 = ashr exact i64 %188, 4
  %190 = icmp ult i64 %189, 576460752303423487
  br i1 %190, label %191, label %199

191:                                              ; preds = %187
  %192 = ashr exact i64 %188, 3
  %193 = icmp ult i64 %192, %183
  %194 = select i1 %193, i64 %183, i64 %192
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %204, label %196

196:                                              ; preds = %191
  %197 = icmp ugt i64 %194, 1152921504606846975
  br i1 %197, label %198, label %199

198:                                              ; preds = %196
  call void @abort() #12
  unreachable

199:                                              ; preds = %196, %187
  %200 = phi i64 [ %194, %196 ], [ 1152921504606846975, %187 ]
  %201 = shl i64 %200, 4
  %202 = call i8* @_Znwm(i64 %201) #11
  %203 = bitcast i8* %202 to %"struct.protozero::ContiguousMemoryRange"*
  br label %204

204:                                              ; preds = %199, %191
  %205 = phi i64 [ %200, %199 ], [ 0, %191 ]
  %206 = phi %"struct.protozero::ContiguousMemoryRange"* [ %203, %199 ], [ null, %191 ]
  %207 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %206, i64 %182
  %208 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %206, i64 %205
  %209 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %208 to i64
  %210 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %207, i64 0, i32 0
  store i8* %163, i8** %210, align 8
  %211 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %206, i64 %182, i32 1
  store i8* %170, i8** %211, align 8
  %212 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %207, i64 1
  %213 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %212 to i64
  %214 = sub i64 %158, %180
  %215 = ashr exact i64 %214, 4
  %216 = sub nsw i64 0, %215
  %217 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %207, i64 %216
  %218 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %217 to i64
  %219 = icmp sgt i64 %214, 0
  br i1 %219, label %220, label %223

220:                                              ; preds = %204
  %221 = bitcast %"struct.protozero::ContiguousMemoryRange"* %217 to i8*
  %222 = inttoptr i64 %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %221, i8* align 8 %222, i64 %214, i1 false) #10
  br label %223

223:                                              ; preds = %220, %204
  store i64 %218, i64* %128, align 8
  store i64 %213, i64* %126, align 8
  store i64 %209, i64* %129, align 8
  %224 = icmp eq i64 %180, 0
  br i1 %224, label %227, label %225

225:                                              ; preds = %223
  %226 = inttoptr i64 %180 to i8*
  call void @_ZdlPv(i8* %226) #11
  br label %227

227:                                              ; preds = %173, %223, %225
  %228 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %161, i64 1
  %229 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %228, %124
  br i1 %229, label %130, label %230

230:                                              ; preds = %227
  %231 = load %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"** %117, align 8
  %232 = load %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"** %118, align 8
  %233 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %231 to i64
  br label %157
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter15BeginDictionaryEPKc(%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca [15 x i8], align 2
  %4 = alloca %"class.protozero::MessageHandle", align 8
  %5 = bitcast %"class.protozero::MessageHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = tail call fastcc %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* @_ZN7tracing12_GLOBAL__N_111ProtoWriter12AddDictEntryEPKc(%"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i8* %1)
  %7 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %4, i64 0, i32 0
  %8 = bitcast %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %6 to %"class.protozero::Message"*
  call void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"* nonnull %7, %"class.protozero::Message"* %8) #10
  %9 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.protozero::MessageHandle"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.protozero::MessageHandle"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %11, %14
  %16 = icmp eq i64 %15, 0
  %17 = shl i64 %15, 6
  %18 = add i64 %17, -1
  %19 = select i1 %16, i64 0, i64 %18
  %20 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, %21
  %25 = icmp eq i64 %19, %24
  %26 = inttoptr i64 %14 to %"class.protozero::MessageHandle"**
  %27 = inttoptr i64 %11 to %"class.protozero::MessageHandle"**
  br i1 %25, label %28, label %35

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0
  call void @_ZNSt3__15dequeIN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS7_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %29) #10
  %30 = load i64, i64* %22, align 8
  %31 = load i64, i64* %20, align 8
  %32 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %12, align 8
  %33 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %9, align 8
  %34 = add i64 %31, %30
  br label %35

35:                                               ; preds = %28, %2
  %36 = phi i64 [ %34, %28 ], [ %24, %2 ]
  %37 = phi %"class.protozero::MessageHandle"** [ %33, %28 ], [ %27, %2 ]
  %38 = phi %"class.protozero::MessageHandle"** [ %32, %28 ], [ %26, %2 ]
  %39 = icmp eq %"class.protozero::MessageHandle"** %37, %38
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = lshr i64 %36, 9
  %42 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %38, i64 %41
  %43 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %42, align 8
  %44 = and i64 %36, 511
  %45 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %43, i64 %44
  br label %46

46:                                               ; preds = %35, %40
  %47 = phi %"class.protozero::MessageHandle"* [ %45, %40 ], [ null, %35 ]
  %48 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %47, i64 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"* %48, %"class.protozero::MessageHandleBase"* nonnull dereferenceable(8) %7) #10
  %49 = load i64, i64* %22, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %22, align 8
  call void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %51 = load i64, i64* %22, align 8
  %52 = load i64, i64* %20, align 8
  %53 = add i64 %51, -1
  %54 = add i64 %53, %52
  %55 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %12, align 8
  %56 = lshr i64 %54, 9
  %57 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %55, i64 %56
  %58 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %57, align 8
  %59 = and i64 %54, 511
  %60 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %58, i64 %59
  %61 = bitcast %"class.protozero::MessageHandle"* %60 to %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"**
  %62 = load %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"*, %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"** %61, align 8
  %63 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %62, i64 0, i32 0, i32 2
  %64 = load %"class.protozero::Message"*, %"class.protozero::Message"** %63, align 8
  %65 = icmp eq %"class.protozero::Message"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %46
  %67 = bitcast %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %62 to %"class.protozero::Message"*
  call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %67) #10
  br label %68

68:                                               ; preds = %66, %46
  %69 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %69) #10
  %70 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 1
  %71 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %71, i8 -86, i64 13, i1 false) #10
  store i8 8, i8* %69, align 2
  store i8 1, i8* %70, align 1
  %72 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %62, i64 0, i32 0, i32 0
  %73 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %72, align 8
  %74 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %73, i64 0, i32 2
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 2
  %77 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %73, i64 0, i32 1, i32 1
  %78 = load i8*, i8** %77, align 8
  %79 = icmp ugt i8* %76, %78
  br i1 %79, label %84, label %80, !prof !2

80:                                               ; preds = %68
  %81 = bitcast [15 x i8]* %3 to i16*
  %82 = bitcast i8* %75 to i16*
  %83 = load i16, i16* %81, align 2
  store i16 %83, i16* %82, align 1
  store i8* %76, i8** %74, align 8
  br label %85

84:                                               ; preds = %68
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %73, i8* nonnull %69, i64 2) #10
  br label %85

85:                                               ; preds = %80, %84
  %86 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %62, i64 0, i32 0, i32 4
  %87 = load i32, i32* %86, align 8
  %88 = add i32 %87, 2
  store i32 %88, i32* %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %69) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter10BeginArrayEPKc(%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca [15 x i8], align 2
  %4 = alloca %"class.protozero::MessageHandle", align 8
  %5 = bitcast %"class.protozero::MessageHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = tail call fastcc %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* @_ZN7tracing12_GLOBAL__N_111ProtoWriter12AddDictEntryEPKc(%"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i8* %1)
  %7 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %4, i64 0, i32 0
  %8 = bitcast %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %6 to %"class.protozero::Message"*
  call void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"* nonnull %7, %"class.protozero::Message"* %8) #10
  %9 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.protozero::MessageHandle"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.protozero::MessageHandle"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %11, %14
  %16 = icmp eq i64 %15, 0
  %17 = shl i64 %15, 6
  %18 = add i64 %17, -1
  %19 = select i1 %16, i64 0, i64 %18
  %20 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, %21
  %25 = icmp eq i64 %19, %24
  %26 = inttoptr i64 %14 to %"class.protozero::MessageHandle"**
  %27 = inttoptr i64 %11 to %"class.protozero::MessageHandle"**
  br i1 %25, label %28, label %35

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0
  call void @_ZNSt3__15dequeIN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS7_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %29) #10
  %30 = load i64, i64* %22, align 8
  %31 = load i64, i64* %20, align 8
  %32 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %12, align 8
  %33 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %9, align 8
  %34 = add i64 %31, %30
  br label %35

35:                                               ; preds = %28, %2
  %36 = phi i64 [ %34, %28 ], [ %24, %2 ]
  %37 = phi %"class.protozero::MessageHandle"** [ %33, %28 ], [ %27, %2 ]
  %38 = phi %"class.protozero::MessageHandle"** [ %32, %28 ], [ %26, %2 ]
  %39 = icmp eq %"class.protozero::MessageHandle"** %37, %38
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = lshr i64 %36, 9
  %42 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %38, i64 %41
  %43 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %42, align 8
  %44 = and i64 %36, 511
  %45 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %43, i64 %44
  br label %46

46:                                               ; preds = %35, %40
  %47 = phi %"class.protozero::MessageHandle"* [ %45, %40 ], [ null, %35 ]
  %48 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %47, i64 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"* %48, %"class.protozero::MessageHandleBase"* nonnull dereferenceable(8) %7) #10
  %49 = load i64, i64* %22, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %22, align 8
  call void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %51 = load i64, i64* %22, align 8
  %52 = load i64, i64* %20, align 8
  %53 = add i64 %51, -1
  %54 = add i64 %53, %52
  %55 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %12, align 8
  %56 = lshr i64 %54, 9
  %57 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %55, i64 %56
  %58 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %57, align 8
  %59 = and i64 %54, 511
  %60 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %58, i64 %59
  %61 = bitcast %"class.protozero::MessageHandle"* %60 to %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"**
  %62 = load %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"*, %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"** %61, align 8
  %63 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %62, i64 0, i32 0, i32 2
  %64 = load %"class.protozero::Message"*, %"class.protozero::Message"** %63, align 8
  %65 = icmp eq %"class.protozero::Message"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %46
  %67 = bitcast %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %62 to %"class.protozero::Message"*
  call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %67) #10
  br label %68

68:                                               ; preds = %66, %46
  %69 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %69) #10
  %70 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 1
  %71 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %71, i8 -86, i64 13, i1 false) #10
  store i8 8, i8* %69, align 2
  store i8 2, i8* %70, align 1
  %72 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %62, i64 0, i32 0, i32 0
  %73 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %72, align 8
  %74 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %73, i64 0, i32 2
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 2
  %77 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %73, i64 0, i32 1, i32 1
  %78 = load i8*, i8** %77, align 8
  %79 = icmp ugt i8* %76, %78
  br i1 %79, label %84, label %80, !prof !2

80:                                               ; preds = %68
  %81 = bitcast [15 x i8]* %3 to i16*
  %82 = bitcast i8* %75 to i16*
  %83 = load i16, i16* %81, align 2
  store i16 %83, i16* %82, align 1
  store i8* %76, i8** %74, align 8
  br label %85

84:                                               ; preds = %68
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %73, i8* nonnull %69, i64 2) #10
  br label %85

85:                                               ; preds = %80, %84
  %86 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %62, i64 0, i32 0, i32 4
  %87 = load i32, i32* %86, align 8
  %88 = add i32 %87, 2
  store i32 %88, i32* %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %69) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter24SetIntegerWithCopiedNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readonly, i8*, i64, i32) unnamed_addr #0 align 2 {
  %5 = alloca [15 x i8], align 1
  %6 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %7, -1
  %11 = add i64 %10, %9
  %12 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %12, align 8
  %14 = lshr i64 %11, 9
  %15 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %13, i64 %14
  %16 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %15, align 8
  %17 = and i64 %11, 511
  %18 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %16, i64 %17, i32 0, i32 0
  %19 = load %"class.protozero::Message"*, %"class.protozero::Message"** %18, align 8
  tail call void @_ZN9protozero7Message11AppendBytesEjPKvm(%"class.protozero::Message"* %19, i32 2, i8* %1, i64 %2) #10
  %20 = load i64, i64* %6, align 8
  %21 = load i64, i64* %8, align 8
  %22 = add i64 %20, -1
  %23 = add i64 %22, %21
  %24 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %12, align 8
  %25 = lshr i64 %23, 9
  %26 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %24, i64 %25
  %27 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %26, align 8
  %28 = and i64 %23, 511
  %29 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %27, i64 %28, i32 0, i32 0
  %30 = load %"class.protozero::Message"*, %"class.protozero::Message"** %29, align 8
  %31 = tail call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %30, i32 3) #10
  %32 = sext i32 %3 to i64
  %33 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %31, i64 0, i32 2
  %34 = load %"class.protozero::Message"*, %"class.protozero::Message"** %33, align 8
  %35 = icmp eq %"class.protozero::Message"* %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %4
  tail call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %31) #10
  br label %37

37:                                               ; preds = %36, %4
  %38 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %38) #10
  %39 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %39, i8 -86, i64 14, i1 false) #10
  store i8 40, i8* %38, align 1
  %40 = icmp ugt i32 %3, 127
  %41 = trunc i32 %3 to i8
  br i1 %40, label %42, label %53

42:                                               ; preds = %37, %42
  %43 = phi i8 [ %50, %42 ], [ %41, %37 ]
  %44 = phi i64 [ %48, %42 ], [ %32, %37 ]
  %45 = phi i8* [ %47, %42 ], [ %39, %37 ]
  %46 = or i8 %43, -128
  %47 = getelementptr inbounds i8, i8* %45, i64 1
  store i8 %46, i8* %45, align 1
  %48 = lshr i64 %44, 7
  %49 = icmp ugt i64 %44, 16383
  %50 = trunc i64 %48 to i8
  br i1 %49, label %42, label %51

51:                                               ; preds = %42
  %52 = trunc i64 %48 to i8
  br label %53

53:                                               ; preds = %51, %37
  %54 = phi i8* [ %39, %37 ], [ %47, %51 ]
  %55 = phi i8 [ %41, %37 ], [ %52, %51 ]
  store i8 %55, i8* %54, align 1
  %56 = getelementptr inbounds i8, i8* %54, i64 1
  %57 = ptrtoint i8* %56 to i64
  %58 = ptrtoint [15 x i8]* %5 to i64
  %59 = sub i64 %57, %58
  %60 = trunc i64 %59 to i32
  %61 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %31, i64 0, i32 0
  %62 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %61, align 8
  %63 = and i64 %59, 4294967295
  %64 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %62, i64 0, i32 2
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %63
  %67 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %62, i64 0, i32 1, i32 1
  %68 = load i8*, i8** %67, align 8
  %69 = icmp ugt i8* %66, %68
  br i1 %69, label %71, label %70, !prof !2

70:                                               ; preds = %53
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* nonnull align 1 %38, i64 %63, i1 false) #10
  store i8* %66, i8** %64, align 8
  br label %72

71:                                               ; preds = %53
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %62, i8* nonnull %38, i64 %63) #10
  br label %72

72:                                               ; preds = %70, %71
  %73 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %31, i64 0, i32 4
  %74 = load i32, i32* %73, align 8
  %75 = add i32 %74, %60
  store i32 %75, i32* %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %38) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter23SetDoubleWithCopiedNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readonly, i8*, i64, double) unnamed_addr #0 align 2 {
  %5 = alloca [15 x i8], align 1
  %6 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %7, -1
  %11 = add i64 %10, %9
  %12 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %12, align 8
  %14 = lshr i64 %11, 9
  %15 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %13, i64 %14
  %16 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %15, align 8
  %17 = and i64 %11, 511
  %18 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %16, i64 %17, i32 0, i32 0
  %19 = load %"class.protozero::Message"*, %"class.protozero::Message"** %18, align 8
  tail call void @_ZN9protozero7Message11AppendBytesEjPKvm(%"class.protozero::Message"* %19, i32 2, i8* %1, i64 %2) #10
  %20 = load i64, i64* %6, align 8
  %21 = load i64, i64* %8, align 8
  %22 = add i64 %20, -1
  %23 = add i64 %22, %21
  %24 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %12, align 8
  %25 = lshr i64 %23, 9
  %26 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %24, i64 %25
  %27 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %26, align 8
  %28 = and i64 %23, 511
  %29 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %27, i64 %28, i32 0, i32 0
  %30 = load %"class.protozero::Message"*, %"class.protozero::Message"** %29, align 8
  %31 = tail call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %30, i32 3) #10
  %32 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %31, i64 0, i32 2
  %33 = load %"class.protozero::Message"*, %"class.protozero::Message"** %32, align 8
  %34 = icmp eq %"class.protozero::Message"* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %4
  tail call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %31) #10
  br label %36

36:                                               ; preds = %35, %4
  %37 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %37) #10
  %38 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %38, i8 -86, i64 6, i1 false) #10
  store i8 49, i8* %37, align 1
  %39 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 1
  %40 = bitcast i8* %39 to double*
  store double %3, double* %40, align 1
  %41 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %31, i64 0, i32 0
  %42 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %41, align 8
  %43 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %42, i64 0, i32 2
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 9
  %46 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %42, i64 0, i32 1, i32 1
  %47 = load i8*, i8** %46, align 8
  %48 = icmp ugt i8* %45, %47
  br i1 %48, label %50, label %49, !prof !2

49:                                               ; preds = %36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* nonnull align 1 %37, i64 9, i1 false) #10
  store i8* %45, i8** %43, align 8
  br label %51

50:                                               ; preds = %36
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %42, i8* nonnull %37, i64 9) #10
  br label %51

51:                                               ; preds = %49, %50
  %52 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %31, i64 0, i32 4
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %53, 9
  store i32 %54, i32* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %37) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter24SetBooleanWithCopiedNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readonly, i8*, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca [15 x i8], align 2
  %6 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %7, -1
  %11 = add i64 %10, %9
  %12 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %12, align 8
  %14 = lshr i64 %11, 9
  %15 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %13, i64 %14
  %16 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %15, align 8
  %17 = and i64 %11, 511
  %18 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %16, i64 %17, i32 0, i32 0
  %19 = load %"class.protozero::Message"*, %"class.protozero::Message"** %18, align 8
  tail call void @_ZN9protozero7Message11AppendBytesEjPKvm(%"class.protozero::Message"* %19, i32 2, i8* %1, i64 %2) #10
  %20 = load i64, i64* %6, align 8
  %21 = load i64, i64* %8, align 8
  %22 = add i64 %20, -1
  %23 = add i64 %22, %21
  %24 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %12, align 8
  %25 = lshr i64 %23, 9
  %26 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %24, i64 %25
  %27 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %26, align 8
  %28 = and i64 %23, 511
  %29 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %27, i64 %28, i32 0, i32 0
  %30 = load %"class.protozero::Message"*, %"class.protozero::Message"** %29, align 8
  %31 = tail call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %30, i32 3) #10
  %32 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %31, i64 0, i32 2
  %33 = load %"class.protozero::Message"*, %"class.protozero::Message"** %32, align 8
  %34 = icmp eq %"class.protozero::Message"* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %4
  tail call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %31) #10
  br label %36

36:                                               ; preds = %35, %4
  %37 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %37) #10
  %38 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %38, i8 -86, i64 13, i1 false) #10
  store i8 56, i8* %37, align 2
  %39 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 1
  %40 = zext i1 %3 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %31, i64 0, i32 0
  %42 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %41, align 8
  %43 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %42, i64 0, i32 2
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 2
  %46 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %42, i64 0, i32 1, i32 1
  %47 = load i8*, i8** %46, align 8
  %48 = icmp ugt i8* %45, %47
  br i1 %48, label %53, label %49, !prof !2

49:                                               ; preds = %36
  %50 = bitcast [15 x i8]* %5 to i16*
  %51 = bitcast i8* %44 to i16*
  %52 = load i16, i16* %50, align 2
  store i16 %52, i16* %51, align 1
  store i8* %45, i8** %43, align 8
  br label %54

53:                                               ; preds = %36
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %42, i8* nonnull %37, i64 2) #10
  br label %54

54:                                               ; preds = %49, %53
  %55 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %31, i64 0, i32 4
  %56 = load i32, i32* %55, align 8
  %57 = add i32 %56, 2
  store i32 %57, i32* %55, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %37) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter23SetStringWithCopiedNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES7_(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readonly, i8*, i64, i8*, i64) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %7, -1
  %11 = add i64 %10, %9
  %12 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %12, align 8
  %14 = lshr i64 %11, 9
  %15 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %13, i64 %14
  %16 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %15, align 8
  %17 = and i64 %11, 511
  %18 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %16, i64 %17, i32 0, i32 0
  %19 = load %"class.protozero::Message"*, %"class.protozero::Message"** %18, align 8
  tail call void @_ZN9protozero7Message11AppendBytesEjPKvm(%"class.protozero::Message"* %19, i32 2, i8* %1, i64 %2) #10
  %20 = load i64, i64* %6, align 8
  %21 = load i64, i64* %8, align 8
  %22 = add i64 %20, -1
  %23 = add i64 %22, %21
  %24 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %12, align 8
  %25 = lshr i64 %23, 9
  %26 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %24, i64 %25
  %27 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %26, align 8
  %28 = and i64 %23, 511
  %29 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %27, i64 %28, i32 0, i32 0
  %30 = load %"class.protozero::Message"*, %"class.protozero::Message"** %29, align 8
  %31 = tail call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %30, i32 3) #10
  tail call void @_ZN9protozero7Message11AppendBytesEjPKvm(%"class.protozero::Message"* %31, i32 8, i8* %3, i64 %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter22SetValueWithCopiedNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_11trace_event11TracedValue6WriterE(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readonly, i8*, i64, %"class.base::trace_event::TracedValue::Writer"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = icmp ugt i64 %2, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #12
  unreachable

10:                                               ; preds = %4
  %11 = icmp ult i64 %2, 23
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %2, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #11
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8, !alias.scope !3
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8, !alias.scope !3
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %19, align 8, !alias.scope !3
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

21:                                               ; preds = %10
  %22 = trunc i64 %2 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1, !alias.scope !3
  %25 = icmp eq i64 %2, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21, %12
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %20, %12 ]
  %28 = phi i8* [ %6, %21 ], [ %15, %12 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %1, i64 %2, i1 false) #10
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %27, %26 ]
  %31 = phi i8* [ %6, %21 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %2
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = select i1 %35, i8* %37, i8* %6
  call void @_ZN7tracing12_GLOBAL__N_111ProtoWriter8SetValueEPKcPN4base11trace_event11TracedValue6WriterE(%"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i8* %38, %"class.base::trace_event::TracedValue::Writer"* %3)
  %39 = load i8, i8* %33, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %29
  %42 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %29, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter29BeginDictionaryWithCopiedNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca [15 x i8], align 2
  %5 = alloca %"class.protozero::MessageHandle", align 8
  %6 = bitcast %"class.protozero::MessageHandle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %8, -1
  %12 = add i64 %11, %10
  %13 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %14 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %13, align 8
  %15 = lshr i64 %12, 9
  %16 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %14, i64 %15
  %17 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %16, align 8
  %18 = and i64 %12, 511
  %19 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %17, i64 %18, i32 0, i32 0
  %20 = load %"class.protozero::Message"*, %"class.protozero::Message"** %19, align 8
  tail call void @_ZN9protozero7Message11AppendBytesEjPKvm(%"class.protozero::Message"* %20, i32 2, i8* %1, i64 %2) #10
  %21 = load i64, i64* %7, align 8
  %22 = load i64, i64* %9, align 8
  %23 = add i64 %21, -1
  %24 = add i64 %23, %22
  %25 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %13, align 8
  %26 = lshr i64 %24, 9
  %27 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %25, i64 %26
  %28 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %27, align 8
  %29 = and i64 %24, 511
  %30 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %28, i64 %29, i32 0, i32 0
  %31 = load %"class.protozero::Message"*, %"class.protozero::Message"** %30, align 8
  %32 = tail call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %31, i32 3) #10
  %33 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %5, i64 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"* nonnull %33, %"class.protozero::Message"* %32) #10
  %34 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %35 = bitcast %"class.protozero::MessageHandle"*** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.protozero::MessageHandle"*** %13 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = icmp eq i64 %39, 0
  %41 = shl i64 %39, 6
  %42 = add i64 %41, -1
  %43 = select i1 %40, i64 0, i64 %42
  %44 = load i64, i64* %9, align 8
  %45 = load i64, i64* %7, align 8
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %43, %46
  %48 = inttoptr i64 %38 to %"class.protozero::MessageHandle"**
  %49 = inttoptr i64 %36 to %"class.protozero::MessageHandle"**
  br i1 %47, label %50, label %57

50:                                               ; preds = %3
  %51 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0
  call void @_ZNSt3__15dequeIN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS7_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %51) #10
  %52 = load i64, i64* %7, align 8
  %53 = load i64, i64* %9, align 8
  %54 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %13, align 8
  %55 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %34, align 8
  %56 = add i64 %53, %52
  br label %57

57:                                               ; preds = %50, %3
  %58 = phi i64 [ %56, %50 ], [ %46, %3 ]
  %59 = phi %"class.protozero::MessageHandle"** [ %55, %50 ], [ %49, %3 ]
  %60 = phi %"class.protozero::MessageHandle"** [ %54, %50 ], [ %48, %3 ]
  %61 = icmp eq %"class.protozero::MessageHandle"** %59, %60
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = lshr i64 %58, 9
  %64 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %60, i64 %63
  %65 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %64, align 8
  %66 = and i64 %58, 511
  %67 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %65, i64 %66
  br label %68

68:                                               ; preds = %57, %62
  %69 = phi %"class.protozero::MessageHandle"* [ %67, %62 ], [ null, %57 ]
  %70 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %69, i64 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"* %70, %"class.protozero::MessageHandleBase"* nonnull dereferenceable(8) %33) #10
  %71 = load i64, i64* %7, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %7, align 8
  call void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %73 = load i64, i64* %7, align 8
  %74 = load i64, i64* %9, align 8
  %75 = add i64 %73, -1
  %76 = add i64 %75, %74
  %77 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %13, align 8
  %78 = lshr i64 %76, 9
  %79 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %77, i64 %78
  %80 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %79, align 8
  %81 = and i64 %76, 511
  %82 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %80, i64 %81
  %83 = bitcast %"class.protozero::MessageHandle"* %82 to %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"**
  %84 = load %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"*, %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"** %83, align 8
  %85 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %84, i64 0, i32 0, i32 2
  %86 = load %"class.protozero::Message"*, %"class.protozero::Message"** %85, align 8
  %87 = icmp eq %"class.protozero::Message"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %68
  %89 = bitcast %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %84 to %"class.protozero::Message"*
  call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %89) #10
  br label %90

90:                                               ; preds = %88, %68
  %91 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %91) #10
  %92 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 1
  %93 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %93, i8 -86, i64 13, i1 false) #10
  store i8 8, i8* %91, align 2
  store i8 1, i8* %92, align 1
  %94 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %84, i64 0, i32 0, i32 0
  %95 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %94, align 8
  %96 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %95, i64 0, i32 2
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 2
  %99 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %95, i64 0, i32 1, i32 1
  %100 = load i8*, i8** %99, align 8
  %101 = icmp ugt i8* %98, %100
  br i1 %101, label %106, label %102, !prof !2

102:                                              ; preds = %90
  %103 = bitcast [15 x i8]* %4 to i16*
  %104 = bitcast i8* %97 to i16*
  %105 = load i16, i16* %103, align 2
  store i16 %105, i16* %104, align 1
  store i8* %98, i8** %96, align 8
  br label %107

106:                                              ; preds = %90
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %95, i8* nonnull %91, i64 2) #10
  br label %107

107:                                              ; preds = %102, %106
  %108 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %84, i64 0, i32 0, i32 4
  %109 = load i32, i32* %108, align 8
  %110 = add i32 %109, 2
  store i32 %110, i32* %108, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %91) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter24BeginArrayWithCopiedNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.tracing::(anonymous namespace)::ProtoWriter"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca [15 x i8], align 2
  %5 = alloca %"class.protozero::MessageHandle", align 8
  %6 = bitcast %"class.protozero::MessageHandle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %8, -1
  %12 = add i64 %11, %10
  %13 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %14 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %13, align 8
  %15 = lshr i64 %12, 9
  %16 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %14, i64 %15
  %17 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %16, align 8
  %18 = and i64 %12, 511
  %19 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %17, i64 %18, i32 0, i32 0
  %20 = load %"class.protozero::Message"*, %"class.protozero::Message"** %19, align 8
  tail call void @_ZN9protozero7Message11AppendBytesEjPKvm(%"class.protozero::Message"* %20, i32 2, i8* %1, i64 %2) #10
  %21 = load i64, i64* %7, align 8
  %22 = load i64, i64* %9, align 8
  %23 = add i64 %21, -1
  %24 = add i64 %23, %22
  %25 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %13, align 8
  %26 = lshr i64 %24, 9
  %27 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %25, i64 %26
  %28 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %27, align 8
  %29 = and i64 %24, 511
  %30 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %28, i64 %29, i32 0, i32 0
  %31 = load %"class.protozero::Message"*, %"class.protozero::Message"** %30, align 8
  %32 = tail call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %31, i32 3) #10
  %33 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %5, i64 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"* nonnull %33, %"class.protozero::Message"* %32) #10
  %34 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %35 = bitcast %"class.protozero::MessageHandle"*** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.protozero::MessageHandle"*** %13 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = icmp eq i64 %39, 0
  %41 = shl i64 %39, 6
  %42 = add i64 %41, -1
  %43 = select i1 %40, i64 0, i64 %42
  %44 = load i64, i64* %9, align 8
  %45 = load i64, i64* %7, align 8
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %43, %46
  %48 = inttoptr i64 %38 to %"class.protozero::MessageHandle"**
  %49 = inttoptr i64 %36 to %"class.protozero::MessageHandle"**
  br i1 %47, label %50, label %57

50:                                               ; preds = %3
  %51 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0
  call void @_ZNSt3__15dequeIN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS7_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %51) #10
  %52 = load i64, i64* %7, align 8
  %53 = load i64, i64* %9, align 8
  %54 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %13, align 8
  %55 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %34, align 8
  %56 = add i64 %53, %52
  br label %57

57:                                               ; preds = %50, %3
  %58 = phi i64 [ %56, %50 ], [ %46, %3 ]
  %59 = phi %"class.protozero::MessageHandle"** [ %55, %50 ], [ %49, %3 ]
  %60 = phi %"class.protozero::MessageHandle"** [ %54, %50 ], [ %48, %3 ]
  %61 = icmp eq %"class.protozero::MessageHandle"** %59, %60
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = lshr i64 %58, 9
  %64 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %60, i64 %63
  %65 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %64, align 8
  %66 = and i64 %58, 511
  %67 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %65, i64 %66
  br label %68

68:                                               ; preds = %57, %62
  %69 = phi %"class.protozero::MessageHandle"* [ %67, %62 ], [ null, %57 ]
  %70 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %69, i64 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"* %70, %"class.protozero::MessageHandleBase"* nonnull dereferenceable(8) %33) #10
  %71 = load i64, i64* %7, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %7, align 8
  call void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %73 = load i64, i64* %7, align 8
  %74 = load i64, i64* %9, align 8
  %75 = add i64 %73, -1
  %76 = add i64 %75, %74
  %77 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %13, align 8
  %78 = lshr i64 %76, 9
  %79 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %77, i64 %78
  %80 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %79, align 8
  %81 = and i64 %76, 511
  %82 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %80, i64 %81
  %83 = bitcast %"class.protozero::MessageHandle"* %82 to %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"**
  %84 = load %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"*, %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"** %83, align 8
  %85 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %84, i64 0, i32 0, i32 2
  %86 = load %"class.protozero::Message"*, %"class.protozero::Message"** %85, align 8
  %87 = icmp eq %"class.protozero::Message"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %68
  %89 = bitcast %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %84 to %"class.protozero::Message"*
  call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %89) #10
  br label %90

90:                                               ; preds = %88, %68
  %91 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %91) #10
  %92 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 1
  %93 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %93, i8 -86, i64 13, i1 false) #10
  store i8 8, i8* %91, align 2
  store i8 2, i8* %92, align 1
  %94 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %84, i64 0, i32 0, i32 0
  %95 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %94, align 8
  %96 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %95, i64 0, i32 2
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 2
  %99 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %95, i64 0, i32 1, i32 1
  %100 = load i8*, i8** %99, align 8
  %101 = icmp ugt i8* %98, %100
  br i1 %101, label %106, label %102, !prof !2

102:                                              ; preds = %90
  %103 = bitcast [15 x i8]* %4 to i16*
  %104 = bitcast i8* %97 to i16*
  %105 = load i16, i16* %103, align 2
  store i16 %105, i16* %104, align 1
  store i8* %98, i8** %96, align 8
  br label %107

106:                                              ; preds = %90
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %95, i8* nonnull %91, i64 2) #10
  br label %107

107:                                              ; preds = %102, %106
  %108 = getelementptr inbounds %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue", %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %84, i64 0, i32 0, i32 4
  %109 = load i32, i32* %108, align 8
  %110 = add i32 %109, 2
  store i32 %110, i32* %108, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %91) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter13AppendIntegerEi(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = alloca [15 x i8], align 1
  %4 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %5, -1
  %9 = add i64 %8, %7
  %10 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %11 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %10, align 8
  %12 = lshr i64 %9, 9
  %13 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %11, i64 %12
  %14 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %13, align 8
  %15 = and i64 %9, 511
  %16 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %14, i64 %15, i32 0, i32 0
  %17 = load %"class.protozero::Message"*, %"class.protozero::Message"** %16, align 8
  %18 = tail call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %17, i32 4) #10
  %19 = sext i32 %1 to i64
  %20 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %18, i64 0, i32 2
  %21 = load %"class.protozero::Message"*, %"class.protozero::Message"** %20, align 8
  %22 = icmp eq %"class.protozero::Message"* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %2
  tail call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %18) #10
  br label %24

24:                                               ; preds = %23, %2
  %25 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %25) #10
  %26 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %26, i8 -86, i64 14, i1 false) #10
  store i8 40, i8* %25, align 1
  %27 = icmp ugt i32 %1, 127
  %28 = trunc i32 %1 to i8
  br i1 %27, label %29, label %40

29:                                               ; preds = %24, %29
  %30 = phi i8 [ %37, %29 ], [ %28, %24 ]
  %31 = phi i64 [ %35, %29 ], [ %19, %24 ]
  %32 = phi i8* [ %34, %29 ], [ %26, %24 ]
  %33 = or i8 %30, -128
  %34 = getelementptr inbounds i8, i8* %32, i64 1
  store i8 %33, i8* %32, align 1
  %35 = lshr i64 %31, 7
  %36 = icmp ugt i64 %31, 16383
  %37 = trunc i64 %35 to i8
  br i1 %36, label %29, label %38

38:                                               ; preds = %29
  %39 = trunc i64 %35 to i8
  br label %40

40:                                               ; preds = %38, %24
  %41 = phi i8* [ %26, %24 ], [ %34, %38 ]
  %42 = phi i8 [ %28, %24 ], [ %39, %38 ]
  store i8 %42, i8* %41, align 1
  %43 = getelementptr inbounds i8, i8* %41, i64 1
  %44 = ptrtoint i8* %43 to i64
  %45 = ptrtoint [15 x i8]* %3 to i64
  %46 = sub i64 %44, %45
  %47 = trunc i64 %46 to i32
  %48 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %18, i64 0, i32 0
  %49 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %48, align 8
  %50 = and i64 %46, 4294967295
  %51 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %49, i64 0, i32 2
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  %54 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %49, i64 0, i32 1, i32 1
  %55 = load i8*, i8** %54, align 8
  %56 = icmp ugt i8* %53, %55
  br i1 %56, label %58, label %57, !prof !2

57:                                               ; preds = %40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* nonnull align 1 %25, i64 %50, i1 false) #10
  store i8* %53, i8** %51, align 8
  br label %59

58:                                               ; preds = %40
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %49, i8* nonnull %25, i64 %50) #10
  br label %59

59:                                               ; preds = %57, %58
  %60 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %18, i64 0, i32 4
  %61 = load i32, i32* %60, align 8
  %62 = add i32 %61, %47
  store i32 %62, i32* %60, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %25) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter12AppendDoubleEd(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readonly, double) unnamed_addr #0 align 2 {
  %3 = alloca [15 x i8], align 1
  %4 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %5, -1
  %9 = add i64 %8, %7
  %10 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %11 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %10, align 8
  %12 = lshr i64 %9, 9
  %13 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %11, i64 %12
  %14 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %13, align 8
  %15 = and i64 %9, 511
  %16 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %14, i64 %15, i32 0, i32 0
  %17 = load %"class.protozero::Message"*, %"class.protozero::Message"** %16, align 8
  %18 = tail call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %17, i32 4) #10
  %19 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %18, i64 0, i32 2
  %20 = load %"class.protozero::Message"*, %"class.protozero::Message"** %19, align 8
  %21 = icmp eq %"class.protozero::Message"* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %2
  tail call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %18) #10
  br label %23

23:                                               ; preds = %22, %2
  %24 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %24) #10
  %25 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %25, i8 -86, i64 6, i1 false) #10
  store i8 49, i8* %24, align 1
  %26 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 1
  %27 = bitcast i8* %26 to double*
  store double %1, double* %27, align 1
  %28 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %18, i64 0, i32 0
  %29 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %28, align 8
  %30 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %29, i64 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 9
  %33 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %29, i64 0, i32 1, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = icmp ugt i8* %32, %34
  br i1 %35, label %37, label %36, !prof !2

36:                                               ; preds = %23
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* nonnull align 1 %24, i64 9, i1 false) #10
  store i8* %32, i8** %30, align 8
  br label %38

37:                                               ; preds = %23
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %29, i8* nonnull %24, i64 9) #10
  br label %38

38:                                               ; preds = %36, %37
  %39 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %18, i64 0, i32 4
  %40 = load i32, i32* %39, align 8
  %41 = add i32 %40, 9
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %24) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter13AppendBooleanEb(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readonly, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca [15 x i8], align 2
  %4 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %5, -1
  %9 = add i64 %8, %7
  %10 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %11 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %10, align 8
  %12 = lshr i64 %9, 9
  %13 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %11, i64 %12
  %14 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %13, align 8
  %15 = and i64 %9, 511
  %16 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %14, i64 %15, i32 0, i32 0
  %17 = load %"class.protozero::Message"*, %"class.protozero::Message"** %16, align 8
  %18 = tail call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %17, i32 4) #10
  %19 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %18, i64 0, i32 2
  %20 = load %"class.protozero::Message"*, %"class.protozero::Message"** %19, align 8
  %21 = icmp eq %"class.protozero::Message"* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %2
  tail call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %18) #10
  br label %23

23:                                               ; preds = %22, %2
  %24 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %24) #10
  %25 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %25, i8 -86, i64 13, i1 false) #10
  store i8 56, i8* %24, align 2
  %26 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 1
  %27 = zext i1 %1 to i8
  store i8 %27, i8* %26, align 1
  %28 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %18, i64 0, i32 0
  %29 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %28, align 8
  %30 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %29, i64 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 2
  %33 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %29, i64 0, i32 1, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = icmp ugt i8* %32, %34
  br i1 %35, label %40, label %36, !prof !2

36:                                               ; preds = %23
  %37 = bitcast [15 x i8]* %3 to i16*
  %38 = bitcast i8* %31 to i16*
  %39 = load i16, i16* %37, align 2
  store i16 %39, i16* %38, align 1
  store i8* %32, i8** %30, align 8
  br label %41

40:                                               ; preds = %23
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %29, i8* nonnull %24, i64 2) #10
  br label %41

41:                                               ; preds = %36, %40
  %42 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %18, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = add i32 %43, 2
  store i32 %44, i32* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %24) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter12AppendStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %5, -1
  %9 = add i64 %8, %7
  %10 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %11 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %10, align 8
  %12 = lshr i64 %9, 9
  %13 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %11, i64 %12
  %14 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %13, align 8
  %15 = and i64 %9, 511
  %16 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %14, i64 %15, i32 0, i32 0
  %17 = load %"class.protozero::Message"*, %"class.protozero::Message"** %16, align 8
  %18 = tail call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %17, i32 4) #10
  tail call void @_ZN9protozero7Message11AppendBytesEjPKvm(%"class.protozero::Message"* %18, i32 8, i8* %1, i64 %2) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZNK7tracing12_GLOBAL__N_111ProtoWriter19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture, %"class.std::__1::basic_string"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN7tracing12_GLOBAL__N_111ProtoWriter13AppendToProtoEPN4base11trace_event24ConvertableToTraceFormat13ProtoAppenderE(%"class.tracing::(anonymous namespace)::ProtoWriter"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %42, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %4, -1
  %10 = add i64 %9, %8
  %11 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %11, align 8
  %13 = lshr i64 %10, 9
  %14 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %12, i64 %13
  %15 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %14, align 8
  %16 = and i64 %10, 511
  %17 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %15, i64 %16, i32 0
  tail call void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"* %17) #10
  %18 = load i64, i64* %3, align 8
  %19 = add i64 %18, -1
  store i64 %19, i64* %3, align 8
  %20 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %21 = bitcast %"class.protozero::MessageHandle"*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.protozero::MessageHandle"*** %11 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = icmp eq i64 %25, 0
  %27 = shl i64 %25, 6
  %28 = add i64 %27, -1
  %29 = select i1 %26, i64 0, i64 %28
  %30 = load i64, i64* %7, align 8
  %31 = sub i64 1, %18
  %32 = sub i64 %31, %30
  %33 = add i64 %32, %29
  %34 = icmp ult i64 %33, 1024
  br i1 %34, label %42, label %35

35:                                               ; preds = %6
  %36 = inttoptr i64 %22 to %"class.protozero::MessageHandle"**
  %37 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %36, i64 -1
  %38 = bitcast %"class.protozero::MessageHandle"** %37 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #11
  %40 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %20, align 8
  %41 = getelementptr %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %40, i64 -1
  store %"class.protozero::MessageHandle"** %41, %"class.protozero::MessageHandle"*** %20, align 8
  br label %42

42:                                               ; preds = %35, %6, %2
  %43 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 2
  %44 = bitcast %"class.protozero::RootMessage"* %43 to %"class.protozero::Message"*
  %45 = tail call i32 @_ZN9protozero7Message8FinalizeEv(%"class.protozero::Message"* %44) #10
  %46 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 3
  tail call void @_ZN9protozero19ScatteredHeapBuffer28AdjustUsedSizeOfCurrentSliceEv(%"class.protozero::ScatteredHeapBuffer"* %46) #10
  %47 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %48 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %47, align 8
  %49 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 3, i32 4, i32 0, i32 1
  %50 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %49, align 8
  %51 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %48, %50
  br i1 %51, label %54, label %52

52:                                               ; preds = %42
  %53 = bitcast %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"* %1 to void (%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*, i8*, i8*)***
  br label %60

54:                                               ; preds = %60, %42
  %55 = bitcast %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"* %1 to i64 (%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*, i32)***
  %56 = load i64 (%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*, i32)**, i64 (%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*, i32)*** %55, align 8
  %57 = getelementptr inbounds i64 (%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*, i32)*, i64 (%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*, i32)** %56, i64 3
  %58 = load i64 (%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*, i32)*, i64 (%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*, i32)** %57, align 8
  %59 = tail call i64 %58(%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"* %1, i32 8) #10
  ret i1 true

60:                                               ; preds = %52, %60
  %61 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %48, %52 ], [ %74, %60 ]
  %62 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %61, i64 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds i8, i8* %63, i64 %65
  %67 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %61, i64 0, i32 2
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 0, %68
  %70 = getelementptr inbounds i8, i8* %66, i64 %69
  %71 = load void (%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*, i8*, i8*)**, void (%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*, i8*, i8*)*** %53, align 8
  %72 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*, i8*, i8*)*, void (%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*, i8*, i8*)** %71, i64 2
  %73 = load void (%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*, i8*, i8*)*, void (%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*, i8*, i8*)** %72, align 8
  tail call void %73(%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"* %1, i8* %63, i8* %70) #10
  %74 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %61, i64 1
  %75 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %74, %50
  br i1 %75, label %54, label %60
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7tracing12_GLOBAL__N_111ProtoWriter27EstimateTraceMemoryOverheadEPN4base11trace_event24TraceEventMemoryOverheadE(%"class.tracing::(anonymous namespace)::ProtoWriter"*, %"class.base::trace_event::TraceEventMemoryOverhead"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 3
  %4 = tail call i64 @_ZN9protozero19ScatteredHeapBuffer12GetTotalSizeEv(%"class.protozero::ScatteredHeapBuffer"* %3) #10
  %5 = tail call i64 @_ZN9protozero19ScatteredHeapBuffer12GetTotalSizeEv(%"class.protozero::ScatteredHeapBuffer"* %3) #10
  tail call void @_ZN4base11trace_event24TraceEventMemoryOverhead3AddENS1_10ObjectTypeEmm(%"class.base::trace_event::TraceEventMemoryOverhead"* %1, i32 5, i64 %4, i64 %5) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK7tracing12_GLOBAL__N_111ProtoWriter14IsPickleWriterEv(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK7tracing12_GLOBAL__N_111ProtoWriter13IsProtoWriterEv(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !6

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !8

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !9

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #11
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #11, !noalias !10
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !10
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #11
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS7_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.protozero::MessageHandle"*, align 8
  %3 = alloca %"class.protozero::MessageHandle"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.46", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 511
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -512
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %10, align 8
  %12 = bitcast %"class.protozero::MessageHandle"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %11, i64 1
  store %"class.protozero::MessageHandle"** %14, %"class.protozero::MessageHandle"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %17, align 8
  %19 = icmp eq %"class.protozero::MessageHandle"** %16, %18
  %20 = ptrtoint %"class.protozero::MessageHandle"** %18 to i64
  %21 = bitcast %"class.protozero::MessageHandle"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %23, align 8
  %25 = icmp ugt %"class.protozero::MessageHandle"** %14, %24
  %26 = ptrtoint %"class.protozero::MessageHandle"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.protozero::MessageHandle"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %14, i64 %32
  %34 = ptrtoint %"class.protozero::MessageHandle"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.protozero::MessageHandle"** %33 to i8*
  %40 = bitcast %"class.protozero::MessageHandle"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #10
  %41 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.protozero::MessageHandle"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %33, i64 %36
  store %"class.protozero::MessageHandle"** %44, %"class.protozero::MessageHandle"*** %15, align 8
  %45 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %43, i64 %32
  store %"class.protozero::MessageHandle"** %45, %"class.protozero::MessageHandle"*** %10, align 8
  %46 = bitcast %"class.protozero::MessageHandle"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.protozero::MessageHandle"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #11
  %60 = bitcast i8* %59 to %"class.protozero::MessageHandle"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %60, i64 %57
  %63 = ptrtoint %"class.protozero::MessageHandle"** %62 to i64
  %64 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %60, i64 %53
  %65 = ptrtoint %"class.protozero::MessageHandle"** %64 to i64
  %66 = ptrtoint %"class.protozero::MessageHandle"** %14 to i64
  %67 = ptrtoint %"class.protozero::MessageHandle"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.protozero::MessageHandle"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.protozero::MessageHandle"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.protozero::MessageHandle"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %79, i64 1
  %87 = ptrtoint %"class.protozero::MessageHandle"** %86 to i64
  %88 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !13

91:                                               ; preds = %78
  %92 = ptrtoint %"class.protozero::MessageHandle"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.protozero::MessageHandle"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.protozero::MessageHandle"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.protozero::MessageHandle"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.protozero::MessageHandle"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.protozero::MessageHandle"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %99, i64 1
  %106 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %101, i64 1
  %107 = bitcast %"class.protozero::MessageHandle"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.protozero::MessageHandle"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %99, i64 2
  %111 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %101, i64 2
  %112 = bitcast %"class.protozero::MessageHandle"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.protozero::MessageHandle"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %99, i64 3
  %116 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %101, i64 3
  %117 = bitcast %"class.protozero::MessageHandle"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.protozero::MessageHandle"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %99, i64 4
  %121 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %101, i64 4
  %122 = bitcast %"class.protozero::MessageHandle"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.protozero::MessageHandle"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %99, i64 5
  %126 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %101, i64 5
  %127 = bitcast %"class.protozero::MessageHandle"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.protozero::MessageHandle"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %99, i64 6
  %131 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %101, i64 6
  %132 = bitcast %"class.protozero::MessageHandle"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.protozero::MessageHandle"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %99, i64 7
  %136 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %101, i64 7
  %137 = bitcast %"class.protozero::MessageHandle"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.protozero::MessageHandle"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %99, i64 8
  %141 = ptrtoint %"class.protozero::MessageHandle"** %140 to i64
  %142 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %101, i64 8
  %143 = icmp eq %"class.protozero::MessageHandle"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.protozero::MessageHandle"** %70 to i64
  %146 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.protozero::MessageHandle"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.protozero::MessageHandle"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.protozero::MessageHandle"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.protozero::MessageHandle"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.protozero::MessageHandle"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  %156 = bitcast %"class.protozero::MessageHandle"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %15, align 8
  %161 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %160, i64 1
  store %"class.protozero::MessageHandle"** %161, %"class.protozero::MessageHandle"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.protozero::MessageHandle"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.protozero::MessageHandle"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.protozero::MessageHandle"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.protozero::MessageHandle"**
  %181 = inttoptr i64 %169 to %"class.protozero::MessageHandle"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.protozero::MessageHandle"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #10
  %186 = tail call i8* @_Znwm(i64 4096) #11
  %187 = bitcast %"class.protozero::MessageHandle"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS8_EEE9push_backEOS8_(%"struct.std::__1::__split_buffer"* %163, %"class.protozero::MessageHandle"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #10
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.protozero::MessageHandle"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #10
  %190 = tail call i8* @_Znwm(i64 4096) #11
  %191 = bitcast %"class.protozero::MessageHandle"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS8_EEE10push_frontEOS8_(%"struct.std::__1::__split_buffer"* %163, %"class.protozero::MessageHandle"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #10
  %192 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %167, align 8
  %193 = bitcast %"class.protozero::MessageHandle"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %192, i64 1
  store %"class.protozero::MessageHandle"** %195, %"class.protozero::MessageHandle"*** %167, align 8
  %196 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %164, align 8
  %197 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %172, align 8
  %198 = icmp eq %"class.protozero::MessageHandle"** %196, %197
  %199 = ptrtoint %"class.protozero::MessageHandle"** %197 to i64
  %200 = bitcast %"class.protozero::MessageHandle"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %202, align 8
  %204 = icmp ugt %"class.protozero::MessageHandle"** %195, %203
  %205 = ptrtoint %"class.protozero::MessageHandle"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.protozero::MessageHandle"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %195, i64 %211
  %213 = ptrtoint %"class.protozero::MessageHandle"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.protozero::MessageHandle"** %212 to i8*
  %219 = bitcast %"class.protozero::MessageHandle"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #10
  %220 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.protozero::MessageHandle"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %212, i64 %215
  store %"class.protozero::MessageHandle"** %223, %"class.protozero::MessageHandle"*** %164, align 8
  %224 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %222, i64 %211
  store %"class.protozero::MessageHandle"** %224, %"class.protozero::MessageHandle"*** %167, align 8
  %225 = bitcast %"class.protozero::MessageHandle"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #12
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #11
  %237 = bitcast i8* %236 to %"class.protozero::MessageHandle"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %237, i64 %234
  %240 = ptrtoint %"class.protozero::MessageHandle"** %239 to i64
  %241 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %237, i64 %230
  %242 = ptrtoint %"class.protozero::MessageHandle"** %241 to i64
  %243 = ptrtoint %"class.protozero::MessageHandle"** %195 to i64
  %244 = ptrtoint %"class.protozero::MessageHandle"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.protozero::MessageHandle"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.protozero::MessageHandle"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.protozero::MessageHandle"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %256, i64 1
  %264 = ptrtoint %"class.protozero::MessageHandle"** %263 to i64
  %265 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !14

268:                                              ; preds = %255
  %269 = ptrtoint %"class.protozero::MessageHandle"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.protozero::MessageHandle"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.protozero::MessageHandle"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.protozero::MessageHandle"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.protozero::MessageHandle"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.protozero::MessageHandle"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %276, i64 1
  %283 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %278, i64 1
  %284 = bitcast %"class.protozero::MessageHandle"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.protozero::MessageHandle"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %276, i64 2
  %288 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %278, i64 2
  %289 = bitcast %"class.protozero::MessageHandle"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.protozero::MessageHandle"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %276, i64 3
  %293 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %278, i64 3
  %294 = bitcast %"class.protozero::MessageHandle"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.protozero::MessageHandle"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %276, i64 4
  %298 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %278, i64 4
  %299 = bitcast %"class.protozero::MessageHandle"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.protozero::MessageHandle"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %276, i64 5
  %303 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %278, i64 5
  %304 = bitcast %"class.protozero::MessageHandle"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.protozero::MessageHandle"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %276, i64 6
  %308 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %278, i64 6
  %309 = bitcast %"class.protozero::MessageHandle"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.protozero::MessageHandle"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %276, i64 7
  %313 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %278, i64 7
  %314 = bitcast %"class.protozero::MessageHandle"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.protozero::MessageHandle"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %276, i64 8
  %318 = ptrtoint %"class.protozero::MessageHandle"** %317 to i64
  %319 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %278, i64 8
  %320 = icmp eq %"class.protozero::MessageHandle"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.protozero::MessageHandle"** %247 to i64
  %323 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.protozero::MessageHandle"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.protozero::MessageHandle"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.protozero::MessageHandle"** %325 to i8*
  call void @_ZdlPv(i8* %330) #11
  %331 = bitcast %"class.protozero::MessageHandle"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %164, align 8
  %336 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %335, i64 1
  store %"class.protozero::MessageHandle"** %336, %"class.protozero::MessageHandle"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.46"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #10
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.46", %"struct.std::__1::__split_buffer.46"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.46", %"struct.std::__1::__split_buffer.46"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.46", %"struct.std::__1::__split_buffer.46"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.46", %"struct.std::__1::__split_buffer.46"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.46"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.protozero::MessageHandle"** null, %"class.protozero::MessageHandle"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.15"** %342 to %"class.std::__1::__compressed_pair.12"**
  store %"class.std::__1::__compressed_pair.12"* %346, %"class.std::__1::__compressed_pair.12"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #12
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #11
  %354 = bitcast i8* %353 to %"class.protozero::MessageHandle"**
  %355 = bitcast %"struct.std::__1::__split_buffer.46"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %354, i64 %171
  store %"class.protozero::MessageHandle"** %356, %"class.protozero::MessageHandle"*** %340, align 8
  store %"class.protozero::MessageHandle"** %356, %"class.protozero::MessageHandle"*** %339, align 8
  %357 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %354, i64 %345
  store %"class.protozero::MessageHandle"** %357, %"class.protozero::MessageHandle"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #11
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.protozero::MessageHandle"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.protozero::MessageHandle"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.protozero::MessageHandle"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %356, i64 %370
  store %"class.protozero::MessageHandle"** %371, %"class.protozero::MessageHandle"*** %340, align 8
  store %"class.protozero::MessageHandle"** %371, %"class.protozero::MessageHandle"*** %339, align 8
  %372 = ptrtoint %"class.protozero::MessageHandle"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #12
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.46"* %4 to i64*
  %382 = bitcast %"class.protozero::MessageHandle"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #11
  %386 = bitcast i8* %385 to %"class.protozero::MessageHandle"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %386, i64 %383
  %389 = ptrtoint %"class.protozero::MessageHandle"** %388 to i64
  %390 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %386, i64 %377
  %391 = ptrtoint %"class.protozero::MessageHandle"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.protozero::MessageHandle"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.protozero::MessageHandle"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #11
  %394 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %164, align 8
  %395 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %167, align 8
  %396 = ptrtoint %"class.protozero::MessageHandle"** %395 to i64
  %397 = ptrtoint %"class.protozero::MessageHandle"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.protozero::MessageHandle"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.protozero::MessageHandle"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.protozero::MessageHandle"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.protozero::MessageHandle"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %406, i64 1
  store %"class.protozero::MessageHandle"** %408, %"class.protozero::MessageHandle"*** %340, align 8
  %409 = icmp eq %"class.protozero::MessageHandle"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.protozero::MessageHandle"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.46"* %4 to i64*
  %413 = bitcast %"class.protozero::MessageHandle"*** %339 to i64*
  %414 = bitcast %"class.protozero::MessageHandle"*** %340 to i64*
  %415 = bitcast %"class.protozero::MessageHandle"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.protozero::MessageHandle"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.46"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.protozero::MessageHandle"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.protozero::MessageHandle"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.protozero::MessageHandle"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.protozero::MessageHandle"**
  %441 = inttoptr i64 %434 to %"class.protozero::MessageHandle"**
  %442 = icmp eq %"class.protozero::MessageHandle"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %441, i64 -1
  %445 = ptrtoint %"class.protozero::MessageHandle"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %441, i64 %448
  store %"class.protozero::MessageHandle"** %449, %"class.protozero::MessageHandle"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #11
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #10
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.protozero::MessageHandle"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEERNS_9allocatorIS8_EEE10push_frontERKS8_(%"struct.std::__1::__split_buffer.46"* nonnull %4, %"class.protozero::MessageHandle"** dereferenceable(8) %457)
  %458 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %167, align 8
  %459 = icmp eq %"class.protozero::MessageHandle"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS8_EEE9push_backEOS8_(%"struct.std::__1::__split_buffer"*, %"class.protozero::MessageHandle"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %5, align 8
  %7 = icmp eq %"class.protozero::MessageHandle"** %4, %6
  %8 = ptrtoint %"class.protozero::MessageHandle"** %6 to i64
  %9 = bitcast %"class.protozero::MessageHandle"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %13, align 8
  %15 = icmp ugt %"class.protozero::MessageHandle"** %12, %14
  %16 = ptrtoint %"class.protozero::MessageHandle"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.protozero::MessageHandle"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %12, i64 %22
  %24 = ptrtoint %"class.protozero::MessageHandle"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.protozero::MessageHandle"** %23 to i8*
  %30 = bitcast %"class.protozero::MessageHandle"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.protozero::MessageHandle"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %23, i64 %26
  store %"class.protozero::MessageHandle"** %34, %"class.protozero::MessageHandle"*** %3, align 8
  %35 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %33, i64 %22
  store %"class.protozero::MessageHandle"** %35, %"class.protozero::MessageHandle"*** %11, align 8
  %36 = bitcast %"class.protozero::MessageHandle"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.protozero::MessageHandle"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to %"class.protozero::MessageHandle"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %50, i64 %47
  %53 = ptrtoint %"class.protozero::MessageHandle"** %52 to i64
  %54 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %50, i64 %43
  %55 = ptrtoint %"class.protozero::MessageHandle"** %54 to i64
  %56 = ptrtoint %"class.protozero::MessageHandle"** %12 to i64
  %57 = ptrtoint %"class.protozero::MessageHandle"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.protozero::MessageHandle"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.protozero::MessageHandle"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.protozero::MessageHandle"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %69, i64 1
  %77 = ptrtoint %"class.protozero::MessageHandle"** %76 to i64
  %78 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !15

81:                                               ; preds = %68
  %82 = ptrtoint %"class.protozero::MessageHandle"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.protozero::MessageHandle"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.protozero::MessageHandle"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.protozero::MessageHandle"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.protozero::MessageHandle"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.protozero::MessageHandle"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %89, i64 1
  %96 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %91, i64 1
  %97 = bitcast %"class.protozero::MessageHandle"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.protozero::MessageHandle"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %89, i64 2
  %101 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %91, i64 2
  %102 = bitcast %"class.protozero::MessageHandle"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.protozero::MessageHandle"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %89, i64 3
  %106 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %91, i64 3
  %107 = bitcast %"class.protozero::MessageHandle"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.protozero::MessageHandle"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %89, i64 4
  %111 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %91, i64 4
  %112 = bitcast %"class.protozero::MessageHandle"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.protozero::MessageHandle"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %89, i64 5
  %116 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %91, i64 5
  %117 = bitcast %"class.protozero::MessageHandle"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.protozero::MessageHandle"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %89, i64 6
  %121 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %91, i64 6
  %122 = bitcast %"class.protozero::MessageHandle"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.protozero::MessageHandle"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %89, i64 7
  %126 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %91, i64 7
  %127 = bitcast %"class.protozero::MessageHandle"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.protozero::MessageHandle"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %89, i64 8
  %131 = ptrtoint %"class.protozero::MessageHandle"** %130 to i64
  %132 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %91, i64 8
  %133 = icmp eq %"class.protozero::MessageHandle"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.protozero::MessageHandle"** %60 to i64
  %136 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.protozero::MessageHandle"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.protozero::MessageHandle"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.protozero::MessageHandle"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.protozero::MessageHandle"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.protozero::MessageHandle"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = bitcast %"class.protozero::MessageHandle"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.protozero::MessageHandle"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %3, align 8
  %153 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %152, i64 1
  store %"class.protozero::MessageHandle"** %153, %"class.protozero::MessageHandle"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS8_EEE10push_frontEOS8_(%"struct.std::__1::__split_buffer"*, %"class.protozero::MessageHandle"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %5, align 8
  %7 = icmp eq %"class.protozero::MessageHandle"** %4, %6
  %8 = ptrtoint %"class.protozero::MessageHandle"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %12, align 8
  %14 = icmp ult %"class.protozero::MessageHandle"** %11, %13
  %15 = bitcast %"class.protozero::MessageHandle"*** %12 to i64*
  %16 = ptrtoint %"class.protozero::MessageHandle"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.protozero::MessageHandle"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %11, i64 %22
  %24 = ptrtoint %"class.protozero::MessageHandle"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %23, i64 %29
  %31 = bitcast %"class.protozero::MessageHandle"** %30 to i8*
  %32 = bitcast %"class.protozero::MessageHandle"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.protozero::MessageHandle"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.protozero::MessageHandle"** [ %30, %27 ], [ %23, %17 ]
  store %"class.protozero::MessageHandle"** %36, %"class.protozero::MessageHandle"*** %3, align 8
  %37 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %35, i64 %22
  store %"class.protozero::MessageHandle"** %37, %"class.protozero::MessageHandle"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to %"class.protozero::MessageHandle"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %51, i64 %48
  %54 = ptrtoint %"class.protozero::MessageHandle"** %53 to i64
  %55 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %51, i64 %43
  %56 = ptrtoint %"class.protozero::MessageHandle"** %55 to i64
  %57 = ptrtoint %"class.protozero::MessageHandle"** %4 to i64
  %58 = ptrtoint %"class.protozero::MessageHandle"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.protozero::MessageHandle"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.protozero::MessageHandle"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.protozero::MessageHandle"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %70, i64 1
  %78 = ptrtoint %"class.protozero::MessageHandle"** %77 to i64
  %79 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !16

82:                                               ; preds = %69
  %83 = ptrtoint %"class.protozero::MessageHandle"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.protozero::MessageHandle"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.protozero::MessageHandle"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.protozero::MessageHandle"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.protozero::MessageHandle"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.protozero::MessageHandle"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 1
  %97 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 1
  %98 = bitcast %"class.protozero::MessageHandle"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.protozero::MessageHandle"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 2
  %102 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 2
  %103 = bitcast %"class.protozero::MessageHandle"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.protozero::MessageHandle"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 3
  %107 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 3
  %108 = bitcast %"class.protozero::MessageHandle"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.protozero::MessageHandle"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 4
  %112 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 4
  %113 = bitcast %"class.protozero::MessageHandle"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.protozero::MessageHandle"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 5
  %117 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 5
  %118 = bitcast %"class.protozero::MessageHandle"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.protozero::MessageHandle"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 6
  %122 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 6
  %123 = bitcast %"class.protozero::MessageHandle"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.protozero::MessageHandle"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 7
  %127 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 7
  %128 = bitcast %"class.protozero::MessageHandle"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.protozero::MessageHandle"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 8
  %132 = ptrtoint %"class.protozero::MessageHandle"** %131 to i64
  %133 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 8
  %134 = icmp eq %"class.protozero::MessageHandle"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.protozero::MessageHandle"** %61 to i64
  %137 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.protozero::MessageHandle"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.protozero::MessageHandle"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.protozero::MessageHandle"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.protozero::MessageHandle"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.protozero::MessageHandle"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.protozero::MessageHandle"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %148, i64 -1
  %150 = bitcast %"class.protozero::MessageHandle"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.protozero::MessageHandle"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %3, align 8
  %154 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %153, i64 -1
  store %"class.protozero::MessageHandle"** %154, %"class.protozero::MessageHandle"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEERNS_9allocatorIS8_EEE10push_frontERKS8_(%"struct.std::__1::__split_buffer.46"*, %"class.protozero::MessageHandle"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.46", %"struct.std::__1::__split_buffer.46"* %0, i64 0, i32 1
  %4 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.46", %"struct.std::__1::__split_buffer.46"* %0, i64 0, i32 0
  %6 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %5, align 8
  %7 = icmp eq %"class.protozero::MessageHandle"** %4, %6
  %8 = ptrtoint %"class.protozero::MessageHandle"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.46", %"struct.std::__1::__split_buffer.46"* %0, i64 0, i32 2
  %11 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.46", %"struct.std::__1::__split_buffer.46"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %12, align 8
  %14 = icmp ult %"class.protozero::MessageHandle"** %11, %13
  %15 = bitcast %"class.protozero::MessageHandle"*** %12 to i64*
  %16 = ptrtoint %"class.protozero::MessageHandle"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.protozero::MessageHandle"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %11, i64 %22
  %24 = ptrtoint %"class.protozero::MessageHandle"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %23, i64 %29
  %31 = bitcast %"class.protozero::MessageHandle"** %30 to i8*
  %32 = bitcast %"class.protozero::MessageHandle"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.protozero::MessageHandle"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.protozero::MessageHandle"** [ %30, %27 ], [ %23, %17 ]
  store %"class.protozero::MessageHandle"** %36, %"class.protozero::MessageHandle"*** %3, align 8
  %37 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %35, i64 %22
  store %"class.protozero::MessageHandle"** %37, %"class.protozero::MessageHandle"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.46"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to %"class.protozero::MessageHandle"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %51, i64 %48
  %54 = ptrtoint %"class.protozero::MessageHandle"** %53 to i64
  %55 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %51, i64 %43
  %56 = ptrtoint %"class.protozero::MessageHandle"** %55 to i64
  %57 = ptrtoint %"class.protozero::MessageHandle"** %4 to i64
  %58 = ptrtoint %"class.protozero::MessageHandle"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.protozero::MessageHandle"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.protozero::MessageHandle"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.protozero::MessageHandle"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %70, i64 1
  %78 = ptrtoint %"class.protozero::MessageHandle"** %77 to i64
  %79 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !17

82:                                               ; preds = %69
  %83 = ptrtoint %"class.protozero::MessageHandle"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.protozero::MessageHandle"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.protozero::MessageHandle"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.protozero::MessageHandle"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.protozero::MessageHandle"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.protozero::MessageHandle"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 1
  %97 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 1
  %98 = bitcast %"class.protozero::MessageHandle"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.protozero::MessageHandle"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 2
  %102 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 2
  %103 = bitcast %"class.protozero::MessageHandle"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.protozero::MessageHandle"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 3
  %107 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 3
  %108 = bitcast %"class.protozero::MessageHandle"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.protozero::MessageHandle"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 4
  %112 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 4
  %113 = bitcast %"class.protozero::MessageHandle"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.protozero::MessageHandle"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 5
  %117 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 5
  %118 = bitcast %"class.protozero::MessageHandle"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.protozero::MessageHandle"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 6
  %122 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 6
  %123 = bitcast %"class.protozero::MessageHandle"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.protozero::MessageHandle"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 7
  %127 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 7
  %128 = bitcast %"class.protozero::MessageHandle"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.protozero::MessageHandle"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %90, i64 8
  %132 = ptrtoint %"class.protozero::MessageHandle"** %131 to i64
  %133 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %92, i64 8
  %134 = icmp eq %"class.protozero::MessageHandle"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.protozero::MessageHandle"** %61 to i64
  %137 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.protozero::MessageHandle"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.protozero::MessageHandle"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.protozero::MessageHandle"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.protozero::MessageHandle"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.protozero::MessageHandle"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.protozero::MessageHandle"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %148, i64 -1
  %150 = bitcast %"class.protozero::MessageHandle"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.protozero::MessageHandle"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %3, align 8
  %154 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %153, i64 -1
  store %"class.protozero::MessageHandle"** %154, %"class.protozero::MessageHandle"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind
declare void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"*, %"class.protozero::MessageHandleBase"* dereferenceable(8)) unnamed_addr #5

declare void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"*, %"class.protozero::Message"*) unnamed_addr #2

declare void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"*) local_unnamed_addr #2

declare void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIN9protozero13MessageHandleIN8perfetto6protos6pbzero27DebugAnnotation_NestedValueEEENS_9allocatorIS7_EEE5clearEv(%"class.std::__1::__deque_base"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 9
  %7 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %8, align 8
  %10 = icmp eq %"class.protozero::MessageHandle"** %9, %3
  %11 = ptrtoint %"class.protozero::MessageHandle"** %9 to i64
  %12 = ptrtoint %"class.protozero::MessageHandle"** %3 to i64
  %13 = bitcast %"class.protozero::MessageHandle"** %3 to i8**
  br i1 %10, label %14, label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %29

16:                                               ; preds = %1
  %17 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %7, align 8
  %18 = and i64 %5, 511
  %19 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %17, i64 %18
  %20 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %5
  %23 = lshr i64 %22, 9
  %24 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %3, i64 %23
  %25 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %24, align 8
  %26 = and i64 %22, 511
  %27 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %25, i64 %26
  %28 = icmp eq %"class.protozero::MessageHandle"* %27, %19
  br i1 %28, label %29, label %47

29:                                               ; preds = %14, %16
  %30 = phi i64* [ %15, %14 ], [ %20, %16 ]
  %31 = bitcast %"class.protozero::MessageHandle"*** %8 to i64*
  br label %38

32:                                               ; preds = %61
  %33 = bitcast %"class.protozero::MessageHandle"*** %8 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.protozero::MessageHandle"*** %2 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = inttoptr i64 %36 to i8**
  br label %38

38:                                               ; preds = %29, %32
  %39 = phi i64* [ %30, %29 ], [ %20, %32 ]
  %40 = phi i64* [ %31, %29 ], [ %33, %32 ]
  %41 = phi i8** [ %13, %29 ], [ %37, %32 ]
  %42 = phi i64 [ %12, %29 ], [ %36, %32 ]
  %43 = phi i64 [ %11, %29 ], [ %34, %32 ]
  store i64 0, i64* %39, align 8
  %44 = sub i64 %43, %42
  %45 = ashr exact i64 %44, 3
  %46 = icmp ugt i64 %45, 2
  br i1 %46, label %66, label %77

47:                                               ; preds = %16, %61
  %48 = phi %"class.protozero::MessageHandle"* [ %64, %61 ], [ %19, %16 ]
  %49 = phi %"class.protozero::MessageHandle"** [ %63, %61 ], [ %7, %16 ]
  %50 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %48, i64 0, i32 0
  tail call void @_ZN9protozero17MessageHandleBaseD2Ev(%"class.protozero::MessageHandleBase"* %50) #10
  %51 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %48, i64 1
  %52 = ptrtoint %"class.protozero::MessageHandle"* %51 to i64
  %53 = bitcast %"class.protozero::MessageHandle"** %49 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = icmp eq i64 %55, 4096
  br i1 %56, label %57, label %61

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %49, i64 1
  %59 = bitcast %"class.protozero::MessageHandle"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  br label %61

61:                                               ; preds = %47, %57
  %62 = phi i64 [ %60, %57 ], [ %52, %47 ]
  %63 = phi %"class.protozero::MessageHandle"** [ %58, %57 ], [ %49, %47 ]
  %64 = inttoptr i64 %62 to %"class.protozero::MessageHandle"*
  %65 = icmp eq %"class.protozero::MessageHandle"* %27, %64
  br i1 %65, label %32, label %47

66:                                               ; preds = %38, %66
  %67 = phi i8** [ %76, %66 ], [ %41, %38 ]
  %68 = load i8*, i8** %67, align 8
  tail call void @_ZdlPv(i8* %68) #11
  %69 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %2, align 8
  %70 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %69, i64 1
  store %"class.protozero::MessageHandle"** %70, %"class.protozero::MessageHandle"*** %2, align 8
  %71 = load i64, i64* %40, align 8
  %72 = ptrtoint %"class.protozero::MessageHandle"** %70 to i64
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 3
  %75 = icmp ugt i64 %74, 2
  %76 = bitcast %"class.protozero::MessageHandle"** %70 to i8**
  br i1 %75, label %66, label %77

77:                                               ; preds = %66, %38
  %78 = phi i64 [ %45, %38 ], [ %74, %66 ]
  switch i64 %78, label %82 [
    i64 1, label %80
    i64 2, label %79
  ]

79:                                               ; preds = %77
  br label %80

80:                                               ; preds = %77, %79
  %81 = phi i64 [ 512, %79 ], [ 256, %77 ]
  store i64 %81, i64* %4, align 8
  br label %82

82:                                               ; preds = %80, %77
  ret void
}

declare %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* @_ZN7tracing12_GLOBAL__N_111ProtoWriter12AddDictEntryEPKc(%"class.tracing::(anonymous namespace)::ProtoWriter"* nocapture readonly, i8* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %5, -1
  %9 = add i64 %8, %7
  %10 = getelementptr inbounds %"class.tracing::(anonymous namespace)::ProtoWriter", %"class.tracing::(anonymous namespace)::ProtoWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %11 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %10, align 8
  %12 = lshr i64 %9, 9
  %13 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %11, i64 %12
  %14 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %13, align 8
  %15 = and i64 %9, 511
  %16 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %14, i64 %15, i32 0, i32 0
  %17 = load %"class.protozero::Message"*, %"class.protozero::Message"** %16, align 8
  %18 = tail call i64 @strlen(i8* %1) #10
  %19 = icmp ugt i64 %18, -17
  br i1 %19, label %20, label %22

20:                                               ; preds = %2
  %21 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %21) #12
  unreachable

22:                                               ; preds = %2
  %23 = icmp ult i64 %18, 23
  br i1 %23, label %34, label %24

24:                                               ; preds = %22
  %25 = add nuw i64 %18, 16
  %26 = and i64 %25, -16
  %27 = tail call i8* @_Znwm(i64 %26) #11
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %27, i8** %28, align 8
  %29 = or i64 %26, -9223372036854775808
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %31, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %40

34:                                               ; preds = %22
  %35 = trunc i64 %18 to i8
  %36 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  store i8 %35, i8* %37, align 1
  %38 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %39 = icmp eq i64 %18, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %34, %24
  %41 = phi i8* [ %38, %34 ], [ %33, %24 ]
  %42 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %36, %34 ], [ %32, %24 ]
  %43 = phi i8* [ %38, %34 ], [ %27, %24 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* align 1 %1, i64 %18, i1 false) #10
  br label %44

44:                                               ; preds = %34, %40
  %45 = phi i8* [ %38, %34 ], [ %41, %40 ]
  %46 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %36, %34 ], [ %42, %40 ]
  %47 = phi i8* [ %38, %34 ], [ %43, %40 ]
  %48 = getelementptr inbounds i8, i8* %47, i64 %18
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = zext i8 %50 to i64
  %57 = select i1 %51, i8* %53, i8* %45
  %58 = select i1 %51, i64 %55, i64 %56
  call void @_ZN9protozero7Message11AppendBytesEjPKvm(%"class.protozero::Message"* %17, i32 2, i8* %57, i64 %58) #10
  %59 = load i8, i8* %49, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %44
  %62 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %62) #11
  br label %63

63:                                               ; preds = %44, %61
  %64 = load i64, i64* %4, align 8
  %65 = load i64, i64* %6, align 8
  %66 = add i64 %64, -1
  %67 = add i64 %66, %65
  %68 = load %"class.protozero::MessageHandle"**, %"class.protozero::MessageHandle"*** %10, align 8
  %69 = lshr i64 %67, 9
  %70 = getelementptr inbounds %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %68, i64 %69
  %71 = load %"class.protozero::MessageHandle"*, %"class.protozero::MessageHandle"** %70, align 8
  %72 = and i64 %67, 511
  %73 = getelementptr inbounds %"class.protozero::MessageHandle", %"class.protozero::MessageHandle"* %71, i64 %72, i32 0, i32 0
  %74 = load %"class.protozero::Message"*, %"class.protozero::Message"** %73, align 8
  %75 = call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %74, i32 3) #10
  %76 = bitcast %"class.protozero::Message"* %75 to %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"*
  ret %"class.perfetto::protos::pbzero::DebugAnnotation_NestedValue"* %76
}

declare void @_ZN9protozero7Message11AppendBytesEjPKvm(%"class.protozero::Message"*, i32, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare i32 @_ZN9protozero7Message8FinalizeEv(%"class.protozero::Message"*) local_unnamed_addr #2

declare void @_ZN9protozero19ScatteredHeapBuffer28AdjustUsedSizeOfCurrentSliceEv(%"class.protozero::ScatteredHeapBuffer"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZN4base11trace_event24TraceEventMemoryOverhead3AddENS1_10ObjectTypeEmm(%"class.base::trace_event::TraceEventMemoryOverhead"*, i32, i64, i64) local_unnamed_addr #2

declare i64 @_ZN9protozero19ScatteredHeapBuffer12GetTotalSizeEv(%"class.protozero::ScatteredHeapBuffer"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!13 = distinct !{!13, !7}
!14 = distinct !{!14, !7}
!15 = distinct !{!15, !7}
!16 = distinct !{!16, !7}
!17 = distinct !{!17, !7}
