; ModuleID = '../../third_party/blink/renderer/core/editing/spellcheck/spell_check_requester.cc'
source_filename = "../../third_party/blink/renderer/core/editing/spellcheck/spell_check_requester.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.1155", i32, [4 x i8], %"class.std::__1::unique_ptr.1293", %"class.std::__1::unique_ptr.1293", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.1299", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.1305", %"class.std::__1::unique_ptr.1311", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.1323", %"class.std::__1::unique_ptr.1329", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.70", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1155" = type { %"class.std::__1::__compressed_pair.1156" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1157" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.1158", %"class.std::__1::unique_ptr.1164", %"class.std::__1::unique_ptr.1170", %"class.std::__1::unique_ptr.1176", %"class.std::__1::unique_ptr.1182", %"class.std::__1::unique_ptr.1188", %"class.std::__1::unique_ptr.1199", %"class.std::__1::unique_ptr.1206", %"class.std::__1::unique_ptr.1206", %"class.std::__1::unique_ptr.1213", %"class.std::__1::unique_ptr.1220", %"class.std::__1::unique_ptr.1227", %"class.std::__1::unique_ptr.1227", %"class.std::__1::unique_ptr.1234", %"class.std::__1::unique_ptr.1241", %"class.std::__1::unique_ptr.1248", %"class.std::__1::unique_ptr.1273", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.1170" = type { %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.1176" = type { %"class.std::__1::__compressed_pair.1177" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.1178" }
%"struct.std::__1::__compressed_pair_elem.1178" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.1182" = type { %"class.std::__1::__compressed_pair.1183" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.1184" }
%"struct.std::__1::__compressed_pair_elem.1184" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.1188" = type { %"class.std::__1::__compressed_pair.1189" }
%"class.std::__1::__compressed_pair.1189" = type { %"struct.std::__1::__compressed_pair_elem.1190" }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.1191" = type { %"struct.std::__1::__atomic_base.1192" }
%"struct.std::__1::__atomic_base.1192" = type { %"struct.std::__1::__atomic_base.1193" }
%"struct.std::__1::__atomic_base.1193" = type { %"struct.std::__1::__cxx_atomic_impl.1194" }
%"struct.std::__1::__cxx_atomic_impl.1194" = type { %"struct.std::__1::__cxx_atomic_base_impl.1195" }
%"struct.std::__1::__cxx_atomic_base_impl.1195" = type { i64 }
%"class.std::__1::unique_ptr.1199" = type { %"class.std::__1::__compressed_pair.1200" }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.1201" }
%"struct.std::__1::__compressed_pair_elem.1201" = type { %"class.blink::Worklist.1202"* }
%"class.blink::Worklist.1202" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.std::__1::unique_ptr.1206" = type { %"class.std::__1::__compressed_pair.1207" }
%"class.std::__1::__compressed_pair.1207" = type { %"struct.std::__1::__compressed_pair_elem.1208" }
%"struct.std::__1::__compressed_pair_elem.1208" = type { %"class.blink::Worklist.1209"* }
%"class.blink::Worklist.1209" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.std::__1::unique_ptr.1213" = type { %"class.std::__1::__compressed_pair.1214" }
%"class.std::__1::__compressed_pair.1214" = type { %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"class.blink::Worklist.1216"* }
%"class.blink::Worklist.1216" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.std::__1::unique_ptr.1220" = type { %"class.std::__1::__compressed_pair.1221" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"class.blink::Worklist.1223"* }
%"class.blink::Worklist.1223" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.std::__1::unique_ptr.1227" = type { %"class.std::__1::__compressed_pair.1228" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.1229" }
%"struct.std::__1::__compressed_pair_elem.1229" = type { %"class.blink::Worklist.1230"* }
%"class.blink::Worklist.1230" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.std::__1::unique_ptr.1234" = type { %"class.std::__1::__compressed_pair.1235" }
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.1236" }
%"struct.std::__1::__compressed_pair_elem.1236" = type { %"class.blink::Worklist.1237"* }
%"class.blink::Worklist.1237" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.std::__1::unique_ptr.1241" = type { %"class.std::__1::__compressed_pair.1242" }
%"class.std::__1::__compressed_pair.1242" = type { %"struct.std::__1::__compressed_pair_elem.1243" }
%"struct.std::__1::__compressed_pair_elem.1243" = type { %"class.blink::Worklist.1244"* }
%"class.blink::Worklist.1244" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1191" }
%"class.std::__1::unique_ptr.1248" = type { %"class.std::__1::__compressed_pair.1249" }
%"class.std::__1::__compressed_pair.1249" = type { %"struct.std::__1::__compressed_pair_elem.1250" }
%"struct.std::__1::__compressed_pair_elem.1250" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1251", %"class.std::__1::__compressed_pair.1259", %"class.std::__1::__compressed_pair.1264", %"class.std::__1::__compressed_pair.1266", [4 x i8] }>
%"class.std::__1::unique_ptr.1251" = type { %"class.std::__1::__compressed_pair.1252" }
%"class.std::__1::__compressed_pair.1252" = type { %"struct.std::__1::__compressed_pair_elem.1253", %"struct.std::__1::__compressed_pair_elem.1254" }
%"struct.std::__1::__compressed_pair_elem.1253" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1254" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1255" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { i64 }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.1260" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::__compressed_pair.1266" = type { %"struct.std::__1::__compressed_pair_elem.1267" }
%"struct.std::__1::__compressed_pair_elem.1267" = type { float }
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.1276", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.1278" }
%"struct.std::__1::__compressed_pair_elem.1278" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.1285" }
%"class.WTF::Vector.1285" = type { %"class.WTF::VectorBuffer.1286" }
%"class.WTF::VectorBuffer.1286" = type { %"class.WTF::VectorBufferBase.1287" }
%"class.WTF::VectorBufferBase.1287" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.1293" = type { %"class.std::__1::__compressed_pair.1294" }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.1295" }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.1299" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1302" }
%"class.WTF::VectorBuffer.1302" = type { %"class.WTF::VectorBufferBase.1303" }
%"class.WTF::VectorBufferBase.1303" = type { %"struct.std::__1::pair.1304"*, i32, i32 }
%"struct.std::__1::pair.1304" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.1305" = type { %"class.std::__1::__compressed_pair.1306" }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.1307" }
%"struct.std::__1::__compressed_pair_elem.1307" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.1311" = type { %"class.std::__1::__compressed_pair.1312" }
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.1313" }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.1317" }
%"class.std::__1::unique_ptr.1317" = type { %"class.std::__1::__compressed_pair.1318" }
%"class.std::__1::__compressed_pair.1318" = type { %"struct.std::__1::__compressed_pair_elem.1319" }
%"struct.std::__1::__compressed_pair_elem.1319" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.1202"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.1209"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1216"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.1223"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1230"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1560", i64 }
%"class.std::__1::vector.1560" = type { %"class.std::__1::__vector_base.1561" }
%"class.std::__1::__vector_base.1561" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1562" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1562" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"struct.std::__1::__compressed_pair_elem.1563" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.1323" = type { %"class.std::__1::__compressed_pair.1324" }
%"class.std::__1::__compressed_pair.1324" = type { %"struct.std::__1::__compressed_pair_elem.1325" }
%"struct.std::__1::__compressed_pair_elem.1325" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.1329" = type { %"class.std::__1::__compressed_pair.1330" }
%"class.std::__1::__compressed_pair.1330" = type { %"struct.std::__1::__compressed_pair_elem.1331" }
%"struct.std::__1::__compressed_pair_elem.1331" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.1335 }
%class.scoped_refptr.1335 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.blink::SpellCheckRequest" = type <{ %"class.blink::Member", %"class.blink::Member.512", %"class.blink::Member.545", i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type { %"class.blink::Member.2", i32, i32, %"class.blink::TaskHandle", %"class.blink::Member.537", %"class.blink::HeapDeque" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.354", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.362", %"class.blink::Member.364", %"class.blink::Member.366", i8, %"class.blink::Member.368", %"class.blink::Member.370", %"class.blink::Member.372", %"class.blink::Member.372", %"class.blink::Member.372", %"class.blink::Member.372", %"class.blink::Member.372", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::Member.378", %"class.blink::Member.380", %"class.blink::Member.382", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.321", %"class.blink::Member.384", %class.scoped_refptr.386, %"class.blink::HeapHashSet.448", %"class.blink::Member.455", %"class.blink::HeapHashMap.468", %"class.std::__1::unique_ptr.475", %"class.blink::Member.487", %"class.blink::Member.516", %"class.blink::Member.518", %"class.blink::Member.520", %"class.WTF::Vector.523", %"class.util::TokenType", %"class.WTF::HashSet.528", %"class.WTF::Deque" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.16", %"class.blink::Member.18", %"class.blink::Member.20", %"class.blink::Member.22", i8, %"class.WTF::Vector.24" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.11" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::HeapVector.13"* }
%"class.blink::HeapVector.13" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.14"* }
%"class.WTF::Vector.14" = type opaque
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.654", %"class.blink::Member.656", %"class.blink::Member.658", i8, i32, i8, i32, %"class.blink::Member.660", %"class.blink::Member.18", %"class.blink::FrameLifecycle", %"class.blink::Member.16", %"class.blink::Member.16", %"class.blink::Member.16", %"class.blink::Member.16", %"class.blink::Member.16", %"class.blink::Member.16", %"class.blink::Member.493", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.668", i8, %"class.base::UnguessableToken", %"class.absl::optional.670", %"class.absl::optional.675", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.16", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.687", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.695", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.703", %"class.blink::FrameLoader", %"class.blink::Member.730", %"class.blink::Member.545", %"class.blink::Member.732", %"class.blink::Member.734", %"class.blink::Member.736", %"class.blink::Member.738", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.740", %class.scoped_refptr.742, %"class.blink::Member.743", %"class.blink::Member.745", %"class.blink::Member.747", %"class.blink::Member.749", %"class.blink::Member.751", %"class.blink::Member.753", %"class.blink::Member.755", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.757", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.760", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.766", %"class.std::__1::unique_ptr.767", %"class.absl::optional.675", i32, [4 x i8], %"class.std::__1::unique_ptr.773", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.781", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.786", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.791", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.794", %"class.blink::Member.796", %"class.blink::Member.798", %"class.blink::Member.800", %"class.mojo::StructPtr.803", %"class.blink::Member.812", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.814", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.687" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.688" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.688" = type { %"class.WTF::HashMap.691" }
%"class.WTF::HashMap.691" = type { %"class.WTF::HashTable.692" }
%"class.WTF::HashTable.692" = type <{ %"struct.WTF::KeyValuePair.694"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.694" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.478", %"class.base::WeakPtrFactory.483" }
%"class.WTF::HashMap.478" = type { %"class.WTF::HashTable.479" }
%"class.WTF::HashTable.479" = type <{ %"struct.WTF::KeyValuePair.482"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.482" = type opaque
%"class.base::WeakPtrFactory.483" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.51", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.51" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.28" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.52" }
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i8 }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.701" }
%"class.blink::Member.701" = type { %"class.blink::MemberBase.702" }
%"class.blink::MemberBase.702" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.491" }
%"class.blink::WeakMember.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.213" }
%"class.WTF::HashTable.213" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.153", %"class.base::RepeatingCallback.1608", i64, %"class.std::__1::map.1609", i8*, i64, %"class.base::WeakPtrFactory.1618" }
%"class.base::RepeatingCallback.153" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.57 }
%class.scoped_refptr.57 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.58", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.58" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.1608" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1609" = type { %"class.std::__1::__tree.1610" }
%"class.std::__1::__tree.1610" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1611", %"class.std::__1::__compressed_pair.1615" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1615" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::WeakPtrFactory.1618" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.703" = type { %"class.WTF::HashSet.706" }
%"class.WTF::HashSet.706" = type { %"class.WTF::HashTable.707" }
%"class.WTF::HashTable.707" = type <{ %"class.blink::WeakMember.709"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.709" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.493", %"class.blink::Member.710", %"class.blink::Member.712", %"class.std::__1::unique_ptr.714", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.726" }
%"class.blink::Member.710" = type { %"class.blink::MemberBase.711" }
%"class.blink::MemberBase.711" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.717" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::HashSet.726" = type { %"class.WTF::HashTable.727" }
%"class.WTF::HashTable.727" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.730" = type { %"class.blink::MemberBase.731" }
%"class.blink::MemberBase.731" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.821", %"class.blink::Member.493", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.829", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.834", %"class.blink::Member.836", %"class.blink::Member.836", %"class.std::__1::unique_ptr.839", i32, [4 x i8], %"class.WTF::HashSet.842", %"class.blink::Member.849", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.851", %"class.blink::HeapHashSet.858", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.866", i8, %"class.blink::Member.872", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.884", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.898", i8, %"class.std::__1::unique_ptr.904", %"class.std::__1::unique_ptr.1021", %"class.WTF::Vector.1027", i32, %class.scoped_refptr.1032, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1033", %"class.blink::Member.1035", %"class.blink::Member.1037", %"class.blink::HeapHashSet.1039", %"class.blink::HeapHashSet.1046", %"class.std::__1::unique_ptr.1053", %"class.std::__1::unique_ptr.1060", %"class.WTF::Vector.1071" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.821" = type { %"class.WTF::HashTable.822" }
%"class.WTF::HashTable.822" = type <{ %class.scoped_refptr.825*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.825 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.828", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.826, %"class.base::WeakPtrFactory.827" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.826 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.34" }>
%"class.base::RefCountedThreadSafe.34" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.827" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.828" = type { %"class.blink::MemberBase.731" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.829" = type { %"class.absl::optional_internal::optional_data.830" }
%"class.absl::optional_internal::optional_data.830" = type { %"class.absl::optional_internal::optional_data_base.831" }
%"class.absl::optional_internal::optional_data_base.831" = type { %"class.absl::optional_internal::optional_data_dtor_base.832" }
%"class.absl::optional_internal::optional_data_dtor_base.832" = type { i8, %union.anon.833 }
%union.anon.833 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::HeapHashSet.838"* }
%"class.blink::HeapHashSet.838" = type opaque
%"class.std::__1::unique_ptr.839" = type { %"class.std::__1::__compressed_pair.840" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"class.WTF::HashSet.842"* }
%"class.WTF::HashSet.842" = type { %"class.WTF::HashTable.843" }
%"class.WTF::HashTable.843" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.851" = type { %"class.WTF::HashSet.854" }
%"class.WTF::HashSet.854" = type { %"class.WTF::HashTable.855" }
%"class.WTF::HashTable.855" = type <{ %"class.blink::Member.857"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.857" = type opaque
%"class.blink::HeapHashSet.858" = type { %"class.WTF::HashSet.861" }
%"class.WTF::HashSet.861" = type { %"class.WTF::HashTable.862" }
%"class.WTF::HashTable.862" = type <{ %"class.blink::Member.864"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.864" = type { %"class.blink::MemberBase.865" }
%"class.blink::MemberBase.865" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1099", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1110", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.545" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1099" = type { %"class.blink::MemberBase.1100" }
%"class.blink::MemberBase.1100" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1101", %"class.blink::Member.1102", %"class.blink::Member.1104", %"class.blink::Member.1106", %"class.blink::Member.1108", %"class.WTF::Vector.1071", i16, %class.scoped_refptr.826 }
%"class.blink::ThreadState::PrefinalizerRegistration.1101" = type { i8 }
%"class.blink::Member.1102" = type { %"class.blink::MemberBase.1103" }
%"class.blink::MemberBase.1103" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1110" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1111", { i64, i64 } }
%"class.blink::WeakMember.1111" = type { %"class.blink::MemberBase.865" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.866" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.876", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.876" = type { %"class.WTF::HashTable.877" }
%"class.WTF::HashTable.877" = type <{ %"struct.WTF::KeyValuePair.879"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.879" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.880", i32, i32 }
%"class.WTF::Vector.880" = type { %"class.WTF::VectorBuffer.881" }
%"class.WTF::VectorBuffer.881" = type { %"class.WTF::VectorBufferBase.882" }
%"class.WTF::VectorBufferBase.882" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.884" = type { %"class.WTF::LinkedHashSet.887" }
%"class.WTF::LinkedHashSet.887" = type { %"class.WTF::HashMap.888", %"class.WTF::VectorBackedLinkedList.892" }
%"class.WTF::HashMap.888" = type { %"class.WTF::HashTable.889" }
%"class.WTF::HashTable.889" = type <{ %"struct.WTF::KeyValuePair.891"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.891" = type opaque
%"class.WTF::VectorBackedLinkedList.892" = type { %"class.WTF::Vector.893", i32, i32 }
%"class.WTF::Vector.893" = type { %"class.WTF::VectorBuffer.894" }
%"class.WTF::VectorBuffer.894" = type { %"class.WTF::VectorBufferBase.895" }
%"class.WTF::VectorBufferBase.895" = type { %"class.WTF::VectorBackedLinkedListNode.896"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.896" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.907, %class.scoped_refptr.907, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.998", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1003", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.907 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.908", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.915" }
%"class.WTF::RefCounted.908" = type { %"class.base::RefCounted.909" }
%"class.base::RefCounted.909" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.910", i32, [4 x i8] }>
%"class.WTF::Vector.910" = type { %"class.WTF::VectorBuffer.911" }
%"class.WTF::VectorBuffer.911" = type { %"class.WTF::VectorBufferBase.912" }
%"class.WTF::VectorBufferBase.912" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.915" = type { %"class.WTF::VectorBuffer.916" }
%"class.WTF::VectorBuffer.916" = type { %"class.WTF::VectorBufferBase.917" }
%"class.WTF::VectorBufferBase.917" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.921", %"class.std::__1::unique_ptr.970", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.918, %class.scoped_refptr.919, %class.scoped_refptr.920 }
%class.scoped_refptr.918 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.934", i8, i8, %class.scoped_refptr.918, i32, i32 }
%"class.WTF::RefCounted.934" = type { %"class.base::RefCounted.935" }
%"class.base::RefCounted.935" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.919 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1094" }
%"class.blink::PaintPropertyNode.1094" = type { %"class.WTF::RefCounted.1095", i8, i8, %class.scoped_refptr.919, i32, i32 }
%"class.WTF::RefCounted.1095" = type { %"class.base::RefCounted.1096" }
%"class.base::RefCounted.1096" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.920 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1091" }
%"class.blink::PaintPropertyNode.1091" = type { %"class.WTF::RefCounted.1092", i8, i8, %class.scoped_refptr.920, i32, i32 }
%"class.WTF::RefCounted.1092" = type { %"class.base::RefCounted.1093" }
%"class.base::RefCounted.1093" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.921" = type { %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.924", %"class.WTF::Vector.929", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.924" = type { %"class.WTF::VectorBuffer.925" }
%"class.WTF::VectorBuffer.925" = type { %"class.WTF::VectorBufferBase.926" }
%"class.WTF::VectorBufferBase.926" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.929" = type { %"class.WTF::VectorBuffer.930" }
%"class.WTF::VectorBuffer.930" = type { %"class.WTF::VectorBufferBase.931" }
%"class.WTF::VectorBufferBase.931" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.949" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.942, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.943", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.936" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.942 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1076", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1076" = type { %"class.WTF::RefCounted.1077", i8, i8, %class.scoped_refptr.942, i32, i32 }
%"class.WTF::RefCounted.1077" = type { %"class.base::RefCounted.1078" }
%"class.base::RefCounted.1078" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1079" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1079" = type { %"class.absl::optional_internal::optional_data.1080" }
%"class.absl::optional_internal::optional_data.1080" = type { %"class.absl::optional_internal::optional_data_base.1081" }
%"class.absl::optional_internal::optional_data_base.1081" = type { %"class.absl::optional_internal::optional_data_dtor_base.1082" }
%"class.absl::optional_internal::optional_data_dtor_base.1082" = type { i8, %union.anon.1083 }
%union.anon.1083 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1084", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1084" = type { %"class.std::__1::__vector_base.1085" }
%"class.std::__1::__vector_base.1085" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1086" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.943" = type { %"class.std::__1::__compressed_pair.944" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.949" = type { %"class.std::__1::__compressed_pair.950" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.952", %"class.std::__1::unique_ptr.958", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.952" = type { %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.958" = type { %"class.std::__1::__compressed_pair.959" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.970" = type { %"class.std::__1::__compressed_pair.971" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.973", %"class.absl::optional.973" }
%"class.absl::optional.973" = type { %"class.absl::optional_internal::optional_data.974" }
%"class.absl::optional_internal::optional_data.974" = type { %"class.absl::optional_internal::optional_data_base.975" }
%"class.absl::optional_internal::optional_data_base.975" = type { %"class.absl::optional_internal::optional_data_dtor_base.976" }
%"class.absl::optional_internal::optional_data_dtor_base.976" = type { i8, [3 x i8], %union.anon.977 }
%union.anon.977 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.915"*, %"class.absl::optional.983", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.983" = type { %"class.absl::optional_internal::optional_data.984" }
%"class.absl::optional_internal::optional_data.984" = type { %"class.absl::optional_internal::optional_data_base.985" }
%"class.absl::optional_internal::optional_data_base.985" = type { %"class.absl::optional_internal::optional_data_dtor_base.986" }
%"class.absl::optional_internal::optional_data_dtor_base.986" = type { i8, %union.anon.987 }
%union.anon.987 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.988", %"class.WTF::Vector.993" }
%"class.WTF::Vector.988" = type { %"class.WTF::VectorBuffer.989" }
%"class.WTF::VectorBuffer.989" = type { %"class.WTF::VectorBufferBase.990", [128 x i8] }
%"class.WTF::VectorBufferBase.990" = type { i32*, i32, i32 }
%"class.WTF::Vector.993" = type { %"class.WTF::VectorBuffer.994" }
%"class.WTF::VectorBuffer.994" = type { %"class.WTF::VectorBufferBase.995", [128 x i8] }
%"class.WTF::VectorBufferBase.995" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.998" = type { %"class.WTF::VectorBuffer.999" }
%"class.WTF::VectorBuffer.999" = type { %"class.WTF::VectorBufferBase.1000" }
%"class.WTF::VectorBufferBase.1000" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1003" = type { %"class.WTF::HashTable.1004" }
%"class.WTF::HashTable.1004" = type <{ %"struct.WTF::KeyValuePair.1007"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1007" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1008", %"class.WTF::Vector.1013" }
%"class.WTF::HashMap.1008" = type { %"class.WTF::HashTable.1009" }
%"class.WTF::HashTable.1009" = type <{ %"struct.WTF::KeyValuePair.1012"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1012" = type opaque
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1027" = type { %"class.WTF::VectorBuffer.1028" }
%"class.WTF::VectorBuffer.1028" = type { %"class.WTF::VectorBufferBase.1029" }
%"class.WTF::VectorBufferBase.1029" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1032 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1033" = type { %"class.blink::MemberBase.1034" }
%"class.blink::MemberBase.1034" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1035" = type { %"class.blink::MemberBase.1036" }
%"class.blink::MemberBase.1036" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1037" = type { %"class.blink::MemberBase.1038" }
%"class.blink::MemberBase.1038" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1039" = type { %"class.WTF::HashSet.1042" }
%"class.WTF::HashSet.1042" = type { %"class.WTF::HashTable.1043" }
%"class.WTF::HashTable.1043" = type <{ %"class.blink::WeakMember.1045"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1045" = type opaque
%"class.blink::HeapHashSet.1046" = type { %"class.WTF::HashSet.1049" }
%"class.WTF::HashSet.1049" = type { %"class.WTF::HashTable.1050" }
%"class.WTF::HashTable.1050" = type <{ %"class.blink::WeakMember.1052"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1052" = type opaque
%"class.std::__1::unique_ptr.1053" = type { %"class.std::__1::__compressed_pair.1054" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.1055" }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1056" }
%"class.base::time_internal::TimeBase.1056" = type { i64 }
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1063", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1063" = type { %"class.absl::optional_internal::optional_data.1064" }
%"class.absl::optional_internal::optional_data.1064" = type { %"class.absl::optional_internal::optional_data_base.1065" }
%"class.absl::optional_internal::optional_data_base.1065" = type { %"class.absl::optional_internal::optional_data_dtor_base.1066" }
%"class.absl::optional_internal::optional_data_dtor_base.1066" = type { i8, %union.anon.1067 }
%union.anon.1067 = type { %"class.base::Time" }
%"class.WTF::Vector.1071" = type { %"class.WTF::VectorBuffer.1072" }
%"class.WTF::VectorBuffer.1072" = type { %"class.WTF::VectorBufferBase.1073" }
%"class.WTF::VectorBufferBase.1073" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.736" = type { %"class.blink::MemberBase.737" }
%"class.blink::MemberBase.737" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.738" = type { %"class.blink::MemberBase.739" }
%"class.blink::MemberBase.739" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.740" = type { %"class.blink::MemberBase.741" }
%"class.blink::MemberBase.741" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.742 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.743" = type { %"class.blink::MemberBase.744" }
%"class.blink::MemberBase.744" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.745" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.747" = type { %"class.blink::MemberBase.748" }
%"class.blink::MemberBase.748" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.749" = type { %"class.blink::MemberBase.750" }
%"class.blink::MemberBase.750" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.751" = type { %"class.blink::MemberBase.752" }
%"class.blink::MemberBase.752" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.753" = type { %"class.blink::MemberBase.754" }
%"class.blink::MemberBase.754" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.755" = type { %"class.blink::MemberBase.756" }
%"class.blink::MemberBase.756" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.757" = type { %"class.blink::Member.758" }
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1621" }
%"class.mojo::Remote.1621" = type { %"class.mojo::internal::InterfacePtrState.1622" }
%"class.mojo::internal::InterfacePtrState.1622" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1623" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.27, %"class.std::__1::unique_ptr.150", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.33, i32 }>
%class.scoped_refptr.27 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.33, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.112", %"class.absl::optional.117", %"class.absl::optional.74", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.141", i8, [7 x i8], %class.scoped_refptr.33, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.33, %"class.std::__1::unique_ptr.59", %"class.absl::optional", %"struct.std::__1::atomic.70", i8, i8, i8, i8, i32, i32, %"class.absl::optional.74", %"class.std::__1::unique_ptr.79", i8, i64, %class.scoped_refptr.108, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.111" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.33, i8, %"class.mojo::ScopedHandleBase.62", %class.scoped_refptr.63, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.64" }
%"class.mojo::ScopedHandleBase.62" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.63 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.64" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.68 }
%union.anon.68 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.69", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.69" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.82", i8, i64, %class.scoped_refptr.83, %class.scoped_refptr.104 }
%"class.base::RepeatingCallback.82" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.83 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.93", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.84 }
%class.scoped_refptr.84 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.93" = type { %"class.std::__1::__tree.94" }
%"class.std::__1::__tree.94" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%class.scoped_refptr.104 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.108 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.109 }
%class.scoped_refptr.109 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1567", [4 x i8], %"class.base::RepeatingCallback.153", %class.scoped_refptr.33, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1567" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.110 }
%class.scoped_refptr.110 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.111" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.112" = type { %"class.absl::optional_internal::optional_data.113" }
%"class.absl::optional_internal::optional_data.113" = type { %"class.absl::optional_internal::optional_data_base.114" }
%"class.absl::optional_internal::optional_data_base.114" = type { %"class.absl::optional_internal::optional_data_dtor_base.115" }
%"class.absl::optional_internal::optional_data_dtor_base.115" = type { i8, %union.anon.116 }
%union.anon.116 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.117" = type { %"class.absl::optional_internal::optional_data.118" }
%"class.absl::optional_internal::optional_data.118" = type { %"class.absl::optional_internal::optional_data_base.119" }
%"class.absl::optional_internal::optional_data_base.119" = type { %"class.absl::optional_internal::optional_data_dtor_base.120" }
%"class.absl::optional_internal::optional_data_dtor_base.120" = type { i8, [7 x i8], %union.anon.121 }
%union.anon.121 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.74" = type { %"class.absl::optional_internal::optional_data.75" }
%"class.absl::optional_internal::optional_data.75" = type { %"class.absl::optional_internal::optional_data_base.76" }
%"class.absl::optional_internal::optional_data_base.76" = type { %"class.absl::optional_internal::optional_data_dtor_base.77" }
%"class.absl::optional_internal::optional_data_dtor_base.77" = type { i8, %union.anon.78 }
%union.anon.78 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.126 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.126 = type { %"class.std::__1::map.129" }
%"class.std::__1::map.129" = type { %"class.std::__1::__tree.130" }
%"class.std::__1::__tree.130" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.140"*, i64 }
%"class.std::__1::unique_ptr.140" = type opaque
%"class.std::__1::map.141" = type { %"class.std::__1::__tree.142" }
%"class.std::__1::__tree.142" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.153", %"class.base::OnceCallback.154", %"class.absl::optional.155", %"class.absl::optional.160", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.167", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.175", %"class.std::__1::map.186", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.195", i8, %class.scoped_refptr.33, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.196" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.154" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.155" = type { %"class.absl::optional_internal::optional_data.156" }
%"class.absl::optional_internal::optional_data.156" = type { %"class.absl::optional_internal::optional_data_base.157" }
%"class.absl::optional_internal::optional_data_base.157" = type { %"class.absl::optional_internal::optional_data_dtor_base.158" }
%"class.absl::optional_internal::optional_data_dtor_base.158" = type { i8, %union.anon.159 }
%union.anon.159 = type { %"class.base::TimeDelta" }
%"class.absl::optional.160" = type { %"class.absl::optional_internal::optional_data.161" }
%"class.absl::optional_internal::optional_data.161" = type { %"class.absl::optional_internal::optional_data_base.162" }
%"class.absl::optional_internal::optional_data_base.162" = type { %"class.absl::optional_internal::optional_data_dtor_base.163" }
%"class.absl::optional_internal::optional_data_dtor_base.163" = type { i8, %union.anon.164 }
%union.anon.164 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.33, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.165" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.165" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.166 }
%class.scoped_refptr.166 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.170", %class.scoped_refptr.171 }
%"class.base::RepeatingCallback.170" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.171 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.175" = type { %"class.std::__1::__tree.176" }
%"class.std::__1::__tree.176" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.186" = type { %"class.std::__1::__tree.187" }
%"class.std::__1::__tree.187" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::OnceCallback.195" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.196" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.33 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.1623" = type { %"class.std::__1::__compressed_pair.1624" }
%"class.std::__1::__compressed_pair.1624" = type { %"struct.std::__1::__compressed_pair_elem.1625" }
%"struct.std::__1::__compressed_pair_elem.1625" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.766" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.779" }
%"class.blink::Member.779" = type { %"class.blink::MemberBase.780" }
%"class.blink::MemberBase.780" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1631" }
%"class.mojo::AssociatedRemote.1631" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1632" }
%"class.mojo::internal::AssociatedInterfacePtrState.1632" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1633" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.150", i32 }>
%"class.std::__1::unique_ptr.1633" = type { %"class.std::__1::__compressed_pair.1634" }
%"class.std::__1::__compressed_pair.1634" = type { %"struct.std::__1::__compressed_pair_elem.1635" }
%"struct.std::__1::__compressed_pair_elem.1635" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.781" = type { %"class.blink::Member.782" }
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1641" }
%"class.mojo::AssociatedRemote.1641" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1642" }
%"class.mojo::internal::AssociatedInterfacePtrState.1642" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1643" }
%"class.std::__1::unique_ptr.1643" = type { %"class.std::__1::__compressed_pair.1644" }
%"class.std::__1::__compressed_pair.1644" = type { %"struct.std::__1::__compressed_pair_elem.1645" }
%"struct.std::__1::__compressed_pair_elem.1645" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.784" }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1651", %"class.blink::Member.493", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1651" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1652" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.150" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1652" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.786" = type { %"class.blink::Member.787" }
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1655", %"class.blink::Member.493", %"class.mojo::AssociatedReceiver.1656" }
%"class.blink::ThreadState::PrefinalizerRegistration.1655" = type { i8 }
%"class.mojo::AssociatedReceiver.1656" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1657" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1657" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.789" }
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1660", %"class.blink::Member.493", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1660" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.27, %"class.std::__1::unique_ptr.150", %"class.base::WeakPtrFactory.1661" }
%"class.base::WeakPtrFactory.1661" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.791" = type { %"class.blink::Member.792" }
%"class.blink::Member.792" = type { %"class.blink::MemberBase.793" }
%"class.blink::MemberBase.793" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1664", %"class.blink::Member.493", %"class.mojo::AssociatedReceiver.1665" }
%"class.blink::ThreadState::PrefinalizerRegistration.1664" = type { i8 }
%"class.mojo::AssociatedReceiver.1665" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1666" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1666" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.794" = type { %"class.blink::MemberBase.795" }
%"class.blink::MemberBase.795" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::HeapHashMap.802"* }
%"class.blink::HeapHashMap.802" = type opaque
%"class.mojo::StructPtr.803" = type { %"class.std::__1::unique_ptr.804" }
%"class.std::__1::unique_ptr.804" = type { %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.807", %"class.mojo::InlinedStructPtr.808" }
%"class.mojo::InlinedStructPtr.807" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.808" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.814" = type { %"class.absl::optional_internal::optional_data.815" }
%"class.absl::optional_internal::optional_data.815" = type { %"class.absl::optional_internal::optional_data_base.816" }
%"class.absl::optional_internal::optional_data_base.816" = type { %"class.absl::optional_internal::optional_data_dtor_base.817" }
%"class.absl::optional_internal::optional_data_dtor_base.817" = type { i8, %union.anon.818 }
%union.anon.818 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.16", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.662"*, %"struct.std::__1::pair.662"*, %"class.std::__1::__compressed_pair.663" }
%"struct.std::__1::pair.662" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"struct.std::__1::pair.662"* }
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.670" = type { %"class.absl::optional_internal::optional_data.671" }
%"class.absl::optional_internal::optional_data.671" = type { %"class.absl::optional_internal::optional_data_base.672" }
%"class.absl::optional_internal::optional_data_base.672" = type { %"class.absl::optional_internal::optional_data_dtor_base.673" }
%"class.absl::optional_internal::optional_data_dtor_base.673" = type { i8, %union.anon.674 }
%union.anon.674 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.675" = type { %"class.absl::optional_internal::optional_data.676" }
%"class.absl::optional_internal::optional_data.676" = type { %"class.absl::optional_internal::optional_data_base.677" }
%"class.absl::optional_internal::optional_data_base.677" = type { %"class.absl::optional_internal::optional_data_dtor_base.678" }
%"class.absl::optional_internal::optional_data_dtor_base.678" = type { i8, %union.anon.679 }
%union.anon.679 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.680" }
%"class.blink::HeapHashSet.680" = type { %"class.WTF::HashSet.683" }
%"class.WTF::HashSet.683" = type { %"class.WTF::HashTable.684" }
%"class.WTF::HashTable.684" = type <{ %"class.blink::WeakMember.686"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.686" = type opaque
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.24" = type { %"class.WTF::VectorBuffer.25" }
%"class.WTF::VectorBuffer.25" = type { %"class.WTF::VectorBufferBase.26" }
%"class.WTF::VectorBufferBase.26" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.200" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.270", i32, i8, [3 x i8], %"class.blink::HeapVector.272", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.280", %"class.blink::Member.282", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.291", %"class.blink::Member.350", %"class.blink::Member.352", i8 }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.215" }
%"class.blink::Supplementable.215" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.216" }
%"class.blink::HeapHashMap.216" = type { %"class.WTF::HashMap.219" }
%"class.WTF::HashMap.219" = type { %"class.WTF::HashTable.220" }
%"class.WTF::HashTable.220" = type <{ %"struct.WTF::KeyValuePair.222"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.222" = type { i8*, %"class.blink::Member.1596" }
%"class.blink::Member.1596" = type { %"class.blink::MemberBase.1597" }
%"class.blink::MemberBase.1597" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1598" }
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.223, %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258", %"class.blink::Member.264", i32, [4 x i8], %"class.WTF::HashSet.266", i32, i32 }
%class.scoped_refptr.223 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.225", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.230 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.224" }
%"class.base::RefCounted.224" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.225" = type { %"class.absl::optional_internal::optional_data.226" }
%"class.absl::optional_internal::optional_data.226" = type { %"class.absl::optional_internal::optional_data_base.227" }
%"class.absl::optional_internal::optional_data_base.227" = type { %"class.absl::optional_internal::optional_data_dtor_base.228" }
%"class.absl::optional_internal::optional_data_dtor_base.228" = type { i8, %union.anon.229 }
%union.anon.229 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.230 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.234", %"class.std::__1::map.245", %"class.std::__1::map.254"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.225" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.234" = type { %"class.std::__1::__tree.235" }
%"class.std::__1::__tree.235" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.236", %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.245" = type { %"class.std::__1::__tree.246" }
%"class.std::__1::__tree.246" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.254" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.270", i32, i8, [3 x i8], %"class.blink::HeapVector.272", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.280", %"class.blink::Member.282", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.291", %"class.blink::Member.350", %"class.blink::Member.352", i8, [7 x i8] }>
%"class.WTF::HashSet.266" = type { %"class.WTF::HashTable.267" }
%"class.WTF::HashTable.267" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.272" = type { %"class.WTF::Vector.275" }
%"class.WTF::Vector.275" = type { %"class.WTF::VectorBuffer.276" }
%"class.WTF::VectorBuffer.276" = type { %"class.WTF::VectorBufferBase.277" }
%"class.WTF::VectorBufferBase.277" = type { %"class.blink::Member.278"*, i32, i32 }
%"class.blink::Member.278" = type opaque
%"class.blink::Member.280" = type { %"class.blink::MemberBase.281" }
%"class.blink::MemberBase.281" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.284", i32, i32 }
%"class.blink::HeapHashMap.284" = type { %"class.WTF::HashMap.287" }
%"class.WTF::HashMap.287" = type { %"class.WTF::HashTable.288" }
%"class.WTF::HashTable.288" = type <{ %"struct.WTF::KeyValuePair.290"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.290" = type opaque
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.294" }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.297" }
%"class.WTF::Vector.297" = type { %"class.WTF::VectorBuffer.298" }
%"class.WTF::VectorBuffer.298" = type { %"class.WTF::VectorBufferBase.299" }
%"class.WTF::VectorBufferBase.299" = type { %"class.mojo::StructPtr.300"*, i32, i32 }
%"class.mojo::StructPtr.300" = type { %"class.std::__1::unique_ptr.301" }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.304", %"class.WTF::HashMap.311", %"class.WTF::HashMap.316", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.321", i32, %"class.mojo::StructPtr.326", %"class.WTF::Vector.321" }
%"class.mojo::StructPtr.304" = type { %"class.std::__1::unique_ptr.305" }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.311" = type { %"class.WTF::HashTable.312" }
%"class.WTF::HashTable.312" = type <{ %"struct.WTF::KeyValuePair.315"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.315" = type opaque
%"class.WTF::HashMap.316" = type { %"class.WTF::HashTable.317" }
%"class.WTF::HashTable.317" = type <{ %"struct.WTF::KeyValuePair.320"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.320" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.326" = type { %"class.std::__1::unique_ptr.327" }
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.321", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.341" }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.352" = type { %"class.blink::MemberBase.353" }
%"class.blink::MemberBase.353" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Supplementable.354" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.355" }
%"class.blink::HeapHashMap.355" = type { %"class.WTF::HashMap.358" }
%"class.WTF::HashMap.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"struct.WTF::KeyValuePair.361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.361" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1112", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1071", %"class.WTF::Vector.1071", i8, i32, %"class.blink::Member.2", %"class.blink::Member.264", %"class.blink::Member.1120", %"class.blink::Member.1122", %"class.blink::Member.1124", %"class.blink::Member.1126", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1128", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1134", %"class.blink::Member.1136", %"class.blink::Member.615", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1138", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1338", %"class.blink::HeapVector.591", %"class.blink::Member.545", %"class.blink::Member.512", %"class.blink::Member.545", %"class.blink::Member.545", %"class.blink::Member.545", %"class.blink::UserActionElementSet", %"class.blink::Member.1347", double, double, i64, i64, %"class.blink::HeapHashSet.1349", %"class.blink::HeapHashSet.1356", i16, i8, %"class.blink::Member.1363", %"class.blink::Member.1365", %"class.blink::Member.1367", %"class.blink::Member.1369", %"class.blink::TextLinkColors", %"class.blink::Member.1371", i8, [7 x i8], %"class.blink::HeapHashMap.1373", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.545", %"class.WTF::Vector.1380", %"class.blink::Member.1385", %"class.blink::Member.1387", i8, %"class.blink::Member.545", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1398", %"class.blink::HeapVector.1400", %"class.std::__1::unique_ptr.1408", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1414", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1427", %"class.WTF::Vector.1429", i8, i8, %"class.std::__1::unique_ptr.1434", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.591", %"class.blink::HeapVector.1440", i32, i8, %"class.blink::HeapTaskRunnerTimer.1338", %"class.blink::HeapTaskRunnerTimer.1338", %"class.blink::DocumentTiming", %"class.blink::Member.1448", i8, i32, %"class.blink::Member.1450", %"class.blink::Member.1452", %"class.blink::Member.1454", %"class.blink::HeapTaskRunnerTimer.1338", %"class.blink::Member.1456", %"class.WTF::HashMap.1458", %"class.blink::Member.1463", %"class.blink::Member.1465", %"class.blink::Member.1467", %"class.blink::Member.1469", %"class.blink::Member.364", %"class.blink::Member.364", %"class.blink::HeapTaskRunnerTimer.1338", %"class.blink::HeapHashSet.1471", i8, i32, %"class.blink::Member.1478", %"class.blink::Member.1480", i32, %"class.blink::Member.1482", %"class.blink::Member.1484", %"class.blink::Member.1486", %"class.std::__1::unique_ptr.1488", i64, %"class.std::__1::unique_ptr.1494", i32, i32, %"class.blink::Member.1500", %"class.blink::Member.1502", %"class.blink::Member.1504", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1506", %"class.WTF::Vector.523", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1508", %"class.blink::Member.1515", %"class.std::__1::unique_ptr.1517", %"class.blink::Member.1523", i8, i8, %"class.WTF::String", %"class.blink::Member.1525", i8, [7 x i8], %"class.blink::HeapHashMap.1527", %"class.blink::HeapObserverSet.1534", %"class.blink::Member.1542", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1544", i32, i8, i8, %"class.blink::WeakMember.1546", %"class.blink::Member.1547" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.497", %"class.blink::Member.497" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.497", %"class.blink::Member.499", %"class.blink::Member.497", %"class.blink::Member.497", %"class.blink::Member.501" }
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.574", %"class.blink::Member.364", %"class.blink::Member.499", %"class.blink::Member.576", %"class.blink::Member.576", %"class.blink::Member.598", %"class.blink::Member.600", %"class.blink::Member.602", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.607", %"class.blink::HeapVector.609" }
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.580" }
%"class.blink::HeapHashMap.580" = type { %"class.WTF::HashMap.583" }
%"class.WTF::HashMap.583" = type { %"class.WTF::HashTable.584" }
%"class.WTF::HashTable.584" = type <{ %"struct.WTF::KeyValuePair.586"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.586" = type { %"class.WTF::AtomicString", %"class.blink::Member.587" }
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.545", i32, %"class.blink::HeapVector.591" }
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.604" }
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::HeapHashMap.606"* }
%"class.blink::HeapHashMap.606" = type opaque
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.609" = type { %"class.WTF::Vector.612" }
%"class.WTF::Vector.612" = type { %"class.WTF::VectorBuffer.613" }
%"class.WTF::VectorBuffer.613" = type { %"class.WTF::VectorBufferBase.614" }
%"class.WTF::VectorBufferBase.614" = type { %"class.blink::Member.615"*, i32, i32 }
%"class.blink::Supplementable.1112" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1113" }
%"class.blink::HeapHashMap.1113" = type { %"class.WTF::HashMap.1116" }
%"class.WTF::HashMap.1116" = type { %"class.WTF::HashTable.1117" }
%"class.WTF::HashTable.1117" = type <{ %"struct.WTF::KeyValuePair.1119"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1119" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1120" = type { %"class.blink::MemberBase.1121" }
%"class.blink::MemberBase.1121" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1122" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1124" = type { %"class.blink::MemberBase.1125" }
%"class.blink::MemberBase.1125" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1128" = type { %"class.std::__1::__compressed_pair.1129" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1134" = type { %"class.blink::MemberBase.1135" }
%"class.blink::MemberBase.1135" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.617", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.619, %"class.WTF::Vector.620", %"class.WTF::Vector.620", %"class.blink::Member.497", %"class.blink::Member.625", %"class.blink::HeapHashSet.629", %"class.blink::Member.364", %"class.WTF::HashSet.636", %"class.WTF::TextPosition", %"class.blink::Member.640", %"class.blink::HeapVector.642", %"class.blink::Member.649" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.617" = type { %"class.blink::MemberBase.618" }
%"class.blink::MemberBase.618" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.619 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.620" = type { %"class.WTF::VectorBuffer.621" }
%"class.WTF::VectorBuffer.621" = type { %"class.WTF::VectorBufferBase.622" }
%"class.WTF::VectorBufferBase.622" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.627" }
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.629" = type { %"class.WTF::HashSet.632" }
%"class.WTF::HashSet.632" = type { %"class.WTF::HashTable.633" }
%"class.WTF::HashTable.633" = type <{ %"class.blink::WeakMember.635"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.635" = type { %"class.blink::MemberBase.500" }
%"class.WTF::HashSet.636" = type { %"class.WTF::HashTable.637" }
%"class.WTF::HashTable.637" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.642" = type { %"class.WTF::Vector.645" }
%"class.WTF::Vector.645" = type { %"class.WTF::VectorBuffer.646" }
%"class.WTF::VectorBuffer.646" = type { %"class.WTF::VectorBufferBase.647" }
%"class.WTF::VectorBufferBase.647" = type { %"class.blink::Member.625"*, i32, i32 }
%"class.blink::Member.649" = type { %"class.blink::MemberBase.650" }
%"class.blink::MemberBase.650" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1138" = type { %"class.WTF::VectorBuffer.1139" }
%"class.WTF::VectorBuffer.1139" = type { %"class.WTF::VectorBufferBase.1140" }
%"class.WTF::VectorBufferBase.1140" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1141 }
%class.scoped_refptr.1141 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1142", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.1142" = type { %"class.base::RefCounted.1143" }
%"class.base::RefCounted.1143" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1146" }
%"class.blink::HeapHashMap.1146" = type { %"class.WTF::HashMap.1149" }
%"class.WTF::HashMap.1149" = type { %"class.WTF::HashTable.1150" }
%"class.WTF::HashTable.1150" = type <{ %"struct.WTF::KeyValuePair.1152"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1152" = type { %"class.blink::WeakMember.1153", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1340" }
%"class.blink::HeapHashMap.1340" = type { %"class.WTF::HashMap.1343" }
%"class.WTF::HashMap.1343" = type { %"class.WTF::HashTable.1344" }
%"class.WTF::HashTable.1344" = type <{ %"struct.WTF::KeyValuePair.1346"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1346" = type opaque
%"class.blink::Member.1347" = type { %"class.blink::MemberBase.1348" }
%"class.blink::MemberBase.1348" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1349" = type { %"class.WTF::HashSet.1352" }
%"class.WTF::HashSet.1352" = type { %"class.WTF::HashTable.1353" }
%"class.WTF::HashTable.1353" = type <{ %"class.blink::WeakMember.1355"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1355" = type opaque
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::Member.1363" = type { %"class.blink::MemberBase.1364" }
%"class.blink::MemberBase.1364" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1365" = type { %"class.blink::MemberBase.1366" }
%"class.blink::MemberBase.1366" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1367" = type { %"class.blink::MemberBase.1368" }
%"class.blink::MemberBase.1368" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.499", %"class.blink::HeapVector.609" }
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1371" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1373" = type { %"class.WTF::HashMap.1376" }
%"class.WTF::HashMap.1376" = type { %"class.WTF::HashTable.1377" }
%"class.WTF::HashTable.1377" = type <{ %"struct.WTF::KeyValuePair.1379"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1379" = type opaque
%"class.WTF::Vector.1380" = type { %"class.WTF::VectorBuffer.1381" }
%"class.WTF::VectorBuffer.1381" = type { %"class.WTF::VectorBufferBase.1382" }
%"class.WTF::VectorBufferBase.1382" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::HeapHashMap.1391", %"class.blink::DocumentMarker::MarkerTypes", %"class.blink::Member.364" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1339" }
%"class.blink::WeakMember.1339" = type { %"class.blink::MemberBase.365" }
%"class.blink::HeapHashMap.1391" = type { %"class.WTF::HashMap.1394" }
%"class.WTF::HashMap.1394" = type { %"class.WTF::HashTable.1395" }
%"class.WTF::HashTable.1395" = type <{ %"struct.WTF::KeyValuePair.1397"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1397" = type opaque
%"class.blink::DocumentMarker::MarkerTypes" = type { i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1400" = type { %"class.WTF::Vector.1403" }
%"class.WTF::Vector.1403" = type { %"class.WTF::VectorBuffer.1404" }
%"class.WTF::VectorBuffer.1404" = type { %"class.WTF::VectorBufferBase.1405" }
%"class.WTF::VectorBufferBase.1405" = type { %"class.blink::Member.1406"*, i32, i32 }
%"class.blink::Member.1406" = type opaque
%"class.std::__1::unique_ptr.1408" = type { %"class.std::__1::__compressed_pair.1409" }
%"class.std::__1::__compressed_pair.1409" = type { %"struct.std::__1::__compressed_pair_elem.1410" }
%"struct.std::__1::__compressed_pair_elem.1410" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1414" = type { %"class.WTF::HashSet.1417" }
%"class.WTF::HashSet.1417" = type { %"class.WTF::HashTable.1418" }
%"class.WTF::HashTable.1418" = type <{ %"class.blink::WeakMember.1420"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1420" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1421", i32, [4 x i8] }>
%"class.WTF::Vector.1421" = type { %"class.WTF::VectorBuffer.1422" }
%"class.WTF::VectorBuffer.1422" = type { %"class.WTF::VectorBufferBase.1423" }
%"class.WTF::VectorBufferBase.1423" = type { %"struct.std::__1::pair.1424"*, i32, i32 }
%"struct.std::__1::pair.1424" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1429" = type { %"class.WTF::VectorBuffer.1430" }
%"class.WTF::VectorBuffer.1430" = type { %"class.WTF::VectorBufferBase.1431" }
%"class.WTF::VectorBufferBase.1431" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1434" = type { %"class.std::__1::__compressed_pair.1435" }
%"class.std::__1::__compressed_pair.1435" = type { %"struct.std::__1::__compressed_pair_elem.1436" }
%"struct.std::__1::__compressed_pair_elem.1436" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.591" = type { %"class.WTF::Vector.594" }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { %"class.blink::Member.545"*, i32, i32 }
%"class.blink::HeapVector.1440" = type { %"class.WTF::Vector.1443" }
%"class.WTF::Vector.1443" = type { %"class.WTF::VectorBuffer.1444" }
%"class.WTF::VectorBuffer.1444" = type { %"class.WTF::VectorBufferBase.1445" }
%"class.WTF::VectorBufferBase.1445" = type { %"class.blink::Member.1446"*, i32, i32 }
%"class.blink::Member.1446" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.364" }
%"class.blink::Member.1448" = type { %"class.blink::MemberBase.1449" }
%"class.blink::MemberBase.1449" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1450" = type { %"class.blink::MemberBase.1451" }
%"class.blink::MemberBase.1451" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1452" = type { %"class.blink::MemberBase.1453" }
%"class.blink::MemberBase.1453" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1454" = type { %"class.blink::MemberBase.1455" }
%"class.blink::MemberBase.1455" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1456" = type { %"class.blink::MemberBase.1457" }
%"class.blink::MemberBase.1457" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1458" = type { %"class.WTF::HashTable.1459" }
%"class.WTF::HashTable.1459" = type <{ %"struct.WTF::KeyValuePair.1462"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1462" = type opaque
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1469" = type { %"class.blink::MemberBase.1470" }
%"class.blink::MemberBase.1470" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1338" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1339", { i64, i64 } }
%"class.blink::HeapHashSet.1471" = type { %"class.WTF::HashSet.1474" }
%"class.WTF::HashSet.1474" = type { %"class.WTF::HashTable.1475" }
%"class.WTF::HashTable.1475" = type <{ %"class.blink::Member.1477"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1477" = type opaque
%"class.blink::Member.1478" = type { %"class.blink::MemberBase.1479" }
%"class.blink::MemberBase.1479" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1480" = type { %"class.blink::MemberBase.1481" }
%"class.blink::MemberBase.1481" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1482" = type { %"class.blink::MemberBase.1483" }
%"class.blink::MemberBase.1483" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1484" = type { %"class.blink::MemberBase.1485" }
%"class.blink::MemberBase.1485" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1486" = type { %"class.blink::MemberBase.1487" }
%"class.blink::MemberBase.1487" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1488" = type { %"class.std::__1::__compressed_pair.1489" }
%"class.std::__1::__compressed_pair.1489" = type { %"struct.std::__1::__compressed_pair_elem.1490" }
%"struct.std::__1::__compressed_pair_elem.1490" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1494" = type { %"class.std::__1::__compressed_pair.1495" }
%"class.std::__1::__compressed_pair.1495" = type { %"struct.std::__1::__compressed_pair_elem.1496" }
%"struct.std::__1::__compressed_pair_elem.1496" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1502" = type { %"class.blink::MemberBase.1503" }
%"class.blink::MemberBase.1503" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1504" = type { %"class.blink::MemberBase.1505" }
%"class.blink::MemberBase.1505" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1506" = type { %"class.blink::MemberBase.1507" }
%"class.blink::MemberBase.1507" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1508" = type { %"class.WTF::HashMap.1511" }
%"class.WTF::HashMap.1511" = type { %"class.WTF::HashTable.1512" }
%"class.WTF::HashTable.1512" = type <{ %"struct.WTF::KeyValuePair.1514"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1514" = type opaque
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1517" = type { %"class.std::__1::__compressed_pair.1518" }
%"class.std::__1::__compressed_pair.1518" = type { %"struct.std::__1::__compressed_pair_elem.1519" }
%"struct.std::__1::__compressed_pair_elem.1519" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1525" = type { %"class.blink::MemberBase.1526" }
%"class.blink::MemberBase.1526" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1527" = type { %"class.WTF::HashMap.1530" }
%"class.WTF::HashMap.1530" = type { %"class.WTF::HashTable.1531" }
%"class.WTF::HashTable.1531" = type <{ %"struct.WTF::KeyValuePair.1533"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1533" = type opaque
%"class.blink::HeapObserverSet.1534" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1535" }
%"class.blink::HeapHashSet.1535" = type { %"class.WTF::HashSet.1538" }
%"class.WTF::HashSet.1538" = type { %"class.WTF::HashTable.1539" }
%"class.WTF::HashTable.1539" = type <{ %"class.blink::WeakMember.1541"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1541" = type opaque
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1544" = type { %"class.blink::MemberBase.1545" }
%"class.blink::MemberBase.1545" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.364", %"class.blink::HeapHashSet.1551", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1558", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1551" = type { %"class.WTF::HashSet.1554" }
%"class.WTF::HashSet.1554" = type { %"class.WTF::HashTable.1555" }
%"class.WTF::HashTable.1555" = type <{ %"class.blink::Member.1557"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1557" = type opaque
%"class.blink::HeapTaskRunnerTimer.1558" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1559", { i64, i64 } }
%"class.blink::WeakMember.1559" = type { %"class.blink::MemberBase.1545" }
%"class.blink::WeakMember.1546" = type { %"class.blink::MemberBase.498" }
%"class.blink::Member.1547" = type { %"class.blink::MemberBase.1548" }
%"class.blink::MemberBase.1548" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.321" = type { %"class.WTF::VectorBuffer.322" }
%"class.WTF::VectorBuffer.322" = type { %"class.WTF::VectorBufferBase.323" }
%"class.WTF::VectorBufferBase.323" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.386 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.388", i64, %"class.WTF::Vector.392", %"class.WTF::Vector.397", %"class.WTF::Vector.403", %"class.WTF::Vector.421", %class.scoped_refptr.223, %"class.WTF::HashMap.427", %"class.WTF::Vector.432", %"class.WTF::Vector.392", %"class.WTF::Vector.438", %"class.WTF::HashMap.443", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.387" }
%"class.base::RefCountedThreadSafe.387" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { i8* }
%"class.WTF::Vector.397" = type { %"class.WTF::VectorBuffer.398" }
%"class.WTF::VectorBuffer.398" = type { %"class.WTF::VectorBufferBase.399", [8 x i8] }
%"class.WTF::VectorBufferBase.399" = type { %class.scoped_refptr.400*, i32, i32 }
%class.scoped_refptr.400 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.403" = type { %"class.WTF::VectorBuffer.404" }
%"class.WTF::VectorBuffer.404" = type { %"class.WTF::VectorBufferBase.405" }
%"class.WTF::VectorBufferBase.405" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.407", %"class.std::__1::unique_ptr.413" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.406 }
%class.scoped_refptr.406 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.421" = type { %"class.WTF::VectorBuffer.422" }
%"class.WTF::VectorBuffer.422" = type { %"class.WTF::VectorBufferBase.423" }
%"class.WTF::VectorBufferBase.423" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.424", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.424" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.427" = type { %"class.WTF::HashTable.428" }
%"class.WTF::HashTable.428" = type <{ %"struct.WTF::KeyValuePair.431"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.431" = type opaque
%"class.WTF::Vector.432" = type { %"class.WTF::VectorBuffer.433" }
%"class.WTF::VectorBuffer.433" = type { %"class.WTF::VectorBufferBase.434" }
%"class.WTF::VectorBufferBase.434" = type { %"class.mojo::ScopedHandleBase.435"*, i32, i32 }
%"class.mojo::ScopedHandleBase.435" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.392" = type { %"class.WTF::VectorBuffer.393" }
%"class.WTF::VectorBuffer.393" = type { %"class.WTF::VectorBufferBase.394", [16 x i8] }
%"class.WTF::VectorBufferBase.394" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.438" = type { %"class.WTF::VectorBuffer.439" }
%"class.WTF::VectorBuffer.439" = type { %"class.WTF::VectorBufferBase.440" }
%"class.WTF::VectorBufferBase.440" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.443" = type { %"class.WTF::HashTable.444" }
%"class.WTF::HashTable.444" = type <{ %"struct.WTF::KeyValuePair.447"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.447" = type { i8**, %"class.std::__1::unique_ptr.1600" }
%"class.std::__1::unique_ptr.1600" = type { %"class.std::__1::__compressed_pair.1601" }
%"class.std::__1::__compressed_pair.1601" = type { %"struct.std::__1::__compressed_pair_elem.1602" }
%"struct.std::__1::__compressed_pair_elem.1602" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.448" = type { %"class.WTF::HashSet.451" }
%"class.WTF::HashSet.451" = type { %"class.WTF::HashTable.452" }
%"class.WTF::HashTable.452" = type <{ %"class.blink::WeakMember.454"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.454" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.462", %"class.blink::Member.462", %"class.blink::Member.464", %"class.blink::Member.466", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.457" }
%"class.absl::optional.457" = type { %"class.absl::optional_internal::optional_data.458" }
%"class.absl::optional_internal::optional_data.458" = type { %"class.absl::optional_internal::optional_data_base.459" }
%"class.absl::optional_internal::optional_data_base.459" = type { %"class.absl::optional_internal::optional_data_dtor_base.460" }
%"class.absl::optional_internal::optional_data_dtor_base.460" = type { i8, %union.anon.461 }
%union.anon.461 = type { i64 }
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::Event"* }
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.468" = type { %"class.WTF::HashMap.471" }
%"class.WTF::HashMap.471" = type { %"class.WTF::HashTable.472" }
%"class.WTF::HashTable.472" = type <{ %"struct.WTF::KeyValuePair.474"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.474" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.493", %"class.blink::CachedTextInputInfo", %"class.blink::Member.512", %"class.blink::Member.514", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.495", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.505", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.505" = type { %"class.WTF::HashMap.508" }
%"class.WTF::HashMap.508" = type { %"class.WTF::HashTable.509" }
%"class.WTF::HashTable.509" = type <{ %"struct.WTF::KeyValuePair.511"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.511" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.497", i32, i32 }
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.2", %"class.blink::Member", %"class.blink::Member.572" }
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.2", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.568" }
%"class.blink::Member.568" = type { %"class.blink::MemberBase.569" }
%"class.blink::MemberBase.569" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::HeapHashMap.522"* }
%"class.blink::HeapHashMap.522" = type opaque
%"class.WTF::Vector.523" = type { %"class.WTF::VectorBuffer.524" }
%"class.WTF::VectorBuffer.524" = type { %"class.WTF::VectorBufferBase.525" }
%"class.WTF::VectorBufferBase.525" = type { i8*, i32, i32 }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.528" = type { %"class.WTF::HashTable.529" }
%"class.WTF::HashTable.529" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { i64*, i32, i32 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.536 }
%class.scoped_refptr.536 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::SpellCheckRequest"* }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.541" }
%"class.WTF::Deque.541" = type { %"class.WTF::Deque<blink::Member<blink::SpellCheckRequest>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::SpellCheckRequest>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.543" }
%"class.WTF::VectorBuffer.543" = type { %"class.WTF::VectorBufferBase.544" }
%"class.WTF::VectorBufferBase.544" = type { %"class.blink::Member.537"*, i32, i32 }
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::Range"* }
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.550" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.547 }
%class.scoped_refptr.547 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.548", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.548" = type { %"class.base::RefCounted.549" }
%"class.base::RefCounted.549" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.554", %"class.blink::Member.556", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.554" = type { %"class.WTF::SingleThreadedBitField.555" }
%"class.WTF::SingleThreadedBitField.555" = type { i32 }
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.558 }
%class.scoped_refptr.558 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.559", %"class.WTF::AtomicString", %"class.WTF::Vector.561" }
%"class.WTF::RefCounted.559" = type { %"class.base::RefCounted.560" }
%"class.base::RefCounted.560" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.561" = type { %"class.WTF::VectorBuffer.562" }
%"class.WTF::VectorBuffer.562" = type { %"class.WTF::VectorBufferBase.563", [32 x i8] }
%"class.WTF::VectorBufferBase.563" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.364", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.497", %"class.blink::Member.497", i64, i32, [4 x i8] }>
%"class.blink::EphemeralRangeTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate" }
%"class.blink::TextIteratorBehavior" = type { %union.anon.1568 }
%union.anon.1568 = type { i32 }
%"class.blink::TextIteratorBehavior::Builder" = type { %"class.blink::TextIteratorBehavior" }
%"class.WTF::Vector.1570" = type { %"class.WTF::VectorBuffer.1571" }
%"class.WTF::VectorBuffer.1571" = type { %"class.WTF::VectorBufferBase.1572" }
%"class.WTF::VectorBufferBase.1572" = type { %"struct.blink::TextCheckingResult"*, i32, i32 }
%"struct.blink::TextCheckingResult" = type { i32, i32, i32, %"class.WTF::Vector.1573", %"class.WTF::Vector.321" }
%"class.WTF::Vector.1573" = type { %"class.WTF::VectorBuffer.1574" }
%"class.WTF::VectorBuffer.1574" = type { %"class.WTF::VectorBufferBase.1575" }
%"class.WTF::VectorBufferBase.1575" = type { %"struct.blink::GrammarDetail"*, i32, i32 }
%"struct.blink::GrammarDetail" = type { i32, i32, %"class.WTF::Vector.321", %"class.WTF::String" }
%"class.blink::WebTextCheckClient" = type { i32 (...)** }
%"class.blink::WebTextCheckingCompletion" = type { i32 (...)** }
%"class.WTF::DequeIterator" = type { %"class.WTF::DequeIteratorBase.base", [4 x i8] }
%"class.WTF::DequeIteratorBase.base" = type <{ %"class.WTF::Deque.541"*, i32 }>
%"class.blink::Persistent.1594" = type { %"class.blink::PersistentBase.1595" }
%"class.blink::PersistentBase.1595" = type { %"class.blink::SpellCheckRequester"*, %"class.blink::PersistentNodePtr" }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.1594" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.34", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl" = type { %"class.blink::WebTextCheckingCompletion", %"class.blink::WeakPersistent" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.1589" }
%"class.blink::PersistentBase.1589" = type { %"class.blink::SpellCheckRequest"*, %"class.blink::PersistentNodePtr.1590" }
%"class.blink::PersistentNodePtr.1590" = type { %"class.blink::PersistentNode"* }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1702" }
%"class.std::__1::vector.1702" = type { %"class.std::__1::__vector_base.1703" }
%"class.std::__1::__vector_base.1703" = type { %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"*, %"class.std::__1::__compressed_pair.1712" }
%"struct.blink::WebTextCheckingResult" = type { i32, i32, i32, %"class.blink::WebVector.1704" }
%"class.blink::WebVector.1704" = type { %"class.std::__1::vector.1705" }
%"class.std::__1::vector.1705" = type { %"class.std::__1::__vector_base.1706" }
%"class.std::__1::__vector_base.1706" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1707" }
%"class.std::__1::__compressed_pair.1707" = type { %"struct.std::__1::__compressed_pair_elem.1708" }
%"struct.std::__1::__compressed_pair_elem.1708" = type { %"class.blink::WebString"* }
%"class.std::__1::__compressed_pair.1712" = type { %"struct.std::__1::__compressed_pair_elem.1713" }
%"struct.std::__1::__compressed_pair_elem.1713" = type { %"struct.blink::WebTextCheckingResult"* }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink10TraceTraitINS_19SpellCheckRequesterEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_5RangeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17SpellCheckRequestEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17SpellCheckRequestEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17SpellCheckRequestEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17SpellCheckRequestEE7GetNameEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17SpellCheckRequestELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_17SpellCheckRequestELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF6VectorIN5blink18TextCheckingResultELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS1_21WebTextCheckingResultEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink18TextCheckingResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18TextCheckingResultEEEmm = comdat any

$_ZN5blink18TextCheckingResultD2Ev = comdat any

$_ZNK3WTF13DequeIteratorIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEEdeEv = comdat any

$_ZN3WTF5DequeIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEE5eraseEj = comdat any

$_ZN3WTF5DequeIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17SpellCheckRequestEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19SpellCheckRequesterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19SpellCheckRequesterEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink19SpellCheckRequesterEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink19SpellCheckRequesterEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink10TraceTraitINS_14LocalDOMWindowEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17SpellCheckRequestEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17SpellCheckRequestEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [9 x i8] c"DidCheck\00", align 1
@.str.1 = private unnamed_addr constant [82 x i8] c"../../third_party/blink/renderer/core/editing/spellcheck/spell_check_requester.cc\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17SpellCheckRequestEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SpellCheckRequest]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17SpellCheckRequestEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17SpellCheckRequestEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17SpellCheckRequestEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17SpellCheckRequestEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17SpellCheckRequestEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZTVN5blink12_GLOBAL__N_129WebTextCheckingCompletionImplE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"*, %"class.blink::WebVector"*)* @_ZN5blink12_GLOBAL__N_129WebTextCheckingCompletionImpl21DidFinishCheckingTextERKNS_9WebVectorINS_21WebTextCheckingResultEEE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"*)* @_ZN5blink12_GLOBAL__N_129WebTextCheckingCompletionImpl21DidCancelCheckingTextEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"*)* @_ZN5blink12_GLOBAL__N_129WebTextCheckingCompletionImplD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"*)* @_ZN5blink12_GLOBAL__N_129WebTextCheckingCompletionImplD0Ev to i8*)] }, align 8
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18TextCheckingResultEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::TextCheckingResult]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"index_ != deque_->end_\00", align 1
@.str.10 = private unnamed_addr constant [54 x i8] c"../../third_party/blink/renderer/platform/wtf/deque.h\00", align 1
@.str.11 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.13 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17SpellCheckRequestEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [175 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::SpellCheckRequest>, WTF::VectorTraits<blink::Member<blink::SpellCheckRequest> > >]\00", align 1

@_ZN5blink17SpellCheckRequestC1EPNS_5RangeERKN3WTF6StringEi = hidden unnamed_addr alias void (%"class.blink::SpellCheckRequest"*, %"class.blink::Range"*, %"class.WTF::String"*, i32), void (%"class.blink::SpellCheckRequest"*, %"class.blink::Range"*, %"class.WTF::String"*, i32)* @_ZN5blink17SpellCheckRequestC2EPNS_5RangeERKN3WTF6StringEi
@_ZN5blink17SpellCheckRequestD1Ev = hidden unnamed_addr alias void (%"class.blink::SpellCheckRequest"*), void (%"class.blink::SpellCheckRequest"*)* @_ZN5blink17SpellCheckRequestD2Ev
@_ZN5blink19SpellCheckRequesterC1ERNS_14LocalDOMWindowE = hidden unnamed_addr alias void (%"class.blink::SpellCheckRequester"*, %"class.blink::LocalDOMWindow"*), void (%"class.blink::SpellCheckRequester"*, %"class.blink::LocalDOMWindow"*)* @_ZN5blink19SpellCheckRequesterC2ERNS_14LocalDOMWindowE
@_ZN5blink19SpellCheckRequesterD1Ev = hidden unnamed_addr alias void (%"class.blink::SpellCheckRequester"*), void (%"class.blink::SpellCheckRequester"*)* @_ZN5blink19SpellCheckRequesterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SpellCheckRequestC2EPNS_5RangeERKN3WTF6StringEi(%"class.blink::SpellCheckRequest"* nocapture, %"class.blink::Range"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::SpellCheckRequester"* null, %"class.blink::SpellCheckRequester"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::Range"* %1, %"class.blink::Range"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = tail call %"class.blink::Element"* @_ZN5blink19RootEditableElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %8) #10
  %10 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::Element"* %9, %"class.blink::Element"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 3
  store i32 -1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #10
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !2

30:                                               ; preds = %21
  tail call void @llvm.trap() #10
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %4, %16, %31
  %34 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 6
  store i32 %3, i32* %34, align 8
  ret void
}

declare %"class.blink::Element"* @_ZN5blink19RootEditableElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SpellCheckRequestD2Ev(%"class.blink::SpellCheckRequest"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %18

18:                                               ; preds = %1, %14, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17SpellCheckRequest5TraceEPNS_7VisitorE(%"class.blink::SpellCheckRequest"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::SpellCheckRequest"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19SpellCheckRequesterEE5TraceEPNS_7VisitorEPKv) #10
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 1
  %14 = bitcast %"class.blink::Member.512"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5RangeEE5TraceEPNS_7VisitorEPKv) #10
  br label %23

23:                                               ; preds = %12, %17
  %24 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 2
  %25 = bitcast %"class.blink::Member.545"* %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = inttoptr i64 %26 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %34

34:                                               ; preds = %23, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SpellCheckRequest7DisposeEv(%"class.blink::SpellCheckRequest"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::Range"*, %"class.blink::Range"** %2, align 8
  %4 = icmp eq %"class.blink::Range"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink5Range7DisposeEv(%"class.blink::Range"* nonnull %3) #10
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN5blink5Range7DisposeEv(%"class.blink::Range"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SpellCheckRequest"* @_ZN5blink17SpellCheckRequest6CreateERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEi(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32), i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::TextIteratorBehavior", align 4
  %5 = alloca %"class.blink::TextIteratorBehavior::Builder", align 4
  %6 = getelementptr inbounds %"class.blink::EphemeralRangeTemplate", %"class.blink::EphemeralRangeTemplate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %83, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::EphemeralRangeTemplate"* %0) #10
  %11 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %3) #10
  %12 = call %"class.blink::Element"* @_ZN5blink19RootEditableElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %11) #10
  %13 = icmp eq %"class.blink::Element"* %12, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  br i1 %13, label %83, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::TextIteratorBehavior"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #10
  %16 = bitcast %"class.blink::TextIteratorBehavior::Builder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #10
  call void @_ZN5blink20TextIteratorBehavior7BuilderC1Ev(%"class.blink::TextIteratorBehavior::Builder"* nonnull %5) #10
  %17 = call dereferenceable(4) %"class.blink::TextIteratorBehavior::Builder"* @_ZN5blink20TextIteratorBehavior7Builder34SetEmitsObjectReplacementCharacterEb(%"class.blink::TextIteratorBehavior::Builder"* nonnull %5, i1 zeroext true) #10
  call void @_ZN5blink20TextIteratorBehavior7Builder5BuildEv(%"class.blink::TextIteratorBehavior"* nonnull sret %4, %"class.blink::TextIteratorBehavior::Builder"* %17) #10
  %18 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32) %0, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %4) #10
  call void @_ZN5blink20TextIteratorBehavior7BuilderD1Ev(%"class.blink::TextIteratorBehavior::Builder"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #10
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %83, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %69, label %24

24:                                               ; preds = %20
  %25 = call %"class.blink::Range"* @_ZN5blink11CreateRangeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32) %0) #10
  %26 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17SpellCheckRequestEEEPhm(i64 48) #10
  %27 = bitcast i8* %26 to %"class.blink::SpellCheckRequest"*
  %28 = bitcast i8* %26 to %"class.blink::SpellCheckRequester"**
  store %"class.blink::SpellCheckRequester"* null, %"class.blink::SpellCheckRequester"** %28, align 8
  %29 = getelementptr inbounds i8, i8* %26, i64 8
  %30 = bitcast i8* %29 to %"class.blink::Range"**
  store %"class.blink::Range"* %25, %"class.blink::Range"** %30, align 8
  %31 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %25, i64 0, i32 2, i32 0, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = call %"class.blink::Element"* @_ZN5blink19RootEditableElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %32) #10
  %34 = getelementptr inbounds i8, i8* %26, i64 16
  %35 = bitcast i8* %34 to %"class.blink::Element"**
  store %"class.blink::Element"* %33, %"class.blink::Element"** %35, align 8
  %36 = getelementptr inbounds i8, i8* %26, i64 24
  %37 = bitcast i8* %36 to i32*
  store i32 -1, i32* %37, align 8
  %38 = getelementptr inbounds i8, i8* %26, i64 32
  %39 = bitcast i8* %38 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %24
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #10
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %44
  call void @llvm.trap() #10
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %24, %54
  %57 = getelementptr inbounds i8, i8* %26, i64 40
  %58 = bitcast i8* %57 to i32*
  store i32 %1, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %26, i64 -4
  %60 = bitcast i8* %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = or i16 %61, 1
  store atomic i16 %62, i16* %60 release, align 2
  %63 = load %"class.blink::Element"*, %"class.blink::Element"** %35, align 8
  %64 = icmp eq %"class.blink::Element"* %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %56
  %66 = load %"class.blink::Range"*, %"class.blink::Range"** %30, align 8
  %67 = icmp eq %"class.blink::Range"* %66, null
  br i1 %67, label %69, label %68

68:                                               ; preds = %65
  call void @_ZN5blink5Range7DisposeEv(%"class.blink::Range"* nonnull %66) #10
  br label %69

69:                                               ; preds = %56, %65, %68, %20
  %70 = phi %"class.blink::SpellCheckRequest"* [ null, %68 ], [ null, %65 ], [ %27, %56 ], [ null, %20 ]
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %69
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %69
  %80 = phi i32 [ %78, %77 ], [ %76, %69 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #10
  br label %83

83:                                               ; preds = %82, %79, %14, %9, %2
  %84 = phi %"class.blink::SpellCheckRequest"* [ null, %2 ], [ null, %9 ], [ %70, %79 ], [ %70, %82 ], [ null, %14 ]
  ret %"class.blink::SpellCheckRequest"* %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32), %"class.blink::TextIteratorBehavior"* dereferenceable(4)) local_unnamed_addr #1

declare void @_ZN5blink20TextIteratorBehavior7BuilderC1Ev(%"class.blink::TextIteratorBehavior::Builder"*) unnamed_addr #1

declare dereferenceable(4) %"class.blink::TextIteratorBehavior::Builder"* @_ZN5blink20TextIteratorBehavior7Builder34SetEmitsObjectReplacementCharacterEb(%"class.blink::TextIteratorBehavior::Builder"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink20TextIteratorBehavior7Builder5BuildEv(%"class.blink::TextIteratorBehavior"* sret, %"class.blink::TextIteratorBehavior::Builder"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink20TextIteratorBehavior7BuilderD1Ev(%"class.blink::TextIteratorBehavior::Builder"*) unnamed_addr #3

declare %"class.blink::Range"* @_ZN5blink11CreateRangeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17SpellCheckRequest7IsValidEv(%"class.blink::SpellCheckRequest"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::Range"*, %"class.blink::Range"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink5Range11IsConnectedEv(%"class.blink::Range"* %3) #10
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %7, i64 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 256
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %5, %1
  %13 = phi i1 [ false, %1 ], [ %11, %5 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink5Range11IsConnectedEv(%"class.blink::Range"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SpellCheckRequest10DidSucceedERKN3WTF6VectorINS_18TextCheckingResultELj0ENS1_18PartitionAllocatorEEE(%"class.blink::SpellCheckRequest"* nocapture, %"class.WTF::Vector.1570"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::SpellCheckRequester"*, %"class.blink::SpellCheckRequester"** %3, align 8
  %5 = icmp eq %"class.blink::SpellCheckRequester"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::SpellCheckRequest"* %0 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  %8 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN5blink19SpellCheckRequester15DidCheckSucceedEiRKN3WTF6VectorINS_18TextCheckingResultELj0ENS1_18PartitionAllocatorEEE(%"class.blink::SpellCheckRequester"* nonnull %4, i32 %9, %"class.WTF::Vector.1570"* dereferenceable(16) %1)
  br label %10

10:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SpellCheckRequester15DidCheckSucceedEiRKN3WTF6VectorINS_18TextCheckingResultELj0ENS1_18PartitionAllocatorEEE(%"class.blink::SpellCheckRequester"*, i32, %"class.WTF::Vector.1570"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::SpellCheckRequest"*, %"class.blink::SpellCheckRequest"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %5, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %1
  br i1 %8, label %45, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0
  %11 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp ugt i32 %12, %14
  %16 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %16, align 8
  br i1 %15, label %21, label %18

18:                                               ; preds = %9
  %19 = zext i32 %12 to i64
  %20 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %17, i64 %19
  br label %31

21:                                               ; preds = %9
  %22 = zext i32 %14 to i64
  %23 = bitcast %"class.blink::Member.537"* %17 to i8*
  %24 = shl nuw nsw i64 %22, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %23, i64 %24) #10
  %25 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %16, align 8
  %26 = load i32, i32* %11, align 8
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %25, i64 %27
  br label %31

31:                                               ; preds = %18, %21
  %32 = phi i32 [ %14, %18 ], [ %29, %21 ]
  %33 = phi %"class.blink::Member.537"* [ %17, %18 ], [ %25, %21 ]
  %34 = phi %"class.blink::Member.537"* [ %20, %18 ], [ %30, %21 ]
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %33, i64 %35
  %37 = bitcast %"class.blink::Member.537"* %34 to i8*
  %38 = ptrtoint %"class.blink::Member.537"* %36 to i64
  %39 = ptrtoint %"class.blink::Member.537"* %34 to i64
  %40 = sub i64 %38, %39
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  store i32 0, i32* %11, align 8
  store i32 0, i32* %13, align 4
  %41 = bitcast %"class.WTF::Deque.541"* %10 to i8**
  %42 = load i8*, i8** %41, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %42) #10
  %43 = bitcast %"class.WTF::Deque.541"* %10 to i64*
  store atomic i64 0, i64* %43 monotonic, align 8
  %44 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %44, align 8
  br label %50

45:                                               ; preds = %3
  %46 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %47, i64 0, i32 31, i32 0, i32 0
  %49 = load %"class.blink::SpellChecker"*, %"class.blink::SpellChecker"** %48, align 8
  tail call void @_ZN5blink12SpellChecker17MarkAndReplaceForEPNS_17SpellCheckRequestERKN3WTF6VectorINS_18TextCheckingResultELj0ENS3_18PartitionAllocatorEEE(%"class.blink::SpellChecker"* %49, %"class.blink::SpellCheckRequest"* %5, %"class.WTF::Vector.1570"* dereferenceable(16) %2) #10
  tail call void @_ZN5blink19SpellCheckRequester8DidCheckEi(%"class.blink::SpellCheckRequester"* %0, i32 %1)
  br label %50

50:                                               ; preds = %31, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SpellCheckRequest9DidCancelEv(%"class.blink::SpellCheckRequest"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::SpellCheckRequester"*, %"class.blink::SpellCheckRequester"** %2, align 8
  %4 = icmp eq %"class.blink::SpellCheckRequester"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::SpellCheckRequest"* %0 to i64*
  store atomic i64 0, i64* %6 monotonic, align 8
  %7 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  tail call void @_ZN5blink19SpellCheckRequester14DidCheckCancelEi(%"class.blink::SpellCheckRequester"* nonnull %3, i32 %8)
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SpellCheckRequester14DidCheckCancelEi(%"class.blink::SpellCheckRequester"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.blink::SpellCheckRequest"*, %"class.blink::SpellCheckRequest"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %44, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0
  %10 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp ugt i32 %11, %13
  %15 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %15, align 8
  br i1 %14, label %20, label %17

17:                                               ; preds = %8
  %18 = zext i32 %11 to i64
  %19 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %16, i64 %18
  br label %30

20:                                               ; preds = %8
  %21 = zext i32 %13 to i64
  %22 = bitcast %"class.blink::Member.537"* %16 to i8*
  %23 = shl nuw nsw i64 %21, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %22, i64 %23) #10
  %24 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %15, align 8
  %25 = load i32, i32* %10, align 8
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %24, i64 %26
  br label %30

30:                                               ; preds = %17, %20
  %31 = phi i32 [ %13, %17 ], [ %28, %20 ]
  %32 = phi %"class.blink::Member.537"* [ %16, %17 ], [ %24, %20 ]
  %33 = phi %"class.blink::Member.537"* [ %19, %17 ], [ %29, %20 ]
  %34 = zext i32 %31 to i64
  %35 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %32, i64 %34
  %36 = bitcast %"class.blink::Member.537"* %33 to i8*
  %37 = ptrtoint %"class.blink::Member.537"* %35 to i64
  %38 = ptrtoint %"class.blink::Member.537"* %33 to i64
  %39 = sub i64 %37, %38
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %36, i64 %39) #10
  store i32 0, i32* %10, align 8
  store i32 0, i32* %12, align 4
  %40 = bitcast %"class.WTF::Deque.541"* %9 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Deque.541"* %9 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  %43 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %43, align 8
  br label %45

44:                                               ; preds = %2
  tail call void @_ZN5blink19SpellCheckRequester8DidCheckEi(%"class.blink::SpellCheckRequester"* %0, i32 %1)
  br label %45

45:                                               ; preds = %30, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SpellCheckRequest21SetCheckerAndSequenceEPNS_19SpellCheckRequesterEi(%"class.blink::SpellCheckRequest"* nocapture, %"class.blink::SpellCheckRequester"*, i32) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::SpellCheckRequester"* %1 to i64
  %5 = bitcast %"class.blink::SpellCheckRequest"* %0 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::SpellCheckRequester"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #10
  br label %11

11:                                               ; preds = %3, %8
  %12 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %0, i64 0, i32 3
  store i32 %2, i32* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SpellCheckRequesterC2ERNS_14LocalDOMWindowE(%"class.blink::SpellCheckRequester"*, %"class.blink::LocalDOMWindow"* dereferenceable(904)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::LocalDOMWindow"* %1, %"class.blink::LocalDOMWindow"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 2
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 3
  tail call void @_ZN5blink10TaskHandleC1Ev(%"class.blink::TaskHandle"* %6) #10
  %7 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = bitcast %"class.blink::SpellCheckRequest"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false)
  ret void
}

declare void @_ZN5blink10TaskHandleC1Ev(%"class.blink::TaskHandle"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SpellCheckRequesterD2Ev(%"class.blink::SpellCheckRequester"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 3
  tail call void @_ZN5blink10TaskHandleD1Ev(%"class.blink::TaskHandle"* %2) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink10TaskHandleD1Ev(%"class.blink::TaskHandle"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebTextCheckClient"* @_ZNK5blink19SpellCheckRequester20GetTextCheckerClientEv(%"class.blink::SpellCheckRequester"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %3, i64 0, i32 31, i32 0, i32 0
  %5 = load %"class.blink::SpellChecker"*, %"class.blink::SpellChecker"** %4, align 8
  %6 = tail call %"class.blink::WebTextCheckClient"* @_ZNK5blink12SpellChecker20GetTextCheckerClientEv(%"class.blink::SpellChecker"* %5) #10
  ret %"class.blink::WebTextCheckClient"* %6
}

declare %"class.blink::WebTextCheckClient"* @_ZNK5blink12SpellChecker20GetTextCheckerClientEv(%"class.blink::SpellChecker"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SpellCheckRequester32TimerFiredToProcessQueuedRequestEv(%"class.blink::SpellCheckRequester"* nocapture) #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %28, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %8, align 8, !noalias !3
  %10 = zext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %9, i64 %10
  %12 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::SpellCheckRequest"*, %"class.blink::SpellCheckRequest"** %12, align 8, !noalias !3
  %14 = add i32 %3, 1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %9, i64 %15
  %17 = bitcast %"class.blink::Member.537"* %11 to i8*
  %18 = ptrtoint %"class.blink::Member.537"* %16 to i64
  %19 = ptrtoint %"class.blink::Member.537"* %11 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #10, !noalias !3
  %21 = load i32, i32* %2, align 8, !noalias !3
  %22 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8, !noalias !3
  %24 = add i32 %23, -1
  %25 = icmp eq i32 %21, %24
  %26 = add i32 %21, 1
  %27 = select i1 %25, i32 0, i32 %26
  store i32 %27, i32* %2, align 8, !noalias !3
  tail call void @_ZN5blink19SpellCheckRequester13InvokeRequestEPNS_17SpellCheckRequestE(%"class.blink::SpellCheckRequester"* %0, %"class.blink::SpellCheckRequest"* %13)
  br label %28

28:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SpellCheckRequester13InvokeRequestEPNS_17SpellCheckRequestE(%"class.blink::SpellCheckRequester"* nocapture, %"class.blink::SpellCheckRequest"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebString", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 4
  %6 = ptrtoint %"class.blink::SpellCheckRequest"* %1 to i64
  %7 = bitcast %"class.blink::Member.537"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::SpellCheckRequest"* %1 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #10
  br label %13

13:                                               ; preds = %2, %10
  %14 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %15, i64 0, i32 31, i32 0, i32 0
  %17 = load %"class.blink::SpellChecker"*, %"class.blink::SpellChecker"** %16, align 8
  %18 = tail call %"class.blink::WebTextCheckClient"* @_ZNK5blink12SpellChecker20GetTextCheckerClientEv(%"class.blink::SpellChecker"* %17) #10
  %19 = icmp eq %"class.blink::WebTextCheckClient"* %18, null
  br i1 %19, label %101, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.blink::WebString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  %22 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %5, i64 0, i32 0, i32 0
  %24 = load %"class.blink::SpellCheckRequest"*, %"class.blink::SpellCheckRequest"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %24, i64 0, i32 5, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #10
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !2

42:                                               ; preds = %33
  tail call void @llvm.trap() #10
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %45

45:                                               ; preds = %20, %28, %43
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %46, align 8
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %47 = call i8* @_Znwm(i64 24) #11
  %48 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_129WebTextCheckingCompletionImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds i8, i8* %47, i64 8
  %50 = bitcast i8* %49 to %"class.blink::SpellCheckRequest"**
  store %"class.blink::SpellCheckRequest"* %1, %"class.blink::SpellCheckRequest"** %50, align 8
  %51 = getelementptr inbounds i8, i8* %47, i64 16
  %52 = bitcast i8* %51 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %52, align 8
  switch i64 %6, label %53 [
    i64 0, label %79
    i64 -1, label %79
  ]

53:                                               ; preds = %45
  %54 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %55 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %54, i64 0, i32 1
  %56 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %55) #10
  %57 = icmp eq i8* %56, null
  br i1 %57, label %58, label %60, !prof !2

58:                                               ; preds = %53
  %59 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %55, i8* %59) #10
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i8* [ %59, %58 ], [ %56, %53 ]
  %62 = bitcast i8* %61 to %"class.blink::ThreadState"**
  %63 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %63, i64 0, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %66, align 8
  %68 = icmp eq %"class.blink::PersistentNode"* %67, null
  br i1 %68, label %69, label %72, !prof !2

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %65, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %70) #10
  %71 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %66, align 8
  br label %72

72:                                               ; preds = %69, %60
  %73 = phi %"class.blink::PersistentNode"* [ %71, %69 ], [ %67, %60 ]
  %74 = bitcast %"class.blink::PersistentNode"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::PersistentRegion"* %65 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %73, i64 0, i32 0
  store i8* %49, i8** %77, align 8
  %78 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %73, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17SpellCheckRequestELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %78, align 8
  store %"class.blink::PersistentNode"* %73, %"class.blink::PersistentNode"** %52, align 8
  br label %79

79:                                               ; preds = %72, %45, %45
  %80 = bitcast i8* %47 to %"class.blink::WebTextCheckingCompletion"*
  %81 = bitcast %"class.blink::WebTextCheckClient"* %18 to void (%"class.blink::WebTextCheckClient"*, %"class.blink::WebString"*, %"class.blink::WebTextCheckingCompletion"*)***
  %82 = load void (%"class.blink::WebTextCheckClient"*, %"class.blink::WebString"*, %"class.blink::WebTextCheckingCompletion"*)**, void (%"class.blink::WebTextCheckClient"*, %"class.blink::WebString"*, %"class.blink::WebTextCheckingCompletion"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::WebTextCheckClient"*, %"class.blink::WebString"*, %"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckClient"*, %"class.blink::WebString"*, %"class.blink::WebTextCheckingCompletion"*)** %82, i64 2
  %84 = load void (%"class.blink::WebTextCheckClient"*, %"class.blink::WebString"*, %"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckClient"*, %"class.blink::WebString"*, %"class.blink::WebTextCheckingCompletion"*)** %83, align 8
  call void %84(%"class.blink::WebTextCheckClient"* nonnull %18, %"class.blink::WebString"* nonnull dereferenceable(8) %3, %"class.blink::WebTextCheckingCompletion"* nonnull %80) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %3) #10
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #10
  br label %100

100:                                              ; preds = %79, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %101

101:                                              ; preds = %13, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19SpellCheckRequester18RequestCheckingForERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::SpellCheckRequester"*, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN5blink19SpellCheckRequester18RequestCheckingForERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEi(%"class.blink::SpellCheckRequester"* %0, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32) %1, i32 0)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19SpellCheckRequester18RequestCheckingForERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEi(%"class.blink::SpellCheckRequester"*, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32), i32) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::SpellCheckRequest"* @_ZN5blink17SpellCheckRequest6CreateERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEi(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32) %1, i32 %2)
  %5 = icmp eq %"class.blink::SpellCheckRequest"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  %10 = icmp eq i32 %9, -1
  %11 = select i1 %10, i32 0, i32 %9
  store i32 %11, i32* %7, align 8
  %12 = ptrtoint %"class.blink::SpellCheckRequester"* %0 to i64
  %13 = bitcast %"class.blink::SpellCheckRequest"* %4 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %6
  %17 = bitcast %"class.blink::SpellCheckRequester"* %0 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #10
  br label %19

19:                                               ; preds = %6, %16
  %20 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %4, i64 0, i32 3
  store i32 %11, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 3
  %22 = tail call zeroext i1 @_ZNK5blink10TaskHandle8IsActiveEv(%"class.blink::TaskHandle"* %21) #10
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 4, i32 0, i32 0
  %25 = load %"class.blink::SpellCheckRequest"*, %"class.blink::SpellCheckRequest"** %24, align 8
  %26 = icmp eq %"class.blink::SpellCheckRequest"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23, %19
  tail call void @_ZN5blink19SpellCheckRequester14EnqueueRequestEPNS_17SpellCheckRequestE(%"class.blink::SpellCheckRequester"* %0, %"class.blink::SpellCheckRequest"* nonnull %4)
  br label %29

28:                                               ; preds = %23
  tail call void @_ZN5blink19SpellCheckRequester13InvokeRequestEPNS_17SpellCheckRequestE(%"class.blink::SpellCheckRequester"* %0, %"class.blink::SpellCheckRequest"* nonnull %4)
  br label %29

29:                                               ; preds = %27, %28, %3
  %30 = phi i1 [ false, %3 ], [ true, %28 ], [ true, %27 ]
  ret i1 %30
}

declare zeroext i1 @_ZNK5blink10TaskHandle8IsActiveEv(%"class.blink::TaskHandle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SpellCheckRequester14EnqueueRequestEPNS_17SpellCheckRequestE(%"class.blink::SpellCheckRequester"*, %"class.blink::SpellCheckRequest"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::DequeIterator", align 8
  %4 = alloca %"class.WTF::DequeIterator", align 8
  %5 = ptrtoint %"class.blink::SpellCheckRequest"* %1 to i64
  %6 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0
  %7 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %38, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.WTF::DequeIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::Deque.541"* %6, %"class.WTF::Deque.541"** %14, align 8, !alias.scope !6
  %15 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %3, i64 0, i32 0, i32 1
  store i32 %10, i32* %15, align 8, !alias.scope !6
  %16 = icmp eq i32 %10, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  br label %20

20:                                               ; preds = %12, %17
  %21 = phi i32 [ %19, %17 ], [ %10, %12 ]
  %22 = add i32 %21, -1
  store i32 %22, i32* %15, align 8
  %23 = call dereferenceable(8) %"class.blink::Member.537"* @_ZNK3WTF13DequeIteratorIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEEdeEv(%"class.WTF::DequeIterator"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #10
  %24 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::SpellCheckRequest"*, %"class.blink::SpellCheckRequest"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %1, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::Element"*, %"class.blink::Element"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %25, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Element"*, %"class.blink::Element"** %28, align 8
  %30 = icmp eq %"class.blink::Element"* %27, %29
  br i1 %30, label %31, label %38

31:                                               ; preds = %20
  %32 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %1, i64 0, i32 6
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %25, i64 0, i32 6
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %35, 1
  %37 = icmp eq i32 %33, %36
  br i1 %37, label %69, label %38

38:                                               ; preds = %20, %2, %31
  %39 = load i32, i32* %7, align 8, !noalias !9
  %40 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::Deque.541"* %6, %"class.WTF::Deque.541"** %40, align 8, !alias.scope !9
  %41 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %4, i64 0, i32 0, i32 1
  store i32 %39, i32* %41, align 8, !alias.scope !9
  %42 = load i32, i32* %9, align 4, !noalias !12
  %43 = icmp eq i32 %39, %42
  br i1 %43, label %71, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %1, i64 0, i32 2, i32 0, i32 0
  br label %46

46:                                               ; preds = %55, %44
  %47 = call dereferenceable(8) %"class.blink::Member.537"* @_ZNK3WTF13DequeIteratorIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEEdeEv(%"class.WTF::DequeIterator"* nonnull %4) #10, !noalias !15
  %48 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.blink::SpellCheckRequest"*, %"class.blink::SpellCheckRequest"** %48, align 8, !noalias !15
  %50 = load %"class.blink::Element"*, %"class.blink::Element"** %45, align 8, !noalias !15
  %51 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %49, i64 0, i32 2, i32 0, i32 0
  %52 = load %"class.blink::Element"*, %"class.blink::Element"** %51, align 8, !noalias !15
  %53 = icmp eq %"class.blink::Element"* %50, %52
  %54 = load i32, i32* %41, align 8, !noalias !15
  br i1 %53, label %64, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::Deque.541"*, %"class.WTF::Deque.541"** %40, align 8, !noalias !15
  %57 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %56, i64 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8, !noalias !15
  %59 = add i32 %58, -1
  %60 = icmp eq i32 %54, %59
  %61 = add i32 %54, 1
  %62 = select i1 %60, i32 0, i32 %61
  store i32 %62, i32* %41, align 8, !noalias !15
  %63 = icmp eq i32 %62, %42
  br i1 %63, label %64, label %46

64:                                               ; preds = %46, %55
  %65 = phi i32 [ %54, %46 ], [ %42, %55 ]
  %66 = load i32, i32* %9, align 4
  %67 = icmp eq i32 %65, %66
  br i1 %67, label %71, label %68

68:                                               ; preds = %64
  call void @_ZN3WTF5DequeIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEE5eraseEj(%"class.WTF::Deque.541"* %6, i32 %65) #10
  br label %69

69:                                               ; preds = %31, %68
  %70 = load i32, i32* %9, align 4
  br label %71

71:                                               ; preds = %38, %64, %69
  %72 = phi i32 [ %70, %69 ], [ %66, %64 ], [ %39, %38 ]
  %73 = load i32, i32* %7, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %71
  %76 = add i32 %72, 1
  %77 = icmp eq i32 %76, %73
  br i1 %77, label %87, label %89

78:                                               ; preds = %71
  %79 = icmp eq i32 %72, 0
  %80 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  br i1 %79, label %85, label %82

82:                                               ; preds = %78
  %83 = add i32 %81, -1
  %84 = icmp eq i32 %72, %83
  br i1 %84, label %87, label %89

85:                                               ; preds = %78
  %86 = icmp eq i32 %81, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %85, %82, %75
  call void @_ZN3WTF5DequeIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.541"* %6) #10
  %88 = load i32, i32* %9, align 4
  br label %89

89:                                               ; preds = %87, %85, %82, %75
  %90 = phi i32 [ %72, %75 ], [ %72, %82 ], [ 0, %85 ], [ %88, %87 ]
  %91 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %91, align 8
  %93 = zext i32 %90 to i64
  %94 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %92, i64 %93
  %95 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, -1
  %98 = icmp eq i32 %90, %97
  %99 = add i32 %90, 1
  %100 = select i1 %98, i32 0, i32 %99
  store i32 %100, i32* %9, align 4
  %101 = bitcast %"class.blink::Member.537"* %94 to i64*
  store atomic i64 %5, i64* %101 monotonic, align 8
  %102 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %89
  %105 = bitcast %"class.blink::SpellCheckRequest"* %1 to i8*
  %106 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #10
  br label %107

107:                                              ; preds = %89, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SpellCheckRequester11CancelCheckEv(%"class.blink::SpellCheckRequester"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::SpellCheckRequest"*, %"class.blink::SpellCheckRequest"** %2, align 8
  %4 = icmp eq %"class.blink::SpellCheckRequest"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::SpellCheckRequester"*, %"class.blink::SpellCheckRequester"** %6, align 8
  %8 = icmp eq %"class.blink::SpellCheckRequester"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::SpellCheckRequest"* %3 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %3, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  tail call void @_ZN5blink19SpellCheckRequester14DidCheckCancelEi(%"class.blink::SpellCheckRequester"* nonnull %7, i32 %12) #10
  br label %13

13:                                               ; preds = %1, %9, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SpellCheckRequester10DeactivateEv(%"class.blink::SpellCheckRequester"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 3
  tail call void @_ZN5blink10TaskHandle6CancelEv(%"class.blink::TaskHandle"* %2) #10
  %3 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0
  %4 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ugt i32 %5, %7
  %9 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %9, align 8
  br i1 %8, label %14, label %11

11:                                               ; preds = %1
  %12 = zext i32 %5 to i64
  %13 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %10, i64 %12
  br label %24

14:                                               ; preds = %1
  %15 = zext i32 %7 to i64
  %16 = bitcast %"class.blink::Member.537"* %10 to i8*
  %17 = shl nuw nsw i64 %15, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %16, i64 %17) #10
  %18 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %9, align 8
  %19 = load i32, i32* %4, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %18, i64 %20
  br label %24

24:                                               ; preds = %11, %14
  %25 = phi i32 [ %7, %11 ], [ %22, %14 ]
  %26 = phi %"class.blink::Member.537"* [ %10, %11 ], [ %18, %14 ]
  %27 = phi %"class.blink::Member.537"* [ %13, %11 ], [ %23, %14 ]
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %26, i64 %28
  %30 = bitcast %"class.blink::Member.537"* %27 to i8*
  %31 = ptrtoint %"class.blink::Member.537"* %29 to i64
  %32 = ptrtoint %"class.blink::Member.537"* %27 to i64
  %33 = sub i64 %31, %32
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %30, i64 %33) #10
  store i32 0, i32* %4, align 8
  store i32 0, i32* %6, align 4
  %34 = bitcast %"class.WTF::Deque.541"* %3 to i8**
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %35) #10
  %36 = bitcast %"class.WTF::Deque.541"* %3 to i64*
  store atomic i64 0, i64* %36 monotonic, align 8
  %37 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 4, i32 0, i32 0
  %39 = load %"class.blink::SpellCheckRequest"*, %"class.blink::SpellCheckRequest"** %38, align 8
  %40 = icmp eq %"class.blink::SpellCheckRequest"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %24
  %42 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %39, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::SpellCheckRequester"*, %"class.blink::SpellCheckRequester"** %42, align 8
  %44 = icmp eq %"class.blink::SpellCheckRequester"* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.blink::SpellCheckRequest"* %39 to i64*
  store atomic i64 0, i64* %46 monotonic, align 8
  %47 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %39, i64 0, i32 3
  %48 = load i32, i32* %47, align 8
  tail call void @_ZN5blink19SpellCheckRequester14DidCheckCancelEi(%"class.blink::SpellCheckRequester"* nonnull %43, i32 %48) #10
  br label %49

49:                                               ; preds = %24, %41, %45
  ret void
}

declare void @_ZN5blink10TaskHandle6CancelEv(%"class.blink::TaskHandle"*) local_unnamed_addr #1

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SpellCheckRequester22ClearProcessingRequestEv(%"class.blink::SpellCheckRequester"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 4, i32 0
  %3 = getelementptr inbounds %"class.blink::MemberBase.538", %"class.blink::MemberBase.538"* %2, i64 0, i32 0
  %4 = load %"class.blink::SpellCheckRequest"*, %"class.blink::SpellCheckRequest"** %3, align 8
  %5 = icmp eq %"class.blink::SpellCheckRequest"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %4, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::Range"*, %"class.blink::Range"** %7, align 8
  %9 = icmp eq %"class.blink::Range"* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZN5blink5Range7DisposeEv(%"class.blink::Range"* nonnull %8) #10
  br label %11

11:                                               ; preds = %6, %10
  %12 = bitcast %"class.blink::MemberBase.538"* %2 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  br label %13

13:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19SpellCheckRequester26EnsureValidRequestQueueForEi(%"class.blink::SpellCheckRequester"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.blink::SpellCheckRequest"*, %"class.blink::SpellCheckRequest"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %44, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0
  %10 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp ugt i32 %11, %13
  %15 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %15, align 8
  br i1 %14, label %20, label %17

17:                                               ; preds = %8
  %18 = zext i32 %11 to i64
  %19 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %16, i64 %18
  br label %30

20:                                               ; preds = %8
  %21 = zext i32 %13 to i64
  %22 = bitcast %"class.blink::Member.537"* %16 to i8*
  %23 = shl nuw nsw i64 %21, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %22, i64 %23) #10
  %24 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %15, align 8
  %25 = load i32, i32* %10, align 8
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %24, i64 %26
  br label %30

30:                                               ; preds = %17, %20
  %31 = phi i32 [ %13, %17 ], [ %28, %20 ]
  %32 = phi %"class.blink::Member.537"* [ %16, %17 ], [ %24, %20 ]
  %33 = phi %"class.blink::Member.537"* [ %19, %17 ], [ %29, %20 ]
  %34 = zext i32 %31 to i64
  %35 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %32, i64 %34
  %36 = bitcast %"class.blink::Member.537"* %33 to i8*
  %37 = ptrtoint %"class.blink::Member.537"* %35 to i64
  %38 = ptrtoint %"class.blink::Member.537"* %33 to i64
  %39 = sub i64 %37, %38
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %36, i64 %39) #10
  store i32 0, i32* %10, align 8
  store i32 0, i32* %12, align 4
  %40 = bitcast %"class.WTF::Deque.541"* %9 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Deque.541"* %9 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  %43 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %43, align 8
  br label %44

44:                                               ; preds = %2, %30
  %45 = phi i1 [ false, %30 ], [ true, %2 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19SpellCheckRequester8DidCheckEi(%"class.blink::SpellCheckRequester"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::TaskHandle", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to { i64, i64 }*
  %8 = alloca %"class.blink::Persistent.1594", align 8
  %9 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 2
  store i32 %1, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 4, i32 0
  %11 = getelementptr inbounds %"class.blink::MemberBase.538", %"class.blink::MemberBase.538"* %10, i64 0, i32 0
  %12 = load %"class.blink::SpellCheckRequest"*, %"class.blink::SpellCheckRequest"** %11, align 8
  %13 = icmp eq %"class.blink::SpellCheckRequest"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %12, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::Range"*, %"class.blink::Range"** %15, align 8
  %17 = icmp eq %"class.blink::Range"* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @_ZN5blink5Range7DisposeEv(%"class.blink::Range"* nonnull %16) #10
  br label %19

19:                                               ; preds = %18, %14
  %20 = bitcast %"class.blink::MemberBase.538"* %10 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  br label %21

21:                                               ; preds = %2, %19
  %22 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %105, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.blink::TaskHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %29 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %29, align 8
  %31 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink14LocalDOMWindow13GetTaskRunnerENS_8TaskTypeE(%"class.blink::LocalDOMWindow"* %30, i8 zeroext 23) #10
  %32 = bitcast %"class.base::SingleThreadTaskRunner"* %31 to %"class.base::SequencedTaskRunner"*
  %33 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 289) #10
  %34 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #10
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::SpellCheckRequester"*)* @_ZN5blink19SpellCheckRequester32TimerFiredToProcessQueuedRequestEv to i64), i64 0>, <2 x i64>* %6, align 16
  %35 = bitcast %"class.blink::Persistent.1594"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #10
  %36 = getelementptr inbounds %"class.blink::Persistent.1594", %"class.blink::Persistent.1594"* %8, i64 0, i32 0
  %37 = getelementptr inbounds %"class.blink::Persistent.1594", %"class.blink::Persistent.1594"* %8, i64 0, i32 0, i32 0
  store %"class.blink::SpellCheckRequester"* %0, %"class.blink::SpellCheckRequester"** %37, align 8, !alias.scope !18
  %38 = getelementptr inbounds %"class.blink::Persistent.1594", %"class.blink::Persistent.1594"* %8, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %38, align 8, !alias.scope !18
  %39 = ptrtoint %"class.blink::SpellCheckRequester"* %0 to i64
  switch i64 %39, label %40 [
    i64 0, label %66
    i64 -1, label %66
  ]

40:                                               ; preds = %27
  %41 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !18
  %42 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %41, i64 0, i32 1
  %43 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %42) #10, !noalias !18
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %47, !prof !2

45:                                               ; preds = %40
  %46 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %42, i8* %46) #10
  br label %47

47:                                               ; preds = %45, %40
  %48 = phi i8* [ %46, %45 ], [ %43, %40 ]
  %49 = bitcast i8* %48 to %"class.blink::ThreadState"**
  %50 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %49, align 8, !noalias !18
  %51 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %51, align 8, !noalias !18
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %52, i64 0, i32 0, i32 0
  %54 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %53, align 8, !noalias !18
  %55 = icmp eq %"class.blink::PersistentNode"* %54, null
  br i1 %55, label %56, label %59, !prof !2

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %52, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %57) #10
  %58 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %53, align 8
  br label %59

59:                                               ; preds = %56, %47
  %60 = phi %"class.blink::PersistentNode"* [ %58, %56 ], [ %54, %47 ]
  %61 = bitcast %"class.blink::PersistentNode"* %60 to i64*
  %62 = load i64, i64* %61, align 8, !noalias !18
  %63 = bitcast %"class.blink::PersistentRegion"* %52 to i64*
  store i64 %62, i64* %63, align 8, !noalias !18
  %64 = bitcast %"class.blink::PersistentNode"* %60 to %"class.blink::PersistentBase.1595"**
  store %"class.blink::PersistentBase.1595"* %36, %"class.blink::PersistentBase.1595"** %64, align 8, !noalias !18
  %65 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %60, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19SpellCheckRequesterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %65, align 8
  store %"class.blink::PersistentNode"* %60, %"class.blink::PersistentNode"** %38, align 8, !alias.scope !18
  br label %66

66:                                               ; preds = %27, %27, %59
  %67 = call i8* @_Znwm(i64 64) #11, !noalias !21
  %68 = bitcast i8* %67 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink19SpellCheckRequesterEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %68, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19SpellCheckRequesterEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %7, %"class.blink::Persistent.1594"* nonnull dereferenceable(16) %8) #10, !noalias !21
  %69 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %67, i8** %69, align 8, !alias.scope !21
  call void @_ZN5blink19PostCancellableTaskERN4base19SequencedTaskRunnerERKNS0_8LocationENS0_12OnceCallbackIFvvEEE(%"class.blink::TaskHandle"* nonnull sret %3, %"class.base::SequencedTaskRunner"* dereferenceable(16) %32, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #10
  %70 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 3
  %71 = call dereferenceable(8) %"class.blink::TaskHandle"* @_ZN5blink10TaskHandleaSEOS0_(%"class.blink::TaskHandle"* %70, %"class.blink::TaskHandle"* nonnull dereferenceable(8) %3) #10
  call void @_ZN5blink10TaskHandleD1Ev(%"class.blink::TaskHandle"* nonnull %3) #10
  %72 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %72) #10
  %73 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %38, align 8
  %74 = icmp eq %"class.blink::PersistentNode"* %73, null
  br i1 %74, label %94, label %75

75:                                               ; preds = %66
  %76 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %77 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %76, i64 0, i32 1
  %78 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %77) #10
  %79 = icmp eq i8* %78, null
  br i1 %79, label %80, label %82, !prof !2

80:                                               ; preds = %75
  %81 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %77, i8* %81) #10
  br label %82

82:                                               ; preds = %80, %75
  %83 = phi i8* [ %81, %80 ], [ %78, %75 ]
  %84 = bitcast i8* %83 to %"class.blink::ThreadState"**
  %85 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %85, i64 0, i32 3, i32 0, i32 0, i32 0
  %87 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %86, align 8
  %88 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %38, align 8
  %89 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %87, i64 0, i32 0, i32 0
  %90 = bitcast %"class.blink::PersistentRegion"* %87 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.blink::PersistentNode"* %88 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %88, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %93, align 8
  store %"class.blink::PersistentNode"* %88, %"class.blink::PersistentNode"** %89, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %38, align 8
  br label %94

94:                                               ; preds = %66, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #10
  %95 = icmp eq %"class.base::SingleThreadTaskRunner"* %31, null
  br i1 %95, label %104, label %96

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %31, i64 0, i32 0, i32 0, i32 1
  %98 = getelementptr inbounds %"class.base::RefCountedThreadSafe.34", %"class.base::RefCountedThreadSafe.34"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw sub i32* %98, i32 1 acq_rel
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.base::RefCountedThreadSafe.34", %"class.base::RefCountedThreadSafe.34"* %97, i64 -2
  %103 = bitcast %"class.base::RefCountedThreadSafe.34"* %102 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %103) #10
  br label %104

104:                                              ; preds = %94, %96, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %105

105:                                              ; preds = %104, %21
  ret void
}

declare void @_ZN5blink19PostCancellableTaskERN4base19SequencedTaskRunnerERKNS0_8LocationENS0_12OnceCallbackIFvvEEE(%"class.blink::TaskHandle"* sret, %"class.base::SequencedTaskRunner"* dereferenceable(16), %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink14LocalDOMWindow13GetTaskRunnerENS_8TaskTypeE(%"class.blink::LocalDOMWindow"*, i8 zeroext) unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare dereferenceable(8) %"class.blink::TaskHandle"* @_ZN5blink10TaskHandleaSEOS0_(%"class.blink::TaskHandle"*, %"class.blink::TaskHandle"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @_ZN5blink12SpellChecker17MarkAndReplaceForEPNS_17SpellCheckRequestERKN3WTF6VectorINS_18TextCheckingResultELj0ENS3_18PartitionAllocatorEEE(%"class.blink::SpellChecker"*, %"class.blink::SpellCheckRequest"*, %"class.WTF::Vector.1570"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19SpellCheckRequester5TraceEPNS_7VisitorE(%"class.blink::SpellCheckRequester"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::SpellCheckRequester"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14LocalDOMWindowEE5TraceEPNS_7VisitorEPKv) #10
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 4
  %14 = bitcast %"class.blink::Member.537"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SpellCheckRequestEE5TraceEPNS_7VisitorEPKv) #10
  br label %23

23:                                               ; preds = %12, %17
  %24 = getelementptr inbounds %"class.blink::SpellCheckRequester", %"class.blink::SpellCheckRequester"* %0, i64 0, i32 5
  %25 = bitcast %"class.blink::HeapDeque"* %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = bitcast %"class.blink::HeapDeque"* %24 to i8**
  %28 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %29 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %29, i64 11
  %31 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %30, align 8
  tail call void %31(%"class.blink::Visitor"* %1, i8** %27) #10
  %32 = icmp eq i64 %26, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %23
  %34 = inttoptr i64 %26 to i8*
  %35 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %1, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %39

39:                                               ; preds = %23, %33
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19SpellCheckRequesterEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14LocalDOMWindowEE5TraceEPNS_7VisitorEPKv) #10
  br label %12

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds i8, i8* %1, i64 24
  %14 = bitcast i8* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %0, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SpellCheckRequestEE5TraceEPNS_7VisitorEPKv) #10
  br label %23

23:                                               ; preds = %17, %12
  %24 = getelementptr inbounds i8, i8* %1, i64 32
  %25 = bitcast i8* %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = bitcast i8* %24 to i8**
  %28 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %29 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %29, i64 11
  %31 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %30, align 8
  tail call void %31(%"class.blink::Visitor"* %0, i8** %27) #10
  %32 = icmp eq i64 %26, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %23
  %34 = inttoptr i64 %26 to i8*
  %35 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %39

39:                                               ; preds = %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5RangeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Range"*
  tail call void @_ZNK5blink5Range5TraceEPNS_7VisitorE(%"class.blink::Range"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink5Range5TraceEPNS_7VisitorE(%"class.blink::Range"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17SpellCheckRequestEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17SpellCheckRequestEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17SpellCheckRequestEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17SpellCheckRequestEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17SpellCheckRequestEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17SpellCheckRequestEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19SpellCheckRequesterEE5TraceEPNS_7VisitorEPKv) #10
  br label %12

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %0, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5RangeEE5TraceEPNS_7VisitorEPKv) #10
  br label %23

23:                                               ; preds = %17, %12
  %24 = getelementptr inbounds i8, i8* %1, i64 16
  %25 = bitcast i8* %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = inttoptr i64 %26 to i8*
  %30 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %0, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %34

34:                                               ; preds = %23, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17SpellCheckRequestEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 32
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17SpellCheckRequestEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129WebTextCheckingCompletionImpl21DidFinishCheckingTextERKNS_9WebVectorINS_21WebTextCheckingResultEEE(%"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"* nocapture, %"class.blink::WebVector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.1570", align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl", %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::SpellCheckRequest"*, %"class.blink::SpellCheckRequest"** %4, align 8
  %6 = icmp eq %"class.blink::SpellCheckRequest"* %5, null
  br i1 %6, label %71, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.WTF::Vector.1570"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.WTF::Vector.1570", %"class.WTF::Vector.1570"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::Vector.1570", %"class.WTF::Vector.1570"* %3, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::Vector.1570", %"class.WTF::Vector.1570"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #10, !alias.scope !28
  %12 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %1, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"struct.blink::WebTextCheckingResult"** %12 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !28
  %15 = bitcast %"class.blink::WebVector"* %1 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !28
  %17 = icmp eq i64 %14, %16
  br i1 %17, label %43, label %18

18:                                               ; preds = %7, %40
  %19 = phi i32 [ %42, %40 ], [ 0, %7 ]
  %20 = phi i32 [ %41, %40 ], [ 0, %7 ]
  %21 = phi i64 [ %36, %40 ], [ %16, %7 ]
  %22 = phi i64 [ %34, %40 ], [ 0, %7 ]
  %23 = inttoptr i64 %21 to %"struct.blink::WebTextCheckingResult"*
  %24 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %23, i64 %22
  %25 = icmp eq i32 %20, %19
  br i1 %25, label %32, label %26, !prof !2

26:                                               ; preds = %18
  %27 = load %"struct.blink::TextCheckingResult"*, %"struct.blink::TextCheckingResult"** %9, align 8, !alias.scope !28
  %28 = zext i32 %20 to i64
  %29 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %27, i64 %28
  call void @_ZNK5blink21WebTextCheckingResultcvNS_18TextCheckingResultEEv(%"struct.blink::TextCheckingResult"* sret %29, %"struct.blink::WebTextCheckingResult"* %24) #10
  %30 = load i32, i32* %11, align 4, !alias.scope !28
  %31 = add i32 %30, 1
  store i32 %31, i32* %11, align 4, !alias.scope !28
  br label %33

32:                                               ; preds = %18
  call void @_ZN3WTF6VectorIN5blink18TextCheckingResultELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS1_21WebTextCheckingResultEEEvOT_(%"class.WTF::Vector.1570"* nonnull %3, %"struct.blink::WebTextCheckingResult"* dereferenceable(40) %24) #10
  br label %33

33:                                               ; preds = %32, %26
  %34 = add nuw i64 %22, 1
  %35 = load i64, i64* %13, align 8, !noalias !28
  %36 = load i64, i64* %15, align 8, !noalias !28
  %37 = sub i64 %35, %36
  %38 = sdiv exact i64 %37, 40
  %39 = icmp ult i64 %34, %38
  br i1 %39, label %40, label %43

40:                                               ; preds = %33
  %41 = load i32, i32* %11, align 4, !alias.scope !28
  %42 = load i32, i32* %10, align 8, !alias.scope !28
  br label %18

43:                                               ; preds = %33, %7
  %44 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %5, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::SpellCheckRequester"*, %"class.blink::SpellCheckRequester"** %44, align 8
  %46 = icmp eq %"class.blink::SpellCheckRequester"* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.blink::SpellCheckRequest"* %5 to i64*
  store atomic i64 0, i64* %48 monotonic, align 8
  %49 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %5, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  call void @_ZN5blink19SpellCheckRequester15DidCheckSucceedEiRKN3WTF6VectorINS_18TextCheckingResultELj0ENS1_18PartitionAllocatorEEE(%"class.blink::SpellCheckRequester"* nonnull %45, i32 %50, %"class.WTF::Vector.1570"* nonnull dereferenceable(16) %3) #10
  br label %51

51:                                               ; preds = %43, %47
  %52 = load %"struct.blink::TextCheckingResult"*, %"struct.blink::TextCheckingResult"** %9, align 8
  %53 = icmp eq %"struct.blink::TextCheckingResult"* %52, null
  br i1 %53, label %70, label %54, !prof !31

54:                                               ; preds = %51
  %55 = bitcast %"struct.blink::TextCheckingResult"* %52 to i8*
  %56 = load i32, i32* %11, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %68, label %58, !prof !2

58:                                               ; preds = %54
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %52, i64 %59
  br label %61

61:                                               ; preds = %61, %58
  %62 = phi %"struct.blink::TextCheckingResult"* [ %63, %61 ], [ %52, %58 ]
  call void @_ZN5blink18TextCheckingResultD2Ev(%"struct.blink::TextCheckingResult"* %62) #10
  %63 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %62, i64 1
  %64 = icmp eq %"struct.blink::TextCheckingResult"* %63, %60
  br i1 %64, label %65, label %61

65:                                               ; preds = %61
  store i32 0, i32* %11, align 4
  %66 = bitcast %"class.WTF::Vector.1570"* %3 to i8**
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %65, %54
  %69 = phi i8* [ %67, %65 ], [ %55, %54 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %69) #10
  store %"struct.blink::TextCheckingResult"* null, %"struct.blink::TextCheckingResult"** %9, align 8
  br label %70

70:                                               ; preds = %51, %68
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  br label %71

71:                                               ; preds = %2, %70
  store %"class.blink::SpellCheckRequest"* null, %"class.blink::SpellCheckRequest"** %4, align 8
  %72 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl", %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %73 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %72, align 8
  %74 = icmp eq %"class.blink::PersistentNode"* %73, null
  br i1 %74, label %94, label %75

75:                                               ; preds = %71
  %76 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %77 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %76, i64 0, i32 1
  %78 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %77) #10
  %79 = icmp eq i8* %78, null
  br i1 %79, label %80, label %82, !prof !2

80:                                               ; preds = %75
  %81 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %77, i8* %81) #10
  br label %82

82:                                               ; preds = %80, %75
  %83 = phi i8* [ %81, %80 ], [ %78, %75 ]
  %84 = bitcast i8* %83 to %"class.blink::ThreadState"**
  %85 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %85, i64 0, i32 4, i32 0, i32 0, i32 0
  %87 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %86, align 8
  %88 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %72, align 8
  %89 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %87, i64 0, i32 0, i32 0
  %90 = bitcast %"class.blink::PersistentRegion"* %87 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.blink::PersistentNode"* %88 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %88, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %93, align 8
  store %"class.blink::PersistentNode"* %88, %"class.blink::PersistentNode"** %89, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %72, align 8
  br label %94

94:                                               ; preds = %71, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129WebTextCheckingCompletionImpl21DidCancelCheckingTextEv(%"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl", %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::SpellCheckRequest"*, %"class.blink::SpellCheckRequest"** %2, align 8
  %4 = icmp eq %"class.blink::SpellCheckRequest"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::SpellCheckRequester"*, %"class.blink::SpellCheckRequester"** %6, align 8
  %8 = icmp eq %"class.blink::SpellCheckRequester"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::SpellCheckRequest"* %3 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %3, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  tail call void @_ZN5blink19SpellCheckRequester14DidCheckCancelEi(%"class.blink::SpellCheckRequester"* nonnull %7, i32 %12) #10
  br label %13

13:                                               ; preds = %1, %9, %5
  store %"class.blink::SpellCheckRequest"* null, %"class.blink::SpellCheckRequest"** %2, align 8
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl", %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #10
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #10
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129WebTextCheckingCompletionImplD2Ev(%"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl", %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_129WebTextCheckingCompletionImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl", %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129WebTextCheckingCompletionImplD0Ev(%"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl", %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_129WebTextCheckingCompletionImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl", %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  br label %25

25:                                               ; preds = %1, %13
  %26 = bitcast %"class.blink::(anonymous namespace)::WebTextCheckingCompletionImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17SpellCheckRequestELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_17SpellCheckRequestELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_17SpellCheckRequestELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SpellCheckRequest"**
  %4 = load %"class.blink::SpellCheckRequest"*, %"class.blink::SpellCheckRequest"** %3, align 8
  %5 = icmp eq %"class.blink::SpellCheckRequest"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::SpellCheckRequest", %"class.blink::SpellCheckRequest"* %4, i64 -1, i32 6
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::SpellCheckRequest"* null, %"class.blink::SpellCheckRequest"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #10
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #10
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18TextCheckingResultELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS1_21WebTextCheckingResultEEEvOT_(%"class.WTF::Vector.1570"*, %"struct.blink::WebTextCheckingResult"* dereferenceable(40)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1570", %"class.WTF::Vector.1570"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1570", %"class.WTF::Vector.1570"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  br i1 %15, label %16, label %29, !prof !31

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::Vector.1570", %"class.WTF::Vector.1570"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = load %"struct.blink::TextCheckingResult"*, %"struct.blink::TextCheckingResult"** %17, align 8
  %19 = icmp eq %"struct.blink::TextCheckingResult"* %18, null
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = zext i32 %14 to i64
  %22 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18TextCheckingResultEEEmm(i64 %21) #10
  %23 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %22, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18TextCheckingResultEEEPKcv, i64 0, i64 0)) #10
  %24 = ptrtoint i8* %23 to i64
  %25 = bitcast %"class.WTF::Vector.1570"* %0 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = udiv i64 %22, 48
  %27 = trunc i64 %26 to i32
  store i32 %27, i32* %6, align 8
  br label %29

28:                                               ; preds = %16
  tail call void @_ZN3WTF6VectorIN5blink18TextCheckingResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1570"* %0, i32 %14) #10
  br label %29

29:                                               ; preds = %2, %20, %28
  %30 = getelementptr inbounds %"class.WTF::Vector.1570", %"class.WTF::Vector.1570"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.blink::TextCheckingResult"*, %"struct.blink::TextCheckingResult"** %30, align 8
  %32 = load i32, i32* %3, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %31, i64 %33
  tail call void @_ZNK5blink21WebTextCheckingResultcvNS_18TextCheckingResultEEv(%"struct.blink::TextCheckingResult"* sret %34, %"struct.blink::WebTextCheckingResult"* %1) #10
  %35 = load i32, i32* %3, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %3, align 4
  ret void
}

declare void @_ZNK5blink21WebTextCheckingResultcvNS_18TextCheckingResultEEv(%"struct.blink::TextCheckingResult"* sret, %"struct.blink::WebTextCheckingResult"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18TextCheckingResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1570"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %52

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1570", %"class.WTF::Vector.1570"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::TextCheckingResult"*, %"struct.blink::TextCheckingResult"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1570", %"class.WTF::Vector.1570"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1570"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1570", %"class.WTF::Vector.1570"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %50, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"struct.blink::TextCheckingResult"* [ %48, %14 ], [ %6, %4 ]
  %16 = phi %"struct.blink::TextCheckingResult"* [ %47, %14 ], [ null, %4 ]
  %17 = bitcast %"struct.blink::TextCheckingResult"* %16 to i8*
  %18 = bitcast %"struct.blink::TextCheckingResult"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 12, i1 false) #10
  %19 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %16, i64 0, i32 3
  %20 = bitcast %"class.WTF::Vector.1573"* %19 to i8*
  %21 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %15, i64 0, i32 3
  %22 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %16, i64 0, i32 3, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %16, i64 0, i32 3, i32 0, i32 0, i32 2
  %24 = bitcast %"class.WTF::Vector.1573"* %21 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #10
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.WTF::Vector.1573"* %19 to i64*
  store atomic i64 0, i64* %24 monotonic, align 8
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %15, i64 0, i32 3, i32 0, i32 0, i32 1
  %28 = load i32, i32* %22, align 4
  %29 = load i32, i32* %27, align 4
  store i32 %29, i32* %22, align 4
  store i32 %28, i32* %27, align 4
  %30 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %15, i64 0, i32 3, i32 0, i32 0, i32 2
  %31 = load i32, i32* %23, align 4
  %32 = load i32, i32* %30, align 4
  store i32 %32, i32* %23, align 4
  store i32 %31, i32* %30, align 4
  %33 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %16, i64 0, i32 4
  %34 = bitcast %"class.WTF::Vector.321"* %33 to i8*
  %35 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %15, i64 0, i32 4
  %36 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %16, i64 0, i32 4, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %16, i64 0, i32 4, i32 0, i32 0, i32 2
  %38 = bitcast %"class.WTF::Vector.321"* %35 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #10
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.WTF::Vector.321"* %33 to i64*
  store atomic i64 0, i64* %38 monotonic, align 8
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %15, i64 0, i32 4, i32 0, i32 0, i32 1
  %42 = load i32, i32* %36, align 4
  %43 = load i32, i32* %41, align 4
  store i32 %43, i32* %36, align 4
  store i32 %42, i32* %41, align 4
  %44 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %15, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i32, i32* %37, align 4
  %46 = load i32, i32* %44, align 4
  store i32 %46, i32* %37, align 4
  store i32 %45, i32* %44, align 4
  tail call void @_ZN5blink18TextCheckingResultD2Ev(%"struct.blink::TextCheckingResult"* %15) #10
  %47 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %16, i64 1
  %48 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %15, i64 1
  %49 = icmp eq %"struct.blink::TextCheckingResult"* %48, %10
  br i1 %49, label %50, label %14

50:                                               ; preds = %14, %4
  %51 = bitcast %"struct.blink::TextCheckingResult"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #10
  br label %113

52:                                               ; preds = %2
  %53 = zext i32 %1 to i64
  %54 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18TextCheckingResultEEEmm(i64 %53) #10
  %55 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %54, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18TextCheckingResultEEEPKcv, i64 0, i64 0)) #10
  %56 = udiv i64 %54, 48
  %57 = ptrtoint i8* %55 to i64
  %58 = getelementptr inbounds %"class.WTF::Vector.1570", %"class.WTF::Vector.1570"* %0, i64 0, i32 0, i32 0, i32 0
  %59 = load %"struct.blink::TextCheckingResult"*, %"struct.blink::TextCheckingResult"** %58, align 8
  %60 = getelementptr inbounds %"class.WTF::Vector.1570", %"class.WTF::Vector.1570"* %0, i64 0, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %59, i64 %62
  %64 = icmp eq i32 %61, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %52
  %66 = bitcast %"struct.blink::TextCheckingResult"* %59 to i8*
  br label %108

67:                                               ; preds = %52
  %68 = bitcast i8* %55 to %"struct.blink::TextCheckingResult"*
  br label %69

69:                                               ; preds = %67, %69
  %70 = phi %"struct.blink::TextCheckingResult"* [ %103, %69 ], [ %59, %67 ]
  %71 = phi %"struct.blink::TextCheckingResult"* [ %102, %69 ], [ %68, %67 ]
  %72 = bitcast %"struct.blink::TextCheckingResult"* %71 to i8*
  %73 = bitcast %"struct.blink::TextCheckingResult"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 12, i1 false) #10
  %74 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %71, i64 0, i32 3
  %75 = bitcast %"class.WTF::Vector.1573"* %74 to i8*
  %76 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %70, i64 0, i32 3
  %77 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %71, i64 0, i32 3, i32 0, i32 0, i32 1
  %78 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %71, i64 0, i32 3, i32 0, i32 0, i32 2
  %79 = bitcast %"class.WTF::Vector.1573"* %76 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #10
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.WTF::Vector.1573"* %74 to i64*
  store atomic i64 0, i64* %79 monotonic, align 8
  store atomic i64 %80, i64* %81 monotonic, align 8
  %82 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %70, i64 0, i32 3, i32 0, i32 0, i32 1
  %83 = load i32, i32* %77, align 4
  %84 = load i32, i32* %82, align 4
  store i32 %84, i32* %77, align 4
  store i32 %83, i32* %82, align 4
  %85 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %70, i64 0, i32 3, i32 0, i32 0, i32 2
  %86 = load i32, i32* %78, align 4
  %87 = load i32, i32* %85, align 4
  store i32 %87, i32* %78, align 4
  store i32 %86, i32* %85, align 4
  %88 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %71, i64 0, i32 4
  %89 = bitcast %"class.WTF::Vector.321"* %88 to i8*
  %90 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %70, i64 0, i32 4
  %91 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %71, i64 0, i32 4, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %71, i64 0, i32 4, i32 0, i32 0, i32 2
  %93 = bitcast %"class.WTF::Vector.321"* %90 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #10
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.WTF::Vector.321"* %88 to i64*
  store atomic i64 0, i64* %93 monotonic, align 8
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %70, i64 0, i32 4, i32 0, i32 0, i32 1
  %97 = load i32, i32* %91, align 4
  %98 = load i32, i32* %96, align 4
  store i32 %98, i32* %91, align 4
  store i32 %97, i32* %96, align 4
  %99 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %70, i64 0, i32 4, i32 0, i32 0, i32 2
  %100 = load i32, i32* %92, align 4
  %101 = load i32, i32* %99, align 4
  store i32 %101, i32* %92, align 4
  store i32 %100, i32* %99, align 4
  tail call void @_ZN5blink18TextCheckingResultD2Ev(%"struct.blink::TextCheckingResult"* %70) #10
  %102 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %71, i64 1
  %103 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %70, i64 1
  %104 = icmp eq %"struct.blink::TextCheckingResult"* %103, %63
  br i1 %104, label %105, label %69

105:                                              ; preds = %69
  %106 = bitcast %"class.WTF::Vector.1570"* %0 to i8**
  %107 = load i8*, i8** %106, align 8
  br label %108

108:                                              ; preds = %65, %105
  %109 = phi i8* [ %107, %105 ], [ %66, %65 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %109) #10
  %110 = bitcast %"class.WTF::Vector.1570"* %0 to i64*
  store atomic i64 %57, i64* %110 monotonic, align 8
  %111 = trunc i64 %56 to i32
  %112 = getelementptr inbounds %"class.WTF::Vector.1570", %"class.WTF::Vector.1570"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %111, i32* %112, align 8
  br label %113

113:                                              ; preds = %108, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18TextCheckingResultEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 44695552
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 44695552) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 48
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18TextCheckingResultD2Ev(%"struct.blink::TextCheckingResult"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !31

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #10
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector.321"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  %41 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %0, i64 0, i32 3
  %42 = getelementptr inbounds %"class.WTF::Vector.1573", %"class.WTF::Vector.1573"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"struct.blink::GrammarDetail"*, %"struct.blink::GrammarDetail"** %42, align 8
  %44 = icmp eq %"struct.blink::GrammarDetail"* %43, null
  br i1 %44, label %118, label %45, !prof !31

45:                                               ; preds = %40
  %46 = bitcast %"struct.blink::GrammarDetail"* %43 to i8*
  %47 = getelementptr inbounds %"struct.blink::TextCheckingResult", %"struct.blink::TextCheckingResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %116, label %50, !prof !2

50:                                               ; preds = %45
  %51 = zext i32 %48 to i64
  %52 = getelementptr inbounds %"struct.blink::GrammarDetail", %"struct.blink::GrammarDetail"* %43, i64 %51
  br label %53

53:                                               ; preds = %110, %50
  %54 = phi %"struct.blink::GrammarDetail"* [ %111, %110 ], [ %43, %50 ]
  %55 = getelementptr inbounds %"struct.blink::GrammarDetail", %"struct.blink::GrammarDetail"* %54, i64 0, i32 3, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #10
  br label %71

71:                                               ; preds = %70, %67, %53
  %72 = getelementptr inbounds %"struct.blink::GrammarDetail", %"struct.blink::GrammarDetail"* %54, i64 0, i32 2
  %73 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::String"*, %"class.WTF::String"** %73, align 8
  %75 = icmp eq %"class.WTF::String"* %74, null
  br i1 %75, label %110, label %76, !prof !31

76:                                               ; preds = %71
  %77 = bitcast %"class.WTF::String"* %74 to i8*
  %78 = getelementptr inbounds %"struct.blink::GrammarDetail", %"struct.blink::GrammarDetail"* %54, i64 0, i32 2, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %108, label %81, !prof !2

81:                                               ; preds = %76
  %82 = zext i32 %79 to i64
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %82
  br label %84

84:                                               ; preds = %102, %81
  %85 = phi %"class.WTF::String"* [ %103, %102 ], [ %74, %81 ]
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #10
  br label %102

102:                                              ; preds = %101, %98, %84
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 1
  %104 = icmp eq %"class.WTF::String"* %103, %83
  br i1 %104, label %105, label %84

105:                                              ; preds = %102
  store i32 0, i32* %78, align 4
  %106 = bitcast %"class.WTF::Vector.321"* %72 to i8**
  %107 = load i8*, i8** %106, align 8
  br label %108

108:                                              ; preds = %105, %76
  %109 = phi i8* [ %107, %105 ], [ %77, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %109) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %73, align 8
  br label %110

110:                                              ; preds = %71, %108
  %111 = getelementptr inbounds %"struct.blink::GrammarDetail", %"struct.blink::GrammarDetail"* %54, i64 1
  %112 = icmp eq %"struct.blink::GrammarDetail"* %111, %52
  br i1 %112, label %113, label %53

113:                                              ; preds = %110
  store i32 0, i32* %47, align 4
  %114 = bitcast %"class.WTF::Vector.1573"* %41 to i8**
  %115 = load i8*, i8** %114, align 8
  br label %116

116:                                              ; preds = %113, %45
  %117 = phi i8* [ %115, %113 ], [ %46, %45 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %117) #10
  store %"struct.blink::GrammarDetail"* null, %"struct.blink::GrammarDetail"** %42, align 8
  br label %118

118:                                              ; preds = %40, %116
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.537"* @_ZNK3WTF13DequeIteratorIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEEdeEv(%"class.WTF::DequeIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::Deque.541"*, %"class.WTF::Deque.541"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = icmp eq i32 %8, %12
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  store i8* null, i8** %6, align 8
  br label %25

16:                                               ; preds = %1
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %17, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.10, i64 0, i64 0), i32 693, %"class.logging::CheckOpResult"* nonnull %3) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %15, %16, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %26 = load %"class.WTF::Deque.541"*, %"class.WTF::Deque.541"** %9, align 8
  %27 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %27, align 8
  %29 = load i32, i32* %7, align 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %28, i64 %30
  ret %"class.blink::Member.537"* %31
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEE5eraseEj(%"class.WTF::Deque.541"*, i32) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %180, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %8, i64 %9
  %11 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp ugt i32 %12, %1
  br i1 %13, label %71, label %14

14:                                               ; preds = %6
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %8, i64 %15
  %17 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %16, i64 1
  %18 = icmp ne %"class.blink::Member.537"* %17, null
  %19 = icmp ne %"class.blink::Member.537"* %16, null
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %61, !prof !31

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %10, i64 -1
  %23 = icmp ult %"class.blink::Member.537"* %22, %16
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = ptrtoint %"class.blink::Member.537"* %16 to i64
  br label %41

26:                                               ; preds = %21
  %27 = ptrtoint %"class.blink::Member.537"* %22 to i64
  %28 = ptrtoint %"class.blink::Member.537"* %16 to i64
  %29 = sub i64 %27, %28
  %30 = ashr exact i64 %29, 3
  %31 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %17, i64 %30
  br label %32

32:                                               ; preds = %32, %26
  %33 = phi %"class.blink::Member.537"* [ %39, %32 ], [ %31, %26 ]
  %34 = phi %"class.blink::Member.537"* [ %38, %32 ], [ %22, %26 ]
  %35 = bitcast %"class.blink::Member.537"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::Member.537"* %33 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %34, i64 -1
  %39 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %33, i64 -1
  %40 = icmp ult %"class.blink::Member.537"* %38, %16
  br i1 %40, label %41, label %32

41:                                               ; preds = %32, %24
  %42 = phi i64 [ %25, %24 ], [ %28, %32 ]
  %43 = ptrtoint %"class.blink::Member.537"* %10 to i64
  %44 = sub i64 %43, %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %61, label %46

46:                                               ; preds = %41
  %47 = ashr exact i64 %44, 3
  br label %48

48:                                               ; preds = %58, %46
  %49 = phi i64 [ %51, %58 ], [ %47, %46 ]
  %50 = phi %"class.blink::Member.537"* [ %59, %58 ], [ %17, %46 ]
  %51 = add i64 %49, -1
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %48
  %55 = bitcast %"class.blink::Member.537"* %50 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %56) #10
  br label %58

58:                                               ; preds = %54, %48
  %59 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %50, i64 1
  %60 = icmp eq i64 %51, 0
  br i1 %60, label %61, label %48

61:                                               ; preds = %58, %14, %41
  %62 = load i32, i32* %11, align 8
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %8, i64 %63
  %65 = bitcast %"class.blink::Member.537"* %64 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %65, i64 8) #10
  %66 = load i32, i32* %11, align 8
  %67 = add i32 %66, 1
  %68 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = urem i32 %67, %69
  store i32 %70, i32* %11, align 8
  br label %180

71:                                               ; preds = %6
  %72 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %10, i64 1
  %73 = zext i32 %4 to i64
  %74 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %8, i64 %73
  %75 = icmp ne %"class.blink::Member.537"* %10, null
  %76 = icmp ne %"class.blink::Member.537"* %72, null
  %77 = and i1 %75, %76
  br i1 %77, label %78, label %168, !prof !31

78:                                               ; preds = %71
  %79 = icmp ult %"class.blink::Member.537"* %72, %74
  br i1 %79, label %80, label %148

80:                                               ; preds = %78
  %81 = shl nuw nsw i64 %73, 3
  %82 = add nsw i64 %81, -9
  %83 = shl nuw nsw i64 %9, 3
  %84 = sub nsw i64 %82, %83
  %85 = lshr i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 7
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %80, %89
  %90 = phi %"class.blink::Member.537"* [ %97, %89 ], [ %10, %80 ]
  %91 = phi %"class.blink::Member.537"* [ %96, %89 ], [ %72, %80 ]
  %92 = phi i64 [ %98, %89 ], [ %87, %80 ]
  %93 = bitcast %"class.blink::Member.537"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.537"* %90 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %91, i64 1
  %97 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %90, i64 1
  %98 = add i64 %92, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %89, !llvm.loop !32

100:                                              ; preds = %89, %80
  %101 = phi %"class.blink::Member.537"* [ %10, %80 ], [ %97, %89 ]
  %102 = phi %"class.blink::Member.537"* [ %72, %80 ], [ %96, %89 ]
  %103 = icmp ult i64 %84, 56
  br i1 %103, label %148, label %104

104:                                              ; preds = %100, %104
  %105 = phi %"class.blink::Member.537"* [ %146, %104 ], [ %101, %100 ]
  %106 = phi %"class.blink::Member.537"* [ %145, %104 ], [ %102, %100 ]
  %107 = bitcast %"class.blink::Member.537"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.blink::Member.537"* %105 to i64*
  store atomic i64 %108, i64* %109 monotonic, align 8
  %110 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %106, i64 1
  %111 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %105, i64 1
  %112 = bitcast %"class.blink::Member.537"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.blink::Member.537"* %111 to i64*
  store atomic i64 %113, i64* %114 monotonic, align 8
  %115 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %106, i64 2
  %116 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %105, i64 2
  %117 = bitcast %"class.blink::Member.537"* %115 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.blink::Member.537"* %116 to i64*
  store atomic i64 %118, i64* %119 monotonic, align 8
  %120 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %106, i64 3
  %121 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %105, i64 3
  %122 = bitcast %"class.blink::Member.537"* %120 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.blink::Member.537"* %121 to i64*
  store atomic i64 %123, i64* %124 monotonic, align 8
  %125 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %106, i64 4
  %126 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %105, i64 4
  %127 = bitcast %"class.blink::Member.537"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.blink::Member.537"* %126 to i64*
  store atomic i64 %128, i64* %129 monotonic, align 8
  %130 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %106, i64 5
  %131 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %105, i64 5
  %132 = bitcast %"class.blink::Member.537"* %130 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.blink::Member.537"* %131 to i64*
  store atomic i64 %133, i64* %134 monotonic, align 8
  %135 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %106, i64 6
  %136 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %105, i64 6
  %137 = bitcast %"class.blink::Member.537"* %135 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.blink::Member.537"* %136 to i64*
  store atomic i64 %138, i64* %139 monotonic, align 8
  %140 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %106, i64 7
  %141 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %105, i64 7
  %142 = bitcast %"class.blink::Member.537"* %140 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.blink::Member.537"* %141 to i64*
  store atomic i64 %143, i64* %144 monotonic, align 8
  %145 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %106, i64 8
  %146 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %105, i64 8
  %147 = icmp ult %"class.blink::Member.537"* %145, %74
  br i1 %147, label %104, label %148

148:                                              ; preds = %100, %104, %78
  %149 = ptrtoint %"class.blink::Member.537"* %74 to i64
  %150 = ptrtoint %"class.blink::Member.537"* %72 to i64
  %151 = sub i64 %149, %150
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %168, label %153

153:                                              ; preds = %148
  %154 = ashr exact i64 %151, 3
  br label %155

155:                                              ; preds = %165, %153
  %156 = phi i64 [ %158, %165 ], [ %154, %153 ]
  %157 = phi %"class.blink::Member.537"* [ %166, %165 ], [ %10, %153 ]
  %158 = add i64 %156, -1
  %159 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %165, label %161

161:                                              ; preds = %155
  %162 = bitcast %"class.blink::Member.537"* %157 to i8**
  %163 = load i8*, i8** %162, align 8
  %164 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %163) #10
  br label %165

165:                                              ; preds = %161, %155
  %166 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %157, i64 1
  %167 = icmp eq i64 %158, 0
  br i1 %167, label %168, label %155

168:                                              ; preds = %165, %71, %148
  %169 = load i32, i32* %3, align 4
  %170 = zext i32 %169 to i64
  %171 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %8, i64 %170
  %172 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %171, i64 -1
  %173 = bitcast %"class.blink::Member.537"* %172 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %173, i64 8) #10
  %174 = load i32, i32* %3, align 4
  %175 = add i32 %174, -1
  %176 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %177 = load i32, i32* %176, align 8
  %178 = add i32 %175, %177
  %179 = urem i32 %178, %177
  store i32 %179, i32* %3, align 4
  br label %180

180:                                              ; preds = %61, %168, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.541"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17SpellCheckRequestEEEEEmm(i64 %11) #10
  %13 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %4, align 8
  %14 = icmp eq %"class.blink::Member.537"* %13, null
  br i1 %14, label %104, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::Member.537"* %13 to i8*
  %17 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %16, i64 %12) #10
  br i1 %17, label %18, label %104

18:                                               ; preds = %15
  %19 = lshr i64 %12, 3
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %2, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp ugt i32 %22, %24
  br i1 %25, label %26, label %245

26:                                               ; preds = %18
  %27 = sub i32 %22, %3
  %28 = add i32 %27, %20
  %29 = zext i32 %22 to i64
  %30 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %5, i64 %29
  %31 = zext i32 %3 to i64
  %32 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %5, i64 %31
  %33 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %4, align 8
  %34 = zext i32 %28 to i64
  %35 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %33, i64 %34
  %36 = icmp ne %"class.blink::Member.537"* %35, null
  %37 = icmp ne %"class.blink::Member.537"* %30, null
  %38 = and i1 %37, %36
  br i1 %38, label %39, label %92, !prof !31

39:                                               ; preds = %26
  %40 = icmp eq %"class.blink::Member.537"* %30, %35
  br i1 %40, label %72, label %41

41:                                               ; preds = %39
  %42 = icmp ult %"class.blink::Member.537"* %35, %30
  br i1 %42, label %43, label %54

43:                                               ; preds = %41
  %44 = icmp ult i32 %22, %3
  br i1 %44, label %45, label %72

45:                                               ; preds = %43, %45
  %46 = phi %"class.blink::Member.537"* [ %52, %45 ], [ %35, %43 ]
  %47 = phi %"class.blink::Member.537"* [ %51, %45 ], [ %30, %43 ]
  %48 = bitcast %"class.blink::Member.537"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.blink::Member.537"* %46 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %47, i64 1
  %52 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %46, i64 1
  %53 = icmp ult %"class.blink::Member.537"* %51, %32
  br i1 %53, label %45, label %72

54:                                               ; preds = %41
  %55 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %32, i64 -1
  %56 = icmp ult %"class.blink::Member.537"* %55, %30
  br i1 %56, label %72, label %57

57:                                               ; preds = %54
  %58 = ptrtoint %"class.blink::Member.537"* %55 to i64
  %59 = ptrtoint %"class.blink::Member.537"* %30 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %35, i64 %61
  br label %63

63:                                               ; preds = %63, %57
  %64 = phi %"class.blink::Member.537"* [ %70, %63 ], [ %62, %57 ]
  %65 = phi %"class.blink::Member.537"* [ %69, %63 ], [ %55, %57 ]
  %66 = bitcast %"class.blink::Member.537"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.blink::Member.537"* %64 to i64*
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %65, i64 -1
  %70 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %64, i64 -1
  %71 = icmp ult %"class.blink::Member.537"* %69, %30
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %45, %54, %43, %39
  %73 = ptrtoint %"class.blink::Member.537"* %32 to i64
  %74 = ptrtoint %"class.blink::Member.537"* %30 to i64
  %75 = sub i64 %73, %74
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %72
  %78 = ashr exact i64 %75, 3
  br label %79

79:                                               ; preds = %89, %77
  %80 = phi i64 [ %82, %89 ], [ %78, %77 ]
  %81 = phi %"class.blink::Member.537"* [ %90, %89 ], [ %35, %77 ]
  %82 = add i64 %80, -1
  %83 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %79
  %86 = bitcast %"class.blink::Member.537"* %81 to i8**
  %87 = load i8*, i8** %86, align 8
  %88 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %87) #10
  br label %89

89:                                               ; preds = %85, %79
  %90 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %81, i64 1
  %91 = icmp eq i64 %82, 0
  br i1 %91, label %92, label %79

92:                                               ; preds = %89, %26, %72
  %93 = load i32, i32* %21, align 8
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %5, i64 %94
  %96 = icmp ult i32 %28, %3
  %97 = select i1 %96, i32 %28, i32 %3
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %5, i64 %98
  %100 = bitcast %"class.blink::Member.537"* %95 to i8*
  %101 = ptrtoint %"class.blink::Member.537"* %99 to i64
  %102 = ptrtoint %"class.blink::Member.537"* %95 to i64
  %103 = sub i64 %101, %102
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %100, i64 %103) #10
  store i32 %28, i32* %21, align 8
  br label %245

104:                                              ; preds = %1, %15
  %105 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17SpellCheckRequestEEEEEmm(i64 %11) #10
  %106 = lshr i64 %105, 3
  %107 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %106) #10
  %108 = ptrtoint %"class.blink::HeapVectorBacking"* %107 to i64
  %109 = bitcast %"class.WTF::Deque.541"* %0 to i64*
  store atomic i64 %108, i64* %109 monotonic, align 8
  %110 = trunc i64 %106 to i32
  store i32 %110, i32* %2, align 8
  %111 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %107, i64 0, i32 0
  %115 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %114) #10
  br label %116

116:                                              ; preds = %104, %113
  %117 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %0, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = getelementptr inbounds %"class.WTF::Deque.541", %"class.WTF::Deque.541"* %0, i64 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp ugt i32 %118, %120
  br i1 %121, label %166, label %122

122:                                              ; preds = %116
  %123 = zext i32 %118 to i64
  %124 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %5, i64 %123
  %125 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %4, align 8
  %126 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %125, i64 %123
  %127 = icmp ne %"class.blink::Member.537"* %126, null
  %128 = icmp ne %"class.blink::Member.537"* %124, null
  %129 = and i1 %128, %127
  br i1 %129, label %130, label %154, !prof !31

130:                                              ; preds = %122
  %131 = zext i32 %120 to i64
  %132 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %5, i64 %131
  %133 = bitcast %"class.blink::Member.537"* %124 to i8*
  %134 = ptrtoint %"class.blink::Member.537"* %132 to i64
  %135 = ptrtoint %"class.blink::Member.537"* %124 to i64
  %136 = sub i64 %134, %135
  %137 = bitcast %"class.blink::Member.537"* %126 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %137, i8* nonnull %133, i64 %136) #10
  %138 = icmp eq i64 %136, 0
  br i1 %138, label %154, label %139

139:                                              ; preds = %130
  %140 = ashr exact i64 %136, 3
  br label %141

141:                                              ; preds = %151, %139
  %142 = phi i64 [ %144, %151 ], [ %140, %139 ]
  %143 = phi %"class.blink::Member.537"* [ %152, %151 ], [ %126, %139 ]
  %144 = add i64 %142, -1
  %145 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = bitcast %"class.blink::Member.537"* %143 to i8**
  %149 = load i8*, i8** %148, align 8
  %150 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %149) #10
  br label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %143, i64 1
  %153 = icmp eq i64 %144, 0
  br i1 %153, label %154, label %141

154:                                              ; preds = %151, %122, %130
  %155 = load i32, i32* %117, align 8
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %5, i64 %156
  %158 = load i32, i32* %119, align 4
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %5, i64 %159
  %161 = bitcast %"class.blink::Member.537"* %157 to i8*
  %162 = ptrtoint %"class.blink::Member.537"* %160 to i64
  %163 = ptrtoint %"class.blink::Member.537"* %157 to i64
  %164 = sub i64 %162, %163
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %161, i64 %164) #10
  %165 = bitcast %"class.blink::Member.537"* %5 to i8*
  br label %243

166:                                              ; preds = %116
  %167 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %4, align 8
  %168 = icmp ne %"class.blink::Member.537"* %167, null
  %169 = icmp ne %"class.blink::Member.537"* %5, null
  %170 = and i1 %169, %168
  br i1 %170, label %173, label %171, !prof !31

171:                                              ; preds = %166
  %172 = bitcast %"class.blink::Member.537"* %5 to i8*
  br label %192

173:                                              ; preds = %166
  %174 = zext i32 %120 to i64
  %175 = bitcast %"class.blink::Member.537"* %5 to i8*
  %176 = shl nuw nsw i64 %174, 3
  %177 = bitcast %"class.blink::Member.537"* %167 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %177, i8* nonnull %175, i64 %176) #10
  %178 = icmp eq i32 %120, 0
  br i1 %178, label %192, label %179

179:                                              ; preds = %173, %189
  %180 = phi i64 [ %182, %189 ], [ %174, %173 ]
  %181 = phi %"class.blink::Member.537"* [ %190, %189 ], [ %167, %173 ]
  %182 = add nsw i64 %180, -1
  %183 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %179
  %186 = bitcast %"class.blink::Member.537"* %181 to i8**
  %187 = load i8*, i8** %186, align 8
  %188 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %187) #10
  br label %189

189:                                              ; preds = %185, %179
  %190 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %181, i64 1
  %191 = icmp eq i64 %182, 0
  br i1 %191, label %192, label %179

192:                                              ; preds = %189, %171, %173
  %193 = phi i8* [ %172, %171 ], [ %175, %173 ], [ %175, %189 ]
  %194 = load i32, i32* %119, align 4
  %195 = zext i32 %194 to i64
  %196 = shl nuw nsw i64 %195, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %193, i64 %196) #10
  %197 = load i32, i32* %2, align 8
  %198 = load i32, i32* %117, align 8
  %199 = sub i32 %198, %3
  %200 = add i32 %199, %197
  %201 = zext i32 %198 to i64
  %202 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %5, i64 %201
  %203 = zext i32 %3 to i64
  %204 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %5, i64 %203
  %205 = load %"class.blink::Member.537"*, %"class.blink::Member.537"** %4, align 8
  %206 = zext i32 %200 to i64
  %207 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %205, i64 %206
  %208 = icmp ne %"class.blink::Member.537"* %207, null
  %209 = icmp ne %"class.blink::Member.537"* %202, null
  %210 = and i1 %209, %208
  br i1 %210, label %213, label %211, !prof !31

211:                                              ; preds = %192
  %212 = ptrtoint %"class.blink::Member.537"* %204 to i64
  br label %235

213:                                              ; preds = %192
  %214 = bitcast %"class.blink::Member.537"* %202 to i8*
  %215 = ptrtoint %"class.blink::Member.537"* %204 to i64
  %216 = ptrtoint %"class.blink::Member.537"* %202 to i64
  %217 = sub i64 %215, %216
  %218 = bitcast %"class.blink::Member.537"* %207 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %218, i8* nonnull %214, i64 %217) #10
  %219 = icmp eq i64 %217, 0
  br i1 %219, label %235, label %220

220:                                              ; preds = %213
  %221 = ashr exact i64 %217, 3
  br label %222

222:                                              ; preds = %232, %220
  %223 = phi i64 [ %225, %232 ], [ %221, %220 ]
  %224 = phi %"class.blink::Member.537"* [ %233, %232 ], [ %207, %220 ]
  %225 = add i64 %223, -1
  %226 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %232, label %228

228:                                              ; preds = %222
  %229 = bitcast %"class.blink::Member.537"* %224 to i8**
  %230 = load i8*, i8** %229, align 8
  %231 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %230) #10
  br label %232

232:                                              ; preds = %228, %222
  %233 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %224, i64 1
  %234 = icmp eq i64 %225, 0
  br i1 %234, label %235, label %222

235:                                              ; preds = %232, %211, %213
  %236 = phi i64 [ %212, %211 ], [ %215, %213 ], [ %215, %232 ]
  %237 = load i32, i32* %117, align 8
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %5, i64 %238
  %240 = bitcast %"class.blink::Member.537"* %239 to i8*
  %241 = ptrtoint %"class.blink::Member.537"* %239 to i64
  %242 = sub i64 %236, %241
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %240, i64 %242) #10
  store i32 %200, i32* %117, align 8
  br label %243

243:                                              ; preds = %235, %154
  %244 = phi i8* [ %193, %235 ], [ %165, %154 ]
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %244) #10
  br label %245

245:                                              ; preds = %92, %18, %243
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17SpellCheckRequestEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.11, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.13, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([175 x i8], [175 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17SpellCheckRequestEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.537"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.537", %"class.blink::Member.537"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.537"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SpellCheckRequestEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17SpellCheckRequestEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19SpellCheckRequesterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::SpellCheckRequester"**
  %5 = load %"class.blink::SpellCheckRequester"*, %"class.blink::SpellCheckRequester"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::SpellCheckRequester"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::SpellCheckRequester"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19SpellCheckRequesterEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19SpellCheckRequesterEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::SpellCheckRequester"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::SpellCheckRequester"*)**
  %21 = load void (%"class.blink::SpellCheckRequester"*)*, void (%"class.blink::SpellCheckRequester"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::SpellCheckRequester"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::SpellCheckRequester"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::SpellCheckRequester"* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19SpellCheckRequesterEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::Persistent.1594"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19SpellCheckRequesterEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #10
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Persistent.1594"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #10
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #10
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !2

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #10
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.1595"**
  store %"class.blink::PersistentBase.1595"* %11, %"class.blink::PersistentBase.1595"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19SpellCheckRequesterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19SpellCheckRequesterEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #10
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #10
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14LocalDOMWindowEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::LocalDOMWindow"*
  tail call void @_ZNK5blink14LocalDOMWindow5TraceEPNS_7VisitorE(%"class.blink::LocalDOMWindow"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink14LocalDOMWindow5TraceEPNS_7VisitorE(%"class.blink::LocalDOMWindow"*, %"class.blink::Visitor"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3WTF5DequeIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEE9TakeFirstEv: argument 0"}
!5 = distinct !{!5, !"_ZN3WTF5DequeIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEE9TakeFirstEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTF5DequeIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEE3endEv: argument 0"}
!8 = distinct !{!8, !"_ZN3WTF5DequeIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEE3endEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTF5DequeIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEE5beginEv: argument 0"}
!11 = distinct !{!11, !"_ZN3WTF5DequeIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEE5beginEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3WTF5DequeIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEE3endEv: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF5DequeIN5blink6MemberINS1_17SpellCheckRequestEEELj0ENS1_13HeapAllocatorEE3endEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__17find_ifIN3WTF13DequeIteratorIN5blink6MemberINS3_17SpellCheckRequestEEELj0ENS3_13HeapAllocatorEEEZNS3_19SpellCheckRequester14EnqueueRequestEPS5_E3$_0EET_SC_SC_T0_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__17find_ifIN3WTF13DequeIteratorIN5blink6MemberINS3_17SpellCheckRequestEEELj0ENS3_13HeapAllocatorEEEZNS3_19SpellCheckRequester14EnqueueRequestEPS5_E3$_0EET_SC_SC_T0_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN5blink22WrapPersistentInternalINS_19SpellCheckRequesterEEENS_10PersistentIT_EEPS3_: argument 0"}
!20 = distinct !{!20, !"_ZN5blink22WrapPersistentInternalINS_19SpellCheckRequesterEEENS_10PersistentIT_EEPS3_"}
!21 = !{!22, !24, !26}
!22 = distinct !{!22, !23, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19SpellCheckRequesterEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19SpellCheckRequesterEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!24 = distinct !{!24, !25, !"_ZN4base8BindOnceIMN5blink19SpellCheckRequesterEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8BindOnceIMN5blink19SpellCheckRequesterEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!26 = distinct !{!26, !27, !"_ZN3WTF4BindIMN5blink19SpellCheckRequesterEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!27 = distinct !{!27, !"_ZN3WTF4BindIMN5blink19SpellCheckRequesterEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN5blink12_GLOBAL__N_113ToCoreResultsERKNS_9WebVectorINS_21WebTextCheckingResultEEE: argument 0"}
!30 = distinct !{!30, !"_ZN5blink12_GLOBAL__N_113ToCoreResultsERKNS_9WebVectorINS_21WebTextCheckingResultEEE"}
!31 = !{!"branch_weights", i32 2000, i32 1}
!32 = distinct !{!32, !33}
!33 = !{!"llvm.loop.unroll.disable"}
