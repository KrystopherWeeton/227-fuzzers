; ModuleID = '../../third_party/pdfium/xfa/fxfa/parser/cxfa_dataexporter.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/parser/cxfa_dataexporter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CXFA_DataExporter = type { i8 }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.IFX_SeekableStream* }
%class.IFX_SeekableStream = type { %class.IFX_SeekableReadStream.base, %class.IFX_SeekableWriteStream.base, %"class.fxcrt::Retainable" }
%class.IFX_SeekableReadStream.base = type { %class.IFX_StreamWithSize }
%class.IFX_StreamWithSize = type { i32 (...)** }
%class.IFX_SeekableWriteStream.base = type { %class.IFX_RetainableWriteStream.base }
%class.IFX_RetainableWriteStream.base = type { %class.IFX_WriteStream }
%class.IFX_WriteStream = type { i32 (...)** }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%class.CXFA_Node = type { %class.CXFA_Object, %"class.fxjs::GCedTreeNodeMixin", i32, i8, i8, i8, %"class.pdfium::span.3", %"class.pdfium::span.5", i32, %"class.fxcrt::UnownedPtr.7", i8, i8, i8, i32, %"class.cppgc::internal::BasicMember.2", %"class.std::__1::vector", %"class.cppgc::internal::BasicMember.12", %"class.cppgc::internal::BasicMember.13" }
%class.CXFA_Object = type { i32 (...)**, i32, i16, %"class.fxcrt::StringViewTemplate", i32, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.1" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxjs::GCedTreeNodeMixin" = type { %"class.cppgc::GarbageCollectedMixin", %"class.fxcrt::TreeNode" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2" }
%"class.pdfium::span.3" = type { %"class.fxcrt::UnownedPtr.4", i64 }
%"class.fxcrt::UnownedPtr.4" = type { %"struct.CXFA_Node::PropertyData"* }
%"struct.CXFA_Node::PropertyData" = type { i16, i8, i8 }
%"class.pdfium::span.5" = type { %"class.fxcrt::UnownedPtr.6", i64 }
%"class.fxcrt::UnownedPtr.6" = type { %"struct.CXFA_Node::AttributeData"* }
%"struct.CXFA_Node::AttributeData" = type { i16, i8, i8* }
%"class.fxcrt::UnownedPtr.7" = type { %class.CFX_XMLNode* }
%class.CFX_XMLNode = type { %"class.fxcrt::TreeNode.8" }
%"class.fxcrt::TreeNode.8" = type { i32 (...)**, %class.CFX_XMLNode*, %class.CFX_XMLNode*, %class.CFX_XMLNode*, %class.CFX_XMLNode*, %class.CFX_XMLNode* }
%"class.cppgc::internal::BasicMember.2" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cppgc::internal::BasicMember.2"*, %"class.cppgc::internal::BasicMember.2"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.cppgc::internal::BasicMember.2"* }
%"class.cppgc::internal::BasicMember.12" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.13" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::RetainPtr.28" = type { %"class.std::__1::unique_ptr.29" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.IFX_SeekableWriteStream* }
%class.IFX_SeekableWriteStream = type { %class.IFX_RetainableWriteStream.base, %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.14" }
%"class.fxcrt::RetainPtr.14" = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CFX_XMLElement = type { %class.CFX_XMLNode, %"class.fxcrt::WideString", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i64 }

@.str = private unnamed_addr constant [47 x i8] c"<xdp:xdp xmlns:xdp=\22http://ns.adobe.com/xdp/\22>\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"</xdp:xdp\0A>\00", align 1
@.str.2 = private unnamed_addr constant [10 x i32] [i32 120, i32 109, i32 108, i32 110, i32 115, i32 58, i32 120, i32 102, i32 97, i32 0], align 4
@.str.3 = private unnamed_addr constant [40 x i32] [i32 104, i32 116, i32 116, i32 112, i32 58, i32 47, i32 47, i32 119, i32 119, i32 119, i32 46, i32 120, i32 102, i32 97, i32 46, i32 111, i32 114, i32 103, i32 47, i32 115, i32 99, i32 104, i32 101, i32 109, i32 97, i32 47, i32 120, i32 102, i32 97, i32 45, i32 100, i32 97, i32 116, i32 97, i32 47, i32 49, i32 46, i32 48, i32 47, i32 0], align 4

@_ZN17CXFA_DataExporterC1Ev = hidden unnamed_addr alias void (%class.CXFA_DataExporter*), void (%class.CXFA_DataExporter*)* @_ZN17CXFA_DataExporterC2Ev
@_ZN17CXFA_DataExporterD1Ev = hidden unnamed_addr alias void (%class.CXFA_DataExporter*), void (%class.CXFA_DataExporter*)* @_ZN17CXFA_DataExporterD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN17CXFA_DataExporterC2Ev(%class.CXFA_DataExporter* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN17CXFA_DataExporterD2Ev(%class.CXFA_DataExporter* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17CXFA_DataExporter6ExportERKN5fxcrt9RetainPtrI18IFX_SeekableStreamEEP9CXFA_Node(%class.CXFA_DataExporter* nocapture readnone, %"class.fxcrt::RetainPtr"* dereferenceable(8), %class.CXFA_Node*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %"class.fxcrt::RetainPtr.28", align 8
  %7 = alloca %"class.fxcrt::RetainPtr.28", align 8
  %8 = alloca %"class.fxcrt::WideString", align 8
  %9 = alloca %"class.fxcrt::WideString", align 8
  %10 = alloca %"class.fxcrt::RetainPtr.28", align 8
  %11 = alloca %"class.fxcrt::WideString", align 8
  %12 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %2, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 5
  br i1 %14, label %15, label %172

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %2, i64 0, i32 10
  %17 = load i8, i8* %16, align 8
  switch i8 %17, label %112 [
    i8 3, label %18
    i8 11, label %48
    i8 12, label %111
  ]

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %class.IFX_SeekableStream*, %class.IFX_SeekableStream** %19, align 8
  %21 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i8** %21, align 8
  %22 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 46, i64* %22, align 8
  %23 = bitcast %class.IFX_SeekableStream* %20 to i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)***
  %24 = load i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)** %24, i64 8
  %26 = load i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)** %25, align 8
  %27 = call zeroext i1 %26(%class.IFX_SeekableStream* %20, %"class.fxcrt::StringViewTemplate"* nonnull %4) #5
  %28 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %2, i64 0, i32 1, i32 1, i32 2
  %29 = bitcast %"class.cppgc::internal::BasicMember.2"* %28 to %class.CXFA_Node**
  %30 = load %class.CXFA_Node*, %class.CXFA_Node** %29, align 8
  %31 = icmp eq %class.CXFA_Node* %30, null
  br i1 %31, label %32, label %41

32:                                               ; preds = %41, %18
  %33 = load %class.IFX_SeekableStream*, %class.IFX_SeekableStream** %19, align 8
  %34 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i8** %34, align 8
  %35 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 11, i64* %35, align 8
  %36 = bitcast %class.IFX_SeekableStream* %33 to i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)***
  %37 = load i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)*** %36, align 8
  %38 = getelementptr inbounds i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)** %37, i64 8
  %39 = load i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_SeekableStream*, %"class.fxcrt::StringViewTemplate"*)** %38, align 8
  %40 = call zeroext i1 %39(%class.IFX_SeekableStream* %33, %"class.fxcrt::StringViewTemplate"* nonnull %5) #5
  br label %253

41:                                               ; preds = %18, %41
  %42 = phi %class.CXFA_Node* [ %46, %41 ], [ %30, %18 ]
  %43 = call zeroext i1 @_ZN17CXFA_DataExporter6ExportERKN5fxcrt9RetainPtrI18IFX_SeekableStreamEEP9CXFA_Node(%class.CXFA_DataExporter* %0, %"class.fxcrt::RetainPtr"* dereferenceable(8) %1, %class.CXFA_Node* nonnull %42)
  %44 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %42, i64 0, i32 1, i32 1, i32 4
  %45 = bitcast %"class.cppgc::internal::BasicMember.2"* %44 to %class.CXFA_Node**
  %46 = load %class.CXFA_Node*, %class.CXFA_Node** %45, align 8
  %47 = icmp eq %class.CXFA_Node* %46, null
  br i1 %47, label %32, label %41

48:                                               ; preds = %15
  %49 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %2, i64 0, i32 9, i32 0
  %50 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %49, align 8
  %51 = icmp eq %class.CFX_XMLNode* %50, null
  br i1 %51, label %253, label %52

52:                                               ; preds = %48
  %53 = bitcast %class.CFX_XMLNode* %50 to i32 (%class.CFX_XMLNode*)***
  %54 = load i32 (%class.CFX_XMLNode*)**, i32 (%class.CFX_XMLNode*)*** %53, align 8
  %55 = getelementptr inbounds i32 (%class.CFX_XMLNode*)*, i32 (%class.CFX_XMLNode*)** %54, i64 2
  %56 = load i32 (%class.CFX_XMLNode*)*, i32 (%class.CFX_XMLNode*)** %55, align 8
  %57 = tail call i32 %56(%class.CFX_XMLNode* nonnull %50) #5
  %58 = icmp eq i32 %57, 1
  %59 = bitcast %class.CFX_XMLNode* %50 to %class.CFX_XMLElement*
  br i1 %58, label %60, label %253

60:                                               ; preds = %52
  %61 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %2, i64 0, i32 1, i32 1, i32 2
  %62 = bitcast %"class.cppgc::internal::BasicMember.2"* %61 to %class.CXFA_Node**
  %63 = load %class.CXFA_Node*, %class.CXFA_Node** %62, align 8
  tail call void @_Z38XFA_DataExporter_DealWithDataGroupNodeP9CXFA_Node(%class.CXFA_Node* %63) #5
  %64 = bitcast %"class.fxcrt::RetainPtr.28"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #5
  %65 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %class.IFX_SeekableStream*, %class.IFX_SeekableStream** %65, align 8
  %67 = icmp eq %class.IFX_SeekableStream* %66, null
  %68 = getelementptr inbounds %class.IFX_SeekableStream, %class.IFX_SeekableStream* %66, i64 0, i32 1
  %69 = bitcast %class.IFX_SeekableWriteStream.base* %68 to %class.IFX_SeekableWriteStream*
  %70 = select i1 %67, %class.IFX_SeekableWriteStream* null, %class.IFX_SeekableWriteStream* %69
  %71 = ptrtoint %class.IFX_SeekableWriteStream* %70 to i64
  %72 = bitcast %"class.fxcrt::RetainPtr.28"* %6 to i64*
  store i64 %71, i64* %72, align 8
  br i1 %67, label %85, label %73

73:                                               ; preds = %60
  %74 = bitcast %class.IFX_SeekableWriteStream* %70 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr i8, i8* %75, i64 -24
  %77 = bitcast i8* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %class.IFX_SeekableWriteStream* %70 to i8*
  %80 = getelementptr inbounds i8, i8* %79, i64 %78
  %81 = getelementptr inbounds i8, i8* %80, i64 8
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = add nsw i64 %83, 1
  store i64 %84, i64* %82, align 8
  br label %85

85:                                               ; preds = %60, %73
  call void @_ZN14CFX_XMLElement4SaveERKN5fxcrt9RetainPtrI23IFX_SeekableWriteStreamEE(%class.CFX_XMLElement* nonnull %59, %"class.fxcrt::RetainPtr.28"* nonnull dereferenceable(8) %6) #5
  %86 = getelementptr inbounds %"class.fxcrt::RetainPtr.28", %"class.fxcrt::RetainPtr.28"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %class.IFX_SeekableWriteStream*, %class.IFX_SeekableWriteStream** %86, align 8
  store %class.IFX_SeekableWriteStream* null, %class.IFX_SeekableWriteStream** %86, align 8
  %88 = icmp eq %class.IFX_SeekableWriteStream* %87, null
  br i1 %88, label %110, label %89

89:                                               ; preds = %85
  %90 = bitcast %class.IFX_SeekableWriteStream* %87 to i8**
  %91 = load i8*, i8** %90, align 8
  %92 = getelementptr i8, i8* %91, i64 -24
  %93 = bitcast i8* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %class.IFX_SeekableWriteStream* %87 to i8*
  %96 = getelementptr inbounds i8, i8* %95, i64 %94
  %97 = getelementptr inbounds i8, i8* %96, i64 8
  %98 = bitcast i8* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = add nsw i64 %99, -1
  store i64 %100, i64* %98, align 8
  %101 = icmp ne i64 %100, 0
  %102 = icmp eq i8* %96, null
  %103 = or i1 %102, %101
  br i1 %103, label %110, label %104

104:                                              ; preds = %89
  %105 = bitcast i8* %96 to %"class.fxcrt::Retainable"*
  %106 = bitcast i8* %96 to void (%"class.fxcrt::Retainable"*)***
  %107 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %107, i64 1
  %109 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %108, align 8
  call void %109(%"class.fxcrt::Retainable"* nonnull %105) #5
  br label %110

110:                                              ; preds = %85, %89, %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #5
  br label %253

111:                                              ; preds = %15
  tail call void @_Z35XFA_DataExporter_RegenerateFormFileP9CXFA_NodeRKN5fxcrt9RetainPtrI18IFX_SeekableStreamEEb(%class.CXFA_Node* %2, %"class.fxcrt::RetainPtr"* dereferenceable(8) %1, i1 zeroext false) #5
  br label %253

112:                                              ; preds = %15
  %113 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %2, i64 0, i32 9, i32 0
  %114 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %113, align 8
  %115 = icmp eq %class.CFX_XMLNode* %114, null
  br i1 %115, label %253, label %116

116:                                              ; preds = %112
  %117 = bitcast %class.CFX_XMLNode* %114 to i32 (%class.CFX_XMLNode*)***
  %118 = load i32 (%class.CFX_XMLNode*)**, i32 (%class.CFX_XMLNode*)*** %117, align 8
  %119 = getelementptr inbounds i32 (%class.CFX_XMLNode*)*, i32 (%class.CFX_XMLNode*)** %118, i64 2
  %120 = load i32 (%class.CFX_XMLNode*)*, i32 (%class.CFX_XMLNode*)** %119, align 8
  %121 = tail call i32 %120(%class.CFX_XMLNode* nonnull %114) #5
  %122 = icmp eq i32 %121, 1
  %123 = bitcast %class.CFX_XMLNode* %114 to %class.CFX_XMLElement*
  br i1 %122, label %124, label %253

124:                                              ; preds = %116
  %125 = bitcast %"class.fxcrt::RetainPtr.28"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #5
  %126 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %class.IFX_SeekableStream*, %class.IFX_SeekableStream** %126, align 8
  %128 = icmp eq %class.IFX_SeekableStream* %127, null
  %129 = getelementptr inbounds %class.IFX_SeekableStream, %class.IFX_SeekableStream* %127, i64 0, i32 1
  %130 = bitcast %class.IFX_SeekableWriteStream.base* %129 to %class.IFX_SeekableWriteStream*
  %131 = select i1 %128, %class.IFX_SeekableWriteStream* null, %class.IFX_SeekableWriteStream* %130
  %132 = ptrtoint %class.IFX_SeekableWriteStream* %131 to i64
  %133 = bitcast %"class.fxcrt::RetainPtr.28"* %7 to i64*
  store i64 %132, i64* %133, align 8
  br i1 %128, label %146, label %134

134:                                              ; preds = %124
  %135 = bitcast %class.IFX_SeekableWriteStream* %131 to i8**
  %136 = load i8*, i8** %135, align 8
  %137 = getelementptr i8, i8* %136, i64 -24
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %class.IFX_SeekableWriteStream* %131 to i8*
  %141 = getelementptr inbounds i8, i8* %140, i64 %139
  %142 = getelementptr inbounds i8, i8* %141, i64 8
  %143 = bitcast i8* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = add nsw i64 %144, 1
  store i64 %145, i64* %143, align 8
  br label %146

146:                                              ; preds = %124, %134
  call void @_ZN14CFX_XMLElement4SaveERKN5fxcrt9RetainPtrI23IFX_SeekableWriteStreamEE(%class.CFX_XMLElement* nonnull %123, %"class.fxcrt::RetainPtr.28"* nonnull dereferenceable(8) %7) #5
  %147 = getelementptr inbounds %"class.fxcrt::RetainPtr.28", %"class.fxcrt::RetainPtr.28"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = load %class.IFX_SeekableWriteStream*, %class.IFX_SeekableWriteStream** %147, align 8
  store %class.IFX_SeekableWriteStream* null, %class.IFX_SeekableWriteStream** %147, align 8
  %149 = icmp eq %class.IFX_SeekableWriteStream* %148, null
  br i1 %149, label %171, label %150

150:                                              ; preds = %146
  %151 = bitcast %class.IFX_SeekableWriteStream* %148 to i8**
  %152 = load i8*, i8** %151, align 8
  %153 = getelementptr i8, i8* %152, i64 -24
  %154 = bitcast i8* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %class.IFX_SeekableWriteStream* %148 to i8*
  %157 = getelementptr inbounds i8, i8* %156, i64 %155
  %158 = getelementptr inbounds i8, i8* %157, i64 8
  %159 = bitcast i8* %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = add nsw i64 %160, -1
  store i64 %161, i64* %159, align 8
  %162 = icmp ne i64 %161, 0
  %163 = icmp eq i8* %157, null
  %164 = or i1 %163, %162
  br i1 %164, label %171, label %165

165:                                              ; preds = %150
  %166 = bitcast i8* %157 to %"class.fxcrt::Retainable"*
  %167 = bitcast i8* %157 to void (%"class.fxcrt::Retainable"*)***
  %168 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %168, i64 1
  %170 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %169, align 8
  call void %170(%"class.fxcrt::Retainable"* nonnull %166) #5
  br label %171

171:                                              ; preds = %146, %150, %165
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #5
  br label %253

172:                                              ; preds = %3
  %173 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %2, i64 0, i32 1, i32 1, i32 1
  %174 = bitcast %"class.cppgc::internal::BasicMember.2"* %173 to %class.CXFA_Node**
  %175 = load %class.CXFA_Node*, %class.CXFA_Node** %174, align 8
  %176 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %175, i64 0, i32 1, i32 1, i32 2
  %177 = bitcast %"class.cppgc::internal::BasicMember.2"* %176 to %class.CXFA_Node**
  %178 = load %class.CXFA_Node*, %class.CXFA_Node** %177, align 8
  %179 = icmp eq %class.CXFA_Node* %178, null
  br i1 %179, label %189, label %180

180:                                              ; preds = %172
  %181 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %2, i64 0, i32 1, i32 1, i32 4
  %182 = bitcast %"class.cppgc::internal::BasicMember.2"* %181 to %class.CXFA_Node**
  br label %186

183:                                              ; preds = %186
  %184 = load %class.CXFA_Node*, %class.CXFA_Node** %182, align 8
  %185 = icmp eq %class.CXFA_Node* %184, null
  br i1 %185, label %189, label %186

186:                                              ; preds = %180, %183
  %187 = phi %class.CXFA_Node* [ %184, %183 ], [ %178, %180 ]
  %188 = icmp eq %class.CXFA_Node* %187, %2
  br i1 %188, label %183, label %189

189:                                              ; preds = %183, %186, %172
  %190 = phi %class.CXFA_Node* [ %2, %172 ], [ %175, %186 ], [ %2, %183 ]
  %191 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %190, i64 0, i32 9, i32 0
  %192 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %191, align 8
  %193 = icmp eq %class.CFX_XMLNode* %192, null
  br i1 %193, label %253, label %194

194:                                              ; preds = %189
  %195 = bitcast %class.CFX_XMLNode* %192 to i32 (%class.CFX_XMLNode*)***
  %196 = load i32 (%class.CFX_XMLNode*)**, i32 (%class.CFX_XMLNode*)*** %195, align 8
  %197 = getelementptr inbounds i32 (%class.CFX_XMLNode*)*, i32 (%class.CFX_XMLNode*)** %196, i64 2
  %198 = load i32 (%class.CFX_XMLNode*)*, i32 (%class.CFX_XMLNode*)** %197, align 8
  %199 = tail call i32 %198(%class.CFX_XMLNode* nonnull %192) #5
  %200 = icmp eq i32 %199, 1
  %201 = bitcast %class.CFX_XMLNode* %192 to %class.CFX_XMLElement*
  br i1 %200, label %202, label %253

202:                                              ; preds = %194
  tail call void @_Z38XFA_DataExporter_DealWithDataGroupNodeP9CXFA_Node(%class.CXFA_Node* %190) #5
  %203 = bitcast %"class.fxcrt::WideString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #5
  call void @_ZN5fxcrt10WideStringC1EPKw(%"class.fxcrt::WideString"* nonnull %8, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.str.2, i64 0, i64 0)) #5
  %204 = bitcast %"class.fxcrt::WideString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #5
  call void @_ZN5fxcrt10WideStringC1EPKw(%"class.fxcrt::WideString"* nonnull %9, i32* getelementptr inbounds ([40 x i32], [40 x i32]* @.str.3, i64 0, i64 0)) #5
  call void @_ZN14CFX_XMLElement12SetAttributeERKN5fxcrt10WideStringES3_(%class.CFX_XMLElement* nonnull %201, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %8, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %9) #5
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #5
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #5
  %205 = bitcast %"class.fxcrt::RetainPtr.28"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205) #5
  %206 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %207 = load %class.IFX_SeekableStream*, %class.IFX_SeekableStream** %206, align 8
  %208 = icmp eq %class.IFX_SeekableStream* %207, null
  %209 = getelementptr inbounds %class.IFX_SeekableStream, %class.IFX_SeekableStream* %207, i64 0, i32 1
  %210 = bitcast %class.IFX_SeekableWriteStream.base* %209 to %class.IFX_SeekableWriteStream*
  %211 = select i1 %208, %class.IFX_SeekableWriteStream* null, %class.IFX_SeekableWriteStream* %210
  %212 = ptrtoint %class.IFX_SeekableWriteStream* %211 to i64
  %213 = bitcast %"class.fxcrt::RetainPtr.28"* %10 to i64*
  store i64 %212, i64* %213, align 8
  br i1 %208, label %226, label %214

214:                                              ; preds = %202
  %215 = bitcast %class.IFX_SeekableWriteStream* %211 to i8**
  %216 = load i8*, i8** %215, align 8
  %217 = getelementptr i8, i8* %216, i64 -24
  %218 = bitcast i8* %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = bitcast %class.IFX_SeekableWriteStream* %211 to i8*
  %221 = getelementptr inbounds i8, i8* %220, i64 %219
  %222 = getelementptr inbounds i8, i8* %221, i64 8
  %223 = bitcast i8* %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = add nsw i64 %224, 1
  store i64 %225, i64* %223, align 8
  br label %226

226:                                              ; preds = %202, %214
  call void @_ZN14CFX_XMLElement4SaveERKN5fxcrt9RetainPtrI23IFX_SeekableWriteStreamEE(%class.CFX_XMLElement* nonnull %201, %"class.fxcrt::RetainPtr.28"* nonnull dereferenceable(8) %10) #5
  %227 = getelementptr inbounds %"class.fxcrt::RetainPtr.28", %"class.fxcrt::RetainPtr.28"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %228 = load %class.IFX_SeekableWriteStream*, %class.IFX_SeekableWriteStream** %227, align 8
  store %class.IFX_SeekableWriteStream* null, %class.IFX_SeekableWriteStream** %227, align 8
  %229 = icmp eq %class.IFX_SeekableWriteStream* %228, null
  br i1 %229, label %251, label %230

230:                                              ; preds = %226
  %231 = bitcast %class.IFX_SeekableWriteStream* %228 to i8**
  %232 = load i8*, i8** %231, align 8
  %233 = getelementptr i8, i8* %232, i64 -24
  %234 = bitcast i8* %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %class.IFX_SeekableWriteStream* %228 to i8*
  %237 = getelementptr inbounds i8, i8* %236, i64 %235
  %238 = getelementptr inbounds i8, i8* %237, i64 8
  %239 = bitcast i8* %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = add nsw i64 %240, -1
  store i64 %241, i64* %239, align 8
  %242 = icmp ne i64 %241, 0
  %243 = icmp eq i8* %237, null
  %244 = or i1 %243, %242
  br i1 %244, label %251, label %245

245:                                              ; preds = %230
  %246 = bitcast i8* %237 to %"class.fxcrt::Retainable"*
  %247 = bitcast i8* %237 to void (%"class.fxcrt::Retainable"*)***
  %248 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %247, align 8
  %249 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %248, i64 1
  %250 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %249, align 8
  call void %250(%"class.fxcrt::Retainable"* nonnull %246) #5
  br label %251

251:                                              ; preds = %226, %230, %245
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #5
  %252 = bitcast %"class.fxcrt::WideString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %252) #5
  call void @_ZN5fxcrt10WideStringC1EPKw(%"class.fxcrt::WideString"* nonnull %11, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.str.2, i64 0, i64 0)) #5
  call void @_ZN14CFX_XMLElement15RemoveAttributeERKN5fxcrt10WideStringE(%class.CFX_XMLElement* nonnull %201, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %11) #5
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252) #5
  br label %253

253:                                              ; preds = %116, %52, %194, %189, %112, %48, %251, %32, %111, %110, %171
  %254 = phi i1 [ true, %171 ], [ true, %110 ], [ true, %111 ], [ true, %32 ], [ true, %251 ], [ false, %52 ], [ false, %48 ], [ false, %116 ], [ false, %112 ], [ false, %194 ], [ false, %189 ]
  ret i1 %254
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_Z38XFA_DataExporter_DealWithDataGroupNodeP9CXFA_Node(%class.CXFA_Node*) local_unnamed_addr #3

declare void @_ZN14CFX_XMLElement4SaveERKN5fxcrt9RetainPtrI23IFX_SeekableWriteStreamEE(%class.CFX_XMLElement*, %"class.fxcrt::RetainPtr.28"* dereferenceable(8)) unnamed_addr #3

declare void @_Z35XFA_DataExporter_RegenerateFormFileP9CXFA_NodeRKN5fxcrt9RetainPtrI18IFX_SeekableStreamEEb(%class.CXFA_Node*, %"class.fxcrt::RetainPtr"* dereferenceable(8), i1 zeroext) local_unnamed_addr #3

declare void @_ZN14CFX_XMLElement12SetAttributeERKN5fxcrt10WideStringES3_(%class.CFX_XMLElement*, %"class.fxcrt::WideString"* dereferenceable(8), %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5fxcrt10WideStringC1EPKw(%"class.fxcrt::WideString"*, i32*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #4

declare void @_ZN14CFX_XMLElement15RemoveAttributeERKN5fxcrt10WideStringE(%class.CFX_XMLElement*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
