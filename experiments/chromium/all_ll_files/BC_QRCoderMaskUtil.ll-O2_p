; ModuleID = '../../third_party/pdfium/fxbarcode/qrcode/BC_QRCoderMaskUtil.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/qrcode/BC_QRCoderMaskUtil.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CBC_CommonByteMatrix = type { i32, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN19CBC_QRCoderMaskUtil21ApplyMaskPenaltyRule1EP20CBC_CommonByteMatrix(%class.CBC_CommonByteMatrix* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::vector"* %6 to i64*
  %8 = load i64, i64* %7, align 8, !noalias !2
  %9 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 2, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !2
  %12 = sub i64 %11, %8
  %13 = icmp sgt i32 %5, 0
  br i1 %13, label %14, label %59

14:                                               ; preds = %1
  %15 = icmp sgt i32 %3, 0
  %16 = inttoptr i64 %8 to i8*
  %17 = sext i32 %3 to i64
  %18 = zext i32 %5 to i64
  %19 = zext i32 %3 to i64
  br label %20

20:                                               ; preds = %26, %14
  %21 = phi i64 [ 0, %14 ], [ %29, %26 ]
  %22 = phi i32 [ 0, %14 ], [ %28, %26 ]
  %23 = phi i32 [ -1, %14 ], [ %27, %26 ]
  br i1 %15, label %24, label %26

24:                                               ; preds = %20
  %25 = mul nsw i64 %21, %17
  br label %31

26:                                               ; preds = %53, %20
  %27 = phi i32 [ %23, %20 ], [ %55, %53 ]
  %28 = phi i32 [ %22, %20 ], [ %56, %53 ]
  %29 = add nuw nsw i64 %21, 1
  %30 = icmp eq i64 %29, %18
  br i1 %30, label %59, label %20

31:                                               ; preds = %53, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %53 ]
  %33 = phi i32 [ %22, %24 ], [ %56, %53 ]
  %34 = phi i32 [ %23, %24 ], [ %55, %53 ]
  %35 = phi i32 [ 0, %24 ], [ %54, %53 ]
  %36 = add nuw nsw i64 %32, %25
  %37 = icmp ugt i64 %12, %36
  br i1 %37, label %39, label %38, !prof !5

38:                                               ; preds = %31
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

39:                                               ; preds = %31
  %40 = getelementptr inbounds i8, i8* %16, i64 %36
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = icmp eq i32 %34, %42
  br i1 %43, label %44, label %53

44:                                               ; preds = %39
  %45 = add nsw i32 %35, 1
  %46 = icmp eq i32 %45, 5
  br i1 %46, label %47, label %49

47:                                               ; preds = %44
  %48 = add nsw i32 %33, 3
  br label %53

49:                                               ; preds = %44
  %50 = icmp sgt i32 %35, 4
  %51 = zext i1 %50 to i32
  %52 = add nsw i32 %33, %51
  br label %53

53:                                               ; preds = %49, %47, %39
  %54 = phi i32 [ 5, %47 ], [ %45, %49 ], [ 1, %39 ]
  %55 = phi i32 [ %34, %47 ], [ %34, %49 ], [ %42, %39 ]
  %56 = phi i32 [ %48, %47 ], [ %52, %49 ], [ %33, %39 ]
  %57 = add nuw nsw i64 %32, 1
  %58 = icmp eq i64 %57, %19
  br i1 %58, label %26, label %31

59:                                               ; preds = %26, %1
  %60 = phi i32 [ 0, %1 ], [ %28, %26 ]
  %61 = icmp sgt i32 %3, 0
  br i1 %61, label %62, label %105

62:                                               ; preds = %59
  %63 = inttoptr i64 %8 to i8*
  %64 = sext i32 %3 to i64
  %65 = zext i32 %3 to i64
  %66 = zext i32 %5 to i64
  br label %67

67:                                               ; preds = %71, %62
  %68 = phi i64 [ 0, %62 ], [ %74, %71 ]
  %69 = phi i32 [ 0, %62 ], [ %73, %71 ]
  %70 = phi i32 [ -1, %62 ], [ %72, %71 ]
  br i1 %13, label %76, label %71

71:                                               ; preds = %99, %67
  %72 = phi i32 [ %70, %67 ], [ %101, %99 ]
  %73 = phi i32 [ %69, %67 ], [ %102, %99 ]
  %74 = add nuw nsw i64 %68, 1
  %75 = icmp eq i64 %74, %65
  br i1 %75, label %105, label %67

76:                                               ; preds = %67, %99
  %77 = phi i64 [ %103, %99 ], [ 0, %67 ]
  %78 = phi i32 [ %102, %99 ], [ %69, %67 ]
  %79 = phi i32 [ %101, %99 ], [ %70, %67 ]
  %80 = phi i32 [ %100, %99 ], [ 0, %67 ]
  %81 = mul nsw i64 %77, %64
  %82 = add nsw i64 %81, %68
  %83 = icmp ugt i64 %12, %82
  br i1 %83, label %85, label %84, !prof !5

84:                                               ; preds = %76
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

85:                                               ; preds = %76
  %86 = getelementptr inbounds i8, i8* %63, i64 %82
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = icmp eq i32 %79, %88
  br i1 %89, label %90, label %99

90:                                               ; preds = %85
  %91 = add nsw i32 %80, 1
  %92 = icmp eq i32 %91, 5
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  %94 = add nsw i32 %78, 3
  br label %99

95:                                               ; preds = %90
  %96 = icmp sgt i32 %80, 4
  %97 = zext i1 %96 to i32
  %98 = add nsw i32 %78, %97
  br label %99

99:                                               ; preds = %95, %93, %85
  %100 = phi i32 [ 5, %93 ], [ %91, %95 ], [ 1, %85 ]
  %101 = phi i32 [ %79, %93 ], [ %79, %95 ], [ %88, %85 ]
  %102 = phi i32 [ %94, %93 ], [ %98, %95 ], [ %78, %85 ]
  %103 = add nuw nsw i64 %77, 1
  %104 = icmp eq i64 %103, %66
  br i1 %104, label %71, label %76

105:                                              ; preds = %71, %59
  %106 = phi i32 [ 0, %59 ], [ %73, %71 ]
  %107 = add nsw i32 %106, %60
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN19CBC_QRCoderMaskUtil21ApplyMaskPenaltyRule2EP20CBC_CommonByteMatrix(%class.CBC_CommonByteMatrix* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::vector"* %2 to i64*
  %4 = load i64, i64* %3, align 8, !noalias !8
  %5 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !8
  %8 = sub i64 %7, %4
  %9 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -1
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %1
  %16 = add i32 %10, -1
  %17 = icmp sgt i32 %16, 0
  %18 = inttoptr i64 %4 to i8*
  %19 = sext i32 %10 to i64
  %20 = zext i32 %13 to i64
  %21 = zext i32 %16 to i64
  br label %22

22:                                               ; preds = %34, %15
  %23 = phi i64 [ 0, %15 ], [ %35, %34 ]
  %24 = phi i32 [ 0, %15 ], [ %36, %34 ]
  br i1 %17, label %27, label %25

25:                                               ; preds = %22
  %26 = add nuw nsw i64 %23, 1
  br label %34

27:                                               ; preds = %22
  %28 = mul nsw i64 %23, %19
  %29 = add nuw nsw i64 %23, 1
  %30 = mul nsw i64 %29, %19
  br label %38

31:                                               ; preds = %34, %1
  %32 = phi i32 [ 0, %1 ], [ %36, %34 ]
  %33 = mul nsw i32 %32, 3
  ret i32 %33

34:                                               ; preds = %72, %25
  %35 = phi i64 [ %26, %25 ], [ %29, %72 ]
  %36 = phi i32 [ %24, %25 ], [ %73, %72 ]
  %37 = icmp eq i64 %35, %20
  br i1 %37, label %31, label %22

38:                                               ; preds = %72, %27
  %39 = phi i64 [ 0, %27 ], [ %74, %72 ]
  %40 = phi i32 [ %24, %27 ], [ %73, %72 ]
  %41 = add nuw nsw i64 %39, %28
  %42 = icmp ugt i64 %8, %41
  br i1 %42, label %44, label %43, !prof !5

43:                                               ; preds = %38
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

44:                                               ; preds = %38
  %45 = getelementptr inbounds i8, i8* %18, i64 %41
  %46 = load i8, i8* %45, align 1
  %47 = add nuw nsw i64 %41, 1
  %48 = icmp ugt i64 %8, %47
  br i1 %48, label %50, label %49, !prof !5

49:                                               ; preds = %44
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

50:                                               ; preds = %44
  %51 = getelementptr inbounds i8, i8* %18, i64 %47
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %46, %52
  br i1 %53, label %54, label %72

54:                                               ; preds = %50
  %55 = add nsw i64 %39, %30
  %56 = icmp ugt i64 %8, %55
  br i1 %56, label %58, label %57, !prof !5

57:                                               ; preds = %54
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

58:                                               ; preds = %54
  %59 = getelementptr inbounds i8, i8* %18, i64 %55
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %46, %60
  br i1 %61, label %62, label %72

62:                                               ; preds = %58
  %63 = add nuw nsw i64 %55, 1
  %64 = icmp ugt i64 %8, %63
  br i1 %64, label %66, label %65, !prof !5

65:                                               ; preds = %62
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

66:                                               ; preds = %62
  %67 = getelementptr inbounds i8, i8* %18, i64 %63
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %46, %68
  %70 = zext i1 %69 to i32
  %71 = add nsw i32 %40, %70
  br label %72

72:                                               ; preds = %66, %58, %50
  %73 = phi i32 [ %40, %58 ], [ %40, %50 ], [ %71, %66 ]
  %74 = add nuw nsw i64 %39, 1
  %75 = icmp eq i64 %74, %21
  br i1 %75, label %34, label %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN19CBC_QRCoderMaskUtil21ApplyMaskPenaltyRule3EP20CBC_CommonByteMatrix(%class.CBC_CommonByteMatrix* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::vector"* %2 to i64*
  %4 = load i64, i64* %3, align 8, !noalias !11
  %5 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !11
  %8 = sub i64 %7, %4
  %9 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %72

14:                                               ; preds = %1
  %15 = icmp sgt i32 %10, 0
  %16 = add nsw i32 %10, -7
  %17 = add nsw i32 %12, -7
  %18 = inttoptr i64 %4 to i8*
  %19 = sext i32 %16 to i64
  %20 = zext i32 %16 to i64
  %21 = sext i32 %10 to i64
  %22 = sext i32 %17 to i64
  %23 = zext i32 %17 to i64
  %24 = sext i32 %12 to i64
  %25 = zext i32 %12 to i64
  %26 = zext i32 %10 to i64
  br label %27

27:                                               ; preds = %74, %14
  %28 = phi i64 [ 0, %14 ], [ %75, %74 ]
  %29 = phi i1 [ true, %14 ], [ %77, %74 ]
  %30 = phi i32 [ 0, %14 ], [ %76, %74 ]
  br i1 %15, label %33, label %31

31:                                               ; preds = %27
  %32 = add nuw nsw i64 %28, 1
  br label %74

33:                                               ; preds = %27
  %34 = icmp ult i64 %28, 7
  %35 = icmp eq i64 %28, 0
  %36 = icmp sge i64 %28, %22
  %37 = and i1 %36, %29
  %38 = icmp eq i64 %28, %23
  %39 = mul nsw i64 %28, %21
  %40 = add nuw nsw i64 %28, 6
  %41 = icmp slt i64 %40, %24
  %42 = add nuw nsw i64 %28, 1
  %43 = mul nsw i64 %42, %21
  %44 = add nuw nsw i64 %28, 2
  %45 = mul nsw i64 %44, %21
  %46 = add nuw nsw i64 %28, 3
  %47 = mul nsw i64 %46, %21
  %48 = add nuw nsw i64 %28, 4
  %49 = mul nsw i64 %48, %21
  %50 = add nuw nsw i64 %28, 5
  %51 = mul nsw i64 %50, %21
  %52 = mul nsw i64 %40, %21
  %53 = add nuw nsw i64 %28, 10
  %54 = icmp slt i64 %53, %24
  %55 = add nuw nsw i64 %28, 7
  %56 = mul nsw i64 %55, %21
  %57 = add nuw nsw i64 %28, 8
  %58 = mul nsw i64 %57, %21
  %59 = add nuw nsw i64 %28, 9
  %60 = mul nsw i64 %59, %21
  %61 = mul nsw i64 %53, %21
  %62 = add nsw i64 %28, -4
  %63 = icmp sgt i64 %62, -1
  %64 = add nsw i64 %28, -1
  %65 = mul nsw i64 %64, %21
  %66 = add nsw i64 %28, -2
  %67 = mul nsw i64 %66, %21
  %68 = add nsw i64 %28, -3
  %69 = mul nsw i64 %68, %21
  %70 = mul nsw i64 %62, %21
  %71 = or i1 %34, %37
  br label %79

72:                                               ; preds = %74, %1
  %73 = phi i32 [ 0, %1 ], [ %76, %74 ]
  ret i32 %73

74:                                               ; preds = %351, %31
  %75 = phi i64 [ %32, %31 ], [ %42, %351 ]
  %76 = phi i32 [ %30, %31 ], [ %352, %351 ]
  %77 = icmp slt i64 %75, %24
  %78 = icmp eq i64 %75, %25
  br i1 %78, label %72, label %27

79:                                               ; preds = %351, %33
  %80 = phi i64 [ 0, %33 ], [ %353, %351 ]
  %81 = phi i32 [ %30, %33 ], [ %352, %351 ]
  %82 = icmp eq i64 %80, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %79
  br i1 %71, label %351, label %92

84:                                               ; preds = %79
  %85 = icmp eq i64 %80, %20
  %86 = and i1 %34, %85
  br i1 %86, label %351, label %87

87:                                               ; preds = %84
  br i1 %35, label %88, label %92

88:                                               ; preds = %87
  %89 = icmp ult i64 %80, 7
  %90 = icmp sge i64 %80, %19
  %91 = or i1 %89, %90
  br i1 %91, label %351, label %95

92:                                               ; preds = %83, %87
  %93 = icmp ult i64 %80, 7
  %94 = and i1 %38, %93
  br i1 %94, label %351, label %95

95:                                               ; preds = %88, %92
  %96 = add nuw nsw i64 %80, 6
  %97 = icmp slt i64 %96, %21
  br i1 %97, label %98, label %225

98:                                               ; preds = %95
  %99 = add nsw i64 %80, %39
  %100 = icmp ugt i64 %8, %99
  br i1 %100, label %102, label %101, !prof !5

101:                                              ; preds = %98
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

102:                                              ; preds = %98
  %103 = getelementptr inbounds i8, i8* %18, i64 %99
  %104 = load i8, i8* %103, align 1
  %105 = icmp eq i8 %104, 1
  br i1 %105, label %106, label %225

106:                                              ; preds = %102
  %107 = add nuw nsw i64 %99, 1
  %108 = icmp ugt i64 %8, %107
  br i1 %108, label %110, label %109, !prof !5

109:                                              ; preds = %106
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

110:                                              ; preds = %106
  %111 = getelementptr inbounds i8, i8* %18, i64 %107
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %225

114:                                              ; preds = %110
  %115 = add nuw nsw i64 %99, 2
  %116 = icmp ugt i64 %8, %115
  br i1 %116, label %118, label %117, !prof !5

117:                                              ; preds = %114
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

118:                                              ; preds = %114
  %119 = getelementptr inbounds i8, i8* %18, i64 %115
  %120 = load i8, i8* %119, align 1
  %121 = icmp eq i8 %120, 1
  br i1 %121, label %122, label %225

122:                                              ; preds = %118
  %123 = add nuw nsw i64 %99, 3
  %124 = icmp ugt i64 %8, %123
  br i1 %124, label %126, label %125, !prof !5

125:                                              ; preds = %122
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

126:                                              ; preds = %122
  %127 = getelementptr inbounds i8, i8* %18, i64 %123
  %128 = load i8, i8* %127, align 1
  %129 = icmp eq i8 %128, 1
  br i1 %129, label %130, label %225

130:                                              ; preds = %126
  %131 = add nuw nsw i64 %99, 4
  %132 = icmp ugt i64 %8, %131
  br i1 %132, label %134, label %133, !prof !5

133:                                              ; preds = %130
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

134:                                              ; preds = %130
  %135 = getelementptr inbounds i8, i8* %18, i64 %131
  %136 = load i8, i8* %135, align 1
  %137 = icmp eq i8 %136, 1
  br i1 %137, label %138, label %225

138:                                              ; preds = %134
  %139 = add nuw nsw i64 %99, 5
  %140 = icmp ugt i64 %8, %139
  br i1 %140, label %142, label %141, !prof !5

141:                                              ; preds = %138
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

142:                                              ; preds = %138
  %143 = getelementptr inbounds i8, i8* %18, i64 %139
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %225

146:                                              ; preds = %142
  %147 = add nuw nsw i64 %99, 6
  %148 = icmp ugt i64 %8, %147
  br i1 %148, label %150, label %149, !prof !5

149:                                              ; preds = %146
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

150:                                              ; preds = %146
  %151 = getelementptr inbounds i8, i8* %18, i64 %147
  %152 = load i8, i8* %151, align 1
  %153 = icmp eq i8 %152, 1
  br i1 %153, label %154, label %225

154:                                              ; preds = %150
  %155 = add nuw nsw i64 %80, 10
  %156 = icmp slt i64 %155, %21
  br i1 %156, label %157, label %189

157:                                              ; preds = %154
  %158 = add nuw nsw i64 %99, 7
  %159 = icmp ugt i64 %8, %158
  br i1 %159, label %161, label %160, !prof !5

160:                                              ; preds = %157
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

161:                                              ; preds = %157
  %162 = getelementptr inbounds i8, i8* %18, i64 %158
  %163 = load i8, i8* %162, align 1
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %165, label %189

165:                                              ; preds = %161
  %166 = add nuw nsw i64 %99, 8
  %167 = icmp ugt i64 %8, %166
  br i1 %167, label %169, label %168, !prof !5

168:                                              ; preds = %165
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

169:                                              ; preds = %165
  %170 = getelementptr inbounds i8, i8* %18, i64 %166
  %171 = load i8, i8* %170, align 1
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %173, label %189

173:                                              ; preds = %169
  %174 = add nuw nsw i64 %99, 9
  %175 = icmp ugt i64 %8, %174
  br i1 %175, label %177, label %176, !prof !5

176:                                              ; preds = %173
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

177:                                              ; preds = %173
  %178 = getelementptr inbounds i8, i8* %18, i64 %174
  %179 = load i8, i8* %178, align 1
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %181, label %189

181:                                              ; preds = %177
  %182 = add nuw nsw i64 %99, 10
  %183 = icmp ugt i64 %8, %182
  br i1 %183, label %185, label %184, !prof !5

184:                                              ; preds = %181
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

185:                                              ; preds = %181
  %186 = getelementptr inbounds i8, i8* %18, i64 %182
  %187 = load i8, i8* %186, align 1
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %223, label %189

189:                                              ; preds = %185, %177, %169, %161, %154
  %190 = icmp ugt i64 %80, 3
  br i1 %190, label %191, label %225

191:                                              ; preds = %189
  %192 = add nsw i64 %99, -1
  %193 = icmp ugt i64 %8, %192
  br i1 %193, label %195, label %194, !prof !5

194:                                              ; preds = %191
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

195:                                              ; preds = %191
  %196 = getelementptr inbounds i8, i8* %18, i64 %192
  %197 = load i8, i8* %196, align 1
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %199, label %225

199:                                              ; preds = %195
  %200 = add nsw i64 %99, -2
  %201 = icmp ugt i64 %8, %200
  br i1 %201, label %203, label %202, !prof !5

202:                                              ; preds = %199
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

203:                                              ; preds = %199
  %204 = getelementptr inbounds i8, i8* %18, i64 %200
  %205 = load i8, i8* %204, align 1
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %207, label %225

207:                                              ; preds = %203
  %208 = add nsw i64 %99, -3
  %209 = icmp ugt i64 %8, %208
  br i1 %209, label %211, label %210, !prof !5

210:                                              ; preds = %207
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

211:                                              ; preds = %207
  %212 = getelementptr inbounds i8, i8* %18, i64 %208
  %213 = load i8, i8* %212, align 1
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %215, label %225

215:                                              ; preds = %211
  %216 = add nsw i64 %99, -4
  %217 = icmp ugt i64 %8, %216
  br i1 %217, label %219, label %218, !prof !5

218:                                              ; preds = %215
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

219:                                              ; preds = %215
  %220 = getelementptr inbounds i8, i8* %18, i64 %216
  %221 = load i8, i8* %220, align 1
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %223, label %225

223:                                              ; preds = %219, %185
  %224 = add nsw i32 %81, 40
  br label %225

225:                                              ; preds = %223, %219, %211, %203, %195, %189, %150, %142, %134, %126, %118, %110, %102, %95
  %226 = phi i32 [ %224, %223 ], [ %81, %219 ], [ %81, %211 ], [ %81, %203 ], [ %81, %195 ], [ %81, %189 ], [ %81, %150 ], [ %81, %142 ], [ %81, %134 ], [ %81, %126 ], [ %81, %118 ], [ %81, %110 ], [ %81, %102 ], [ %81, %95 ]
  br i1 %41, label %227, label %351

227:                                              ; preds = %225
  %228 = add nsw i64 %80, %39
  %229 = icmp ugt i64 %8, %228
  br i1 %229, label %231, label %230, !prof !5

230:                                              ; preds = %227
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

231:                                              ; preds = %227
  %232 = getelementptr inbounds i8, i8* %18, i64 %228
  %233 = load i8, i8* %232, align 1
  %234 = icmp eq i8 %233, 1
  br i1 %234, label %235, label %351

235:                                              ; preds = %231
  %236 = add nsw i64 %80, %43
  %237 = icmp ugt i64 %8, %236
  br i1 %237, label %239, label %238, !prof !5

238:                                              ; preds = %235
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

239:                                              ; preds = %235
  %240 = getelementptr inbounds i8, i8* %18, i64 %236
  %241 = load i8, i8* %240, align 1
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %243, label %351

243:                                              ; preds = %239
  %244 = add nsw i64 %80, %45
  %245 = icmp ugt i64 %8, %244
  br i1 %245, label %247, label %246, !prof !5

246:                                              ; preds = %243
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

247:                                              ; preds = %243
  %248 = getelementptr inbounds i8, i8* %18, i64 %244
  %249 = load i8, i8* %248, align 1
  %250 = icmp eq i8 %249, 1
  br i1 %250, label %251, label %351

251:                                              ; preds = %247
  %252 = add nsw i64 %80, %47
  %253 = icmp ugt i64 %8, %252
  br i1 %253, label %255, label %254, !prof !5

254:                                              ; preds = %251
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

255:                                              ; preds = %251
  %256 = getelementptr inbounds i8, i8* %18, i64 %252
  %257 = load i8, i8* %256, align 1
  %258 = icmp eq i8 %257, 1
  br i1 %258, label %259, label %351

259:                                              ; preds = %255
  %260 = add nsw i64 %80, %49
  %261 = icmp ugt i64 %8, %260
  br i1 %261, label %263, label %262, !prof !5

262:                                              ; preds = %259
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

263:                                              ; preds = %259
  %264 = getelementptr inbounds i8, i8* %18, i64 %260
  %265 = load i8, i8* %264, align 1
  %266 = icmp eq i8 %265, 1
  br i1 %266, label %267, label %351

267:                                              ; preds = %263
  %268 = add nsw i64 %80, %51
  %269 = icmp ugt i64 %8, %268
  br i1 %269, label %271, label %270, !prof !5

270:                                              ; preds = %267
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

271:                                              ; preds = %267
  %272 = getelementptr inbounds i8, i8* %18, i64 %268
  %273 = load i8, i8* %272, align 1
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %275, label %351

275:                                              ; preds = %271
  %276 = add nsw i64 %80, %52
  %277 = icmp ugt i64 %8, %276
  br i1 %277, label %279, label %278, !prof !5

278:                                              ; preds = %275
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

279:                                              ; preds = %275
  %280 = getelementptr inbounds i8, i8* %18, i64 %276
  %281 = load i8, i8* %280, align 1
  %282 = icmp eq i8 %281, 1
  br i1 %282, label %283, label %351

283:                                              ; preds = %279
  br i1 %54, label %284, label %316

284:                                              ; preds = %283
  %285 = add nsw i64 %80, %56
  %286 = icmp ugt i64 %8, %285
  br i1 %286, label %288, label %287, !prof !5

287:                                              ; preds = %284
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

288:                                              ; preds = %284
  %289 = getelementptr inbounds i8, i8* %18, i64 %285
  %290 = load i8, i8* %289, align 1
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %292, label %316

292:                                              ; preds = %288
  %293 = add nsw i64 %80, %58
  %294 = icmp ugt i64 %8, %293
  br i1 %294, label %296, label %295, !prof !5

295:                                              ; preds = %292
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

296:                                              ; preds = %292
  %297 = getelementptr inbounds i8, i8* %18, i64 %293
  %298 = load i8, i8* %297, align 1
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %300, label %316

300:                                              ; preds = %296
  %301 = add nsw i64 %80, %60
  %302 = icmp ugt i64 %8, %301
  br i1 %302, label %304, label %303, !prof !5

303:                                              ; preds = %300
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

304:                                              ; preds = %300
  %305 = getelementptr inbounds i8, i8* %18, i64 %301
  %306 = load i8, i8* %305, align 1
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %308, label %316

308:                                              ; preds = %304
  %309 = add nsw i64 %80, %61
  %310 = icmp ugt i64 %8, %309
  br i1 %310, label %312, label %311, !prof !5

311:                                              ; preds = %308
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

312:                                              ; preds = %308
  %313 = getelementptr inbounds i8, i8* %18, i64 %309
  %314 = load i8, i8* %313, align 1
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %349, label %316

316:                                              ; preds = %312, %304, %296, %288, %283
  br i1 %63, label %317, label %351

317:                                              ; preds = %316
  %318 = add nsw i64 %80, %65
  %319 = icmp ugt i64 %8, %318
  br i1 %319, label %321, label %320, !prof !5

320:                                              ; preds = %317
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

321:                                              ; preds = %317
  %322 = getelementptr inbounds i8, i8* %18, i64 %318
  %323 = load i8, i8* %322, align 1
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %325, label %351

325:                                              ; preds = %321
  %326 = add nsw i64 %80, %67
  %327 = icmp ugt i64 %8, %326
  br i1 %327, label %329, label %328, !prof !5

328:                                              ; preds = %325
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

329:                                              ; preds = %325
  %330 = getelementptr inbounds i8, i8* %18, i64 %326
  %331 = load i8, i8* %330, align 1
  %332 = icmp eq i8 %331, 0
  br i1 %332, label %333, label %351

333:                                              ; preds = %329
  %334 = add nsw i64 %80, %69
  %335 = icmp ugt i64 %8, %334
  br i1 %335, label %337, label %336, !prof !5

336:                                              ; preds = %333
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

337:                                              ; preds = %333
  %338 = getelementptr inbounds i8, i8* %18, i64 %334
  %339 = load i8, i8* %338, align 1
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %341, label %351

341:                                              ; preds = %337
  %342 = add nsw i64 %80, %70
  %343 = icmp ugt i64 %8, %342
  br i1 %343, label %345, label %344, !prof !5

344:                                              ; preds = %341
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

345:                                              ; preds = %341
  %346 = getelementptr inbounds i8, i8* %18, i64 %342
  %347 = load i8, i8* %346, align 1
  %348 = icmp eq i8 %347, 0
  br i1 %348, label %349, label %351

349:                                              ; preds = %345, %312
  %350 = add nsw i32 %226, 40
  br label %351

351:                                              ; preds = %83, %225, %231, %239, %247, %255, %263, %271, %279, %316, %321, %329, %337, %345, %349, %92, %88, %84
  %352 = phi i32 [ %81, %83 ], [ %81, %84 ], [ %81, %88 ], [ %81, %92 ], [ %350, %349 ], [ %226, %345 ], [ %226, %337 ], [ %226, %329 ], [ %226, %321 ], [ %226, %316 ], [ %226, %279 ], [ %226, %271 ], [ %226, %263 ], [ %226, %255 ], [ %226, %247 ], [ %226, %239 ], [ %226, %231 ], [ %226, %225 ]
  %353 = add nuw nsw i64 %80, 1
  %354 = icmp eq i64 %353, %26
  br i1 %354, label %74, label %79
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN19CBC_QRCoderMaskUtil21ApplyMaskPenaltyRule4EP20CBC_CommonByteMatrix(%class.CBC_CommonByteMatrix* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::vector"* %2 to i64*
  %4 = load i64, i64* %3, align 8, !noalias !14
  %5 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !14
  %8 = sub i64 %7, %4
  %9 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %25

14:                                               ; preds = %1
  %15 = icmp sgt i32 %10, 0
  %16 = inttoptr i64 %4 to i8*
  %17 = sext i32 %10 to i64
  %18 = zext i32 %12 to i64
  %19 = zext i32 %10 to i64
  br label %20

20:                                               ; preds = %39, %14
  %21 = phi i64 [ 0, %14 ], [ %41, %39 ]
  %22 = phi i32 [ 0, %14 ], [ %40, %39 ]
  br i1 %15, label %23, label %39

23:                                               ; preds = %20
  %24 = mul nsw i64 %21, %17
  br label %43

25:                                               ; preds = %39, %1
  %26 = phi i32 [ 0, %1 ], [ %40, %39 ]
  %27 = mul nsw i32 %12, %10
  %28 = sitofp i32 %26 to double
  %29 = sitofp i32 %27 to double
  %30 = fdiv double %28, %29
  %31 = fmul double %30, 1.000000e+02
  %32 = fadd double %31, -5.000000e+01
  %33 = fptosi double %32 to i32
  %34 = sdiv i32 %33, 5
  %35 = icmp slt i32 %34, 0
  %36 = sub nsw i32 0, %34
  %37 = select i1 %35, i32 %36, i32 %34
  %38 = mul i32 %37, 50
  ret i32 %38

39:                                               ; preds = %49, %20
  %40 = phi i32 [ %22, %20 ], [ %54, %49 ]
  %41 = add nuw nsw i64 %21, 1
  %42 = icmp eq i64 %41, %18
  br i1 %42, label %25, label %20

43:                                               ; preds = %49, %23
  %44 = phi i64 [ 0, %23 ], [ %55, %49 ]
  %45 = phi i32 [ %22, %23 ], [ %54, %49 ]
  %46 = add nuw nsw i64 %44, %24
  %47 = icmp ugt i64 %8, %46
  br i1 %47, label %49, label %48, !prof !5

48:                                               ; preds = %43
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !7
  unreachable

49:                                               ; preds = %43
  %50 = getelementptr inbounds i8, i8* %16, i64 %46
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 1
  %53 = zext i1 %52 to i32
  %54 = add nsw i32 %45, %53
  %55 = add nuw nsw i64 %44, 1
  %56 = icmp eq i64 %55, %19
  br i1 %56, label %39, label %43
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN19CBC_QRCoderMaskUtil14GetDataMaskBitEiii(i32, i32, i32) local_unnamed_addr #1 align 2 {
  switch i32 %0, label %38 [
    i32 0, label %4
    i32 1, label %7
    i32 2, label %9
    i32 3, label %11
    i32 4, label %14
    i32 5, label %19
    i32 6, label %24
    i32 7, label %29
  ]

4:                                                ; preds = %3
  %5 = add nsw i32 %2, %1
  %6 = and i32 %5, 1
  br label %35

7:                                                ; preds = %3
  %8 = and i32 %2, 1
  br label %35

9:                                                ; preds = %3
  %10 = srem i32 %1, 3
  br label %35

11:                                               ; preds = %3
  %12 = add nsw i32 %2, %1
  %13 = srem i32 %12, 3
  br label %35

14:                                               ; preds = %3
  %15 = lshr i32 %2, 1
  %16 = sdiv i32 %1, 3
  %17 = add i32 %15, %16
  %18 = and i32 %17, 1
  br label %35

19:                                               ; preds = %3
  %20 = mul nsw i32 %2, %1
  %21 = and i32 %20, 1
  %22 = srem i32 %20, 3
  %23 = add nsw i32 %21, %22
  br label %35

24:                                               ; preds = %3
  %25 = mul nsw i32 %2, %1
  %26 = srem i32 %25, 3
  %27 = add i32 %26, %25
  %28 = and i32 %27, 1
  br label %35

29:                                               ; preds = %3
  %30 = mul nsw i32 %2, %1
  %31 = srem i32 %30, 3
  %32 = add nsw i32 %2, %1
  %33 = add i32 %32, %31
  %34 = and i32 %33, 1
  br label %35

35:                                               ; preds = %29, %24, %19, %14, %11, %9, %7, %4
  %36 = phi i32 [ %34, %29 ], [ %28, %24 ], [ %23, %19 ], [ %18, %14 ], [ %13, %11 ], [ %10, %9 ], [ %8, %7 ], [ %6, %4 ]
  %37 = icmp eq i32 %36, 0
  br label %38

38:                                               ; preds = %3, %35
  %39 = phi i1 [ %37, %35 ], [ false, %3 ]
  ret i1 %39
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK20CBC_CommonByteMatrix8GetArrayEv: argument 0"}
!4 = distinct !{!4, !"_ZNK20CBC_CommonByteMatrix8GetArrayEv"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{i32 -2143930776}
!7 = !{i32 -2143930755}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK20CBC_CommonByteMatrix8GetArrayEv: argument 0"}
!10 = distinct !{!10, !"_ZNK20CBC_CommonByteMatrix8GetArrayEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK20CBC_CommonByteMatrix8GetArrayEv: argument 0"}
!13 = distinct !{!13, !"_ZNK20CBC_CommonByteMatrix8GetArrayEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK20CBC_CommonByteMatrix8GetArrayEv: argument 0"}
!16 = distinct !{!16, !"_ZNK20CBC_CommonByteMatrix8GetArrayEv"}
