; ModuleID = '../../third_party/skia/src/core/SkRect.cpp'
source_filename = "../../third_party/skia/src/core/SkRect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@.str = private unnamed_addr constant [31 x i8] c"SkRect::MakeLTRB(%s, /* %f */\0A\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"                 %s, /* %f */\0A\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"                 %s  /* %f */);\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"SkRect::MakeLTRB(%s, %s, %s, %s);\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"../../third_party/skia/src/core/SkRect.cpp\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nocapture, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %5 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %6 = load i32, i32* %4, align 4
  %7 = load i32, i32* %5, align 4
  %8 = icmp slt i32 %6, %7
  %9 = select i1 %8, i32 %7, i32 %6
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %12 = load i32, i32* %10, align 4
  %13 = load i32, i32* %11, align 4
  %14 = icmp slt i32 %12, %13
  %15 = select i1 %14, i32 %13, i32 %12
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* %16, align 4
  %20 = icmp slt i32 %18, %19
  %21 = select i1 %20, i32 %18, i32 %19
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = load i32, i32* %22, align 4
  %26 = icmp slt i32 %24, %25
  %27 = select i1 %26, i32 %24, i32 %25
  %28 = sext i32 %21 to i64
  %29 = sext i32 %9 to i64
  %30 = sub nsw i64 %28, %29
  %31 = sext i32 %27 to i64
  %32 = sext i32 %15 to i64
  %33 = sub nsw i64 %31, %32
  %34 = icmp slt i64 %30, 1
  %35 = icmp slt i64 %33, 1
  %36 = or i1 %34, %35
  br i1 %36, label %46, label %37

37:                                               ; preds = %3
  %38 = or i64 %33, %30
  %39 = add nsw i64 %38, 2147483648
  %40 = icmp ugt i64 %39, 4294967295
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 0
  store i32 %9, i32* %42, align 4
  %43 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 1
  store i32 %15, i32* %43, align 4
  %44 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 2
  store i32 %21, i32* %44, align 4
  %45 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 3
  store i32 %27, i32* %45, align 4
  br label %46

46:                                               ; preds = %3, %37, %41
  %47 = phi i1 [ true, %41 ], [ false, %37 ], [ false, %3 ]
  ret i1 %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nocapture, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %8, label %45

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %10, %12
  br i1 %13, label %14, label %45

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %22, %24
  br i1 %25, label %29, label %26

26:                                               ; preds = %20, %14
  %27 = bitcast %struct.SkIRect* %0 to i8*
  %28 = bitcast %struct.SkIRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 16, i1 false)
  br label %45

29:                                               ; preds = %20
  %30 = icmp slt i32 %4, %16
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  store i32 %4, i32* %15, align 4
  %32 = load i32, i32* %9, align 4
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i32 [ %32, %31 ], [ %10, %29 ]
  %35 = icmp slt i32 %34, %22
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  store i32 %34, i32* %21, align 4
  br label %37

37:                                               ; preds = %36, %33
  %38 = load i32, i32* %5, align 4
  %39 = icmp sgt i32 %38, %18
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  store i32 %38, i32* %17, align 4
  br label %41

41:                                               ; preds = %40, %37
  %42 = load i32, i32* %11, align 4
  %43 = icmp sgt i32 %42, %24
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  store i32 %42, i32* %23, align 4
  br label %45

45:                                               ; preds = %8, %2, %41, %44, %26
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK6SkRect6toQuadEP7SkPoint(%struct.SkRect* nocapture readonly, %struct.SkPoint* nocapture) local_unnamed_addr #2 align 2 {
  %3 = bitcast %struct.SkRect* %0 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 1
  %6 = bitcast float* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = bitcast %struct.SkPoint* %1 to i32*
  store i32 %4, i32* %8, align 4
  %9 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %10 = bitcast float* %9 to i32*
  store i32 %7, i32* %10, align 4
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 2
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = load i32, i32* %6, align 4
  %16 = bitcast %struct.SkPoint* %11 to i32*
  store i32 %14, i32* %16, align 4
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 1
  %18 = bitcast float* %17 to i32*
  store i32 %15, i32* %18, align 4
  %19 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2
  %20 = load i32, i32* %13, align 4
  %21 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 3
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = bitcast %struct.SkPoint* %19 to i32*
  store i32 %20, i32* %24, align 4
  %25 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 1
  %26 = bitcast float* %25 to i32*
  store i32 %23, i32* %26, align 4
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3
  %28 = load i32, i32* %3, align 4
  %29 = load i32, i32* %22, align 4
  %30 = bitcast %struct.SkPoint* %27 to i32*
  store i32 %28, i32* %30, align 4
  %31 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3, i32 1
  %32 = bitcast float* %31 to i32*
  store i32 %29, i32* %32, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* nocapture, %struct.SkPoint* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %4 = icmp slt i32 %2, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = bitcast %struct.SkRect* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 16, i1 false) #7
  br label %109

7:                                                ; preds = %3
  %8 = and i32 %2, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %7
  %11 = bitcast %struct.SkPoint* %1 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  %13 = shufflevector <2 x float> %12, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  br label %17

14:                                               ; preds = %7
  %15 = bitcast %struct.SkPoint* %1 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 1
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i64 [ 2, %14 ], [ 1, %10 ]
  %19 = phi i32 [ -2, %14 ], [ -1, %10 ]
  %20 = phi <4 x float> [ %16, %14 ], [ %13, %10 ]
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %18
  %22 = add nsw i32 %19, %2
  %23 = fmul <4 x float> %20, zeroinitializer
  %24 = icmp eq i32 %22, 0
  br i1 %24, label %90, label %25

25:                                               ; preds = %17
  %26 = add i32 %19, %2
  %27 = add i32 %26, -2
  %28 = lshr i32 %27, 1
  %29 = add nuw i32 %28, 1
  %30 = and i32 %29, 3
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %48, label %32

32:                                               ; preds = %25, %32
  %33 = phi %struct.SkPoint* [ %44, %32 ], [ %21, %25 ]
  %34 = phi i32 [ %45, %32 ], [ %22, %25 ]
  %35 = phi <4 x float> [ %42, %32 ], [ %20, %25 ]
  %36 = phi <4 x float> [ %43, %32 ], [ %20, %25 ]
  %37 = phi <4 x float> [ %41, %32 ], [ %23, %25 ]
  %38 = phi i32 [ %46, %32 ], [ %30, %25 ]
  %39 = bitcast %struct.SkPoint* %33 to <4 x float>*
  %40 = load <4 x float>, <4 x float>* %39, align 1
  %41 = fmul <4 x float> %37, %40
  %42 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %35, <4 x float> %40) #7
  %43 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %36, <4 x float> %40) #7
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %33, i64 2
  %45 = add nsw i32 %34, -2
  %46 = add i32 %38, -1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %32, !llvm.loop !2

48:                                               ; preds = %32, %25
  %49 = phi <4 x float> [ undef, %25 ], [ %41, %32 ]
  %50 = phi <4 x float> [ undef, %25 ], [ %42, %32 ]
  %51 = phi <4 x float> [ undef, %25 ], [ %43, %32 ]
  %52 = phi %struct.SkPoint* [ %21, %25 ], [ %44, %32 ]
  %53 = phi i32 [ %22, %25 ], [ %45, %32 ]
  %54 = phi <4 x float> [ %20, %25 ], [ %42, %32 ]
  %55 = phi <4 x float> [ %20, %25 ], [ %43, %32 ]
  %56 = phi <4 x float> [ %23, %25 ], [ %41, %32 ]
  %57 = icmp ult i32 %27, 6
  br i1 %57, label %90, label %58

58:                                               ; preds = %48, %58
  %59 = phi %struct.SkPoint* [ %87, %58 ], [ %52, %48 ]
  %60 = phi i32 [ %88, %58 ], [ %53, %48 ]
  %61 = phi <4 x float> [ %85, %58 ], [ %54, %48 ]
  %62 = phi <4 x float> [ %86, %58 ], [ %55, %48 ]
  %63 = phi <4 x float> [ %84, %58 ], [ %56, %48 ]
  %64 = bitcast %struct.SkPoint* %59 to <4 x float>*
  %65 = load <4 x float>, <4 x float>* %64, align 1
  %66 = fmul <4 x float> %63, %65
  %67 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %61, <4 x float> %65) #7
  %68 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %62, <4 x float> %65) #7
  %69 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %59, i64 2
  %70 = bitcast %struct.SkPoint* %69 to <4 x float>*
  %71 = load <4 x float>, <4 x float>* %70, align 1
  %72 = fmul <4 x float> %66, %71
  %73 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %67, <4 x float> %71) #7
  %74 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %68, <4 x float> %71) #7
  %75 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %59, i64 4
  %76 = bitcast %struct.SkPoint* %75 to <4 x float>*
  %77 = load <4 x float>, <4 x float>* %76, align 1
  %78 = fmul <4 x float> %72, %77
  %79 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %73, <4 x float> %77) #7
  %80 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %74, <4 x float> %77) #7
  %81 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %59, i64 6
  %82 = bitcast %struct.SkPoint* %81 to <4 x float>*
  %83 = load <4 x float>, <4 x float>* %82, align 1
  %84 = fmul <4 x float> %78, %83
  %85 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %79, <4 x float> %83) #7
  %86 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %80, <4 x float> %83) #7
  %87 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %59, i64 8
  %88 = add nsw i32 %60, -8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %58

90:                                               ; preds = %48, %58, %17
  %91 = phi <4 x float> [ %23, %17 ], [ %49, %48 ], [ %84, %58 ]
  %92 = phi <4 x float> [ %20, %17 ], [ %51, %48 ], [ %86, %58 ]
  %93 = phi <4 x float> [ %20, %17 ], [ %50, %48 ], [ %85, %58 ]
  %94 = fmul <4 x float> %91, zeroinitializer
  %95 = fcmp oeq <4 x float> %94, zeroinitializer
  %96 = bitcast <4 x i1> %95 to i4
  %97 = icmp eq i4 %96, -1
  br i1 %97, label %98, label %107

98:                                               ; preds = %90
  %99 = shufflevector <4 x float> %93, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %100 = shufflevector <4 x float> %99, <4 x float> %92, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %101 = shufflevector <4 x float> %93, <4 x float> %92, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %102 = fcmp olt <4 x float> %100, %101
  %103 = shufflevector <4 x float> %99, <4 x float> %92, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %104 = shufflevector <4 x float> %93, <4 x float> %92, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %105 = select <4 x i1> %102, <4 x float> %103, <4 x float> %104
  %106 = bitcast %struct.SkRect* %0 to <4 x float>*
  store <4 x float> %105, <4 x float>* %106, align 4
  br label %109

107:                                              ; preds = %90
  %108 = bitcast %struct.SkRect* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %108, i8 0, i64 16, i1 false) #7
  br label %109

109:                                              ; preds = %98, %107, %5
  %110 = phi i1 [ true, %5 ], [ false, %107 ], [ true, %98 ]
  ret i1 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkRect16setBoundsNoCheckEPK7SkPointi(%struct.SkRect* nocapture, %struct.SkPoint* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %4 = icmp slt i32 %2, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = bitcast %struct.SkRect* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 16, i1 false) #7
  br label %109

7:                                                ; preds = %3
  %8 = and i32 %2, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %7
  %11 = bitcast %struct.SkPoint* %1 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  %13 = shufflevector <2 x float> %12, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  br label %17

14:                                               ; preds = %7
  %15 = bitcast %struct.SkPoint* %1 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 1
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i64 [ 2, %14 ], [ 1, %10 ]
  %19 = phi i32 [ -2, %14 ], [ -1, %10 ]
  %20 = phi <4 x float> [ %16, %14 ], [ %13, %10 ]
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %18
  %22 = add nsw i32 %19, %2
  %23 = fmul <4 x float> %20, zeroinitializer
  %24 = icmp eq i32 %22, 0
  br i1 %24, label %90, label %25

25:                                               ; preds = %17
  %26 = add i32 %19, %2
  %27 = add i32 %26, -2
  %28 = lshr i32 %27, 1
  %29 = add nuw i32 %28, 1
  %30 = and i32 %29, 3
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %48, label %32

32:                                               ; preds = %25, %32
  %33 = phi %struct.SkPoint* [ %44, %32 ], [ %21, %25 ]
  %34 = phi i32 [ %45, %32 ], [ %22, %25 ]
  %35 = phi <4 x float> [ %42, %32 ], [ %20, %25 ]
  %36 = phi <4 x float> [ %43, %32 ], [ %20, %25 ]
  %37 = phi <4 x float> [ %41, %32 ], [ %23, %25 ]
  %38 = phi i32 [ %46, %32 ], [ %30, %25 ]
  %39 = bitcast %struct.SkPoint* %33 to <4 x float>*
  %40 = load <4 x float>, <4 x float>* %39, align 1
  %41 = fmul <4 x float> %37, %40
  %42 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %35, <4 x float> %40) #7
  %43 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %36, <4 x float> %40) #7
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %33, i64 2
  %45 = add nsw i32 %34, -2
  %46 = add i32 %38, -1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %32, !llvm.loop !4

48:                                               ; preds = %32, %25
  %49 = phi <4 x float> [ undef, %25 ], [ %41, %32 ]
  %50 = phi <4 x float> [ undef, %25 ], [ %42, %32 ]
  %51 = phi <4 x float> [ undef, %25 ], [ %43, %32 ]
  %52 = phi %struct.SkPoint* [ %21, %25 ], [ %44, %32 ]
  %53 = phi i32 [ %22, %25 ], [ %45, %32 ]
  %54 = phi <4 x float> [ %20, %25 ], [ %42, %32 ]
  %55 = phi <4 x float> [ %20, %25 ], [ %43, %32 ]
  %56 = phi <4 x float> [ %23, %25 ], [ %41, %32 ]
  %57 = icmp ult i32 %27, 6
  br i1 %57, label %90, label %58

58:                                               ; preds = %48, %58
  %59 = phi %struct.SkPoint* [ %87, %58 ], [ %52, %48 ]
  %60 = phi i32 [ %88, %58 ], [ %53, %48 ]
  %61 = phi <4 x float> [ %85, %58 ], [ %54, %48 ]
  %62 = phi <4 x float> [ %86, %58 ], [ %55, %48 ]
  %63 = phi <4 x float> [ %84, %58 ], [ %56, %48 ]
  %64 = bitcast %struct.SkPoint* %59 to <4 x float>*
  %65 = load <4 x float>, <4 x float>* %64, align 1
  %66 = fmul <4 x float> %63, %65
  %67 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %61, <4 x float> %65) #7
  %68 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %62, <4 x float> %65) #7
  %69 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %59, i64 2
  %70 = bitcast %struct.SkPoint* %69 to <4 x float>*
  %71 = load <4 x float>, <4 x float>* %70, align 1
  %72 = fmul <4 x float> %66, %71
  %73 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %67, <4 x float> %71) #7
  %74 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %68, <4 x float> %71) #7
  %75 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %59, i64 4
  %76 = bitcast %struct.SkPoint* %75 to <4 x float>*
  %77 = load <4 x float>, <4 x float>* %76, align 1
  %78 = fmul <4 x float> %72, %77
  %79 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %73, <4 x float> %77) #7
  %80 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %74, <4 x float> %77) #7
  %81 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %59, i64 6
  %82 = bitcast %struct.SkPoint* %81 to <4 x float>*
  %83 = load <4 x float>, <4 x float>* %82, align 1
  %84 = fmul <4 x float> %78, %83
  %85 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %79, <4 x float> %83) #7
  %86 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %80, <4 x float> %83) #7
  %87 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %59, i64 8
  %88 = add nsw i32 %60, -8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %58

90:                                               ; preds = %48, %58, %17
  %91 = phi <4 x float> [ %23, %17 ], [ %49, %48 ], [ %84, %58 ]
  %92 = phi <4 x float> [ %20, %17 ], [ %51, %48 ], [ %86, %58 ]
  %93 = phi <4 x float> [ %20, %17 ], [ %50, %48 ], [ %85, %58 ]
  %94 = fmul <4 x float> %91, zeroinitializer
  %95 = fcmp oeq <4 x float> %94, zeroinitializer
  %96 = bitcast <4 x i1> %95 to i4
  %97 = icmp eq i4 %96, -1
  br i1 %97, label %98, label %107

98:                                               ; preds = %90
  %99 = shufflevector <4 x float> %93, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %100 = shufflevector <4 x float> %99, <4 x float> %92, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %101 = shufflevector <4 x float> %93, <4 x float> %92, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %102 = fcmp olt <4 x float> %100, %101
  %103 = shufflevector <4 x float> %99, <4 x float> %92, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %104 = shufflevector <4 x float> %93, <4 x float> %92, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %105 = select <4 x i1> %102, <4 x float> %103, <4 x float> %104
  %106 = bitcast %struct.SkRect* %0 to <4 x float>*
  store <4 x float> %105, <4 x float>* %106, align 4
  br label %109

107:                                              ; preds = %90
  %108 = bitcast %struct.SkRect* %0 to <4 x float>*
  store <4 x float> <float 0x7FF8000000000000, float 0x7FF8000000000000, float 0x7FF8000000000000, float 0x7FF8000000000000>, <4 x float>* %108, align 4
  br label %109

109:                                              ; preds = %98, %5, %107
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nocapture, %struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %4 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 0
  %5 = load float, float* %3, align 4
  %6 = load float, float* %4, align 4
  %7 = fcmp olt float %5, %6
  %8 = select i1 %7, float %6, float %5
  %9 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %10 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 2
  %11 = load float, float* %10, align 4
  %12 = load float, float* %9, align 4
  %13 = fcmp olt float %11, %12
  %14 = select i1 %13, float %11, float %12
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 1
  %17 = load float, float* %15, align 4
  %18 = load float, float* %16, align 4
  %19 = fcmp olt float %17, %18
  %20 = select i1 %19, float %18, float %17
  %21 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %22 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 3
  %23 = load float, float* %22, align 4
  %24 = load float, float* %21, align 4
  %25 = fcmp olt float %23, %24
  %26 = select i1 %25, float %23, float %24
  %27 = fcmp olt float %8, %14
  %28 = fcmp olt float %20, %26
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %2
  store float %8, float* %4, align 4
  store float %20, float* %16, align 4
  store float %14, float* %10, align 4
  store float %26, float* %22, align 4
  br label %31

31:                                               ; preds = %2, %30
  %32 = phi i1 [ true, %30 ], [ false, %2 ]
  ret i1 %32
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN6SkRect9intersectERKS_S1_(%struct.SkRect* nocapture, %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %5 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %6 = load float, float* %4, align 4
  %7 = load float, float* %5, align 4
  %8 = fcmp olt float %6, %7
  %9 = select i1 %8, float %7, float %6
  %10 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %12 = load float, float* %11, align 4
  %13 = load float, float* %10, align 4
  %14 = fcmp olt float %12, %13
  %15 = select i1 %14, float %12, float %13
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %18 = load float, float* %16, align 4
  %19 = load float, float* %17, align 4
  %20 = fcmp olt float %18, %19
  %21 = select i1 %20, float %19, float %18
  %22 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %23 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %24 = load float, float* %23, align 4
  %25 = load float, float* %22, align 4
  %26 = fcmp olt float %24, %25
  %27 = select i1 %26, float %24, float %25
  %28 = fcmp olt float %9, %15
  %29 = fcmp olt float %21, %27
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %36

31:                                               ; preds = %3
  %32 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 0
  store float %9, float* %32, align 4
  %33 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 1
  store float %21, float* %33, align 4
  %34 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 2
  store float %15, float* %34, align 4
  %35 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 3
  store float %27, float* %35, align 4
  br label %36

36:                                               ; preds = %3, %31
  %37 = phi i1 [ true, %31 ], [ false, %3 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkRect4joinERKS_(%struct.SkRect* nocapture, %struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %6 = load float, float* %5, align 4
  %7 = fcmp olt float %4, %6
  br i1 %7, label %8, label %43

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %12 = load float, float* %11, align 4
  %13 = fcmp uge float %10, %12
  br i1 %13, label %43, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 0
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 2
  %18 = load float, float* %17, align 4
  %19 = fcmp olt float %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 3
  %24 = load float, float* %23, align 4
  %25 = fcmp uge float %22, %24
  br i1 %25, label %26, label %29

26:                                               ; preds = %14, %20
  %27 = bitcast %struct.SkRect* %0 to i8*
  %28 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 16, i1 false)
  br label %43

29:                                               ; preds = %20
  %30 = fcmp olt float %4, %16
  %31 = select i1 %30, float* %3, float* %15
  %32 = load float, float* %31, align 4
  store float %32, float* %15, align 4
  %33 = load float, float* %9, align 4
  %34 = fcmp olt float %33, %22
  %35 = select i1 %34, float %33, float %22
  store float %35, float* %21, align 4
  %36 = load float, float* %5, align 4
  %37 = fcmp olt float %18, %36
  %38 = select i1 %37, float* %5, float* %17
  %39 = load float, float* %38, align 4
  store float %39, float* %17, align 4
  %40 = load float, float* %11, align 4
  %41 = fcmp olt float %24, %40
  %42 = select i1 %41, float %40, float %24
  store float %42, float* %23, align 4
  br label %43

43:                                               ; preds = %2, %8, %29, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkRect4dumpEb(%struct.SkRect* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.SkString, align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %class.SkString, align 8
  %9 = zext i1 %1 to i32
  %10 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7
  %11 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %11, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %3) #7
  br i1 %1, label %12, label %39

12:                                               ; preds = %2
  %13 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %14, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %4) #7
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 0
  %16 = load float, float* %15, align 4
  call void @_ZN8SkString5resetEv(%class.SkString* nonnull %4) #7
  call void @_Z14SkAppendScalarP8SkStringf20SkScalarAsStringType(%class.SkString* nonnull %4, float %16, i32 %9) #7
  %17 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %14, align 8
  %18 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %17, i64 0, i32 2
  %19 = load float, float* %15, align 4
  %20 = fpext float %19 to double
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* %18, double %20) #7
  %21 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 1
  %22 = load float, float* %21, align 4
  call void @_ZN8SkString5resetEv(%class.SkString* nonnull %4) #7
  call void @_Z14SkAppendScalarP8SkStringf20SkScalarAsStringType(%class.SkString* nonnull %4, float %22, i32 %9) #7
  %23 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %14, align 8
  %24 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %23, i64 0, i32 2
  %25 = load float, float* %21, align 4
  %26 = fpext float %25 to double
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8* %24, double %26) #7
  %27 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 2
  %28 = load float, float* %27, align 4
  call void @_ZN8SkString5resetEv(%class.SkString* nonnull %4) #7
  call void @_Z14SkAppendScalarP8SkStringf20SkScalarAsStringType(%class.SkString* nonnull %4, float %28, i32 %9) #7
  %29 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %14, align 8
  %30 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %29, i64 0, i32 2
  %31 = load float, float* %27, align 4
  %32 = fpext float %31 to double
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8* %30, double %32) #7
  %33 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 3
  %34 = load float, float* %33, align 4
  call void @_ZN8SkString5resetEv(%class.SkString* nonnull %4) #7
  call void @_Z14SkAppendScalarP8SkStringf20SkScalarAsStringType(%class.SkString* nonnull %4, float %34, i32 %9) #7
  %35 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %14, align 8
  %36 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %35, i64 0, i32 2
  %37 = load float, float* %33, align 4
  %38 = fpext float %37 to double
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i8* %36, double %38) #7
  br label %64

39:                                               ; preds = %2
  %40 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  %41 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %41, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %5) #7
  %42 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #7
  %43 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %43, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %6) #7
  %44 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #7
  %45 = getelementptr inbounds %class.SkString, %class.SkString* %7, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %45, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %7) #7
  %46 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  %47 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %47, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %8) #7
  %48 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 0
  %49 = load float, float* %48, align 4
  call void @_Z14SkAppendScalarP8SkStringf20SkScalarAsStringType(%class.SkString* nonnull %5, float %49, i32 0) #7
  %50 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 1
  %51 = load float, float* %50, align 4
  call void @_Z14SkAppendScalarP8SkStringf20SkScalarAsStringType(%class.SkString* nonnull %6, float %51, i32 0) #7
  %52 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 2
  %53 = load float, float* %52, align 4
  call void @_Z14SkAppendScalarP8SkStringf20SkScalarAsStringType(%class.SkString* nonnull %7, float %53, i32 0) #7
  %54 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 3
  %55 = load float, float* %54, align 4
  call void @_Z14SkAppendScalarP8SkStringf20SkScalarAsStringType(%class.SkString* nonnull %8, float %55, i32 0) #7
  %56 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %41, align 8
  %57 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %56, i64 0, i32 2
  %58 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %43, align 8
  %59 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %58, i64 0, i32 2
  %60 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %45, align 8
  %61 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %60, i64 0, i32 2
  %62 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %47, align 8
  %63 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %62, i64 0, i32 2
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i8* %57, i8* %59, i8* %61, i8* %63) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #7
  br label %64

64:                                               ; preds = %39, %12
  %65 = phi %class.SkString* [ %5, %39 ], [ %4, %12 ]
  %66 = phi i8* [ %40, %39 ], [ %13, %12 ]
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %65) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #7
  %67 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %11, align 8
  %68 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %67, i64 0, i32 2
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0), i32 168, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8* %68) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7
  ret void
}

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #4

declare void @_ZN8SkString6printfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #4

declare void @_ZN8SkString7appendfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkRectPriv8SubtractERK6SkRectS2_PS0_(%struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 2
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 3
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %19 = load float, float* %18, align 4
  %20 = fcmp olt float %5, %13
  %21 = select i1 %20, float %13, float %5
  %22 = fcmp olt float %17, %9
  %23 = select i1 %22, float %17, float %9
  %24 = fcmp olt float %7, %15
  %25 = select i1 %24, float %15, float %7
  %26 = fcmp olt float %19, %11
  %27 = fcmp olt float %21, %23
  %28 = select i1 %26, float %19, float %11
  %29 = fcmp olt float %25, %28
  %30 = and i1 %27, %29
  br i1 %30, label %34, label %31

31:                                               ; preds = %3
  %32 = bitcast %struct.SkRect* %2 to i8*
  %33 = bitcast %struct.SkRect* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 16, i1 false) #7
  br label %100

34:                                               ; preds = %3
  %35 = fsub float %11, %7
  %36 = fsub float %9, %5
  %37 = fsub float %13, %5
  %38 = fmul float %35, %37
  %39 = select i1 %20, float %38, float 0.000000e+00
  %40 = zext i1 %20 to i32
  br i1 %22, label %41, label %45

41:                                               ; preds = %34
  %42 = fsub float %9, %17
  %43 = fmul float %35, %42
  %44 = select i1 %20, i32 2, i32 1
  br label %45

45:                                               ; preds = %41, %34
  %46 = phi float [ %43, %41 ], [ 0.000000e+00, %34 ]
  %47 = phi i32 [ %44, %41 ], [ %40, %34 ]
  br i1 %24, label %48, label %52

48:                                               ; preds = %45
  %49 = fsub float %15, %7
  %50 = fmul float %36, %49
  %51 = add nuw nsw i32 %47, 1
  br label %52

52:                                               ; preds = %48, %45
  %53 = phi float [ %50, %48 ], [ 0.000000e+00, %45 ]
  %54 = phi i32 [ %51, %48 ], [ %47, %45 ]
  br i1 %26, label %55, label %59

55:                                               ; preds = %52
  %56 = fsub float %11, %19
  %57 = fmul float %36, %56
  %58 = add nuw nsw i32 %54, 1
  br label %63

59:                                               ; preds = %52
  %60 = icmp eq i32 %54, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %59
  %62 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 16, i1 false) #7
  br label %100

63:                                               ; preds = %59, %55
  %64 = phi i32 [ %58, %55 ], [ %54, %59 ]
  %65 = phi float [ %57, %55 ], [ 0.000000e+00, %59 ]
  %66 = bitcast %struct.SkRect* %2 to i8*
  %67 = bitcast %struct.SkRect* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67, i64 16, i1 false) #7
  %68 = fcmp ogt float %39, %46
  %69 = fcmp ogt float %39, %53
  %70 = and i1 %68, %69
  %71 = fcmp ogt float %39, %65
  %72 = and i1 %70, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %63
  %74 = bitcast %struct.SkRect* %1 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %77 = bitcast float* %76 to i32*
  store i32 %75, i32* %77, align 4
  br label %98

78:                                               ; preds = %63
  %79 = fcmp ogt float %46, %53
  %80 = fcmp ogt float %46, %65
  %81 = and i1 %79, %80
  br i1 %81, label %82, label %86

82:                                               ; preds = %78
  %83 = bitcast float* %16 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = bitcast %struct.SkRect* %2 to i32*
  store i32 %84, i32* %85, align 4
  br label %98

86:                                               ; preds = %78
  %87 = fcmp ogt float %53, %65
  br i1 %87, label %88, label %93

88:                                               ; preds = %86
  %89 = bitcast float* %14 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %92 = bitcast float* %91 to i32*
  store i32 %90, i32* %92, align 4
  br label %98

93:                                               ; preds = %86
  %94 = bitcast float* %18 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %97 = bitcast float* %96 to i32*
  store i32 %95, i32* %97, align 4
  br label %98

98:                                               ; preds = %93, %88, %82, %73
  %99 = icmp eq i32 %64, 1
  br label %100

100:                                              ; preds = %31, %61, %98
  %101 = phi i1 [ true, %31 ], [ true, %61 ], [ %99, %98 ]
  ret i1 %101
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkRectPriv8SubtractERK7SkIRectS2_PS0_(%struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIRect* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 0
  %5 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %6 = load i32, i32* %4, align 4
  %7 = load i32, i32* %5, align 4
  %8 = icmp sgt i32 %7, %6
  %9 = select i1 %8, i32 %7, i32 %6
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 1
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %12 = load i32, i32* %10, align 4
  %13 = load i32, i32* %11, align 4
  %14 = icmp sgt i32 %13, %12
  %15 = select i1 %14, i32 %13, i32 %12
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 2
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* %16, align 4
  %20 = icmp sgt i32 %19, %18
  %21 = select i1 %20, i32 %18, i32 %19
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 3
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = load i32, i32* %22, align 4
  %26 = icmp sgt i32 %25, %24
  %27 = select i1 %26, i32 %24, i32 %25
  %28 = sext i32 %21 to i64
  %29 = sext i32 %9 to i64
  %30 = sub nsw i64 %28, %29
  %31 = sext i32 %27 to i64
  %32 = sext i32 %15 to i64
  %33 = sub nsw i64 %31, %32
  %34 = icmp slt i64 %30, 1
  %35 = icmp slt i64 %33, 1
  %36 = or i1 %34, %35
  br i1 %36, label %41, label %37

37:                                               ; preds = %3
  %38 = or i64 %33, %30
  %39 = add nsw i64 %38, 2147483648
  %40 = icmp ult i64 %39, 4294967296
  br i1 %40, label %44, label %41

41:                                               ; preds = %37, %3
  %42 = bitcast %struct.SkIRect* %2 to i8*
  %43 = bitcast %struct.SkIRect* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %43, i64 16, i1 false) #7
  br label %103

44:                                               ; preds = %37
  %45 = sub i32 %25, %12
  %46 = sub i32 %19, %6
  %47 = sub nsw i32 %7, %6
  %48 = mul nsw i32 %45, %47
  %49 = select i1 %8, i32 %48, i32 0
  %50 = zext i1 %8 to i32
  br i1 %20, label %51, label %55

51:                                               ; preds = %44
  %52 = sub nsw i32 %19, %18
  %53 = mul nsw i32 %45, %52
  %54 = select i1 %8, i32 2, i32 1
  br label %55

55:                                               ; preds = %51, %44
  %56 = phi i32 [ %53, %51 ], [ 0, %44 ]
  %57 = phi i32 [ %54, %51 ], [ %50, %44 ]
  br i1 %14, label %58, label %62

58:                                               ; preds = %55
  %59 = sub nsw i32 %13, %12
  %60 = mul nsw i32 %46, %59
  %61 = add nuw nsw i32 %57, 1
  br label %62

62:                                               ; preds = %58, %55
  %63 = phi i32 [ %60, %58 ], [ 0, %55 ]
  %64 = phi i32 [ %61, %58 ], [ %57, %55 ]
  br i1 %26, label %65, label %69

65:                                               ; preds = %62
  %66 = sub nsw i32 %25, %24
  %67 = mul nsw i32 %66, %46
  %68 = add nuw nsw i32 %64, 1
  br label %73

69:                                               ; preds = %62
  %70 = icmp eq i32 %64, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %69
  %72 = bitcast %struct.SkIRect* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %72, i8 0, i64 16, i1 false) #7
  br label %103

73:                                               ; preds = %69, %65
  %74 = phi i32 [ %68, %65 ], [ %64, %69 ]
  %75 = phi i32 [ %67, %65 ], [ 0, %69 ]
  %76 = bitcast %struct.SkIRect* %2 to i8*
  %77 = bitcast %struct.SkIRect* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 16, i1 false) #7
  %78 = icmp sgt i32 %49, %56
  %79 = icmp sgt i32 %49, %63
  %80 = and i1 %78, %79
  %81 = icmp sgt i32 %49, %75
  %82 = and i1 %80, %81
  br i1 %82, label %83, label %86

83:                                               ; preds = %73
  %84 = load i32, i32* %5, align 4
  %85 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  store i32 %84, i32* %85, align 4
  br label %101

86:                                               ; preds = %73
  %87 = icmp sgt i32 %56, %63
  %88 = icmp sgt i32 %56, %75
  %89 = and i1 %87, %88
  br i1 %89, label %90, label %93

90:                                               ; preds = %86
  %91 = load i32, i32* %17, align 4
  %92 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  store i32 %91, i32* %92, align 4
  br label %101

93:                                               ; preds = %86
  %94 = icmp sgt i32 %63, %75
  br i1 %94, label %95, label %98

95:                                               ; preds = %93
  %96 = load i32, i32* %11, align 4
  %97 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  store i32 %96, i32* %97, align 4
  br label %101

98:                                               ; preds = %93
  %99 = load i32, i32* %23, align 4
  %100 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  store i32 %99, i32* %100, align 4
  br label %101

101:                                              ; preds = %98, %95, %90, %83
  %102 = icmp eq i32 %74, 1
  br label %103

103:                                              ; preds = %41, %71, %101
  %104 = phi i1 [ true, %41 ], [ true, %71 ], [ %102, %101 ]
  ret i1 %104
}

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse.min.ps(<4 x float>, <4 x float>) #6

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse.max.ps(<4 x float>, <4 x float>) #6

declare void @_ZN8SkString5resetEv(%class.SkString*) local_unnamed_addr #4

declare void @_Z14SkAppendScalarP8SkStringf20SkScalarAsStringType(%class.SkString*, float, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
