; ModuleID = '../../components/favicon/core/favicon_url.cc'
source_filename = "../../components/favicon/core/favicon_url.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.favicon::FaviconURL" = type { %class.GURL, i32, %"class.std::__1::vector" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Size"*, %"class.gfx::Size"*, %"class.std::__1::__compressed_pair.4" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.gfx::Size"* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN7favicon10FaviconURLC1Ev = hidden unnamed_addr alias void (%"struct.favicon::FaviconURL"*), void (%"struct.favicon::FaviconURL"*)* @_ZN7favicon10FaviconURLC2Ev
@_ZN7favicon10FaviconURLC1ERK4GURLN12favicon_base8IconTypeERKNSt3__16vectorIN3gfx4SizeENS6_9allocatorIS9_EEEE = hidden unnamed_addr alias void (%"struct.favicon::FaviconURL"*, %class.GURL*, i32, %"class.std::__1::vector"*), void (%"struct.favicon::FaviconURL"*, %class.GURL*, i32, %"class.std::__1::vector"*)* @_ZN7favicon10FaviconURLC2ERK4GURLN12favicon_base8IconTypeERKNSt3__16vectorIN3gfx4SizeENS6_9allocatorIS9_EEEE
@_ZN7favicon10FaviconURLC1ERKS0_ = hidden unnamed_addr alias void (%"struct.favicon::FaviconURL"*, %"struct.favicon::FaviconURL"*), void (%"struct.favicon::FaviconURL"*, %"struct.favicon::FaviconURL"*)* @_ZN7favicon10FaviconURLC2ERKS0_
@_ZN7favicon10FaviconURLD1Ev = hidden unnamed_addr alias void (%"struct.favicon::FaviconURL"*), void (%"struct.favicon::FaviconURL"*)* @_ZN7favicon10FaviconURLD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7favicon10FaviconURLC2Ev(%"struct.favicon::FaviconURL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1Ev(%class.GURL* %2) #7
  %3 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #7
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7favicon10FaviconURLC2ERK4GURLN12favicon_base8IconTypeERKNSt3__16vectorIN3gfx4SizeENS6_9allocatorIS9_EEEE(%"struct.favicon::FaviconURL"*, %class.GURL* dereferenceable(120), i32, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %5, %class.GURL* dereferenceable(120) %1) #7
  %6 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #7
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %10 = bitcast %"class.gfx::Size"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %44, label %17

17:                                               ; preds = %4
  %18 = icmp ugt i64 %15, 2305843009213693951
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %20) #8
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %14) #9
  %23 = bitcast i8* %22 to %"class.gfx::Size"*
  %24 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 2, i32 0, i32 1
  %25 = bitcast %"class.gfx::Size"** %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast %"class.std::__1::vector"* %7 to i8**
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %23, i64 %15
  %28 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Size"* %27, %"class.gfx::Size"** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %30 = load %"class.gfx::Size"*, %"class.gfx::Size"** %29, align 8
  %31 = load i64, i64* %10, align 8
  %32 = bitcast %"class.gfx::Size"** %24 to i64*
  %33 = ptrtoint i8* %22 to i64
  %34 = ptrtoint %"class.gfx::Size"* %30 to i64
  %35 = sub i64 %31, %34
  %36 = icmp sgt i64 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %21
  %38 = lshr exact i64 %35, 3
  %39 = bitcast %"class.gfx::Size"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 %39, i64 %35, i1 false) #7
  %40 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %23, i64 %38
  %41 = ptrtoint %"class.gfx::Size"* %40 to i64
  br label %42

42:                                               ; preds = %37, %21
  %43 = phi i64 [ %41, %37 ], [ %33, %21 ]
  store i64 %43, i64* %32, align 8
  br label %44

44:                                               ; preds = %4, %42
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7favicon10FaviconURLC2ERKS0_(%"struct.favicon::FaviconURL"*, %"struct.favicon::FaviconURL"* dereferenceable(152)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %1, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #7
  %5 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %1, i64 0, i32 2
  %10 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #7
  %11 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %1, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast %"class.gfx::Size"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %46, label %19

19:                                               ; preds = %2
  %20 = icmp ugt i64 %17, 2305843009213693951
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #8
  unreachable

23:                                               ; preds = %19
  %24 = tail call i8* @_Znwm(i64 %16) #9
  %25 = bitcast i8* %24 to %"class.gfx::Size"*
  %26 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 2, i32 0, i32 1
  %27 = bitcast %"class.gfx::Size"** %26 to i8**
  store i8* %24, i8** %27, align 8
  %28 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %24, i8** %28, align 8
  %29 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %25, i64 %17
  %30 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Size"* %29, %"class.gfx::Size"** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %32 = load %"class.gfx::Size"*, %"class.gfx::Size"** %31, align 8
  %33 = load i64, i64* %12, align 8
  %34 = bitcast %"class.gfx::Size"** %26 to i64*
  %35 = ptrtoint i8* %24 to i64
  %36 = ptrtoint %"class.gfx::Size"* %32 to i64
  %37 = sub i64 %33, %36
  %38 = icmp sgt i64 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %23
  %40 = lshr exact i64 %37, 3
  %41 = bitcast %"class.gfx::Size"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 %41, i64 %37, i1 false) #7
  %42 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %25, i64 %40
  %43 = ptrtoint %"class.gfx::Size"* %42 to i64
  br label %44

44:                                               ; preds = %39, %23
  %45 = phi i64 [ %43, %39 ], [ %35, %23 ]
  store i64 %45, i64* %34, align 8
  br label %46

46:                                               ; preds = %2, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7favicon10FaviconURLD2Ev(%"struct.favicon::FaviconURL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.gfx::Size"*, %"class.gfx::Size"** %2, align 8
  %4 = icmp eq %"class.gfx::Size"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.gfx::Size"* %3 to i64
  %7 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"class.gfx::Size"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.gfx::Size"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.favicon::FaviconURL", %"struct.favicon::FaviconURL"* %0, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %11) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
