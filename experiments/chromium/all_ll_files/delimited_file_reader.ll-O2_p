; ModuleID = '../../third_party/crashpad/crashpad/util/file/delimited_file_reader.cc'
source_filename = "../../third_party/crashpad/crashpad/util/file/delimited_file_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.crashpad::DelimitedFileReader" = type <{ [4096 x i8], %"class.crashpad::FileReaderInterface"*, i16, i16, i8, [3 x i8] }>
%"class.crashpad::FileReaderInterface" = type { %"class.crashpad::FileSeekerInterface" }
%"class.crashpad::FileSeekerInterface" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPKcEERS5_T_SA_ = comdat any

@_ZN8crashpad19DelimitedFileReaderC1EPNS_19FileReaderInterfaceE = hidden unnamed_addr alias void (%"class.crashpad::DelimitedFileReader"*, %"class.crashpad::FileReaderInterface"*), void (%"class.crashpad::DelimitedFileReader"*, %"class.crashpad::FileReaderInterface"*)* @_ZN8crashpad19DelimitedFileReaderC2EPNS_19FileReaderInterfaceE
@_ZN8crashpad19DelimitedFileReaderD1Ev = hidden unnamed_addr alias void (%"class.crashpad::DelimitedFileReader"*), void (%"class.crashpad::DelimitedFileReader"*)* @_ZN8crashpad19DelimitedFileReaderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8crashpad19DelimitedFileReaderC2EPNS_19FileReaderInterfaceE(%"class.crashpad::DelimitedFileReader"* nocapture, %"class.crashpad::FileReaderInterface"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.crashpad::DelimitedFileReader", %"class.crashpad::DelimitedFileReader"* %0, i64 0, i32 1
  store %"class.crashpad::FileReaderInterface"* %1, %"class.crashpad::FileReaderInterface"** %3, align 8
  %4 = getelementptr inbounds %"class.crashpad::DelimitedFileReader", %"class.crashpad::DelimitedFileReader"* %0, i64 0, i32 2
  store i16 0, i16* %4, align 8
  %5 = getelementptr inbounds %"class.crashpad::DelimitedFileReader", %"class.crashpad::DelimitedFileReader"* %0, i64 0, i32 3
  store i16 0, i16* %5, align 2
  %6 = getelementptr inbounds %"class.crashpad::DelimitedFileReader", %"class.crashpad::DelimitedFileReader"* %0, i64 0, i32 4
  store i8 0, i8* %6, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8crashpad19DelimitedFileReaderD2Ev(%"class.crashpad::DelimitedFileReader"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8crashpad19DelimitedFileReader8GetDelimEcPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crashpad::DelimitedFileReader"*, i8 signext, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 16
  %5 = getelementptr inbounds %"class.crashpad::DelimitedFileReader", %"class.crashpad::DelimitedFileReader"* %0, i64 0, i32 4
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  store i8 0, i8* %5, align 4
  br label %98

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 24, i1 false) #8
  %14 = getelementptr inbounds %"class.crashpad::DelimitedFileReader", %"class.crashpad::DelimitedFileReader"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.crashpad::DelimitedFileReader", %"class.crashpad::DelimitedFileReader"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.crashpad::DelimitedFileReader", %"class.crashpad::DelimitedFileReader"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.crashpad::DelimitedFileReader", %"class.crashpad::DelimitedFileReader"* %0, i64 0, i32 0, i64 0
  %18 = ptrtoint %"class.crashpad::DelimitedFileReader"* %0 to i64
  %19 = load i16, i16* %14, align 8
  br label %20

20:                                               ; preds = %69, %9
  %21 = phi i16 [ %74, %69 ], [ %19, %9 ]
  %22 = load i16, i16* %15, align 2
  %23 = icmp eq i16 %21, %22
  br i1 %23, label %24, label %54

24:                                               ; preds = %20
  %25 = load %"class.crashpad::FileReaderInterface"*, %"class.crashpad::FileReaderInterface"** %16, align 8
  %26 = bitcast %"class.crashpad::FileReaderInterface"* %25 to i64 (%"class.crashpad::FileReaderInterface"*, i8*, i64)***
  %27 = load i64 (%"class.crashpad::FileReaderInterface"*, i8*, i64)**, i64 (%"class.crashpad::FileReaderInterface"*, i8*, i64)*** %26, align 8
  %28 = getelementptr inbounds i64 (%"class.crashpad::FileReaderInterface"*, i8*, i64)*, i64 (%"class.crashpad::FileReaderInterface"*, i8*, i64)** %27, i64 3
  %29 = load i64 (%"class.crashpad::FileReaderInterface"*, i8*, i64)*, i64 (%"class.crashpad::FileReaderInterface"*, i8*, i64)** %28, align 8
  %30 = call i64 %29(%"class.crashpad::FileReaderInterface"* %25, i8* %17, i64 4096) #8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %87, label %32

32:                                               ; preds = %24
  %33 = icmp eq i64 %30, 0
  br i1 %33, label %34, label %52

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = load i64, i64* %12, align 8
  %40 = zext i8 %37 to i64
  %41 = select i1 %38, i64 %39, i64 %40
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %91, label %43

43:                                               ; preds = %34
  store i8 1, i8* %5, align 4
  %44 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  %45 = load <2 x i64>, <2 x i64>* %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* nonnull align 16 %10, i64 24, i1 false) #8
  %49 = bitcast %"class.std::__1::basic_string"* %4 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %49, align 16
  store i64 %47, i64* %13, align 16
  %50 = lshr i64 %47, 56
  %51 = trunc i64 %50 to i8
  br label %91

52:                                               ; preds = %32
  %53 = trunc i64 %30 to i16
  store i16 %53, i16* %15, align 2
  store i16 0, i16* %14, align 8
  br label %54

54:                                               ; preds = %52, %20
  %55 = phi i16 [ %53, %52 ], [ %22, %20 ]
  %56 = phi i16 [ 0, %52 ], [ %21, %20 ]
  %57 = zext i16 %56 to i64
  %58 = getelementptr inbounds %"class.crashpad::DelimitedFileReader", %"class.crashpad::DelimitedFileReader"* %0, i64 0, i32 0, i64 %57
  %59 = zext i16 %55 to i64
  %60 = getelementptr inbounds %"class.crashpad::DelimitedFileReader", %"class.crashpad::DelimitedFileReader"* %0, i64 0, i32 0, i64 %59
  %61 = icmp eq i16 %56, %55
  br i1 %61, label %69, label %62

62:                                               ; preds = %54, %66
  %63 = phi i8* [ %67, %66 ], [ %58, %54 ]
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, %1
  br i1 %65, label %69, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds i8, i8* %63, i64 1
  %68 = icmp eq i8* %67, %60
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %66, %54
  %70 = phi i8* [ %58, %54 ], [ %63, %62 ], [ %60, %66 ]
  %71 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPKcEERS5_T_SA_(%"class.std::__1::basic_string"* nonnull %4, i8* %58, i8* %70) #8
  %72 = ptrtoint i8* %70 to i64
  %73 = sub i64 %72, %18
  %74 = trunc i64 %73 to i16
  store i16 %74, i16* %14, align 8
  %75 = icmp eq i8* %70, %60
  br i1 %75, label %20, label %76

76:                                               ; preds = %69
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %4, i8 signext %1) #8
  %77 = load i16, i16* %14, align 8
  %78 = add i16 %77, 1
  store i16 %78, i16* %14, align 8
  %79 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* nonnull align 16 %10, i64 24, i1 false) #8
  %84 = bitcast %"class.std::__1::basic_string"* %4 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 16
  store i64 %82, i64* %13, align 16
  %85 = lshr i64 %82, 56
  %86 = trunc i64 %85 to i8
  br label %91

87:                                               ; preds = %24
  %88 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  br label %91

91:                                               ; preds = %87, %34, %43, %76
  %92 = phi i8 [ %86, %76 ], [ %37, %34 ], [ %51, %43 ], [ %90, %87 ]
  %93 = phi i32 [ 0, %76 ], [ 1, %34 ], [ 0, %43 ], [ -1, %87 ]
  %94 = icmp slt i8 %92, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = load i8*, i8** %11, align 16
  call void @_ZdlPv(i8* %96) #9
  br label %97

97:                                               ; preds = %91, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  br label %98

98:                                               ; preds = %97, %8
  %99 = phi i32 [ 1, %8 ], [ %93, %97 ]
  ret i32 %99
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8crashpad19DelimitedFileReader7GetLineEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crashpad::DelimitedFileReader"*, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = tail call i32 @_ZN8crashpad19DelimitedFileReader8GetDelimEcPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crashpad::DelimitedFileReader"* %0, i8 signext 10, %"class.std::__1::basic_string"* %1)
  ret i32 %3
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPKcEERS5_T_SA_(%"class.std::__1::basic_string"*, i8*, i8*) local_unnamed_addr #2 comdat align 2 {
  %4 = ptrtoint i8* %1 to i64
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = zext i8 %8 to i64
  br label %19

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 9223372036854775807
  %18 = add nsw i64 %17, -1
  br label %19

19:                                               ; preds = %10, %12
  %20 = phi i64 [ %14, %12 ], [ %11, %10 ]
  %21 = phi i64 [ %18, %12 ], [ 22, %10 ]
  %22 = ptrtoint i8* %2 to i64
  %23 = sub i64 %22, %4
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %307, label %25

25:                                               ; preds = %19
  br i1 %9, label %26, label %31

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  br label %34

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %33 = zext i8 %8 to i64
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi i8* [ %28, %26 ], [ %32, %31 ]
  %36 = phi i64 [ %30, %26 ], [ %33, %31 ]
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = icmp ule i8* %35, %1
  %39 = icmp ugt i8* %37, %1
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %176

41:                                               ; preds = %34
  %42 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %46 = icmp ugt i64 %23, -17
  %47 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 24, i1 false)
  br i1 %46, label %48, label %50

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %49) #10
  unreachable

50:                                               ; preds = %41
  %51 = icmp ult i64 %23, 23
  br i1 %51, label %52, label %56

52:                                               ; preds = %50
  %53 = trunc i64 %23 to i8
  %54 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  store i8 %53, i8* %55, align 1
  br label %61

56:                                               ; preds = %50
  %57 = add nuw i64 %23, 16
  %58 = and i64 %57, -16
  %59 = tail call i8* @_Znwm(i64 %58) #9
  store i8* %59, i8** %43, align 8
  %60 = or i64 %58, -9223372036854775808
  store i64 %60, i64* %45, align 8
  store i64 %23, i64* %44, align 8
  br label %61

61:                                               ; preds = %56, %52
  %62 = phi i8* [ %42, %52 ], [ %59, %56 ]
  %63 = icmp eq i8* %1, %2
  br i1 %63, label %159, label %64

64:                                               ; preds = %61
  %65 = ptrtoint i8* %2 to i64
  %66 = sub i64 %65, %4
  %67 = icmp ult i64 %66, 32
  br i1 %67, label %149, label %68

68:                                               ; preds = %64
  %69 = and i64 %66, -32
  %70 = getelementptr i8, i8* %1, i64 %69
  %71 = getelementptr i8, i8* %62, i64 %69
  %72 = add i64 %69, -32
  %73 = lshr exact i64 %72, 5
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 3
  %76 = icmp ult i64 %72, 96
  br i1 %76, label %128, label %77

77:                                               ; preds = %68
  %78 = sub nsw i64 %74, %75
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %125, %79 ]
  %81 = phi i64 [ %78, %77 ], [ %126, %79 ]
  %82 = getelementptr i8, i8* %1, i64 %80
  %83 = getelementptr i8, i8* %62, i64 %80
  %84 = bitcast i8* %82 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1
  %86 = getelementptr i8, i8* %82, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  %88 = load <16 x i8>, <16 x i8>* %87, align 1
  %89 = bitcast i8* %83 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %89, align 1
  %90 = getelementptr i8, i8* %83, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %91, align 1
  %92 = or i64 %80, 32
  %93 = getelementptr i8, i8* %1, i64 %92
  %94 = getelementptr i8, i8* %62, i64 %92
  %95 = bitcast i8* %93 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1
  %97 = getelementptr i8, i8* %93, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 1
  %100 = bitcast i8* %94 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %100, align 1
  %101 = getelementptr i8, i8* %94, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %99, <16 x i8>* %102, align 1
  %103 = or i64 %80, 64
  %104 = getelementptr i8, i8* %1, i64 %103
  %105 = getelementptr i8, i8* %62, i64 %103
  %106 = bitcast i8* %104 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1
  %108 = getelementptr i8, i8* %104, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1
  %111 = bitcast i8* %105 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %111, align 1
  %112 = getelementptr i8, i8* %105, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %113, align 1
  %114 = or i64 %80, 96
  %115 = getelementptr i8, i8* %1, i64 %114
  %116 = getelementptr i8, i8* %62, i64 %114
  %117 = bitcast i8* %115 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1
  %119 = getelementptr i8, i8* %115, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1
  %122 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %122, align 1
  %123 = getelementptr i8, i8* %116, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %124, align 1
  %125 = add i64 %80, 128
  %126 = add i64 %81, -4
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %79, !llvm.loop !3

128:                                              ; preds = %79, %68
  %129 = phi i64 [ 0, %68 ], [ %125, %79 ]
  %130 = icmp eq i64 %75, 0
  br i1 %130, label %147, label %131

131:                                              ; preds = %128, %131
  %132 = phi i64 [ %144, %131 ], [ %129, %128 ]
  %133 = phi i64 [ %145, %131 ], [ %75, %128 ]
  %134 = getelementptr i8, i8* %1, i64 %132
  %135 = getelementptr i8, i8* %62, i64 %132
  %136 = bitcast i8* %134 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1
  %138 = getelementptr i8, i8* %134, i64 16
  %139 = bitcast i8* %138 to <16 x i8>*
  %140 = load <16 x i8>, <16 x i8>* %139, align 1
  %141 = bitcast i8* %135 to <16 x i8>*
  store <16 x i8> %137, <16 x i8>* %141, align 1
  %142 = getelementptr i8, i8* %135, i64 16
  %143 = bitcast i8* %142 to <16 x i8>*
  store <16 x i8> %140, <16 x i8>* %143, align 1
  %144 = add i64 %132, 32
  %145 = add i64 %133, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %131, !llvm.loop !5

147:                                              ; preds = %131, %128
  %148 = icmp eq i64 %66, %69
  br i1 %148, label %159, label %149

149:                                              ; preds = %147, %64
  %150 = phi i8* [ %1, %64 ], [ %70, %147 ]
  %151 = phi i8* [ %62, %64 ], [ %71, %147 ]
  br label %152

152:                                              ; preds = %149, %152
  %153 = phi i8* [ %156, %152 ], [ %150, %149 ]
  %154 = phi i8* [ %157, %152 ], [ %151, %149 ]
  %155 = load i8, i8* %153, align 1
  store i8 %155, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  %157 = getelementptr inbounds i8, i8* %154, i64 1
  %158 = icmp eq i8* %156, %2
  br i1 %158, label %159, label %152, !llvm.loop !7

159:                                              ; preds = %152, %147, %61
  %160 = phi i8* [ %62, %61 ], [ %71, %147 ], [ %157, %152 ]
  store i8 0, i8* %160, align 1
  %161 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %162 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %161, i64 0, i32 1, i32 0
  %163 = load i8, i8* %162, align 1
  %164 = icmp slt i8 %163, 0
  %165 = load i8*, i8** %43, align 8
  %166 = load i64, i64* %44, align 8
  %167 = zext i8 %163 to i64
  %168 = select i1 %164, i8* %165, i8* %42
  %169 = select i1 %164, i64 %166, i64 %167
  %170 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %168, i64 %169) #8
  %171 = load i8, i8* %162, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %159
  %174 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %174) #9
  br label %175

175:                                              ; preds = %159, %173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #8
  br label %307

176:                                              ; preds = %34
  %177 = sub i64 %21, %20
  %178 = icmp ult i64 %177, %23
  br i1 %178, label %179, label %183

179:                                              ; preds = %176
  %180 = add i64 %20, %23
  %181 = sub i64 %180, %21
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %0, i64 %21, i64 %181, i64 %20, i64 %20, i64 0, i64 0) #8
  %182 = load i8, i8* %7, align 1
  br label %183

183:                                              ; preds = %179, %176
  %184 = phi i8 [ %182, %179 ], [ %8, %176 ]
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  br label %191

189:                                              ; preds = %183
  %190 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %191

191:                                              ; preds = %186, %189
  %192 = phi i8* [ %188, %186 ], [ %190, %189 ]
  %193 = getelementptr inbounds i8, i8* %192, i64 %20
  %194 = icmp eq i8* %1, %2
  br i1 %194, label %298, label %195

195:                                              ; preds = %191
  %196 = ptrtoint i8* %2 to i64
  %197 = sub i64 %196, %4
  %198 = icmp ult i64 %197, 32
  br i1 %198, label %288, label %199

199:                                              ; preds = %195
  %200 = sub i64 %20, %4
  %201 = getelementptr i8, i8* %2, i64 %200
  %202 = ptrtoint i8* %201 to i64
  %203 = getelementptr i8, i8* %192, i64 %202
  %204 = icmp ult i8* %193, %2
  %205 = icmp ugt i8* %203, %1
  %206 = and i1 %204, %205
  br i1 %206, label %288, label %207

207:                                              ; preds = %199
  %208 = and i64 %197, -32
  %209 = getelementptr i8, i8* %193, i64 %208
  %210 = getelementptr i8, i8* %1, i64 %208
  %211 = add i64 %208, -32
  %212 = lshr exact i64 %211, 5
  %213 = add nuw nsw i64 %212, 1
  %214 = and i64 %213, 3
  %215 = icmp ult i64 %211, 96
  br i1 %215, label %267, label %216

216:                                              ; preds = %207
  %217 = sub nsw i64 %213, %214
  br label %218

218:                                              ; preds = %218, %216
  %219 = phi i64 [ 0, %216 ], [ %264, %218 ]
  %220 = phi i64 [ %217, %216 ], [ %265, %218 ]
  %221 = getelementptr i8, i8* %193, i64 %219
  %222 = getelementptr i8, i8* %1, i64 %219
  %223 = bitcast i8* %222 to <16 x i8>*
  %224 = load <16 x i8>, <16 x i8>* %223, align 1, !alias.scope !9
  %225 = getelementptr i8, i8* %222, i64 16
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !9
  %228 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %224, <16 x i8>* %228, align 1, !alias.scope !12, !noalias !9
  %229 = getelementptr i8, i8* %221, i64 16
  %230 = bitcast i8* %229 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %230, align 1, !alias.scope !12, !noalias !9
  %231 = or i64 %219, 32
  %232 = getelementptr i8, i8* %193, i64 %231
  %233 = getelementptr i8, i8* %1, i64 %231
  %234 = bitcast i8* %233 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !9
  %236 = getelementptr i8, i8* %233, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !9
  %239 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !12, !noalias !9
  %240 = getelementptr i8, i8* %232, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !12, !noalias !9
  %242 = or i64 %219, 64
  %243 = getelementptr i8, i8* %193, i64 %242
  %244 = getelementptr i8, i8* %1, i64 %242
  %245 = bitcast i8* %244 to <16 x i8>*
  %246 = load <16 x i8>, <16 x i8>* %245, align 1, !alias.scope !9
  %247 = getelementptr i8, i8* %244, i64 16
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !9
  %250 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %246, <16 x i8>* %250, align 1, !alias.scope !12, !noalias !9
  %251 = getelementptr i8, i8* %243, i64 16
  %252 = bitcast i8* %251 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %252, align 1, !alias.scope !12, !noalias !9
  %253 = or i64 %219, 96
  %254 = getelementptr i8, i8* %193, i64 %253
  %255 = getelementptr i8, i8* %1, i64 %253
  %256 = bitcast i8* %255 to <16 x i8>*
  %257 = load <16 x i8>, <16 x i8>* %256, align 1, !alias.scope !9
  %258 = getelementptr i8, i8* %255, i64 16
  %259 = bitcast i8* %258 to <16 x i8>*
  %260 = load <16 x i8>, <16 x i8>* %259, align 1, !alias.scope !9
  %261 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %257, <16 x i8>* %261, align 1, !alias.scope !12, !noalias !9
  %262 = getelementptr i8, i8* %254, i64 16
  %263 = bitcast i8* %262 to <16 x i8>*
  store <16 x i8> %260, <16 x i8>* %263, align 1, !alias.scope !12, !noalias !9
  %264 = add i64 %219, 128
  %265 = add i64 %220, -4
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %218, !llvm.loop !14

267:                                              ; preds = %218, %207
  %268 = phi i64 [ 0, %207 ], [ %264, %218 ]
  %269 = icmp eq i64 %214, 0
  br i1 %269, label %286, label %270

270:                                              ; preds = %267, %270
  %271 = phi i64 [ %283, %270 ], [ %268, %267 ]
  %272 = phi i64 [ %284, %270 ], [ %214, %267 ]
  %273 = getelementptr i8, i8* %193, i64 %271
  %274 = getelementptr i8, i8* %1, i64 %271
  %275 = bitcast i8* %274 to <16 x i8>*
  %276 = load <16 x i8>, <16 x i8>* %275, align 1, !alias.scope !9
  %277 = getelementptr i8, i8* %274, i64 16
  %278 = bitcast i8* %277 to <16 x i8>*
  %279 = load <16 x i8>, <16 x i8>* %278, align 1, !alias.scope !9
  %280 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %276, <16 x i8>* %280, align 1, !alias.scope !12, !noalias !9
  %281 = getelementptr i8, i8* %273, i64 16
  %282 = bitcast i8* %281 to <16 x i8>*
  store <16 x i8> %279, <16 x i8>* %282, align 1, !alias.scope !12, !noalias !9
  %283 = add i64 %271, 32
  %284 = add i64 %272, -1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %270, !llvm.loop !15

286:                                              ; preds = %270, %267
  %287 = icmp eq i64 %197, %208
  br i1 %287, label %298, label %288

288:                                              ; preds = %286, %199, %195
  %289 = phi i8* [ %193, %199 ], [ %193, %195 ], [ %209, %286 ]
  %290 = phi i8* [ %1, %199 ], [ %1, %195 ], [ %210, %286 ]
  br label %291

291:                                              ; preds = %288, %291
  %292 = phi i8* [ %295, %291 ], [ %289, %288 ]
  %293 = phi i8* [ %296, %291 ], [ %290, %288 ]
  %294 = load i8, i8* %293, align 1
  store i8 %294, i8* %292, align 1
  %295 = getelementptr inbounds i8, i8* %292, i64 1
  %296 = getelementptr inbounds i8, i8* %293, i64 1
  %297 = icmp eq i8* %296, %2
  br i1 %297, label %298, label %291, !llvm.loop !16

298:                                              ; preds = %291, %286, %191
  %299 = phi i8* [ %193, %191 ], [ %209, %286 ], [ %295, %291 ]
  store i8 0, i8* %299, align 1
  %300 = add i64 %20, %23
  %301 = load i8, i8* %7, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %305

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %300, i64* %304, align 8
  br label %307

305:                                              ; preds = %298
  %306 = trunc i64 %300 to i8
  store i8 %306, i8* %7, align 1
  br label %307

307:                                              ; preds = %305, %303, %175, %19
  ret %"class.std::__1::basic_string"* %0
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.isvectorized", i32 1}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !8, !4}
!8 = !{!"llvm.loop.unroll.runtime.disable"}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !4}
!15 = distinct !{!15, !6}
!16 = distinct !{!16, !4}
