; ModuleID = '../../components/gcm_driver/crypto/message_payload_parser.cc'
source_filename = "../../components/gcm_driver/crypto/message_payload_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.gcm::MessagePayloadParser" = type { i8, %"class.absl::optional", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN3gcm20MessagePayloadParserC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE = hidden unnamed_addr alias void (%"class.gcm::MessagePayloadParser"*, i8*, i64), void (%"class.gcm::MessagePayloadParser"*, i8*, i64)* @_ZN3gcm20MessagePayloadParserC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE
@_ZN3gcm20MessagePayloadParserD1Ev = hidden unnamed_addr alias void (%"class.gcm::MessagePayloadParser"*), void (%"class.gcm::MessagePayloadParser"*)* @_ZN3gcm20MessagePayloadParserD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gcm20MessagePayloadParserC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.gcm::MessagePayloadParser"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* %1, i8** %8, align 8
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.gcm::MessagePayloadParser", %"class.gcm::MessagePayloadParser"* %0, i64 0, i32 0
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.gcm::MessagePayloadParser", %"class.gcm::MessagePayloadParser"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %"class.gcm::MessagePayloadParser", %"class.gcm::MessagePayloadParser"* %0, i64 0, i32 2
  %14 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %15 = getelementptr inbounds %"class.gcm::MessagePayloadParser", %"class.gcm::MessagePayloadParser"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.gcm::MessagePayloadParser", %"class.gcm::MessagePayloadParser"* %0, i64 0, i32 4
  %17 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %18 = getelementptr inbounds %"class.gcm::MessagePayloadParser", %"class.gcm::MessagePayloadParser"* %0, i64 0, i32 5
  %19 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %20 = icmp ult i64 %2, 104
  %21 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 28, i1 false)
  %22 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 48, i1 false)
  br i1 %20, label %23, label %25

23:                                               ; preds = %3
  %24 = bitcast %"class.absl::optional"* %11 to i64*
  store i64 38654705665, i64* %24, align 4
  br label %165

25:                                               ; preds = %3
  %26 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #5
  %27 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %4, i64 0, i64 16)
  %28 = extractvalue { i8*, i64 } %27, 0
  %29 = extractvalue { i8*, i64 } %27, 1
  %30 = icmp ugt i64 %29, -17
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %32) #6
  unreachable

33:                                               ; preds = %25
  %34 = icmp ult i64 %29, 23
  br i1 %34, label %43, label %35

35:                                               ; preds = %33
  %36 = add nuw i64 %29, 16
  %37 = and i64 %36, -16
  %38 = call i8* @_Znwm(i64 %37) #7
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %38, i8** %39, align 8, !alias.scope !2
  %40 = or i64 %37, -9223372036854775808
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8, !alias.scope !2
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %29, i64* %42, align 8, !alias.scope !2
  br label %48

43:                                               ; preds = %33
  %44 = trunc i64 %29 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1, !alias.scope !2
  %47 = icmp eq i64 %29, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %43, %35
  %49 = phi i8* [ %38, %35 ], [ %26, %43 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* align 1 %28, i64 %29, i1 false) #5
  br label %50

50:                                               ; preds = %43, %48
  %51 = phi i8* [ %26, %43 ], [ %49, %48 ]
  %52 = getelementptr inbounds i8, i8* %51, i64 %29
  store i8 0, i8* %52, align 1
  %53 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #7
  br label %60

60:                                               ; preds = %57, %50
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* nonnull align 8 %26, i64 24, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #5
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %4, i64 16)
  %61 = load i8*, i8** %8, align 8
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = shl nuw nsw i32 %63, 8
  %65 = getelementptr inbounds i8, i8* %61, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = or i32 %64, %67
  %69 = shl nuw nsw i32 %68, 8
  %70 = getelementptr inbounds i8, i8* %61, i64 2
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = or i32 %69, %72
  %74 = shl nuw i32 %73, 8
  %75 = getelementptr inbounds i8, i8* %61, i64 3
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = or i32 %74, %77
  store i32 %78, i32* %15, align 4
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %4, i64 4)
  %79 = load i32, i32* %15, align 8
  %80 = icmp ult i32 %79, 18
  br i1 %80, label %81, label %83

81:                                               ; preds = %60
  %82 = bitcast %"class.absl::optional"* %11 to i64*
  store i64 42949672961, i64* %82, align 4
  br label %165

83:                                               ; preds = %60
  %84 = load i8*, i8** %8, align 8
  %85 = load i8, i8* %84, align 1
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %4, i64 1)
  %86 = icmp eq i8 %85, 65
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = bitcast %"class.absl::optional"* %11 to i64*
  store i64 47244640257, i64* %88, align 4
  br label %165

89:                                               ; preds = %83
  %90 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %4, i64 0) #5
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 4
  br i1 %92, label %95, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.absl::optional"* %11 to i64*
  store i64 51539607553, i64* %94, align 4
  br label %165

95:                                               ; preds = %89
  %96 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #5
  %97 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %4, i64 0, i64 65)
  %98 = extractvalue { i8*, i64 } %97, 0
  %99 = extractvalue { i8*, i64 } %97, 1
  %100 = icmp ugt i64 %99, -17
  br i1 %100, label %101, label %103

101:                                              ; preds = %95
  %102 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %102) #6
  unreachable

103:                                              ; preds = %95
  %104 = icmp ult i64 %99, 23
  br i1 %104, label %113, label %105

105:                                              ; preds = %103
  %106 = add nuw i64 %99, 16
  %107 = and i64 %106, -16
  %108 = call i8* @_Znwm(i64 %107) #7
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %108, i8** %109, align 8, !alias.scope !5
  %110 = or i64 %107, -9223372036854775808
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %110, i64* %111, align 8, !alias.scope !5
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %99, i64* %112, align 8, !alias.scope !5
  br label %118

113:                                              ; preds = %103
  %114 = trunc i64 %99 to i8
  %115 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  store i8 %114, i8* %116, align 1, !alias.scope !5
  %117 = icmp eq i64 %99, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %113, %105
  %119 = phi i8* [ %108, %105 ], [ %96, %113 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %119, i8* align 1 %98, i64 %99, i1 false) #5
  br label %120

120:                                              ; preds = %113, %118
  %121 = phi i8* [ %96, %113 ], [ %119, %118 ]
  %122 = getelementptr inbounds i8, i8* %121, i64 %99
  store i8 0, i8* %122, align 1
  %123 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  call void @_ZdlPv(i8* %129) #7
  br label %130

130:                                              ; preds = %127, %120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %96, i64 24, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #5
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %4, i64 65)
  %131 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #5
  %132 = load i8*, i8** %8, align 8, !noalias !8
  %133 = load i64, i64* %9, align 8, !noalias !8
  %134 = icmp ugt i64 %133, -17
  br i1 %134, label %135, label %137

135:                                              ; preds = %130
  %136 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %136) #6
  unreachable

137:                                              ; preds = %130
  %138 = icmp ult i64 %133, 23
  br i1 %138, label %147, label %139

139:                                              ; preds = %137
  %140 = add nuw i64 %133, 16
  %141 = and i64 %140, -16
  %142 = call i8* @_Znwm(i64 %141) #7
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %142, i8** %143, align 8, !alias.scope !8
  %144 = or i64 %141, -9223372036854775808
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %144, i64* %145, align 8, !alias.scope !8
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %133, i64* %146, align 8, !alias.scope !8
  br label %152

147:                                              ; preds = %137
  %148 = trunc i64 %133 to i8
  %149 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  store i8 %148, i8* %150, align 1, !alias.scope !8
  %151 = icmp eq i64 %133, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %147, %139
  %153 = phi i8* [ %142, %139 ], [ %131, %147 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %153, i8* align 1 %132, i64 %133, i1 false) #5
  br label %154

154:                                              ; preds = %147, %152
  %155 = phi i8* [ %131, %147 ], [ %153, %152 ]
  %156 = getelementptr inbounds i8, i8* %155, i64 %133
  store i8 0, i8* %156, align 1
  %157 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %157, i64 0, i32 1, i32 0
  %159 = load i8, i8* %158, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load i8*, i8** %162, align 8
  call void @_ZdlPv(i8* %163) #7
  br label %164

164:                                              ; preds = %161, %154
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %131, i64 24, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #5
  store i8 1, i8* %10, align 8
  br label %165

165:                                              ; preds = %87, %93, %164, %23, %81
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gcm20MessagePayloadParserD2Ev(%"class.gcm::MessagePayloadParser"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gcm::MessagePayloadParser", %"class.gcm::MessagePayloadParser"* %0, i64 0, i32 5
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.gcm::MessagePayloadParser", %"class.gcm::MessagePayloadParser"* %0, i64 0, i32 4
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #7
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"class.gcm::MessagePayloadParser", %"class.gcm::MessagePayloadParser"* %0, i64 0, i32 2
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #7
  br label %28

28:                                               ; preds = %19, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
