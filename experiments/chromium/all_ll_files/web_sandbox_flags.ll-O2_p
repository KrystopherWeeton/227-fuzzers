; ModuleID = '../../services/network/public/cpp/web_sandbox_flags.cc'
source_filename = "../../services/network/public/cpp/web_sandbox_flags.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.anon.14 = type { i8*, i32 }
%"struct.network::WebSandboxFlagsParsingResult" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.base::BasicStringPiece" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>

$_ZNSt3__16__treeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_4lessIS5_EENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__16__treeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_4lessIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"', '\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"' are invalid sandbox flags.\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"' is an invalid sandbox flag.\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c" \0A\09\0D\0C\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZZN7network12_GLOBAL__N_120ParseWebSandboxTokenERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE5table = internal constant [13 x %struct.anon.14] [%struct.anon.14 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i32 0, i32 0), i32 32768 }, %struct.anon.14 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0), i32 8 }, %struct.anon.14 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i32 0, i32 0), i32 4096 }, %struct.anon.14 { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i32 0, i32 0), i32 1024 }, %struct.anon.14 { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i32 0, i32 0), i32 256 }, %struct.anon.14 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i32 0, i32 0), i32 64 }, %struct.anon.14 { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13, i32 0, i32 0), i32 2048 }, %struct.anon.14 { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i32 0, i32 0), i32 8192 }, %struct.anon.14 { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i32 0, i32 0), i32 4 }, %struct.anon.14 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i32 0, i32 0), i32 144 }, %struct.anon.14 { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.17, i32 0, i32 0), i32 65536 }, %struct.anon.14 { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i32 0, i32 0), i32 32 }, %struct.anon.14 { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.19, i32 0, i32 0), i32 16384 }], align 16
@.str.7 = private unnamed_addr constant [16 x i8] c"allow-downloads\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"allow-forms\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"allow-modals\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"allow-orientation-lock\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"allow-pointer-lock\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"allow-popups\00", align 1
@.str.13 = private unnamed_addr constant [31 x i8] c"allow-popups-to-escape-sandbox\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"allow-presentation\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"allow-same-origin\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"allow-scripts\00", align 1
@.str.17 = private unnamed_addr constant [40 x i8] c"allow-storage-access-by-user-activation\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"allow-top-navigation\00", align 1
@.str.19 = private unnamed_addr constant [40 x i8] c"allow-top-navigation-by-user-activation\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network21ParseWebSandboxPolicyERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_5mojom15WebSandboxFlagsE(%"struct.network::WebSandboxFlagsParsingResult"* noalias nocapture sret, %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #0 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"class.base::BasicStringPiece"*
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca %"class.std::__1::set", align 8
  %11 = alloca [15 x i8], align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = bitcast %"struct.network::WebSandboxFlagsParsingResult"* %0 to i8*
  %15 = bitcast %"struct.network::WebSandboxFlagsParsingResult"* %0 to i64*
  store i64 -6148914691236517206, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.network::WebSandboxFlagsParsingResult", %"struct.network::WebSandboxFlagsParsingResult"* %0, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10
  %18 = getelementptr inbounds %"struct.network::WebSandboxFlagsParsingResult", %"struct.network::WebSandboxFlagsParsingResult"* %0, i64 0, i32 0
  store i32 -1, i32* %18, align 8
  %19 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #10
  %23 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %9, i8* %25, i64 %27, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 5, i32 0, i32 1) #10
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %29 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %31 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %30, align 8
  %32 = icmp eq %"class.base::BasicStringPiece"* %29, %31
  br i1 %32, label %40, label %33

33:                                               ; preds = %3
  %34 = bitcast %"class.logging::CheckError"* %7 to i8*
  %35 = bitcast %"class.base::BasicStringPiece"** %21 to i64*
  %36 = bitcast %"class.std::__1::vector"* %8 to i64*
  %37 = bitcast %"class.base::BasicStringPiece"** %22 to i64*
  br label %51

38:                                               ; preds = %138
  %39 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %28, align 8
  br label %40

40:                                               ; preds = %38, %3
  %41 = phi %"class.base::BasicStringPiece"* [ %39, %38 ], [ %29, %3 ]
  %42 = icmp eq %"class.base::BasicStringPiece"* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = ptrtoint %"class.base::BasicStringPiece"* %41 to i64
  %45 = bitcast %"class.base::BasicStringPiece"** %30 to i64*
  store i64 %44, i64* %45, align 8
  %46 = bitcast %"class.base::BasicStringPiece"* %41 to i8*
  call void @_ZdlPv(i8* %46) #11
  br label %47

47:                                               ; preds = %40, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #10
  %48 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %20, align 8
  %49 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %21, align 8
  %50 = icmp eq %"class.base::BasicStringPiece"* %48, %49
  br i1 %50, label %259, label %141

51:                                               ; preds = %33, %138
  %52 = phi i32 [ -1, %33 ], [ %81, %138 ]
  %53 = phi %"class.base::BasicStringPiece"* [ %29, %33 ], [ %139, %138 ]
  %54 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %53, i64 0, i32 0
  %55 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %53, i64 0, i32 1
  br label %56

56:                                               ; preds = %71, %51
  %57 = phi %struct.anon.14* [ getelementptr inbounds ([13 x %struct.anon.14], [13 x %struct.anon.14]* @_ZZN7network12_GLOBAL__N_120ParseWebSandboxTokenERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE5table, i64 0, i64 0), %51 ], [ %72, %71 ]
  %58 = getelementptr inbounds %struct.anon.14, %struct.anon.14* %57, i64 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = call i64 @strlen(i8* nonnull %59) #10
  br label %65

63:                                               ; preds = %56
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #10
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %65

65:                                               ; preds = %63, %61
  %66 = phi i64 [ 0, %63 ], [ %62, %61 ]
  %67 = load i8*, i8** %54, align 8
  %68 = load i64, i64* %55, align 8
  %69 = call i32 @_ZN4base27CompareCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %59, i64 %66, i8* %67, i64 %68) #10
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %struct.anon.14, %struct.anon.14* %57, i64 1
  %73 = icmp eq %struct.anon.14* %72, getelementptr inbounds ([13 x %struct.anon.14], [13 x %struct.anon.14]* @_ZZN7network12_GLOBAL__N_120ParseWebSandboxTokenERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE5table, i64 1, i64 0)
  br i1 %73, label %77, label %56

74:                                               ; preds = %65
  %75 = getelementptr inbounds %struct.anon.14, %struct.anon.14* %57, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  br label %77

77:                                               ; preds = %71, %74
  %78 = phi i32 [ %76, %74 ], [ 0, %71 ]
  %79 = xor i32 %78, -1
  %80 = or i32 %79, %2
  %81 = and i32 %52, %80
  store i32 %81, i32* %18, align 8
  %82 = icmp eq i32 %80, -1
  br i1 %82, label %83, label %138

83:                                               ; preds = %77
  %84 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %21, align 8
  %85 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %22, align 8
  %86 = icmp eq %"class.base::BasicStringPiece"* %84, %85
  %87 = ptrtoint %"class.base::BasicStringPiece"* %85 to i64
  br i1 %86, label %93, label %88

88:                                               ; preds = %83
  %89 = bitcast %"class.base::BasicStringPiece"* %84 to i8*
  %90 = bitcast %"class.base::BasicStringPiece"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #10
  %91 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %84, i64 1
  %92 = ptrtoint %"class.base::BasicStringPiece"* %91 to i64
  store i64 %92, i64* %35, align 8
  br label %138

93:                                               ; preds = %83
  %94 = ptrtoint %"class.base::BasicStringPiece"* %84 to i64
  %95 = load i64, i64* %36, align 8
  %96 = sub i64 %94, %95
  %97 = ashr exact i64 %96, 4
  %98 = add nsw i64 %97, 1
  %99 = icmp ugt i64 %98, 1152921504606846975
  br i1 %99, label %100, label %102

100:                                              ; preds = %93
  %101 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %101) #12
  unreachable

102:                                              ; preds = %93
  %103 = sub i64 %87, %95
  %104 = ashr exact i64 %103, 4
  %105 = icmp ult i64 %104, 576460752303423487
  br i1 %105, label %106, label %114

106:                                              ; preds = %102
  %107 = ashr exact i64 %103, 3
  %108 = icmp ult i64 %107, %98
  %109 = select i1 %108, i64 %98, i64 %107
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %106
  %112 = icmp ugt i64 %109, 1152921504606846975
  br i1 %112, label %113, label %114

113:                                              ; preds = %111
  call void @abort() #12
  unreachable

114:                                              ; preds = %111, %102
  %115 = phi i64 [ %109, %111 ], [ 1152921504606846975, %102 ]
  %116 = shl i64 %115, 4
  %117 = call i8* @_Znwm(i64 %116) #11
  %118 = bitcast i8* %117 to %"class.base::BasicStringPiece"*
  br label %119

119:                                              ; preds = %114, %106
  %120 = phi i64 [ %115, %114 ], [ 0, %106 ]
  %121 = phi i8* [ %117, %114 ], [ null, %106 ]
  %122 = phi %"class.base::BasicStringPiece"* [ %118, %114 ], [ null, %106 ]
  %123 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %122, i64 %97
  %124 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %122, i64 %120
  %125 = ptrtoint %"class.base::BasicStringPiece"* %124 to i64
  %126 = bitcast %"class.base::BasicStringPiece"* %123 to i8*
  %127 = bitcast %"class.base::BasicStringPiece"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 16, i1 false) #10
  %128 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %123, i64 1
  %129 = ptrtoint %"class.base::BasicStringPiece"* %128 to i64
  %130 = ptrtoint %"class.base::BasicStringPiece"* %122 to i64
  %131 = icmp sgt i64 %96, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %119
  %133 = inttoptr i64 %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %133, i64 %96, i1 false) #10
  br label %134

134:                                              ; preds = %132, %119
  store i64 %130, i64* %36, align 8
  store i64 %129, i64* %35, align 8
  store i64 %125, i64* %37, align 8
  %135 = icmp eq i64 %95, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = inttoptr i64 %95 to i8*
  call void @_ZdlPv(i8* %137) #11
  br label %138

138:                                              ; preds = %136, %134, %88, %77
  %139 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %53, i64 1
  %140 = icmp eq %"class.base::BasicStringPiece"* %139, %31
  br i1 %140, label %38, label %51

141:                                              ; preds = %47
  %142 = bitcast %"class.std::__1::set"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #10
  %143 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %145 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %146 = bitcast %"class.std::__1::__tree_node_base"** %144 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %145, %"class.std::__1::__tree_end_node"** %143, align 8
  %147 = bitcast <2 x i64>* %5 to i8*
  %148 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0
  br label %149

149:                                              ; preds = %157, %141
  %150 = phi %"class.base::BasicStringPiece"* [ %48, %141 ], [ %158, %157 ]
  %151 = bitcast %"class.base::BasicStringPiece"* %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147) #10
  store <2 x i64> %152, <2 x i64>* %5, align 16
  %153 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_4lessIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* nonnull %148, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6) #10
  %154 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %153, 1
  %155 = and i8 %154, 1
  %156 = icmp eq i8 %155, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %147) #10
  br i1 %156, label %160, label %157

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %150, i64 1
  %159 = icmp eq %"class.base::BasicStringPiece"* %158, %49
  br i1 %159, label %194, label %149

160:                                              ; preds = %149
  %161 = ptrtoint %"class.base::BasicStringPiece"* %150 to i64
  %162 = icmp eq %"class.base::BasicStringPiece"* %150, %49
  br i1 %162, label %194, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %150, i64 1
  %165 = icmp eq %"class.base::BasicStringPiece"* %164, %49
  br i1 %165, label %194, label %166

166:                                              ; preds = %163
  %167 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  %168 = bitcast %"class.base::BasicStringPiece"* %4 to i64*
  %169 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  br label %170

170:                                              ; preds = %188, %166
  %171 = phi %"class.base::BasicStringPiece"* [ %164, %166 ], [ %190, %188 ]
  %172 = phi %"class.base::BasicStringPiece"* [ %150, %166 ], [ %171, %188 ]
  %173 = phi i64 [ %161, %166 ], [ %189, %188 ]
  %174 = bitcast %"class.base::BasicStringPiece"* %171 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %172, i64 1, i32 1
  %177 = load i64, i64* %176, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %167) #10
  store i64 %175, i64* %168, align 8
  store i64 %177, i64* %169, align 8
  %178 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_4lessIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* nonnull %148, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4) #10
  %179 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %178, 1
  %180 = and i8 %179, 1
  %181 = icmp eq i8 %180, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %167) #10
  br i1 %181, label %188, label %182

182:                                              ; preds = %170
  %183 = inttoptr i64 %173 to %"class.base::BasicStringPiece"*
  %184 = inttoptr i64 %173 to i8*
  %185 = bitcast %"class.base::BasicStringPiece"* %171 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* align 8 %185, i64 16, i1 false) #10
  %186 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %183, i64 1
  %187 = ptrtoint %"class.base::BasicStringPiece"* %186 to i64
  br label %188

188:                                              ; preds = %182, %170
  %189 = phi i64 [ %173, %170 ], [ %187, %182 ]
  %190 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %171, i64 1
  %191 = icmp eq %"class.base::BasicStringPiece"* %190, %49
  br i1 %191, label %192, label %170

192:                                              ; preds = %188
  %193 = inttoptr i64 %189 to %"class.base::BasicStringPiece"*
  br label %194

194:                                              ; preds = %157, %192, %163, %160
  %195 = phi %"class.base::BasicStringPiece"* [ %49, %160 ], [ %150, %163 ], [ %193, %192 ], [ %49, %157 ]
  %196 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %21, align 8
  %197 = icmp eq %"class.base::BasicStringPiece"* %195, %196
  br i1 %197, label %199, label %198

198:                                              ; preds = %194
  store %"class.base::BasicStringPiece"* %195, %"class.base::BasicStringPiece"** %21, align 8
  br label %199

199:                                              ; preds = %194, %198
  %200 = phi %"class.base::BasicStringPiece"* [ %196, %194 ], [ %195, %198 ]
  %201 = ptrtoint %"class.base::BasicStringPiece"* %200 to i64
  %202 = getelementptr inbounds [15 x i8], [15 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %202)
  %203 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %203) #10
  %204 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %204) #10
  %205 = bitcast %"class.std::__1::vector"* %8 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = bitcast %"class.base::BasicStringPiece"** %21 to i64*
  %208 = sub i64 %201, %206
  %209 = ashr exact i64 %208, 4
  %210 = inttoptr i64 %206 to %"class.base::BasicStringPiece"*
  call void @_ZN4base10JoinStringENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEES5_(%"class.std::__1::basic_string"* nonnull sret %13, i64 %209, %"class.base::BasicStringPiece"* %210, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #10
  %211 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %13, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #10, !noalias !2
  %212 = bitcast %"class.std::__1::basic_string"* %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %203, i8* align 8 %212, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %212, i8 0, i64 24, i1 false) #10, !noalias !2
  %213 = load i64, i64* %207, align 8
  %214 = load i64, i64* %205, align 8
  %215 = sub i64 %213, %214
  %216 = ashr exact i64 %215, 4
  %217 = icmp ugt i64 %216, 1
  %218 = select i1 %217, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0)
  %219 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %12, i8* %218) #10, !noalias !5
  %220 = bitcast %"class.std::__1::basic_string"* %219 to i8*
  %221 = bitcast %"class.std::__1::basic_string"* %219 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %219, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %224 = bitcast i64* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %202, i8* align 8 %224, i64 15, i1 false)
  %225 = getelementptr inbounds i8, i8* %220, i64 23
  %226 = load i8, i8* %225, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %220, i8 0, i64 24, i1 false) #10, !noalias !5
  %227 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %228 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %227, i64 0, i32 1, i32 0
  %229 = load i8, i8* %228, align 1
  %230 = icmp slt i8 %229, 0
  br i1 %230, label %231, label %234

231:                                              ; preds = %199
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load i8*, i8** %232, align 8
  call void @_ZdlPv(i8* %233) #11
  br label %234

234:                                              ; preds = %231, %199
  %235 = getelementptr inbounds %"struct.network::WebSandboxFlagsParsingResult", %"struct.network::WebSandboxFlagsParsingResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = bitcast i8** %235 to i64*
  store i64 %222, i64* %236, align 8
  %237 = getelementptr inbounds %"struct.network::WebSandboxFlagsParsingResult", %"struct.network::WebSandboxFlagsParsingResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %238 = bitcast i64* %237 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %238, i8* nonnull align 8 %202, i64 15, i1 false)
  %239 = getelementptr inbounds i8, i8* %14, i64 31
  store i8 %226, i8* %239, align 1
  %240 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %241 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %240, i64 0, i32 1, i32 0
  %242 = load i8, i8* %241, align 1
  %243 = icmp slt i8 %242, 0
  br i1 %243, label %244, label %247

244:                                              ; preds = %234
  %245 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load i8*, i8** %245, align 8
  call void @_ZdlPv(i8* %246) #11
  br label %247

247:                                              ; preds = %234, %244
  %248 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %249 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %248, i64 0, i32 1, i32 0
  %250 = load i8, i8* %249, align 1
  %251 = icmp slt i8 %250, 0
  br i1 %251, label %252, label %255

252:                                              ; preds = %247
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load i8*, i8** %253, align 8
  call void @_ZdlPv(i8* %254) #11
  br label %255

255:                                              ; preds = %247, %252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %203) #10
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %202)
  %256 = bitcast %"class.std::__1::__tree_end_node"* %145 to %"class.std::__1::__tree_node"**
  %257 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %256, align 8
  call void @_ZNSt3__16__treeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_4lessIS5_EENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* nonnull %148, %"class.std::__1::__tree_node"* %257) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #10
  %258 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %20, align 8
  br label %259

259:                                              ; preds = %255, %47
  %260 = phi %"class.base::BasicStringPiece"* [ %258, %255 ], [ %48, %47 ]
  %261 = icmp eq %"class.base::BasicStringPiece"* %260, null
  br i1 %261, label %266, label %262

262:                                              ; preds = %259
  %263 = ptrtoint %"class.base::BasicStringPiece"* %260 to i64
  %264 = bitcast %"class.base::BasicStringPiece"** %21 to i64*
  store i64 %263, i64* %264, align 8
  %265 = bitcast %"class.base::BasicStringPiece"* %260 to i8*
  call void @_ZdlPv(i8* %265) #11
  br label %266

266:                                              ; preds = %259, %262
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base10JoinStringENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEES5_(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare i32 @_ZN4base27CompareCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_4lessIS5_EENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_4lessIS5_EENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_4lessIS5_EENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_4lessIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %56, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %14

14:                                               ; preds = %52, %8
  %15 = phi %"class.std::__1::__tree_node"* [ %55, %52 ], [ %6, %8 ]
  %16 = phi %"class.std::__1::__tree_node_base"** [ %54, %52 ], [ %9, %8 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %13, %20
  %22 = select i1 %21, i64 %20, i64 %13
  %23 = tail call i32 @memcmp(i8* %11, i8* %18, i64 %22) #10
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %14
  %26 = icmp ult i64 %13, %20
  br i1 %26, label %29, label %35

27:                                               ; preds = %14
  %28 = icmp slt i32 %23, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %27, %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %33, label %52

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %58

35:                                               ; preds = %27, %25
  %36 = tail call i32 @memcmp(i8* %18, i8* %11, i64 %22) #10
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %35
  %39 = icmp eq i64 %20, %13
  %40 = xor i1 %21, true
  %41 = or i1 %39, %40
  br i1 %41, label %50, label %44

42:                                               ; preds = %35
  %43 = icmp slt i32 %36, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %42, %38
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %58

50:                                               ; preds = %42, %38
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %58

52:                                               ; preds = %44, %29
  %53 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %46, %44 ]
  %54 = phi %"class.std::__1::__tree_node_base"** [ %30, %29 ], [ %45, %44 ]
  %55 = bitcast %"class.std::__1::__tree_node_base"* %53 to %"class.std::__1::__tree_node"*
  br label %14

56:                                               ; preds = %3
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %58

58:                                               ; preds = %33, %48, %50, %56
  %59 = phi %"class.std::__1::__tree_end_node"* [ %4, %56 ], [ %34, %33 ], [ %51, %50 ], [ %49, %48 ]
  %60 = phi %"class.std::__1::__tree_node_base"** [ %57, %56 ], [ %30, %33 ], [ %16, %50 ], [ %45, %48 ]
  %61 = bitcast %"class.std::__1::__tree_node_base"** %60 to %"class.std::__1::__tree_node"**
  %62 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node"* %62, null
  br i1 %63, label %64, label %89

64:                                               ; preds = %58
  %65 = tail call i8* @_Znwm(i64 48) #11, !noalias !8
  %66 = getelementptr inbounds i8, i8* %65, i64 32
  %67 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 16, i1 false) #10, !noalias !8
  %68 = bitcast i8* %65 to %"class.std::__1::__tree_node"*
  %69 = bitcast i8* %65 to %"class.std::__1::__tree_node_base"*
  %70 = getelementptr inbounds i8, i8* %65, i64 16
  %71 = bitcast i8* %70 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %59, %"class.std::__1::__tree_end_node"** %71, align 8
  %72 = bitcast %"class.std::__1::__tree_node_base"** %60 to i8**
  store i8* %65, i8** %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %74 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node_base"* %76, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %64
  %79 = ptrtoint %"class.std::__1::__tree_node_base"* %76 to i64
  %80 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %79, i64* %80, align 8
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  br label %82

82:                                               ; preds = %78, %64
  %83 = phi %"class.std::__1::__tree_node_base"* [ %69, %64 ], [ %81, %78 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %84, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %85, %"class.std::__1::__tree_node_base"* %83) #10
  %86 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, 1
  store i64 %88, i64* %86, align 8
  br label %89

89:                                               ; preds = %82, %58
  %90 = phi i8 [ 1, %82 ], [ 0, %58 ]
  %91 = phi %"class.std::__1::__tree_node"* [ %68, %82 ], [ %62, %58 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %91, i64 0, i32 0, i32 0
  %93 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %92, 0
  %94 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %93, i8 %90, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %94
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !11
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !11
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !11
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_4lessIS5_EENS_9allocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_4lessIS5_EENS_9allocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_"}
!11 = !{i8 0, i8 2}
