; ModuleID = '../../gpu/vulkan/x/vulkan_implementation_x11.cc'
source_filename = "../../gpu/vulkan/x/vulkan_implementation_x11.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::VulkanImplementationX11" = type { %"class.gpu::VulkanImplementation.base", i8, [5 x i8], %"class.gpu::VulkanInstance" }
%"class.gpu::VulkanImplementation.base" = type <{ i32 (...)**, i8, i8 }>
%"class.gpu::VulkanInstance" = type <{ %"class.gpu::VulkanInfo", %struct.VkInstance_T*, i8, [7 x i8] }>
%"class.gpu::VulkanInfo" = type { i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector.8", %"class.std::__1::vector.15" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.VkExtensionProperties*, %struct.VkExtensionProperties*, %"class.std::__1::__compressed_pair" }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.VkExtensionProperties* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i8**, i8**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i8** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.10" }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %struct.VkLayerProperties* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.std::__1::__compressed_pair.24" }
%"class.gpu::VulkanPhysicalDeviceInfo" = type { %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %"class.std::__1::vector", %struct.VkPhysicalDeviceFeatures, i8, i8, %"class.std::__1::vector.17" }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.19" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.gpu::VulkanPhysicalDeviceInfo"* }
%struct.VkInstance_T = type opaque
%"class.gpu::VulkanImplementation" = type <{ i32 (...)**, i8, i8, [6 x i8] }>
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.206", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.223", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.269", %"class.base::circular_deque", %"class.base::ObserverList.275", %"class.x11::Event"*, %"class.base::circular_deque.279", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.291" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.188", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.200" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.216" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.209", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.211" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.216" = type <{ %"class.std::__1::vector.209", %"class.base::LinkedList.217", i64, i32, [4 x i8] }>
%"class.base::LinkedList.217" = type { %"class.base::LinkNode.218" }
%"class.base::LinkNode.218" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.234", %"class.std::__1::vector.241" }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.236" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.243" }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.245" }
%"class.std::__1::vector.245" = type { %"class.std::__1::__vector_base.246" }
%"class.std::__1::__vector_base.246" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.262" }
%"class.std::__1::vector.262" = type { %"class.std::__1::__vector_base.263" }
%"class.std::__1::__vector_base.263" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.264" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.275" = type <{ %"class.std::__1::vector.209", %"class.base::LinkedList.276", i64, i32, [4 x i8] }>
%"class.base::LinkedList.276" = type { %"class.base::LinkNode.277" }
%"class.base::LinkNode.277" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.279" = type { %"class.base::internal::VectorBuffer.280", i64, i64 }
%"class.base::internal::VectorBuffer.280" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.282, %"class.std::__1::unique_ptr.284" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.281" }
%"struct.std::__1::__atomic_base.281" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.282 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.283", [4 x i8] }>
%"class.base::RefCountedThreadSafe.283" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.290 }
%union.anon.290 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.291" = type { %"class.base::internal::CallbackBase" }
%"struct.base::NativeLibraryLoadError" = type { %"class.std::__1::basic_string" }
%"class.absl::optional.292" = type { %"class.absl::optional_internal::optional_data.293" }
%"class.absl::optional_internal::optional_data.293" = type { %"class.absl::optional_internal::optional_data_base.294" }
%"class.absl::optional_internal::optional_data_base.294" = type { %"class.absl::optional_internal::optional_data_dtor_base.295" }
%"class.absl::optional_internal::optional_data_dtor_base.295" = type { i8, %union.anon.296 }
%union.anon.296 = type { %"class.ui::ScopedUnsetDisplay" }
%"class.ui::ScopedUnsetDisplay" = type { %"class.absl::optional.297" }
%"class.absl::optional.297" = type { %"class.absl::optional_internal::optional_data.298" }
%"class.absl::optional_internal::optional_data.298" = type { %"class.absl::optional_internal::optional_data_base.299" }
%"class.absl::optional_internal::optional_data_base.299" = type { %"class.absl::optional_internal::optional_data_dtor_base.300" }
%"class.absl::optional_internal::optional_data_dtor_base.300" = type { i8, %union.anon.301 }
%union.anon.301 = type { %"class.std::__1::basic_string" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.gpu::VulkanFunctionPointers" = type { i8*, %"class.gpu::VulkanFunctionPointers::VulkanFunction", %"class.gpu::VulkanFunctionPointers::VulkanFunction.306", %"class.gpu::VulkanFunctionPointers::VulkanFunction.307", %"class.gpu::VulkanFunctionPointers::VulkanFunction.308", %"class.gpu::VulkanFunctionPointers::VulkanFunction.309", %"class.gpu::VulkanFunctionPointers::VulkanFunction.310", %"class.gpu::VulkanFunctionPointers::VulkanFunction.311", %"class.gpu::VulkanFunctionPointers::VulkanFunction.312", %"class.gpu::VulkanFunctionPointers::VulkanFunction.313", %"class.gpu::VulkanFunctionPointers::VulkanFunction.314", %"class.gpu::VulkanFunctionPointers::VulkanFunction.315", %"class.gpu::VulkanFunctionPointers::VulkanFunction.316", %"class.gpu::VulkanFunctionPointers::VulkanFunction.317", %"class.gpu::VulkanFunctionPointers::VulkanFunction.318", %"class.gpu::VulkanFunctionPointers::VulkanFunction.319", %"class.gpu::VulkanFunctionPointers::VulkanFunction.320", %"class.gpu::VulkanFunctionPointers::VulkanFunction.321", %"class.gpu::VulkanFunctionPointers::VulkanFunction.322", %"class.gpu::VulkanFunctionPointers::VulkanFunction.323", %"class.gpu::VulkanFunctionPointers::VulkanFunction.324", %"class.gpu::VulkanFunctionPointers::VulkanFunction.325", %"class.gpu::VulkanFunctionPointers::VulkanFunction.326", %"class.gpu::VulkanFunctionPointers::VulkanFunction.327", %"class.gpu::VulkanFunctionPointers::VulkanFunction.328", %"class.gpu::VulkanFunctionPointers::VulkanFunction.329", %"class.gpu::VulkanFunctionPointers::VulkanFunction.330", %"class.gpu::VulkanFunctionPointers::VulkanFunction.331", %"class.gpu::VulkanFunctionPointers::VulkanFunction.332", %"class.gpu::VulkanFunctionPointers::VulkanFunction.333", %"class.gpu::VulkanFunctionPointers::VulkanFunction.334", %"class.gpu::VulkanFunctionPointers::VulkanFunction.335", %"class.gpu::VulkanFunctionPointers::VulkanFunction.336", %"class.gpu::VulkanFunctionPointers::VulkanFunction.337", %"class.gpu::VulkanFunctionPointers::VulkanFunction.338", %"class.gpu::VulkanFunctionPointers::VulkanFunction.339", %"class.gpu::VulkanFunctionPointers::VulkanFunction.340", %"class.gpu::VulkanFunctionPointers::VulkanFunction.341", %"class.gpu::VulkanFunctionPointers::VulkanFunction.342", %"class.gpu::VulkanFunctionPointers::VulkanFunction.343", %"class.gpu::VulkanFunctionPointers::VulkanFunction.344", %"class.gpu::VulkanFunctionPointers::VulkanFunction.345", %"class.gpu::VulkanFunctionPointers::VulkanFunction.346", %"class.gpu::VulkanFunctionPointers::VulkanFunction.347", %"class.gpu::VulkanFunctionPointers::VulkanFunction.348", %"class.gpu::VulkanFunctionPointers::VulkanFunction.349", %"class.gpu::VulkanFunctionPointers::VulkanFunction.350", %"class.gpu::VulkanFunctionPointers::VulkanFunction.351", %"class.gpu::VulkanFunctionPointers::VulkanFunction.352", %"class.gpu::VulkanFunctionPointers::VulkanFunction.353", %"class.gpu::VulkanFunctionPointers::VulkanFunction.354", %"class.gpu::VulkanFunctionPointers::VulkanFunction.355", %"class.gpu::VulkanFunctionPointers::VulkanFunction.356", %"class.gpu::VulkanFunctionPointers::VulkanFunction.357", %"class.gpu::VulkanFunctionPointers::VulkanFunction.358", %"class.gpu::VulkanFunctionPointers::VulkanFunction.359", %"class.gpu::VulkanFunctionPointers::VulkanFunction.360", %"class.gpu::VulkanFunctionPointers::VulkanFunction.361", %"class.gpu::VulkanFunctionPointers::VulkanFunction.362", %"class.gpu::VulkanFunctionPointers::VulkanFunction.363", %"class.gpu::VulkanFunctionPointers::VulkanFunction.364", %"class.gpu::VulkanFunctionPointers::VulkanFunction.365", %"class.gpu::VulkanFunctionPointers::VulkanFunction.366", %"class.gpu::VulkanFunctionPointers::VulkanFunction.367", %"class.gpu::VulkanFunctionPointers::VulkanFunction.368", %"class.gpu::VulkanFunctionPointers::VulkanFunction.369", %"class.gpu::VulkanFunctionPointers::VulkanFunction.370", %"class.gpu::VulkanFunctionPointers::VulkanFunction.371", %"class.gpu::VulkanFunctionPointers::VulkanFunction.372", %"class.gpu::VulkanFunctionPointers::VulkanFunction.373", %"class.gpu::VulkanFunctionPointers::VulkanFunction.374", %"class.gpu::VulkanFunctionPointers::VulkanFunction.375", %"class.gpu::VulkanFunctionPointers::VulkanFunction.376", %"class.gpu::VulkanFunctionPointers::VulkanFunction.377", %"class.gpu::VulkanFunctionPointers::VulkanFunction.373", %"class.gpu::VulkanFunctionPointers::VulkanFunction.378", %"class.gpu::VulkanFunctionPointers::VulkanFunction.379", %"class.gpu::VulkanFunctionPointers::VulkanFunction.380", %"class.gpu::VulkanFunctionPointers::VulkanFunction.381", %"class.gpu::VulkanFunctionPointers::VulkanFunction.382", %"class.gpu::VulkanFunctionPointers::VulkanFunction.383", %"class.gpu::VulkanFunctionPointers::VulkanFunction.384", %"class.gpu::VulkanFunctionPointers::VulkanFunction.385", %"class.gpu::VulkanFunctionPointers::VulkanFunction.386", %"class.gpu::VulkanFunctionPointers::VulkanFunction.387", %"class.gpu::VulkanFunctionPointers::VulkanFunction.388", %"class.gpu::VulkanFunctionPointers::VulkanFunction.389", %"class.gpu::VulkanFunctionPointers::VulkanFunction.390", %"class.gpu::VulkanFunctionPointers::VulkanFunction.391", %"class.gpu::VulkanFunctionPointers::VulkanFunction.392", %"class.gpu::VulkanFunctionPointers::VulkanFunction.393", %"class.gpu::VulkanFunctionPointers::VulkanFunction.394", %"class.gpu::VulkanFunctionPointers::VulkanFunction.395", %"class.gpu::VulkanFunctionPointers::VulkanFunction.396", %"class.gpu::VulkanFunctionPointers::VulkanFunction.397", %"class.gpu::VulkanFunctionPointers::VulkanFunction.398", %"class.gpu::VulkanFunctionPointers::VulkanFunction.399", %"class.gpu::VulkanFunctionPointers::VulkanFunction.400", %"class.gpu::VulkanFunctionPointers::VulkanFunction.401", %"class.gpu::VulkanFunctionPointers::VulkanFunction.402", %"class.gpu::VulkanFunctionPointers::VulkanFunction.403" }
%"class.gpu::VulkanFunctionPointers::VulkanFunction" = type { void ()* (%struct.VkInstance_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.306" = type { i32 (i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.307" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.308" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.309" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.310" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkDevice_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.311" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.312" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.313" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.314" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.315" = type { void ()* (%struct.VkDevice_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.316" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.317" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.318" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.319" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.320" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.321" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.322" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.323" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.324" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.325" = type { void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)* }
%struct.VkSurfaceKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.326" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)* }
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.327" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)* }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.328" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.329" = type { i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* }
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.330" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.331" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkCommandBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.332" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.333" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.334" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.335" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.336" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.337" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkImage_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.338" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.339" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.340" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.341" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.342" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.343" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.344" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.345" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.346" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.347" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.348" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.349" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.350" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.351" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.352" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkPipelineCache_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.353" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.354" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.355" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.356" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.357" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphore_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.358" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.359" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.360" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.361" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.362" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.363" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.364" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.365" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.366" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.367" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.368" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.369" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.370" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.371" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.372" = type { i32 (%struct.VkDevice_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.374" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.375" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.376" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.377" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.373" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.378" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.379" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.380" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%struct.VkQueue_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.381" = type { void (%struct.VkDevice_T*, %struct.VkDeviceQueueInfo2*, %struct.VkQueue_T**)* }
%struct.VkDeviceQueueInfo2 = type { i32, i8*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.382" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.383" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.384" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.385" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.386" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.387" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.388" = type { i32 (%struct.VkQueue_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.389" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.390" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.391" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.392" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.393" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.394" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.395" = type { i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)* }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.396" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.397" = type { i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)* }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.398" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)* }
%struct.VkSwapchainKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.399" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.400" = type { void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.401" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.402" = type { i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.403" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)* }
%struct.VkImageDrmFormatModifierPropertiesEXT = type { i32, i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gpu::VulkanSurface" = type { i32 (...)**, %struct.VkInstance_T*, i32, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceFormatKHR, %"class.gpu::VulkanDeviceQueue"*, i64, i32, %"class.gfx::Size", i32, i32, %"class.std::__1::unique_ptr.421" }
%"class.gpu::VulkanDeviceQueue" = type { %"class.base::internal::flat_tree.407", %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %struct.VkInstance_T*, %struct.VmaAllocator_T*, %"class.std::__1::unique_ptr.415", %struct.VkPhysicalDeviceFeatures2, i8, %struct.VkPhysicalDeviceProtectedMemoryFeatures }
%"class.base::internal::flat_tree.407" = type { %"class.std::__1::vector.408" }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.410" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.base::BasicStringPiece"* }
%struct.VmaAllocator_T = type opaque
%"class.std::__1::unique_ptr.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.gpu::VulkanFenceHelper"* }
%"class.gpu::VulkanFenceHelper" = type opaque
%struct.VkPhysicalDeviceProtectedMemoryFeatures = type { i32, i8*, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gpu::VulkanSwapChain"* }
%"class.gpu::VulkanSwapChain" = type { %"class.base::Lock", i64, %"class.gpu::VulkanDeviceQueue"*, i8, %struct.VkSwapchainKHR_T*, %"class.gfx::Size", %"class.std::__1::vector.424", i32, i8, i8, [2 x i8], %"class.base::ConditionVariable", i8, i32, %"class.absl::optional", i8, %class.scoped_refptr.435, %"class.base::circular_deque.436" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.424" = type { %"class.std::__1::__vector_base.425" }
%"class.std::__1::__vector_base.425" = type { %"struct.gpu::VulkanSwapChain::ImageData"*, %"struct.gpu::VulkanSwapChain::ImageData"*, %"class.std::__1::__compressed_pair.426" }
%"struct.gpu::VulkanSwapChain::ImageData" = type { %struct.VkImage_T*, i32, %struct.VkSemaphore_T*, %struct.VkSemaphore_T* }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"struct.gpu::VulkanSwapChain::ImageData"* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.431, %union.anon.433, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.431 = type { i64 }
%union.anon.433 = type { i64 }
%class.scoped_refptr.435 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type opaque
%"class.base::circular_deque.436" = type { %"class.base::internal::VectorBuffer.437", i64, i64 }
%"class.base::internal::VectorBuffer.437" = type { %"struct.gpu::VulkanSwapChain::PendingSemaphores"*, i64 }
%"struct.gpu::VulkanSwapChain::PendingSemaphores" = type { %struct.VkSemaphore_T*, %struct.VkSemaphore_T* }
%"class.gpu::VulkanSurfaceX11" = type { %"class.gpu::VulkanSurface", %"class.x11::EventObserver", i32, i32, %"class.std::__1::unique_ptr.447" }
%"class.x11::EventObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.x11::XScopedEventSelector"* }
%"class.x11::XScopedEventSelector" = type opaque
%"class.x11::XlibDisplayWrapper" = type <{ %struct._XDisplay*, i32, [4 x i8] }>
%"class.gfx::GpuFence" = type { %"struct.gfx::GpuFenceHandle" }
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.gpu::SemaphoreHandle" = type { i32, [4 x i8], %"class.base::ScopedGeneric" }
%"class.gpu::VulkanImage" = type { %"class.gpu::VulkanDeviceQueue"*, %"class.gfx::Size", i32, i32, i32, i64, i32, i32, i32, i32, %"class.absl::optional.465", %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i32, %class.scoped_refptr.470, i64, i64, %"struct.std::__1::array.472" }
%"class.absl::optional.465" = type { %"class.absl::optional_internal::optional_data.466" }
%"class.absl::optional_internal::optional_data.466" = type { %"class.absl::optional_internal::optional_data_base.467" }
%"class.absl::optional_internal::optional_data_base.467" = type { %"class.absl::optional_internal::optional_data_dtor_base.468" }
%"class.absl::optional_internal::optional_data_dtor_base.468" = type { i8, [7 x i8], %union.anon.469 }
%union.anon.469 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.470 = type { %"class.gfx::NativePixmap"* }
%"class.gfx::NativePixmap" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.471", [4 x i8] }>
%"class.base::RefCountedThreadSafe.471" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::array.472" = type { [4 x %struct.VkSubresourceLayout] }
%"struct.gfx::GpuMemoryBufferHandle" = type { i32, %"class.gfx::GenericSharedMemoryId", %"class.base::UnsafeSharedMemoryRegion", i32, i32, %"struct.gfx::NativePixmapHandle" }
%"class.gfx::GenericSharedMemoryId" = type { i32 }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.gfx::NativePixmapHandle" = type { %"class.std::__1::vector.476", i64 }
%"class.std::__1::vector.476" = type { %"class.std::__1::__vector_base.477" }
%"class.std::__1::__vector_base.477" = type { %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"*, %"class.std::__1::__compressed_pair.478" }
%"struct.gfx::NativePixmapPlane" = type { i32, i64, i64, %"class.base::ScopedGeneric" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"struct.gfx::NativePixmapPlane"* }

@_ZTVN3gpu23VulkanImplementationX11E = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::VulkanImplementationX11"*)* @_ZN3gpu23VulkanImplementationX11D2Ev to i8*), i8* bitcast (void (%"class.gpu::VulkanImplementationX11"*)* @_ZN3gpu23VulkanImplementationX11D0Ev to i8*), i8* bitcast (i1 (%"class.gpu::VulkanImplementationX11"*, i1)* @_ZN3gpu23VulkanImplementationX1124InitializeVulkanInstanceEb to i8*), i8* bitcast (%"class.gpu::VulkanInstance"* (%"class.gpu::VulkanImplementationX11"*)* @_ZN3gpu23VulkanImplementationX1117GetVulkanInstanceEv to i8*), i8* bitcast (%"class.gpu::VulkanSurface"* (%"class.gpu::VulkanImplementationX11"*, i32)* @_ZN3gpu23VulkanImplementationX1117CreateViewSurfaceEj to i8*), i8* bitcast (i1 (%"class.gpu::VulkanImplementationX11"*, %struct.VkPhysicalDevice_T*, %"class.std::__1::vector.17"*, i32)* @_ZN3gpu23VulkanImplementationX1136GetPhysicalDevicePresentationSupportEP18VkPhysicalDevice_TRKNSt3__16vectorI23VkQueueFamilyPropertiesNS3_9allocatorIS5_EEEEj to i8*), i8* bitcast (void (%"class.std::__1::vector.1"*, %"class.gpu::VulkanImplementationX11"*)* @_ZN3gpu23VulkanImplementationX1127GetRequiredDeviceExtensionsEv to i8*), i8* bitcast (void (%"class.std::__1::vector.1"*, %"class.gpu::VulkanImplementationX11"*)* @_ZN3gpu23VulkanImplementationX1127GetOptionalDeviceExtensionsEv to i8*), i8* bitcast (%struct.VkFence_T* (%"class.gpu::VulkanImplementationX11"*, %struct.VkDevice_T*)* @_ZN3gpu23VulkanImplementationX1124CreateVkFenceForGpuFenceEP10VkDevice_T to i8*), i8* bitcast (%"class.gfx::GpuFence"* (%"class.gpu::VulkanImplementationX11"*, %struct.VkDevice_T*, %struct.VkFence_T*)* @_ZN3gpu23VulkanImplementationX1123ExportVkFenceToGpuFenceEP10VkDevice_TP9VkFence_T to i8*), i8* bitcast (%struct.VkSemaphore_T* (%"class.gpu::VulkanImplementationX11"*, %struct.VkDevice_T*)* @_ZN3gpu23VulkanImplementationX1123CreateExternalSemaphoreEP10VkDevice_T to i8*), i8* bitcast (%struct.VkSemaphore_T* (%"class.gpu::VulkanImplementationX11"*, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*)* @_ZN3gpu23VulkanImplementationX1121ImportSemaphoreHandleEP10VkDevice_TNS_15SemaphoreHandleE to i8*), i8* bitcast (void (%"class.gpu::SemaphoreHandle"*, %"class.gpu::VulkanImplementationX11"*, %struct.VkDevice_T*, %struct.VkSemaphore_T*)* @_ZN3gpu23VulkanImplementationX1118GetSemaphoreHandleEP10VkDevice_TP13VkSemaphore_T to i8*), i8* bitcast (i32 (%"class.gpu::VulkanImplementationX11"*)* @_ZN3gpu23VulkanImplementationX1126GetExternalImageHandleTypeEv to i8*), i8* bitcast (i1 (%"class.gpu::VulkanImplementationX11"*, i32)* @_ZN3gpu23VulkanImplementationX1124CanImportGpuMemoryBufferEN3gfx19GpuMemoryBufferTypeE to i8*), i8* bitcast (%"class.gpu::VulkanImage"* (%"class.gpu::VulkanImplementationX11"*, %"class.gpu::VulkanDeviceQueue"*, %"struct.gfx::GpuMemoryBufferHandle"*, i64, i32)* @_ZN3gpu23VulkanImplementationX1130CreateImageFromGpuMemoryHandleEPNS_17VulkanDeviceQueueEN3gfx21GpuMemoryBufferHandleENS3_4SizeE8VkFormat to i8*)] }, align 8
@.str = private unnamed_addr constant [36 x i8] c"VK_KHR_external_memory_capabilities\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"VK_KHR_external_semaphore_capabilities\00", align 1
@.ref.tmp = private unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i32 0, i32 0)], align 8
@.str.2 = private unnamed_addr constant [15 x i8] c"VK_KHR_surface\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"VK_KHR_xcb_surface\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"libvk_swiftshader.so\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"libvulkan.so.1\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"VK_KHR_swapchain\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"VK_KHR_external_memory\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"VK_KHR_external_memory_fd\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"VK_KHR_external_semaphore\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"VK_KHR_external_semaphore_fd\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"VK_KHR_incremental_present\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"VK_EXT_image_drm_format_modifier\00", align 1
@.ref.tmp.13 = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i32 0, i32 0)], align 8

@_ZN3gpu23VulkanImplementationX11C1Eb = hidden unnamed_addr alias void (%"class.gpu::VulkanImplementationX11"*, i1), void (%"class.gpu::VulkanImplementationX11"*, i1)* @_ZN3gpu23VulkanImplementationX11C2Eb
@_ZN3gpu23VulkanImplementationX11D1Ev = hidden unnamed_addr alias void (%"class.gpu::VulkanImplementationX11"*), void (%"class.gpu::VulkanImplementationX11"*)* @_ZN3gpu23VulkanImplementationX11D2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu23VulkanImplementationX11C2Eb(%"class.gpu::VulkanImplementationX11"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gpu::VulkanImplementationX11"* %0 to %"class.gpu::VulkanImplementation"*
  tail call void @_ZN3gpu20VulkanImplementationC2Ebb(%"class.gpu::VulkanImplementation"* %3, i1 zeroext %1, i1 zeroext false) #9
  %4 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN3gpu23VulkanImplementationX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %0, i64 0, i32 1
  store i8 1, i8* %5, align 2
  %6 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %0, i64 0, i32 3
  tail call void @_ZN3gpu14VulkanInstanceC1Ev(%"class.gpu::VulkanInstance"* %6) #9
  %7 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #9
  ret void
}

declare void @_ZN3gpu20VulkanImplementationC2Ebb(%"class.gpu::VulkanImplementation"*, i1 zeroext, i1 zeroext) unnamed_addr #1

declare void @_ZN3gpu14VulkanInstanceC1Ev(%"class.gpu::VulkanInstance"*) unnamed_addr #1

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu23VulkanImplementationX11D2Ev(%"class.gpu::VulkanImplementationX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN3gpu23VulkanImplementationX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %0, i64 0, i32 3
  tail call void @_ZN3gpu14VulkanInstanceD1Ev(%"class.gpu::VulkanInstance"* %3) #9
  %4 = bitcast %"class.gpu::VulkanImplementationX11"* %0 to %"class.gpu::VulkanImplementation"*
  tail call void @_ZN3gpu20VulkanImplementationD2Ev(%"class.gpu::VulkanImplementation"* %4) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gpu14VulkanInstanceD1Ev(%"class.gpu::VulkanInstance"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu20VulkanImplementationD2Ev(%"class.gpu::VulkanImplementation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu23VulkanImplementationX11D0Ev(%"class.gpu::VulkanImplementationX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN3gpu23VulkanImplementationX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %0, i64 0, i32 3
  tail call void @_ZN3gpu14VulkanInstanceD1Ev(%"class.gpu::VulkanInstance"* %3) #9
  %4 = bitcast %"class.gpu::VulkanImplementationX11"* %0 to %"class.gpu::VulkanImplementation"*
  tail call void @_ZN3gpu20VulkanImplementationD2Ev(%"class.gpu::VulkanImplementation"* %4) #9
  %5 = bitcast %"class.gpu::VulkanImplementationX11"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu23VulkanImplementationX1124InitializeVulkanInstanceEb(%"class.gpu::VulkanImplementationX11"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.base::NativeLibraryLoadError", align 8
  %4 = alloca %"class.absl::optional.292", align 8
  %5 = alloca %"class.std::__1::vector.1", align 8
  %6 = alloca %"class.base::FilePath", align 8
  %7 = alloca %"class.base::FilePath", align 8
  %8 = alloca %"class.base::FilePath", align 8
  %9 = alloca %"class.std::__1::vector.1", align 8
  br i1 %1, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %0, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = tail call zeroext i1 @_ZN2ui24IsVulkanSurfaceSupportedEv() #9
  br label %16

16:                                               ; preds = %10, %14, %2
  %17 = phi i1 [ true, %10 ], [ false, %2 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %0, i64 0, i32 1
  %19 = zext i1 %17 to i8
  store i8 %19, i8* %18, align 2
  %20 = getelementptr inbounds %"class.absl::optional.292", %"class.absl::optional.292"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #9
  %21 = bitcast %"class.absl::optional.292"* %4 to i64*
  store i64 -6148914691236517206, i64* %21, align 8
  store i8 0, i8* %20, align 8
  %22 = getelementptr inbounds %"class.absl::optional.292", %"class.absl::optional.292"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #9
  br i1 %17, label %25, label %23

23:                                               ; preds = %16
  %24 = bitcast i8* %22 to %"class.ui::ScopedUnsetDisplay"*
  call void @_ZN2ui18ScopedUnsetDisplayC1Ev(%"class.ui::ScopedUnsetDisplay"* %24) #9
  store i8 1, i8* %20, align 8
  br label %25

25:                                               ; preds = %16, %23
  %26 = bitcast %"class.std::__1::vector.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %5, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %5, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = call i8* @_Znwm(i64 16) #10
  %31 = bitcast %"class.std::__1::vector.1"* %5 to i8**
  store i8* %30, i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %30, i64 16
  %33 = bitcast i8*** %29 to i8**
  store i8* %32, i8** %33, align 8
  %34 = bitcast i8*** %28 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 bitcast ([2 x i8*]* @.ref.tmp to i8*), i64 16, i1 false) #9
  %35 = ptrtoint i8* %32 to i64
  store i64 %35, i64* %34, align 8
  %36 = load i8, i8* %18, align 2, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %108, label %38

38:                                               ; preds = %25
  %39 = bitcast %"class.std::__1::vector.1"* %5 to i64*
  %40 = call i8* @_Znwm(i64 32) #10
  %41 = getelementptr inbounds i8, i8* %40, i64 16
  %42 = bitcast i8* %41 to i64*
  store i64 ptrtoint ([15 x i8]* @.str.2 to i64), i64* %42, align 8
  %43 = insertelement <2 x i8*> undef, i8* %40, i32 0
  %44 = shufflevector <2 x i8*> %43, <2 x i8*> undef, <2 x i32> zeroinitializer
  %45 = getelementptr i8, <2 x i8*> %44, <2 x i64> <i64 24, i64 32>
  %46 = ptrtoint <2 x i8*> %45 to <2 x i64>
  %47 = ptrtoint i8* %40 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* nonnull align 8 %30, i64 16, i1 false) #9
  store i64 %47, i64* %39, align 8
  %48 = bitcast i8*** %28 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %48, align 8
  call void @_ZdlPv(i8* nonnull %30) #10
  %49 = load i8**, i8*** %28, align 8
  %50 = ptrtoint i8** %49 to i64
  %51 = load i8**, i8*** %29, align 8
  %52 = icmp ult i8** %49, %51
  %53 = ptrtoint i8** %51 to i64
  br i1 %52, label %54, label %58

54:                                               ; preds = %38
  %55 = bitcast i8** %49 to i64*
  store i64 ptrtoint ([19 x i8]* @.str.3 to i64), i64* %55, align 8
  %56 = getelementptr inbounds i8*, i8** %49, i64 1
  %57 = ptrtoint i8** %56 to i64
  store i64 %57, i64* %34, align 8
  br label %108

58:                                               ; preds = %38
  %59 = ptrtoint i8** %49 to i64
  %60 = bitcast %"class.std::__1::vector.1"* %5 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %59, %61
  %63 = ashr exact i64 %62, 3
  %64 = add nsw i64 %63, 1
  %65 = icmp ugt i64 %64, 2305843009213693951
  br i1 %65, label %66, label %68

66:                                               ; preds = %58
  %67 = bitcast %"class.std::__1::vector.1"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %67) #11
  unreachable

68:                                               ; preds = %58
  %69 = bitcast i8*** %29 to i64*
  %70 = sub i64 %53, %61
  %71 = ashr exact i64 %70, 3
  %72 = icmp ult i64 %71, 1152921504606846975
  br i1 %72, label %73, label %81

73:                                               ; preds = %68
  %74 = ashr exact i64 %70, 2
  %75 = icmp ult i64 %74, %64
  %76 = select i1 %75, i64 %64, i64 %74
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %86, label %78

78:                                               ; preds = %73
  %79 = icmp ugt i64 %76, 2305843009213693951
  br i1 %79, label %80, label %81

80:                                               ; preds = %78
  call void @abort() #11
  unreachable

81:                                               ; preds = %78, %68
  %82 = phi i64 [ %76, %78 ], [ 2305843009213693951, %68 ]
  %83 = shl i64 %82, 3
  %84 = call i8* @_Znwm(i64 %83) #10
  %85 = bitcast i8* %84 to i8**
  br label %86

86:                                               ; preds = %81, %73
  %87 = phi i64 [ %82, %81 ], [ 0, %73 ]
  %88 = phi i8** [ %85, %81 ], [ null, %73 ]
  %89 = getelementptr inbounds i8*, i8** %88, i64 %63
  %90 = getelementptr inbounds i8*, i8** %88, i64 %87
  %91 = ptrtoint i8** %90 to i64
  %92 = bitcast i8** %89 to i64*
  store i64 ptrtoint ([19 x i8]* @.str.3 to i64), i64* %92, align 8
  %93 = getelementptr inbounds i8*, i8** %89, i64 1
  %94 = ptrtoint i8** %93 to i64
  %95 = sub i64 %50, %61
  %96 = ashr exact i64 %95, 3
  %97 = sub nsw i64 0, %96
  %98 = getelementptr inbounds i8*, i8** %89, i64 %97
  %99 = ptrtoint i8** %98 to i64
  %100 = icmp sgt i64 %95, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %86
  %102 = bitcast i8** %98 to i8*
  %103 = inttoptr i64 %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 %95, i1 false) #9
  br label %104

104:                                              ; preds = %101, %86
  store i64 %99, i64* %60, align 8
  store i64 %94, i64* %34, align 8
  store i64 %91, i64* %69, align 8
  %105 = icmp eq i64 %61, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %61 to i8*
  call void @_ZdlPv(i8* %107) #10
  br label %108

108:                                              ; preds = %106, %104, %54, %25
  %109 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #9
  %110 = bitcast %"class.base::FilePath"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #9
  %111 = bitcast %"class.base::FilePath"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 24, i1 false)
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* nonnull %6) #9
  %112 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %0, i64 0, i32 0, i32 1
  %113 = load i8, i8* %112, align 8, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %119, label %115

115:                                              ; preds = %108
  %116 = call zeroext i1 @_ZN4base11PathService3GetEiPNS_8FilePathE(i32 3, %"class.base::FilePath"* nonnull %6) #9
  br i1 %116, label %117, label %150

117:                                              ; preds = %115
  %118 = bitcast %"class.base::FilePath"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #9
  call void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %7, %"class.base::FilePath"* nonnull %6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 20) #9
  br label %121

119:                                              ; preds = %108
  %120 = bitcast %"class.base::FilePath"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #9
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 14) #9
  br label %121

121:                                              ; preds = %119, %117
  %122 = phi %"class.base::FilePath"* [ %8, %119 ], [ %7, %117 ]
  %123 = phi i8* [ %120, %119 ], [ %118, %117 ]
  %124 = call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSEOS0_(%"class.base::FilePath"* nonnull %6, %"class.base::FilePath"* nonnull dereferenceable(24) %122) #9
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %122) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #9
  %125 = bitcast %"struct.base::NativeLibraryLoadError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 0, i64 24, i1 false) #9
  %126 = call i8* @_ZN4base17LoadNativeLibraryERKNS_8FilePathEPNS_22NativeLibraryLoadErrorE(%"class.base::FilePath"* nonnull dereferenceable(24) %6, %"struct.base::NativeLibraryLoadError"* nonnull %3) #9
  %127 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %109, i64 0, i32 0
  store i8* %126, i8** %127, align 8
  %128 = icmp eq i8* %126, null
  %129 = bitcast %"struct.base::NativeLibraryLoadError"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %121
  %134 = getelementptr inbounds %"struct.base::NativeLibraryLoadError", %"struct.base::NativeLibraryLoadError"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %135) #10
  br label %136

136:                                              ; preds = %121, %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #9
  br i1 %128, label %150, label %137

137:                                              ; preds = %136
  %138 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %0, i64 0, i32 3
  %139 = bitcast %"class.std::__1::vector.1"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 0, i64 24, i1 false) #9
  %140 = call zeroext i1 @_ZN3gpu14VulkanInstance10InitializeERKNSt3__16vectorIPKcNS1_9allocatorIS4_EEEES9_(%"class.gpu::VulkanInstance"* %138, %"class.std::__1::vector.1"* nonnull dereferenceable(24) %5, %"class.std::__1::vector.1"* nonnull dereferenceable(24) %9) #9
  %141 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %9, i64 0, i32 0, i32 0
  %142 = load i8**, i8*** %141, align 8
  %143 = icmp eq i8** %142, null
  br i1 %143, label %149, label %144

144:                                              ; preds = %137
  %145 = ptrtoint i8** %142 to i64
  %146 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %9, i64 0, i32 0, i32 1
  %147 = bitcast i8*** %146 to i64*
  store i64 %145, i64* %147, align 8
  %148 = bitcast i8** %142 to i8*
  call void @_ZdlPv(i8* %148) #10
  br label %149

149:                                              ; preds = %137, %144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #9
  br label %150

150:                                              ; preds = %136, %149, %115
  %151 = phi i1 [ false, %115 ], [ false, %136 ], [ %140, %149 ]
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #9
  %152 = load i8**, i8*** %27, align 8
  %153 = icmp eq i8** %152, null
  br i1 %153, label %157, label %154

154:                                              ; preds = %150
  %155 = ptrtoint i8** %152 to i64
  store i64 %155, i64* %34, align 8
  %156 = bitcast i8** %152 to i8*
  call void @_ZdlPv(i8* %156) #10
  br label %157

157:                                              ; preds = %150, %154
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #9
  %158 = load i8, i8* %20, align 8, !range !2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"class.absl::optional.292", %"class.absl::optional.292"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN2ui18ScopedUnsetDisplayD1Ev(%"class.ui::ScopedUnsetDisplay"* %161) #9
  store i8 0, i8* %20, align 8
  br label %162

162:                                              ; preds = %157, %160
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #9
  ret i1 %151
}

declare zeroext i1 @_ZN2ui24IsVulkanSurfaceSupportedEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() local_unnamed_addr #1

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #1

declare zeroext i1 @_ZN4base11PathService3GetEiPNS_8FilePathE(i32, %"class.base::FilePath"*) local_unnamed_addr #1

declare void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSEOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #2

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN3gpu14VulkanInstance10InitializeERKNSt3__16vectorIPKcNS1_9allocatorIS4_EEEES9_(%"class.gpu::VulkanInstance"*, %"class.std::__1::vector.1"* dereferenceable(24), %"class.std::__1::vector.1"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.gpu::VulkanInstance"* @_ZN3gpu23VulkanImplementationX1117GetVulkanInstanceEv(%"class.gpu::VulkanImplementationX11"* readnone) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %0, i64 0, i32 3
  ret %"class.gpu::VulkanInstance"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::VulkanSurface"* @_ZN3gpu23VulkanImplementationX1117CreateViewSurfaceEj(%"class.gpu::VulkanImplementationX11"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 2, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %0, i64 0, i32 3, i32 1
  %8 = load %struct.VkInstance_T*, %struct.VkInstance_T** %7, align 8
  %9 = tail call %"class.gpu::VulkanSurfaceX11"* @_ZN3gpu16VulkanSurfaceX116CreateEP12VkInstance_TN3x116WindowE(%struct.VkInstance_T* %8, i32 %1) #9
  %10 = getelementptr inbounds %"class.gpu::VulkanSurfaceX11", %"class.gpu::VulkanSurfaceX11"* %9, i64 0, i32 0
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"class.gpu::VulkanSurface"* [ %10, %6 ], [ null, %2 ]
  ret %"class.gpu::VulkanSurface"* %12
}

declare %"class.gpu::VulkanSurfaceX11"* @_ZN3gpu16VulkanSurfaceX116CreateEP12VkInstance_TN3x116WindowE(%struct.VkInstance_T*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu23VulkanImplementationX1136GetPhysicalDevicePresentationSupportEP18VkPhysicalDevice_TRKNSt3__16vectorI23VkQueueFamilyPropertiesNS3_9allocatorIS5_EEEEj(%"class.gpu::VulkanImplementationX11"* nocapture readonly, %struct.VkPhysicalDevice_T*, %"class.std::__1::vector.17"* nocapture readnone dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.x11::XlibDisplayWrapper", align 8
  %6 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %0, i64 0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %22

9:                                                ; preds = %4
  %10 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #9
  %11 = bitcast %"class.x11::XlibDisplayWrapper"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  call void @_ZN3x1110Connection14GetXlibDisplayENS_15XlibDisplayTypeE(%"class.x11::XlibDisplayWrapper"* nonnull sret %5, %"class.x11::Connection"* %10, i32 0) #9
  %12 = call %struct.xcb_connection_t* @_ZN3x1118XlibDisplayWrapper16GetXcbConnectionEv(%"class.x11::XlibDisplayWrapper"* nonnull %5) #9
  %13 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %10, i64 0, i32 13
  %14 = load %"struct.x11::VisualType"*, %"struct.x11::VisualType"** %13, align 8
  %15 = getelementptr inbounds %"struct.x11::VisualType", %"struct.x11::VisualType"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #9
  %18 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %17, i64 0, i32 26, i32 0
  %19 = load i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)** %18, align 8
  %20 = call i32 %19(%struct.VkPhysicalDevice_T* %1, i32 %3, %struct.xcb_connection_t* %12, i32 %16) #9
  %21 = icmp ne i32 %20, 0
  call void @_ZN3x1118XlibDisplayWrapperD1Ev(%"class.x11::XlibDisplayWrapper"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  br label %22

22:                                               ; preds = %4, %9
  %23 = phi i1 [ %21, %9 ], [ true, %4 ]
  ret i1 %23
}

declare void @_ZN3x1110Connection14GetXlibDisplayENS_15XlibDisplayTypeE(%"class.x11::XlibDisplayWrapper"* sret, %"class.x11::Connection"*, i32) local_unnamed_addr #1

declare %struct.xcb_connection_t* @_ZN3x1118XlibDisplayWrapper16GetXcbConnectionEv(%"class.x11::XlibDisplayWrapper"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3x1118XlibDisplayWrapperD1Ev(%"class.x11::XlibDisplayWrapper"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu23VulkanImplementationX1127GetRequiredDeviceExtensionsEv(%"class.std::__1::vector.1"* noalias sret, %"class.gpu::VulkanImplementationX11"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::vector.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #9
  %4 = getelementptr inbounds %"class.gpu::VulkanImplementationX11", %"class.gpu::VulkanImplementationX11"* %1, i64 0, i32 1
  %5 = load i8, i8* %4, align 2, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %10 = bitcast i8*** %9 to i64*
  %11 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %12 = bitcast i8*** %8 to i64*
  %13 = tail call i8* @_Znwm(i64 8) #10
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast i8* %13 to i64*
  store i64 ptrtoint ([17 x i8]* @.str.6 to i64), i64* %16, align 8
  %17 = ptrtoint i8* %13 to i64
  store i64 %17, i64* %11, align 8
  store i64 %15, i64* %10, align 8
  store i64 %15, i64* %12, align 8
  br label %18

18:                                               ; preds = %7, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu23VulkanImplementationX1127GetOptionalDeviceExtensionsEv(%"class.std::__1::vector.1"* noalias nocapture sret, %"class.gpu::VulkanImplementationX11"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 48) #10
  %4 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::vector.1"* %0 to i8**
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 48
  %7 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8*** %7 to i8**
  store i8* %6, i8** %8, align 8
  %9 = bitcast i8*** %4 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 8 bitcast ([6 x i8*]* @.ref.tmp.13 to i8*), i64 48, i1 false) #9
  %10 = ptrtoint i8* %6 to i64
  store i64 %10, i64* %9, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %struct.VkFence_T* @_ZN3gpu23VulkanImplementationX1124CreateVkFenceForGpuFenceEP10VkDevice_T(%"class.gpu::VulkanImplementationX11"* nocapture readnone, %struct.VkDevice_T* nocapture readnone) unnamed_addr #5 align 2 {
  ret %struct.VkFence_T* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.gfx::GpuFence"* @_ZN3gpu23VulkanImplementationX1123ExportVkFenceToGpuFenceEP10VkDevice_TP9VkFence_T(%"class.gpu::VulkanImplementationX11"* nocapture readnone, %struct.VkDevice_T* nocapture readnone, %struct.VkFence_T* nocapture readnone) unnamed_addr #5 align 2 {
  ret %"class.gfx::GpuFence"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.VkSemaphore_T* @_ZN3gpu23VulkanImplementationX1123CreateExternalSemaphoreEP10VkDevice_T(%"class.gpu::VulkanImplementationX11"* nocapture readnone, %struct.VkDevice_T*) unnamed_addr #0 align 2 {
  %3 = tail call %struct.VkSemaphore_T* @_ZN3gpu25CreateExternalVkSemaphoreEP10VkDevice_Tj(%struct.VkDevice_T* %1, i32 1) #9
  ret %struct.VkSemaphore_T* %3
}

declare %struct.VkSemaphore_T* @_ZN3gpu25CreateExternalVkSemaphoreEP10VkDevice_Tj(%struct.VkDevice_T*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.VkSemaphore_T* @_ZN3gpu23VulkanImplementationX1121ImportSemaphoreHandleEP10VkDevice_TNS_15SemaphoreHandleE(%"class.gpu::VulkanImplementationX11"* nocapture readnone, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.gpu::SemaphoreHandle", align 8
  call void @_ZN3gpu15SemaphoreHandleC1EOS0_(%"class.gpu::SemaphoreHandle"* nonnull %4, %"class.gpu::SemaphoreHandle"* dereferenceable(24) %2) #9
  %5 = call %struct.VkSemaphore_T* @_ZN3gpu23ImportVkSemaphoreHandleEP10VkDevice_TNS_15SemaphoreHandleE(%struct.VkDevice_T* %1, %"class.gpu::SemaphoreHandle"* nonnull %4) #9
  call void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"* nonnull %4) #9
  ret %struct.VkSemaphore_T* %5
}

declare %struct.VkSemaphore_T* @_ZN3gpu23ImportVkSemaphoreHandleEP10VkDevice_TNS_15SemaphoreHandleE(%struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*) local_unnamed_addr #1

declare void @_ZN3gpu15SemaphoreHandleC1EOS0_(%"class.gpu::SemaphoreHandle"*, %"class.gpu::SemaphoreHandle"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu23VulkanImplementationX1118GetSemaphoreHandleEP10VkDevice_TP13VkSemaphore_T(%"class.gpu::SemaphoreHandle"* noalias sret, %"class.gpu::VulkanImplementationX11"* nocapture readnone, %struct.VkDevice_T*, %struct.VkSemaphore_T*) unnamed_addr #0 align 2 {
  tail call void @_ZN3gpu20GetVkSemaphoreHandleEP10VkDevice_TP13VkSemaphore_T37VkExternalSemaphoreHandleTypeFlagBits(%"class.gpu::SemaphoreHandle"* sret %0, %struct.VkDevice_T* %2, %struct.VkSemaphore_T* %3, i32 1) #9
  ret void
}

declare void @_ZN3gpu20GetVkSemaphoreHandleEP10VkDevice_TP13VkSemaphore_T37VkExternalSemaphoreHandleTypeFlagBits(%"class.gpu::SemaphoreHandle"* sret, %struct.VkDevice_T*, %struct.VkSemaphore_T*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3gpu23VulkanImplementationX1126GetExternalImageHandleTypeEv(%"class.gpu::VulkanImplementationX11"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3gpu23VulkanImplementationX1124CanImportGpuMemoryBufferEN3gfx19GpuMemoryBufferTypeE(%"class.gpu::VulkanImplementationX11"* nocapture readnone, i32) unnamed_addr #5 align 2 {
  %3 = icmp eq i32 %1, 3
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::VulkanImage"* @_ZN3gpu23VulkanImplementationX1130CreateImageFromGpuMemoryHandleEPNS_17VulkanDeviceQueueEN3gfx21GpuMemoryBufferHandleENS3_4SizeE8VkFormat(%"class.gpu::VulkanImplementationX11"* nocapture readnone, %"class.gpu::VulkanDeviceQueue"*, %"struct.gfx::GpuMemoryBufferHandle"*, i64, i32) unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.gfx::Size"*
  %8 = alloca %"struct.gfx::GpuMemoryBufferHandle", align 8
  store i64 %3, i64* %6, align 8
  %9 = getelementptr inbounds %"struct.gfx::GpuMemoryBufferHandle", %"struct.gfx::GpuMemoryBufferHandle"* %2, i64 0, i32 5, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 72057594037927935
  %12 = select i1 %11, i32 0, i32 1000158000
  call void @_ZN3gfx21GpuMemoryBufferHandleC1EOS0_(%"struct.gfx::GpuMemoryBufferHandle"* nonnull %8, %"struct.gfx::GpuMemoryBufferHandle"* dereferenceable(112) %2) #9
  %13 = call %"class.gpu::VulkanImage"* @_ZN3gpu11VulkanImage31CreateFromGpuMemoryBufferHandleEPNS_17VulkanDeviceQueueEN3gfx21GpuMemoryBufferHandleERKNS3_4SizeE8VkFormatjj13VkImageTiling(%"class.gpu::VulkanDeviceQueue"* %1, %"struct.gfx::GpuMemoryBufferHandle"* nonnull %8, %"class.gfx::Size"* nonnull dereferenceable(8) %7, i32 %4, i32 23, i32 0, i32 %12) #9
  call void @_ZN3gfx21GpuMemoryBufferHandleD1Ev(%"struct.gfx::GpuMemoryBufferHandle"* nonnull %8) #9
  ret %"class.gpu::VulkanImage"* %13
}

declare %"class.gpu::VulkanImage"* @_ZN3gpu11VulkanImage31CreateFromGpuMemoryBufferHandleEPNS_17VulkanDeviceQueueEN3gfx21GpuMemoryBufferHandleERKNS3_4SizeE8VkFormatjj13VkImageTiling(%"class.gpu::VulkanDeviceQueue"*, %"struct.gfx::GpuMemoryBufferHandle"*, %"class.gfx::Size"* dereferenceable(8), i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN3gfx21GpuMemoryBufferHandleC1EOS0_(%"struct.gfx::GpuMemoryBufferHandle"*, %"struct.gfx::GpuMemoryBufferHandle"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx21GpuMemoryBufferHandleD1Ev(%"struct.gfx::GpuMemoryBufferHandle"*) unnamed_addr #2

declare i8* @_ZN4base17LoadNativeLibraryERKNS_8FilePathEPNS_22NativeLibraryLoadErrorE(%"class.base::FilePath"* dereferenceable(24), %"struct.base::NativeLibraryLoadError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui18ScopedUnsetDisplayD1Ev(%"class.ui::ScopedUnsetDisplay"*) unnamed_addr #2

declare void @_ZN2ui18ScopedUnsetDisplayC1Ev(%"class.ui::ScopedUnsetDisplay"*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
