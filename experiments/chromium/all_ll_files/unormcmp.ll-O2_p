; ModuleID = '../../third_party/icu/source/common/unormcmp.cpp'
source_filename = "../../third_party/icu/source/common/unormcmp.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.CmpEquivLevel = type { i16*, i16*, i16* }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.0, [32 x i8] }
%struct.anon.0 = type { i16, i32, i32, i16* }
%"class.icu_69::FilteredNormalizer2" = type { %"class.icu_69::Normalizer2", %"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeSet"* }
%"class.icu_69::Normalizer2" = type { %"class.icu_69::UObject" }
%"class.icu_69::UnicodeSet" = type <{ %"class.icu_69::UnicodeFilter", i32*, i32, i32, i8, [7 x i8], %"class.icu_69::BMPSet"*, i32*, i32, [4 x i8], i16*, i32, [4 x i8], %"class.icu_69::UVector"*, %"class.icu_69::UnicodeSetStringSpan"*, [25 x i32], [4 x i8] }>
%"class.icu_69::UnicodeFilter" = type { %"class.icu_69::UnicodeFunctor", %"class.icu_69::UnicodeMatcher" }
%"class.icu_69::UnicodeFunctor" = type { %"class.icu_69::UObject" }
%"class.icu_69::UnicodeMatcher" = type { i32 (...)** }
%"class.icu_69::BMPSet" = type opaque
%"class.icu_69::UVector" = type opaque
%"class.icu_69::UnicodeSetStringSpan" = type opaque
%struct.anon = type { i16, [27 x i16] }
%"class.icu_69::Normalizer2Impl" = type { %"class.icu_69::UObject", i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.UCPTrie*, i16*, i16*, i8*, %"struct.icu_69::UInitOnce", %"struct.icu_69::CanonIterData"* }
%struct.UCPTrie = type { i16*, %union.UCPTrieData, i32, i32, i32, i16, i8, i8, i32, i16, i16, i32, i32 }
%union.UCPTrieData = type { i8* }
%"struct.icu_69::UInitOnce" = type { %"struct.std::__1::atomic", i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.icu_69::CanonIterData" = type opaque
%"class.icu_69::ConstChar16Ptr" = type { i16* }

@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN6icu_6919FilteredNormalizer2E = external unnamed_addr constant { [20 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @unorm_compare_69(i16*, i32, i16*, i32, i32, i32*) local_unnamed_addr #0 {
  %7 = alloca i16*, align 8
  %8 = alloca i32, align 4
  %9 = alloca [2 x %struct.CmpEquivLevel], align 16
  %10 = alloca [2 x %struct.CmpEquivLevel], align 16
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca [32 x i16], align 16
  %14 = alloca [32 x i16], align 16
  %15 = alloca %"class.icu_69::UnicodeString", align 8
  %16 = alloca %"class.icu_69::UnicodeString", align 8
  %17 = alloca %"class.icu_69::FilteredNormalizer2", align 8
  %18 = load i32, i32* %5, align 4
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %20, label %600

20:                                               ; preds = %6
  %21 = icmp eq i16* %0, null
  %22 = icmp slt i32 %1, -1
  %23 = or i1 %21, %22
  %24 = icmp eq i16* %2, null
  %25 = or i1 %23, %24
  %26 = icmp slt i32 %3, -1
  %27 = or i1 %25, %26
  br i1 %27, label %28, label %29

28:                                               ; preds = %20
  store i32 1, i32* %5, align 4
  br label %600

29:                                               ; preds = %20
  %30 = bitcast %"class.icu_69::UnicodeString"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %30) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 64, i1 false)
  %31 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %15, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %15, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %32, align 8
  %33 = bitcast %"class.icu_69::UnicodeString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %33) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 64, i1 false)
  %34 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %16, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %16, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %35, align 8
  %36 = or i32 %4, 524288
  %37 = and i32 %4, 131073
  %38 = icmp eq i32 %37, 131072
  br i1 %38, label %178, label %39

39:                                               ; preds = %29
  %40 = and i32 %4, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = tail call %"class.icu_69::Normalizer2"* @_ZN6icu_6911Normalizer214getNFDInstanceER10UErrorCode(i32* dereferenceable(4) %5) #4
  br label %46

44:                                               ; preds = %39
  %45 = tail call %"class.icu_69::Normalizer2"* @_ZN6icu_6918Normalizer2Factory14getFCDInstanceER10UErrorCode(i32* dereferenceable(4) %5) #4
  br label %46

46:                                               ; preds = %44, %42
  %47 = phi %"class.icu_69::Normalizer2"* [ %43, %42 ], [ %45, %44 ]
  %48 = load i32, i32* %5, align 4
  %49 = icmp slt i32 %48, 1
  br i1 %49, label %50, label %598

50:                                               ; preds = %46
  %51 = and i32 %4, 33554432
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %120, label %53

53:                                               ; preds = %50
  %54 = tail call %"class.icu_69::UnicodeSet"* @uniset_getUnicode32Instance_69(i32* dereferenceable(4) %5) #4
  %55 = bitcast %"class.icu_69::FilteredNormalizer2"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #4
  %56 = getelementptr inbounds %"class.icu_69::FilteredNormalizer2", %"class.icu_69::FilteredNormalizer2"* %17, i64 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.icu_69::FilteredNormalizer2", %"class.icu_69::FilteredNormalizer2"* %17, i64 0, i32 1
  %58 = getelementptr inbounds %"class.icu_69::FilteredNormalizer2", %"class.icu_69::FilteredNormalizer2"* %17, i64 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN6icu_6919FilteredNormalizer2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  store %"class.icu_69::Normalizer2"* %47, %"class.icu_69::Normalizer2"** %57, align 8
  store %"class.icu_69::UnicodeSet"* %54, %"class.icu_69::UnicodeSet"** %58, align 8
  %59 = getelementptr inbounds %"class.icu_69::FilteredNormalizer2", %"class.icu_69::FilteredNormalizer2"* %17, i64 0, i32 0
  %60 = call fastcc signext i8 @_ZL10_normalizePKN6icu_6911Normalizer2EPKDsiRNS_13UnicodeStringEP10UErrorCode(%"class.icu_69::Normalizer2"* nonnull %59, i16* nonnull %0, i32 %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %15, i32* %5)
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %87, label %62

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %15, i64 0, i32 1
  %64 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %63, i64 0, i32 0, i32 0
  %65 = load i16, i16* %64, align 8
  %66 = sext i16 %65 to i32
  %67 = and i32 %66, 17
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %78

69:                                               ; preds = %62
  %70 = and i32 %66, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %69
  %73 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %63 to %struct.anon*
  %74 = getelementptr inbounds %struct.anon, %struct.anon* %73, i64 0, i32 1, i64 0
  br label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %15, i64 0, i32 1, i32 0, i32 3
  %77 = load i16*, i16** %76, align 8
  br label %78

78:                                               ; preds = %62, %72, %75
  %79 = phi i16* [ %74, %72 ], [ %77, %75 ], [ null, %62 ]
  %80 = icmp slt i16 %65, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %78
  %82 = lshr i16 %65, 5
  %83 = zext i16 %82 to i32
  br label %87

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %15, i64 0, i32 1, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  br label %87

87:                                               ; preds = %84, %81, %53
  %88 = phi i32 [ %1, %53 ], [ %83, %81 ], [ %86, %84 ]
  %89 = phi i16* [ %0, %53 ], [ %79, %81 ], [ %79, %84 ]
  %90 = call fastcc signext i8 @_ZL10_normalizePKN6icu_6911Normalizer2EPKDsiRNS_13UnicodeStringEP10UErrorCode(%"class.icu_69::Normalizer2"* nonnull %59, i16* nonnull %2, i32 %3, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %16, i32* %5)
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %117, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %16, i64 0, i32 1
  %94 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %93, i64 0, i32 0, i32 0
  %95 = load i16, i16* %94, align 8
  %96 = sext i16 %95 to i32
  %97 = and i32 %96, 17
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %108

99:                                               ; preds = %92
  %100 = and i32 %96, 2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %99
  %103 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %93 to %struct.anon*
  %104 = getelementptr inbounds %struct.anon, %struct.anon* %103, i64 0, i32 1, i64 0
  br label %108

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %16, i64 0, i32 1, i32 0, i32 3
  %107 = load i16*, i16** %106, align 8
  br label %108

108:                                              ; preds = %92, %102, %105
  %109 = phi i16* [ %104, %102 ], [ %107, %105 ], [ null, %92 ]
  %110 = icmp slt i16 %95, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %108
  %112 = lshr i16 %95, 5
  %113 = zext i16 %112 to i32
  br label %117

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %16, i64 0, i32 1, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  br label %117

117:                                              ; preds = %114, %111, %87
  %118 = phi i16* [ %2, %87 ], [ %109, %111 ], [ %109, %114 ]
  %119 = phi i32 [ %3, %87 ], [ %113, %111 ], [ %116, %114 ]
  call void @_ZN6icu_6919FilteredNormalizer2D1Ev(%"class.icu_69::FilteredNormalizer2"* nonnull %17) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #4
  br label %178

120:                                              ; preds = %50
  %121 = call fastcc signext i8 @_ZL10_normalizePKN6icu_6911Normalizer2EPKDsiRNS_13UnicodeStringEP10UErrorCode(%"class.icu_69::Normalizer2"* %47, i16* nonnull %0, i32 %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %15, i32* %5)
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %148, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %15, i64 0, i32 1
  %125 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %124, i64 0, i32 0, i32 0
  %126 = load i16, i16* %125, align 8
  %127 = sext i16 %126 to i32
  %128 = and i32 %127, 17
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %139

130:                                              ; preds = %123
  %131 = and i32 %127, 2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %130
  %134 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %124 to %struct.anon*
  %135 = getelementptr inbounds %struct.anon, %struct.anon* %134, i64 0, i32 1, i64 0
  br label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %15, i64 0, i32 1, i32 0, i32 3
  %138 = load i16*, i16** %137, align 8
  br label %139

139:                                              ; preds = %123, %133, %136
  %140 = phi i16* [ %135, %133 ], [ %138, %136 ], [ null, %123 ]
  %141 = icmp slt i16 %126, 0
  br i1 %141, label %145, label %142

142:                                              ; preds = %139
  %143 = lshr i16 %126, 5
  %144 = zext i16 %143 to i32
  br label %148

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %15, i64 0, i32 1, i32 0, i32 1
  %147 = load i32, i32* %146, align 4
  br label %148

148:                                              ; preds = %145, %142, %120
  %149 = phi i32 [ %1, %120 ], [ %144, %142 ], [ %147, %145 ]
  %150 = phi i16* [ %0, %120 ], [ %140, %142 ], [ %140, %145 ]
  %151 = call fastcc signext i8 @_ZL10_normalizePKN6icu_6911Normalizer2EPKDsiRNS_13UnicodeStringEP10UErrorCode(%"class.icu_69::Normalizer2"* %47, i16* nonnull %2, i32 %3, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %16, i32* %5)
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %178, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %16, i64 0, i32 1
  %155 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %154, i64 0, i32 0, i32 0
  %156 = load i16, i16* %155, align 8
  %157 = sext i16 %156 to i32
  %158 = and i32 %157, 17
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %169

160:                                              ; preds = %153
  %161 = and i32 %157, 2
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %166, label %163

163:                                              ; preds = %160
  %164 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %154 to %struct.anon*
  %165 = getelementptr inbounds %struct.anon, %struct.anon* %164, i64 0, i32 1, i64 0
  br label %169

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %16, i64 0, i32 1, i32 0, i32 3
  %168 = load i16*, i16** %167, align 8
  br label %169

169:                                              ; preds = %153, %163, %166
  %170 = phi i16* [ %165, %163 ], [ %168, %166 ], [ null, %153 ]
  %171 = icmp slt i16 %156, 0
  br i1 %171, label %175, label %172

172:                                              ; preds = %169
  %173 = lshr i16 %156, 5
  %174 = zext i16 %173 to i32
  br label %178

175:                                              ; preds = %169
  %176 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %16, i64 0, i32 1, i32 0, i32 1
  %177 = load i32, i32* %176, align 4
  br label %178

178:                                              ; preds = %175, %172, %117, %148, %29
  %179 = phi i32 [ %1, %29 ], [ %149, %175 ], [ %149, %172 ], [ %149, %148 ], [ %88, %117 ]
  %180 = phi i16* [ %2, %29 ], [ %170, %175 ], [ %170, %172 ], [ %2, %148 ], [ %118, %117 ]
  %181 = phi i32 [ %3, %29 ], [ %177, %175 ], [ %174, %172 ], [ %3, %148 ], [ %119, %117 ]
  %182 = phi i16* [ %0, %29 ], [ %150, %175 ], [ %150, %172 ], [ %150, %148 ], [ %89, %117 ]
  %183 = load i32, i32* %5, align 4
  %184 = icmp sgt i32 %183, 0
  br i1 %184, label %598, label %185

185:                                              ; preds = %178
  %186 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #4
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %187 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %187) #4
  store i32 -1431655766, i32* %8, align 4
  %188 = bitcast [2 x %struct.CmpEquivLevel]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %188) #4
  %189 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %9, i64 0, i64 0, i32 0
  %190 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %9, i64 0, i64 0, i32 1
  %191 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %9, i64 0, i64 0, i32 2
  %192 = bitcast [2 x %struct.CmpEquivLevel]* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %188, i8 -86, i64 48, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %192) #4
  %193 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 0, i32 0
  %194 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 0, i32 1
  %195 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 0, i32 2
  %196 = bitcast i64* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %192, i8 -86, i64 48, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %196) #4
  %197 = bitcast i64* %11 to i16*
  %198 = bitcast i64* %12 to i8*
  store i64 -6148914691236517206, i64* %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #4
  %199 = bitcast i64* %12 to i16*
  %200 = bitcast [32 x i16]* %13 to i8*
  store i64 -6148914691236517206, i64* %12, align 8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %200) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %200, i8 -86, i64 64, i1 false) #4
  %201 = bitcast [32 x i16]* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %201) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %201, i8 -86, i64 64, i1 false) #4
  %202 = call %"class.icu_69::Normalizer2Impl"* @_ZN6icu_6918Normalizer2Factory10getNFCImplER10UErrorCode(i32* dereferenceable(4) %5) #4
  %203 = load i32, i32* %5, align 4
  %204 = icmp slt i32 %203, 1
  br i1 %204, label %205, label %596

205:                                              ; preds = %185
  %206 = icmp eq i32 %179, -1
  %207 = sext i32 %179 to i64
  %208 = getelementptr inbounds i16, i16* %182, i64 %207
  %209 = select i1 %206, i16* null, i16* %208
  %210 = icmp eq i32 %181, -1
  %211 = sext i32 %181 to i64
  %212 = getelementptr inbounds i16, i16* %180, i64 %211
  %213 = select i1 %210, i16* null, i16* %212
  %214 = and i32 %4, 4096
  %215 = icmp eq i32 %214, 0
  %216 = and i32 %4, 65536
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds [32 x i16], [32 x i16]* %13, i64 0, i64 0
  %219 = getelementptr inbounds [32 x i16], [32 x i16]* %13, i64 0, i64 1
  %220 = getelementptr inbounds [32 x i16], [32 x i16]* %14, i64 0, i64 0
  %221 = getelementptr inbounds [32 x i16], [32 x i16]* %14, i64 0, i64 1
  br label %222

222:                                              ; preds = %531, %205
  %223 = phi i16* [ %180, %205 ], [ %532, %531 ]
  %224 = phi i16* [ %182, %205 ], [ %533, %531 ]
  %225 = phi i16* [ %182, %205 ], [ %534, %531 ]
  %226 = phi i16* [ %180, %205 ], [ %535, %531 ]
  %227 = phi i16* [ %209, %205 ], [ %536, %531 ]
  %228 = phi i16* [ %213, %205 ], [ %537, %531 ]
  %229 = phi i32 [ 0, %205 ], [ %538, %531 ]
  %230 = phi i32 [ 0, %205 ], [ %539, %531 ]
  %231 = phi i32 [ -1, %205 ], [ %540, %531 ]
  %232 = phi i32 [ -1, %205 ], [ %541, %531 ]
  %233 = icmp slt i32 %231, 0
  br i1 %233, label %234, label %265

234:                                              ; preds = %222, %259
  %235 = phi i16* [ %262, %259 ], [ %224, %222 ]
  %236 = phi i16* [ %257, %259 ], [ %225, %222 ]
  %237 = phi i16* [ %264, %259 ], [ %227, %222 ]
  %238 = phi i32 [ %260, %259 ], [ %229, %222 ]
  %239 = icmp eq i16* %235, %237
  br i1 %239, label %246, label %240

240:                                              ; preds = %234
  %241 = load i16, i16* %235, align 2
  %242 = icmp ne i16 %241, 0
  %243 = icmp ne i16* %237, null
  %244 = and i1 %215, %243
  %245 = or i1 %244, %242
  br i1 %245, label %250, label %246

246:                                              ; preds = %240, %234
  %247 = icmp eq i32 %238, 0
  br i1 %247, label %265, label %248

248:                                              ; preds = %246
  %249 = sext i32 %238 to i64
  br label %253

250:                                              ; preds = %240
  %251 = zext i16 %241 to i32
  %252 = getelementptr inbounds i16, i16* %235, i64 1
  br label %265

253:                                              ; preds = %253, %248
  %254 = phi i64 [ %249, %248 ], [ %255, %253 ]
  %255 = add nsw i64 %254, -1
  %256 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %9, i64 0, i64 %255, i32 0
  %257 = load i16*, i16** %256, align 8
  %258 = icmp eq i16* %257, null
  br i1 %258, label %253, label %259

259:                                              ; preds = %253
  %260 = trunc i64 %255 to i32
  %261 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %9, i64 0, i64 %255, i32 1
  %262 = load i16*, i16** %261, align 8
  %263 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %9, i64 0, i64 %255, i32 2
  %264 = load i16*, i16** %263, align 8
  br label %234

265:                                              ; preds = %246, %250, %222
  %266 = phi i16* [ %252, %250 ], [ %224, %222 ], [ %235, %246 ]
  %267 = phi i16* [ %236, %250 ], [ %225, %222 ], [ %236, %246 ]
  %268 = phi i16* [ %237, %250 ], [ %227, %222 ], [ %237, %246 ]
  %269 = phi i32 [ %238, %250 ], [ %229, %222 ], [ 0, %246 ]
  %270 = phi i32 [ %251, %250 ], [ %231, %222 ], [ -1, %246 ]
  %271 = icmp slt i32 %232, 0
  br i1 %271, label %272, label %303

272:                                              ; preds = %265, %297
  %273 = phi i16* [ %300, %297 ], [ %223, %265 ]
  %274 = phi i16* [ %295, %297 ], [ %226, %265 ]
  %275 = phi i16* [ %302, %297 ], [ %228, %265 ]
  %276 = phi i32 [ %298, %297 ], [ %230, %265 ]
  %277 = icmp eq i16* %273, %275
  br i1 %277, label %284, label %278

278:                                              ; preds = %272
  %279 = load i16, i16* %273, align 2
  %280 = icmp ne i16 %279, 0
  %281 = icmp ne i16* %275, null
  %282 = and i1 %215, %281
  %283 = or i1 %282, %280
  br i1 %283, label %288, label %284

284:                                              ; preds = %278, %272
  %285 = icmp eq i32 %276, 0
  br i1 %285, label %303, label %286

286:                                              ; preds = %284
  %287 = sext i32 %276 to i64
  br label %291

288:                                              ; preds = %278
  %289 = zext i16 %279 to i32
  %290 = getelementptr inbounds i16, i16* %273, i64 1
  br label %303

291:                                              ; preds = %291, %286
  %292 = phi i64 [ %287, %286 ], [ %293, %291 ]
  %293 = add nsw i64 %292, -1
  %294 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 %293, i32 0
  %295 = load i16*, i16** %294, align 8
  %296 = icmp eq i16* %295, null
  br i1 %296, label %291, label %297

297:                                              ; preds = %291
  %298 = trunc i64 %293 to i32
  %299 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 %293, i32 1
  %300 = load i16*, i16** %299, align 8
  %301 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 %293, i32 2
  %302 = load i16*, i16** %301, align 8
  br label %272

303:                                              ; preds = %284, %288, %265
  %304 = phi i16* [ %290, %288 ], [ %223, %265 ], [ %273, %284 ]
  %305 = phi i16* [ %274, %288 ], [ %226, %265 ], [ %274, %284 ]
  %306 = phi i16* [ %275, %288 ], [ %228, %265 ], [ %275, %284 ]
  %307 = phi i32 [ %276, %288 ], [ %230, %265 ], [ 0, %284 ]
  %308 = phi i32 [ %289, %288 ], [ %232, %265 ], [ -1, %284 ]
  %309 = icmp eq i32 %270, %308
  %310 = icmp slt i32 %270, 0
  br i1 %309, label %311, label %312

311:                                              ; preds = %303
  br i1 %310, label %596, label %531

312:                                              ; preds = %303
  br i1 %310, label %596, label %313

313:                                              ; preds = %312
  %314 = icmp slt i32 %308, 0
  br i1 %314, label %596, label %315

315:                                              ; preds = %313
  %316 = and i32 %270, -2048
  %317 = icmp eq i32 %316, 55296
  br i1 %317, label %318, label %344

318:                                              ; preds = %315
  %319 = and i32 %270, 1024
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %332

321:                                              ; preds = %318
  %322 = icmp eq i16* %266, %268
  br i1 %322, label %344, label %323

323:                                              ; preds = %321
  %324 = load i16, i16* %266, align 2
  %325 = zext i16 %324 to i32
  %326 = and i32 %325, 64512
  %327 = icmp eq i32 %326, 56320
  br i1 %327, label %328, label %344

328:                                              ; preds = %323
  %329 = shl i32 %270, 10
  %330 = add i32 %329, -56613888
  %331 = add i32 %330, %325
  br label %344

332:                                              ; preds = %318
  %333 = getelementptr inbounds i16, i16* %266, i64 -2
  %334 = icmp ugt i16* %267, %333
  br i1 %334, label %344, label %335

335:                                              ; preds = %332
  %336 = load i16, i16* %333, align 2
  %337 = zext i16 %336 to i32
  %338 = and i32 %337, 64512
  %339 = icmp eq i32 %338, 55296
  br i1 %339, label %340, label %344

340:                                              ; preds = %335
  %341 = shl nuw nsw i32 %337, 10
  %342 = add nsw i32 %270, -56613888
  %343 = add i32 %342, %341
  br label %344

344:                                              ; preds = %340, %335, %332, %328, %323, %321, %315
  %345 = phi i32 [ %270, %315 ], [ %331, %328 ], [ %270, %323 ], [ %270, %321 ], [ %343, %340 ], [ %270, %335 ], [ %270, %332 ]
  %346 = and i32 %308, -2048
  %347 = icmp eq i32 %346, 55296
  br i1 %347, label %348, label %374

348:                                              ; preds = %344
  %349 = and i32 %308, 1024
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %362

351:                                              ; preds = %348
  %352 = icmp eq i16* %304, %306
  br i1 %352, label %374, label %353

353:                                              ; preds = %351
  %354 = load i16, i16* %304, align 2
  %355 = zext i16 %354 to i32
  %356 = and i32 %355, 64512
  %357 = icmp eq i32 %356, 56320
  br i1 %357, label %358, label %374

358:                                              ; preds = %353
  %359 = shl i32 %308, 10
  %360 = add i32 %359, -56613888
  %361 = add i32 %360, %355
  br label %374

362:                                              ; preds = %348
  %363 = getelementptr inbounds i16, i16* %304, i64 -2
  %364 = icmp ugt i16* %305, %363
  br i1 %364, label %374, label %365

365:                                              ; preds = %362
  %366 = load i16, i16* %363, align 2
  %367 = zext i16 %366 to i32
  %368 = and i32 %367, 64512
  %369 = icmp eq i32 %368, 55296
  br i1 %369, label %370, label %374

370:                                              ; preds = %365
  %371 = shl nuw nsw i32 %367, 10
  %372 = add nsw i32 %308, -56613888
  %373 = add i32 %372, %371
  br label %374

374:                                              ; preds = %370, %365, %362, %358, %353, %351, %344
  %375 = phi i32 [ %308, %344 ], [ %361, %358 ], [ %308, %353 ], [ %308, %351 ], [ %373, %370 ], [ %308, %365 ], [ %308, %362 ]
  %376 = icmp ne i32 %269, 0
  %377 = or i1 %217, %376
  br i1 %377, label %418, label %378

378:                                              ; preds = %374
  %379 = call i32 @ucase_toFullFolding_69(i32 %345, i16** nonnull %7, i32 %36) #4
  store i32 %379, i32* %8, align 4
  %380 = icmp sgt i32 %379, -1
  br i1 %380, label %381, label %418

381:                                              ; preds = %378
  br i1 %317, label %382, label %392

382:                                              ; preds = %381
  %383 = and i32 %270, 1024
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %387

385:                                              ; preds = %382
  %386 = getelementptr inbounds i16, i16* %266, i64 1
  br label %392

387:                                              ; preds = %382
  %388 = getelementptr inbounds i16, i16* %304, i64 -1
  %389 = getelementptr inbounds i16, i16* %304, i64 -2
  %390 = load i16, i16* %389, align 2
  %391 = zext i16 %390 to i32
  br label %392

392:                                              ; preds = %387, %385, %381
  %393 = phi i16* [ %304, %385 ], [ %388, %387 ], [ %304, %381 ]
  %394 = phi i16* [ %386, %385 ], [ %266, %387 ], [ %266, %381 ]
  %395 = phi i32 [ %308, %385 ], [ %391, %387 ], [ %308, %381 ]
  store i16* %267, i16** %189, align 16
  store i16* %394, i16** %190, align 8
  store i16* %268, i16** %191, align 16
  %396 = icmp slt i32 %379, 32
  br i1 %396, label %397, label %401

397:                                              ; preds = %392
  %398 = load i16*, i16** %7, align 8
  %399 = call i16* @u_memcpy_69(i16* nonnull %218, i16* %398, i32 %379) #4
  %400 = load i32, i32* %8, align 4
  br label %414

401:                                              ; preds = %392
  %402 = icmp ult i32 %379, 65536
  br i1 %402, label %403, label %405

403:                                              ; preds = %401
  %404 = trunc i32 %379 to i16
  store i16 %404, i16* %218, align 16
  br label %412

405:                                              ; preds = %401
  %406 = lshr i32 %379, 10
  %407 = trunc i32 %406 to i16
  %408 = add i16 %407, -10304
  store i16 %408, i16* %218, align 16
  %409 = trunc i32 %379 to i16
  %410 = and i16 %409, 1023
  %411 = or i16 %410, -9216
  store i16 %411, i16* %219, align 2
  br label %412

412:                                              ; preds = %405, %403
  %413 = phi i32 [ 1, %403 ], [ 2, %405 ]
  store i32 %413, i32* %8, align 4
  br label %414

414:                                              ; preds = %412, %397
  %415 = phi i32 [ %413, %412 ], [ %400, %397 ]
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds [32 x i16], [32 x i16]* %13, i64 0, i64 %416
  br label %531

418:                                              ; preds = %378, %374
  %419 = icmp ne i32 %307, 0
  %420 = or i1 %217, %419
  br i1 %420, label %461, label %421

421:                                              ; preds = %418
  %422 = call i32 @ucase_toFullFolding_69(i32 %375, i16** nonnull %7, i32 %36) #4
  store i32 %422, i32* %8, align 4
  %423 = icmp sgt i32 %422, -1
  br i1 %423, label %424, label %461

424:                                              ; preds = %421
  br i1 %347, label %425, label %435

425:                                              ; preds = %424
  %426 = and i32 %308, 1024
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %430

428:                                              ; preds = %425
  %429 = getelementptr inbounds i16, i16* %304, i64 1
  br label %435

430:                                              ; preds = %425
  %431 = getelementptr inbounds i16, i16* %266, i64 -1
  %432 = getelementptr inbounds i16, i16* %266, i64 -2
  %433 = load i16, i16* %432, align 2
  %434 = zext i16 %433 to i32
  br label %435

435:                                              ; preds = %430, %428, %424
  %436 = phi i16* [ %429, %428 ], [ %304, %430 ], [ %304, %424 ]
  %437 = phi i16* [ %266, %428 ], [ %431, %430 ], [ %266, %424 ]
  %438 = phi i32 [ %270, %428 ], [ %434, %430 ], [ %270, %424 ]
  store i16* %305, i16** %193, align 16
  store i16* %436, i16** %194, align 8
  store i16* %306, i16** %195, align 16
  %439 = icmp slt i32 %422, 32
  br i1 %439, label %440, label %444

440:                                              ; preds = %435
  %441 = load i16*, i16** %7, align 8
  %442 = call i16* @u_memcpy_69(i16* nonnull %220, i16* %441, i32 %422) #4
  %443 = load i32, i32* %8, align 4
  br label %457

444:                                              ; preds = %435
  %445 = icmp ult i32 %422, 65536
  br i1 %445, label %446, label %448

446:                                              ; preds = %444
  %447 = trunc i32 %422 to i16
  store i16 %447, i16* %220, align 16
  br label %455

448:                                              ; preds = %444
  %449 = lshr i32 %422, 10
  %450 = trunc i32 %449 to i16
  %451 = add i16 %450, -10304
  store i16 %451, i16* %220, align 16
  %452 = trunc i32 %422 to i16
  %453 = and i16 %452, 1023
  %454 = or i16 %453, -9216
  store i16 %454, i16* %221, align 2
  br label %455

455:                                              ; preds = %448, %446
  %456 = phi i32 [ 1, %446 ], [ 2, %448 ]
  store i32 %456, i32* %8, align 4
  br label %457

457:                                              ; preds = %455, %440
  %458 = phi i32 [ %456, %455 ], [ %443, %440 ]
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds [32 x i16], [32 x i16]* %14, i64 0, i64 %459
  br label %531

461:                                              ; preds = %421, %418
  %462 = icmp sgt i32 %269, 1
  br i1 %462, label %496, label %463

463:                                              ; preds = %461
  %464 = call i16* @_ZNK6icu_6915Normalizer2Impl16getDecompositionEiPDsRi(%"class.icu_69::Normalizer2Impl"* %202, i32 %345, i16* nonnull %197, i32* nonnull dereferenceable(4) %8) #4
  store i16* %464, i16** %7, align 8
  %465 = icmp eq i16* %464, null
  br i1 %465, label %496, label %466

466:                                              ; preds = %463
  br i1 %317, label %467, label %477

467:                                              ; preds = %466
  %468 = and i32 %270, 1024
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %472

470:                                              ; preds = %467
  %471 = getelementptr inbounds i16, i16* %266, i64 1
  br label %477

472:                                              ; preds = %467
  %473 = getelementptr inbounds i16, i16* %304, i64 -1
  %474 = getelementptr inbounds i16, i16* %304, i64 -2
  %475 = load i16, i16* %474, align 2
  %476 = zext i16 %475 to i32
  br label %477

477:                                              ; preds = %472, %470, %466
  %478 = phi i16* [ %304, %470 ], [ %473, %472 ], [ %304, %466 ]
  %479 = phi i16* [ %471, %470 ], [ %266, %472 ], [ %266, %466 ]
  %480 = phi i32 [ %308, %470 ], [ %476, %472 ], [ %308, %466 ]
  %481 = sext i32 %269 to i64
  %482 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %9, i64 0, i64 %481, i32 0
  store i16* %267, i16** %482, align 8
  %483 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %9, i64 0, i64 %481, i32 1
  store i16* %479, i16** %483, align 8
  %484 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %9, i64 0, i64 %481, i32 2
  store i16* %268, i16** %484, align 8
  %485 = add nsw i32 %269, 1
  %486 = icmp slt i32 %485, 2
  br i1 %486, label %487, label %491

487:                                              ; preds = %477
  %488 = add nsw i32 %269, 2
  %489 = sext i32 %485 to i64
  %490 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %9, i64 0, i64 %489, i32 0
  store i16* null, i16** %490, align 8
  br label %491

491:                                              ; preds = %487, %477
  %492 = phi i32 [ %488, %487 ], [ 2, %477 ]
  %493 = load i32, i32* %8, align 4
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i16, i16* %464, i64 %494
  br label %531

496:                                              ; preds = %463, %461
  %497 = icmp sgt i32 %307, 1
  br i1 %497, label %542, label %498

498:                                              ; preds = %496
  %499 = call i16* @_ZNK6icu_6915Normalizer2Impl16getDecompositionEiPDsRi(%"class.icu_69::Normalizer2Impl"* %202, i32 %375, i16* nonnull %199, i32* nonnull dereferenceable(4) %8) #4
  store i16* %499, i16** %7, align 8
  %500 = icmp eq i16* %499, null
  br i1 %500, label %542, label %501

501:                                              ; preds = %498
  br i1 %347, label %502, label %512

502:                                              ; preds = %501
  %503 = and i32 %308, 1024
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %505, label %507

505:                                              ; preds = %502
  %506 = getelementptr inbounds i16, i16* %304, i64 1
  br label %512

507:                                              ; preds = %502
  %508 = getelementptr inbounds i16, i16* %266, i64 -1
  %509 = getelementptr inbounds i16, i16* %266, i64 -2
  %510 = load i16, i16* %509, align 2
  %511 = zext i16 %510 to i32
  br label %512

512:                                              ; preds = %507, %505, %501
  %513 = phi i16* [ %506, %505 ], [ %304, %507 ], [ %304, %501 ]
  %514 = phi i16* [ %266, %505 ], [ %508, %507 ], [ %266, %501 ]
  %515 = phi i32 [ %270, %505 ], [ %511, %507 ], [ %270, %501 ]
  %516 = sext i32 %307 to i64
  %517 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 %516, i32 0
  store i16* %305, i16** %517, align 8
  %518 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 %516, i32 1
  store i16* %513, i16** %518, align 8
  %519 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 %516, i32 2
  store i16* %306, i16** %519, align 8
  %520 = add nsw i32 %307, 1
  %521 = icmp slt i32 %520, 2
  br i1 %521, label %522, label %526

522:                                              ; preds = %512
  %523 = add nsw i32 %307, 2
  %524 = sext i32 %520 to i64
  %525 = getelementptr inbounds [2 x %struct.CmpEquivLevel], [2 x %struct.CmpEquivLevel]* %10, i64 0, i64 %524, i32 0
  store i16* null, i16** %525, align 8
  br label %526

526:                                              ; preds = %522, %512
  %527 = phi i32 [ %523, %522 ], [ 2, %512 ]
  %528 = load i32, i32* %8, align 4
  %529 = sext i32 %528 to i64
  %530 = getelementptr inbounds i16, i16* %499, i64 %529
  br label %531

531:                                              ; preds = %526, %491, %457, %414, %311
  %532 = phi i16* [ %393, %414 ], [ %220, %457 ], [ %478, %491 ], [ %499, %526 ], [ %304, %311 ]
  %533 = phi i16* [ %218, %414 ], [ %437, %457 ], [ %464, %491 ], [ %514, %526 ], [ %266, %311 ]
  %534 = phi i16* [ %218, %414 ], [ %267, %457 ], [ %464, %491 ], [ %267, %526 ], [ %267, %311 ]
  %535 = phi i16* [ %305, %414 ], [ %220, %457 ], [ %305, %491 ], [ %499, %526 ], [ %305, %311 ]
  %536 = phi i16* [ %417, %414 ], [ %268, %457 ], [ %495, %491 ], [ %268, %526 ], [ %268, %311 ]
  %537 = phi i16* [ %306, %414 ], [ %460, %457 ], [ %306, %491 ], [ %530, %526 ], [ %306, %311 ]
  %538 = phi i32 [ 1, %414 ], [ %269, %457 ], [ %492, %491 ], [ %269, %526 ], [ %269, %311 ]
  %539 = phi i32 [ %307, %414 ], [ 1, %457 ], [ %307, %491 ], [ %527, %526 ], [ %307, %311 ]
  %540 = phi i32 [ -1, %414 ], [ %438, %457 ], [ -1, %491 ], [ %515, %526 ], [ -1, %311 ]
  %541 = phi i32 [ %395, %414 ], [ -1, %457 ], [ %480, %491 ], [ -1, %526 ], [ -1, %311 ]
  br label %222

542:                                              ; preds = %498, %496
  %543 = icmp sgt i32 %270, 55295
  %544 = icmp sgt i32 %308, 55295
  %545 = and i1 %543, %544
  %546 = trunc i32 %4 to i16
  %547 = icmp slt i16 %546, 0
  %548 = and i1 %547, %545
  br i1 %548, label %549, label %592

549:                                              ; preds = %542
  %550 = icmp sgt i32 %270, 56319
  %551 = icmp eq i16* %266, %268
  %552 = or i1 %551, %550
  br i1 %552, label %557, label %553

553:                                              ; preds = %549
  %554 = load i16, i16* %266, align 2
  %555 = and i16 %554, -1024
  %556 = icmp eq i16 %555, -9216
  br i1 %556, label %570, label %557

557:                                              ; preds = %553, %549
  %558 = and i32 %270, -1024
  %559 = icmp ne i32 %558, 56320
  %560 = getelementptr inbounds i16, i16* %266, i64 -1
  %561 = icmp eq i16* %267, %560
  %562 = or i1 %561, %559
  br i1 %562, label %568, label %563

563:                                              ; preds = %557
  %564 = getelementptr inbounds i16, i16* %266, i64 -2
  %565 = load i16, i16* %564, align 2
  %566 = and i16 %565, -1024
  %567 = icmp eq i16 %566, -10240
  br i1 %567, label %570, label %568

568:                                              ; preds = %563, %557
  %569 = add nsw i32 %270, -10240
  br label %570

570:                                              ; preds = %568, %563, %553
  %571 = phi i32 [ %270, %553 ], [ %270, %563 ], [ %569, %568 ]
  %572 = icmp sgt i32 %308, 56319
  %573 = icmp eq i16* %304, %306
  %574 = or i1 %573, %572
  br i1 %574, label %579, label %575

575:                                              ; preds = %570
  %576 = load i16, i16* %304, align 2
  %577 = and i16 %576, -1024
  %578 = icmp eq i16 %577, -9216
  br i1 %578, label %592, label %579

579:                                              ; preds = %575, %570
  %580 = and i32 %308, -1024
  %581 = icmp ne i32 %580, 56320
  %582 = getelementptr inbounds i16, i16* %304, i64 -1
  %583 = icmp eq i16* %305, %582
  %584 = or i1 %583, %581
  br i1 %584, label %590, label %585

585:                                              ; preds = %579
  %586 = getelementptr inbounds i16, i16* %304, i64 -2
  %587 = load i16, i16* %586, align 2
  %588 = and i16 %587, -1024
  %589 = icmp eq i16 %588, -10240
  br i1 %589, label %592, label %590

590:                                              ; preds = %585, %579
  %591 = add nsw i32 %308, -10240
  br label %592

592:                                              ; preds = %590, %585, %575, %542
  %593 = phi i32 [ %571, %575 ], [ %571, %585 ], [ %571, %590 ], [ %270, %542 ]
  %594 = phi i32 [ %308, %575 ], [ %308, %585 ], [ %591, %590 ], [ %308, %542 ]
  %595 = sub nsw i32 %593, %594
  br label %596

596:                                              ; preds = %311, %312, %313, %185, %592
  %597 = phi i32 [ %595, %592 ], [ 0, %185 ], [ 0, %311 ], [ -1, %312 ], [ 1, %313 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %201) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %200) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %192) #4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %188) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %187) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #4
  br label %598

598:                                              ; preds = %46, %178, %596
  %599 = phi i32 [ %597, %596 ], [ 0, %178 ], [ 0, %46 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %16) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %33) #4
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %30) #4
  br label %600

600:                                              ; preds = %6, %598, %28
  %601 = phi i32 [ 0, %28 ], [ %599, %598 ], [ 0, %6 ]
  ret i32 %601
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.icu_69::Normalizer2"* @_ZN6icu_6911Normalizer214getNFDInstanceER10UErrorCode(i32* dereferenceable(4)) local_unnamed_addr #2

declare %"class.icu_69::Normalizer2"* @_ZN6icu_6918Normalizer2Factory14getFCDInstanceER10UErrorCode(i32* dereferenceable(4)) local_unnamed_addr #2

declare %"class.icu_69::UnicodeSet"* @uniset_getUnicode32Instance_69(i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc signext i8 @_ZL10_normalizePKN6icu_6911Normalizer2EPKDsiRNS_13UnicodeStringEP10UErrorCode(%"class.icu_69::Normalizer2"*, i16*, i32, %"class.icu_69::UnicodeString"* dereferenceable(64), i32*) unnamed_addr #0 {
  %6 = alloca %"class.icu_69::UnicodeString", align 8
  %7 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %8 = alloca %"class.icu_69::UnicodeString", align 8
  %9 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %10 = bitcast %"class.icu_69::UnicodeString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 64, i1 false)
  %11 = lshr i32 %2, 31
  %12 = trunc i32 %11 to i8
  %13 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %7, i64 0, i32 0
  store i16* %1, i16** %13, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %6, i8 signext %12, %"class.icu_69::ConstChar16Ptr"* nonnull %7, i32 %2) #4
  %14 = load i16*, i16** %13, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %14) #4, !srcloc !2
  %15 = bitcast %"class.icu_69::Normalizer2"* %0 to i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)***
  %16 = load i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)**, i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)*, i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)** %16, i64 14
  %18 = load i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)*, i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)** %17, align 8
  %19 = call i32 %18(%"class.icu_69::Normalizer2"* %0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %6, i32* dereferenceable(4) %4) #4
  %20 = load i32, i32* %4, align 4
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %22, label %62

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 1, i32 0, i32 0
  %24 = load i16, i16* %23, align 8
  %25 = icmp slt i16 %24, 0
  %26 = lshr i16 %24, 5
  %27 = zext i16 %26 to i32
  %28 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 1, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = select i1 %25, i32 %29, i32 %27
  %31 = icmp slt i32 %19, %30
  br i1 %31, label %32, label %61

32:                                               ; preds = %22
  %33 = bitcast %"class.icu_69::UnicodeString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %33) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 64, i1 false)
  call void @_ZNK6icu_6913UnicodeString13tempSubStringEii(%"class.icu_69::UnicodeString"* nonnull sret %8, %"class.icu_69::UnicodeString"* nonnull %6, i32 %19, i32 2147483647) #4
  %34 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 1
  %35 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %34, i64 0, i32 0, i32 0
  %36 = load i16, i16* %35, align 8
  %37 = sext i16 %36 to i32
  %38 = and i32 %37, 17
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %49

40:                                               ; preds = %32
  %41 = and i32 %37, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %34 to %struct.anon*
  %45 = getelementptr inbounds %struct.anon, %struct.anon* %44, i64 0, i32 1, i64 0
  br label %49

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 1, i32 0, i32 3
  %48 = load i16*, i16** %47, align 8
  br label %49

49:                                               ; preds = %32, %43, %46
  %50 = phi i16* [ %45, %43 ], [ %48, %46 ], [ null, %32 ]
  %51 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %9, i64 0, i32 0
  store i16* %50, i16** %51, align 8
  %52 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString5setToEaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* %3, i8 signext 0, %"class.icu_69::ConstChar16Ptr"* nonnull %9, i32 %19) #4
  %53 = load i16*, i16** %51, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %53) #4, !srcloc !2
  %54 = bitcast %"class.icu_69::Normalizer2"* %0 to %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)***
  %55 = load %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)**, %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)*** %54, align 8
  %56 = getelementptr inbounds %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)** %55, i64 5
  %57 = load %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)** %56, align 8
  %58 = call dereferenceable(64) %"class.icu_69::UnicodeString"* %57(%"class.icu_69::Normalizer2"* %0, %"class.icu_69::UnicodeString"* dereferenceable(64) %3, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %8, i32* dereferenceable(4) %4) #4
  %59 = load i32, i32* %4, align 4
  %60 = icmp sgt i32 %59, 0
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %33) #4
  br i1 %60, label %61, label %62

61:                                               ; preds = %49, %22
  br label %62

62:                                               ; preds = %5, %49, %61
  %63 = phi i8 [ 0, %61 ], [ 1, %49 ], [ 0, %5 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10) #4
  ret i8 %63
}

; Function Attrs: nounwind
declare void @_ZN6icu_6919FilteredNormalizer2D1Ev(%"class.icu_69::FilteredNormalizer2"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #3

declare void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"*, i8 signext, %"class.icu_69::ConstChar16Ptr"*, i32) unnamed_addr #2

declare void @_ZNK6icu_6913UnicodeString13tempSubStringEii(%"class.icu_69::UnicodeString"* sret, %"class.icu_69::UnicodeString"*, i32, i32) local_unnamed_addr #2

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString5setToEaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"*, i8 signext, %"class.icu_69::ConstChar16Ptr"*, i32) local_unnamed_addr #2

declare %"class.icu_69::Normalizer2Impl"* @_ZN6icu_6918Normalizer2Factory10getNFCImplER10UErrorCode(i32* dereferenceable(4)) local_unnamed_addr #2

declare i32 @ucase_toFullFolding_69(i32, i16**, i32) local_unnamed_addr #2

declare i16* @u_memcpy_69(i16*, i16*, i32) local_unnamed_addr #2

declare i16* @_ZNK6icu_6915Normalizer2Impl16getDecompositionEiPDsRi(%"class.icu_69::Normalizer2Impl"*, i32, i16*, i32* dereferenceable(4)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2143615236}
