; ModuleID = '../../components/crash/core/common/crash_key_base_support.cc'
source_filename = "../../components/crash/core/common/crash_key_base_support.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::debug::CrashKeyImplementation" = type { i32 (...)** }
%"class.crash_reporter::(anonymous namespace)::CrashKeyBaseSupport" = type { %"class.base::debug::CrashKeyImplementation" }
%"struct.base::debug::CrashKeyString" = type <{ i8*, i32, [4 x i8] }>
%"class.crashpad::Annotation" = type <{ %"struct.std::__1::atomic", i8*, i8*, i32, i16, [2 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.crashpad::Annotation"* }
%"class.crash_reporter::internal::CrashKeyStringImpl" = type { i8*, i64*, i64 }

$_ZN4base5debug22CrashKeyImplementationD2Ev = comdat any

@_ZTVN14crash_reporter12_GLOBAL__N_119CrashKeyBaseSupportE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::debug::CrashKeyImplementation"*)* @_ZN4base5debug22CrashKeyImplementationD2Ev to i8*), i8* bitcast (void (%"class.crash_reporter::(anonymous namespace)::CrashKeyBaseSupport"*)* @_ZN14crash_reporter12_GLOBAL__N_119CrashKeyBaseSupportD0Ev to i8*), i8* bitcast (%"struct.base::debug::CrashKeyString"* (%"class.crash_reporter::(anonymous namespace)::CrashKeyBaseSupport"*, i8*, i32)* @_ZN14crash_reporter12_GLOBAL__N_119CrashKeyBaseSupport8AllocateEPKcN4base5debug12CrashKeySizeE to i8*), i8* bitcast (void (%"class.crash_reporter::(anonymous namespace)::CrashKeyBaseSupport"*, %"struct.base::debug::CrashKeyString"*, i8*, i64)* @_ZN14crash_reporter12_GLOBAL__N_119CrashKeyBaseSupport3SetEPN4base5debug14CrashKeyStringENS2_16BasicStringPieceIcNSt3__111char_traitsIcEEEE to i8*), i8* bitcast (void (%"class.crash_reporter::(anonymous namespace)::CrashKeyBaseSupport"*, %"struct.base::debug::CrashKeyString"*)* @_ZN14crash_reporter12_GLOBAL__N_119CrashKeyBaseSupport5ClearEPN4base5debug14CrashKeyStringE to i8*)] }, align 8
@constinit = private unnamed_addr constant [3 x i64] [i64 200, i64 200, i64 200], align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14crash_reporter29InitializeCrashKeyBaseSupportEv() local_unnamed_addr #0 {
  %1 = tail call i8* @_Znwm(i64 8) #6
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN14crash_reporter12_GLOBAL__N_119CrashKeyBaseSupportE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast i8* %1 to %"class.base::debug::CrashKeyImplementation"*
  tail call void @_ZN4base5debug25SetCrashKeyImplementationENSt3__110unique_ptrINS0_22CrashKeyImplementationENS1_14default_deleteIS3_EEEE(%"class.base::debug::CrashKeyImplementation"* nonnull %3) #7
  ret void
}

declare void @_ZN4base5debug25SetCrashKeyImplementationENSt3__110unique_ptrINS0_22CrashKeyImplementationENS1_14default_deleteIS3_EEEE(%"class.base::debug::CrashKeyImplementation"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN14crash_reporter12_GLOBAL__N_119CrashKeyBaseSupportD0Ev(%"class.crash_reporter::(anonymous namespace)::CrashKeyBaseSupport"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.crash_reporter::(anonymous namespace)::CrashKeyBaseSupport"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"struct.base::debug::CrashKeyString"* @_ZN14crash_reporter12_GLOBAL__N_119CrashKeyBaseSupport8AllocateEPKcN4base5debug12CrashKeySizeE(%"class.crash_reporter::(anonymous namespace)::CrashKeyBaseSupport"* nocapture readnone, i8*, i32) unnamed_addr #0 align 2 {
  switch i32 %2, label %88 [
    i32 32, label %4
    i32 64, label %32
    i32 256, label %60
  ]

4:                                                ; preds = %3
  %5 = tail call i8* @_Znwm(i64 128) #6
  %6 = bitcast i8* %5 to i8**
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 32, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 32
  %10 = getelementptr inbounds i8, i8* %5, i64 64
  %11 = getelementptr inbounds i8, i8* %5, i64 16
  %12 = bitcast i8* %11 to i8**
  store i8* %9, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 24
  %14 = bitcast i8* %13 to i8**
  store i8* %10, i8** %14, align 8
  %15 = getelementptr inbounds i8, i8* %5, i64 56
  %16 = bitcast i8* %9 to i8**
  store i8* %1, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %5, i64 40
  %18 = bitcast i8* %17 to i8**
  store i8* %15, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %5, i64 48
  %20 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> <i64 1, i64 200>, <2 x i64>* %20, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 94
  %22 = bitcast i8* %10 to %"class.crashpad::Annotation"**
  store %"class.crashpad::Annotation"* null, %"class.crashpad::Annotation"** %22, align 8
  %23 = getelementptr inbounds i8, i8* %5, i64 72
  %24 = bitcast i8* %23 to i8**
  store i8* %1, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %5, i64 80
  %26 = bitcast i8* %25 to i8**
  store i8* %21, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %5, i64 88
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %5, i64 92
  %30 = bitcast i8* %29 to i16*
  store i16 1, i16* %30, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %21, i8 0, i64 32, i1 false) #7
  %31 = bitcast i8* %5 to %"struct.base::debug::CrashKeyString"*
  br label %88

32:                                               ; preds = %3
  %33 = tail call i8* @_Znwm(i64 160) #6
  %34 = bitcast i8* %33 to i8**
  store i8* %1, i8** %34, align 8
  %35 = getelementptr inbounds i8, i8* %33, i64 8
  %36 = bitcast i8* %35 to i32*
  store i32 64, i32* %36, align 8
  %37 = getelementptr inbounds i8, i8* %33, i64 32
  %38 = getelementptr inbounds i8, i8* %33, i64 64
  %39 = getelementptr inbounds i8, i8* %33, i64 16
  %40 = bitcast i8* %39 to i8**
  store i8* %37, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %33, i64 24
  %42 = bitcast i8* %41 to i8**
  store i8* %38, i8** %42, align 8
  %43 = getelementptr inbounds i8, i8* %33, i64 56
  %44 = bitcast i8* %37 to i8**
  store i8* %1, i8** %44, align 8
  %45 = getelementptr inbounds i8, i8* %33, i64 40
  %46 = bitcast i8* %45 to i8**
  store i8* %43, i8** %46, align 8
  %47 = getelementptr inbounds i8, i8* %33, i64 48
  %48 = bitcast i8* %47 to <2 x i64>*
  store <2 x i64> <i64 1, i64 200>, <2 x i64>* %48, align 8
  %49 = getelementptr inbounds i8, i8* %33, i64 94
  %50 = bitcast i8* %38 to %"class.crashpad::Annotation"**
  store %"class.crashpad::Annotation"* null, %"class.crashpad::Annotation"** %50, align 8
  %51 = getelementptr inbounds i8, i8* %33, i64 72
  %52 = bitcast i8* %51 to i8**
  store i8* %1, i8** %52, align 8
  %53 = getelementptr inbounds i8, i8* %33, i64 80
  %54 = bitcast i8* %53 to i8**
  store i8* %49, i8** %54, align 8
  %55 = getelementptr inbounds i8, i8* %33, i64 88
  %56 = bitcast i8* %55 to i32*
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds i8, i8* %33, i64 92
  %58 = bitcast i8* %57 to i16*
  store i16 1, i16* %58, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %49, i8 0, i64 64, i1 false) #7
  %59 = bitcast i8* %33 to %"struct.base::debug::CrashKeyString"*
  br label %88

60:                                               ; preds = %3
  %61 = tail call i8* @_Znwm(i64 368) #6
  %62 = bitcast i8* %61 to i8**
  store i8* %1, i8** %62, align 8
  %63 = getelementptr inbounds i8, i8* %61, i64 8
  %64 = bitcast i8* %63 to i32*
  store i32 256, i32* %64, align 8
  %65 = getelementptr inbounds i8, i8* %61, i64 32
  %66 = getelementptr inbounds i8, i8* %61, i64 80
  %67 = getelementptr inbounds i8, i8* %61, i64 16
  %68 = bitcast i8* %67 to i8**
  store i8* %65, i8** %68, align 8
  %69 = getelementptr inbounds i8, i8* %61, i64 24
  %70 = bitcast i8* %69 to i8**
  store i8* %66, i8** %70, align 8
  %71 = getelementptr inbounds i8, i8* %61, i64 56
  %72 = bitcast i8* %65 to i8**
  store i8* %1, i8** %72, align 8
  %73 = getelementptr inbounds i8, i8* %61, i64 40
  %74 = bitcast i8* %73 to i8**
  store i8* %71, i8** %74, align 8
  %75 = getelementptr inbounds i8, i8* %61, i64 48
  %76 = bitcast i8* %75 to i64*
  store i64 3, i64* %76, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 bitcast ([3 x i64]* @constinit to i8*), i64 24, i1 false) #7
  %77 = getelementptr inbounds i8, i8* %61, i64 110
  %78 = bitcast i8* %66 to %"class.crashpad::Annotation"**
  store %"class.crashpad::Annotation"* null, %"class.crashpad::Annotation"** %78, align 8
  %79 = getelementptr inbounds i8, i8* %61, i64 88
  %80 = bitcast i8* %79 to i8**
  store i8* %1, i8** %80, align 8
  %81 = getelementptr inbounds i8, i8* %61, i64 96
  %82 = bitcast i8* %81 to i8**
  store i8* %77, i8** %82, align 8
  %83 = getelementptr inbounds i8, i8* %61, i64 104
  %84 = bitcast i8* %83 to i32*
  store i32 0, i32* %84, align 8
  %85 = getelementptr inbounds i8, i8* %61, i64 108
  %86 = bitcast i8* %85 to i16*
  store i16 1, i16* %86, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %77, i8 0, i64 256, i1 false) #7
  %87 = bitcast i8* %61 to %"struct.base::debug::CrashKeyString"*
  br label %88

88:                                               ; preds = %3, %60, %32, %4
  %89 = phi %"struct.base::debug::CrashKeyString"* [ %87, %60 ], [ %59, %32 ], [ %31, %4 ], [ null, %3 ]
  ret %"struct.base::debug::CrashKeyString"* %89
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN14crash_reporter12_GLOBAL__N_119CrashKeyBaseSupport3SetEPN4base5debug14CrashKeyStringENS2_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::(anonymous namespace)::CrashKeyBaseSupport"* nocapture readnone, %"struct.base::debug::CrashKeyString"*, i8*, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.base::debug::CrashKeyString", %"struct.base::debug::CrashKeyString"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %56 [
    i32 32, label %7
    i32 64, label %21
    i32 256, label %35
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.base::debug::CrashKeyString", %"struct.base::debug::CrashKeyString"* %1, i64 2
  %9 = bitcast %"struct.base::debug::CrashKeyString"* %8 to %"class.crash_reporter::internal::CrashKeyStringImpl"*
  tail call void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"* %9, i8* %2, i64 %3) #7
  %10 = getelementptr inbounds %"struct.base::debug::CrashKeyString", %"struct.base::debug::CrashKeyString"* %1, i64 4
  %11 = tail call i1 @llvm.is.constant.i64(i64 %3) #7
  %12 = icmp ult i64 %3, 4294967296
  %13 = trunc i64 %3 to i32
  %14 = select i1 %12, i32 %13, i32 -1
  %15 = icmp ult i64 %3, 4294967295
  %16 = select i1 %15, i64 %3, i64 4294967295
  %17 = trunc i64 %16 to i32
  %18 = select i1 %11, i32 %17, i32 %14
  %19 = icmp ult i32 %18, 32
  %20 = select i1 %19, i32 %18, i32 32
  br label %49

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"struct.base::debug::CrashKeyString", %"struct.base::debug::CrashKeyString"* %1, i64 2
  %23 = bitcast %"struct.base::debug::CrashKeyString"* %22 to %"class.crash_reporter::internal::CrashKeyStringImpl"*
  tail call void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"* %23, i8* %2, i64 %3) #7
  %24 = getelementptr inbounds %"struct.base::debug::CrashKeyString", %"struct.base::debug::CrashKeyString"* %1, i64 4
  %25 = tail call i1 @llvm.is.constant.i64(i64 %3) #7
  %26 = icmp ult i64 %3, 4294967296
  %27 = trunc i64 %3 to i32
  %28 = select i1 %26, i32 %27, i32 -1
  %29 = icmp ult i64 %3, 4294967295
  %30 = select i1 %29, i64 %3, i64 4294967295
  %31 = trunc i64 %30 to i32
  %32 = select i1 %25, i32 %31, i32 %28
  %33 = icmp ult i32 %32, 64
  %34 = select i1 %33, i32 %32, i32 64
  br label %49

35:                                               ; preds = %4
  %36 = getelementptr inbounds %"struct.base::debug::CrashKeyString", %"struct.base::debug::CrashKeyString"* %1, i64 2
  %37 = bitcast %"struct.base::debug::CrashKeyString"* %36 to %"class.crash_reporter::internal::CrashKeyStringImpl"*
  tail call void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"* %37, i8* %2, i64 %3) #7
  %38 = getelementptr inbounds %"struct.base::debug::CrashKeyString", %"struct.base::debug::CrashKeyString"* %1, i64 5
  %39 = tail call i1 @llvm.is.constant.i64(i64 %3) #7
  %40 = icmp ult i64 %3, 4294967296
  %41 = trunc i64 %3 to i32
  %42 = select i1 %40, i32 %41, i32 -1
  %43 = icmp ult i64 %3, 4294967295
  %44 = select i1 %43, i64 %3, i64 4294967295
  %45 = trunc i64 %44 to i32
  %46 = select i1 %39, i32 %45, i32 %42
  %47 = icmp ult i32 %46, 256
  %48 = select i1 %47, i32 %46, i32 256
  br label %49

49:                                               ; preds = %7, %21, %35
  %50 = phi i64 [ 6, %35 ], [ 5, %21 ], [ 5, %7 ]
  %51 = phi i32 [ %48, %35 ], [ %34, %21 ], [ %20, %7 ]
  %52 = phi %"struct.base::debug::CrashKeyString"* [ %38, %35 ], [ %24, %21 ], [ %10, %7 ]
  %53 = getelementptr inbounds %"struct.base::debug::CrashKeyString", %"struct.base::debug::CrashKeyString"* %1, i64 %50, i32 2, i64 2
  %54 = zext i32 %51 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 1 %2, i64 %54, i1 false) #7
  %55 = bitcast %"struct.base::debug::CrashKeyString"* %52 to %"class.crashpad::Annotation"*
  tail call void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"* %55, i32 %51) #7
  br label %56

56:                                               ; preds = %49, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN14crash_reporter12_GLOBAL__N_119CrashKeyBaseSupport5ClearEPN4base5debug14CrashKeyStringE(%"class.crash_reporter::(anonymous namespace)::CrashKeyBaseSupport"* nocapture readnone, %"struct.base::debug::CrashKeyString"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.base::debug::CrashKeyString", %"struct.base::debug::CrashKeyString"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %12 [
    i32 32, label %5
    i32 64, label %5
    i32 256, label %5
  ]

5:                                                ; preds = %2, %2, %2
  %6 = getelementptr inbounds %"struct.base::debug::CrashKeyString", %"struct.base::debug::CrashKeyString"* %1, i64 1
  %7 = bitcast %"struct.base::debug::CrashKeyString"* %6 to %"class.crash_reporter::internal::CrashKeyStringImpl"**
  %8 = load %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crash_reporter::internal::CrashKeyStringImpl"** %7, align 8
  tail call void @_ZN14crash_reporter8internal18CrashKeyStringImpl5ClearEv(%"class.crash_reporter::internal::CrashKeyStringImpl"* %8) #7
  %9 = getelementptr inbounds %"struct.base::debug::CrashKeyString", %"struct.base::debug::CrashKeyString"* %1, i64 1, i32 1
  %10 = bitcast i32* %9 to %"class.crashpad::Annotation"**
  %11 = load %"class.crashpad::Annotation"*, %"class.crashpad::Annotation"** %10, align 8
  tail call void @_ZN8crashpad10Annotation5ClearEv(%"class.crashpad::Annotation"* %11) #7
  br label %12

12:                                               ; preds = %5, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base5debug22CrashKeyImplementationD2Ev(%"class.base::debug::CrashKeyImplementation"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #5

declare void @_ZN14crash_reporter8internal18CrashKeyStringImpl5ClearEv(%"class.crash_reporter::internal::CrashKeyStringImpl"*) local_unnamed_addr #1

declare void @_ZN8crashpad10Annotation5ClearEv(%"class.crashpad::Annotation"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
