; ModuleID = 'gen/third_party/blink/public/mojom/blob/blob_registry.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/blob/blob_registry.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::ProgressClientAsyncWaiter" = type { %"class.blink::mojom::blink::ProgressClient"* }
%"class.blink::mojom::blink::ProgressClient" = type { i32 (...)** }
%"class.blink::mojom::blink::BlobRegistryAsyncWaiter" = type { %"class.blink::mojom::blink::BlobRegistry"* }
%"class.blink::mojom::blink::BlobRegistry" = type { i32 (...)** }
%"class.blink::mojom::blink::ProgressClientInterceptorForTesting" = type { %"class.blink::mojom::blink::ProgressClient" }
%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting" = type { %"class.blink::mojom::blink::BlobRegistry" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.9, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.8", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.8" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.9 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.10" }>
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::DataElement"* }
%"class.blink::mojom::blink::DataElement" = type { i32, %"union.blink::mojom::blink::DataElement::Union_" }
%"union.blink::mojom::blink::DataElement::Union_" = type { %"class.mojo::StructPtr.11"* }
%"class.mojo::StructPtr.11" = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::mojom::blink::DataElementBytes"* }
%"class.blink::mojom::blink::DataElementBytes" = type { i64, %"class.absl::optional", %"class.mojo::PendingRemote" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.WTF::Vector.15" }
%"class.WTF::Vector.15" = type { %"class.WTF::VectorBuffer.16" }
%"class.WTF::VectorBuffer.16" = type { %"class.WTF::VectorBufferBase.17" }
%"class.WTF::VectorBufferBase.17" = type { i8*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::ScopedHandleBase.61" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::PendingAssociatedRemote" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.62 }
%class.scoped_refptr.62 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.base::OnceCallback.63" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.64 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.65", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.64 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.65" = type { %"class.absl::optional_internal::optional_data.66" }
%"class.absl::optional_internal::optional_data.66" = type { %"class.absl::optional_internal::optional_data_base.67" }
%"class.absl::optional_internal::optional_data_base.67" = type { %"class.absl::optional_internal::optional_data_dtor_base.68" }
%"class.absl::optional_internal::optional_data_dtor_base.68" = type { i8, %union.anon.69 }
%union.anon.69 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.mojo::PendingAssociatedReceiver" = type { %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.82, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.75", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.77" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.82 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.83 }
%class.scoped_refptr.83 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.84", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.84" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.85" }
%"struct.std::__1::atomic.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.90 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.52", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.91" }
%"class.base::RefCountedThreadSafe.91" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.52" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.25 }
%union.anon.25 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink5mojom5blink14ProgressClientD2Ev = comdat any

$_ZN5blink5mojom5blink35ProgressClientInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink12BlobRegistryD2Ev = comdat any

$_ZN5blink5mojom5blink33BlobRegistryInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [9 x i8] c"Register\00", align 1
@.str.1 = private unnamed_addr constant [80 x i8] c"gen/third_party/blink/public/mojom/blob/blob_registry.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"RegisterFromStream\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"GetBlobFromUUID\00", align 1
@_ZTVN5blink5mojom5blink35ProgressClientInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::ProgressClient"*)* @_ZN5blink5mojom5blink14ProgressClientD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ProgressClientInterceptorForTesting"*)* @_ZN5blink5mojom5blink35ProgressClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ProgressClientInterceptorForTesting"*, i64)* @_ZN5blink5mojom5blink35ProgressClientInterceptorForTesting10OnProgressEm to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink33BlobRegistryInterceptorForTestingE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::BlobRegistry"*)* @_ZN5blink5mojom5blink12BlobRegistryD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)* @_ZN5blink5mojom5blink33BlobRegistryInterceptorForTestingD0Ev to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*)* @_ZN5blink5mojom5blink12BlobRegistry8RegisterEN4mojo15PendingReceiverINS1_4BlobEEERKN3WTF6StringESA_SA_NS7_6VectorINS3_9StructPtrINS1_11DataElementEEELj0ENS7_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink33BlobRegistryInterceptorForTesting8RegisterEN4mojo15PendingReceiverINS1_4BlobEEERKN3WTF6StringESA_SA_NS7_6VectorINS3_9StructPtrINS1_11DataElementEEELj0ENS7_18PartitionAllocatorEEEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.61"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"*)* @_ZN5blink5mojom5blink33BlobRegistryInterceptorForTesting18RegisterFromStreamERKN3WTF6StringES6_mN4mojo16ScopedHandleBaseINS7_22DataPipeConsumerHandleEEENS7_23PendingAssociatedRemoteINS1_14ProgressClientEEEN4base12OnceCallbackIFvRK13scoped_refptrINS_14BlobDataHandleEEEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*)* @_ZN5blink5mojom5blink12BlobRegistry15GetBlobFromUUIDEN4mojo15PendingReceiverINS1_4BlobEEERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink33BlobRegistryInterceptorForTesting15GetBlobFromUUIDEN4mojo15PendingReceiverINS1_4BlobEEERKN3WTF6StringEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*, %class.scoped_refptr.64*, %"class.mojo::PendingAssociatedReceiver"*)* @_ZN5blink5mojom5blink33BlobRegistryInterceptorForTesting17URLStoreForOriginERK13scoped_refptrIKNS_14SecurityOriginEEN4mojo25PendingAssociatedReceiverINS1_12BlobURLStoreEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

@_ZN5blink5mojom5blink25ProgressClientAsyncWaiterC1EPNS1_14ProgressClientE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ProgressClientAsyncWaiter"*, %"class.blink::mojom::blink::ProgressClient"*), void (%"class.blink::mojom::blink::ProgressClientAsyncWaiter"*, %"class.blink::mojom::blink::ProgressClient"*)* @_ZN5blink5mojom5blink25ProgressClientAsyncWaiterC2EPNS1_14ProgressClientE
@_ZN5blink5mojom5blink25ProgressClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ProgressClientAsyncWaiter"*), void (%"class.blink::mojom::blink::ProgressClientAsyncWaiter"*)* @_ZN5blink5mojom5blink25ProgressClientAsyncWaiterD2Ev
@_ZN5blink5mojom5blink23BlobRegistryAsyncWaiterC1EPNS1_12BlobRegistryE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::BlobRegistryAsyncWaiter"*, %"class.blink::mojom::blink::BlobRegistry"*), void (%"class.blink::mojom::blink::BlobRegistryAsyncWaiter"*, %"class.blink::mojom::blink::BlobRegistry"*)* @_ZN5blink5mojom5blink23BlobRegistryAsyncWaiterC2EPNS1_12BlobRegistryE
@_ZN5blink5mojom5blink23BlobRegistryAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::BlobRegistryAsyncWaiter"*), void (%"class.blink::mojom::blink::BlobRegistryAsyncWaiter"*)* @_ZN5blink5mojom5blink23BlobRegistryAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink35ProgressClientInterceptorForTesting10OnProgressEm(%"class.blink::mojom::blink::ProgressClientInterceptorForTesting"*, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::ProgressClientInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ProgressClient"* (%"class.blink::mojom::blink::ProgressClientInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::ProgressClient"* (%"class.blink::mojom::blink::ProgressClientInterceptorForTesting"*)**, %"class.blink::mojom::blink::ProgressClient"* (%"class.blink::mojom::blink::ProgressClientInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::ProgressClient"* (%"class.blink::mojom::blink::ProgressClientInterceptorForTesting"*)*, %"class.blink::mojom::blink::ProgressClient"* (%"class.blink::mojom::blink::ProgressClientInterceptorForTesting"*)** %4, i64 3
  %6 = load %"class.blink::mojom::blink::ProgressClient"* (%"class.blink::mojom::blink::ProgressClientInterceptorForTesting"*)*, %"class.blink::mojom::blink::ProgressClient"* (%"class.blink::mojom::blink::ProgressClientInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::ProgressClient"* %6(%"class.blink::mojom::blink::ProgressClientInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.blink::mojom::blink::ProgressClient"* %7 to void (%"class.blink::mojom::blink::ProgressClient"*, i64)***
  %9 = load void (%"class.blink::mojom::blink::ProgressClient"*, i64)**, void (%"class.blink::mojom::blink::ProgressClient"*, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::ProgressClient"*, i64)*, void (%"class.blink::mojom::blink::ProgressClient"*, i64)** %9, i64 2
  %11 = load void (%"class.blink::mojom::blink::ProgressClient"*, i64)*, void (%"class.blink::mojom::blink::ProgressClient"*, i64)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::ProgressClient"* %7, i64 %1) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink25ProgressClientAsyncWaiterC2EPNS1_14ProgressClientE(%"class.blink::mojom::blink::ProgressClientAsyncWaiter"* nocapture, %"class.blink::mojom::blink::ProgressClient"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::ProgressClientAsyncWaiter", %"class.blink::mojom::blink::ProgressClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::ProgressClient"* %1, %"class.blink::mojom::blink::ProgressClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink25ProgressClientAsyncWaiterD2Ev(%"class.blink::mojom::blink::ProgressClientAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33BlobRegistryInterceptorForTesting8RegisterEN4mojo15PendingReceiverINS1_4BlobEEERKN3WTF6StringESA_SA_NS7_6VectorINS3_9StructPtrINS1_11DataElementEEELj0ENS7_18PartitionAllocatorEEEN4base12OnceCallbackIFvvEEE(%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %8 = alloca %"class.mojo::PendingReceiver", align 8
  %9 = alloca %"class.WTF::Vector", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = bitcast %"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)***
  %12 = load %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)**, %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)*, %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)** %12, i64 8
  %14 = load %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)*, %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)** %13, align 8
  %15 = tail call %"class.blink::mojom::blink::BlobRegistry"* %14(%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"* %0) #10
  %16 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %8, i64 0, i32 0
  %17 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %16, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %17) #10
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast %"class.WTF::Vector"* %5 to i64*
  %21 = bitcast %"class.WTF::Vector"* %9 to i64*
  store i64 0, i64* %21, align 8
  %22 = load i64, i64* %20, align 8
  %23 = bitcast %"class.WTF::Vector"* %9 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %18, align 8
  store i32 0, i32* %24, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %19, align 4
  store i32 0, i32* %26, align 4
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.base::OnceCallback"* %6 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.base::OnceCallback"* %10 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8
  %32 = bitcast %"class.blink::mojom::blink::BlobRegistry"* %15 to void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)***
  %33 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %33, i64 3
  %35 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %34, align 8
  call void %35(%"class.blink::mojom::blink::BlobRegistry"* %15, %"class.mojo::PendingReceiver"* nonnull %8, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::Vector"* nonnull %9, %"class.base::OnceCallback"* nonnull %10) #10
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #10
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %37, align 8
  %39 = icmp eq %"class.mojo::StructPtr"* %38, null
  br i1 %39, label %62, label %40, !prof !2

40:                                               ; preds = %7
  %41 = bitcast %"class.mojo::StructPtr"* %38 to i8*
  %42 = load i32, i32* %19, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %60, label %44, !prof !3

44:                                               ; preds = %40
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %38, i64 %45
  br label %47

47:                                               ; preds = %54, %44
  %48 = phi %"class.mojo::StructPtr"* [ %55, %54 ], [ %38, %44 ]
  %49 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::mojom::blink::DataElement"*, %"class.blink::mojom::blink::DataElement"** %49, align 8
  store %"class.blink::mojom::blink::DataElement"* null, %"class.blink::mojom::blink::DataElement"** %49, align 8
  %51 = icmp eq %"class.blink::mojom::blink::DataElement"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %47
  call void @_ZN5blink5mojom5blink11DataElementD1Ev(%"class.blink::mojom::blink::DataElement"* nonnull %50) #10
  %53 = bitcast %"class.blink::mojom::blink::DataElement"* %50 to i8*
  call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %52, %47
  %55 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %48, i64 1
  %56 = icmp eq %"class.mojo::StructPtr"* %55, %46
  br i1 %56, label %57, label %47

57:                                               ; preds = %54
  store i32 0, i32* %19, align 4
  %58 = bitcast %"class.WTF::Vector"* %9 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %40
  %61 = phi i8* [ %59, %57 ], [ %41, %40 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %61) #10
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %37, align 8
  br label %62

62:                                               ; preds = %7, %60
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %16) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33BlobRegistryInterceptorForTesting18RegisterFromStreamERKN3WTF6StringES6_mN4mojo16ScopedHandleBaseINS7_22DataPipeConsumerHandleEEENS7_23PendingAssociatedRemoteINS1_14ProgressClientEEEN4base12OnceCallbackIFvRK13scoped_refptrINS_14BlobDataHandleEEEEE(%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i64, %"class.mojo::ScopedHandleBase.61"* nocapture, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"* nocapture) unnamed_addr #0 align 2 {
  %8 = alloca %"class.mojo::ScopedHandleBase.61", align 4
  %9 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %10 = alloca %"class.base::OnceCallback.63", align 8
  %11 = bitcast %"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)***
  %12 = load %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)**, %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)*, %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)** %12, i64 8
  %14 = load %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)*, %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)** %13, align 8
  %15 = tail call %"class.blink::mojom::blink::BlobRegistry"* %14(%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"* %0) #10
  %16 = getelementptr inbounds %"class.mojo::ScopedHandleBase.61", %"class.mojo::ScopedHandleBase.61"* %8, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.mojo::ScopedHandleBase.61", %"class.mojo::ScopedHandleBase.61"* %4, i64 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4, !noalias !4
  store i32 %18, i32* %16, align 4, !alias.scope !4
  store i32 0, i32* %17, align 4, !noalias !4
  %19 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %9, i64 0, i32 0
  %20 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %5, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %19, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %20) #10
  %21 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %9, i64 0, i32 1
  %22 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %5, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %21, align 8
  %24 = getelementptr inbounds %"class.base::OnceCallback.63", %"class.base::OnceCallback.63"* %6, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.base::OnceCallback.63"* %6 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::OnceCallback.63"* %10 to i64*
  store i64 %26, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %28 = bitcast %"class.blink::mojom::blink::BlobRegistry"* %15 to void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.61"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"*)***
  %29 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.61"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"*)**, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.61"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.61"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.61"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"*)** %29, i64 4
  %31 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.61"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.61"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"*)** %30, align 8
  call void %31(%"class.blink::mojom::blink::BlobRegistry"* %15, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, i64 %3, %"class.mojo::ScopedHandleBase.61"* nonnull %8, %"class.mojo::PendingAssociatedRemote"* nonnull %9, %"class.base::OnceCallback.63"* nonnull %10) #10
  %32 = getelementptr inbounds %"class.base::OnceCallback.63", %"class.base::OnceCallback.63"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %19) #10
  %33 = load i32, i32* %16, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %7
  %36 = call i32 @MojoClose(i32 %33) #10
  br label %37

37:                                               ; preds = %7, %35
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33BlobRegistryInterceptorForTesting15GetBlobFromUUIDEN4mojo15PendingReceiverINS1_4BlobEEERKN3WTF6StringEN4base12OnceCallbackIFvvEEE(%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"* dereferenceable(8), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.mojo::PendingReceiver", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = bitcast %"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)**, %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)*, %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)** %8, i64 8
  %10 = load %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)*, %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::blink::BlobRegistry"* %10(%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"* %0) #10
  %12 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %12, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %13) #10
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = bitcast %"class.blink::mojom::blink::BlobRegistry"* %11 to void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)***
  %19 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %19, i64 6
  %21 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %20, align 8
  call void %21(%"class.blink::mojom::blink::BlobRegistry"* %11, %"class.mojo::PendingReceiver"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %2, %"class.base::OnceCallback"* nonnull %6) #10
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33BlobRegistryInterceptorForTesting17URLStoreForOriginERK13scoped_refptrIKNS_14SecurityOriginEEN4mojo25PendingAssociatedReceiverINS1_12BlobURLStoreEEE(%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*, %class.scoped_refptr.64* dereferenceable(8), %"class.mojo::PendingAssociatedReceiver"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::PendingAssociatedReceiver", align 8
  %5 = bitcast %"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)**, %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)*, %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)** %6, i64 8
  %8 = load %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)*, %"class.blink::mojom::blink::BlobRegistry"* (%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::BlobRegistry"* %8(%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %2, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %10, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %11) #10
  %12 = bitcast %"class.blink::mojom::blink::BlobRegistry"* %9 to void (%"class.blink::mojom::blink::BlobRegistry"*, %class.scoped_refptr.64*, %"class.mojo::PendingAssociatedReceiver"*)***
  %13 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %class.scoped_refptr.64*, %"class.mojo::PendingAssociatedReceiver"*)**, void (%"class.blink::mojom::blink::BlobRegistry"*, %class.scoped_refptr.64*, %"class.mojo::PendingAssociatedReceiver"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::mojom::blink::BlobRegistry"*, %class.scoped_refptr.64*, %"class.mojo::PendingAssociatedReceiver"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %class.scoped_refptr.64*, %"class.mojo::PendingAssociatedReceiver"*)** %13, i64 7
  %15 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %class.scoped_refptr.64*, %"class.mojo::PendingAssociatedReceiver"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %class.scoped_refptr.64*, %"class.mojo::PendingAssociatedReceiver"*)** %14, align 8
  call void %15(%"class.blink::mojom::blink::BlobRegistry"* %9, %class.scoped_refptr.64* dereferenceable(8) %1, %"class.mojo::PendingAssociatedReceiver"* nonnull %4) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %10) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink23BlobRegistryAsyncWaiterC2EPNS1_12BlobRegistryE(%"class.blink::mojom::blink::BlobRegistryAsyncWaiter"* nocapture, %"class.blink::mojom::blink::BlobRegistry"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::BlobRegistryAsyncWaiter", %"class.blink::mojom::blink::BlobRegistryAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::BlobRegistry"* %1, %"class.blink::mojom::blink::BlobRegistry"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink23BlobRegistryAsyncWaiterD2Ev(%"class.blink::mojom::blink::BlobRegistryAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink23BlobRegistryAsyncWaiter8RegisterEN4mojo15PendingReceiverINS1_4BlobEEERKN3WTF6StringESA_SA_NS7_6VectorINS3_9StructPtrINS1_11DataElementEEELj0ENS7_18PartitionAllocatorEEE(%"class.blink::mojom::blink::BlobRegistryAsyncWaiter"* nocapture readonly, %"class.mojo::PendingReceiver"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector"* nocapture) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::RunLoop", align 8
  %8 = alloca %"class.mojo::PendingReceiver", align 8
  %9 = alloca %"class.WTF::Vector", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = alloca %"class.base::Location", align 8
  %12 = bitcast %"class.base::RunLoop"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %7, i32 0) #10
  %13 = getelementptr inbounds %"class.blink::mojom::blink::BlobRegistryAsyncWaiter", %"class.blink::mojom::blink::BlobRegistryAsyncWaiter"* %0, i64 0, i32 0
  %14 = load %"class.blink::mojom::blink::BlobRegistry"*, %"class.blink::mojom::blink::BlobRegistry"** %13, align 8
  %15 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %8, i64 0, i32 0
  %16 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %15, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %16) #10
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 2
  %19 = bitcast %"class.WTF::Vector"* %5 to i64*
  %20 = bitcast %"class.WTF::Vector"* %9 to i64*
  store i64 0, i64* %20, align 8
  %21 = load i64, i64* %19, align 8
  %22 = bitcast %"class.WTF::Vector"* %9 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %17, align 8
  store i32 0, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %18, align 4
  store i32 0, i32* %25, align 4
  %27 = ptrtoint %"class.base::RunLoop"* %7 to i64
  %28 = call i8* @_Znwm(i64 48) #11, !noalias !7
  %29 = bitcast i8* %28 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %29, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23BlobRegistryAsyncWaiter8RegisterEN4mojo15PendingReceiverINS5_4BlobEEERKN3WTF6StringESE_SE_NSB_6VectorINS7_9StructPtrINS5_11DataElementEEELj0ENSB_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23BlobRegistryAsyncWaiter8RegisterEN4mojo15PendingReceiverINS4_4BlobEEERKN3WTF6StringESD_SD_NSA_6VectorINS6_9StructPtrINS4_11DataElementEEELj0ENSA_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !7
  %30 = getelementptr inbounds i8, i8* %28, i64 40
  %31 = bitcast i8* %30 to i64*
  store i64 %27, i64* %31, align 8, !noalias !7
  %32 = bitcast %"class.base::OnceCallback"* %10 to i8**
  store i8* %28, i8** %32, align 8, !alias.scope !7
  %33 = bitcast %"class.blink::mojom::blink::BlobRegistry"* %14 to void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)***
  %34 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %34, i64 3
  %36 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %35, align 8
  call void %36(%"class.blink::mojom::blink::BlobRegistry"* %14, %"class.mojo::PendingReceiver"* nonnull %8, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::Vector"* nonnull %9, %"class.base::OnceCallback"* nonnull %10) #10
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #10
  %38 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %38, align 8
  %40 = icmp eq %"class.mojo::StructPtr"* %39, null
  br i1 %40, label %63, label %41, !prof !2

41:                                               ; preds = %6
  %42 = bitcast %"class.mojo::StructPtr"* %39 to i8*
  %43 = load i32, i32* %18, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %61, label %45, !prof !3

45:                                               ; preds = %41
  %46 = zext i32 %43 to i64
  %47 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %39, i64 %46
  br label %48

48:                                               ; preds = %55, %45
  %49 = phi %"class.mojo::StructPtr"* [ %56, %55 ], [ %39, %45 ]
  %50 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::mojom::blink::DataElement"*, %"class.blink::mojom::blink::DataElement"** %50, align 8
  store %"class.blink::mojom::blink::DataElement"* null, %"class.blink::mojom::blink::DataElement"** %50, align 8
  %52 = icmp eq %"class.blink::mojom::blink::DataElement"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %48
  call void @_ZN5blink5mojom5blink11DataElementD1Ev(%"class.blink::mojom::blink::DataElement"* nonnull %51) #10
  %54 = bitcast %"class.blink::mojom::blink::DataElement"* %51 to i8*
  call void @_ZdlPv(i8* %54) #11
  br label %55

55:                                               ; preds = %53, %48
  %56 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %49, i64 1
  %57 = icmp eq %"class.mojo::StructPtr"* %56, %47
  br i1 %57, label %58, label %48

58:                                               ; preds = %55
  store i32 0, i32* %18, align 4
  %59 = bitcast %"class.WTF::Vector"* %9 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %41
  %62 = phi i8* [ %60, %58 ], [ %42, %41 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %62) #10
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %38, align 8
  br label %63

63:                                               ; preds = %6, %61
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %15) #10
  %64 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %64) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0), i32 74) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink23BlobRegistryAsyncWaiter18RegisterFromStreamERKN3WTF6StringES6_mN4mojo16ScopedHandleBaseINS7_22DataPipeConsumerHandleEEENS7_23PendingAssociatedRemoteINS1_14ProgressClientEEEP13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::mojom::blink::BlobRegistryAsyncWaiter"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i64, %"class.mojo::ScopedHandleBase.61"* nocapture, %"class.mojo::PendingAssociatedRemote"*, %class.scoped_refptr.90*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::RunLoop", align 8
  %9 = alloca %"class.mojo::ScopedHandleBase.61", align 4
  %10 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %11 = alloca %"class.base::OnceCallback.63", align 8
  %12 = alloca %"class.base::Location", align 8
  %13 = ptrtoint %class.scoped_refptr.90* %6 to i64
  %14 = bitcast %"class.base::RunLoop"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %8, i32 0) #10
  %15 = getelementptr inbounds %"class.blink::mojom::blink::BlobRegistryAsyncWaiter", %"class.blink::mojom::blink::BlobRegistryAsyncWaiter"* %0, i64 0, i32 0
  %16 = load %"class.blink::mojom::blink::BlobRegistry"*, %"class.blink::mojom::blink::BlobRegistry"** %15, align 8
  %17 = getelementptr inbounds %"class.mojo::ScopedHandleBase.61", %"class.mojo::ScopedHandleBase.61"* %9, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::ScopedHandleBase.61", %"class.mojo::ScopedHandleBase.61"* %4, i64 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4, !noalias !12
  store i32 %19, i32* %17, align 4, !alias.scope !12
  store i32 0, i32* %18, align 4, !noalias !12
  %20 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %10, i64 0, i32 0
  %21 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %5, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %20, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %21) #10
  %22 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %10, i64 0, i32 1
  %23 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %5, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %22, align 8
  %25 = ptrtoint %"class.base::RunLoop"* %8 to i64
  %26 = call i8* @_Znwm(i64 56) #11, !noalias !15
  %27 = bitcast i8* %26 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %27, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.scoped_refptr.90*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23BlobRegistryAsyncWaiter18RegisterFromStreamERKN3WTF6StringESA_mN4mojo16ScopedHandleBaseINSB_22DataPipeConsumerHandleEEENSB_23PendingAssociatedRemoteINS5_14ProgressClientEEEP13scoped_refptrINS3_14BlobDataHandleEEE3$_1JPNS_7RunLoopESL_EEEFvRKSK_EE7RunOnceEPNS0_13BindStateBaseESR_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23BlobRegistryAsyncWaiter18RegisterFromStreamERKN3WTF6StringES9_mN4mojo16ScopedHandleBaseINSA_22DataPipeConsumerHandleEEENSA_23PendingAssociatedRemoteINS4_14ProgressClientEEEP13scoped_refptrINS2_14BlobDataHandleEEE3$_1JPNS_7RunLoopESK_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !15
  %28 = getelementptr inbounds i8, i8* %26, i64 40
  %29 = bitcast i8* %28 to i64*
  store i64 %25, i64* %29, align 8, !noalias !15
  %30 = getelementptr inbounds i8, i8* %26, i64 48
  %31 = bitcast i8* %30 to i64*
  store i64 %13, i64* %31, align 8, !noalias !15
  %32 = bitcast %"class.base::OnceCallback.63"* %11 to i8**
  store i8* %26, i8** %32, align 8, !alias.scope !15
  %33 = bitcast %"class.blink::mojom::blink::BlobRegistry"* %16 to void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.61"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"*)***
  %34 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.61"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"*)**, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.61"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.61"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.61"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"*)** %34, i64 4
  %36 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.61"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.61"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback.63"*)** %35, align 8
  call void %36(%"class.blink::mojom::blink::BlobRegistry"* %16, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, i64 %3, %"class.mojo::ScopedHandleBase.61"* nonnull %9, %"class.mojo::PendingAssociatedRemote"* nonnull %10, %"class.base::OnceCallback.63"* nonnull %11) #10
  %37 = getelementptr inbounds %"class.base::OnceCallback.63", %"class.base::OnceCallback.63"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #10
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %20) #10
  %38 = load i32, i32* %17, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %7
  %41 = call i32 @MojoClose(i32 %38) #10
  br label %42

42:                                               ; preds = %7, %40
  %43 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0), i32 89) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %8, %"class.base::Location"* nonnull dereferenceable(32) %12) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink23BlobRegistryAsyncWaiter15GetBlobFromUUIDEN4mojo15PendingReceiverINS1_4BlobEEERKN3WTF6StringE(%"class.blink::mojom::blink::BlobRegistryAsyncWaiter"* nocapture readonly, %"class.mojo::PendingReceiver"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.mojo::PendingReceiver", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %9 = getelementptr inbounds %"class.blink::mojom::blink::BlobRegistryAsyncWaiter", %"class.blink::mojom::blink::BlobRegistryAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::blink::BlobRegistry"*, %"class.blink::mojom::blink::BlobRegistry"** %9, align 8
  %11 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %11, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %12) #10
  %13 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %14 = call i8* @_Znwm(i64 48) #11, !noalias !20
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23BlobRegistryAsyncWaiter15GetBlobFromUUIDEN4mojo15PendingReceiverINS5_4BlobEEERKN3WTF6StringEE3$_2JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23BlobRegistryAsyncWaiter15GetBlobFromUUIDEN4mojo15PendingReceiverINS4_4BlobEEERKN3WTF6StringEE3$_2JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !20
  %16 = getelementptr inbounds i8, i8* %14, i64 40
  %17 = bitcast i8* %16 to i64*
  store i64 %13, i64* %17, align 8, !noalias !20
  %18 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %14, i8** %18, align 8, !alias.scope !20
  %19 = bitcast %"class.blink::mojom::blink::BlobRegistry"* %10 to void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %20, i64 6
  %22 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::BlobRegistry"* %10, %"class.mojo::PendingReceiver"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %2, %"class.base::OnceCallback"* nonnull %6) #10
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %11) #10
  %24 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0), i32 100) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink14ProgressClientD2Ev(%"class.blink::mojom::blink::ProgressClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink35ProgressClientInterceptorForTestingD0Ev(%"class.blink::mojom::blink::ProgressClientInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink12BlobRegistryD2Ev(%"class.blink::mojom::blink::BlobRegistry"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink33BlobRegistryInterceptorForTestingD0Ev(%"class.blink::mojom::blink::BlobRegistryInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare zeroext i1 @_ZN5blink5mojom5blink12BlobRegistry8RegisterEN4mojo15PendingReceiverINS1_4BlobEEERKN3WTF6StringESA_SA_NS7_6VectorINS3_9StructPtrINS1_11DataElementEEELj0ENS7_18PartitionAllocatorEEE(%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector"*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom5blink12BlobRegistry15GetBlobFromUUIDEN4mojo15PendingReceiverINS1_4BlobEEERKN3WTF6StringE(%"class.blink::mojom::blink::BlobRegistry"*, %"class.mojo::PendingReceiver"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink11DataElementD1Ev(%"class.blink::mojom::blink::DataElement"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare i32 @MojoClose(i32) local_unnamed_addr #5

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23BlobRegistryAsyncWaiter8RegisterEN4mojo15PendingReceiverINS5_4BlobEEERKN3WTF6StringESE_SE_NSB_6VectorINS7_9StructPtrINS5_11DataElementEEELj0ENSB_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %"class.base::RunLoop"**
  %4 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %3, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %4) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23BlobRegistryAsyncWaiter8RegisterEN4mojo15PendingReceiverINS4_4BlobEEERKN3WTF6StringESD_SD_NSA_6VectorINS6_9StructPtrINS4_11DataElementEEELj0ENSA_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23BlobRegistryAsyncWaiter18RegisterFromStreamERKN3WTF6StringESA_mN4mojo16ScopedHandleBaseINSB_22DataPipeConsumerHandleEEENSB_23PendingAssociatedRemoteINS5_14ProgressClientEEEP13scoped_refptrINS3_14BlobDataHandleEEE3$_1JPNS_7RunLoopESL_EEEFvRKSK_EE7RunOnceEPNS0_13BindStateBaseESR_"(%"class.base::internal::BindStateBase"* nocapture readonly, %class.scoped_refptr.90* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %class.scoped_refptr.90**
  %8 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %9 = load %class.scoped_refptr.90*, %class.scoped_refptr.90** %7, align 8
  %10 = getelementptr inbounds %class.scoped_refptr.90, %class.scoped_refptr.90* %1, i64 0, i32 0
  %11 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %10, align 8
  %12 = icmp eq %"class.blink::BlobDataHandle"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #10
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  br label %20

20:                                               ; preds = %17, %13, %2
  %21 = ptrtoint %"class.blink::BlobDataHandle"* %11 to i64
  %22 = bitcast %class.scoped_refptr.90* %9 to i64*
  %23 = getelementptr inbounds %class.scoped_refptr.90, %class.scoped_refptr.90* %9, i64 0, i32 0
  %24 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %23, align 8
  store i64 %21, i64* %22, align 8
  %25 = icmp eq %"class.blink::BlobDataHandle"* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %24) #10
  %31 = bitcast %"class.blink::BlobDataHandle"* %24 to i8*
  call void @free(i8* %31) #10
  br label %32

32:                                               ; preds = %20, %26, %30
  call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %8) #10
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23BlobRegistryAsyncWaiter18RegisterFromStreamERKN3WTF6StringES9_mN4mojo16ScopedHandleBaseINSA_22DataPipeConsumerHandleEEENSA_23PendingAssociatedRemoteINS4_14ProgressClientEEEP13scoped_refptrINS2_14BlobDataHandleEEE3$_1JPNS_7RunLoopESK_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23BlobRegistryAsyncWaiter15GetBlobFromUUIDEN4mojo15PendingReceiverINS5_4BlobEEERKN3WTF6StringEE3$_2JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %"class.base::RunLoop"**
  %4 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %3, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23BlobRegistryAsyncWaiter15GetBlobFromUUIDEN4mojo15PendingReceiverINS4_4BlobEEERKN3WTF6StringEE3$_2JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!6 = distinct !{!6, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23BlobRegistryAsyncWaiter8RegisterEN4mojo15PendingReceiverINS5_4BlobEEERKN3WTF6StringESE_SE_NSB_6VectorINS7_9StructPtrINS5_11DataElementEEELj0ENSB_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopEEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23BlobRegistryAsyncWaiter8RegisterEN4mojo15PendingReceiverINS5_4BlobEEERKN3WTF6StringESE_SE_NSB_6VectorINS7_9StructPtrINS5_11DataElementEEELj0ENSB_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopEEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN5blink5mojom5blink23BlobRegistryAsyncWaiter8RegisterEN4mojo15PendingReceiverINS3_4BlobEEERKN3WTF6StringESC_SC_NS9_6VectorINS5_9StructPtrINS3_11DataElementEEELj0ENS9_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN5blink5mojom5blink23BlobRegistryAsyncWaiter8RegisterEN4mojo15PendingReceiverINS3_4BlobEEERKN3WTF6StringESC_SC_NS9_6VectorINS5_9StructPtrINS3_11DataElementEEELj0ENS9_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!14 = distinct !{!14, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23BlobRegistryAsyncWaiter18RegisterFromStreamERKN3WTF6StringESA_mN4mojo16ScopedHandleBaseINSB_22DataPipeConsumerHandleEEENSB_23PendingAssociatedRemoteINS5_14ProgressClientEEEP13scoped_refptrINS3_14BlobDataHandleEEE3$_1JPNS_7RunLoopERSL_EEEDcOT0_DpOT1_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23BlobRegistryAsyncWaiter18RegisterFromStreamERKN3WTF6StringESA_mN4mojo16ScopedHandleBaseINSB_22DataPipeConsumerHandleEEENSB_23PendingAssociatedRemoteINS5_14ProgressClientEEEP13scoped_refptrINS3_14BlobDataHandleEEE3$_1JPNS_7RunLoopERSL_EEEDcOT0_DpOT1_"}
!18 = distinct !{!18, !19, !"_ZN4base8BindOnceIZN5blink5mojom5blink23BlobRegistryAsyncWaiter18RegisterFromStreamERKN3WTF6StringES8_mN4mojo16ScopedHandleBaseINS9_22DataPipeConsumerHandleEEENS9_23PendingAssociatedRemoteINS3_14ProgressClientEEEP13scoped_refptrINS1_14BlobDataHandleEEE3$_1JPNS_7RunLoopERSJ_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSR_DpOSS_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8BindOnceIZN5blink5mojom5blink23BlobRegistryAsyncWaiter18RegisterFromStreamERKN3WTF6StringES8_mN4mojo16ScopedHandleBaseINS9_22DataPipeConsumerHandleEEENS9_23PendingAssociatedRemoteINS3_14ProgressClientEEEP13scoped_refptrINS1_14BlobDataHandleEEE3$_1JPNS_7RunLoopERSJ_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSR_DpOSS_"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23BlobRegistryAsyncWaiter15GetBlobFromUUIDEN4mojo15PendingReceiverINS5_4BlobEEERKN3WTF6StringEE3$_2JPNS_7RunLoopEEEEDcOT0_DpOT1_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23BlobRegistryAsyncWaiter15GetBlobFromUUIDEN4mojo15PendingReceiverINS5_4BlobEEERKN3WTF6StringEE3$_2JPNS_7RunLoopEEEEDcOT0_DpOT1_"}
!23 = distinct !{!23, !24, !"_ZN4base8BindOnceIZN5blink5mojom5blink23BlobRegistryAsyncWaiter15GetBlobFromUUIDEN4mojo15PendingReceiverINS3_4BlobEEERKN3WTF6StringEE3$_2JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8BindOnceIZN5blink5mojom5blink23BlobRegistryAsyncWaiter15GetBlobFromUUIDEN4mojo15PendingReceiverINS3_4BlobEEERKN3WTF6StringEE3$_2JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
