; ModuleID = '../../net/disk_cache/memory/mem_entry_impl.cc'
source_filename = "../../net/disk_cache/memory/mem_entry_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.disk_cache::MemEntryImpl" = type { %"class.disk_cache::Entry", %"class.base::LinkNode", %"class.std::__1::basic_string", [3 x %"class.std::__1::vector"], i32, i64, i32, %"class.disk_cache::MemEntryImpl"*, %"class.std::__1::unique_ptr", %"class.base::Time", %"class.base::Time", %"class.base::WeakPtr", i8, %"class.net::NetLogWithSource" }
%"class.disk_cache::Entry" = type { i32 (...)** }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::map"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i8 }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.20" }
%"class.base::time_internal::TimeBase.20" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.21", %"class.std::__1::vector.28" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.23" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.30" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.disk_cache::MemBackendImpl" = type { %"class.disk_cache::Backend.base", %"class.base::Clock"*, %"class.std::__1::unordered_map", %"class.base::LinkedList", i32, i32, %"class.net::NetLog"*, %"class.base::OnceCallback", %"class.base::MemoryPressureListener", %"class.base::WeakPtrFactory" }
%"class.disk_cache::Backend.base" = type <{ i32 (...)**, i32 }>
%"class.base::Clock" = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.35", %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.50", [4 x i8] }>
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37", %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { float }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.55", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.55" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.56 }
%class.scoped_refptr.56 = type { %"class.base::internal::WeakReference::Flag"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.73" }
%"union.absl::variant_internal::DestructibleUnionImpl.73" = type { %"union.absl::variant_internal::DestructibleUnionImpl.74" }
%"union.absl::variant_internal::DestructibleUnionImpl.74" = type { %"union.absl::variant_internal::DestructibleUnionImpl.75" }
%"union.absl::variant_internal::DestructibleUnionImpl.75" = type { %"union.absl::variant_internal::DestructibleUnionImpl.76" }
%"union.absl::variant_internal::DestructibleUnionImpl.76" = type { %"class.std::__1::basic_string" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i64, %"class.disk_cache::MemEntryImpl"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.57", i8* }
%"class.base::RefCountedThreadSafe.57" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback.58" = type { %"class.base::internal::CallbackBase" }
%"class.net::DrainableIOBuffer" = type { %"class.net::IOBuffer", %class.scoped_refptr.61, i32, i32 }
%class.scoped_refptr.61 = type { %"class.net::IOBuffer"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN10disk_cache12MemEntryImpl14CancelSparseIOEv = comdat any

$_ZN10disk_cache5EntryD2Ev = comdat any

$_ZN10disk_cache5EntryD0Ev = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE14__erase_uniqueIlEEmRKT_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm = comdat any

$_ZTVN10disk_cache5EntryE = comdat any

@.str = private unnamed_addr constant [51 x i8] c"ref_count_ != std::numeric_limits<uint32_t>::max()\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"../../net/disk_cache/memory/mem_entry_impl.cc\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"ref_count_ > 0u\00", align 1
@_ZTVN10disk_cache12MemEntryImplE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.disk_cache::MemEntryImpl"*)* @_ZN10disk_cache12MemEntryImpl4DoomEv to i8*), i8* bitcast (void (%"class.disk_cache::MemEntryImpl"*)* @_ZN10disk_cache12MemEntryImpl5CloseEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.disk_cache::MemEntryImpl"*)* @_ZNK10disk_cache12MemEntryImpl6GetKeyEv to i8*), i8* bitcast (i64 (%"class.disk_cache::MemEntryImpl"*)* @_ZNK10disk_cache12MemEntryImpl11GetLastUsedEv to i8*), i8* bitcast (i64 (%"class.disk_cache::MemEntryImpl"*)* @_ZNK10disk_cache12MemEntryImpl15GetLastModifiedEv to i8*), i8* bitcast (i32 (%"class.disk_cache::MemEntryImpl"*, i32)* @_ZNK10disk_cache12MemEntryImpl11GetDataSizeEi to i8*), i8* bitcast (i32 (%"class.disk_cache::MemEntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.58"*)* @_ZN10disk_cache12MemEntryImpl8ReadDataEiiPN3net8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.disk_cache::MemEntryImpl"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.58"*, i1)* @_ZN10disk_cache12MemEntryImpl9WriteDataEiiPN3net8IOBufferEiN4base12OnceCallbackIFviEEEb to i8*), i8* bitcast (i32 (%"class.disk_cache::MemEntryImpl"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.58"*)* @_ZN10disk_cache12MemEntryImpl14ReadSparseDataElPN3net8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.disk_cache::MemEntryImpl"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.58"*)* @_ZN10disk_cache12MemEntryImpl15WriteSparseDataElPN3net8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.disk_cache::MemEntryImpl"*, i64, i32, i64*, %"class.base::OnceCallback.58"*)* @_ZN10disk_cache12MemEntryImpl17GetAvailableRangeEliPlN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i1 (%"class.disk_cache::MemEntryImpl"*)* @_ZNK10disk_cache12MemEntryImpl13CouldBeSparseEv to i8*), i8* bitcast (void (%"class.disk_cache::MemEntryImpl"*)* @_ZN10disk_cache12MemEntryImpl14CancelSparseIOEv to i8*), i8* bitcast (i32 (%"class.disk_cache::MemEntryImpl"*, %"class.base::OnceCallback.58"*)* @_ZN10disk_cache12MemEntryImpl16ReadyForSparseIOEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void (%"class.disk_cache::MemEntryImpl"*, i64)* @_ZN10disk_cache12MemEntryImpl22SetLastUsedTimeForTestEN4base4TimeE to i8*), i8* bitcast (void (%"class.disk_cache::MemEntryImpl"*)* @_ZN10disk_cache12MemEntryImplD2Ev to i8*), i8* bitcast (void (%"class.disk_cache::MemEntryImpl"*)* @_ZN10disk_cache12MemEntryImplD0Ev to i8*)] }, align 8
@_ZTVN10disk_cache5EntryE = linkonce_odr hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.disk_cache::Entry"*)* @_ZN10disk_cache5EntryD2Ev to i8*), i8* bitcast (void (%"class.disk_cache::Entry"*)* @_ZN10disk_cache5EntryD0Ev to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"created\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"Range_%s:%ld\00", align 1

@_ZN10disk_cache12MemEntryImplC1EN4base7WeakPtrINS_14MemBackendImplEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEPN3net6NetLogE = hidden unnamed_addr alias void (%"class.disk_cache::MemEntryImpl"*, %"class.base::WeakPtr"*, %"class.std::__1::basic_string"*, %"class.net::NetLog"*), void (%"class.disk_cache::MemEntryImpl"*, %"class.base::WeakPtr"*, %"class.std::__1::basic_string"*, %"class.net::NetLog"*)* @_ZN10disk_cache12MemEntryImplC2EN4base7WeakPtrINS_14MemBackendImplEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEPN3net6NetLogE
@_ZN10disk_cache12MemEntryImplC1EN4base7WeakPtrINS_14MemBackendImplEEElPS0_PN3net6NetLogE = hidden unnamed_addr alias void (%"class.disk_cache::MemEntryImpl"*, %"class.base::WeakPtr"*, i64, %"class.disk_cache::MemEntryImpl"*, %"class.net::NetLog"*), void (%"class.disk_cache::MemEntryImpl"*, %"class.base::WeakPtr"*, i64, %"class.disk_cache::MemEntryImpl"*, %"class.net::NetLog"*)* @_ZN10disk_cache12MemEntryImplC2EN4base7WeakPtrINS_14MemBackendImplEEElPS0_PN3net6NetLogE
@_ZN10disk_cache12MemEntryImplC1EN4base7WeakPtrINS_14MemBackendImplEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEElPS0_PN3net6NetLogE = hidden unnamed_addr alias void (%"class.disk_cache::MemEntryImpl"*, %"class.base::WeakPtr"*, %"class.std::__1::basic_string"*, i64, %"class.disk_cache::MemEntryImpl"*, %"class.net::NetLog"*), void (%"class.disk_cache::MemEntryImpl"*, %"class.base::WeakPtr"*, %"class.std::__1::basic_string"*, i64, %"class.disk_cache::MemEntryImpl"*, %"class.net::NetLog"*)* @_ZN10disk_cache12MemEntryImplC2EN4base7WeakPtrINS_14MemBackendImplEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEElPS0_PN3net6NetLogE
@_ZN10disk_cache12MemEntryImplD1Ev = hidden unnamed_addr alias void (%"class.disk_cache::MemEntryImpl"*), void (%"class.disk_cache::MemEntryImpl"*)* @_ZN10disk_cache12MemEntryImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache12MemEntryImplC2EN4base7WeakPtrINS_14MemBackendImplEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEPN3net6NetLogE(%"class.disk_cache::MemEntryImpl"*, %"class.base::WeakPtr"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.net::NetLog"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %7, %"class.base::internal::WeakReference"* dereferenceable(8) %8) #13
  %9 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %9, align 8
  call void @_ZN10disk_cache12MemEntryImplC2EN4base7WeakPtrINS_14MemBackendImplEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEElPS0_PN3net6NetLogE(%"class.disk_cache::MemEntryImpl"* %0, %"class.base::WeakPtr"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 0, %"class.disk_cache::MemEntryImpl"* null, %"class.net::NetLog"* %3)
  %12 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %12) #13
  call void @_ZN10disk_cache12MemEntryImpl4OpenEv(%"class.disk_cache::MemEntryImpl"* %0)
  %13 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11, i32 0, i32 0
  %14 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #13
  br i1 %14, label %18, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #13
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %18

18:                                               ; preds = %15, %4
  %19 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #13
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11, i32 0, i32 1
  %22 = bitcast i64* %21 to %"class.disk_cache::MemBackendImpl"**
  %23 = load %"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemBackendImpl"** %22, align 8
  br label %24

24:                                               ; preds = %18, %20
  %25 = phi %"class.disk_cache::MemBackendImpl"* [ %23, %20 ], [ null, %18 ]
  %26 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 2
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  br label %36

34:                                               ; preds = %24
  %35 = zext i8 %29 to i64
  br label %36

36:                                               ; preds = %31, %34
  %37 = phi i64 [ %33, %31 ], [ %35, %34 ]
  %38 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 0
  %39 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector"* %38 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %41, %37
  %45 = sub i64 %44, %43
  %46 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1
  %47 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %48 = bitcast i8** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.std::__1::vector"* %46 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %45, %49
  %53 = sub i64 %52, %51
  %54 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 2
  %55 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 2, i32 0, i32 1
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::vector"* %54 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %53, %57
  %61 = sub i64 %60, %59
  %62 = trunc i64 %61 to i32
  call void @_ZN10disk_cache14MemBackendImpl17ModifyStorageSizeEi(%"class.disk_cache::MemBackendImpl"* %25, i32 %62) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache12MemEntryImplC2EN4base7WeakPtrINS_14MemBackendImplEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEElPS0_PN3net6NetLogE(%"class.disk_cache::MemEntryImpl"*, %"class.base::WeakPtr"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i64, %"class.disk_cache::MemEntryImpl"*, %"class.net::NetLog"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.base::Value", align 8
  %11 = alloca %"class.net::NetLogWithSource", align 8
  %12 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN10disk_cache5EntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* %13) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN10disk_cache12MemEntryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %14 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 2
  %15 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %6
  %20 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #13
  br label %27

22:                                               ; preds = %6
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %14, i8* %24, i64 %26) #13
  br label %27

27:                                               ; preds = %19, %22
  %28 = getelementptr %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 0
  %29 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 5
  %30 = bitcast %"class.std::__1::vector"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 76, i1 false)
  store i64 %3, i64* %29, align 8
  %31 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 6
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 7
  store %"class.disk_cache::MemEntryImpl"* %4, %"class.disk_cache::MemEntryImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %33 to i64*
  store i64 0, i64* %34, align 8
  %35 = tail call i64 @_ZN10disk_cache14MemBackendImpl3NowERKN4base7WeakPtrIS0_EE(%"class.base::WeakPtr"* dereferenceable(16) %1) #13
  %36 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 9, i32 0, i32 0
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11, i32 0, i32 0
  %39 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %38, %"class.base::internal::WeakReference"* dereferenceable(8) %39) #13
  %40 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11, i32 0, i32 1
  %41 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %40, align 8
  %43 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 12
  store i8 0, i8* %43, align 8
  %44 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13
  tail call void @_ZN3net16NetLogWithSourceC1Ev(%"class.net::NetLogWithSource"* %44) #13
  %45 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %38) #13
  br i1 %45, label %49, label %46

46:                                               ; preds = %27
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #13
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  br label %49

49:                                               ; preds = %46, %27
  %50 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %38) #13
  br i1 %50, label %51, label %54

51:                                               ; preds = %49
  %52 = bitcast i64* %40 to %"class.disk_cache::MemBackendImpl"**
  %53 = load %"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemBackendImpl"** %52, align 8
  br label %54

54:                                               ; preds = %49, %51
  %55 = phi %"class.disk_cache::MemBackendImpl"* [ %53, %51 ], [ null, %49 ]
  call void @_ZN10disk_cache14MemBackendImpl15OnEntryInsertedEPNS_12MemEntryImplE(%"class.disk_cache::MemBackendImpl"* %55, %"class.disk_cache::MemEntryImpl"* %0) #13
  %56 = bitcast %"class.net::NetLogWithSource"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #13
  call void @_ZN3net16NetLogWithSource4MakeEPNS_6NetLogENS_16NetLogSourceTypeE(%"class.net::NetLogWithSource"* nonnull sret %11, %"class.net::NetLog"* %5, i32 14) #13
  %57 = bitcast %"class.net::NetLogWithSource"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %56, i64 24, i1 false)
  call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #13
  %58 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13, i32 1
  %59 = load %"class.net::NetLog"*, %"class.net::NetLog"** %58, align 8
  %60 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %44, i64 0, i32 0
  %61 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %59, i64 0, i32 3
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %123, label %64, !prof !2

64:                                               ; preds = %54
  %65 = bitcast %"class.base::Value"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 32, i1 false) #13, !alias.scope !3
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %10, i8 zeroext 6) #13
  %66 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #13, !noalias !3
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 24, i1 false) #13, !noalias !3
  %69 = load %"class.disk_cache::MemEntryImpl"*, %"class.disk_cache::MemEntryImpl"** %32, align 8, !noalias !8
  %70 = icmp eq %"class.disk_cache::MemEntryImpl"* %69, null
  br i1 %70, label %71, label %87

71:                                               ; preds = %64
  %72 = icmp eq %"class.std::__1::basic_string"* %8, %14
  %73 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %72, label %106, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1, !noalias !8
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* align 8 %80, i64 24, i1 false) #13, !noalias !8
  br label %106

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8, !noalias !8
  %84 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8, !noalias !8
  %86 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %83, i64 %85) #13
  br label %106

87:                                               ; preds = %64
  %88 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #13, !noalias !3
  %89 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %69, i64 0, i32 2
  %90 = load i64, i64* %29, align 8, !noalias !8
  %91 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1, !noalias !9
  %94 = icmp slt i8 %93, 0
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8, !noalias !9
  %97 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %98 = select i1 %94, i8* %96, i8* %97
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8* %98, i64 %90) #13
  %99 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1, !noalias !3
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %87
  %104 = load i8*, i8** %67, align 8, !noalias !3
  call void @_ZdlPv(i8* %104) #14
  br label %105

105:                                              ; preds = %103, %87
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* nonnull align 8 %88, i64 24, i1 false) #13, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #13, !noalias !3
  br label %106

106:                                              ; preds = %105, %81, %79, %71
  %107 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %73, %81 ], [ %73, %79 ], [ %99, %105 ], [ %73, %71 ]
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1, !noalias !3
  %110 = icmp slt i8 %109, 0
  %111 = load i8*, i8** %67, align 8, !noalias !3
  %112 = select i1 %110, i8* %111, i8* %66
  %113 = load i64, i64* %68, align 8, !noalias !3
  %114 = zext i8 %109 to i64
  %115 = select i1 %110, i64 %113, i64 %114
  %116 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3, i8* %112, i64 %115) #13
  %117 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* nonnull %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i64 7, i1 zeroext true) #13
  %118 = load i8, i8* %108, align 1, !noalias !3
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %106
  %121 = load i8*, i8** %67, align 8, !noalias !3
  call void @_ZdlPv(i8* %121) #14
  br label %122

122:                                              ; preds = %120, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #13, !noalias !3
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %59, i32 130, %"struct.net::NetLogSource"* dereferenceable(16) %60, i32 1, %"class.base::Value"* nonnull dereferenceable(32) %10) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #13
  br label %123

123:                                              ; preds = %54, %122
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache12MemEntryImpl4OpenEv(%"class.disk_cache::MemEntryImpl"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = icmp eq i32 %8, -1
  br i1 %10, label %12, label %11

11:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %21

12:                                               ; preds = %1
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 -1) #13
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 -1) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i8* %13, i8* %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %16, i8** %6, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 107, %"class.logging::CheckOpResult"* nonnull %3) #13
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %22 = load i32, i32* %7, align 8
  %23 = add i32 %22, 1
  store i32 %23, i32* %7, align 8
  ret void
}

declare void @_ZN10disk_cache14MemBackendImpl17ModifyStorageSizeEi(%"class.disk_cache::MemBackendImpl"*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK10disk_cache12MemEntryImpl14GetStorageSizeEv(%"class.disk_cache::MemEntryImpl"* readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 0
  %15 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %17, %13
  %21 = sub i64 %20, %19
  %22 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1
  %23 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %25, %21
  %29 = sub i64 %28, %27
  %30 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 2
  %31 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 2, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %33, %29
  %37 = sub i64 %36, %35
  %38 = trunc i64 %37 to i32
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache12MemEntryImplC2EN4base7WeakPtrINS_14MemBackendImplEEElPS0_PN3net6NetLogE(%"class.disk_cache::MemEntryImpl"*, %"class.base::WeakPtr"*, i64, %"class.disk_cache::MemEntryImpl"*, %"class.net::NetLog"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %8, %"class.base::internal::WeakReference"* dereferenceable(8) %9) #13
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %10, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #13
  call void @_ZN10disk_cache12MemEntryImplC2EN4base7WeakPtrINS_14MemBackendImplEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEElPS0_PN3net6NetLogE(%"class.disk_cache::MemEntryImpl"* %0, %"class.base::WeakPtr"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i64 %2, %"class.disk_cache::MemEntryImpl"* %3, %"class.net::NetLog"* %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %14) #13
  %15 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 7
  %16 = load %"class.disk_cache::MemEntryImpl"*, %"class.disk_cache::MemEntryImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %16, i64 0, i32 8, i32 0, i32 0, i32 0
  %18 = load %"class.std::__1::map"*, %"class.std::__1::map"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"**
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node"* %21, null
  br i1 %22, label %51, label %23

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %47, %23
  %26 = phi %"class.std::__1::__tree_node"* [ %50, %47 ], [ %21, %23 ]
  %27 = phi %"class.std::__1::__tree_node_base"** [ %49, %47 ], [ %24, %23 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 1, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp sgt i64 %29, %2
  br i1 %30, label %31, label %37

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %35, label %47

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %53

37:                                               ; preds = %25
  %38 = icmp slt i64 %29, %2
  br i1 %38, label %39, label %45

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 1
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %53

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %53

47:                                               ; preds = %39, %31
  %48 = phi %"class.std::__1::__tree_node_base"* [ %33, %31 ], [ %41, %39 ]
  %49 = phi %"class.std::__1::__tree_node_base"** [ %32, %31 ], [ %40, %39 ]
  %50 = bitcast %"class.std::__1::__tree_node_base"* %48 to %"class.std::__1::__tree_node"*
  br label %25

51:                                               ; preds = %5
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 0, i32 0
  br label %53

53:                                               ; preds = %51, %45, %43, %35
  %54 = phi %"class.std::__1::__tree_end_node"* [ %19, %51 ], [ %36, %35 ], [ %44, %43 ], [ %46, %45 ]
  %55 = phi %"class.std::__1::__tree_node_base"** [ %52, %51 ], [ %32, %35 ], [ %40, %43 ], [ %27, %45 ]
  %56 = bitcast %"class.std::__1::__tree_node_base"** %55 to %"class.std::__1::__tree_node"**
  %57 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node"* %57, null
  br i1 %58, label %59, label %86

59:                                               ; preds = %53
  %60 = call i8* @_Znwm(i64 48) #14, !noalias !12
  %61 = getelementptr inbounds i8, i8* %60, i64 32
  %62 = bitcast i8* %61 to i64*
  store i64 %2, i64* %62, align 8, !noalias !12
  %63 = getelementptr inbounds i8, i8* %60, i64 40
  %64 = bitcast i8* %63 to %"class.disk_cache::MemEntryImpl"**
  store %"class.disk_cache::MemEntryImpl"* null, %"class.disk_cache::MemEntryImpl"** %64, align 8, !noalias !12
  %65 = bitcast i8* %60 to %"class.std::__1::__tree_node"*
  %66 = bitcast i8* %60 to %"class.std::__1::__tree_node_base"*
  %67 = getelementptr inbounds i8, i8* %60, i64 16
  %68 = bitcast i8* %67 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %54, %"class.std::__1::__tree_end_node"** %68, align 8
  %69 = bitcast %"class.std::__1::__tree_node_base"** %55 to i8**
  store i8* %60, i8** %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %59
  %76 = ptrtoint %"class.std::__1::__tree_node_base"* %73 to i64
  %77 = bitcast %"class.std::__1::map"* %18 to i64*
  store i64 %76, i64* %77, align 8
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  br label %79

79:                                               ; preds = %75, %59
  %80 = phi %"class.std::__1::__tree_node_base"* [ %66, %59 ], [ %78, %75 ]
  %81 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %82, %"class.std::__1::__tree_node_base"* %80) #13
  %83 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, 1
  store i64 %85, i64* %83, align 8
  br label %86

86:                                               ; preds = %53, %79
  %87 = phi %"class.std::__1::__tree_node"* [ %65, %79 ], [ %57, %53 ]
  %88 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %87, i64 0, i32 1, i32 0, i32 1
  store %"class.disk_cache::MemEntryImpl"* %0, %"class.disk_cache::MemEntryImpl"** %88, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10disk_cache12MemEntryImpl5InUseEv(%"class.disk_cache::MemEntryImpl"* nocapture readonly) local_unnamed_addr #5 align 2 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi %"class.disk_cache::MemEntryImpl"* [ %0, %1 ], [ %5, %2 ]
  %4 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %3, i64 0, i32 7
  %5 = load %"class.disk_cache::MemEntryImpl"*, %"class.disk_cache::MemEntryImpl"** %4, align 8
  %6 = icmp eq %"class.disk_cache::MemEntryImpl"* %5, null
  br i1 %6, label %7, label %2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %3, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp ne i32 %9, 0
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache12MemEntryImpl16UpdateStateOnUseENS0_13EntryModifiedE(%"class.disk_cache::MemEntryImpl"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 12
  %5 = load i8, i8* %4, align 8, !range !15
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %26

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #13
  br i1 %9, label %10, label %26

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11, i32 0, i32 1
  %12 = bitcast i64* %11 to %"class.disk_cache::MemBackendImpl"**
  %13 = load %"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemBackendImpl"** %12, align 8
  %14 = icmp eq %"class.disk_cache::MemBackendImpl"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %10
  %16 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #13
  br i1 %16, label %20, label %17

17:                                               ; preds = %15
  %18 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #13
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  br label %20

20:                                               ; preds = %17, %15
  %21 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #13
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = load %"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemBackendImpl"** %12, align 8
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi %"class.disk_cache::MemBackendImpl"* [ %23, %22 ], [ null, %20 ]
  call void @_ZN10disk_cache14MemBackendImpl14OnEntryUpdatedEPNS_12MemEntryImplE(%"class.disk_cache::MemBackendImpl"* %25, %"class.disk_cache::MemEntryImpl"* %0) #13
  br label %26

26:                                               ; preds = %10, %7, %2, %24
  %27 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11
  %28 = call i64 @_ZN10disk_cache14MemBackendImpl3NowERKN4base7WeakPtrIS0_EE(%"class.base::WeakPtr"* dereferenceable(16) %27) #13
  %29 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 %28, i64* %29, align 8
  %30 = icmp eq i32 %1, 1
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 9, i32 0, i32 0
  store i64 %28, i64* %32, align 8
  br label %33

33:                                               ; preds = %31, %26
  ret void
}

declare void @_ZN10disk_cache14MemBackendImpl14OnEntryUpdatedEPNS_12MemEntryImplE(%"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemEntryImpl"*) local_unnamed_addr #2

declare i64 @_ZN10disk_cache14MemBackendImpl3NowERKN4base7WeakPtrIS0_EE(%"class.base::WeakPtr"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache12MemEntryImpl4DoomEv(%"class.disk_cache::MemEntryImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 12
  %4 = load i8, i8* %3, align 8, !range !15
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %27

6:                                                ; preds = %1
  store i8 1, i8* %3, align 8
  %7 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #13
  br i1 %8, label %9, label %25

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11, i32 0, i32 1
  %11 = bitcast i64* %10 to %"class.disk_cache::MemBackendImpl"**
  %12 = load %"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemBackendImpl"** %11, align 8
  %13 = icmp eq %"class.disk_cache::MemBackendImpl"* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %9
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #13
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  %17 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %16, %14
  %20 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #13
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = load %"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemBackendImpl"** %11, align 8
  br label %23

23:                                               ; preds = %19, %21
  %24 = phi %"class.disk_cache::MemBackendImpl"* [ %22, %21 ], [ null, %19 ]
  call void @_ZN10disk_cache14MemBackendImpl13OnEntryDoomedEPNS_12MemEntryImplE(%"class.disk_cache::MemBackendImpl"* %24, %"class.disk_cache::MemEntryImpl"* %0) #13
  br label %25

25:                                               ; preds = %9, %6, %23
  %26 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13
  call void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %26, i32 140) #13
  br label %27

27:                                               ; preds = %1, %25
  %28 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 0
  %31 = icmp eq %"class.disk_cache::MemEntryImpl"* %0, null
  %32 = or i1 %31, %30
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = bitcast %"class.disk_cache::MemEntryImpl"* %0 to void (%"class.disk_cache::MemEntryImpl"*)***
  %35 = load void (%"class.disk_cache::MemEntryImpl"*)**, void (%"class.disk_cache::MemEntryImpl"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.disk_cache::MemEntryImpl"*)*, void (%"class.disk_cache::MemEntryImpl"*)** %35, i64 16
  %37 = load void (%"class.disk_cache::MemEntryImpl"*)*, void (%"class.disk_cache::MemEntryImpl"*)** %36, align 8
  call void %37(%"class.disk_cache::MemEntryImpl"* nonnull %0) #13
  br label %38

38:                                               ; preds = %33, %27
  ret void
}

declare void @_ZN10disk_cache14MemBackendImpl13OnEntryDoomedEPNS_12MemEntryImplE(%"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemEntryImpl"*) local_unnamed_addr #2

declare void @_ZNK3net16NetLogWithSource8AddEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache12MemEntryImpl5CloseEv(%"class.disk_cache::MemEntryImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = icmp eq i32 %8, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %21

12:                                               ; preds = %1
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* %13, i8* %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %16, i8** %6, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 148, %"class.logging::CheckOpResult"* nonnull %3) #13
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %22 = load i32, i32* %7, align 8
  %23 = add i32 %22, -1
  store i32 %23, i32* %7, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %89

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 12
  %27 = load i8, i8* %26, align 8, !range !15
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %76

29:                                               ; preds = %25
  call void @_ZN10disk_cache12MemEntryImpl7CompactEv(%"class.disk_cache::MemEntryImpl"* %0)
  %30 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %31 = load %"class.std::__1::map"*, %"class.std::__1::map"** %30, align 8
  %32 = icmp eq %"class.std::__1::map"* %31, null
  br i1 %32, label %76, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %31, i64 0, i32 0, i32 0
  %35 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %31, i64 0, i32 0, i32 1, i32 0, i32 0
  %37 = icmp eq %"class.std::__1::__tree_end_node"* %35, %36
  br i1 %37, label %76, label %38

38:                                               ; preds = %33, %73
  %39 = phi %"class.std::__1::__tree_end_node"* [ %74, %73 ], [ %35, %33 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 5
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.disk_cache::MemEntryImpl"**
  %42 = load %"class.disk_cache::MemEntryImpl"*, %"class.disk_cache::MemEntryImpl"** %41, align 8
  %43 = icmp eq %"class.disk_cache::MemEntryImpl"* %42, %0
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @_ZN10disk_cache12MemEntryImpl7CompactEv(%"class.disk_cache::MemEntryImpl"* %42)
  br label %45

45:                                               ; preds = %38, %44
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 1, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %57

49:                                               ; preds = %45
  %50 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node_base"*
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 2
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_end_node"**
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, %50
  br i1 %56, label %73, label %64

57:                                               ; preds = %45, %57
  %58 = phi %"class.std::__1::__tree_node_base"* [ %60, %57 ], [ %47, %45 ]
  %59 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %62, label %57

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %58, i64 0, i32 0
  br label %73

64:                                               ; preds = %49, %64
  %65 = phi %"class.std::__1::__tree_end_node"** [ %68, %64 ], [ %52, %49 ]
  %66 = bitcast %"class.std::__1::__tree_end_node"** %65 to %"class.std::__1::__tree_node_base"**
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %69 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, %67
  br i1 %72, label %73, label %64

73:                                               ; preds = %64, %49, %62
  %74 = phi %"class.std::__1::__tree_end_node"* [ %63, %62 ], [ %53, %49 ], [ %69, %64 ]
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %74, %36
  br i1 %75, label %76, label %38

76:                                               ; preds = %73, %33, %29, %25
  %77 = load i32, i32* %7, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %89

79:                                               ; preds = %76
  %80 = load i8, i8* %26, align 8, !range !15
  %81 = icmp eq i8 %80, 0
  %82 = icmp eq %"class.disk_cache::MemEntryImpl"* %0, null
  %83 = or i1 %82, %81
  br i1 %83, label %89, label %84

84:                                               ; preds = %79
  %85 = bitcast %"class.disk_cache::MemEntryImpl"* %0 to void (%"class.disk_cache::MemEntryImpl"*)***
  %86 = load void (%"class.disk_cache::MemEntryImpl"*)**, void (%"class.disk_cache::MemEntryImpl"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.disk_cache::MemEntryImpl"*)*, void (%"class.disk_cache::MemEntryImpl"*)** %86, i64 16
  %88 = load void (%"class.disk_cache::MemEntryImpl"*)*, void (%"class.disk_cache::MemEntryImpl"*)** %87, align 8
  call void %88(%"class.disk_cache::MemEntryImpl"* nonnull %0) #13
  br label %89

89:                                               ; preds = %21, %76, %79, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache12MemEntryImpl7CompactEv(%"class.disk_cache::MemEntryImpl"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1
  %3 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %7
  %13 = icmp ugt i64 %8, %12
  %14 = inttoptr i64 %7 to i8*
  br i1 %13, label %15, label %29

15:                                               ; preds = %1
  %16 = icmp eq i64 %12, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %15
  %18 = tail call i8* @_Znwm(i64 %12) #14
  %19 = getelementptr inbounds i8, i8* %18, i64 %12
  %20 = ptrtoint i8* %19 to i64
  %21 = ptrtoint i8* %18 to i64
  %22 = icmp sgt i64 %12, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %14, i64 %12, i1 false) #13
  br label %24

24:                                               ; preds = %15, %23, %17
  %25 = phi i64 [ %21, %17 ], [ %21, %23 ], [ 0, %15 ]
  %26 = phi i64 [ %20, %17 ], [ %20, %23 ], [ 0, %15 ]
  store i64 %25, i64* %6, align 8
  store i64 %26, i64* %10, align 8
  store i64 %26, i64* %4, align 8
  %27 = icmp eq i64 %7, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZdlPv(i8* nonnull %14) #14
  br label %29

29:                                               ; preds = %1, %24, %28
  %30 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 2
  %31 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 2, i32 0, i32 2, i32 0, i32 0
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 2, i32 0, i32 1
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %39, %35
  %41 = icmp ugt i64 %36, %40
  %42 = inttoptr i64 %35 to i8*
  br i1 %41, label %43, label %57

43:                                               ; preds = %29
  %44 = icmp eq i64 %40, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %43
  %46 = tail call i8* @_Znwm(i64 %40) #14
  %47 = getelementptr inbounds i8, i8* %46, i64 %40
  %48 = ptrtoint i8* %47 to i64
  %49 = ptrtoint i8* %46 to i64
  %50 = icmp sgt i64 %40, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %45
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* align 1 %42, i64 %40, i1 false) #13
  br label %52

52:                                               ; preds = %43, %51, %45
  %53 = phi i64 [ %49, %45 ], [ %49, %51 ], [ 0, %43 ]
  %54 = phi i64 [ %48, %45 ], [ %48, %51 ], [ 0, %43 ]
  store i64 %53, i64* %34, align 8
  store i64 %54, i64* %38, align 8
  store i64 %54, i64* %32, align 8
  %55 = icmp eq i64 %35, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %52
  tail call void @_ZdlPv(i8* nonnull %42) #14
  br label %57

57:                                               ; preds = %29, %52, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10disk_cache12MemEntryImpl6GetKeyEv(%"class.std::__1::basic_string"* noalias sret, %"class.disk_cache::MemEntryImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %1, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #13
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %13, i64 %15) #13
  br label %16

16:                                               ; preds = %8, %11
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK10disk_cache12MemEntryImpl11GetLastUsedEv(%"class.disk_cache::MemEntryImpl"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK10disk_cache12MemEntryImpl15GetLastModifiedEv(%"class.disk_cache::MemEntryImpl"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK10disk_cache12MemEntryImpl11GetDataSizeEi(%"class.disk_cache::MemEntryImpl"* nocapture readonly, i32) unnamed_addr #3 align 2 {
  %3 = icmp ugt i32 %1, 2
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 %5
  %7 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 %5, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = trunc i64 %12 to i32
  br label %14

14:                                               ; preds = %2, %4
  %15 = phi i32 [ %13, %4 ], [ 0, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache12MemEntryImpl8ReadDataEiiPN3net8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.disk_cache::MemEntryImpl"*, i32, i32, %"class.net::IOBuffer"* nocapture readonly, i32, %"class.base::OnceCallback.58"* nocapture readnone) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13
  %8 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13, i32 1
  %9 = load %"class.net::NetLog"*, %"class.net::NetLog"** %8, align 8
  %10 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %9, i64 0, i32 3
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  tail call void @_ZN10disk_cache19NetLogReadWriteDataERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEiiib(%"class.net::NetLogWithSource"* dereferenceable(24) %7, i32 131, i32 1, i32 %1, i32 %2, i32 %4, i1 zeroext false) #13
  br label %14

14:                                               ; preds = %6, %13
  %15 = icmp ugt i32 %1, 2
  %16 = icmp slt i32 %4, 0
  %17 = or i1 %15, %16
  br i1 %17, label %50, label %18

18:                                               ; preds = %14
  %19 = sext i32 %1 to i64
  %20 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 %19
  %21 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 %19, i32 0, i32 1
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = trunc i64 %26 to i32
  %28 = icmp sgt i32 %27, %2
  %29 = icmp sgt i32 %2, -1
  %30 = and i1 %29, %28
  %31 = icmp ne i32 %4, 0
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %50

33:                                               ; preds = %18
  %34 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %4) #13
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = icmp sgt i32 %36, %27
  %38 = or i1 %35, %37
  %39 = sub nsw i32 %27, %2
  %40 = select i1 %38, i32 %39, i32 %4, !prof !16
  tail call void @_ZN10disk_cache12MemEntryImpl16UpdateStateOnUseENS0_13EntryModifiedE(%"class.disk_cache::MemEntryImpl"* %0, i32 0) #13
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %33
  %43 = sext i32 %40 to i64
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = sext i32 %2 to i64
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  %48 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %3, i64 0, i32 2
  %49 = load i8*, i8** %48, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %47, i64 %43, i1 false) #13
  br label %50

50:                                               ; preds = %14, %18, %33, %42
  %51 = phi i32 [ -4, %14 ], [ 0, %18 ], [ 0, %33 ], [ %40, %42 ]
  %52 = load %"class.net::NetLog"*, %"class.net::NetLog"** %8, align 8
  %53 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %52, i64 0, i32 3
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %50
  tail call void @_ZN10disk_cache23NetLogReadWriteCompleteERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEi(%"class.net::NetLogWithSource"* dereferenceable(24) %7, i32 131, i32 2, i32 %51) #13
  br label %57

57:                                               ; preds = %50, %56
  ret i32 %51
}

declare void @_ZN10disk_cache19NetLogReadWriteDataERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEiiib(%"class.net::NetLogWithSource"* dereferenceable(24), i32, i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache12MemEntryImpl16InternalReadDataEiiPN3net8IOBufferEi(%"class.disk_cache::MemEntryImpl"*, i32, i32, %"class.net::IOBuffer"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %6 = icmp ugt i32 %1, 2
  %7 = icmp slt i32 %4, 0
  %8 = or i1 %6, %7
  br i1 %8, label %41, label %9

9:                                                ; preds = %5
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 %10
  %12 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 %10, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = trunc i64 %17 to i32
  %19 = icmp sgt i32 %18, %2
  %20 = icmp sgt i32 %2, -1
  %21 = and i1 %20, %19
  %22 = icmp ne i32 %4, 0
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %41

24:                                               ; preds = %9
  %25 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %4) #13
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = icmp sgt i32 %27, %18
  %29 = or i1 %26, %28
  %30 = sub nsw i32 %18, %2
  %31 = select i1 %29, i32 %30, i32 %4, !prof !16
  tail call void @_ZN10disk_cache12MemEntryImpl16UpdateStateOnUseENS0_13EntryModifiedE(%"class.disk_cache::MemEntryImpl"* %0, i32 0)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %41, label %33

33:                                               ; preds = %24
  %34 = sext i32 %31 to i64
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = sext i32 %2 to i64
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %3, i64 0, i32 2
  %40 = load i8*, i8** %39, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %38, i64 %34, i1 false) #13
  br label %41

41:                                               ; preds = %33, %24, %9, %5
  %42 = phi i32 [ -4, %5 ], [ 0, %9 ], [ 0, %24 ], [ %31, %33 ]
  ret i32 %42
}

declare void @_ZN10disk_cache23NetLogReadWriteCompleteERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEi(%"class.net::NetLogWithSource"* dereferenceable(24), i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache12MemEntryImpl9WriteDataEiiPN3net8IOBufferEiN4base12OnceCallbackIFviEEEb(%"class.disk_cache::MemEntryImpl"*, i32, i32, %"class.net::IOBuffer"* nocapture readonly, i32, %"class.base::OnceCallback.58"* nocapture readnone, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13
  %9 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13, i32 1
  %10 = load %"class.net::NetLog"*, %"class.net::NetLog"** %9, align 8
  %11 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %10, i64 0, i32 3
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %7
  tail call void @_ZN10disk_cache19NetLogReadWriteDataERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEiiib(%"class.net::NetLogWithSource"* dereferenceable(24) %8, i32 132, i32 1, i32 %1, i32 %2, i32 %4, i1 zeroext %6) #13
  br label %15

15:                                               ; preds = %7, %14
  %16 = tail call i32 @_ZN10disk_cache12MemEntryImpl17InternalWriteDataEiiPN3net8IOBufferEib(%"class.disk_cache::MemEntryImpl"* %0, i32 %1, i32 %2, %"class.net::IOBuffer"* %3, i32 %4, i1 zeroext %6)
  %17 = load %"class.net::NetLog"*, %"class.net::NetLog"** %9, align 8
  %18 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %17, i64 0, i32 3
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %15
  tail call void @_ZN10disk_cache23NetLogReadWriteCompleteERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEi(%"class.net::NetLogWithSource"* dereferenceable(24) %8, i32 132, i32 2, i32 %16) #13
  br label %22

22:                                               ; preds = %15, %21
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache12MemEntryImpl17InternalWriteDataEiiPN3net8IOBufferEib(%"class.disk_cache::MemEntryImpl"*, i32, i32, %"class.net::IOBuffer"* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11, i32 0, i32 0
  %12 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #13
  br i1 %12, label %13, label %130

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11, i32 0, i32 1
  %15 = bitcast i64* %14 to %"class.disk_cache::MemBackendImpl"**
  %16 = load %"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemBackendImpl"** %15, align 8
  %17 = icmp eq %"class.disk_cache::MemBackendImpl"* %16, null
  br i1 %17, label %130, label %18

18:                                               ; preds = %13
  %19 = icmp ugt i32 %1, 2
  %20 = or i32 %4, %2
  %21 = icmp slt i32 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %130, label %23

23:                                               ; preds = %18
  %24 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #13
  br i1 %24, label %28, label %25

25:                                               ; preds = %23
  %26 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #13
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br label %28

28:                                               ; preds = %25, %23
  %29 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #13
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = load %"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemBackendImpl"** %15, align 8
  br label %32

32:                                               ; preds = %28, %30
  %33 = phi %"class.disk_cache::MemBackendImpl"* [ %31, %30 ], [ null, %28 ]
  %34 = call i64 @_ZNK10disk_cache14MemBackendImpl11MaxFileSizeEv(%"class.disk_cache::MemBackendImpl"* %33) #13
  %35 = trunc i64 %34 to i32
  %36 = icmp slt i32 %35, %2
  %37 = icmp slt i32 %35, %4
  %38 = or i1 %36, %37
  br i1 %38, label %130, label %39

39:                                               ; preds = %32
  %40 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %4) #13
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = icmp sgt i32 %42, %35
  %44 = or i1 %41, %43
  br i1 %44, label %130, label %45, !prof !16

45:                                               ; preds = %39
  %46 = sext i32 %1 to i64
  %47 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 %46
  %48 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 %46, i32 0, i32 1
  %49 = bitcast i8** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = trunc i64 %53 to i32
  %55 = icmp sgt i32 %42, %54
  %56 = or i1 %55, %5
  br i1 %56, label %57, label %120

57:                                               ; preds = %45
  %58 = sub nsw i32 %42, %54
  %59 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #13
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #13
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #13
  br label %63

63:                                               ; preds = %60, %57
  %64 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #13
  br i1 %64, label %65, label %67

65:                                               ; preds = %63
  %66 = load %"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemBackendImpl"** %15, align 8
  br label %67

67:                                               ; preds = %63, %65
  %68 = phi %"class.disk_cache::MemBackendImpl"* [ %66, %65 ], [ null, %63 ]
  call void @_ZN10disk_cache14MemBackendImpl17ModifyStorageSizeEi(%"class.disk_cache::MemBackendImpl"* %68, i32 %58) #13
  %69 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #13
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #13
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #13
  br label %73

73:                                               ; preds = %70, %67
  %74 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #13
  br i1 %74, label %75, label %77

75:                                               ; preds = %73
  %76 = load %"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemBackendImpl"** %15, align 8
  br label %77

77:                                               ; preds = %73, %75
  %78 = phi %"class.disk_cache::MemBackendImpl"* [ %76, %75 ], [ null, %73 ]
  %79 = call zeroext i1 @_ZNK10disk_cache14MemBackendImpl22HasExceededStorageSizeEv(%"class.disk_cache::MemBackendImpl"* %78) #13
  br i1 %79, label %80, label %92

80:                                               ; preds = %77
  %81 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #13
  br i1 %81, label %85, label %82

82:                                               ; preds = %80
  %83 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #13
  %84 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #13
  br label %85

85:                                               ; preds = %82, %80
  %86 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #13
  br i1 %86, label %87, label %89

87:                                               ; preds = %85
  %88 = load %"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemBackendImpl"** %15, align 8
  br label %89

89:                                               ; preds = %85, %87
  %90 = phi %"class.disk_cache::MemBackendImpl"* [ %88, %87 ], [ null, %85 ]
  %91 = sub nsw i32 0, %58
  call void @_ZN10disk_cache14MemBackendImpl17ModifyStorageSizeEi(%"class.disk_cache::MemBackendImpl"* %90, i32 %91) #13
  br label %130

92:                                               ; preds = %77
  %93 = sext i32 %42 to i64
  %94 = load i64, i64* %49, align 8
  %95 = load i64, i64* %51, align 8
  %96 = sub i64 %94, %95
  %97 = icmp ult i64 %96, %93
  %98 = inttoptr i64 %95 to i8*
  br i1 %97, label %99, label %101

99:                                               ; preds = %92
  %100 = sub i64 %93, %96
  call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %47, i64 %100) #13
  br label %105

101:                                              ; preds = %92
  %102 = icmp ugt i64 %96, %93
  br i1 %102, label %103, label %105

103:                                              ; preds = %101
  %104 = getelementptr inbounds i8, i8* %98, i64 %93
  store i8* %104, i8** %48, align 8
  br label %105

105:                                              ; preds = %99, %101, %103
  %106 = icmp slt i32 %54, %2
  br i1 %106, label %107, label %120

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %47, i64 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = shl i64 %53, 32
  %111 = ashr exact i64 %110, 32
  %112 = getelementptr inbounds i8, i8* %109, i64 %111
  %113 = sext i32 %2 to i64
  %114 = getelementptr inbounds i8, i8* %109, i64 %113
  %115 = ptrtoint i8* %112 to i64
  %116 = ptrtoint i8* %114 to i64
  %117 = sub i64 %116, %115
  %118 = icmp sgt i64 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %107
  call void @llvm.memset.p0i8.i64(i8* align 1 %112, i8 0, i64 %117, i1 false)
  br label %120

120:                                              ; preds = %119, %107, %105, %45
  call void @_ZN10disk_cache12MemEntryImpl16UpdateStateOnUseENS0_13EntryModifiedE(%"class.disk_cache::MemEntryImpl"* %0, i32 1)
  %121 = icmp eq i32 %4, 0
  br i1 %121, label %130, label %122

122:                                              ; preds = %120
  %123 = sext i32 %4 to i64
  %124 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %3, i64 0, i32 2
  %125 = load i8*, i8** %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %47, i64 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = sext i32 %2 to i64
  %129 = getelementptr inbounds i8, i8* %127, i64 %128
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %129, i8* align 1 %125, i64 %123, i1 false) #13
  br label %130

130:                                              ; preds = %13, %6, %120, %89, %39, %32, %122, %18
  %131 = phi i32 [ -12, %13 ], [ -4, %18 ], [ -12, %89 ], [ 0, %120 ], [ -2, %39 ], [ -2, %32 ], [ %4, %122 ], [ -12, %6 ]
  ret i32 %131
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache12MemEntryImpl14ReadSparseDataElPN3net8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.disk_cache::MemEntryImpl"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.58"* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13
  %7 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13, i32 1
  %8 = load %"class.net::NetLog"*, %"class.net::NetLog"** %7, align 8
  %9 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %8, i64 0, i32 3
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %5
  tail call void @_ZN10disk_cache21NetLogSparseOperationERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEli(%"class.net::NetLogWithSource"* dereferenceable(24) %6, i32 133, i32 1, i64 %1, i32 %3) #13
  br label %13

13:                                               ; preds = %5, %12
  %14 = tail call i32 @_ZN10disk_cache12MemEntryImpl22InternalReadSparseDataElPN3net8IOBufferEi(%"class.disk_cache::MemEntryImpl"* %0, i64 %1, %"class.net::IOBuffer"* %2, i32 %3)
  %15 = load %"class.net::NetLog"*, %"class.net::NetLog"** %7, align 8
  %16 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %15, i64 0, i32 3
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %13
  tail call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %6, i32 133) #13
  br label %20

20:                                               ; preds = %13, %19
  ret i32 %14
}

declare void @_ZN10disk_cache21NetLogSparseOperationERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEli(%"class.net::NetLogWithSource"* dereferenceable(24), i32, i32, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache12MemEntryImpl22InternalReadSparseDataElPN3net8IOBufferEi(%"class.disk_cache::MemEntryImpl"*, i64, %"class.net::IOBuffer"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.58", align 8
  %6 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 8
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::map"*, %"class.std::__1::map"** %7, align 8
  %9 = icmp eq %"class.std::__1::map"* %8, null
  br i1 %9, label %10, label %38

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1
  %12 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = trunc i64 %17 to i32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %146

20:                                               ; preds = %10
  %21 = tail call i8* @_Znwm(i64 24) #14
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = ptrtoint i8* %21 to i64
  %24 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %23, i64* %24, align 8
  %25 = tail call i8* @_Znwm(i64 48) #14, !noalias !17
  %26 = getelementptr inbounds i8, i8* %25, i64 32
  %27 = getelementptr inbounds i8, i8* %25, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 16, i1 false) #13
  %28 = bitcast i8* %26 to i64*
  store i64 0, i64* %28, align 8
  %29 = bitcast i8* %27 to i8**
  store i8* %22, i8** %29, align 8
  %30 = bitcast i8* %22 to i8**
  store i8* %25, i8** %30, align 8
  %31 = ptrtoint i8* %25 to i64
  %32 = bitcast i8* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %25, i64 24
  store i8 1, i8* %33, align 8
  %34 = getelementptr inbounds i8, i8* %21, i64 16
  %35 = bitcast i8* %34 to i64*
  store i64 1, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %25, i64 40
  %37 = bitcast i8* %36 to %"class.disk_cache::MemEntryImpl"**
  store %"class.disk_cache::MemEntryImpl"* %0, %"class.disk_cache::MemEntryImpl"** %37, align 8
  br label %38

38:                                               ; preds = %20, %4
  %39 = icmp slt i64 %1, 0
  %40 = icmp slt i32 %3, 0
  %41 = or i1 %39, %40
  br i1 %41, label %146, label %42

42:                                               ; preds = %38
  %43 = sext i32 %3 to i64
  %44 = sub nuw nsw i64 9223372036854775807, %1
  %45 = icmp slt i64 %44, %43
  %46 = select i1 %45, i64 %44, i64 %43
  %47 = trunc i64 %46 to i32
  %48 = tail call i8* @_Znwm(i64 40) #14
  %49 = bitcast i8* %48 to %"class.net::DrainableIOBuffer"*
  %50 = icmp eq %"class.net::IOBuffer"* %2, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 1 monotonic
  br label %54

54:                                               ; preds = %42, %51
  tail call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"* nonnull %49, %"class.net::IOBuffer"* %2, i32 %47) #13
  %55 = getelementptr inbounds i8, i8* %48, i64 8
  %56 = bitcast i8* %55 to i32*
  %57 = atomicrmw add i32* %56, i32 1 monotonic
  %58 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* nonnull %49) #13
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %134, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %62 = trunc i64 %1 to i32
  %63 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13
  %64 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13, i32 1
  %65 = bitcast i8* %48 to %"class.net::IOBuffer"*
  %66 = getelementptr inbounds %"class.base::OnceCallback.58", %"class.base::OnceCallback.58"* %5, i64 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.base::OnceCallback.58", %"class.base::OnceCallback.58"* %5, i64 0, i32 0
  br label %68

68:                                               ; preds = %60, %131
  %69 = call i32 @_ZNK3net17DrainableIOBuffer13BytesConsumedEv(%"class.net::DrainableIOBuffer"* nonnull %49) #13
  %70 = sext i32 %69 to i64
  %71 = add nsw i64 %70, %1
  %72 = ashr i64 %71, 12
  %73 = load %"class.std::__1::map"*, %"class.std::__1::map"** %61, align 8
  %74 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %73, i64 0, i32 0, i32 1, i32 0, i32 0
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.std::__1::__tree_node"**
  %76 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node"* %76, null
  br i1 %77, label %134, label %78

78:                                               ; preds = %68, %78
  %79 = phi %"class.std::__1::__tree_end_node"* [ %89, %78 ], [ %74, %68 ]
  %80 = phi %"class.std::__1::__tree_node"* [ %90, %78 ], [ %76, %68 ]
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 1, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = icmp slt i64 %82, %72
  %84 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 0, i32 1
  %85 = bitcast %"class.std::__1::__tree_node_base"** %84 to %"class.std::__1::__tree_node"**
  %86 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 0, i32 0
  %87 = bitcast %"class.std::__1::__tree_node"* %80 to %"class.std::__1::__tree_node"**
  %88 = select i1 %83, %"class.std::__1::__tree_node"** %85, %"class.std::__1::__tree_node"** %87
  %89 = select i1 %83, %"class.std::__1::__tree_end_node"* %79, %"class.std::__1::__tree_end_node"* %86
  %90 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %88, align 8
  %91 = icmp eq %"class.std::__1::__tree_node"* %90, null
  br i1 %91, label %92, label %78

92:                                               ; preds = %78
  %93 = icmp eq %"class.std::__1::__tree_end_node"* %89, %74
  br i1 %93, label %134, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %89, i64 4
  %96 = bitcast %"class.std::__1::__tree_end_node"* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = icmp slt i64 %72, %97
  br i1 %98, label %134, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %89, i64 5
  %101 = bitcast %"class.std::__1::__tree_end_node"* %100 to %"class.disk_cache::MemEntryImpl"**
  %102 = load %"class.disk_cache::MemEntryImpl"*, %"class.disk_cache::MemEntryImpl"** %101, align 8
  %103 = icmp eq %"class.disk_cache::MemEntryImpl"* %102, null
  br i1 %103, label %134, label %104

104:                                              ; preds = %99
  %105 = call i32 @_ZNK3net17DrainableIOBuffer13BytesConsumedEv(%"class.net::DrainableIOBuffer"* nonnull %49) #13
  %106 = add i32 %105, %62
  %107 = and i32 %106, 4095
  %108 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %102, i64 0, i32 6
  %109 = load i32, i32* %108, align 8
  %110 = icmp slt i32 %107, %109
  br i1 %110, label %134, label %111

111:                                              ; preds = %104
  %112 = load %"class.net::NetLog"*, %"class.net::NetLog"** %64, align 8
  %113 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %112, i64 0, i32 3
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %102, i64 0, i32 13, i32 0
  %118 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* nonnull %49) #13
  call void @_ZN10disk_cache21NetLogSparseReadWriteERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseERKNS0_12NetLogSourceEi(%"class.net::NetLogWithSource"* dereferenceable(24) %63, i32 135, i32 1, %"struct.net::NetLogSource"* dereferenceable(16) %117, i32 %118) #13
  br label %119

119:                                              ; preds = %111, %116
  %120 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* nonnull %49) #13
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %66, align 8
  %121 = call i32 @_ZN10disk_cache12MemEntryImpl8ReadDataEiiPN3net8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.disk_cache::MemEntryImpl"* nonnull %102, i32 1, i32 %107, %"class.net::IOBuffer"* nonnull %65, i32 %120, %"class.base::OnceCallback.58"* undef)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %67) #13
  %122 = load %"class.net::NetLog"*, %"class.net::NetLog"** %64, align 8
  %123 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %122, i64 0, i32 3
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %127, label %126

126:                                              ; preds = %119
  call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %63, i32 135, i32 %121) #13
  br label %127

127:                                              ; preds = %119, %126
  %128 = icmp slt i32 %121, 0
  br i1 %128, label %136, label %129

129:                                              ; preds = %127
  %130 = icmp eq i32 %121, 0
  br i1 %130, label %134, label %131

131:                                              ; preds = %129
  call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* nonnull %49, i32 %121) #13
  %132 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* nonnull %49) #13
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %68

134:                                              ; preds = %131, %99, %104, %129, %94, %92, %68, %54
  call void @_ZN10disk_cache12MemEntryImpl16UpdateStateOnUseENS0_13EntryModifiedE(%"class.disk_cache::MemEntryImpl"* %0, i32 0)
  %135 = call i32 @_ZNK3net17DrainableIOBuffer13BytesConsumedEv(%"class.net::DrainableIOBuffer"* nonnull %49) #13
  br label %136

136:                                              ; preds = %127, %134
  %137 = phi i32 [ %135, %134 ], [ %121, %127 ]
  %138 = atomicrmw sub i32* %56, i32 1 acq_rel
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %146

140:                                              ; preds = %136
  %141 = bitcast i8* %48 to %"class.net::IOBuffer"*
  %142 = bitcast i8* %48 to void (%"class.net::IOBuffer"*)***
  %143 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %143, i64 1
  %145 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %144, align 8
  call void %145(%"class.net::IOBuffer"* nonnull %141) #13
  br label %146

146:                                              ; preds = %140, %136, %10, %38
  %147 = phi i32 [ -4, %38 ], [ -403, %10 ], [ %137, %136 ], [ %137, %140 ]
  ret i32 %147
}

declare void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache12MemEntryImpl15WriteSparseDataElPN3net8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.disk_cache::MemEntryImpl"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.58"* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13
  %7 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13, i32 1
  %8 = load %"class.net::NetLog"*, %"class.net::NetLog"** %7, align 8
  %9 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %8, i64 0, i32 3
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %5
  tail call void @_ZN10disk_cache21NetLogSparseOperationERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEli(%"class.net::NetLogWithSource"* dereferenceable(24) %6, i32 134, i32 1, i64 %1, i32 %3) #13
  br label %13

13:                                               ; preds = %5, %12
  %14 = tail call i32 @_ZN10disk_cache12MemEntryImpl23InternalWriteSparseDataElPN3net8IOBufferEi(%"class.disk_cache::MemEntryImpl"* %0, i64 %1, %"class.net::IOBuffer"* %2, i32 %3)
  %15 = load %"class.net::NetLog"*, %"class.net::NetLog"** %7, align 8
  %16 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %15, i64 0, i32 3
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %13
  tail call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %6, i32 134) #13
  br label %20

20:                                               ; preds = %13, %19
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache12MemEntryImpl23InternalWriteSparseDataElPN3net8IOBufferEi(%"class.disk_cache::MemEntryImpl"*, i64, %"class.net::IOBuffer"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.58", align 8
  %6 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 8
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::map"*, %"class.std::__1::map"** %7, align 8
  %9 = icmp eq %"class.std::__1::map"* %8, null
  br i1 %9, label %10, label %38

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1
  %12 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = trunc i64 %17 to i32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %144

20:                                               ; preds = %10
  %21 = tail call i8* @_Znwm(i64 24) #14
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = ptrtoint i8* %21 to i64
  %24 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %23, i64* %24, align 8
  %25 = tail call i8* @_Znwm(i64 48) #14, !noalias !20
  %26 = getelementptr inbounds i8, i8* %25, i64 32
  %27 = getelementptr inbounds i8, i8* %25, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 16, i1 false) #13
  %28 = bitcast i8* %26 to i64*
  store i64 0, i64* %28, align 8
  %29 = bitcast i8* %27 to i8**
  store i8* %22, i8** %29, align 8
  %30 = bitcast i8* %22 to i8**
  store i8* %25, i8** %30, align 8
  %31 = ptrtoint i8* %25 to i64
  %32 = bitcast i8* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %25, i64 24
  store i8 1, i8* %33, align 8
  %34 = getelementptr inbounds i8, i8* %21, i64 16
  %35 = bitcast i8* %34 to i64*
  store i64 1, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %25, i64 40
  %37 = bitcast i8* %36 to %"class.disk_cache::MemEntryImpl"**
  store %"class.disk_cache::MemEntryImpl"* %0, %"class.disk_cache::MemEntryImpl"** %37, align 8
  br label %38

38:                                               ; preds = %20, %4
  %39 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11, i32 0, i32 0
  %40 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %39) #13
  br i1 %40, label %41, label %144

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11, i32 0, i32 1
  %43 = bitcast i64* %42 to %"class.disk_cache::MemBackendImpl"**
  %44 = load %"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemBackendImpl"** %43, align 8
  %45 = icmp eq %"class.disk_cache::MemBackendImpl"* %44, null
  br i1 %45, label %144, label %46

46:                                               ; preds = %41
  %47 = icmp slt i64 %1, 0
  %48 = icmp slt i32 %3, 0
  %49 = or i1 %47, %48
  br i1 %49, label %144, label %50

50:                                               ; preds = %46
  %51 = sext i32 %3 to i64
  %52 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1, i64 %51) #13
  %53 = extractvalue { i64, i1 } %52, 1
  br i1 %53, label %144, label %54

54:                                               ; preds = %50
  %55 = tail call i8* @_Znwm(i64 40) #14
  %56 = bitcast i8* %55 to %"class.net::DrainableIOBuffer"*
  %57 = icmp eq %"class.net::IOBuffer"* %2, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 1 monotonic
  br label %61

61:                                               ; preds = %54, %58
  tail call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"* nonnull %56, %"class.net::IOBuffer"* %2, i32 %3) #13
  %62 = getelementptr inbounds i8, i8* %55, i64 8
  %63 = bitcast i8* %62 to i32*
  %64 = atomicrmw add i32* %63, i32 1 monotonic
  %65 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* nonnull %56) #13
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %132, label %67

67:                                               ; preds = %61
  %68 = trunc i64 %1 to i32
  %69 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13
  %70 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13, i32 1
  %71 = bitcast i8* %55 to %"class.net::IOBuffer"*
  %72 = getelementptr inbounds %"class.base::OnceCallback.58", %"class.base::OnceCallback.58"* %5, i64 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.base::OnceCallback.58", %"class.base::OnceCallback.58"* %5, i64 0, i32 0
  br label %74

74:                                               ; preds = %67, %129
  %75 = call i32 @_ZNK3net17DrainableIOBuffer13BytesConsumedEv(%"class.net::DrainableIOBuffer"* nonnull %56) #13
  %76 = sext i32 %75 to i64
  %77 = add nsw i64 %76, %1
  %78 = call %"class.disk_cache::MemEntryImpl"* @_ZN10disk_cache12MemEntryImpl8GetChildElb(%"class.disk_cache::MemEntryImpl"* %0, i64 %77, i1 zeroext true)
  %79 = call i32 @_ZNK3net17DrainableIOBuffer13BytesConsumedEv(%"class.net::DrainableIOBuffer"* nonnull %56) #13
  %80 = add i32 %79, %68
  %81 = and i32 %80, 4095
  %82 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* nonnull %56) #13
  %83 = sub nuw nsw i32 4096, %81
  %84 = icmp slt i32 %83, %82
  %85 = select i1 %84, i32 %83, i32 %82
  %86 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %78, i64 0, i32 3, i64 1
  %87 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %78, i64 0, i32 3, i64 1, i32 0, i32 1
  %88 = bitcast i8** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector"* %86 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %89, %91
  %93 = trunc i64 %92 to i32
  %94 = load %"class.net::NetLog"*, %"class.net::NetLog"** %70, align 8
  %95 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %94, i64 0, i32 3
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %74
  %99 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %78, i64 0, i32 13, i32 0
  call void @_ZN10disk_cache21NetLogSparseReadWriteERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseERKNS0_12NetLogSourceEi(%"class.net::NetLogWithSource"* dereferenceable(24) %69, i32 136, i32 1, %"struct.net::NetLogSource"* dereferenceable(16) %99, i32 %85) #13
  br label %100

100:                                              ; preds = %74, %98
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %72, align 8
  %101 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %78, i64 0, i32 13
  %102 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %78, i64 0, i32 13, i32 1
  %103 = load %"class.net::NetLog"*, %"class.net::NetLog"** %102, align 8
  %104 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %103, i64 0, i32 3
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %108, label %107

107:                                              ; preds = %100
  call void @_ZN10disk_cache19NetLogReadWriteDataERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEiiib(%"class.net::NetLogWithSource"* dereferenceable(24) %101, i32 132, i32 1, i32 1, i32 %81, i32 %85, i1 zeroext true) #13
  br label %108

108:                                              ; preds = %107, %100
  %109 = call i32 @_ZN10disk_cache12MemEntryImpl17InternalWriteDataEiiPN3net8IOBufferEib(%"class.disk_cache::MemEntryImpl"* %78, i32 1, i32 %81, %"class.net::IOBuffer"* nonnull %71, i32 %85, i1 zeroext true) #13
  %110 = load %"class.net::NetLog"*, %"class.net::NetLog"** %102, align 8
  %111 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %110, i64 0, i32 3
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %115, label %114

114:                                              ; preds = %108
  call void @_ZN10disk_cache23NetLogReadWriteCompleteERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEi(%"class.net::NetLogWithSource"* dereferenceable(24) %101, i32 132, i32 2, i32 %109) #13
  br label %115

115:                                              ; preds = %108, %114
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %73) #13
  %116 = load %"class.net::NetLog"*, %"class.net::NetLog"** %70, align 8
  %117 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %116, i64 0, i32 3
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %121, label %120

120:                                              ; preds = %115
  call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %69, i32 136, i32 %109) #13
  br label %121

121:                                              ; preds = %115, %120
  %122 = icmp slt i32 %109, 0
  br i1 %122, label %134, label %123

123:                                              ; preds = %121
  %124 = icmp eq i32 %109, 0
  br i1 %124, label %132, label %125

125:                                              ; preds = %123
  %126 = icmp eq i32 %81, %93
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %78, i64 0, i32 6
  store i32 %81, i32* %128, align 8
  br label %129

129:                                              ; preds = %127, %125
  call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* nonnull %56, i32 %109) #13
  %130 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* nonnull %56) #13
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %74

132:                                              ; preds = %129, %123, %61
  call void @_ZN10disk_cache12MemEntryImpl16UpdateStateOnUseENS0_13EntryModifiedE(%"class.disk_cache::MemEntryImpl"* %0, i32 1)
  %133 = call i32 @_ZNK3net17DrainableIOBuffer13BytesConsumedEv(%"class.net::DrainableIOBuffer"* nonnull %56) #13
  br label %134

134:                                              ; preds = %121, %132
  %135 = phi i32 [ %133, %132 ], [ %109, %121 ]
  %136 = atomicrmw sub i32* %63, i32 1 acq_rel
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %138, label %144

138:                                              ; preds = %134
  %139 = bitcast i8* %55 to %"class.net::IOBuffer"*
  %140 = bitcast i8* %55 to void (%"class.net::IOBuffer"*)***
  %141 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %141, i64 1
  %143 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %142, align 8
  call void %143(%"class.net::IOBuffer"* nonnull %139) #13
  br label %144

144:                                              ; preds = %50, %41, %38, %138, %134, %46, %10
  %145 = phi i32 [ -2, %41 ], [ -4, %50 ], [ -403, %10 ], [ -4, %46 ], [ %135, %134 ], [ %135, %138 ], [ -2, %38 ]
  ret i32 %145
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache12MemEntryImpl17GetAvailableRangeEliPlN4base12OnceCallbackIFviEEE(%"class.disk_cache::MemEntryImpl"*, i64, i32, i64*, %"class.base::OnceCallback.58"* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::Value", align 8
  %7 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13
  %8 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13, i32 1
  %9 = load %"class.net::NetLog"*, %"class.net::NetLog"** %8, align 8
  %10 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %9, i64 0, i32 3
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %5
  tail call void @_ZN10disk_cache21NetLogSparseOperationERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEli(%"class.net::NetLogWithSource"* dereferenceable(24) %7, i32 137, i32 1, i64 %1, i32 %2) #13
  br label %14

14:                                               ; preds = %5, %13
  %15 = tail call i32 @_ZN10disk_cache12MemEntryImpl25InternalGetAvailableRangeEliPl(%"class.disk_cache::MemEntryImpl"* %0, i64 %1, i32 %2, i64* %3)
  %16 = load %"class.net::NetLog"*, %"class.net::NetLog"** %8, align 8
  %17 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %16, i64 0, i32 3
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %14
  %21 = load atomic i32, i32* %17 monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23, !prof !2

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %7, i64 0, i32 0
  %25 = bitcast %"class.base::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #13
  %26 = load i64, i64* %3, align 8, !noalias !23
  call void @_ZN10disk_cache41CreateNetLogGetAvailableRangeResultParamsEli(%"class.base::Value"* nonnull sret %6, i64 %26, i32 %15) #13
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %16, i32 137, %"struct.net::NetLogSource"* dereferenceable(16) %24, i32 2, %"class.base::Value"* nonnull dereferenceable(32) %6) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #13
  br label %27

27:                                               ; preds = %14, %23, %20
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10disk_cache12MemEntryImpl25InternalGetAvailableRangeEliPl(%"class.disk_cache::MemEntryImpl"*, i64, i32, i64*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 8
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::map"*, %"class.std::__1::map"** %6, align 8
  %8 = icmp eq %"class.std::__1::map"* %7, null
  br i1 %8, label %9, label %38

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1
  %11 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = trunc i64 %16 to i32
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %247

19:                                               ; preds = %9
  %20 = tail call i8* @_Znwm(i64 24) #14
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = ptrtoint i8* %20 to i64
  %23 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %22, i64* %23, align 8
  %24 = bitcast i8* %20 to %"class.std::__1::map"*
  %25 = tail call i8* @_Znwm(i64 48) #14, !noalias !26
  %26 = getelementptr inbounds i8, i8* %25, i64 32
  %27 = getelementptr inbounds i8, i8* %25, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 16, i1 false) #13
  %28 = bitcast i8* %26 to i64*
  store i64 0, i64* %28, align 8
  %29 = bitcast i8* %27 to i8**
  store i8* %21, i8** %29, align 8
  %30 = bitcast i8* %21 to i8**
  store i8* %25, i8** %30, align 8
  %31 = ptrtoint i8* %25 to i64
  %32 = bitcast i8* %20 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %25, i64 24
  store i8 1, i8* %33, align 8
  %34 = getelementptr inbounds i8, i8* %20, i64 16
  %35 = bitcast i8* %34 to i64*
  store i64 1, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %25, i64 40
  %37 = bitcast i8* %36 to %"class.disk_cache::MemEntryImpl"**
  store %"class.disk_cache::MemEntryImpl"* %0, %"class.disk_cache::MemEntryImpl"** %37, align 8
  br label %38

38:                                               ; preds = %19, %4
  %39 = phi %"class.std::__1::map"* [ %24, %19 ], [ %7, %4 ]
  %40 = icmp sgt i64 %1, -1
  %41 = icmp sgt i32 %2, -1
  %42 = and i1 %40, %41
  %43 = icmp ne i64* %3, null
  %44 = and i1 %42, %43
  br i1 %44, label %45, label %247

45:                                               ; preds = %38
  %46 = sext i32 %2 to i64
  %47 = sub nuw nsw i64 9223372036854775807, %1
  %48 = icmp slt i64 %47, %46
  %49 = select i1 %48, i64 %47, i64 %46
  %50 = shl i64 %49, 32
  %51 = ashr exact i64 %50, 32
  %52 = add nuw nsw i64 %51, %1
  %53 = lshr i64 %1, 12
  %54 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %39, i64 0, i32 0, i32 1, i32 0, i32 0
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.std::__1::__tree_node"**
  %56 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node"* %56, null
  br i1 %57, label %246, label %58

58:                                               ; preds = %45, %58
  %59 = phi %"class.std::__1::__tree_end_node"* [ %69, %58 ], [ %54, %45 ]
  %60 = phi %"class.std::__1::__tree_node"* [ %70, %58 ], [ %56, %45 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 1, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = icmp slt i64 %62, %53
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 0, i32 1
  %65 = bitcast %"class.std::__1::__tree_node_base"** %64 to %"class.std::__1::__tree_node"**
  %66 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::__tree_node"* %60 to %"class.std::__1::__tree_node"**
  %68 = select i1 %63, %"class.std::__1::__tree_node"** %65, %"class.std::__1::__tree_node"** %67
  %69 = select i1 %63, %"class.std::__1::__tree_end_node"* %59, %"class.std::__1::__tree_end_node"* %66
  %70 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %68, align 8
  %71 = icmp eq %"class.std::__1::__tree_node"* %70, null
  br i1 %71, label %72, label %58

72:                                               ; preds = %58
  %73 = icmp eq %"class.std::__1::__tree_end_node"* %69, %54
  br i1 %73, label %246, label %74

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 4
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 5
  %77 = bitcast %"class.std::__1::__tree_end_node"* %76 to %"class.disk_cache::MemEntryImpl"**
  %78 = load %"class.disk_cache::MemEntryImpl"*, %"class.disk_cache::MemEntryImpl"** %77, align 8
  %79 = bitcast %"class.std::__1::__tree_end_node"* %75 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = shl nsw i64 %80, 12
  %82 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %78, i64 0, i32 6
  %83 = load i32, i32* %82, align 8
  %84 = sext i32 %83 to i64
  %85 = add nsw i64 %81, %84
  %86 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %78, i64 0, i32 3, i64 1
  %87 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %78, i64 0, i32 3, i64 1, i32 0, i32 1
  %88 = bitcast i8** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector"* %86 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %89, %91
  %93 = shl i64 %92, 32
  %94 = ashr exact i64 %93, 32
  %95 = add nsw i64 %94, %81
  %96 = icmp slt i64 %85, %95
  br i1 %96, label %97, label %103

97:                                               ; preds = %74
  %98 = icmp sgt i64 %50, 0
  %99 = icmp slt i64 %85, %52
  %100 = and i1 %98, %99
  %101 = icmp sgt i64 %95, %1
  %102 = and i1 %100, %101
  br i1 %102, label %131, label %103

103:                                              ; preds = %74, %97
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 1, i32 0
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, null
  br i1 %106, label %107, label %115

107:                                              ; preds = %103
  %108 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.std::__1::__tree_node_base"*
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 2
  %110 = bitcast %"class.std::__1::__tree_end_node"* %109 to %"class.std::__1::__tree_end_node"**
  %111 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %110, align 8
  %112 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %111, i64 0, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, %108
  br i1 %114, label %131, label %122

115:                                              ; preds = %103, %115
  %116 = phi %"class.std::__1::__tree_node_base"* [ %118, %115 ], [ %105, %103 ]
  %117 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %116, i64 0, i32 0, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, null
  br i1 %119, label %120, label %115

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %116, i64 0, i32 0
  br label %131

122:                                              ; preds = %107, %122
  %123 = phi %"class.std::__1::__tree_end_node"** [ %126, %122 ], [ %110, %107 ]
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to %"class.std::__1::__tree_node_base"**
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 2
  %127 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %126, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %127, i64 0, i32 0
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = icmp eq %"class.std::__1::__tree_node_base"* %129, %125
  br i1 %130, label %131, label %122

131:                                              ; preds = %122, %120, %107, %97
  %132 = phi %"class.std::__1::__tree_end_node"* [ %69, %97 ], [ %121, %120 ], [ %111, %107 ], [ %127, %122 ]
  %133 = icmp eq %"class.std::__1::__tree_end_node"* %132, %54
  br i1 %133, label %246, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %132, i64 4
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %132, i64 5
  %137 = bitcast %"class.std::__1::__tree_end_node"* %136 to %"class.disk_cache::MemEntryImpl"**
  %138 = load %"class.disk_cache::MemEntryImpl"*, %"class.disk_cache::MemEntryImpl"** %137, align 8
  %139 = bitcast %"class.std::__1::__tree_end_node"* %135 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = shl nsw i64 %140, 12
  %142 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %138, i64 0, i32 6
  %143 = load i32, i32* %142, align 8
  %144 = sext i32 %143 to i64
  %145 = add nsw i64 %141, %144
  %146 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %138, i64 0, i32 3, i64 1
  %147 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %138, i64 0, i32 3, i64 1, i32 0, i32 1
  %148 = bitcast i8** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.std::__1::vector"* %146 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = sub i64 %149, %151
  %153 = shl i64 %152, 32
  %154 = ashr exact i64 %153, 32
  %155 = add nsw i64 %154, %141
  %156 = icmp sgt i64 %50, 0
  br i1 %156, label %157, label %246

157:                                              ; preds = %134
  %158 = icmp slt i64 %145, %155
  %159 = icmp sgt i64 %155, %1
  %160 = and i1 %158, %159
  %161 = icmp sgt i64 %52, %145
  %162 = and i1 %161, %160
  br i1 %162, label %163, label %246

163:                                              ; preds = %157
  %164 = icmp sgt i64 %145, %1
  %165 = icmp slt i64 %155, %52
  %166 = select i1 %164, i64 %145, i64 %1
  %167 = select i1 %165, i64 %155, i64 %52
  br label %168

168:                                              ; preds = %163, %235
  %169 = phi i64 [ %167, %163 ], [ %239, %235 ]
  %170 = phi i64 [ %166, %163 ], [ %240, %235 ]
  %171 = phi %"class.std::__1::__tree_end_node"* [ %132, %163 ], [ %200, %235 ]
  %172 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %171, i64 1, i32 0
  %173 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %172, align 8
  %174 = icmp eq %"class.std::__1::__tree_node_base"* %173, null
  br i1 %174, label %175, label %183

175:                                              ; preds = %168
  %176 = bitcast %"class.std::__1::__tree_end_node"* %171 to %"class.std::__1::__tree_node_base"*
  %177 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %171, i64 2
  %178 = bitcast %"class.std::__1::__tree_end_node"* %177 to %"class.std::__1::__tree_end_node"**
  %179 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %178, align 8
  %180 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %179, i64 0, i32 0
  %181 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %180, align 8
  %182 = icmp eq %"class.std::__1::__tree_node_base"* %181, %176
  br i1 %182, label %199, label %190

183:                                              ; preds = %168, %183
  %184 = phi %"class.std::__1::__tree_node_base"* [ %186, %183 ], [ %173, %168 ]
  %185 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %184, i64 0, i32 0, i32 0
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  %187 = icmp eq %"class.std::__1::__tree_node_base"* %186, null
  br i1 %187, label %188, label %183

188:                                              ; preds = %183
  %189 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %184, i64 0, i32 0
  br label %199

190:                                              ; preds = %175, %190
  %191 = phi %"class.std::__1::__tree_end_node"** [ %194, %190 ], [ %178, %175 ]
  %192 = bitcast %"class.std::__1::__tree_end_node"** %191 to %"class.std::__1::__tree_node_base"**
  %193 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %192, align 8
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %193, i64 0, i32 2
  %195 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %194, align 8
  %196 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %195, i64 0, i32 0
  %197 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %196, align 8
  %198 = icmp eq %"class.std::__1::__tree_node_base"* %197, %193
  br i1 %198, label %199, label %190

199:                                              ; preds = %190, %175, %188
  %200 = phi %"class.std::__1::__tree_end_node"* [ %189, %188 ], [ %179, %175 ], [ %195, %190 ]
  %201 = icmp eq %"class.std::__1::__tree_end_node"* %200, %54
  br i1 %201, label %241, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %200, i64 4
  %204 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %200, i64 5
  %205 = bitcast %"class.std::__1::__tree_end_node"* %204 to %"class.disk_cache::MemEntryImpl"**
  %206 = load %"class.disk_cache::MemEntryImpl"*, %"class.disk_cache::MemEntryImpl"** %205, align 8
  %207 = bitcast %"class.std::__1::__tree_end_node"* %203 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = shl nsw i64 %208, 12
  %210 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %206, i64 0, i32 6
  %211 = load i32, i32* %210, align 8
  %212 = sext i32 %211 to i64
  %213 = add nsw i64 %209, %212
  %214 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %206, i64 0, i32 3, i64 1
  %215 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %206, i64 0, i32 3, i64 1, i32 0, i32 1
  %216 = bitcast i8** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.std::__1::vector"* %214 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = sub i64 %217, %219
  %221 = shl i64 %220, 32
  %222 = ashr exact i64 %221, 32
  %223 = add nsw i64 %222, %209
  %224 = icmp slt i64 %213, %223
  %225 = icmp sgt i64 %223, %1
  %226 = and i1 %224, %225
  %227 = icmp sgt i64 %52, %213
  %228 = and i1 %227, %226
  br i1 %228, label %229, label %241

229:                                              ; preds = %202
  %230 = icmp sgt i64 %213, %1
  %231 = icmp slt i64 %223, %52
  %232 = select i1 %230, i64 %213, i64 %1
  %233 = select i1 %231, i64 %223, i64 %52
  %234 = icmp eq i64 %232, %169
  br i1 %234, label %235, label %241

235:                                              ; preds = %229
  %236 = icmp slt i64 %169, %233
  %237 = icmp slt i64 %170, %169
  %238 = select i1 %237, i64 %170, i64 %169
  %239 = select i1 %236, i64 %233, i64 %169
  %240 = select i1 %236, i64 %238, i64 %170
  br label %168

241:                                              ; preds = %199, %202, %229
  store i64 %170, i64* %3, align 8
  %242 = icmp slt i64 %170, %169
  %243 = select i1 %242, i64 %169, i64 %170
  %244 = sub nsw i64 %243, %170
  %245 = trunc i64 %244 to i32
  br label %247

246:                                              ; preds = %72, %131, %134, %157, %45
  store i64 %1, i64* %3, align 8
  br label %247

247:                                              ; preds = %241, %246, %9, %38
  %248 = phi i32 [ -4, %38 ], [ -403, %9 ], [ %245, %241 ], [ 0, %246 ]
  ret i32 %248
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10disk_cache12MemEntryImpl13CouldBeSparseEv(%"class.disk_cache::MemEntryImpl"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::map"*, %"class.std::__1::map"** %2, align 8
  %4 = icmp ne %"class.std::__1::map"* %3, null
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN10disk_cache12MemEntryImpl16ReadyForSparseIOEN4base12OnceCallbackIFviEEE(%"class.disk_cache::MemEntryImpl"* nocapture readnone, %"class.base::OnceCallback.58"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10disk_cache12MemEntryImpl22SetLastUsedTimeForTestEN4base4TimeE(%"class.disk_cache::MemEntryImpl"* nocapture, i64) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK10disk_cache12MemEntryImpl19EstimateMemoryUsageEv(%"class.disk_cache::MemEntryImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast [3 x %"class.std::__1::vector"]* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1
  %10 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %8, %12
  %16 = sub i64 %15, %14
  %17 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 2
  %18 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 2, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %16, %20
  %24 = sub i64 %23, %22
  %25 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 2
  %26 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %25) #13
  %27 = add i64 %24, %26
  %28 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %29 = load %"class.std::__1::map"*, %"class.std::__1::map"** %28, align 8
  %30 = icmp eq %"class.std::__1::map"* %29, null
  br i1 %30, label %73, label %31

31:                                               ; preds = %1
  %32 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %29, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = mul i64 %33, 48
  %35 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %29, i64 0, i32 0, i32 0
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %29, i64 0, i32 0, i32 1, i32 0, i32 0
  %38 = icmp eq %"class.std::__1::__tree_end_node"* %36, %37
  br i1 %38, label %71, label %39

39:                                               ; preds = %31, %68
  %40 = phi %"class.std::__1::__tree_end_node"* [ %69, %68 ], [ %36, %31 ]
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 1, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %44, label %52

44:                                               ; preds = %39
  %45 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::__tree_node_base"*
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 2
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_end_node"**
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, %45
  br i1 %51, label %68, label %59

52:                                               ; preds = %39, %52
  %53 = phi %"class.std::__1::__tree_node_base"* [ %55, %52 ], [ %42, %39 ]
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %52

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 0
  br label %68

59:                                               ; preds = %44, %59
  %60 = phi %"class.std::__1::__tree_end_node"** [ %63, %59 ], [ %47, %44 ]
  %61 = bitcast %"class.std::__1::__tree_end_node"** %60 to %"class.std::__1::__tree_node_base"**
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, %62
  br i1 %67, label %68, label %59

68:                                               ; preds = %59, %57, %44
  %69 = phi %"class.std::__1::__tree_end_node"* [ %58, %57 ], [ %48, %44 ], [ %64, %59 ]
  %70 = icmp eq %"class.std::__1::__tree_end_node"* %69, %37
  br i1 %70, label %71, label %39

71:                                               ; preds = %68, %31
  %72 = add i64 %34, 24
  br label %73

73:                                               ; preds = %1, %71
  %74 = phi i64 [ %72, %71 ], [ 0, %1 ]
  %75 = add i64 %27, %74
  ret i64 %75
}

declare i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3net16NetLogWithSourceC1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #2

declare void @_ZN10disk_cache14MemBackendImpl15OnEntryInsertedEPNS_12MemEntryImplE(%"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemEntryImpl"*) local_unnamed_addr #2

declare void @_ZN3net16NetLogWithSource4MakeEPNS_6NetLogENS_16NetLogSourceTypeE(%"class.net::NetLogWithSource"* sret, %"class.net::NetLog"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache12MemEntryImplD2Ev(%"class.disk_cache::MemEntryImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.std::__1::map", align 16
  %4 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN10disk_cache12MemEntryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11
  %6 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 0
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  br i1 %7, label %8, label %62

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11, i32 0, i32 1
  %10 = bitcast i64* %9 to %"class.disk_cache::MemBackendImpl"**
  %11 = load %"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemBackendImpl"** %10, align 8
  %12 = icmp eq %"class.disk_cache::MemBackendImpl"* %11, null
  br i1 %12, label %62, label %13

13:                                               ; preds = %8
  %14 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  br i1 %14, label %18, label %15

15:                                               ; preds = %13
  %16 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #13
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %18

18:                                               ; preds = %15, %13
  %19 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = load %"class.disk_cache::MemBackendImpl"*, %"class.disk_cache::MemBackendImpl"** %10, align 8
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi %"class.disk_cache::MemBackendImpl"* [ %21, %20 ], [ null, %18 ]
  %24 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 2
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  br label %34

32:                                               ; preds = %22
  %33 = zext i8 %27 to i64
  br label %34

34:                                               ; preds = %29, %32
  %35 = phi i64 [ %31, %29 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 0
  %37 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %39, %35
  %43 = sub i64 %42, %41
  %44 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1
  %45 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %46 = bitcast i8** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector"* %44 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %43, %47
  %51 = sub i64 %50, %49
  %52 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 2
  %53 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 2, i32 0, i32 1
  %54 = bitcast i8** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.std::__1::vector"* %52 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %51, %55
  %59 = sub i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = sub nsw i32 0, %60
  call void @_ZN10disk_cache14MemBackendImpl17ModifyStorageSizeEi(%"class.disk_cache::MemBackendImpl"* %23, i32 %61) #13
  br label %62

62:                                               ; preds = %8, %1, %34
  %63 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 7
  %64 = load %"class.disk_cache::MemEntryImpl"*, %"class.disk_cache::MemEntryImpl"** %63, align 8
  %65 = icmp eq %"class.disk_cache::MemEntryImpl"* %64, null
  br i1 %65, label %66, label %150

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %68 = load %"class.std::__1::map"*, %"class.std::__1::map"** %67, align 8
  %69 = icmp eq %"class.std::__1::map"* %68, null
  br i1 %69, label %156, label %70

70:                                               ; preds = %66
  %71 = bitcast %"class.std::__1::map"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #13
  %72 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %75 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %76 = bitcast %"class.std::__1::__tree_node_base"** %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %75, %"class.std::__1::__tree_end_node"** %72, align 16
  %77 = bitcast %"class.std::__1::map"* %68 to i64*
  %78 = ptrtoint %"class.std::__1::__tree_end_node"* %75 to i64
  %79 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %68, i64 0, i32 0, i32 1, i32 0, i32 0
  %80 = bitcast %"class.std::__1::__tree_end_node"* %79 to i64*
  %81 = bitcast %"class.std::__1::map"* %68 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8
  store i64 %78, i64* %77, align 8
  %83 = bitcast %"class.std::__1::__tree_end_node"* %75 to i64*
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %80, align 8
  %85 = bitcast %"class.std::__1::map"* %3 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %85, align 16
  %86 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %68, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = load i64, i64* %74, align 16
  store i64 %88, i64* %86, align 8
  store i64 %87, i64* %74, align 16
  %89 = load i64, i64* %86, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %70
  %92 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %68, i64 0, i32 0, i32 0
  br label %97

93:                                               ; preds = %70
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 0, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 2
  br label %97

97:                                               ; preds = %93, %91
  %98 = phi %"class.std::__1::__tree_end_node"** [ %96, %93 ], [ %92, %91 ]
  store %"class.std::__1::__tree_end_node"* %79, %"class.std::__1::__tree_end_node"** %98, align 8
  %99 = load i64, i64* %74, align 16
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %97
  store %"class.std::__1::__tree_end_node"* %75, %"class.std::__1::__tree_end_node"** %72, align 16
  br label %108

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 0, i32 0
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %104, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %75, %"class.std::__1::__tree_end_node"** %105, align 8
  %106 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %72, align 16
  %107 = icmp eq %"class.std::__1::__tree_end_node"* %106, %75
  br i1 %107, label %108, label %112

108:                                              ; preds = %147, %101, %102
  %109 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0
  %110 = bitcast %"class.std::__1::__tree_end_node"* %75 to %"class.std::__1::__tree_node"**
  %111 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %110, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* nonnull %109, %"class.std::__1::__tree_node"* %111) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #13
  br label %156

112:                                              ; preds = %102, %147
  %113 = phi %"class.std::__1::__tree_end_node"* [ %148, %147 ], [ %106, %102 ]
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 5
  %115 = bitcast %"class.std::__1::__tree_end_node"* %114 to %"class.disk_cache::MemEntryImpl"**
  %116 = load %"class.disk_cache::MemEntryImpl"*, %"class.disk_cache::MemEntryImpl"** %115, align 8
  %117 = icmp eq %"class.disk_cache::MemEntryImpl"* %116, %0
  br i1 %117, label %119, label %118

118:                                              ; preds = %112
  call void @_ZN10disk_cache12MemEntryImpl4DoomEv(%"class.disk_cache::MemEntryImpl"* %116)
  br label %119

119:                                              ; preds = %112, %118
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node_base"* %121, null
  br i1 %122, label %123, label %131

123:                                              ; preds = %119
  %124 = bitcast %"class.std::__1::__tree_end_node"* %113 to %"class.std::__1::__tree_node_base"*
  %125 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 2
  %126 = bitcast %"class.std::__1::__tree_end_node"* %125 to %"class.std::__1::__tree_end_node"**
  %127 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %126, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %127, i64 0, i32 0
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = icmp eq %"class.std::__1::__tree_node_base"* %129, %124
  br i1 %130, label %147, label %138

131:                                              ; preds = %119, %131
  %132 = phi %"class.std::__1::__tree_node_base"* [ %134, %131 ], [ %121, %119 ]
  %133 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %132, i64 0, i32 0, i32 0
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node_base"* %134, null
  br i1 %135, label %136, label %131

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %132, i64 0, i32 0
  br label %147

138:                                              ; preds = %123, %138
  %139 = phi %"class.std::__1::__tree_end_node"** [ %142, %138 ], [ %126, %123 ]
  %140 = bitcast %"class.std::__1::__tree_end_node"** %139 to %"class.std::__1::__tree_node_base"**
  %141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %140, align 8
  %142 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %141, i64 0, i32 2
  %143 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %142, align 8
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %143, i64 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, %141
  br i1 %146, label %147, label %138

147:                                              ; preds = %138, %123, %136
  %148 = phi %"class.std::__1::__tree_end_node"* [ %137, %136 ], [ %127, %123 ], [ %143, %138 ]
  %149 = icmp eq %"class.std::__1::__tree_end_node"* %148, %75
  br i1 %149, label %108, label %112

150:                                              ; preds = %62
  %151 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %64, i64 0, i32 8, i32 0, i32 0, i32 0
  %152 = load %"class.std::__1::map"*, %"class.std::__1::map"** %151, align 8
  %153 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 5
  %154 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %152, i64 0, i32 0
  %155 = call i64 @_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE14__erase_uniqueIlEEmRKT_(%"class.std::__1::__tree"* %154, i64* dereferenceable(8) %153) #13
  br label %156

156:                                              ; preds = %66, %108, %150
  %157 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13
  call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %157, i32 130) #13
  call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %157) #13
  %158 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %158) #13
  %159 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %160 = load %"class.std::__1::map"*, %"class.std::__1::map"** %159, align 8
  store %"class.std::__1::map"* null, %"class.std::__1::map"** %159, align 8
  %161 = icmp eq %"class.std::__1::map"* %160, null
  br i1 %161, label %168, label %162

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %160, i64 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %160, i64 0, i32 0, i32 1, i32 0, i32 0
  %165 = bitcast %"class.std::__1::__tree_end_node"* %164 to %"class.std::__1::__tree_node"**
  %166 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %165, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %163, %"class.std::__1::__tree_node"* %166) #13
  %167 = bitcast %"class.std::__1::map"* %160 to i8*
  call void @_ZdlPv(i8* %167) #14
  br label %168

168:                                              ; preds = %156, %162
  %169 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 2, i32 0, i32 0
  %170 = load i8*, i8** %169, align 8
  %171 = icmp eq i8* %170, null
  br i1 %171, label %176, label %172

172:                                              ; preds = %168
  %173 = ptrtoint i8* %170 to i64
  %174 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 2, i32 0, i32 1
  %175 = bitcast i8** %174 to i64*
  store i64 %173, i64* %175, align 8
  call void @_ZdlPv(i8* nonnull %170) #14
  br label %176

176:                                              ; preds = %168, %172
  %177 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1, i32 0, i32 0
  %178 = load i8*, i8** %177, align 8
  %179 = icmp eq i8* %178, null
  br i1 %179, label %188, label %184

180:                                              ; preds = %196
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %197, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load i8*, i8** %181, align 8
  call void @_ZdlPv(i8* %182) #14
  br label %183

183:                                              ; preds = %196, %180
  ret void

184:                                              ; preds = %176
  %185 = ptrtoint i8* %178 to i64
  %186 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %187 = bitcast i8** %186 to i64*
  store i64 %185, i64* %187, align 8
  call void @_ZdlPv(i8* nonnull %178) #14
  br label %188

188:                                              ; preds = %184, %176
  %189 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 0, i32 0, i32 0
  %190 = load i8*, i8** %189, align 8
  %191 = icmp eq i8* %190, null
  br i1 %191, label %196, label %192

192:                                              ; preds = %188
  %193 = ptrtoint i8* %190 to i64
  %194 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %195 = bitcast i8** %194 to i64*
  store i64 %193, i64* %195, align 8
  call void @_ZdlPv(i8* nonnull %190) #14
  br label %196

196:                                              ; preds = %192, %188
  %197 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 2
  %198 = bitcast %"class.std::__1::basic_string"* %197 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %198, i64 0, i32 1, i32 0
  %200 = load i8, i8* %199, align 1
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %180, label %183
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache12MemEntryImplD0Ev(%"class.disk_cache::MemEntryImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN10disk_cache12MemEntryImplD2Ev(%"class.disk_cache::MemEntryImpl"* %0) #13
  %2 = bitcast %"class.disk_cache::MemEntryImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare i64 @_ZNK10disk_cache14MemBackendImpl11MaxFileSizeEv(%"class.disk_cache::MemBackendImpl"*) unnamed_addr #2

declare zeroext i1 @_ZNK10disk_cache14MemBackendImpl22HasExceededStorageSizeEv(%"class.disk_cache::MemBackendImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10disk_cache12MemEntryImpl14InitSparseInfoEv(%"class.disk_cache::MemEntryImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 8
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::map"*, %"class.std::__1::map"** %3, align 8
  %5 = icmp eq %"class.std::__1::map"* %4, null
  br i1 %5, label %6, label %43

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1
  %8 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = trunc i64 %13 to i32
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %43

16:                                               ; preds = %6
  %17 = tail call i8* @_Znwm(i64 24) #14
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #13
  %19 = bitcast i8* %17 to i8**
  store i8* %18, i8** %19, align 8
  %20 = ptrtoint i8* %17 to i64
  %21 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast i8* %18 to %"class.std::__1::__tree_node"**
  %23 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node"* %23, null
  br i1 %24, label %25, label %40

25:                                               ; preds = %16
  %26 = tail call i8* @_Znwm(i64 48) #14, !noalias !29
  %27 = getelementptr inbounds i8, i8* %26, i64 32
  %28 = bitcast i8* %26 to %"class.std::__1::__tree_node"*
  %29 = bitcast i8* %26 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds i8, i8* %26, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false)
  %31 = bitcast i8* %30 to i8**
  store i8* %18, i8** %31, align 8
  %32 = bitcast i8* %18 to i8**
  store i8* %26, i8** %32, align 8
  %33 = bitcast i8* %26 to %"class.std::__1::__tree_node_base"*
  %34 = ptrtoint i8* %26 to i64
  %35 = bitcast i8* %17 to i64*
  store i64 %34, i64* %35, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %33, %"class.std::__1::__tree_node_base"* nonnull %29) #13
  %36 = getelementptr inbounds i8, i8* %17, i64 16
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %37, align 8
  br label %40

40:                                               ; preds = %16, %25
  %41 = phi %"class.std::__1::__tree_node"* [ %28, %25 ], [ %23, %16 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 1, i32 0, i32 1
  store %"class.disk_cache::MemEntryImpl"* %0, %"class.disk_cache::MemEntryImpl"** %42, align 8
  br label %43

43:                                               ; preds = %1, %40, %6
  %44 = phi i1 [ false, %6 ], [ true, %40 ], [ true, %1 ]
  ret i1 %44
}

declare i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.disk_cache::MemEntryImpl"* @_ZN10disk_cache12MemEntryImpl8GetChildElb(%"class.disk_cache::MemEntryImpl"*, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = ashr i64 %1, 12
  %6 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::map"*, %"class.std::__1::map"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %37, label %12

12:                                               ; preds = %3, %12
  %13 = phi %"class.std::__1::__tree_end_node"* [ %23, %12 ], [ %8, %3 ]
  %14 = phi %"class.std::__1::__tree_node"* [ %24, %12 ], [ %10, %3 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 1, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp slt i64 %16, %5
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::__tree_node_base"** %18 to %"class.std::__1::__tree_node"**
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_node"* %14 to %"class.std::__1::__tree_node"**
  %22 = select i1 %17, %"class.std::__1::__tree_node"** %19, %"class.std::__1::__tree_node"** %21
  %23 = select i1 %17, %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"* %20
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %22, align 8
  %25 = icmp eq %"class.std::__1::__tree_node"* %24, null
  br i1 %25, label %26, label %12

26:                                               ; preds = %12
  %27 = icmp eq %"class.std::__1::__tree_end_node"* %23, %8
  br i1 %27, label %37, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 4
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp slt i64 %5, %31
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 5
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.disk_cache::MemEntryImpl"**
  %36 = load %"class.disk_cache::MemEntryImpl"*, %"class.disk_cache::MemEntryImpl"** %35, align 8
  br label %49

37:                                               ; preds = %28, %26, %3
  br i1 %2, label %38, label %49

38:                                               ; preds = %37
  %39 = tail call i8* @_Znwm(i64 224) #14
  %40 = bitcast i8* %39 to %"class.disk_cache::MemEntryImpl"*
  %41 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %41, %"class.base::internal::WeakReference"* dereferenceable(8) %42) #13
  %43 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 11, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %43, align 8
  %46 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %0, i64 0, i32 13
  %47 = call %"class.net::NetLog"* @_ZNK3net16NetLogWithSource7net_logEv(%"class.net::NetLogWithSource"* %46) #13
  call void @_ZN10disk_cache12MemEntryImplC2EN4base7WeakPtrINS_14MemBackendImplEEElPS0_PN3net6NetLogE(%"class.disk_cache::MemEntryImpl"* nonnull %40, %"class.base::WeakPtr"* nonnull %4, i64 %5, %"class.disk_cache::MemEntryImpl"* %0, %"class.net::NetLog"* %47)
  %48 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %48) #13
  br label %49

49:                                               ; preds = %37, %38, %33
  %50 = phi %"class.disk_cache::MemEntryImpl"* [ %36, %33 ], [ %40, %38 ], [ null, %37 ]
  ret %"class.disk_cache::MemEntryImpl"* %50
}

declare i32 @_ZNK3net17DrainableIOBuffer13BytesConsumedEv(%"class.net::DrainableIOBuffer"*) local_unnamed_addr #2

declare void @_ZN10disk_cache21NetLogSparseReadWriteERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseERKNS0_12NetLogSourceEi(%"class.net::NetLogWithSource"* dereferenceable(24), i32, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

declare void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"*, i32, i32) local_unnamed_addr #2

declare void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN10disk_cache12MemEntryImpl13ChildIntervalENSt3__120__map_const_iteratorINS1_21__tree_const_iteratorINS1_12__value_typeIlPS0_EEPNS1_11__tree_nodeIS6_PvEElEEEE(%"class.disk_cache::MemEntryImpl"* nocapture readnone, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %4 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.disk_cache::MemEntryImpl"**
  %6 = load %"class.disk_cache::MemEntryImpl"*, %"class.disk_cache::MemEntryImpl"** %5, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = shl nsw i64 %8, 12
  %10 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %6, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = add nsw i64 %9, %12
  %14 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %6, i64 0, i32 3, i64 1
  %15 = getelementptr inbounds %"class.disk_cache::MemEntryImpl", %"class.disk_cache::MemEntryImpl"* %6, i64 0, i32 3, i64 1, i32 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = shl i64 %20, 32
  %22 = ashr exact i64 %21, 32
  %23 = add nsw i64 %22, %9
  %24 = insertvalue { i64, i64 } undef, i64 %13, 0
  %25 = insertvalue { i64, i64 } %24, i64 %23, 1
  ret { i64, i64 } %25
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare %"class.net::NetLog"* @_ZNK3net16NetLogWithSource7net_logEv(%"class.net::NetLogWithSource"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10disk_cache12MemEntryImpl14CancelSparseIOEv(%"class.disk_cache::MemEntryImpl"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10disk_cache5EntryD2Ev(%"class.disk_cache::Entry"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10disk_cache5EntryD0Ev(%"class.disk_cache::Entry"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #11

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #11

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !15
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !15
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !15
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #1

declare void @_ZN10disk_cache41CreateNetLogGetAvailableRangeResultParamsEli(%"class.base::Value"* sret, i64, i32) local_unnamed_addr #2

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"*, i8*, i64, i8*, i64) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"*, i8*, i64, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE14__erase_uniqueIlEEmRKT_(%"class.std::__1::__tree"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  %7 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node_base"*
  br i1 %6, label %73, label %8

8:                                                ; preds = %2
  %9 = load i64, i64* %1, align 8
  br label %10

10:                                               ; preds = %10, %8
  %11 = phi %"class.std::__1::__tree_end_node"* [ %3, %8 ], [ %21, %10 ]
  %12 = phi %"class.std::__1::__tree_node"* [ %5, %8 ], [ %22, %10 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp slt i64 %14, %9
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node"* %12 to %"class.std::__1::__tree_node"**
  %20 = select i1 %15, %"class.std::__1::__tree_node"** %17, %"class.std::__1::__tree_node"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node"* %22, null
  br i1 %23, label %24, label %10

24:                                               ; preds = %10
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, %3
  br i1 %25, label %73, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = icmp slt i64 %9, %29
  br i1 %30, label %73, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 1, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %35, label %43

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 2
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_end_node"**
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, %36
  br i1 %42, label %59, label %50

43:                                               ; preds = %31, %43
  %44 = phi %"class.std::__1::__tree_node_base"* [ %46, %43 ], [ %33, %31 ]
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %43

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 0
  br label %59

50:                                               ; preds = %35, %50
  %51 = phi %"class.std::__1::__tree_end_node"** [ %54, %50 ], [ %38, %35 ]
  %52 = bitcast %"class.std::__1::__tree_end_node"** %51 to %"class.std::__1::__tree_node_base"**
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 2
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, %53
  br i1 %58, label %59, label %50

59:                                               ; preds = %50, %48, %35
  %60 = phi %"class.std::__1::__tree_end_node"* [ %49, %48 ], [ %39, %35 ], [ %55, %50 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %62, %21
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = ptrtoint %"class.std::__1::__tree_end_node"* %60 to i64
  %66 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %65, i64* %66, align 8
  br label %67

67:                                               ; preds = %59, %64
  %68 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %7, %"class.std::__1::__tree_node_base"* %71) #13
  %72 = bitcast %"class.std::__1::__tree_end_node"* %21 to i8*
  tail call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %26, %24, %2, %67
  %74 = phi i64 [ 1, %67 ], [ 0, %2 ], [ 0, %24 ], [ 0, %26 ]
  ret i64 %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !15
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !15
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !15
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !15
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !15
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !15
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !15
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !15
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !15
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !15
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !15
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !15
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !15
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #13
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #15
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #14
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #13
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #13
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #14
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

declare void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"*, %"class.net::IOBuffer"*, i32) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN10disk_cache12_GLOBAL__N_125NetLogEntryCreationParamsEPKNS_12MemEntryImplE: argument 0"}
!5 = distinct !{!5, !"_ZN10disk_cache12_GLOBAL__N_125NetLogEntryCreationParamsEPKNS_12MemEntryImplE"}
!6 = distinct !{!6, !7, !"_ZZN10disk_cache12MemEntryImplC1EN4base7WeakPtrINS_14MemBackendImplEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEElPS0_PN3net6NetLogEENK3$_1clEv: argument 0"}
!7 = distinct !{!7, !"_ZZN10disk_cache12MemEntryImplC1EN4base7WeakPtrINS_14MemBackendImplEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEElPS0_PN3net6NetLogEENK3$_1clEv"}
!8 = !{!4}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN10disk_cache12_GLOBAL__N_117GenerateChildNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEl: argument 0"}
!11 = distinct !{!11, !"_ZN10disk_cache12_GLOBAL__N_117GenerateChildNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEl"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!15 = !{i8 0, i8 2}
!16 = !{!"branch_weights", i32 2002, i32 2000}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOlEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOlEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOlEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOlEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZZN10disk_cache12MemEntryImpl17GetAvailableRangeEliPlN4base12OnceCallbackIFviEEEENK3$_0clEv: argument 0"}
!25 = distinct !{!25, !"_ZZN10disk_cache12MemEntryImpl17GetAvailableRangeEliPlN4base12OnceCallbackIFviEEEENK3$_0clEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOlEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOlEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOlEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_: argument 0"}
!31 = distinct !{!31, !"_ZNSt3__16__treeINS_12__value_typeIlPN10disk_cache12MemEntryImplEEENS_19__map_value_compareIlS5_NS_4lessIlEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOlEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_"}
