; ModuleID = '../../third_party/blink/renderer/modules/animationworklet/animator.cc'
source_filename = "../../third_party/blink/renderer/modules/animationworklet/animator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.142", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.158", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.176", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.183", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.126", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist.99"* }
%"class.blink::Worklist.99" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.106", %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.118", %"class.std::__1::__compressed_pair.120", [4 x i8] }>
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108", %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { i64 }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { float }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.129", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.150" }
%"class.WTF::VectorBuffer.150" = type { %"class.WTF::VectorBufferBase.151" }
%"class.WTF::VectorBufferBase.151" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.164" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.85"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.305" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.182 }
%class.scoped_refptr.182 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__cxx_atomic_impl.185" }
%"struct.std::__1::__cxx_atomic_impl.185" = type { %"struct.std::__1::__cxx_atomic_base_impl.186" }
%"struct.std::__1::__cxx_atomic_base_impl.186" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::Animator" = type { %"class.blink::NameClient", %"class.blink::Member", %"class.blink::TraceWrapperV8Reference.193", %"class.WTF::String", %"class.blink::WorkletAnimationOptions", %"class.blink::Member.277" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::AnimatorDefinition"* }
%"class.blink::TraceWrapperV8Reference.193" = type { %"class.v8::TracedReference.194" }
%"class.v8::TracedReference.194" = type { %"class.v8::BasicTracedReference.195" }
%"class.v8::BasicTracedReference.195" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.WTF::String" = type { %class.scoped_refptr.196 }
%class.scoped_refptr.196 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.197" }
%"struct.std::__1::atomic.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__atomic_base.199" }
%"struct.std::__1::__atomic_base.199" = type { %"struct.std::__1::__cxx_atomic_impl.200" }
%"struct.std::__1::__cxx_atomic_impl.200" = type { %"struct.std::__1::__cxx_atomic_base_impl.201" }
%"struct.std::__1::__cxx_atomic_base_impl.201" = type { i32 }
%"class.blink::WorkletAnimationOptions" = type { %"class.cc::AnimationOptions", %class.scoped_refptr.202 }
%"class.cc::AnimationOptions" = type { i32 (...)** }
%class.scoped_refptr.202 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.208", i64, %"class.WTF::Vector.212", %"class.WTF::Vector.217", %"class.WTF::Vector.223", %"class.WTF::Vector.241", %class.scoped_refptr.252, %"class.WTF::HashMap.257", %"class.WTF::Vector.262", %"class.WTF::Vector.212", %"class.WTF::Vector.267", %"class.WTF::HashMap.272", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.203" }
%"struct.std::__1::atomic.203" = type { %"struct.std::__1::__atomic_base.204" }
%"struct.std::__1::__atomic_base.204" = type { %"struct.std::__1::__atomic_base.205" }
%"struct.std::__1::__atomic_base.205" = type { %"struct.std::__1::__cxx_atomic_impl.206" }
%"struct.std::__1::__cxx_atomic_impl.206" = type { %"struct.std::__1::__cxx_atomic_base_impl.207" }
%"struct.std::__1::__cxx_atomic_base_impl.207" = type { i32 }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { i8* }
%"class.WTF::Vector.217" = type { %"class.WTF::VectorBuffer.218" }
%"class.WTF::VectorBuffer.218" = type { %"class.WTF::VectorBufferBase.219", [8 x i8] }
%"class.WTF::VectorBufferBase.219" = type { %class.scoped_refptr.220*, i32, i32 }
%class.scoped_refptr.220 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.223" = type { %"class.WTF::VectorBuffer.224" }
%"class.WTF::VectorBuffer.224" = type { %"class.WTF::VectorBufferBase.225" }
%"class.WTF::VectorBufferBase.225" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.233" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.226 }
%class.scoped_refptr.226 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.241" = type { %"class.WTF::VectorBuffer.242" }
%"class.WTF::VectorBuffer.242" = type { %"class.WTF::VectorBufferBase.243" }
%"class.WTF::VectorBufferBase.243" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.244", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.244" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.252 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.253", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.256 }
%"class.WTF::RefCounted.253" = type { %"class.base::RefCounted.254" }
%"class.base::RefCounted.254" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.255 }
%union.anon.255 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.256 = type { %"class.blink::SecurityOrigin"* }
%"class.WTF::HashMap.257" = type { %"class.WTF::HashTable.258" }
%"class.WTF::HashTable.258" = type <{ %"struct.WTF::KeyValuePair.261"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.261" = type opaque
%"class.WTF::Vector.262" = type { %"class.WTF::VectorBuffer.263" }
%"class.WTF::VectorBuffer.263" = type { %"class.WTF::VectorBufferBase.264" }
%"class.WTF::VectorBufferBase.264" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.212" = type { %"class.WTF::VectorBuffer.213" }
%"class.WTF::VectorBuffer.213" = type { %"class.WTF::VectorBufferBase.214", [16 x i8] }
%"class.WTF::VectorBufferBase.214" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.267" = type { %"class.WTF::VectorBuffer.268" }
%"class.WTF::VectorBuffer.268" = type { %"class.WTF::VectorBufferBase.269" }
%"class.WTF::VectorBufferBase.269" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.272" = type { %"class.WTF::HashTable.273" }
%"class.WTF::HashTable.273" = type <{ %"struct.WTF::KeyValuePair.276"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.276" = type { i8**, %"class.std::__1::unique_ptr.332" }
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.277" = type { %"class.blink::MemberBase.278" }
%"class.blink::MemberBase.278" = type { %"class.blink::WorkletGroupEffect"* }
%"class.blink::WorkletGroupEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.281" }
%"class.WTF::Vector.281" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"class.blink::Member.284"*, i32, i32 }
%"class.blink::Member.284" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::WorkletAnimationEffect"* }
%"class.blink::WorkletAnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.absl::optional.286", %"struct.blink::Timing", %"struct.blink::Timing::CalculatedTiming", %"class.absl::optional.286" }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.291", i32, [4 x i8], %class.scoped_refptr.296, i16, [6 x i8] }>
%"class.blink::AnimationTimeDelta" = type { double }
%"class.absl::optional.291" = type { %"class.absl::optional_internal::optional_data.292" }
%"class.absl::optional_internal::optional_data.292" = type { %"class.absl::optional_internal::optional_data_base.293" }
%"class.absl::optional_internal::optional_data_base.293" = type { %"class.absl::optional_internal::optional_data_dtor_base.294" }
%"class.absl::optional_internal::optional_data_dtor_base.294" = type { i8, %union.anon.295 }
%union.anon.295 = type { %"class.blink::AnimationTimeDelta" }
%class.scoped_refptr.296 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.297", i32 }
%"class.WTF::ThreadSafeRefCounted.297" = type { %"class.base::RefCountedThreadSafe.298" }
%"class.base::RefCountedThreadSafe.298" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.299", %"class.absl::optional.299", i8, i8, i8, %"class.absl::optional.291", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.299" = type { %"class.absl::optional_internal::optional_data.300" }
%"class.absl::optional_internal::optional_data.300" = type { %"class.absl::optional_internal::optional_data_base.301" }
%"class.absl::optional_internal::optional_data_base.301" = type { %"class.absl::optional_internal::optional_data_dtor_base.302" }
%"class.absl::optional_internal::optional_data_dtor_base.302" = type { i8, %union.anon.303 }
%union.anon.303 = type { double }
%"class.absl::optional.286" = type { %"class.absl::optional_internal::optional_data.287" }
%"class.absl::optional_internal::optional_data.287" = type { %"class.absl::optional_internal::optional_data_base.288" }
%"class.absl::optional_internal::optional_data_base.288" = type { %"class.absl::optional_internal::optional_data_dtor_base.289" }
%"class.absl::optional_internal::optional_data_dtor_base.289" = type { i8, %union.anon.290 }
%union.anon.290 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::AnimatorDefinition" = type { %"class.blink::NameClient", %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.191" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::V8AnimatorConstructor"* }
%"class.blink::V8AnimatorConstructor" = type opaque
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::V8AnimateCallback"* }
%"class.blink::V8AnimateCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.8", %"class.blink::Member.8" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.187", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.187" = type { %"class.blink::MemberBase.188" }
%"class.blink::MemberBase.188" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.189" }
%"class.blink::Persistent.189" = type { %"class.blink::PersistentBase.190" }
%"class.blink::PersistentBase.190" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::Member.191" = type { %"class.blink::MemberBase.192" }
%"class.blink::MemberBase.192" = type { %"class.blink::V8StateCallback"* }
%"class.blink::V8StateCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.v8::Value" = type { i8 }
%"class.WTF::Vector.310" = type { %"class.WTF::VectorBuffer.311" }
%"class.WTF::VectorBuffer.311" = type { %"class.WTF::VectorBufferBase.312" }
%"class.WTF::VectorBufferBase.312" = type { %"class.absl::optional.286"*, i32, i32 }
%"class.WTF::Vector.315" = type { %"class.WTF::VectorBuffer.316" }
%"class.WTF::VectorBuffer.316" = type { %"class.WTF::VectorBufferBase.317" }
%"class.WTF::VectorBufferBase.317" = type { %"struct.blink::Timing"*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::internal::Isolate" = type opaque
%"struct.cc::AnimationWorkletOutput::AnimationState" = type { %"struct.cc::WorkletAnimationId", %"class.std::__1::vector.320" }
%"struct.cc::WorkletAnimationId" = type { i32, i32 }
%"class.std::__1::vector.320" = type { %"class.std::__1::__vector_base.321" }
%"class.std::__1::__vector_base.321" = type { %"class.absl::optional.286"*, %"class.absl::optional.286"*, %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.absl::optional.286"* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.blink::V8UnionWorkletAnimationEffectOrWorkletGroupEffect" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.284", %"class.blink::Member.277" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.193" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.v8::Maybe.330" = type { i8, %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.193", %class.scoped_refptr.331 }
%class.scoped_refptr.331 = type { %"class.blink::DOMWrapperWorld"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK5blink8Animator18NameInHeapSnapshotEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_18AnimatorDefinitionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_18WorkletGroupEffectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_22WorkletAnimationEffectEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv = comdat any

$_ZNSt3__16vectorIN4absl8optionalIN4base9TimeDeltaEEENS_9allocatorIS5_EEE8__appendEm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6TimingEEEmm = comdat any

$_ZN3WTF6VectorIN5blink6TimingELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6TimingELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZTVN5blink8AnimatorE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink8AnimatorE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::Animator"*)* @_ZNK5blink8Animator18NameInHeapSnapshotEv to i8*)] }, comdat, align 8
@_ZTVN5blink23WorkletAnimationOptionsE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::bindings::UnionBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZTVN5blink49V8UnionWorkletAnimationEffectOrWorkletGroupEffectE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6TimingEEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Timing]\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"Animator\00", align 1

@_ZN5blink8AnimatorC1EPN2v87IsolateEPNS_18AnimatorDefinitionENS1_5LocalINS1_5ValueEEERKN3WTF6StringENS_23WorkletAnimationOptionsERKNS9_6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS9_18PartitionAllocatorEEERKNSE_INS_6TimingELj0ESK_EE = hidden unnamed_addr alias void (%"class.blink::Animator"*, %"class.v8::Isolate"*, %"class.blink::AnimatorDefinition"*, %"class.v8::Value"*, %"class.WTF::String"*, %"class.blink::WorkletAnimationOptions"*, %"class.WTF::Vector.310"*, %"class.WTF::Vector.315"*), void (%"class.blink::Animator"*, %"class.v8::Isolate"*, %"class.blink::AnimatorDefinition"*, %"class.v8::Value"*, %"class.WTF::String"*, %"class.blink::WorkletAnimationOptions"*, %"class.WTF::Vector.310"*, %"class.WTF::Vector.315"*)* @_ZN5blink8AnimatorC2EPN2v87IsolateEPNS_18AnimatorDefinitionENS1_5LocalINS1_5ValueEEERKN3WTF6StringENS_23WorkletAnimationOptionsERKNS9_6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS9_18PartitionAllocatorEEERKNSE_INS_6TimingELj0ESK_EE
@_ZN5blink8AnimatorD1Ev = hidden unnamed_addr alias void (%"class.blink::Animator"*), void (%"class.blink::Animator"*)* @_ZN5blink8AnimatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AnimatorC2EPN2v87IsolateEPNS_18AnimatorDefinitionENS1_5LocalINS1_5ValueEEERKN3WTF6StringENS_23WorkletAnimationOptionsERKNS9_6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS9_18PartitionAllocatorEEERKNSE_INS_6TimingELj0ESK_EE(%"class.blink::Animator"*, %"class.v8::Isolate"*, %"class.blink::AnimatorDefinition"*, %"class.v8::Value"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::WorkletAnimationOptions"* nocapture readonly, %"class.WTF::Vector.310"* dereferenceable(16), %"class.WTF::Vector.315"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink8AnimatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AnimatorDefinition"* %2, %"class.blink::AnimatorDefinition"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.193", %"class.blink::TraceWrapperV8Reference.193"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %13, align 8
  %14 = icmp eq %"class.v8::Value"* %3, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = bitcast %"class.v8::Value"* %3 to i64*
  %17 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %18 = bitcast %"class.blink::TraceWrapperV8Reference.193"* %12 to i64*
  %19 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %17, i64* nonnull %16, i64* %18, i1 zeroext false) #13
  %20 = ptrtoint i64* %19 to i64
  store atomic i64 %20, i64* %18 monotonic, align 8
  br label %21

21:                                               ; preds = %8, %15
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.193"* dereferenceable(8) %12) #13
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #13
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #13
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %43

43:                                               ; preds = %21, %26, %41
  %44 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink23WorkletAnimationOptionsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::WorkletAnimationOptions", %"class.blink::WorkletAnimationOptions"* %5, i64 0, i32 1, i32 0
  %46 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 4, i32 1, i32 0
  store %"class.blink::SerializedScriptValue"* %46, %"class.blink::SerializedScriptValue"** %47, align 8
  %48 = icmp eq %"class.blink::SerializedScriptValue"* %46, null
  br i1 %48, label %56, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 1 monotonic
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #13
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #13
  br label %56

56:                                               ; preds = %43, %49, %53
  %57 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #13
  %58 = bitcast i8* %57 to %"class.blink::WorkletGroupEffect"*
  call void @_ZN5blink18WorkletGroupEffectC1ERKN3WTF6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS1_18PartitionAllocatorEEERKNS2_INS_6TimingELj0ES8_EE(%"class.blink::WorkletGroupEffect"* %58, %"class.WTF::Vector.310"* dereferenceable(16) %6, %"class.WTF::Vector.315"* dereferenceable(16) %7) #13
  %59 = getelementptr inbounds i8, i8* %57, i64 -4
  %60 = bitcast i8* %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = or i16 %61, 1
  store atomic i16 %62, i16* %60 release, align 2
  %63 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 5, i32 0, i32 0
  %64 = bitcast %"class.blink::WorkletGroupEffect"** %63 to i8**
  store i8* %57, i8** %64, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8AnimatorD2Ev(%"class.blink::Animator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink8AnimatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 4
  tail call void @_ZN5blink23WorkletAnimationOptionsD1Ev(%"class.blink::WorkletAnimationOptions"* %3) #13
  %4 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #13
  br label %20

20:                                               ; preds = %1, %16, %19
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink23WorkletAnimationOptionsD1Ev(%"class.blink::WorkletAnimationOptions"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8Animator5TraceEPNS_7VisitorE(%"class.blink::Animator"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18AnimatorDefinitionEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.193"*)***
  %16 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.193"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.193"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.193"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.193"*)** %16, i64 7
  %18 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.193"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.193"*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.193"* dereferenceable(8) %14) #13
  %19 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 5
  %20 = bitcast %"class.blink::Member.277"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %21 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18WorkletGroupEffectEE5TraceEPNS_7VisitorEPKv) #13
  br label %29

29:                                               ; preds = %13, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8Animator7AnimateEPN2v87IsolateEdPN2cc22AnimationWorkletOutput14AnimationStateE(%"class.blink::Animator"* nocapture readonly, %"class.v8::Isolate"*, double, %"struct.cc::AnimationWorkletOutput::AnimationState"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 2
  %7 = bitcast %"class.blink::TraceWrapperV8Reference.193"* %6 to %"class.v8::Value"**
  %8 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %9 = icmp eq %"class.v8::Value"* %8, null
  br i1 %9, label %118, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.v8::Value"* %8 to i64*
  %12 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %13 = load i64, i64* %11, align 8
  %14 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %12, i64 %13) #13
  %15 = bitcast i64* %14 to %"class.v8::Value"*
  %16 = icmp eq i64* %14, null
  br i1 %16, label %118, label %17

17:                                               ; preds = %10
  %18 = load i64, i64* %14, align 8
  %19 = and i64 %18, 3
  %20 = icmp eq i64 %19, 1
  br i1 %20, label %21, label %37

21:                                               ; preds = %17
  %22 = add i64 %18, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = and i64 %18, -4294967296
  %26 = zext i32 %24 to i64
  %27 = or i64 %25, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 67
  br i1 %31, label %32, label %37

32:                                               ; preds = %21
  %33 = add i64 %18, 23
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = ashr i32 %35, 1
  switch i32 %36, label %37 [
    i32 5, label %118
    i32 3, label %118
  ]

37:                                               ; preds = %32, %21, %17
  %38 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 5
  %39 = getelementptr inbounds %"class.blink::Member.277", %"class.blink::Member.277"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::WorkletGroupEffect"*, %"class.blink::WorkletGroupEffect"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::WorkletGroupEffect", %"class.blink::WorkletGroupEffect"* %40, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %57

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::WorkletGroupEffect", %"class.blink::WorkletGroupEffect"* %40, i64 0, i32 1, i32 0
  %46 = tail call dereferenceable(8) %"class.blink::Member.284"* @_ZNK3WTF6VectorIN5blink6MemberINS1_22WorkletAnimationEffectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.281"* %45, i32 0) #13
  %47 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 32) #13
  %48 = bitcast %"class.blink::Member.284"* %46 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink49V8UnionWorkletAnimationEffectOrWorkletGroupEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %51 = getelementptr inbounds i8, i8* %47, i64 8
  %52 = bitcast i8* %51 to i32*
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds i8, i8* %47, i64 16
  %54 = bitcast i8* %53 to i64*
  store i64 %49, i64* %54, align 8
  %55 = getelementptr inbounds i8, i8* %47, i64 24
  %56 = bitcast i8* %55 to %"class.blink::WorkletGroupEffect"**
  store %"class.blink::WorkletGroupEffect"* null, %"class.blink::WorkletGroupEffect"** %56, align 8
  br label %68

57:                                               ; preds = %37
  %58 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 32) #13
  %59 = bitcast %"class.blink::Member.277"* %38 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8* %58 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink49V8UnionWorkletAnimationEffectOrWorkletGroupEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %62 = getelementptr inbounds i8, i8* %58, i64 8
  %63 = bitcast i8* %62 to i32*
  store i32 1, i32* %63, align 8
  %64 = getelementptr inbounds i8, i8* %58, i64 16
  %65 = bitcast i8* %64 to %"class.blink::WorkletAnimationEffect"**
  store %"class.blink::WorkletAnimationEffect"* null, %"class.blink::WorkletAnimationEffect"** %65, align 8
  %66 = getelementptr inbounds i8, i8* %58, i64 24
  %67 = bitcast i8* %66 to i64*
  store i64 %60, i64* %67, align 8
  br label %68

68:                                               ; preds = %57, %44
  %69 = phi i8* [ %58, %57 ], [ %47, %44 ]
  %70 = getelementptr inbounds i8, i8* %69, i64 -4
  %71 = bitcast i8* %70 to i16*
  %72 = load atomic i16, i16* %71 monotonic, align 2
  %73 = or i16 %72, 1
  store atomic i16 %73, i16* %71 release, align 2
  %74 = bitcast i8* %69 to %"class.blink::V8UnionWorkletAnimationEffectOrWorkletGroupEffect"*
  %75 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %75) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #13
  call void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"* nonnull %5, i1 zeroext true) #13
  %76 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 1, i32 0, i32 0
  %77 = load %"class.blink::AnimatorDefinition"*, %"class.blink::AnimatorDefinition"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::AnimatorDefinition", %"class.blink::AnimatorDefinition"* %77, i64 0, i32 2, i32 0, i32 0
  %79 = load %"class.blink::V8AnimateCallback"*, %"class.blink::V8AnimateCallback"** %78, align 8
  %80 = call i8 @_ZN5blink17V8AnimateCallback6InvokeENS_8bindings31V8ValueOrScriptWrappableAdapterEdPKNS_49V8UnionWorkletAnimationEffectOrWorkletGroupEffectE(%"class.blink::V8AnimateCallback"* %79, %"class.v8::Value"* nonnull %15, %"class.blink::ScriptWrappable"* null, double %2, %"class.blink::V8UnionWorkletAnimationEffectOrWorkletGroupEffect"* %74) #13
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %116, label %82

82:                                               ; preds = %68
  %83 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %3, i64 0, i32 1
  %84 = bitcast %"class.std::__1::vector.320"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %3, i64 0, i32 1, i32 0, i32 1
  %87 = bitcast %"class.absl::optional.286"** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 5, i32 0, i32 0
  %89 = load %"class.blink::WorkletGroupEffect"*, %"class.blink::WorkletGroupEffect"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::WorkletGroupEffect", %"class.blink::WorkletGroupEffect"* %89, i64 0, i32 1, i32 0
  %91 = getelementptr inbounds %"class.blink::WorkletGroupEffect", %"class.blink::WorkletGroupEffect"* %89, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %116, label %94

94:                                               ; preds = %82
  %95 = zext i32 %92 to i64
  call void @_ZNSt3__16vectorIN4absl8optionalIN4base9TimeDeltaEEENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.320"* %83, i64 %95) #13
  %96 = load i32, i32* %91, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %116, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.std::__1::vector.320", %"class.std::__1::vector.320"* %83, i64 0, i32 0, i32 0
  br label %100

100:                                              ; preds = %100, %98
  %101 = phi i64 [ 0, %98 ], [ %112, %100 ]
  %102 = trunc i64 %101 to i32
  %103 = call dereferenceable(8) %"class.blink::Member.284"* @_ZNK3WTF6VectorIN5blink6MemberINS1_22WorkletAnimationEffectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.281"* %90, i32 %102) #13
  %104 = getelementptr inbounds %"class.blink::Member.284", %"class.blink::Member.284"* %103, i64 0, i32 0, i32 0
  %105 = load %"class.blink::WorkletAnimationEffect"*, %"class.blink::WorkletAnimationEffect"** %104, align 8
  %106 = call { i8, i64 } @_ZNK5blink22WorkletAnimationEffect10local_timeEv(%"class.blink::WorkletAnimationEffect"* %105) #13
  %107 = extractvalue { i8, i64 } %106, 0
  %108 = extractvalue { i8, i64 } %106, 1
  %109 = load %"class.absl::optional.286"*, %"class.absl::optional.286"** %99, align 8
  %110 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %109, i64 %101, i32 0, i32 0, i32 0, i32 0
  store i8 %107, i8* %110, align 8
  %111 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %109, i64 %101, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %108, i64* %111, align 8
  %112 = add nuw nsw i64 %101, 1
  %113 = load i32, i32* %91, align 4
  %114 = zext i32 %113 to i64
  %115 = icmp ult i64 %112, %114
  br i1 %115, label %100, label %116

116:                                              ; preds = %100, %94, %82, %68
  %117 = phi i1 [ false, %68 ], [ true, %82 ], [ true, %94 ], [ true, %100 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %75) #13
  br label %118

118:                                              ; preds = %32, %32, %4, %10, %116
  %119 = phi i1 [ %117, %116 ], [ false, %32 ], [ false, %10 ], [ false, %4 ], [ false, %32 ]
  ret i1 %119
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #3

declare void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"*, i1 zeroext) local_unnamed_addr #3

declare i8 @_ZN5blink17V8AnimateCallback6InvokeENS_8bindings31V8ValueOrScriptWrappableAdapterEdPKNS_49V8UnionWorkletAnimationEffectOrWorkletGroupEffectE(%"class.blink::V8AnimateCallback"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*, double, %"class.blink::V8UnionWorkletAnimationEffectOrWorkletGroupEffect"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8Animator10GetTimingsEv(%"class.WTF::Vector.315"* noalias sret, %"class.blink::Animator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.315", %"class.WTF::Vector.315"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.315", %"class.WTF::Vector.315"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.315", %"class.WTF::Vector.315"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.315"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #13
  %8 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %1, i64 0, i32 5, i32 0, i32 0
  %9 = load %"class.blink::WorkletGroupEffect"*, %"class.blink::WorkletGroupEffect"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::WorkletGroupEffect", %"class.blink::WorkletGroupEffect"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %67, label %13

13:                                               ; preds = %2
  %14 = zext i32 %11 to i64
  %15 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6TimingEEEmm(i64 %14) #13
  %16 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %15, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6TimingEEEPKcv, i64 0, i64 0)) #13
  %17 = ptrtoint i8* %16 to i64
  %18 = bitcast %"class.WTF::Vector.315"* %0 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = udiv i64 %15, 80
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %5, align 8
  %21 = load %"class.blink::WorkletGroupEffect"*, %"class.blink::WorkletGroupEffect"** %8, align 8
  %22 = getelementptr inbounds %"class.blink::WorkletGroupEffect", %"class.blink::WorkletGroupEffect"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::WorkletGroupEffect", %"class.blink::WorkletGroupEffect"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::Member.284"*, %"class.blink::Member.284"** %24, align 8
  %26 = zext i32 %23 to i64
  %27 = getelementptr inbounds %"class.blink::Member.284", %"class.blink::Member.284"* %25, i64 %26
  %28 = icmp eq i32 %23, 0
  br i1 %28, label %67, label %29

29:                                               ; preds = %13
  %30 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %31

31:                                               ; preds = %65, %29
  %32 = phi i32 [ %20, %29 ], [ %66, %65 ]
  %33 = phi %"class.blink::Member.284"* [ %25, %29 ], [ %63, %65 ]
  %34 = getelementptr inbounds %"class.blink::Member.284", %"class.blink::Member.284"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.blink::WorkletAnimationEffect"*, %"class.blink::WorkletAnimationEffect"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::WorkletAnimationEffect", %"class.blink::WorkletAnimationEffect"* %35, i64 0, i32 2
  %37 = load i32, i32* %6, align 4
  %38 = icmp eq i32 %37, %32
  br i1 %38, label %61, label %39, !prof !2

39:                                               ; preds = %31
  %40 = load %"struct.blink::Timing"*, %"struct.blink::Timing"** %4, align 8
  %41 = zext i32 %37 to i64
  %42 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %40, i64 %41
  %43 = bitcast %"struct.blink::Timing"* %42 to i8*
  %44 = bitcast %"struct.blink::Timing"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 60, i1 false) #13
  %45 = getelementptr inbounds %"class.blink::WorkletAnimationEffect", %"class.blink::WorkletAnimationEffect"* %35, i64 0, i32 2, i32 9, i32 0
  %46 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %45, align 8
  %47 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %40, i64 %41, i32 9, i32 0
  store %"class.blink::TimingFunction"* %46, %"class.blink::TimingFunction"** %47, align 8
  %48 = icmp eq %"class.blink::TimingFunction"* %46, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %46, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 1 monotonic
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #13
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  br label %55

55:                                               ; preds = %53, %49, %39
  %56 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %40, i64 %41, i32 10
  %57 = getelementptr inbounds %"class.blink::WorkletAnimationEffect", %"class.blink::WorkletAnimationEffect"* %35, i64 0, i32 2, i32 10
  %58 = load i16, i16* %57, align 8
  store i16 %58, i16* %56, align 8
  %59 = load i32, i32* %6, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %6, align 4
  br label %62

61:                                               ; preds = %31
  call void @_ZN3WTF6VectorIN5blink6TimingELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.315"* %0, %"struct.blink::Timing"* dereferenceable(80) %36) #13
  br label %62

62:                                               ; preds = %55, %61
  %63 = getelementptr inbounds %"class.blink::Member.284", %"class.blink::Member.284"* %33, i64 1
  %64 = icmp eq %"class.blink::Member.284"* %63, %27
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  %66 = load i32, i32* %5, align 8
  br label %31

67:                                               ; preds = %62, %2, %13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8Animator10IsStatefulEv(%"class.blink::Animator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::AnimatorDefinition"*, %"class.blink::AnimatorDefinition"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AnimatorDefinition", %"class.blink::AnimatorDefinition"* %3, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::V8StateCallback"*, %"class.blink::V8StateCallback"** %4, align 8
  %6 = icmp ne %"class.blink::V8StateCallback"* %5, null
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink8Animator5StateEPN2v87IsolateERNS_14ExceptionStateE(%"class.blink::Animator"* nocapture readonly, %"class.v8::Isolate"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.v8::Maybe.330", align 8
  %6 = alloca %"class.blink::ScriptValue", align 8
  %7 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::AnimatorDefinition"*, %"class.blink::AnimatorDefinition"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::AnimatorDefinition", %"class.blink::AnimatorDefinition"* %8, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::V8StateCallback"*, %"class.blink::V8StateCallback"** %9, align 8
  %11 = icmp eq %"class.blink::V8StateCallback"* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %3
  %13 = ptrtoint %"class.v8::Isolate"* %1 to i64
  %14 = add i64 %13, 160
  %15 = inttoptr i64 %14 to %"class.v8::Value"*
  br label %93

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 2
  %18 = bitcast %"class.blink::TraceWrapperV8Reference.193"* %17 to %"class.v8::Value"**
  %19 = load %"class.v8::Value"*, %"class.v8::Value"** %18, align 8
  %20 = icmp eq %"class.v8::Value"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.v8::Value"* %19 to i64*
  %23 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %24 = load i64, i64* %22, align 8
  %25 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %23, i64 %24) #13
  %26 = bitcast i64* %25 to %"class.v8::Value"*
  br label %27

27:                                               ; preds = %16, %21
  %28 = phi %"class.v8::Value"* [ %26, %21 ], [ null, %16 ]
  %29 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %29) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %1) #13
  %30 = getelementptr inbounds %"class.v8::Maybe.330", %"class.v8::Maybe.330"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 32, i1 false)
  %31 = load %"class.blink::AnimatorDefinition"*, %"class.blink::AnimatorDefinition"** %7, align 8
  %32 = getelementptr inbounds %"class.blink::AnimatorDefinition", %"class.blink::AnimatorDefinition"* %31, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::V8StateCallback"*, %"class.blink::V8StateCallback"** %32, align 8
  call void @_ZN5blink15V8StateCallback6InvokeENS_8bindings31V8ValueOrScriptWrappableAdapterE(%"class.v8::Maybe.330"* nonnull sret %5, %"class.blink::V8StateCallback"* %33, %"class.v8::Value"* %28, %"class.blink::ScriptWrappable"* null) #13
  %34 = call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* nonnull %4) #13
  br i1 %34, label %35, label %44

35:                                               ; preds = %27
  %36 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #13
  %37 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %38 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %38, i64 5
  %40 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %39, align 8
  call void %40(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %36) #13
  %41 = ptrtoint %"class.v8::Isolate"* %1 to i64
  %42 = add i64 %41, 160
  %43 = inttoptr i64 %42 to %"class.v8::Value"*
  br label %80

44:                                               ; preds = %27
  %45 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #13
  %46 = load i8, i8* %30, align 8, !range !3, !noalias !4
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %49, !prof !2

48:                                               ; preds = %44
  call void @_ZN2v82V817FromJustIsNothingEv() #13
  br label %49

49:                                               ; preds = %48, %44
  %50 = getelementptr inbounds %"class.v8::Maybe.330", %"class.v8::Maybe.330"* %5, i64 0, i32 1
  %51 = bitcast %"class.blink::ScriptValue"* %50 to i64*
  %52 = load i64, i64* %51, align 8, !noalias !4
  %53 = bitcast %"class.blink::ScriptValue"* %6 to i64*
  store i64 %52, i64* %53, align 8, !alias.scope !4
  %54 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1
  %55 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %54, i64 0, i32 0
  %56 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %56, align 8, !alias.scope !4
  %57 = getelementptr inbounds %"class.v8::Maybe.330", %"class.v8::Maybe.330"* %5, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8, !noalias !4
  %59 = icmp eq i64* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %49
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %57, i64** %56) #13
  br label %61

61:                                               ; preds = %60, %49
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.193"* dereferenceable(8) %55) #13
  %62 = getelementptr inbounds %"class.v8::Maybe.330", %"class.v8::Maybe.330"* %5, i64 0, i32 1, i32 1, i32 1, i32 0
  %63 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %62, align 8, !noalias !4
  %64 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %63, %"class.blink::DOMWrapperWorld"** %64, align 8, !alias.scope !4
  %65 = icmp eq %"class.blink::DOMWrapperWorld"* %63, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %63, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %67) #13
  br label %68

68:                                               ; preds = %61, %66
  %69 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %6) #13
  %70 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %64, align 8
  %71 = icmp eq %"class.blink::DOMWrapperWorld"* %70, null
  br i1 %71, label %79, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %70, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %73) #13
  %74 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %72
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %70) #13
  %78 = bitcast %"class.blink::DOMWrapperWorld"* %70 to i8*
  call void @free(i8* %78) #13
  br label %79

79:                                               ; preds = %68, %72, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #13
  br label %80

80:                                               ; preds = %79, %35
  %81 = phi %"class.v8::Value"* [ %43, %35 ], [ %69, %79 ]
  %82 = getelementptr inbounds %"class.v8::Maybe.330", %"class.v8::Maybe.330"* %5, i64 0, i32 1, i32 1, i32 1, i32 0
  %83 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %82, align 8
  %84 = icmp eq %"class.blink::DOMWrapperWorld"* %83, null
  br i1 %84, label %92, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %83, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %86) #13
  %87 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %85
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %83) #13
  %91 = bitcast %"class.blink::DOMWrapperWorld"* %83 to i8*
  call void @free(i8* %91) #13
  br label %92

92:                                               ; preds = %80, %85, %90
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #13
  br label %93

93:                                               ; preds = %92, %12
  %94 = phi %"class.v8::Value"* [ %81, %92 ], [ %15, %12 ]
  ret %"class.v8::Value"* %94
}

declare void @_ZN5blink15V8StateCallback6InvokeENS_8bindings31V8ValueOrScriptWrappableAdapterE(%"class.v8::Maybe.330"* sret, %"class.blink::V8StateCallback"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink8Animator18NameInHeapSnapshotEv(%"class.blink::Animator"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0)
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.193"* dereferenceable(8)) local_unnamed_addr #3

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN5blink18WorkletGroupEffectC1ERKN3WTF6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS1_18PartitionAllocatorEEERKNS2_INS_6TimingELj0ES8_EE(%"class.blink::WorkletGroupEffect"*, %"class.WTF::Vector.310"* dereferenceable(16), %"class.WTF::Vector.315"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.197"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.197"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #13
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %21, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #13
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #13
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.197"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18AnimatorDefinitionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AnimatorDefinition"*
  tail call void @_ZNK5blink18AnimatorDefinition5TraceEPNS_7VisitorE(%"class.blink::AnimatorDefinition"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink18AnimatorDefinition5TraceEPNS_7VisitorE(%"class.blink::AnimatorDefinition"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18WorkletGroupEffectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WorkletGroupEffect"*
  %4 = bitcast i8* %1 to void (%"class.blink::WorkletGroupEffect"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::WorkletGroupEffect"*, %"class.blink::Visitor"*)**, void (%"class.blink::WorkletGroupEffect"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WorkletGroupEffect"*, %"class.blink::Visitor"*)*, void (%"class.blink::WorkletGroupEffect"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::WorkletGroupEffect"*, %"class.blink::Visitor"*)*, void (%"class.blink::WorkletGroupEffect"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::WorkletGroupEffect"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.284"* @_ZNK3WTF6VectorIN5blink6MemberINS1_22WorkletAnimationEffectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.281"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.284"*, %"class.blink::Member.284"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.284", %"class.blink::Member.284"* %24, i64 %25
  ret %"class.blink::Member.284"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.197"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.197"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::bindings::UnionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::bindings::UnionBase"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::bindings::UnionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::bindings::UnionBase"*)***
  %4 = load void (%"class.blink::bindings::UnionBase"*)**, void (%"class.blink::bindings::UnionBase"*)*** %3, align 8
  %5 = load void (%"class.blink::bindings::UnionBase"*)*, void (%"class.blink::bindings::UnionBase"*)** %4, align 8
  tail call void %5(%"class.blink::bindings::UnionBase"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare { i8, i64 } @_ZNK5blink22WorkletAnimationEffect10local_timeEv(%"class.blink::WorkletAnimationEffect"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl8optionalIN4base9TimeDeltaEEENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.320"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.320", %"class.std::__1::vector.320"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.absl::optional.286"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.320", %"class.std::__1::vector.320"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.absl::optional.286"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %49, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.absl::optional.286"*
  %14 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %47, label %16

16:                                               ; preds = %12
  %17 = shl nsw i64 %1, 4
  %18 = add i64 %17, -16
  %19 = lshr exact i64 %18, 4
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %16, %23
  %24 = phi %"class.absl::optional.286"* [ %27, %23 ], [ %13, %16 ]
  %25 = phi i64 [ %28, %23 ], [ %21, %16 ]
  %26 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %24, i64 1
  %28 = add i64 %25, -1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %23, !llvm.loop !9

30:                                               ; preds = %23, %16
  %31 = phi %"class.absl::optional.286"* [ %13, %16 ], [ %27, %23 ]
  %32 = icmp ult i64 %18, 112
  br i1 %32, label %33, label %35

33:                                               ; preds = %35, %30
  %34 = ptrtoint %"class.absl::optional.286"* %14 to i64
  br label %47

35:                                               ; preds = %30, %35
  %36 = phi %"class.absl::optional.286"* [ %45, %35 ], [ %31, %30 ]
  %37 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %36, i64 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %36, i64 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %36, i64 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %36, i64 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %36, i64 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %36, i64 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %43, align 8
  %44 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %36, i64 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %44, align 8
  %45 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %36, i64 8
  %46 = icmp eq %"class.absl::optional.286"* %45, %14
  br i1 %46, label %33, label %35

47:                                               ; preds = %12, %33
  %48 = phi i64 [ %34, %33 ], [ %8, %12 ]
  store i64 %48, i64* %7, align 8
  br label %131

49:                                               ; preds = %2
  %50 = bitcast %"class.std::__1::vector.320"* %0 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %8, %51
  %53 = ashr exact i64 %52, 4
  %54 = add i64 %53, %1
  %55 = icmp ugt i64 %54, 1152921504606846975
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = bitcast %"class.std::__1::vector.320"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %57) #14
  unreachable

58:                                               ; preds = %49
  %59 = sub i64 %5, %51
  %60 = ashr exact i64 %59, 4
  %61 = icmp ult i64 %60, 576460752303423487
  br i1 %61, label %62, label %70

62:                                               ; preds = %58
  %63 = ashr exact i64 %59, 3
  %64 = icmp ult i64 %63, %54
  %65 = select i1 %64, i64 %54, i64 %63
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %62
  %68 = icmp ugt i64 %65, 1152921504606846975
  br i1 %68, label %69, label %70

69:                                               ; preds = %67
  tail call void @abort() #14
  unreachable

70:                                               ; preds = %58, %67
  %71 = phi i64 [ %65, %67 ], [ 1152921504606846975, %58 ]
  %72 = shl i64 %71, 4
  %73 = tail call i8* @_Znwm(i64 %72) #15
  %74 = bitcast i8* %73 to %"class.absl::optional.286"*
  br label %75

75:                                               ; preds = %62, %70
  %76 = phi i64 [ %71, %70 ], [ 0, %62 ]
  %77 = phi %"class.absl::optional.286"* [ %74, %70 ], [ null, %62 ]
  %78 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %77, i64 %53
  %79 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %77, i64 %76
  %80 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %78, i64 %1
  %81 = shl nsw i64 %1, 4
  %82 = add i64 %81, -16
  %83 = lshr exact i64 %82, 4
  %84 = add nuw nsw i64 %83, 1
  %85 = and i64 %84, 7
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %94, label %87

87:                                               ; preds = %75, %87
  %88 = phi %"class.absl::optional.286"* [ %91, %87 ], [ %78, %75 ]
  %89 = phi i64 [ %92, %87 ], [ %85, %75 ]
  %90 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %88, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %90, align 8
  %91 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %88, i64 1
  %92 = add i64 %89, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %87, !llvm.loop !11

94:                                               ; preds = %87, %75
  %95 = phi %"class.absl::optional.286"* [ %78, %75 ], [ %91, %87 ]
  %96 = icmp ult i64 %82, 112
  br i1 %96, label %109, label %97

97:                                               ; preds = %94, %97
  %98 = phi %"class.absl::optional.286"* [ %107, %97 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %98, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %99, align 8
  %100 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %98, i64 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %100, align 8
  %101 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %98, i64 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %101, align 8
  %102 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %98, i64 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %102, align 8
  %103 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %98, i64 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %103, align 8
  %104 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %98, i64 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %104, align 8
  %105 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %98, i64 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %105, align 8
  %106 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %98, i64 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %106, align 8
  %107 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %98, i64 8
  %108 = icmp eq %"class.absl::optional.286"* %80, %107
  br i1 %108, label %109, label %97

109:                                              ; preds = %97, %94
  %110 = ptrtoint %"class.absl::optional.286"* %79 to i64
  %111 = ptrtoint %"class.absl::optional.286"* %80 to i64
  %112 = getelementptr inbounds %"class.std::__1::vector.320", %"class.std::__1::vector.320"* %0, i64 0, i32 0, i32 0
  %113 = load %"class.absl::optional.286"*, %"class.absl::optional.286"** %112, align 8
  %114 = load i64, i64* %7, align 8
  %115 = ptrtoint %"class.absl::optional.286"* %113 to i64
  %116 = sub i64 %114, %115
  %117 = ashr exact i64 %116, 4
  %118 = sub nsw i64 0, %117
  %119 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %78, i64 %118
  %120 = ptrtoint %"class.absl::optional.286"* %119 to i64
  %121 = icmp sgt i64 %116, 0
  br i1 %121, label %122, label %126

122:                                              ; preds = %109
  %123 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %119, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 %116, i1 false) #13
  %125 = load %"class.absl::optional.286"*, %"class.absl::optional.286"** %112, align 8
  br label %126

126:                                              ; preds = %109, %122
  %127 = phi %"class.absl::optional.286"* [ %113, %109 ], [ %125, %122 ]
  store i64 %120, i64* %50, align 8
  store i64 %111, i64* %7, align 8
  store i64 %110, i64* %4, align 8
  %128 = icmp eq %"class.absl::optional.286"* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %130) #15
  br label %131

131:                                              ; preds = %129, %126, %47
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6TimingEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 26817331
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 26817331) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 80
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6TimingELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.315"*, %"struct.blink::Timing"* dereferenceable(80)) local_unnamed_addr #12 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.315", %"class.WTF::Vector.315"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, 1
  %7 = getelementptr inbounds %"class.WTF::Vector.315", %"class.WTF::Vector.315"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::Timing"*, %"struct.blink::Timing"** %7, align 8
  %9 = icmp ugt %"struct.blink::Timing"* %8, %1
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = zext i32 %5 to i64
  %12 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %8, i64 %11
  %13 = icmp ugt %"struct.blink::Timing"* %12, %1
  br i1 %13, label %38, label %14

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.WTF::Vector.315", %"class.WTF::Vector.315"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = lshr i32 %16, 2
  %18 = add i32 %16, 1
  %19 = add i32 %18, %17
  %20 = icmp ugt i32 %19, 4
  %21 = select i1 %20, i32 %19, i32 4
  %22 = icmp ugt i32 %21, %6
  %23 = select i1 %22, i32 %21, i32 %6
  %24 = icmp ult i32 %16, %23
  br i1 %24, label %25, label %69, !prof !12

25:                                               ; preds = %14
  %26 = icmp eq %"struct.blink::Timing"* %8, null
  br i1 %26, label %27, label %36

27:                                               ; preds = %25
  %28 = zext i32 %23 to i64
  %29 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6TimingEEEmm(i64 %28) #13
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6TimingEEEPKcv, i64 0, i64 0)) #13
  %31 = ptrtoint i8* %30 to i64
  %32 = bitcast %"class.WTF::Vector.315"* %0 to i64*
  store atomic i64 %31, i64* %32 monotonic, align 8
  %33 = udiv i64 %29, 80
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %15, align 8
  %35 = bitcast i8* %30 to %"struct.blink::Timing"*
  br label %69

36:                                               ; preds = %25
  tail call void @_ZN3WTF6VectorIN5blink6TimingELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.315"* %0, i32 %23) #13
  %37 = load %"struct.blink::Timing"*, %"struct.blink::Timing"** %7, align 8
  br label %69

38:                                               ; preds = %10
  %39 = ptrtoint %"struct.blink::Timing"* %1 to i64
  %40 = ptrtoint %"struct.blink::Timing"* %8 to i64
  %41 = sub i64 %39, %40
  %42 = sdiv exact i64 %41, 80
  %43 = getelementptr inbounds %"class.WTF::Vector.315", %"class.WTF::Vector.315"* %0, i64 0, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = lshr i32 %44, 2
  %46 = add i32 %44, 1
  %47 = add i32 %46, %45
  %48 = icmp ugt i32 %47, 4
  %49 = select i1 %48, i32 %47, i32 4
  %50 = icmp ugt i32 %49, %6
  %51 = select i1 %50, i32 %49, i32 %6
  %52 = icmp ult i32 %44, %51
  br i1 %52, label %53, label %66, !prof !12

53:                                               ; preds = %38
  %54 = icmp eq %"struct.blink::Timing"* %8, null
  br i1 %54, label %55, label %64

55:                                               ; preds = %53
  %56 = zext i32 %51 to i64
  %57 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6TimingEEEmm(i64 %56) #13
  %58 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %57, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6TimingEEEPKcv, i64 0, i64 0)) #13
  %59 = ptrtoint i8* %58 to i64
  %60 = bitcast %"class.WTF::Vector.315"* %0 to i64*
  store atomic i64 %59, i64* %60 monotonic, align 8
  %61 = udiv i64 %57, 80
  %62 = trunc i64 %61 to i32
  store i32 %62, i32* %43, align 8
  %63 = bitcast i8* %58 to %"struct.blink::Timing"*
  br label %66

64:                                               ; preds = %53
  tail call void @_ZN3WTF6VectorIN5blink6TimingELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.315"* %0, i32 %51) #13
  %65 = load %"struct.blink::Timing"*, %"struct.blink::Timing"** %7, align 8
  br label %66

66:                                               ; preds = %38, %55, %64
  %67 = phi %"struct.blink::Timing"* [ %8, %38 ], [ %63, %55 ], [ %65, %64 ]
  %68 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %67, i64 %42
  br label %69

69:                                               ; preds = %36, %27, %14, %66
  %70 = phi %"struct.blink::Timing"* [ %67, %66 ], [ %8, %14 ], [ %35, %27 ], [ %37, %36 ]
  %71 = phi %"struct.blink::Timing"* [ %68, %66 ], [ %1, %14 ], [ %1, %27 ], [ %1, %36 ]
  %72 = load i32, i32* %4, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %70, i64 %73
  %75 = bitcast %"struct.blink::Timing"* %74 to i8*
  %76 = bitcast %"struct.blink::Timing"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 60, i1 false) #13
  %77 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %71, i64 0, i32 9, i32 0
  %78 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %77, align 8
  %79 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %70, i64 %73, i32 9, i32 0
  store %"class.blink::TimingFunction"* %78, %"class.blink::TimingFunction"** %79, align 8
  %80 = icmp eq %"class.blink::TimingFunction"* %78, null
  br i1 %80, label %88, label %81

81:                                               ; preds = %69
  %82 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %78, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 1 monotonic
  %84 = icmp sgt i32 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #13
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #13
  br label %88

88:                                               ; preds = %69, %81, %85
  %89 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %70, i64 %73, i32 10
  %90 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %71, i64 0, i32 10
  %91 = load i16, i16* %90, align 8
  store i16 %91, i16* %89, align 8
  %92 = load i32, i32* %4, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6TimingELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.315"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %49

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.315", %"class.WTF::Vector.315"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::Timing"*, %"struct.blink::Timing"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.315", %"class.WTF::Vector.315"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.315"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.315", %"class.WTF::Vector.315"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %4, %43
  %15 = phi %"struct.blink::Timing"* [ %45, %43 ], [ %6, %4 ]
  %16 = phi %"struct.blink::Timing"* [ %44, %43 ], [ null, %4 ]
  %17 = bitcast %"struct.blink::Timing"* %16 to i8*
  %18 = bitcast %"struct.blink::Timing"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 60, i1 false) #13
  %19 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %16, i64 0, i32 9
  %20 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %15, i64 0, i32 9
  %21 = getelementptr inbounds %class.scoped_refptr.296, %class.scoped_refptr.296* %20, i64 0, i32 0
  %22 = bitcast %class.scoped_refptr.296* %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %class.scoped_refptr.296* %19 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.blink::TimingFunction"* null, %"class.blink::TimingFunction"** %21, align 8
  %25 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %16, i64 0, i32 10
  %26 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %15, i64 0, i32 10
  %27 = load i16, i16* %26, align 8
  store i16 %27, i16* %25, align 8
  %28 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %15, i64 0, i32 9, i32 0
  %29 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %28, align 8
  %30 = icmp eq %"class.blink::TimingFunction"* %29, null
  br i1 %30, label %43, label %31

31:                                               ; preds = %14
  %32 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %29, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe.298", %"class.base::RefCountedThreadSafe.298"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %43

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.298", %"class.base::RefCountedThreadSafe.298"* %32, i64 -2
  %38 = bitcast %"class.base::RefCountedThreadSafe.298"* %37 to %"class.blink::TimingFunction"*
  %39 = bitcast %"class.base::RefCountedThreadSafe.298"* %37 to void (%"class.blink::TimingFunction"*)***
  %40 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %40, i64 1
  %42 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %41, align 8
  tail call void %42(%"class.blink::TimingFunction"* nonnull %38) #13
  br label %43

43:                                               ; preds = %36, %31, %14
  %44 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %16, i64 1
  %45 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %15, i64 1
  %46 = icmp eq %"struct.blink::Timing"* %45, %10
  br i1 %46, label %47, label %14

47:                                               ; preds = %43, %4
  %48 = bitcast %"struct.blink::Timing"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %48) #13
  br label %107

49:                                               ; preds = %2
  %50 = zext i32 %1 to i64
  %51 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6TimingEEEmm(i64 %50) #13
  %52 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %51, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6TimingEEEPKcv, i64 0, i64 0)) #13
  %53 = udiv i64 %51, 80
  %54 = ptrtoint i8* %52 to i64
  %55 = getelementptr inbounds %"class.WTF::Vector.315", %"class.WTF::Vector.315"* %0, i64 0, i32 0, i32 0, i32 0
  %56 = load %"struct.blink::Timing"*, %"struct.blink::Timing"** %55, align 8
  %57 = getelementptr inbounds %"class.WTF::Vector.315", %"class.WTF::Vector.315"* %0, i64 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %56, i64 %59
  %61 = icmp eq i32 %58, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %49
  %63 = bitcast %"struct.blink::Timing"* %56 to i8*
  br label %102

64:                                               ; preds = %49
  %65 = bitcast i8* %52 to %"struct.blink::Timing"*
  br label %66

66:                                               ; preds = %64, %95
  %67 = phi %"struct.blink::Timing"* [ %97, %95 ], [ %56, %64 ]
  %68 = phi %"struct.blink::Timing"* [ %96, %95 ], [ %65, %64 ]
  %69 = bitcast %"struct.blink::Timing"* %68 to i8*
  %70 = bitcast %"struct.blink::Timing"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 60, i1 false) #13
  %71 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %68, i64 0, i32 9
  %72 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %67, i64 0, i32 9
  %73 = getelementptr inbounds %class.scoped_refptr.296, %class.scoped_refptr.296* %72, i64 0, i32 0
  %74 = bitcast %class.scoped_refptr.296* %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %class.scoped_refptr.296* %71 to i64*
  store i64 %75, i64* %76, align 8
  store %"class.blink::TimingFunction"* null, %"class.blink::TimingFunction"** %73, align 8
  %77 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %68, i64 0, i32 10
  %78 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %67, i64 0, i32 10
  %79 = load i16, i16* %78, align 8
  store i16 %79, i16* %77, align 8
  %80 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %67, i64 0, i32 9, i32 0
  %81 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %80, align 8
  %82 = icmp eq %"class.blink::TimingFunction"* %81, null
  br i1 %82, label %95, label %83

83:                                               ; preds = %66
  %84 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %81, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.base::RefCountedThreadSafe.298", %"class.base::RefCountedThreadSafe.298"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw sub i32* %85, i32 1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %95

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.base::RefCountedThreadSafe.298", %"class.base::RefCountedThreadSafe.298"* %84, i64 -2
  %90 = bitcast %"class.base::RefCountedThreadSafe.298"* %89 to %"class.blink::TimingFunction"*
  %91 = bitcast %"class.base::RefCountedThreadSafe.298"* %89 to void (%"class.blink::TimingFunction"*)***
  %92 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %92, i64 1
  %94 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %93, align 8
  tail call void %94(%"class.blink::TimingFunction"* nonnull %90) #13
  br label %95

95:                                               ; preds = %88, %83, %66
  %96 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %68, i64 1
  %97 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %67, i64 1
  %98 = icmp eq %"struct.blink::Timing"* %97, %60
  br i1 %98, label %99, label %66

99:                                               ; preds = %95
  %100 = bitcast %"class.WTF::Vector.315"* %0 to i8**
  %101 = load i8*, i8** %100, align 8
  br label %102

102:                                              ; preds = %62, %99
  %103 = phi i8* [ %101, %99 ], [ %63, %62 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %103) #13
  %104 = bitcast %"class.WTF::Vector.315"* %0 to i64*
  store atomic i64 %54, i64* %104 monotonic, align 8
  %105 = trunc i64 %53 to i32
  %106 = getelementptr inbounds %"class.WTF::Vector.315", %"class.WTF::Vector.315"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %105, i32* %106, align 8
  br label %107

107:                                              ; preds = %102, %47
  ret void
}

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #3

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZNK2v85MaybeIN5blink11ScriptValueEE8FromJustEv: argument 0"}
!6 = distinct !{!6, !"_ZNK2v85MaybeIN5blink11ScriptValueEE8FromJustEv"}
!7 = distinct !{!7, !8, !"_ZNK2v85MaybeIN5blink11ScriptValueEE9ToCheckedEv: argument 0"}
!8 = distinct !{!8, !"_ZNK2v85MaybeIN5blink11ScriptValueEE9ToCheckedEv"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = !{!"branch_weights", i32 2000, i32 1}
