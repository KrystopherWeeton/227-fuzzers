; ModuleID = '../../courgette/third_party/divsufsort/sssort.cc'
source_filename = "../../courgette/third_party/divsufsort/sssort.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.courgette::PagedArray" = type { i32**, i64, i64 }
%"class.courgette::PagedArray_iterator.0" = type { %"class.courgette::PagedArray"*, i64 }
%struct.anon = type { %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0", i32, i32 }
%struct.anon.1 = type <{ %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0", i32, [4 x i8] }>

@_ZN6divsuf12_GLOBAL__N_18lg_tableE = internal unnamed_addr constant [256 x i32] [i32 -1, i32 0, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7], align 16
@_ZN6divsuf12_GLOBAL__N_19sqq_tableE = internal unnamed_addr constant [256 x i32] [i32 0, i32 16, i32 22, i32 27, i32 32, i32 35, i32 39, i32 42, i32 45, i32 48, i32 50, i32 53, i32 55, i32 57, i32 59, i32 61, i32 64, i32 65, i32 67, i32 69, i32 71, i32 73, i32 75, i32 76, i32 78, i32 80, i32 81, i32 83, i32 84, i32 86, i32 87, i32 89, i32 90, i32 91, i32 93, i32 94, i32 96, i32 97, i32 98, i32 99, i32 101, i32 102, i32 103, i32 104, i32 106, i32 107, i32 108, i32 109, i32 110, i32 112, i32 113, i32 114, i32 115, i32 116, i32 117, i32 118, i32 119, i32 120, i32 121, i32 122, i32 123, i32 124, i32 125, i32 126, i32 128, i32 128, i32 129, i32 130, i32 131, i32 132, i32 133, i32 134, i32 135, i32 136, i32 137, i32 138, i32 139, i32 140, i32 141, i32 142, i32 143, i32 144, i32 144, i32 145, i32 146, i32 147, i32 148, i32 149, i32 150, i32 150, i32 151, i32 152, i32 153, i32 154, i32 155, i32 155, i32 156, i32 157, i32 158, i32 159, i32 160, i32 160, i32 161, i32 162, i32 163, i32 163, i32 164, i32 165, i32 166, i32 167, i32 167, i32 168, i32 169, i32 170, i32 170, i32 171, i32 172, i32 173, i32 173, i32 174, i32 175, i32 176, i32 176, i32 177, i32 178, i32 178, i32 179, i32 180, i32 181, i32 181, i32 182, i32 183, i32 183, i32 184, i32 185, i32 185, i32 186, i32 187, i32 187, i32 188, i32 189, i32 189, i32 190, i32 191, i32 192, i32 192, i32 193, i32 193, i32 194, i32 195, i32 195, i32 196, i32 197, i32 197, i32 198, i32 199, i32 199, i32 200, i32 201, i32 201, i32 202, i32 203, i32 203, i32 204, i32 204, i32 205, i32 206, i32 206, i32 207, i32 208, i32 208, i32 209, i32 209, i32 210, i32 211, i32 211, i32 212, i32 212, i32 213, i32 214, i32 214, i32 215, i32 215, i32 216, i32 217, i32 217, i32 218, i32 218, i32 219, i32 219, i32 220, i32 221, i32 221, i32 222, i32 222, i32 223, i32 224, i32 224, i32 225, i32 225, i32 226, i32 226, i32 227, i32 227, i32 228, i32 229, i32 229, i32 230, i32 230, i32 231, i32 231, i32 232, i32 232, i32 233, i32 234, i32 234, i32 235, i32 235, i32 236, i32 236, i32 237, i32 237, i32 238, i32 238, i32 239, i32 240, i32 240, i32 241, i32 241, i32 242, i32 242, i32 243, i32 243, i32 244, i32 244, i32 245, i32 245, i32 246, i32 246, i32 247, i32 247, i32 248, i32 248, i32 249, i32 249, i32 250, i32 250, i32 251, i32 251, i32 252, i32 252, i32 253, i32 253, i32 254, i32 254, i32 255], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6divsuf6sssortEPKhN9courgette19PagedArray_iteratorIKNS2_10PagedArrayIiLi18EEEKiEENS3_IS5_iEES9_S9_iiii(i8* readonly, %"class.courgette::PagedArray"*, i64, %"class.courgette::PagedArray"*, i64, %"class.courgette::PagedArray_iterator.0"* nocapture readonly byval(%"class.courgette::PagedArray_iterator.0") align 8, %"class.courgette::PagedArray_iterator.0"* nocapture byval(%"class.courgette::PagedArray_iterator.0") align 8, i32, i32, i32, i32) local_unnamed_addr #0 {
  %12 = alloca %"class.courgette::PagedArray_iterator.0", align 8
  %13 = alloca %"class.courgette::PagedArray_iterator.0", align 8
  %14 = alloca %"class.courgette::PagedArray_iterator.0", align 8
  %15 = alloca %"class.courgette::PagedArray_iterator.0", align 8
  %16 = alloca %"class.courgette::PagedArray_iterator.0", align 8
  %17 = alloca %"class.courgette::PagedArray_iterator.0", align 8
  %18 = alloca %"class.courgette::PagedArray_iterator.0", align 8
  %19 = icmp ne i32 %10, 0
  %20 = zext i1 %19 to i64
  %21 = add i64 %20, %4
  %22 = icmp slt i32 %7, 1024
  br i1 %22, label %26, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %5, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  br label %128

26:                                               ; preds = %11
  %27 = sext i32 %7 to i64
  %28 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %5, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %29, %21
  %31 = icmp sgt i64 %30, %27
  br i1 %31, label %32, label %128

32:                                               ; preds = %26
  %33 = trunc i64 %30 to i32
  %34 = icmp sgt i32 %33, 1048575
  br i1 %34, label %116, label %35

35:                                               ; preds = %32
  %36 = icmp ugt i32 %33, 65535
  br i1 %36, label %37, label %51

37:                                               ; preds = %35
  %38 = icmp ugt i32 %33, 16777215
  br i1 %38, label %39, label %45

39:                                               ; preds = %37
  %40 = lshr i64 %30, 24
  %41 = and i64 %40, 255
  %42 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, 24
  br label %64

45:                                               ; preds = %37
  %46 = lshr i64 %30, 16
  %47 = and i64 %46, 255
  %48 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %49, 16
  br label %64

51:                                               ; preds = %35
  %52 = and i32 %33, 65280
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %51
  %55 = lshr i64 %30, 8
  %56 = and i64 %55, 255
  %57 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, 8
  br label %64

60:                                               ; preds = %51
  %61 = and i64 %30, 255
  %62 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4
  br label %64

64:                                               ; preds = %60, %54, %45, %39
  %65 = phi i32 [ %44, %39 ], [ %50, %45 ], [ %59, %54 ], [ %63, %60 ]
  %66 = icmp sgt i32 %65, 15
  br i1 %66, label %67, label %90

67:                                               ; preds = %64
  %68 = add nsw i32 %65, -6
  %69 = and i32 %65, 1
  %70 = sub nuw nsw i32 %68, %69
  %71 = ashr i32 %33, %70
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_19sqq_tableE, i64 0, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = lshr i32 %65, 1
  %76 = add nsw i32 %75, -7
  %77 = shl i32 %74, %76
  %78 = icmp sgt i32 %65, 23
  br i1 %78, label %79, label %84

79:                                               ; preds = %67
  %80 = add nsw i32 %77, 1
  %81 = sdiv i32 %33, %77
  %82 = add nsw i32 %80, %81
  %83 = ashr i32 %82, 1
  br label %84

84:                                               ; preds = %79, %67
  %85 = phi i32 [ %83, %79 ], [ %77, %67 ]
  %86 = add nsw i32 %85, 1
  %87 = sdiv i32 %33, %85
  %88 = add nsw i32 %86, %87
  %89 = ashr i32 %88, 1
  br label %110

90:                                               ; preds = %64
  %91 = icmp sgt i32 %65, 7
  br i1 %91, label %92, label %104

92:                                               ; preds = %90
  %93 = add nsw i32 %65, -6
  %94 = and i32 %65, 1
  %95 = sub nuw nsw i32 %93, %94
  %96 = ashr i32 %33, %95
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_19sqq_tableE, i64 0, i64 %97
  %99 = load i32, i32* %98, align 4
  %100 = lshr i32 %65, 1
  %101 = sub nuw nsw i32 7, %100
  %102 = ashr i32 %99, %101
  %103 = add nsw i32 %102, 1
  br label %110

104:                                              ; preds = %90
  %105 = shl i64 %30, 32
  %106 = ashr exact i64 %105, 32
  %107 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_19sqq_tableE, i64 0, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = ashr i32 %108, 4
  br label %116

110:                                              ; preds = %92, %84
  %111 = phi i32 [ %89, %84 ], [ %103, %92 ]
  %112 = mul nsw i32 %111, %111
  %113 = icmp sgt i32 %112, %33
  %114 = zext i1 %113 to i32
  %115 = sub i32 %111, %114
  br label %116

116:                                              ; preds = %32, %104, %110
  %117 = phi i32 [ %115, %110 ], [ %109, %104 ], [ 1024, %32 ]
  %118 = icmp sgt i32 %117, %7
  br i1 %118, label %119, label %128

119:                                              ; preds = %116
  %120 = icmp slt i32 %117, 1024
  %121 = select i1 %120, i32 %117, i32 1024
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %5, i64 0, i32 0
  %124 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %123, align 8
  %125 = sub i64 %29, %122
  %126 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %6, i64 0, i32 0
  store %"class.courgette::PagedArray"* %124, %"class.courgette::PagedArray"** %126, align 8
  %127 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %6, i64 0, i32 1
  store i64 %125, i64* %127, align 8
  br label %132

128:                                              ; preds = %23, %116, %26
  %129 = phi i64 [ %25, %23 ], [ %29, %116 ], [ %29, %26 ]
  %130 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %5, i64 0, i32 0
  %131 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %130, align 8
  br label %132

132:                                              ; preds = %128, %119
  %133 = phi i64 [ %29, %119 ], [ %129, %128 ]
  %134 = phi i64 [ %125, %119 ], [ %129, %128 ]
  %135 = phi %"class.courgette::PagedArray"* [ %124, %119 ], [ %131, %128 ]
  %136 = phi i32 [ %121, %119 ], [ 0, %128 ]
  %137 = phi i32 [ %121, %119 ], [ %7, %128 ]
  %138 = sub i64 %134, %21
  %139 = icmp sgt i64 %138, 1024
  br i1 %139, label %140, label %180

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %12, i64 0, i32 0
  %142 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %12, i64 0, i32 1
  %143 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %6, i64 0, i32 0
  %144 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %143, align 8
  %145 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %6, i64 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %13, i64 0, i32 0
  %148 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %13, i64 0, i32 1
  %149 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %14, i64 0, i32 0
  %150 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %14, i64 0, i32 1
  %151 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %15, i64 0, i32 0
  %152 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %15, i64 0, i32 1
  br label %153

153:                                              ; preds = %140, %176
  %154 = phi i32 [ 0, %140 ], [ %177, %176 ]
  %155 = phi i64 [ %21, %140 ], [ %156, %176 ]
  %156 = add i64 %155, 1024
  store %"class.courgette::PagedArray"* %3, %"class.courgette::PagedArray"** %141, align 8
  store i64 %156, i64* %142, align 8
  tail call fastcc void @_ZN6divsuf12_GLOBAL__N_113ss_mintrosortEPKhN9courgette19PagedArray_iteratorIKNS3_10PagedArrayIiLi18EEEKiEENS4_IS6_iEESA_i(i8* %0, %"class.courgette::PagedArray"* %1, i64 %2, %"class.courgette::PagedArray"* %3, i64 %155, %"class.courgette::PagedArray_iterator.0"* nonnull byval(%"class.courgette::PagedArray_iterator.0") align 8 %12, i32 %8)
  %157 = sub i64 %133, %156
  %158 = trunc i64 %157 to i32
  %159 = icmp slt i32 %137, %158
  %160 = select i1 %159, %"class.courgette::PagedArray"* %3, %"class.courgette::PagedArray"* %144
  %161 = select i1 %159, i64 %156, i64 %146
  %162 = select i1 %159, i32 %158, i32 %137
  %163 = and i32 %154, 1
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %176, label %165

165:                                              ; preds = %153, %165
  %166 = phi i32 [ %173, %165 ], [ %154, %153 ]
  %167 = phi i32 [ %172, %165 ], [ 1024, %153 ]
  %168 = phi i64 [ %170, %165 ], [ %155, %153 ]
  %169 = sext i32 %167 to i64
  %170 = sub i64 %168, %169
  store %"class.courgette::PagedArray"* %3, %"class.courgette::PagedArray"** %147, align 8
  store i64 %168, i64* %148, align 8
  %171 = add i64 %168, %169
  store %"class.courgette::PagedArray"* %3, %"class.courgette::PagedArray"** %149, align 8
  store i64 %171, i64* %150, align 8
  store %"class.courgette::PagedArray"* %160, %"class.courgette::PagedArray"** %151, align 8
  store i64 %161, i64* %152, align 8
  tail call fastcc void @_ZN6divsuf12_GLOBAL__N_112ss_swapmergeEPKhN9courgette19PagedArray_iteratorIKNS3_10PagedArrayIiLi18EEEKiEENS4_IS6_iEESA_SA_SA_ii(i8* %0, %"class.courgette::PagedArray"* %1, i64 %2, %"class.courgette::PagedArray"* %3, i64 %170, %"class.courgette::PagedArray_iterator.0"* nonnull byval(%"class.courgette::PagedArray_iterator.0") align 8 %13, %"class.courgette::PagedArray_iterator.0"* nonnull byval(%"class.courgette::PagedArray_iterator.0") align 8 %14, %"class.courgette::PagedArray_iterator.0"* nonnull byval(%"class.courgette::PagedArray_iterator.0") align 8 %15, i32 %162, i32 %8)
  %172 = shl i32 %167, 1
  %173 = ashr i32 %166, 1
  %174 = and i32 %166, 2
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %165

176:                                              ; preds = %165, %153
  %177 = add nuw nsw i32 %154, 1
  %178 = sub i64 %134, %156
  %179 = icmp sgt i64 %178, 1024
  br i1 %179, label %153, label %180

180:                                              ; preds = %176, %132
  %181 = phi i64 [ %21, %132 ], [ %156, %176 ]
  %182 = phi i32 [ 0, %132 ], [ %177, %176 ]
  %183 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %16, i64 0, i32 0
  store %"class.courgette::PagedArray"* %135, %"class.courgette::PagedArray"** %183, align 8
  %184 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %16, i64 0, i32 1
  store i64 %134, i64* %184, align 8
  tail call fastcc void @_ZN6divsuf12_GLOBAL__N_113ss_mintrosortEPKhN9courgette19PagedArray_iteratorIKNS3_10PagedArrayIiLi18EEEKiEENS4_IS6_iEESA_i(i8* %0, %"class.courgette::PagedArray"* %1, i64 %2, %"class.courgette::PagedArray"* %3, i64 %181, %"class.courgette::PagedArray_iterator.0"* nonnull byval(%"class.courgette::PagedArray_iterator.0") align 8 %16, i32 %8)
  %185 = icmp eq i32 %182, 0
  br i1 %185, label %205, label %186

186:                                              ; preds = %180
  %187 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %17, i64 0, i32 0
  %188 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %17, i64 0, i32 1
  %189 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %18, i64 0, i32 0
  %190 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %18, i64 0, i32 1
  br label %191

191:                                              ; preds = %186, %200
  %192 = phi i32 [ 1024, %186 ], [ %202, %200 ]
  %193 = phi i32 [ %182, %186 ], [ %203, %200 ]
  %194 = phi i64 [ %181, %186 ], [ %201, %200 ]
  %195 = and i32 %193, 1
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %191
  %198 = sext i32 %192 to i64
  %199 = sub i64 %194, %198
  store %"class.courgette::PagedArray"* %3, %"class.courgette::PagedArray"** %187, align 8
  store i64 %194, i64* %188, align 8
  store %"class.courgette::PagedArray"* %135, %"class.courgette::PagedArray"** %189, align 8
  store i64 %134, i64* %190, align 8
  tail call fastcc void @_ZN6divsuf12_GLOBAL__N_112ss_swapmergeEPKhN9courgette19PagedArray_iteratorIKNS3_10PagedArrayIiLi18EEEKiEENS4_IS6_iEESA_SA_SA_ii(i8* %0, %"class.courgette::PagedArray"* %1, i64 %2, %"class.courgette::PagedArray"* %3, i64 %199, %"class.courgette::PagedArray_iterator.0"* nonnull byval(%"class.courgette::PagedArray_iterator.0") align 8 %17, %"class.courgette::PagedArray_iterator.0"* nonnull byval(%"class.courgette::PagedArray_iterator.0") align 8 %18, %"class.courgette::PagedArray_iterator.0"* nonnull byval(%"class.courgette::PagedArray_iterator.0") align 8 %6, i32 %137, i32 %8)
  br label %200

200:                                              ; preds = %191, %197
  %201 = phi i64 [ %194, %191 ], [ %199, %197 ]
  %202 = shl i32 %192, 1
  %203 = ashr i32 %193, 1
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %191

205:                                              ; preds = %200, %180
  %206 = icmp eq i32 %136, 0
  br i1 %206, label %546, label %207

207:                                              ; preds = %205
  tail call fastcc void @_ZN6divsuf12_GLOBAL__N_113ss_mintrosortEPKhN9courgette19PagedArray_iteratorIKNS3_10PagedArrayIiLi18EEEKiEENS4_IS6_iEESA_i(i8* %0, %"class.courgette::PagedArray"* %1, i64 %2, %"class.courgette::PagedArray"* %135, i64 %134, %"class.courgette::PagedArray_iterator.0"* nonnull byval(%"class.courgette::PagedArray_iterator.0") align 8 %5, i32 %8)
  %208 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %3, i64 0, i32 0
  %209 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1, i64 0, i32 0
  %210 = sext i32 %8 to i64
  %211 = getelementptr inbounds i8, i8* %0, i64 %210
  %212 = getelementptr inbounds i8, i8* %0, i64 2
  %213 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %135, i64 0, i32 0
  br label %214

214:                                              ; preds = %541, %207
  %215 = phi %"class.courgette::PagedArray"* [ %135, %207 ], [ %525, %541 ]
  %216 = phi i64 [ %134, %207 ], [ %527, %541 ]
  %217 = phi i64 [ %133, %207 ], [ %542, %541 ]
  %218 = add i64 %217, -1
  %219 = lshr i64 %218, 18
  %220 = and i64 %218, 262143
  %221 = load i32**, i32*** %213, align 8
  %222 = getelementptr inbounds i32*, i32** %221, i64 %219
  %223 = load i32*, i32** %222, align 8
  %224 = getelementptr inbounds i32, i32* %223, i64 %220
  %225 = load i32, i32* %224, align 4
  %226 = ashr i32 %225, 31
  %227 = xor i32 %226, %225
  %228 = sext i32 %227 to i64
  %229 = add i64 %228, %2
  %230 = sub i64 %216, %21
  %231 = trunc i64 %230 to i32
  %232 = icmp sgt i32 %231, 0
  br i1 %232, label %233, label %332

233:                                              ; preds = %214
  %234 = load i32**, i32*** %208, align 8
  %235 = load i32**, i32*** %209, align 8
  %236 = lshr i64 %229, 18
  %237 = and i64 %229, 262143
  %238 = getelementptr inbounds i32*, i32** %235, i64 %236
  %239 = load i32*, i32** %238, align 8
  %240 = getelementptr inbounds i32, i32* %239, i64 %237
  %241 = load i32, i32* %240, align 4
  %242 = add i64 %229, 1
  %243 = lshr i64 %242, 18
  %244 = and i64 %242, 262143
  %245 = getelementptr inbounds i32*, i32** %235, i64 %243
  %246 = load i32*, i32** %245, align 8
  %247 = getelementptr inbounds i32, i32* %246, i64 %244
  %248 = load i32, i32* %247, align 4
  %249 = sext i32 %241 to i64
  %250 = getelementptr inbounds i8, i8* %211, i64 %249
  %251 = sext i32 %248 to i64
  %252 = getelementptr inbounds i8, i8* %212, i64 %251
  %253 = icmp ult i8* %250, %252
  br label %254

254:                                              ; preds = %327, %233
  %255 = phi i32 [ %231, %233 ], [ %330, %327 ]
  %256 = phi i32 [ -1, %233 ], [ %329, %327 ]
  %257 = phi i64 [ %21, %233 ], [ %328, %327 ]
  %258 = lshr i32 %255, 1
  %259 = zext i32 %258 to i64
  %260 = add i64 %257, %259
  %261 = lshr i64 %260, 18
  %262 = and i64 %260, 262143
  %263 = getelementptr inbounds i32*, i32** %234, i64 %261
  %264 = load i32*, i32** %263, align 8
  %265 = getelementptr inbounds i32, i32* %264, i64 %262
  %266 = load i32, i32* %265, align 4
  %267 = ashr i32 %266, 31
  %268 = xor i32 %267, %266
  %269 = sext i32 %268 to i64
  %270 = add i64 %269, %2
  %271 = lshr i64 %270, 18
  %272 = and i64 %270, 262143
  %273 = getelementptr inbounds i32*, i32** %235, i64 %271
  %274 = load i32*, i32** %273, align 8
  %275 = getelementptr inbounds i32, i32* %274, i64 %272
  %276 = load i32, i32* %275, align 4
  %277 = add i64 %270, 1
  %278 = lshr i64 %277, 18
  %279 = and i64 %277, 262143
  %280 = getelementptr inbounds i32*, i32** %235, i64 %278
  %281 = load i32*, i32** %280, align 8
  %282 = getelementptr inbounds i32, i32* %281, i64 %279
  %283 = load i32, i32* %282, align 4
  %284 = sext i32 %276 to i64
  %285 = getelementptr inbounds i8, i8* %211, i64 %284
  %286 = sext i32 %283 to i64
  %287 = getelementptr inbounds i8, i8* %212, i64 %286
  %288 = icmp ult i8* %285, %287
  %289 = and i1 %253, %288
  br i1 %289, label %290, label %302

290:                                              ; preds = %254, %296
  %291 = phi i8* [ %298, %296 ], [ %250, %254 ]
  %292 = phi i8* [ %297, %296 ], [ %285, %254 ]
  %293 = load i8, i8* %292, align 1
  %294 = load i8, i8* %291, align 1
  %295 = icmp eq i8 %293, %294
  br i1 %295, label %296, label %311

296:                                              ; preds = %290
  %297 = getelementptr inbounds i8, i8* %292, i64 1
  %298 = getelementptr inbounds i8, i8* %291, i64 1
  %299 = icmp ult i8* %297, %287
  %300 = icmp ult i8* %298, %252
  %301 = and i1 %300, %299
  br i1 %301, label %290, label %302

302:                                              ; preds = %296, %254
  %303 = phi i8* [ %285, %254 ], [ %297, %296 ]
  %304 = phi i8* [ %250, %254 ], [ %298, %296 ]
  %305 = phi i1 [ %288, %254 ], [ %299, %296 ]
  %306 = phi i1 [ %253, %254 ], [ %300, %296 ]
  br i1 %305, label %307, label %317

307:                                              ; preds = %302
  br i1 %306, label %308, label %327

308:                                              ; preds = %307
  %309 = load i8, i8* %303, align 1
  %310 = load i8, i8* %304, align 1
  br label %311

311:                                              ; preds = %290, %308
  %312 = phi i8 [ %310, %308 ], [ %294, %290 ]
  %313 = phi i8 [ %309, %308 ], [ %293, %290 ]
  %314 = zext i8 %313 to i32
  %315 = zext i8 %312 to i32
  %316 = sub nsw i32 %314, %315
  br label %319

317:                                              ; preds = %302
  %318 = sext i1 %306 to i32
  br label %319

319:                                              ; preds = %317, %311
  %320 = phi i32 [ %318, %317 ], [ %316, %311 ]
  %321 = icmp slt i32 %320, 0
  br i1 %321, label %322, label %327

322:                                              ; preds = %319
  %323 = add i64 %260, 1
  %324 = and i32 %255, 1
  %325 = xor i32 %324, 1
  %326 = sub nsw i32 %258, %325
  br label %327

327:                                              ; preds = %322, %319, %307
  %328 = phi i64 [ %323, %322 ], [ %257, %319 ], [ %257, %307 ]
  %329 = phi i32 [ %256, %322 ], [ %320, %319 ], [ 1, %307 ]
  %330 = phi i32 [ %326, %322 ], [ %258, %319 ], [ %258, %307 ]
  %331 = icmp sgt i32 %330, 0
  br i1 %331, label %254, label %332

332:                                              ; preds = %327, %214
  %333 = phi i64 [ %21, %214 ], [ %328, %327 ]
  %334 = phi i32 [ -1, %214 ], [ %329, %327 ]
  %335 = icmp ugt i64 %216, %333
  br i1 %335, label %336, label %524

336:                                              ; preds = %332
  %337 = icmp eq i32 %334, 0
  br i1 %337, label %338, label %347

338:                                              ; preds = %336
  %339 = lshr i64 %333, 18
  %340 = and i64 %333, 262143
  %341 = load i32**, i32*** %208, align 8
  %342 = getelementptr inbounds i32*, i32** %341, i64 %339
  %343 = load i32*, i32** %342, align 8
  %344 = getelementptr inbounds i32, i32* %343, i64 %340
  %345 = load i32, i32* %344, align 4
  %346 = xor i32 %345, -1
  store i32 %346, i32* %344, align 4
  br label %347

347:                                              ; preds = %338, %336
  %348 = sub i64 %216, %333
  %349 = trunc i64 %348 to i32
  %350 = sub i64 %217, %216
  %351 = trunc i64 %350 to i32
  %352 = icmp sgt i32 %349, 0
  %353 = icmp sgt i32 %351, 0
  %354 = and i1 %353, %352
  br i1 %354, label %355, label %519

355:                                              ; preds = %347
  %356 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %215, i64 0, i32 0
  %357 = add i64 %216, -1
  br label %358

358:                                              ; preds = %511, %355
  %359 = phi i32 [ %349, %355 ], [ %515, %511 ]
  %360 = phi i32 [ %351, %355 ], [ %514, %511 ]
  %361 = phi i64 [ %333, %355 ], [ %513, %511 ]
  %362 = phi i64 [ %217, %355 ], [ %512, %511 ]
  %363 = icmp eq i32 %359, %360
  br i1 %363, label %364, label %390

364:                                              ; preds = %358, %364
  %365 = phi i32 [ %386, %364 ], [ %359, %358 ]
  %366 = phi i64 [ %387, %364 ], [ %361, %358 ]
  %367 = phi i64 [ %388, %364 ], [ %216, %358 ]
  %368 = lshr i64 %366, 18
  %369 = and i64 %366, 262143
  %370 = load i32**, i32*** %208, align 8
  %371 = getelementptr inbounds i32*, i32** %370, i64 %368
  %372 = load i32*, i32** %371, align 8
  %373 = getelementptr inbounds i32, i32* %372, i64 %369
  %374 = load i32, i32* %373, align 4
  %375 = lshr i64 %367, 18
  %376 = and i64 %367, 262143
  %377 = load i32**, i32*** %356, align 8
  %378 = getelementptr inbounds i32*, i32** %377, i64 %375
  %379 = load i32*, i32** %378, align 8
  %380 = getelementptr inbounds i32, i32* %379, i64 %376
  %381 = load i32, i32* %380, align 4
  store i32 %381, i32* %373, align 4
  %382 = load i32**, i32*** %356, align 8
  %383 = getelementptr inbounds i32*, i32** %382, i64 %375
  %384 = load i32*, i32** %383, align 8
  %385 = getelementptr inbounds i32, i32* %384, i64 %376
  store i32 %374, i32* %385, align 4
  %386 = add nsw i32 %365, -1
  %387 = add i64 %366, 1
  %388 = add i64 %367, 1
  %389 = icmp sgt i32 %386, 0
  br i1 %389, label %364, label %519

390:                                              ; preds = %358
  %391 = icmp slt i32 %359, %360
  br i1 %391, label %392, label %452

392:                                              ; preds = %390
  %393 = add i64 %362, -1
  %394 = lshr i64 %393, 18
  %395 = and i64 %393, 262143
  %396 = load i32**, i32*** %213, align 8
  %397 = getelementptr inbounds i32*, i32** %396, i64 %394
  %398 = load i32*, i32** %397, align 8
  %399 = getelementptr inbounds i32, i32* %398, i64 %395
  %400 = xor i32 %359, -1
  br label %401

401:                                              ; preds = %444, %392
  %402 = phi i32** [ %448, %444 ], [ %396, %392 ]
  %403 = phi i64 [ %445, %444 ], [ %393, %392 ]
  %404 = phi i32 [ %442, %444 ], [ %360, %392 ]
  %405 = phi i32* [ %451, %444 ], [ %399, %392 ]
  %406 = load i32, i32* %405, align 4
  br label %407

407:                                              ; preds = %401, %407
  %408 = phi i32** [ %437, %407 ], [ %402, %401 ]
  %409 = phi i64 [ %431, %407 ], [ %357, %401 ]
  %410 = phi i64 [ %418, %407 ], [ %403, %401 ]
  %411 = lshr i64 %409, 18
  %412 = and i64 %409, 262143
  %413 = load i32**, i32*** %356, align 8
  %414 = getelementptr inbounds i32*, i32** %413, i64 %411
  %415 = load i32*, i32** %414, align 8
  %416 = getelementptr inbounds i32, i32* %415, i64 %412
  %417 = load i32, i32* %416, align 4
  %418 = add i64 %410, -1
  %419 = lshr i64 %410, 18
  %420 = and i64 %410, 262143
  %421 = getelementptr inbounds i32*, i32** %408, i64 %419
  %422 = load i32*, i32** %421, align 8
  %423 = getelementptr inbounds i32, i32* %422, i64 %420
  store i32 %417, i32* %423, align 4
  %424 = lshr i64 %418, 18
  %425 = and i64 %418, 262143
  %426 = load i32**, i32*** %213, align 8
  %427 = getelementptr inbounds i32*, i32** %426, i64 %424
  %428 = load i32*, i32** %427, align 8
  %429 = getelementptr inbounds i32, i32* %428, i64 %425
  %430 = load i32, i32* %429, align 4
  %431 = add i64 %409, -1
  %432 = load i32**, i32*** %356, align 8
  %433 = getelementptr inbounds i32*, i32** %432, i64 %411
  %434 = load i32*, i32** %433, align 8
  %435 = getelementptr inbounds i32, i32* %434, i64 %412
  store i32 %430, i32* %435, align 4
  %436 = icmp ult i64 %431, %361
  %437 = load i32**, i32*** %213, align 8
  br i1 %436, label %438, label %407

438:                                              ; preds = %407
  %439 = getelementptr inbounds i32*, i32** %437, i64 %424
  %440 = load i32*, i32** %439, align 8
  %441 = getelementptr inbounds i32, i32* %440, i64 %425
  store i32 %406, i32* %441, align 4
  %442 = add i32 %404, %400
  %443 = icmp sgt i32 %442, %359
  br i1 %443, label %444, label %511

444:                                              ; preds = %438
  %445 = add i64 %410, -2
  %446 = lshr i64 %445, 18
  %447 = and i64 %445, 262143
  %448 = load i32**, i32*** %213, align 8
  %449 = getelementptr inbounds i32*, i32** %448, i64 %446
  %450 = load i32*, i32** %449, align 8
  %451 = getelementptr inbounds i32, i32* %450, i64 %447
  br label %401

452:                                              ; preds = %390
  %453 = lshr i64 %361, 18
  %454 = and i64 %361, 262143
  %455 = load i32**, i32*** %208, align 8
  %456 = getelementptr inbounds i32*, i32** %455, i64 %453
  %457 = load i32*, i32** %456, align 8
  %458 = getelementptr inbounds i32, i32* %457, i64 %454
  %459 = xor i32 %360, -1
  br label %460

460:                                              ; preds = %504, %452
  %461 = phi i32** [ %507, %504 ], [ %455, %452 ]
  %462 = phi i64 [ %501, %504 ], [ %361, %452 ]
  %463 = phi i32 [ %502, %504 ], [ %359, %452 ]
  %464 = phi i32* [ %510, %504 ], [ %458, %452 ]
  %465 = load i32, i32* %464, align 4
  br label %466

466:                                              ; preds = %460, %466
  %467 = phi i32** [ %496, %466 ], [ %461, %460 ]
  %468 = phi i64 [ %490, %466 ], [ %216, %460 ]
  %469 = phi i64 [ %477, %466 ], [ %462, %460 ]
  %470 = lshr i64 %468, 18
  %471 = and i64 %468, 262143
  %472 = load i32**, i32*** %356, align 8
  %473 = getelementptr inbounds i32*, i32** %472, i64 %470
  %474 = load i32*, i32** %473, align 8
  %475 = getelementptr inbounds i32, i32* %474, i64 %471
  %476 = load i32, i32* %475, align 4
  %477 = add i64 %469, 1
  %478 = lshr i64 %469, 18
  %479 = and i64 %469, 262143
  %480 = getelementptr inbounds i32*, i32** %467, i64 %478
  %481 = load i32*, i32** %480, align 8
  %482 = getelementptr inbounds i32, i32* %481, i64 %479
  store i32 %476, i32* %482, align 4
  %483 = lshr i64 %477, 18
  %484 = and i64 %477, 262143
  %485 = load i32**, i32*** %208, align 8
  %486 = getelementptr inbounds i32*, i32** %485, i64 %483
  %487 = load i32*, i32** %486, align 8
  %488 = getelementptr inbounds i32, i32* %487, i64 %484
  %489 = load i32, i32* %488, align 4
  %490 = add i64 %468, 1
  %491 = load i32**, i32*** %356, align 8
  %492 = getelementptr inbounds i32*, i32** %491, i64 %470
  %493 = load i32*, i32** %492, align 8
  %494 = getelementptr inbounds i32, i32* %493, i64 %471
  store i32 %489, i32* %494, align 4
  %495 = icmp ugt i64 %362, %490
  %496 = load i32**, i32*** %208, align 8
  br i1 %495, label %466, label %497

497:                                              ; preds = %466
  %498 = getelementptr inbounds i32*, i32** %496, i64 %483
  %499 = load i32*, i32** %498, align 8
  %500 = getelementptr inbounds i32, i32* %499, i64 %484
  store i32 %465, i32* %500, align 4
  %501 = add i64 %469, 2
  %502 = add i32 %463, %459
  %503 = icmp sgt i32 %502, %360
  br i1 %503, label %504, label %511

504:                                              ; preds = %497
  %505 = lshr i64 %501, 18
  %506 = and i64 %501, 262143
  %507 = load i32**, i32*** %208, align 8
  %508 = getelementptr inbounds i32*, i32** %507, i64 %505
  %509 = load i32*, i32** %508, align 8
  %510 = getelementptr inbounds i32, i32* %509, i64 %506
  br label %460

511:                                              ; preds = %497, %438
  %512 = phi i64 [ %418, %438 ], [ %362, %497 ]
  %513 = phi i64 [ %361, %438 ], [ %501, %497 ]
  %514 = phi i32 [ %442, %438 ], [ %360, %497 ]
  %515 = phi i32 [ %359, %438 ], [ %502, %497 ]
  %516 = icmp sgt i32 %515, 0
  %517 = icmp sgt i32 %514, 0
  %518 = and i1 %517, %516
  br i1 %518, label %358, label %519

519:                                              ; preds = %511, %364, %347
  %520 = icmp eq i64 %333, %21
  br i1 %520, label %546, label %521

521:                                              ; preds = %519
  %522 = xor i64 %348, -1
  %523 = add i64 %217, %522
  br label %524

524:                                              ; preds = %521, %332
  %525 = phi %"class.courgette::PagedArray"* [ %3, %521 ], [ %215, %332 ]
  %526 = phi i64 [ %523, %521 ], [ %218, %332 ]
  %527 = phi i64 [ %333, %521 ], [ %216, %332 ]
  %528 = icmp sgt i32 %225, -1
  br i1 %528, label %541, label %529

529:                                              ; preds = %524
  %530 = load i32**, i32*** %213, align 8
  br label %531

531:                                              ; preds = %531, %529
  %532 = phi i64 [ %526, %529 ], [ %533, %531 ]
  %533 = add i64 %532, -1
  %534 = lshr i64 %533, 18
  %535 = and i64 %533, 262143
  %536 = getelementptr inbounds i32*, i32** %530, i64 %534
  %537 = load i32*, i32** %536, align 8
  %538 = getelementptr inbounds i32, i32* %537, i64 %535
  %539 = load i32, i32* %538, align 4
  %540 = icmp slt i32 %539, 0
  br i1 %540, label %531, label %541

541:                                              ; preds = %531, %524
  %542 = phi i64 [ %526, %524 ], [ %533, %531 ]
  %543 = icmp eq i64 %527, %542
  %544 = icmp eq %"class.courgette::PagedArray"* %525, %135
  %545 = and i1 %544, %543
  br i1 %545, label %546, label %214

546:                                              ; preds = %541, %519, %205
  br i1 %19, label %547, label %664

547:                                              ; preds = %546
  %548 = add i64 %21, -1
  %549 = lshr i64 %548, 18
  %550 = and i64 %548, 262143
  %551 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %3, i64 0, i32 0
  %552 = load i32**, i32*** %551, align 8
  %553 = getelementptr inbounds i32*, i32** %552, i64 %549
  %554 = load i32*, i32** %553, align 8
  %555 = getelementptr inbounds i32, i32* %554, i64 %550
  %556 = load i32, i32* %555, align 4
  %557 = icmp ult i64 %21, %133
  br i1 %557, label %558, label %657

558:                                              ; preds = %547
  %559 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1, i64 0, i32 0
  %560 = add nsw i32 %9, -2
  %561 = sext i32 %8 to i64
  %562 = getelementptr inbounds i8, i8* %0, i64 %561
  %563 = sext i32 %560 to i64
  %564 = getelementptr inbounds i8, i8* %0, i64 2
  %565 = getelementptr inbounds i8, i8* %564, i64 %563
  br label %566

566:                                              ; preds = %641, %558
  %567 = phi i32** [ %552, %558 ], [ %650, %641 ]
  %568 = phi i64 [ %21, %558 ], [ %648, %641 ]
  %569 = lshr i64 %568, 18
  %570 = and i64 %568, 262143
  %571 = getelementptr inbounds i32*, i32** %567, i64 %569
  %572 = load i32*, i32** %571, align 8
  %573 = getelementptr inbounds i32, i32* %572, i64 %570
  %574 = load i32, i32* %573, align 4
  %575 = icmp slt i32 %574, 0
  br i1 %575, label %641, label %576

576:                                              ; preds = %566
  %577 = getelementptr inbounds i32*, i32** %567, i64 %549
  %578 = load i32*, i32** %577, align 8
  %579 = getelementptr inbounds i32, i32* %578, i64 %550
  %580 = load i32, i32* %579, align 4
  %581 = sext i32 %580 to i64
  %582 = add i64 %581, %2
  %583 = lshr i64 %582, 18
  %584 = and i64 %582, 262143
  %585 = load i32**, i32*** %559, align 8
  %586 = getelementptr inbounds i32*, i32** %585, i64 %583
  %587 = load i32*, i32** %586, align 8
  %588 = getelementptr inbounds i32, i32* %587, i64 %584
  %589 = load i32, i32* %588, align 4
  %590 = sext i32 %574 to i64
  %591 = add i64 %590, %2
  %592 = lshr i64 %591, 18
  %593 = and i64 %591, 262143
  %594 = getelementptr inbounds i32*, i32** %585, i64 %592
  %595 = load i32*, i32** %594, align 8
  %596 = getelementptr inbounds i32, i32* %595, i64 %593
  %597 = load i32, i32* %596, align 4
  %598 = add nuw nsw i32 %574, 1
  %599 = sext i32 %598 to i64
  %600 = add i64 %599, %2
  %601 = lshr i64 %600, 18
  %602 = and i64 %600, 262143
  %603 = getelementptr inbounds i32*, i32** %585, i64 %601
  %604 = load i32*, i32** %603, align 8
  %605 = getelementptr inbounds i32, i32* %604, i64 %602
  %606 = load i32, i32* %605, align 4
  %607 = sext i32 %589 to i64
  %608 = getelementptr inbounds i8, i8* %562, i64 %607
  %609 = sext i32 %597 to i64
  %610 = getelementptr inbounds i8, i8* %562, i64 %609
  %611 = sext i32 %606 to i64
  %612 = getelementptr inbounds i8, i8* %564, i64 %611
  %613 = icmp ult i8* %608, %565
  %614 = icmp ult i8* %610, %612
  %615 = and i1 %613, %614
  br i1 %615, label %616, label %628

616:                                              ; preds = %576, %622
  %617 = phi i8* [ %624, %622 ], [ %610, %576 ]
  %618 = phi i8* [ %623, %622 ], [ %608, %576 ]
  %619 = load i8, i8* %618, align 1
  %620 = load i8, i8* %617, align 1
  %621 = icmp eq i8 %619, %620
  br i1 %621, label %622, label %636

622:                                              ; preds = %616
  %623 = getelementptr inbounds i8, i8* %618, i64 1
  %624 = getelementptr inbounds i8, i8* %617, i64 1
  %625 = icmp ult i8* %623, %565
  %626 = icmp ult i8* %624, %612
  %627 = and i1 %626, %625
  br i1 %627, label %616, label %628

628:                                              ; preds = %622, %576
  %629 = phi i8* [ %608, %576 ], [ %623, %622 ]
  %630 = phi i8* [ %610, %576 ], [ %624, %622 ]
  %631 = phi i1 [ %613, %576 ], [ %625, %622 ]
  %632 = phi i1 [ %614, %576 ], [ %626, %622 ]
  br i1 %631, label %633, label %651

633:                                              ; preds = %628
  br i1 %632, label %634, label %641

634:                                              ; preds = %633
  %635 = load i8, i8* %629, align 1
  br label %636

636:                                              ; preds = %616, %634
  %637 = phi i8 [ %635, %634 ], [ %619, %616 ]
  %638 = phi i8* [ %630, %634 ], [ %617, %616 ]
  %639 = load i8, i8* %638, align 1
  %640 = icmp ugt i8 %637, %639
  br i1 %640, label %641, label %651

641:                                              ; preds = %633, %566, %636
  %642 = add i64 %568, -1
  %643 = lshr i64 %642, 18
  %644 = and i64 %642, 262143
  %645 = getelementptr inbounds i32*, i32** %567, i64 %643
  %646 = load i32*, i32** %645, align 8
  %647 = getelementptr inbounds i32, i32* %646, i64 %644
  store i32 %574, i32* %647, align 4
  %648 = add nuw i64 %568, 1
  %649 = icmp ult i64 %648, %133
  %650 = load i32**, i32*** %551, align 8
  br i1 %649, label %566, label %651

651:                                              ; preds = %628, %636, %641
  %652 = phi i32** [ %650, %641 ], [ %567, %636 ], [ %567, %628 ]
  %653 = phi i64 [ %648, %641 ], [ %568, %636 ], [ %568, %628 ]
  %654 = add i64 %653, -1
  %655 = lshr i64 %654, 18
  %656 = and i64 %654, 262143
  br label %657

657:                                              ; preds = %651, %547
  %658 = phi i64 [ %656, %651 ], [ %550, %547 ]
  %659 = phi i64 [ %655, %651 ], [ %549, %547 ]
  %660 = phi i32** [ %652, %651 ], [ %552, %547 ]
  %661 = getelementptr inbounds i32*, i32** %660, i64 %659
  %662 = load i32*, i32** %661, align 8
  %663 = getelementptr inbounds i32, i32* %662, i64 %658
  store i32 %556, i32* %663, align 4
  br label %664

664:                                              ; preds = %657, %546
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6divsuf12_GLOBAL__N_113ss_mintrosortEPKhN9courgette19PagedArray_iteratorIKNS3_10PagedArrayIiLi18EEEKiEENS4_IS6_iEESA_i(i8* readonly, %"class.courgette::PagedArray"*, i64, %"class.courgette::PagedArray"*, i64, %"class.courgette::PagedArray_iterator.0"* byval(%"class.courgette::PagedArray_iterator.0") align 8, i32) unnamed_addr #0 {
  %8 = alloca %"class.courgette::PagedArray_iterator.0", align 8
  %9 = alloca %"class.courgette::PagedArray_iterator.0", align 8
  %10 = alloca [16 x %struct.anon], align 16
  %11 = bitcast [16 x %struct.anon]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 640, i8* nonnull %11) #3
  %12 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 0, i32 2
  %13 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 608, i1 false)
  %14 = bitcast [16 x %struct.anon]* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 32, i1 false) #3
  %15 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 1
  %16 = bitcast %struct.anon* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #3
  %17 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 2
  %18 = bitcast %struct.anon* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %18, i8 0, i64 32, i1 false) #3
  %19 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 3
  %20 = bitcast %struct.anon* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #3
  %21 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 4
  %22 = bitcast %struct.anon* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %22, i8 0, i64 32, i1 false) #3
  %23 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 5
  %24 = bitcast %struct.anon* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #3
  %25 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 6
  %26 = bitcast %struct.anon* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %26, i8 0, i64 32, i1 false) #3
  %27 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 7
  %28 = bitcast %struct.anon* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 32, i1 false) #3
  %29 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 8
  %30 = bitcast %struct.anon* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %30, i8 0, i64 32, i1 false) #3
  %31 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 9
  %32 = bitcast %struct.anon* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 32, i1 false) #3
  %33 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 10
  %34 = bitcast %struct.anon* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %34, i8 0, i64 32, i1 false) #3
  %35 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 11
  %36 = bitcast %struct.anon* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #3
  %37 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 12
  %38 = bitcast %struct.anon* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %38, i8 0, i64 32, i1 false) #3
  %39 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 13
  %40 = bitcast %struct.anon* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 32, i1 false) #3
  %41 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 14
  %42 = bitcast %struct.anon* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %42, i8 0, i64 32, i1 false) #3
  %43 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 15
  %44 = bitcast %struct.anon* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 32, i1 false) #3
  %45 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %5, i64 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %46, %4
  %48 = and i64 %47, 65280
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %7
  %51 = lshr i64 %47, 8
  %52 = and i64 %51, 255
  %53 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = add nsw i32 %54, 8
  br label %60

56:                                               ; preds = %7
  %57 = and i64 %47, 255
  %58 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %57
  %59 = load i32, i32* %58, align 4
  br label %60

60:                                               ; preds = %50, %56
  %61 = phi i32 [ %55, %50 ], [ %59, %56 ]
  %62 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %5, i64 0, i32 0
  %63 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1, i64 0, i32 0
  %64 = getelementptr inbounds i8, i8* %0, i64 2
  %65 = bitcast %"class.courgette::PagedArray_iterator.0"* %5 to i8*
  %66 = bitcast %"class.courgette::PagedArray_iterator.0"* %9 to i8*
  %67 = bitcast %"class.courgette::PagedArray_iterator.0"* %8 to i8*
  %68 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %8, i64 0, i32 0
  %69 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %8, i64 0, i32 1
  %70 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %9, i64 0, i32 0
  %71 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %9, i64 0, i32 1
  %72 = bitcast %"class.courgette::PagedArray_iterator.0"* %8 to i64*
  %73 = bitcast %"class.courgette::PagedArray_iterator.0"* %9 to i64*
  br label %74

74:                                               ; preds = %2198, %60
  %75 = phi i64 [ %46, %60 ], [ %2199, %2198 ]
  %76 = phi i64 [ %4, %60 ], [ %2200, %2198 ]
  %77 = phi %"class.courgette::PagedArray"* [ %3, %60 ], [ %2201, %2198 ]
  %78 = phi i32 [ %61, %60 ], [ %2202, %2198 ]
  %79 = phi i32 [ 0, %60 ], [ %2203, %2198 ]
  %80 = phi i32 [ %6, %60 ], [ %2204, %2198 ]
  %81 = sub i64 %75, %76
  %82 = icmp slt i64 %81, 9
  br i1 %82, label %83, label %262

83:                                               ; preds = %74
  %84 = sext i32 %79 to i64
  br label %85

85:                                               ; preds = %83, %245
  %86 = phi i64 [ %84, %83 ], [ %246, %245 ]
  %87 = phi i64 [ %81, %83 ], [ %256, %245 ]
  %88 = phi i64 [ %75, %83 ], [ %255, %245 ]
  %89 = phi i32 [ %80, %83 ], [ %254, %245 ]
  %90 = phi i64 [ %76, %83 ], [ %250, %245 ]
  %91 = icmp sgt i64 %87, 1
  br i1 %91, label %92, label %242

92:                                               ; preds = %85
  %93 = add i64 %88, -2
  %94 = icmp ult i64 %93, %90
  br i1 %94, label %242, label %95

95:                                               ; preds = %92
  %96 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %62, align 8
  %97 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %96, i64 0, i32 0
  %98 = sext i32 %89 to i64
  %99 = getelementptr inbounds i8, i8* %0, i64 %98
  br label %100

100:                                              ; preds = %232, %95
  %101 = phi i64 [ %93, %95 ], [ %240, %232 ]
  %102 = lshr i64 %101, 18
  %103 = and i64 %101, 262143
  %104 = load i32**, i32*** %97, align 8
  %105 = getelementptr inbounds i32*, i32** %104, i64 %102
  %106 = load i32*, i32** %105, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %103
  %108 = load i32, i32* %107, align 4
  %109 = add i64 %101, 1
  %110 = sext i32 %108 to i64
  %111 = add i64 %110, %2
  %112 = lshr i64 %111, 18
  %113 = and i64 %111, 262143
  %114 = add i64 %111, 1
  %115 = lshr i64 %114, 18
  %116 = and i64 %114, 262143
  br label %117

117:                                              ; preds = %210, %100
  %118 = phi i32** [ %104, %100 ], [ %213, %210 ]
  %119 = phi i64 [ %109, %100 ], [ %208, %210 ]
  %120 = lshr i64 %119, 18
  %121 = and i64 %119, 262143
  %122 = getelementptr inbounds i32*, i32** %118, i64 %120
  %123 = load i32*, i32** %122, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 %121
  %125 = load i32, i32* %124, align 4
  %126 = sext i32 %125 to i64
  %127 = add i64 %126, %2
  %128 = load i32**, i32*** %63, align 8
  %129 = getelementptr inbounds i32*, i32** %128, i64 %112
  %130 = load i32*, i32** %129, align 8
  %131 = getelementptr inbounds i32, i32* %130, i64 %113
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds i32*, i32** %128, i64 %115
  %134 = load i32*, i32** %133, align 8
  %135 = getelementptr inbounds i32, i32* %134, i64 %116
  %136 = load i32, i32* %135, align 4
  %137 = lshr i64 %127, 18
  %138 = and i64 %127, 262143
  %139 = getelementptr inbounds i32*, i32** %128, i64 %137
  %140 = load i32*, i32** %139, align 8
  %141 = getelementptr inbounds i32, i32* %140, i64 %138
  %142 = load i32, i32* %141, align 4
  %143 = add i64 %127, 1
  %144 = lshr i64 %143, 18
  %145 = and i64 %143, 262143
  %146 = getelementptr inbounds i32*, i32** %128, i64 %144
  %147 = load i32*, i32** %146, align 8
  %148 = getelementptr inbounds i32, i32* %147, i64 %145
  %149 = load i32, i32* %148, align 4
  %150 = sext i32 %132 to i64
  %151 = getelementptr inbounds i8, i8* %99, i64 %150
  %152 = sext i32 %142 to i64
  %153 = getelementptr inbounds i8, i8* %99, i64 %152
  %154 = sext i32 %136 to i64
  %155 = getelementptr inbounds i8, i8* %64, i64 %154
  %156 = sext i32 %149 to i64
  %157 = getelementptr inbounds i8, i8* %64, i64 %156
  %158 = icmp ult i8* %151, %155
  %159 = icmp ult i8* %153, %157
  %160 = and i1 %158, %159
  br i1 %160, label %161, label %173

161:                                              ; preds = %117, %167
  %162 = phi i8* [ %169, %167 ], [ %153, %117 ]
  %163 = phi i8* [ %168, %167 ], [ %151, %117 ]
  %164 = load i8, i8* %163, align 1
  %165 = load i8, i8* %162, align 1
  %166 = icmp eq i8 %164, %165
  br i1 %166, label %167, label %184

167:                                              ; preds = %161
  %168 = getelementptr inbounds i8, i8* %163, i64 1
  %169 = getelementptr inbounds i8, i8* %162, i64 1
  %170 = icmp ult i8* %168, %155
  %171 = icmp ult i8* %169, %157
  %172 = and i1 %171, %170
  br i1 %172, label %161, label %173

173:                                              ; preds = %167, %117
  %174 = phi i8* [ %151, %117 ], [ %168, %167 ]
  %175 = phi i8* [ %153, %117 ], [ %169, %167 ]
  %176 = phi i1 [ %158, %117 ], [ %170, %167 ]
  %177 = phi i1 [ %159, %117 ], [ %171, %167 ]
  br i1 %176, label %178, label %182

178:                                              ; preds = %173
  br i1 %177, label %179, label %191

179:                                              ; preds = %178
  %180 = load i8, i8* %174, align 1
  %181 = load i8, i8* %175, align 1
  br label %184

182:                                              ; preds = %173
  %183 = sext i1 %177 to i32
  br label %219

184:                                              ; preds = %161, %179
  %185 = phi i8 [ %181, %179 ], [ %165, %161 ]
  %186 = phi i8 [ %180, %179 ], [ %164, %161 ]
  %187 = zext i8 %186 to i32
  %188 = zext i8 %185 to i32
  %189 = sub nsw i32 %187, %188
  %190 = icmp sgt i32 %189, 0
  br i1 %190, label %191, label %219

191:                                              ; preds = %184, %178
  %192 = phi i32 [ %189, %184 ], [ 1, %178 ]
  br label %193

193:                                              ; preds = %210, %191
  %194 = phi i32** [ %213, %210 ], [ %118, %191 ]
  %195 = phi i64 [ %208, %210 ], [ %119, %191 ]
  %196 = lshr i64 %195, 18
  %197 = and i64 %195, 262143
  %198 = getelementptr inbounds i32*, i32** %194, i64 %196
  %199 = load i32*, i32** %198, align 8
  %200 = getelementptr inbounds i32, i32* %199, i64 %197
  %201 = load i32, i32* %200, align 4
  %202 = add i64 %195, -1
  %203 = lshr i64 %202, 18
  %204 = and i64 %202, 262143
  %205 = getelementptr inbounds i32*, i32** %194, i64 %203
  %206 = load i32*, i32** %205, align 8
  %207 = getelementptr inbounds i32, i32* %206, i64 %204
  store i32 %201, i32* %207, align 4
  %208 = add i64 %195, 1
  %209 = icmp ult i64 %208, %88
  br i1 %209, label %210, label %219

210:                                              ; preds = %193
  %211 = lshr i64 %208, 18
  %212 = and i64 %208, 262143
  %213 = load i32**, i32*** %97, align 8
  %214 = getelementptr inbounds i32*, i32** %213, i64 %211
  %215 = load i32*, i32** %214, align 8
  %216 = getelementptr inbounds i32, i32* %215, i64 %212
  %217 = load i32, i32* %216, align 4
  %218 = icmp slt i32 %217, 0
  br i1 %218, label %193, label %117

219:                                              ; preds = %184, %193, %182
  %220 = phi i32 [ %183, %182 ], [ %192, %193 ], [ %189, %184 ]
  %221 = phi i64 [ %119, %182 ], [ %208, %193 ], [ %119, %184 ]
  %222 = icmp eq i32 %220, 0
  br i1 %222, label %223, label %232

223:                                              ; preds = %219
  %224 = lshr i64 %221, 18
  %225 = and i64 %221, 262143
  %226 = load i32**, i32*** %97, align 8
  %227 = getelementptr inbounds i32*, i32** %226, i64 %224
  %228 = load i32*, i32** %227, align 8
  %229 = getelementptr inbounds i32, i32* %228, i64 %225
  %230 = load i32, i32* %229, align 4
  %231 = xor i32 %230, -1
  store i32 %231, i32* %229, align 4
  br label %232

232:                                              ; preds = %223, %219
  %233 = add i64 %221, -1
  %234 = lshr i64 %233, 18
  %235 = and i64 %233, 262143
  %236 = load i32**, i32*** %97, align 8
  %237 = getelementptr inbounds i32*, i32** %236, i64 %234
  %238 = load i32*, i32** %237, align 8
  %239 = getelementptr inbounds i32, i32* %238, i64 %235
  store i32 %108, i32* %239, align 4
  %240 = add i64 %101, -1
  %241 = icmp ult i64 %240, %90
  br i1 %241, label %242, label %100

242:                                              ; preds = %232, %92, %85
  %243 = icmp eq i64 %86, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %242
  call void @llvm.lifetime.end.p0i8(i64 640, i8* nonnull %11) #3
  ret void

245:                                              ; preds = %242
  %246 = add nsw i64 %86, -1
  %247 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %246, i32 0, i32 0
  %248 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %247, align 8
  %249 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %246, i32 0, i32 1
  %250 = load i64, i64* %249, align 8
  %251 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %246, i32 1
  %252 = bitcast %"class.courgette::PagedArray_iterator.0"* %251 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* align 8 %252, i64 16, i1 false)
  %253 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %246, i32 2
  %254 = load i32, i32* %253, align 8
  %255 = load i64, i64* %45, align 8
  %256 = sub i64 %255, %250
  %257 = icmp slt i64 %256, 9
  br i1 %257, label %85, label %258

258:                                              ; preds = %245
  %259 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %246, i32 3
  %260 = load i32, i32* %259, align 4
  %261 = trunc i64 %246 to i32
  br label %262

262:                                              ; preds = %258, %74
  %263 = phi i64 [ %76, %74 ], [ %250, %258 ]
  %264 = phi %"class.courgette::PagedArray"* [ %77, %74 ], [ %248, %258 ]
  %265 = phi i32 [ %78, %74 ], [ %260, %258 ]
  %266 = phi i32 [ %79, %74 ], [ %261, %258 ]
  %267 = phi i32 [ %80, %74 ], [ %254, %258 ]
  %268 = phi i64 [ %81, %74 ], [ %256, %258 ]
  %269 = sext i32 %267 to i64
  %270 = getelementptr inbounds i8, i8* %0, i64 %269
  %271 = add nsw i32 %265, -1
  %272 = icmp eq i32 %265, 0
  br i1 %272, label %273, label %692

273:                                              ; preds = %262
  %274 = trunc i64 %268 to i32
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %327

277:                                              ; preds = %273
  %278 = add nsw i32 %274, -1
  %279 = sdiv i32 %278, 2
  %280 = sext i32 %279 to i64
  %281 = add i64 %263, %280
  %282 = lshr i64 %281, 18
  %283 = and i64 %281, 262143
  %284 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %264, i64 0, i32 0
  %285 = load i32**, i32*** %284, align 8
  %286 = getelementptr inbounds i32*, i32** %285, i64 %282
  %287 = load i32*, i32** %286, align 8
  %288 = getelementptr inbounds i32, i32* %287, i64 %283
  %289 = load i32, i32* %288, align 4
  %290 = sext i32 %289 to i64
  %291 = add i64 %290, %2
  %292 = lshr i64 %291, 18
  %293 = and i64 %291, 262143
  %294 = load i32**, i32*** %63, align 8
  %295 = getelementptr inbounds i32*, i32** %294, i64 %292
  %296 = load i32*, i32** %295, align 8
  %297 = getelementptr inbounds i32, i32* %296, i64 %293
  %298 = load i32, i32* %297, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds i8, i8* %270, i64 %299
  %301 = load i8, i8* %300, align 1
  %302 = sext i32 %278 to i64
  %303 = add i64 %263, %302
  %304 = lshr i64 %303, 18
  %305 = and i64 %303, 262143
  %306 = getelementptr inbounds i32*, i32** %285, i64 %304
  %307 = load i32*, i32** %306, align 8
  %308 = getelementptr inbounds i32, i32* %307, i64 %305
  %309 = load i32, i32* %308, align 4
  %310 = sext i32 %309 to i64
  %311 = add i64 %310, %2
  %312 = lshr i64 %311, 18
  %313 = and i64 %311, 262143
  %314 = getelementptr inbounds i32*, i32** %294, i64 %312
  %315 = load i32*, i32** %314, align 8
  %316 = getelementptr inbounds i32, i32* %315, i64 %313
  %317 = load i32, i32* %316, align 4
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds i8, i8* %270, i64 %318
  %320 = load i8, i8* %319, align 1
  %321 = icmp ult i8 %301, %320
  br i1 %321, label %322, label %327

322:                                              ; preds = %277
  store i32 %289, i32* %308, align 4
  %323 = load i32**, i32*** %284, align 8
  %324 = getelementptr inbounds i32*, i32** %323, i64 %282
  %325 = load i32*, i32** %324, align 8
  %326 = getelementptr inbounds i32, i32* %325, i64 %283
  store i32 %309, i32* %326, align 4
  br label %327

327:                                              ; preds = %322, %277, %273
  %328 = phi i32 [ %278, %322 ], [ %278, %277 ], [ %274, %273 ]
  %329 = icmp sgt i32 %328, 1
  br i1 %329, label %330, label %444

330:                                              ; preds = %327
  %331 = lshr i32 %328, 1
  %332 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %264, i64 0, i32 0
  %333 = zext i32 %331 to i64
  br label %334

334:                                              ; preds = %436, %330
  %335 = phi i64 [ %333, %330 ], [ %336, %436 ]
  %336 = add nsw i64 %335, -1
  %337 = add i64 %336, %263
  %338 = lshr i64 %337, 18
  %339 = and i64 %337, 262143
  %340 = load i32**, i32*** %332, align 8
  %341 = getelementptr inbounds i32*, i32** %340, i64 %338
  %342 = load i32*, i32** %341, align 8
  %343 = getelementptr inbounds i32, i32* %342, i64 %339
  %344 = load i32, i32* %343, align 4
  %345 = sext i32 %344 to i64
  %346 = add i64 %345, %2
  %347 = lshr i64 %346, 18
  %348 = and i64 %346, 262143
  %349 = load i32**, i32*** %63, align 8
  %350 = getelementptr inbounds i32*, i32** %349, i64 %347
  %351 = load i32*, i32** %350, align 8
  %352 = getelementptr inbounds i32, i32* %351, i64 %348
  %353 = load i32, i32* %352, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds i8, i8* %270, i64 %354
  %356 = load i8, i8* %355, align 1
  %357 = trunc i64 %336 to i32
  %358 = shl nsw i32 %357, 1
  %359 = or i32 %358, 1
  %360 = icmp slt i32 %359, %328
  br i1 %360, label %361, label %436

361:                                              ; preds = %334, %434
  %362 = phi i32** [ %435, %434 ], [ %349, %334 ]
  %363 = phi i32** [ %433, %434 ], [ %340, %334 ]
  %364 = phi i32 [ %431, %434 ], [ %359, %334 ]
  %365 = phi i32 [ %406, %434 ], [ %357, %334 ]
  %366 = add nsw i32 %364, 1
  %367 = sext i32 %364 to i64
  %368 = add i64 %263, %367
  %369 = lshr i64 %368, 18
  %370 = and i64 %368, 262143
  %371 = getelementptr inbounds i32*, i32** %363, i64 %369
  %372 = load i32*, i32** %371, align 8
  %373 = getelementptr inbounds i32, i32* %372, i64 %370
  %374 = load i32, i32* %373, align 4
  %375 = sext i32 %374 to i64
  %376 = add i64 %375, %2
  %377 = lshr i64 %376, 18
  %378 = and i64 %376, 262143
  %379 = getelementptr inbounds i32*, i32** %362, i64 %377
  %380 = load i32*, i32** %379, align 8
  %381 = getelementptr inbounds i32, i32* %380, i64 %378
  %382 = load i32, i32* %381, align 4
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds i8, i8* %270, i64 %383
  %385 = load i8, i8* %384, align 1
  %386 = sext i32 %366 to i64
  %387 = add i64 %263, %386
  %388 = lshr i64 %387, 18
  %389 = and i64 %387, 262143
  %390 = getelementptr inbounds i32*, i32** %363, i64 %388
  %391 = load i32*, i32** %390, align 8
  %392 = getelementptr inbounds i32, i32* %391, i64 %389
  %393 = load i32, i32* %392, align 4
  %394 = sext i32 %393 to i64
  %395 = add i64 %394, %2
  %396 = lshr i64 %395, 18
  %397 = and i64 %395, 262143
  %398 = getelementptr inbounds i32*, i32** %362, i64 %396
  %399 = load i32*, i32** %398, align 8
  %400 = getelementptr inbounds i32, i32* %399, i64 %397
  %401 = load i32, i32* %400, align 4
  %402 = sext i32 %401 to i64
  %403 = getelementptr inbounds i8, i8* %270, i64 %402
  %404 = load i8, i8* %403, align 1
  %405 = icmp ult i8 %385, %404
  %406 = select i1 %405, i32 %366, i32 %364
  %407 = select i1 %405, i8 %404, i8 %385
  %408 = icmp ugt i8 %407, %356
  br i1 %408, label %414, label %409

409:                                              ; preds = %361
  %410 = sext i32 %365 to i64
  %411 = add i64 %263, %410
  %412 = lshr i64 %411, 18
  %413 = and i64 %411, 262143
  br label %436

414:                                              ; preds = %361
  %415 = sext i32 %406 to i64
  %416 = add i64 %263, %415
  %417 = lshr i64 %416, 18
  %418 = and i64 %416, 262143
  %419 = getelementptr inbounds i32*, i32** %363, i64 %417
  %420 = load i32*, i32** %419, align 8
  %421 = getelementptr inbounds i32, i32* %420, i64 %418
  %422 = load i32, i32* %421, align 4
  %423 = sext i32 %365 to i64
  %424 = add i64 %263, %423
  %425 = lshr i64 %424, 18
  %426 = and i64 %424, 262143
  %427 = getelementptr inbounds i32*, i32** %363, i64 %425
  %428 = load i32*, i32** %427, align 8
  %429 = getelementptr inbounds i32, i32* %428, i64 %426
  store i32 %422, i32* %429, align 4
  %430 = shl nsw i32 %406, 1
  %431 = or i32 %430, 1
  %432 = icmp slt i32 %431, %328
  %433 = load i32**, i32*** %332, align 8
  br i1 %432, label %434, label %436

434:                                              ; preds = %414
  %435 = load i32**, i32*** %63, align 8
  br label %361

436:                                              ; preds = %414, %409, %334
  %437 = phi i64 [ %339, %334 ], [ %413, %409 ], [ %418, %414 ]
  %438 = phi i64 [ %338, %334 ], [ %412, %409 ], [ %417, %414 ]
  %439 = phi i32** [ %340, %334 ], [ %363, %409 ], [ %433, %414 ]
  %440 = getelementptr inbounds i32*, i32** %439, i64 %438
  %441 = load i32*, i32** %440, align 8
  %442 = getelementptr inbounds i32, i32* %441, i64 %437
  store i32 %344, i32* %442, align 4
  %443 = icmp sgt i64 %336, 0
  br i1 %443, label %334, label %444

444:                                              ; preds = %436, %327
  br i1 %276, label %445, label %563

445:                                              ; preds = %444
  %446 = lshr i64 %263, 18
  %447 = and i64 %263, 262143
  %448 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %264, i64 0, i32 0
  %449 = load i32**, i32*** %448, align 8
  %450 = getelementptr inbounds i32*, i32** %449, i64 %446
  %451 = load i32*, i32** %450, align 8
  %452 = getelementptr inbounds i32, i32* %451, i64 %447
  %453 = load i32, i32* %452, align 4
  %454 = sext i32 %328 to i64
  %455 = add i64 %263, %454
  %456 = lshr i64 %455, 18
  %457 = and i64 %455, 262143
  %458 = getelementptr inbounds i32*, i32** %449, i64 %456
  %459 = load i32*, i32** %458, align 8
  %460 = getelementptr inbounds i32, i32* %459, i64 %457
  %461 = load i32, i32* %460, align 4
  store i32 %461, i32* %452, align 4
  %462 = load i32**, i32*** %448, align 8
  %463 = getelementptr inbounds i32*, i32** %462, i64 %456
  %464 = load i32*, i32** %463, align 8
  %465 = getelementptr inbounds i32, i32* %464, i64 %457
  store i32 %453, i32* %465, align 4
  %466 = load i32**, i32*** %448, align 8
  %467 = getelementptr inbounds i32*, i32** %466, i64 %446
  %468 = load i32*, i32** %467, align 8
  %469 = getelementptr inbounds i32, i32* %468, i64 %447
  %470 = load i32, i32* %469, align 4
  %471 = sext i32 %470 to i64
  %472 = add i64 %471, %2
  %473 = lshr i64 %472, 18
  %474 = and i64 %472, 262143
  %475 = load i32**, i32*** %63, align 8
  %476 = getelementptr inbounds i32*, i32** %475, i64 %473
  %477 = load i32*, i32** %476, align 8
  %478 = getelementptr inbounds i32, i32* %477, i64 %474
  %479 = load i32, i32* %478, align 4
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds i8, i8* %270, i64 %480
  %482 = load i8, i8* %481, align 1
  br i1 %329, label %483, label %556

483:                                              ; preds = %445, %554
  %484 = phi i32** [ %555, %554 ], [ %475, %445 ]
  %485 = phi i32** [ %553, %554 ], [ %466, %445 ]
  %486 = phi i32 [ %551, %554 ], [ 1, %445 ]
  %487 = phi i64 [ %536, %554 ], [ 0, %445 ]
  %488 = add nsw i32 %486, 1
  %489 = sext i32 %486 to i64
  %490 = add i64 %263, %489
  %491 = lshr i64 %490, 18
  %492 = and i64 %490, 262143
  %493 = getelementptr inbounds i32*, i32** %485, i64 %491
  %494 = load i32*, i32** %493, align 8
  %495 = getelementptr inbounds i32, i32* %494, i64 %492
  %496 = load i32, i32* %495, align 4
  %497 = sext i32 %496 to i64
  %498 = add i64 %497, %2
  %499 = lshr i64 %498, 18
  %500 = and i64 %498, 262143
  %501 = getelementptr inbounds i32*, i32** %484, i64 %499
  %502 = load i32*, i32** %501, align 8
  %503 = getelementptr inbounds i32, i32* %502, i64 %500
  %504 = load i32, i32* %503, align 4
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds i8, i8* %270, i64 %505
  %507 = load i8, i8* %506, align 1
  %508 = sext i32 %488 to i64
  %509 = add i64 %263, %508
  %510 = lshr i64 %509, 18
  %511 = and i64 %509, 262143
  %512 = getelementptr inbounds i32*, i32** %485, i64 %510
  %513 = load i32*, i32** %512, align 8
  %514 = getelementptr inbounds i32, i32* %513, i64 %511
  %515 = load i32, i32* %514, align 4
  %516 = sext i32 %515 to i64
  %517 = add i64 %516, %2
  %518 = lshr i64 %517, 18
  %519 = and i64 %517, 262143
  %520 = getelementptr inbounds i32*, i32** %484, i64 %518
  %521 = load i32*, i32** %520, align 8
  %522 = getelementptr inbounds i32, i32* %521, i64 %519
  %523 = load i32, i32* %522, align 4
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds i8, i8* %270, i64 %524
  %526 = load i8, i8* %525, align 1
  %527 = icmp ult i8 %507, %526
  %528 = select i1 %527, i32 %488, i32 %486
  %529 = select i1 %527, i8 %526, i8 %507
  %530 = icmp ugt i8 %529, %482
  br i1 %530, label %535, label %531

531:                                              ; preds = %483
  %532 = add i64 %487, %263
  %533 = lshr i64 %532, 18
  %534 = and i64 %532, 262143
  br label %556

535:                                              ; preds = %483
  %536 = sext i32 %528 to i64
  %537 = add i64 %263, %536
  %538 = lshr i64 %537, 18
  %539 = and i64 %537, 262143
  %540 = getelementptr inbounds i32*, i32** %485, i64 %538
  %541 = load i32*, i32** %540, align 8
  %542 = getelementptr inbounds i32, i32* %541, i64 %539
  %543 = load i32, i32* %542, align 4
  %544 = add i64 %487, %263
  %545 = lshr i64 %544, 18
  %546 = and i64 %544, 262143
  %547 = getelementptr inbounds i32*, i32** %485, i64 %545
  %548 = load i32*, i32** %547, align 8
  %549 = getelementptr inbounds i32, i32* %548, i64 %546
  store i32 %543, i32* %549, align 4
  %550 = shl nsw i32 %528, 1
  %551 = or i32 %550, 1
  %552 = icmp slt i32 %551, %328
  %553 = load i32**, i32*** %448, align 8
  br i1 %552, label %554, label %556

554:                                              ; preds = %535
  %555 = load i32**, i32*** %63, align 8
  br label %483

556:                                              ; preds = %535, %531, %445
  %557 = phi i64 [ %447, %445 ], [ %534, %531 ], [ %539, %535 ]
  %558 = phi i64 [ %446, %445 ], [ %533, %531 ], [ %538, %535 ]
  %559 = phi i32** [ %466, %445 ], [ %485, %531 ], [ %553, %535 ]
  %560 = getelementptr inbounds i32*, i32** %559, i64 %558
  %561 = load i32*, i32** %560, align 8
  %562 = getelementptr inbounds i32, i32* %561, i64 %557
  store i32 %470, i32* %562, align 4
  br label %563

563:                                              ; preds = %556, %444
  %564 = add i32 %328, -1
  %565 = icmp sgt i32 %564, 0
  br i1 %565, label %566, label %692

566:                                              ; preds = %563
  %567 = lshr i64 %263, 18
  %568 = and i64 %263, 262143
  %569 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %264, i64 0, i32 0
  %570 = sext i32 %564 to i64
  br label %571

571:                                              ; preds = %679, %566
  %572 = phi i64 [ %570, %566 ], [ %690, %679 ]
  %573 = load i32**, i32*** %569, align 8
  %574 = getelementptr inbounds i32*, i32** %573, i64 %567
  %575 = load i32*, i32** %574, align 8
  %576 = getelementptr inbounds i32, i32* %575, i64 %568
  %577 = load i32, i32* %576, align 4
  %578 = add i64 %572, %263
  %579 = lshr i64 %578, 18
  %580 = and i64 %578, 262143
  %581 = getelementptr inbounds i32*, i32** %573, i64 %579
  %582 = load i32*, i32** %581, align 8
  %583 = getelementptr inbounds i32, i32* %582, i64 %580
  %584 = load i32, i32* %583, align 4
  store i32 %584, i32* %576, align 4
  %585 = load i32**, i32*** %569, align 8
  %586 = getelementptr inbounds i32*, i32** %585, i64 %567
  %587 = load i32*, i32** %586, align 8
  %588 = getelementptr inbounds i32, i32* %587, i64 %568
  %589 = load i32, i32* %588, align 4
  %590 = sext i32 %589 to i64
  %591 = add i64 %590, %2
  %592 = lshr i64 %591, 18
  %593 = and i64 %591, 262143
  %594 = load i32**, i32*** %63, align 8
  %595 = getelementptr inbounds i32*, i32** %594, i64 %592
  %596 = load i32*, i32** %595, align 8
  %597 = getelementptr inbounds i32, i32* %596, i64 %593
  %598 = load i32, i32* %597, align 4
  %599 = sext i32 %598 to i64
  %600 = getelementptr inbounds i8, i8* %270, i64 %599
  %601 = load i8, i8* %600, align 1
  %602 = icmp eq i64 %572, 1
  br i1 %602, label %679, label %603

603:                                              ; preds = %571, %677
  %604 = phi i32** [ %678, %677 ], [ %594, %571 ]
  %605 = phi i32** [ %676, %677 ], [ %585, %571 ]
  %606 = phi i32 [ %673, %677 ], [ 1, %571 ]
  %607 = phi i32 [ %648, %677 ], [ 0, %571 ]
  %608 = add nsw i32 %606, 1
  %609 = sext i32 %606 to i64
  %610 = add i64 %263, %609
  %611 = lshr i64 %610, 18
  %612 = and i64 %610, 262143
  %613 = getelementptr inbounds i32*, i32** %605, i64 %611
  %614 = load i32*, i32** %613, align 8
  %615 = getelementptr inbounds i32, i32* %614, i64 %612
  %616 = load i32, i32* %615, align 4
  %617 = sext i32 %616 to i64
  %618 = add i64 %617, %2
  %619 = lshr i64 %618, 18
  %620 = and i64 %618, 262143
  %621 = getelementptr inbounds i32*, i32** %604, i64 %619
  %622 = load i32*, i32** %621, align 8
  %623 = getelementptr inbounds i32, i32* %622, i64 %620
  %624 = load i32, i32* %623, align 4
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds i8, i8* %270, i64 %625
  %627 = load i8, i8* %626, align 1
  %628 = sext i32 %608 to i64
  %629 = add i64 %263, %628
  %630 = lshr i64 %629, 18
  %631 = and i64 %629, 262143
  %632 = getelementptr inbounds i32*, i32** %605, i64 %630
  %633 = load i32*, i32** %632, align 8
  %634 = getelementptr inbounds i32, i32* %633, i64 %631
  %635 = load i32, i32* %634, align 4
  %636 = sext i32 %635 to i64
  %637 = add i64 %636, %2
  %638 = lshr i64 %637, 18
  %639 = and i64 %637, 262143
  %640 = getelementptr inbounds i32*, i32** %604, i64 %638
  %641 = load i32*, i32** %640, align 8
  %642 = getelementptr inbounds i32, i32* %641, i64 %639
  %643 = load i32, i32* %642, align 4
  %644 = sext i32 %643 to i64
  %645 = getelementptr inbounds i8, i8* %270, i64 %644
  %646 = load i8, i8* %645, align 1
  %647 = icmp ult i8 %627, %646
  %648 = select i1 %647, i32 %608, i32 %606
  %649 = select i1 %647, i8 %646, i8 %627
  %650 = icmp ugt i8 %649, %601
  br i1 %650, label %656, label %651

651:                                              ; preds = %603
  %652 = sext i32 %607 to i64
  %653 = add i64 %263, %652
  %654 = lshr i64 %653, 18
  %655 = and i64 %653, 262143
  br label %679

656:                                              ; preds = %603
  %657 = sext i32 %648 to i64
  %658 = add i64 %263, %657
  %659 = lshr i64 %658, 18
  %660 = and i64 %658, 262143
  %661 = getelementptr inbounds i32*, i32** %605, i64 %659
  %662 = load i32*, i32** %661, align 8
  %663 = getelementptr inbounds i32, i32* %662, i64 %660
  %664 = load i32, i32* %663, align 4
  %665 = sext i32 %607 to i64
  %666 = add i64 %263, %665
  %667 = lshr i64 %666, 18
  %668 = and i64 %666, 262143
  %669 = getelementptr inbounds i32*, i32** %605, i64 %667
  %670 = load i32*, i32** %669, align 8
  %671 = getelementptr inbounds i32, i32* %670, i64 %668
  store i32 %664, i32* %671, align 4
  %672 = shl nsw i32 %648, 1
  %673 = or i32 %672, 1
  %674 = sext i32 %673 to i64
  %675 = icmp sgt i64 %572, %674
  %676 = load i32**, i32*** %569, align 8
  br i1 %675, label %677, label %679

677:                                              ; preds = %656
  %678 = load i32**, i32*** %63, align 8
  br label %603

679:                                              ; preds = %656, %651, %571
  %680 = phi i64 [ %568, %571 ], [ %655, %651 ], [ %660, %656 ]
  %681 = phi i64 [ %567, %571 ], [ %654, %651 ], [ %659, %656 ]
  %682 = phi i32** [ %585, %571 ], [ %605, %651 ], [ %676, %656 ]
  %683 = getelementptr inbounds i32*, i32** %682, i64 %681
  %684 = load i32*, i32** %683, align 8
  %685 = getelementptr inbounds i32, i32* %684, i64 %680
  store i32 %589, i32* %685, align 4
  %686 = load i32**, i32*** %569, align 8
  %687 = getelementptr inbounds i32*, i32** %686, i64 %579
  %688 = load i32*, i32** %687, align 8
  %689 = getelementptr inbounds i32, i32* %688, i64 %580
  store i32 %577, i32* %689, align 4
  %690 = add nsw i64 %572, -1
  %691 = icmp sgt i64 %690, 0
  br i1 %691, label %571, label %692

692:                                              ; preds = %679, %563, %262
  %693 = icmp slt i32 %265, 1
  br i1 %693, label %694, label %853

694:                                              ; preds = %692
  %695 = lshr i64 %263, 18
  %696 = and i64 %263, 262143
  %697 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %264, i64 0, i32 0
  %698 = load i32**, i32*** %697, align 8
  %699 = getelementptr inbounds i32*, i32** %698, i64 %695
  %700 = load i32*, i32** %699, align 8
  %701 = getelementptr inbounds i32, i32* %700, i64 %696
  %702 = load i32, i32* %701, align 4
  %703 = sext i32 %702 to i64
  %704 = add i64 %703, %2
  %705 = lshr i64 %704, 18
  %706 = and i64 %704, 262143
  %707 = load i32**, i32*** %63, align 8
  %708 = getelementptr inbounds i32*, i32** %707, i64 %705
  %709 = load i32*, i32** %708, align 8
  %710 = getelementptr inbounds i32, i32* %709, i64 %706
  %711 = load i32, i32* %710, align 4
  %712 = sext i32 %711 to i64
  %713 = getelementptr inbounds i8, i8* %270, i64 %712
  %714 = load i8, i8* %713, align 1
  %715 = zext i8 %714 to i32
  %716 = add i64 %263, 1
  %717 = load i64, i64* %45, align 8
  %718 = icmp ult i64 %716, %717
  br i1 %718, label %719, label %752

719:                                              ; preds = %694, %746
  %720 = phi i64 [ %750, %746 ], [ %716, %694 ]
  %721 = phi i32 [ %749, %746 ], [ %715, %694 ]
  %722 = phi %"class.courgette::PagedArray"* [ %748, %746 ], [ %264, %694 ]
  %723 = phi i64 [ %747, %746 ], [ %263, %694 ]
  %724 = lshr i64 %720, 18
  %725 = and i64 %720, 262143
  %726 = getelementptr inbounds i32*, i32** %698, i64 %724
  %727 = load i32*, i32** %726, align 8
  %728 = getelementptr inbounds i32, i32* %727, i64 %725
  %729 = load i32, i32* %728, align 4
  %730 = sext i32 %729 to i64
  %731 = add i64 %730, %2
  %732 = lshr i64 %731, 18
  %733 = and i64 %731, 262143
  %734 = getelementptr inbounds i32*, i32** %707, i64 %732
  %735 = load i32*, i32** %734, align 8
  %736 = getelementptr inbounds i32, i32* %735, i64 %733
  %737 = load i32, i32* %736, align 4
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds i8, i8* %270, i64 %738
  %740 = load i8, i8* %739, align 1
  %741 = zext i8 %740 to i32
  %742 = icmp eq i32 %721, %741
  br i1 %742, label %746, label %743

743:                                              ; preds = %719
  %744 = sub i64 %720, %723
  %745 = icmp sgt i64 %744, 1
  br i1 %745, label %752, label %746

746:                                              ; preds = %743, %719
  %747 = phi i64 [ %723, %719 ], [ %720, %743 ]
  %748 = phi %"class.courgette::PagedArray"* [ %722, %719 ], [ %264, %743 ]
  %749 = phi i32 [ %721, %719 ], [ %741, %743 ]
  %750 = add i64 %720, 1
  %751 = icmp ult i64 %750, %717
  br i1 %751, label %719, label %752

752:                                              ; preds = %746, %743, %694
  %753 = phi i64 [ %263, %694 ], [ %747, %746 ], [ %723, %743 ]
  %754 = phi %"class.courgette::PagedArray"* [ %264, %694 ], [ %748, %746 ], [ %722, %743 ]
  %755 = phi i32 [ %715, %694 ], [ %749, %746 ], [ %721, %743 ]
  %756 = phi i64 [ %716, %694 ], [ %750, %746 ], [ %720, %743 ]
  %757 = lshr i64 %753, 18
  %758 = and i64 %753, 262143
  %759 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %754, i64 0, i32 0
  %760 = load i32**, i32*** %759, align 8
  %761 = getelementptr inbounds i32*, i32** %760, i64 %757
  %762 = load i32*, i32** %761, align 8
  %763 = getelementptr inbounds i32, i32* %762, i64 %758
  %764 = load i32, i32* %763, align 4
  %765 = sext i32 %764 to i64
  %766 = add i64 %765, %2
  %767 = lshr i64 %766, 18
  %768 = and i64 %766, 262143
  %769 = getelementptr inbounds i32*, i32** %707, i64 %767
  %770 = load i32*, i32** %769, align 8
  %771 = getelementptr inbounds i32, i32* %770, i64 %768
  %772 = load i32, i32* %771, align 4
  %773 = add nsw i32 %772, -1
  %774 = sext i32 %773 to i64
  %775 = getelementptr inbounds i8, i8* %270, i64 %774
  %776 = load i8, i8* %775, align 1
  %777 = zext i8 %776 to i32
  %778 = icmp sgt i32 %755, %777
  br i1 %778, label %779, label %783

779:                                              ; preds = %752
  %780 = call fastcc { %"class.courgette::PagedArray"*, i64 } @_ZN6divsuf12_GLOBAL__N_112ss_partitionEN9courgette19PagedArray_iteratorIKNS1_10PagedArrayIiLi18EEEKiEENS2_IS4_iEES8_i(%"class.courgette::PagedArray"* %1, i64 %2, %"class.courgette::PagedArray"* %754, i64 %753, %"class.courgette::PagedArray"* %264, i64 %756, i32 %267)
  %781 = extractvalue { %"class.courgette::PagedArray"*, i64 } %780, 0
  %782 = extractvalue { %"class.courgette::PagedArray"*, i64 } %780, 1
  br label %783

783:                                              ; preds = %779, %752
  %784 = phi i64 [ %782, %779 ], [ %753, %752 ]
  %785 = phi %"class.courgette::PagedArray"* [ %781, %779 ], [ %754, %752 ]
  %786 = sub i64 %756, %784
  %787 = sub i64 %717, %756
  %788 = icmp sgt i64 %786, %787
  br i1 %788, label %813, label %789

789:                                              ; preds = %783
  %790 = icmp sgt i64 %786, 1
  br i1 %790, label %791, label %2198

791:                                              ; preds = %789
  %792 = sext i32 %266 to i64
  %793 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %792, i32 0, i32 0
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %793, align 8
  %794 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %792, i32 0, i32 1
  store i64 %756, i64* %794, align 8
  %795 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %792, i32 1
  %796 = bitcast %"class.courgette::PagedArray_iterator.0"* %795 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %796, i8* nonnull align 8 %65, i64 16, i1 false)
  %797 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %792, i32 2
  store i32 %267, i32* %797, align 8
  %798 = add nsw i32 %266, 1
  %799 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %792, i32 3
  store i32 -1, i32* %799, align 4
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %62, align 8
  store i64 %756, i64* %45, align 8
  %800 = add nsw i32 %267, 1
  %801 = and i64 %786, 65280
  %802 = icmp eq i64 %801, 0
  br i1 %802, label %809, label %803

803:                                              ; preds = %791
  %804 = lshr i64 %786, 8
  %805 = and i64 %804, 255
  %806 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %805
  %807 = load i32, i32* %806, align 4
  %808 = add nsw i32 %807, 8
  br label %2198

809:                                              ; preds = %791
  %810 = and i64 %786, 255
  %811 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %810
  %812 = load i32, i32* %811, align 4
  br label %2198

813:                                              ; preds = %783
  %814 = icmp sgt i64 %787, 1
  br i1 %814, label %815, label %839

815:                                              ; preds = %813
  %816 = sext i32 %266 to i64
  %817 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %816, i32 0, i32 0
  store %"class.courgette::PagedArray"* %785, %"class.courgette::PagedArray"** %817, align 8
  %818 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %816, i32 0, i32 1
  store i64 %784, i64* %818, align 8
  %819 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %816, i32 1, i32 0
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %819, align 8
  %820 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %816, i32 1, i32 1
  store i64 %756, i64* %820, align 8
  %821 = add nsw i32 %267, 1
  %822 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %816, i32 2
  store i32 %821, i32* %822, align 8
  %823 = and i64 %786, 65280
  %824 = icmp eq i64 %823, 0
  br i1 %824, label %831, label %825

825:                                              ; preds = %815
  %826 = lshr i64 %786, 8
  %827 = and i64 %826, 255
  %828 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %827
  %829 = load i32, i32* %828, align 4
  %830 = add nsw i32 %829, 8
  br label %835

831:                                              ; preds = %815
  %832 = and i64 %786, 255
  %833 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %832
  %834 = load i32, i32* %833, align 4
  br label %835

835:                                              ; preds = %825, %831
  %836 = phi i32 [ %830, %825 ], [ %834, %831 ]
  %837 = add nsw i32 %266, 1
  %838 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %816, i32 3
  store i32 %836, i32* %838, align 4
  br label %2198

839:                                              ; preds = %813
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %62, align 8
  store i64 %756, i64* %45, align 8
  %840 = add nsw i32 %267, 1
  %841 = and i64 %786, 65280
  %842 = icmp eq i64 %841, 0
  br i1 %842, label %849, label %843

843:                                              ; preds = %839
  %844 = lshr i64 %786, 8
  %845 = and i64 %844, 255
  %846 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %845
  %847 = load i32, i32* %846, align 4
  %848 = add nsw i32 %847, 8
  br label %2198

849:                                              ; preds = %839
  %850 = and i64 %786, 255
  %851 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %850
  %852 = load i32, i32* %851, align 4
  br label %2198

853:                                              ; preds = %692
  %854 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %62, align 8
  %855 = load i64, i64* %45, align 8
  %856 = sub i64 %855, %263
  %857 = trunc i64 %856 to i32
  %858 = sdiv i32 %857, 2
  %859 = sext i32 %858 to i64
  %860 = add i64 %263, %859
  %861 = icmp slt i32 %857, 513
  br i1 %861, label %862, label %1184

862:                                              ; preds = %853
  %863 = icmp slt i32 %857, 33
  br i1 %863, label %864, label %948

864:                                              ; preds = %862
  %865 = add i64 %855, -1
  %866 = lshr i64 %263, 18
  %867 = and i64 %263, 262143
  %868 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %264, i64 0, i32 0
  %869 = load i32**, i32*** %868, align 8
  %870 = getelementptr inbounds i32*, i32** %869, i64 %866
  %871 = load i32*, i32** %870, align 8
  %872 = getelementptr inbounds i32, i32* %871, i64 %867
  %873 = load i32, i32* %872, align 4
  %874 = sext i32 %873 to i64
  %875 = add i64 %874, %2
  %876 = lshr i64 %875, 18
  %877 = and i64 %875, 262143
  %878 = load i32**, i32*** %63, align 8
  %879 = getelementptr inbounds i32*, i32** %878, i64 %876
  %880 = load i32*, i32** %879, align 8
  %881 = getelementptr inbounds i32, i32* %880, i64 %877
  %882 = load i32, i32* %881, align 4
  %883 = sext i32 %882 to i64
  %884 = getelementptr inbounds i8, i8* %270, i64 %883
  %885 = load i8, i8* %884, align 1
  %886 = lshr i64 %860, 18
  %887 = and i64 %860, 262143
  %888 = getelementptr inbounds i32*, i32** %869, i64 %886
  %889 = load i32*, i32** %888, align 8
  %890 = getelementptr inbounds i32, i32* %889, i64 %887
  %891 = load i32, i32* %890, align 4
  %892 = sext i32 %891 to i64
  %893 = add i64 %892, %2
  %894 = lshr i64 %893, 18
  %895 = and i64 %893, 262143
  %896 = getelementptr inbounds i32*, i32** %878, i64 %894
  %897 = load i32*, i32** %896, align 8
  %898 = getelementptr inbounds i32, i32* %897, i64 %895
  %899 = load i32, i32* %898, align 4
  %900 = sext i32 %899 to i64
  %901 = getelementptr inbounds i8, i8* %270, i64 %900
  %902 = load i8, i8* %901, align 1
  %903 = icmp ugt i8 %885, %902
  %904 = select i1 %903, i8 %885, i8 %902
  %905 = select i1 %903, i64 %263, i64 %860
  %906 = select i1 %903, i64 %860, i64 %263
  %907 = lshr i64 %865, 18
  %908 = and i64 %865, 262143
  %909 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %854, i64 0, i32 0
  %910 = load i32**, i32*** %909, align 8
  %911 = getelementptr inbounds i32*, i32** %910, i64 %907
  %912 = load i32*, i32** %911, align 8
  %913 = getelementptr inbounds i32, i32* %912, i64 %908
  %914 = load i32, i32* %913, align 4
  %915 = sext i32 %914 to i64
  %916 = add i64 %915, %2
  %917 = lshr i64 %916, 18
  %918 = and i64 %916, 262143
  %919 = getelementptr inbounds i32*, i32** %878, i64 %917
  %920 = load i32*, i32** %919, align 8
  %921 = getelementptr inbounds i32, i32* %920, i64 %918
  %922 = load i32, i32* %921, align 4
  %923 = sext i32 %922 to i64
  %924 = getelementptr inbounds i8, i8* %270, i64 %923
  %925 = load i8, i8* %924, align 1
  %926 = icmp ugt i8 %904, %925
  br i1 %926, label %927, label %1512

927:                                              ; preds = %864
  %928 = lshr i64 %906, 18
  %929 = and i64 %906, 262143
  %930 = getelementptr inbounds i32*, i32** %869, i64 %928
  %931 = load i32*, i32** %930, align 8
  %932 = getelementptr inbounds i32, i32* %931, i64 %929
  %933 = load i32, i32* %932, align 4
  %934 = sext i32 %933 to i64
  %935 = add i64 %934, %2
  %936 = lshr i64 %935, 18
  %937 = and i64 %935, 262143
  %938 = getelementptr inbounds i32*, i32** %878, i64 %936
  %939 = load i32*, i32** %938, align 8
  %940 = getelementptr inbounds i32, i32* %939, i64 %937
  %941 = load i32, i32* %940, align 4
  %942 = sext i32 %941 to i64
  %943 = getelementptr inbounds i8, i8* %270, i64 %942
  %944 = load i8, i8* %943, align 1
  %945 = icmp ugt i8 %944, %925
  %946 = select i1 %945, %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"* %854
  %947 = select i1 %945, i64 %906, i64 %865
  br label %1512

948:                                              ; preds = %862
  %949 = lshr i64 %856, 2
  %950 = and i64 %949, 1073741823
  %951 = add i64 %950, %263
  %952 = add i64 %855, -1
  %953 = sub i64 %952, %950
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #3
  %954 = ptrtoint %"class.courgette::PagedArray"* %854 to i64
  store %"class.courgette::PagedArray"* %854, %"class.courgette::PagedArray"** %68, align 8
  store i64 %953, i64* %69, align 8
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %70, align 8
  store i64 %860, i64* %71, align 8
  %955 = lshr i64 %951, 18
  %956 = and i64 %951, 262143
  %957 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %264, i64 0, i32 0
  %958 = load i32**, i32*** %957, align 8
  %959 = getelementptr inbounds i32*, i32** %958, i64 %955
  %960 = load i32*, i32** %959, align 8
  %961 = getelementptr inbounds i32, i32* %960, i64 %956
  %962 = load i32, i32* %961, align 4
  %963 = sext i32 %962 to i64
  %964 = add i64 %963, %2
  %965 = lshr i64 %964, 18
  %966 = and i64 %964, 262143
  %967 = load i32**, i32*** %63, align 8
  %968 = getelementptr inbounds i32*, i32** %967, i64 %965
  %969 = load i32*, i32** %968, align 8
  %970 = getelementptr inbounds i32, i32* %969, i64 %966
  %971 = load i32, i32* %970, align 4
  %972 = sext i32 %971 to i64
  %973 = getelementptr inbounds i8, i8* %270, i64 %972
  %974 = load i8, i8* %973, align 1
  %975 = lshr i64 %860, 18
  %976 = and i64 %860, 262143
  %977 = getelementptr inbounds i32*, i32** %958, i64 %975
  %978 = load i32*, i32** %977, align 8
  %979 = getelementptr inbounds i32, i32* %978, i64 %976
  %980 = load i32, i32* %979, align 4
  %981 = sext i32 %980 to i64
  %982 = add i64 %981, %2
  %983 = lshr i64 %982, 18
  %984 = and i64 %982, 262143
  %985 = getelementptr inbounds i32*, i32** %967, i64 %983
  %986 = load i32*, i32** %985, align 8
  %987 = getelementptr inbounds i32, i32* %986, i64 %984
  %988 = load i32, i32* %987, align 4
  %989 = sext i32 %988 to i64
  %990 = getelementptr inbounds i8, i8* %270, i64 %989
  %991 = load i8, i8* %990, align 1
  %992 = icmp ugt i8 %974, %991
  br i1 %992, label %993, label %994

993:                                              ; preds = %948
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %70, align 8
  store i64 %951, i64* %71, align 8
  br label %994

994:                                              ; preds = %993, %948
  %995 = phi i64 [ %860, %993 ], [ %951, %948 ]
  %996 = phi i64 [ %951, %993 ], [ %860, %948 ]
  %997 = ptrtoint %"class.courgette::PagedArray"* %264 to i64
  %998 = lshr i64 %953, 18
  %999 = and i64 %953, 262143
  %1000 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %854, i64 0, i32 0
  %1001 = load i32**, i32*** %1000, align 8
  %1002 = getelementptr inbounds i32*, i32** %1001, i64 %998
  %1003 = load i32*, i32** %1002, align 8
  %1004 = getelementptr inbounds i32, i32* %1003, i64 %999
  %1005 = load i32, i32* %1004, align 4
  %1006 = sext i32 %1005 to i64
  %1007 = add i64 %1006, %2
  %1008 = lshr i64 %1007, 18
  %1009 = and i64 %1007, 262143
  %1010 = getelementptr inbounds i32*, i32** %967, i64 %1008
  %1011 = load i32*, i32** %1010, align 8
  %1012 = getelementptr inbounds i32, i32* %1011, i64 %1009
  %1013 = load i32, i32* %1012, align 4
  %1014 = sext i32 %1013 to i64
  %1015 = getelementptr inbounds i8, i8* %270, i64 %1014
  %1016 = load i8, i8* %1015, align 1
  %1017 = lshr i64 %952, 18
  %1018 = and i64 %952, 262143
  %1019 = getelementptr inbounds i32*, i32** %1001, i64 %1017
  %1020 = load i32*, i32** %1019, align 8
  %1021 = getelementptr inbounds i32, i32* %1020, i64 %1018
  %1022 = load i32, i32* %1021, align 4
  %1023 = sext i32 %1022 to i64
  %1024 = add i64 %1023, %2
  %1025 = lshr i64 %1024, 18
  %1026 = and i64 %1024, 262143
  %1027 = getelementptr inbounds i32*, i32** %967, i64 %1025
  %1028 = load i32*, i32** %1027, align 8
  %1029 = getelementptr inbounds i32, i32* %1028, i64 %1026
  %1030 = load i32, i32* %1029, align 4
  %1031 = sext i32 %1030 to i64
  %1032 = getelementptr inbounds i8, i8* %270, i64 %1031
  %1033 = load i8, i8* %1032, align 1
  %1034 = icmp ugt i8 %1016, %1033
  br i1 %1034, label %1035, label %1036

1035:                                             ; preds = %994
  store i64 %954, i64* %72, align 8
  store i64 %952, i64* %69, align 8
  br label %1036

1036:                                             ; preds = %1035, %994
  %1037 = phi i8 [ %1033, %1035 ], [ %1016, %994 ]
  %1038 = phi i64 [ %953, %1035 ], [ %952, %994 ]
  %1039 = phi i64 [ %952, %1035 ], [ %953, %994 ]
  %1040 = lshr i64 %995, 18
  %1041 = and i64 %995, 262143
  %1042 = getelementptr inbounds i32*, i32** %958, i64 %1040
  %1043 = load i32*, i32** %1042, align 8
  %1044 = getelementptr inbounds i32, i32* %1043, i64 %1041
  %1045 = load i32, i32* %1044, align 4
  %1046 = sext i32 %1045 to i64
  %1047 = add i64 %1046, %2
  %1048 = lshr i64 %1047, 18
  %1049 = and i64 %1047, 262143
  %1050 = getelementptr inbounds i32*, i32** %967, i64 %1048
  %1051 = load i32*, i32** %1050, align 8
  %1052 = getelementptr inbounds i32, i32* %1051, i64 %1049
  %1053 = load i32, i32* %1052, align 4
  %1054 = sext i32 %1053 to i64
  %1055 = getelementptr inbounds i8, i8* %270, i64 %1054
  %1056 = load i8, i8* %1055, align 1
  %1057 = icmp ugt i8 %1056, %1037
  br i1 %1057, label %1058, label %1059

1058:                                             ; preds = %1036
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %68, align 8
  store i64 %995, i64* %69, align 8
  store i64 %954, i64* %73, align 8
  store i64 %1038, i64* %71, align 8
  br label %1059

1059:                                             ; preds = %1058, %1036
  %1060 = phi i32** [ %1001, %1058 ], [ %958, %1036 ]
  %1061 = phi i64 [ %997, %1058 ], [ %954, %1036 ]
  %1062 = phi i64 [ %996, %1058 ], [ %1038, %1036 ]
  %1063 = phi i64 [ %995, %1058 ], [ %1039, %1036 ]
  %1064 = phi %"class.courgette::PagedArray"* [ %264, %1058 ], [ %854, %1036 ]
  %1065 = phi i64 [ %1038, %1058 ], [ %996, %1036 ]
  %1066 = phi %"class.courgette::PagedArray"* [ %854, %1058 ], [ %264, %1036 ]
  %1067 = lshr i64 %263, 18
  %1068 = and i64 %263, 262143
  %1069 = getelementptr inbounds i32*, i32** %958, i64 %1067
  %1070 = load i32*, i32** %1069, align 8
  %1071 = getelementptr inbounds i32, i32* %1070, i64 %1068
  %1072 = load i32, i32* %1071, align 4
  %1073 = sext i32 %1072 to i64
  %1074 = add i64 %1073, %2
  %1075 = lshr i64 %1074, 18
  %1076 = and i64 %1074, 262143
  %1077 = getelementptr inbounds i32*, i32** %967, i64 %1075
  %1078 = load i32*, i32** %1077, align 8
  %1079 = getelementptr inbounds i32, i32* %1078, i64 %1076
  %1080 = load i32, i32* %1079, align 4
  %1081 = sext i32 %1080 to i64
  %1082 = getelementptr inbounds i8, i8* %270, i64 %1081
  %1083 = load i8, i8* %1082, align 1
  %1084 = lshr i64 %1065, 18
  %1085 = and i64 %1065, 262143
  %1086 = getelementptr inbounds i32*, i32** %1060, i64 %1084
  %1087 = load i32*, i32** %1086, align 8
  %1088 = getelementptr inbounds i32, i32* %1087, i64 %1085
  %1089 = load i32, i32* %1088, align 4
  %1090 = sext i32 %1089 to i64
  %1091 = add i64 %1090, %2
  %1092 = lshr i64 %1091, 18
  %1093 = and i64 %1091, 262143
  %1094 = getelementptr inbounds i32*, i32** %967, i64 %1092
  %1095 = load i32*, i32** %1094, align 8
  %1096 = getelementptr inbounds i32, i32* %1095, i64 %1093
  %1097 = load i32, i32* %1096, align 4
  %1098 = sext i32 %1097 to i64
  %1099 = getelementptr inbounds i8, i8* %270, i64 %1098
  %1100 = load i8, i8* %1099, align 1
  %1101 = icmp ugt i8 %1083, %1100
  br i1 %1101, label %1102, label %1103

1102:                                             ; preds = %1059
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %70, align 8
  store i64 %263, i64* %71, align 8
  br label %1103

1103:                                             ; preds = %1102, %1059
  %1104 = phi i8 [ %1100, %1102 ], [ %1083, %1059 ]
  %1105 = phi %"class.courgette::PagedArray"* [ %264, %1102 ], [ %1066, %1059 ]
  %1106 = phi i64 [ %263, %1102 ], [ %1065, %1059 ]
  %1107 = phi i64 [ %1085, %1102 ], [ %1068, %1059 ]
  %1108 = phi i64 [ %1084, %1102 ], [ %1067, %1059 ]
  %1109 = phi i64 [ %1065, %1102 ], [ %263, %1059 ]
  %1110 = phi %"class.courgette::PagedArray"* [ %1066, %1102 ], [ %264, %1059 ]
  %1111 = lshr i64 %1063, 18
  %1112 = and i64 %1063, 262143
  %1113 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1064, i64 0, i32 0
  %1114 = load i32**, i32*** %1113, align 8
  %1115 = getelementptr inbounds i32*, i32** %1114, i64 %1111
  %1116 = load i32*, i32** %1115, align 8
  %1117 = getelementptr inbounds i32, i32* %1116, i64 %1112
  %1118 = load i32, i32* %1117, align 4
  %1119 = sext i32 %1118 to i64
  %1120 = add i64 %1119, %2
  %1121 = lshr i64 %1120, 18
  %1122 = and i64 %1120, 262143
  %1123 = getelementptr inbounds i32*, i32** %967, i64 %1121
  %1124 = load i32*, i32** %1123, align 8
  %1125 = getelementptr inbounds i32, i32* %1124, i64 %1122
  %1126 = load i32, i32* %1125, align 4
  %1127 = sext i32 %1126 to i64
  %1128 = getelementptr inbounds i8, i8* %270, i64 %1127
  %1129 = load i8, i8* %1128, align 1
  %1130 = icmp ugt i8 %1104, %1129
  br i1 %1130, label %1131, label %1150

1131:                                             ; preds = %1103
  %1132 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1110, i64 0, i32 0
  store %"class.courgette::PagedArray"* %1110, %"class.courgette::PagedArray"** %68, align 8
  store i64 %1109, i64* %69, align 8
  store i64 %1061, i64* %73, align 8
  store i64 %1062, i64* %71, align 8
  %1133 = inttoptr i64 %1061 to %"class.courgette::PagedArray"*
  %1134 = load i32**, i32*** %1132, align 8
  %1135 = getelementptr inbounds i32*, i32** %1134, i64 %1108
  %1136 = load i32*, i32** %1135, align 8
  %1137 = getelementptr inbounds i32, i32* %1136, i64 %1107
  %1138 = load i32, i32* %1137, align 4
  %1139 = sext i32 %1138 to i64
  %1140 = add i64 %1139, %2
  %1141 = lshr i64 %1140, 18
  %1142 = and i64 %1140, 262143
  %1143 = getelementptr inbounds i32*, i32** %967, i64 %1141
  %1144 = load i32*, i32** %1143, align 8
  %1145 = getelementptr inbounds i32, i32* %1144, i64 %1142
  %1146 = load i32, i32* %1145, align 4
  %1147 = sext i32 %1146 to i64
  %1148 = getelementptr inbounds i8, i8* %270, i64 %1147
  %1149 = load i8, i8* %1148, align 1
  br label %1150

1150:                                             ; preds = %1131, %1103
  %1151 = phi i8 [ %1149, %1131 ], [ %1129, %1103 ]
  %1152 = phi i64 [ %1062, %1131 ], [ %1106, %1103 ]
  %1153 = phi %"class.courgette::PagedArray"* [ %1133, %1131 ], [ %1105, %1103 ]
  %1154 = lshr i64 %1152, 18
  %1155 = and i64 %1152, 262143
  %1156 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1153, i64 0, i32 0
  %1157 = load i32**, i32*** %1156, align 8
  %1158 = getelementptr inbounds i32*, i32** %1157, i64 %1154
  %1159 = load i32*, i32** %1158, align 8
  %1160 = getelementptr inbounds i32, i32* %1159, i64 %1155
  %1161 = load i32, i32* %1160, align 4
  %1162 = sext i32 %1161 to i64
  %1163 = add i64 %1162, %2
  %1164 = lshr i64 %1163, 18
  %1165 = and i64 %1163, 262143
  %1166 = getelementptr inbounds i32*, i32** %967, i64 %1164
  %1167 = load i32*, i32** %1166, align 8
  %1168 = getelementptr inbounds i32, i32* %1167, i64 %1165
  %1169 = load i32, i32* %1168, align 4
  %1170 = sext i32 %1169 to i64
  %1171 = getelementptr inbounds i8, i8* %270, i64 %1170
  %1172 = load i8, i8* %1171, align 1
  %1173 = icmp ugt i8 %1172, %1151
  %1174 = select i1 %1173, %"class.courgette::PagedArray_iterator.0"* %8, %"class.courgette::PagedArray_iterator.0"* %9
  %1175 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %1174, i64 0, i32 1
  %1176 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %1174, i64 0, i32 0
  %1177 = load i64, i64* %1175, align 8
  %1178 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %1176, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #3
  %1179 = load i32**, i32*** %957, align 8
  %1180 = getelementptr inbounds i32*, i32** %1179, i64 %1067
  %1181 = load i32*, i32** %1180, align 8
  %1182 = getelementptr inbounds i32, i32* %1181, i64 %1068
  %1183 = load i32, i32* %1182, align 4
  br label %1512

1184:                                             ; preds = %853
  %1185 = lshr i32 %857, 3
  %1186 = zext i32 %1185 to i64
  %1187 = add i64 %263, %1186
  %1188 = shl nuw nsw i32 %1185, 1
  %1189 = zext i32 %1188 to i64
  %1190 = add i64 %263, %1189
  %1191 = lshr i64 %263, 18
  %1192 = and i64 %263, 262143
  %1193 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %264, i64 0, i32 0
  %1194 = load i32**, i32*** %1193, align 8
  %1195 = getelementptr inbounds i32*, i32** %1194, i64 %1191
  %1196 = load i32*, i32** %1195, align 8
  %1197 = getelementptr inbounds i32, i32* %1196, i64 %1192
  %1198 = load i32, i32* %1197, align 4
  %1199 = sext i32 %1198 to i64
  %1200 = add i64 %1199, %2
  %1201 = lshr i64 %1200, 18
  %1202 = and i64 %1200, 262143
  %1203 = load i32**, i32*** %63, align 8
  %1204 = getelementptr inbounds i32*, i32** %1203, i64 %1201
  %1205 = load i32*, i32** %1204, align 8
  %1206 = getelementptr inbounds i32, i32* %1205, i64 %1202
  %1207 = load i32, i32* %1206, align 4
  %1208 = sext i32 %1207 to i64
  %1209 = getelementptr inbounds i8, i8* %270, i64 %1208
  %1210 = load i8, i8* %1209, align 1
  %1211 = lshr i64 %1187, 18
  %1212 = and i64 %1187, 262143
  %1213 = getelementptr inbounds i32*, i32** %1194, i64 %1211
  %1214 = load i32*, i32** %1213, align 8
  %1215 = getelementptr inbounds i32, i32* %1214, i64 %1212
  %1216 = load i32, i32* %1215, align 4
  %1217 = sext i32 %1216 to i64
  %1218 = add i64 %1217, %2
  %1219 = lshr i64 %1218, 18
  %1220 = and i64 %1218, 262143
  %1221 = getelementptr inbounds i32*, i32** %1203, i64 %1219
  %1222 = load i32*, i32** %1221, align 8
  %1223 = getelementptr inbounds i32, i32* %1222, i64 %1220
  %1224 = load i32, i32* %1223, align 4
  %1225 = sext i32 %1224 to i64
  %1226 = getelementptr inbounds i8, i8* %270, i64 %1225
  %1227 = load i8, i8* %1226, align 1
  %1228 = icmp ugt i8 %1210, %1227
  %1229 = select i1 %1228, i8 %1210, i8 %1227
  %1230 = select i1 %1228, i64 %263, i64 %1187
  %1231 = select i1 %1228, i64 %1187, i64 %263
  %1232 = lshr i64 %1190, 18
  %1233 = and i64 %1190, 262143
  %1234 = getelementptr inbounds i32*, i32** %1194, i64 %1232
  %1235 = load i32*, i32** %1234, align 8
  %1236 = getelementptr inbounds i32, i32* %1235, i64 %1233
  %1237 = load i32, i32* %1236, align 4
  %1238 = sext i32 %1237 to i64
  %1239 = add i64 %1238, %2
  %1240 = lshr i64 %1239, 18
  %1241 = and i64 %1239, 262143
  %1242 = getelementptr inbounds i32*, i32** %1203, i64 %1240
  %1243 = load i32*, i32** %1242, align 8
  %1244 = getelementptr inbounds i32, i32* %1243, i64 %1241
  %1245 = load i32, i32* %1244, align 4
  %1246 = sext i32 %1245 to i64
  %1247 = getelementptr inbounds i8, i8* %270, i64 %1246
  %1248 = load i8, i8* %1247, align 1
  %1249 = icmp ugt i8 %1229, %1248
  br i1 %1249, label %1250, label %1270

1250:                                             ; preds = %1184
  %1251 = lshr i64 %1231, 18
  %1252 = and i64 %1231, 262143
  %1253 = getelementptr inbounds i32*, i32** %1194, i64 %1251
  %1254 = load i32*, i32** %1253, align 8
  %1255 = getelementptr inbounds i32, i32* %1254, i64 %1252
  %1256 = load i32, i32* %1255, align 4
  %1257 = sext i32 %1256 to i64
  %1258 = add i64 %1257, %2
  %1259 = lshr i64 %1258, 18
  %1260 = and i64 %1258, 262143
  %1261 = getelementptr inbounds i32*, i32** %1203, i64 %1259
  %1262 = load i32*, i32** %1261, align 8
  %1263 = getelementptr inbounds i32, i32* %1262, i64 %1260
  %1264 = load i32, i32* %1263, align 4
  %1265 = sext i32 %1264 to i64
  %1266 = getelementptr inbounds i8, i8* %270, i64 %1265
  %1267 = load i8, i8* %1266, align 1
  %1268 = icmp ugt i8 %1267, %1248
  %1269 = select i1 %1268, i64 %1231, i64 %1190
  br label %1270

1270:                                             ; preds = %1250, %1184
  %1271 = phi i64 [ %1230, %1184 ], [ %1269, %1250 ]
  %1272 = sub i64 %860, %1186
  %1273 = add i64 %860, %1186
  %1274 = lshr i64 %1272, 18
  %1275 = and i64 %1272, 262143
  %1276 = getelementptr inbounds i32*, i32** %1194, i64 %1274
  %1277 = load i32*, i32** %1276, align 8
  %1278 = getelementptr inbounds i32, i32* %1277, i64 %1275
  %1279 = load i32, i32* %1278, align 4
  %1280 = sext i32 %1279 to i64
  %1281 = add i64 %1280, %2
  %1282 = lshr i64 %1281, 18
  %1283 = and i64 %1281, 262143
  %1284 = getelementptr inbounds i32*, i32** %1203, i64 %1282
  %1285 = load i32*, i32** %1284, align 8
  %1286 = getelementptr inbounds i32, i32* %1285, i64 %1283
  %1287 = load i32, i32* %1286, align 4
  %1288 = sext i32 %1287 to i64
  %1289 = getelementptr inbounds i8, i8* %270, i64 %1288
  %1290 = load i8, i8* %1289, align 1
  %1291 = lshr i64 %860, 18
  %1292 = and i64 %860, 262143
  %1293 = getelementptr inbounds i32*, i32** %1194, i64 %1291
  %1294 = load i32*, i32** %1293, align 8
  %1295 = getelementptr inbounds i32, i32* %1294, i64 %1292
  %1296 = load i32, i32* %1295, align 4
  %1297 = sext i32 %1296 to i64
  %1298 = add i64 %1297, %2
  %1299 = lshr i64 %1298, 18
  %1300 = and i64 %1298, 262143
  %1301 = getelementptr inbounds i32*, i32** %1203, i64 %1299
  %1302 = load i32*, i32** %1301, align 8
  %1303 = getelementptr inbounds i32, i32* %1302, i64 %1300
  %1304 = load i32, i32* %1303, align 4
  %1305 = sext i32 %1304 to i64
  %1306 = getelementptr inbounds i8, i8* %270, i64 %1305
  %1307 = load i8, i8* %1306, align 1
  %1308 = icmp ugt i8 %1290, %1307
  %1309 = select i1 %1308, i8 %1290, i8 %1307
  %1310 = select i1 %1308, i64 %1272, i64 %860
  %1311 = select i1 %1308, i64 %860, i64 %1272
  %1312 = lshr i64 %1273, 18
  %1313 = and i64 %1273, 262143
  %1314 = getelementptr inbounds i32*, i32** %1194, i64 %1312
  %1315 = load i32*, i32** %1314, align 8
  %1316 = getelementptr inbounds i32, i32* %1315, i64 %1313
  %1317 = load i32, i32* %1316, align 4
  %1318 = sext i32 %1317 to i64
  %1319 = add i64 %1318, %2
  %1320 = lshr i64 %1319, 18
  %1321 = and i64 %1319, 262143
  %1322 = getelementptr inbounds i32*, i32** %1203, i64 %1320
  %1323 = load i32*, i32** %1322, align 8
  %1324 = getelementptr inbounds i32, i32* %1323, i64 %1321
  %1325 = load i32, i32* %1324, align 4
  %1326 = sext i32 %1325 to i64
  %1327 = getelementptr inbounds i8, i8* %270, i64 %1326
  %1328 = load i8, i8* %1327, align 1
  %1329 = icmp ugt i8 %1309, %1328
  br i1 %1329, label %1330, label %1350

1330:                                             ; preds = %1270
  %1331 = lshr i64 %1311, 18
  %1332 = and i64 %1311, 262143
  %1333 = getelementptr inbounds i32*, i32** %1194, i64 %1331
  %1334 = load i32*, i32** %1333, align 8
  %1335 = getelementptr inbounds i32, i32* %1334, i64 %1332
  %1336 = load i32, i32* %1335, align 4
  %1337 = sext i32 %1336 to i64
  %1338 = add i64 %1337, %2
  %1339 = lshr i64 %1338, 18
  %1340 = and i64 %1338, 262143
  %1341 = getelementptr inbounds i32*, i32** %1203, i64 %1339
  %1342 = load i32*, i32** %1341, align 8
  %1343 = getelementptr inbounds i32, i32* %1342, i64 %1340
  %1344 = load i32, i32* %1343, align 4
  %1345 = sext i32 %1344 to i64
  %1346 = getelementptr inbounds i8, i8* %270, i64 %1345
  %1347 = load i8, i8* %1346, align 1
  %1348 = icmp ugt i8 %1347, %1328
  %1349 = select i1 %1348, i64 %1311, i64 %1273
  br label %1350

1350:                                             ; preds = %1330, %1270
  %1351 = phi i64 [ %1310, %1270 ], [ %1349, %1330 ]
  %1352 = add i64 %855, -1
  %1353 = sub i64 %1352, %1189
  %1354 = sub i64 %1352, %1186
  %1355 = lshr i64 %1353, 18
  %1356 = and i64 %1353, 262143
  %1357 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %854, i64 0, i32 0
  %1358 = load i32**, i32*** %1357, align 8
  %1359 = getelementptr inbounds i32*, i32** %1358, i64 %1355
  %1360 = load i32*, i32** %1359, align 8
  %1361 = getelementptr inbounds i32, i32* %1360, i64 %1356
  %1362 = load i32, i32* %1361, align 4
  %1363 = sext i32 %1362 to i64
  %1364 = add i64 %1363, %2
  %1365 = lshr i64 %1364, 18
  %1366 = and i64 %1364, 262143
  %1367 = getelementptr inbounds i32*, i32** %1203, i64 %1365
  %1368 = load i32*, i32** %1367, align 8
  %1369 = getelementptr inbounds i32, i32* %1368, i64 %1366
  %1370 = load i32, i32* %1369, align 4
  %1371 = sext i32 %1370 to i64
  %1372 = getelementptr inbounds i8, i8* %270, i64 %1371
  %1373 = load i8, i8* %1372, align 1
  %1374 = lshr i64 %1354, 18
  %1375 = and i64 %1354, 262143
  %1376 = getelementptr inbounds i32*, i32** %1358, i64 %1374
  %1377 = load i32*, i32** %1376, align 8
  %1378 = getelementptr inbounds i32, i32* %1377, i64 %1375
  %1379 = load i32, i32* %1378, align 4
  %1380 = sext i32 %1379 to i64
  %1381 = add i64 %1380, %2
  %1382 = lshr i64 %1381, 18
  %1383 = and i64 %1381, 262143
  %1384 = getelementptr inbounds i32*, i32** %1203, i64 %1382
  %1385 = load i32*, i32** %1384, align 8
  %1386 = getelementptr inbounds i32, i32* %1385, i64 %1383
  %1387 = load i32, i32* %1386, align 4
  %1388 = sext i32 %1387 to i64
  %1389 = getelementptr inbounds i8, i8* %270, i64 %1388
  %1390 = load i8, i8* %1389, align 1
  %1391 = icmp ugt i8 %1373, %1390
  %1392 = select i1 %1391, i8 %1373, i8 %1390
  %1393 = select i1 %1391, i64 %1353, i64 %1354
  %1394 = select i1 %1391, i64 %1354, i64 %1353
  %1395 = lshr i64 %1352, 18
  %1396 = and i64 %1352, 262143
  %1397 = getelementptr inbounds i32*, i32** %1358, i64 %1395
  %1398 = load i32*, i32** %1397, align 8
  %1399 = getelementptr inbounds i32, i32* %1398, i64 %1396
  %1400 = load i32, i32* %1399, align 4
  %1401 = sext i32 %1400 to i64
  %1402 = add i64 %1401, %2
  %1403 = lshr i64 %1402, 18
  %1404 = and i64 %1402, 262143
  %1405 = getelementptr inbounds i32*, i32** %1203, i64 %1403
  %1406 = load i32*, i32** %1405, align 8
  %1407 = getelementptr inbounds i32, i32* %1406, i64 %1404
  %1408 = load i32, i32* %1407, align 4
  %1409 = sext i32 %1408 to i64
  %1410 = getelementptr inbounds i8, i8* %270, i64 %1409
  %1411 = load i8, i8* %1410, align 1
  %1412 = icmp ugt i8 %1392, %1411
  br i1 %1412, label %1413, label %1433

1413:                                             ; preds = %1350
  %1414 = lshr i64 %1394, 18
  %1415 = and i64 %1394, 262143
  %1416 = getelementptr inbounds i32*, i32** %1358, i64 %1414
  %1417 = load i32*, i32** %1416, align 8
  %1418 = getelementptr inbounds i32, i32* %1417, i64 %1415
  %1419 = load i32, i32* %1418, align 4
  %1420 = sext i32 %1419 to i64
  %1421 = add i64 %1420, %2
  %1422 = lshr i64 %1421, 18
  %1423 = and i64 %1421, 262143
  %1424 = getelementptr inbounds i32*, i32** %1203, i64 %1422
  %1425 = load i32*, i32** %1424, align 8
  %1426 = getelementptr inbounds i32, i32* %1425, i64 %1423
  %1427 = load i32, i32* %1426, align 4
  %1428 = sext i32 %1427 to i64
  %1429 = getelementptr inbounds i8, i8* %270, i64 %1428
  %1430 = load i8, i8* %1429, align 1
  %1431 = icmp ugt i8 %1430, %1411
  %1432 = select i1 %1431, i64 %1394, i64 %1352
  br label %1433

1433:                                             ; preds = %1413, %1350
  %1434 = phi i64 [ %1393, %1350 ], [ %1432, %1413 ]
  %1435 = lshr i64 %1271, 18
  %1436 = and i64 %1271, 262143
  %1437 = getelementptr inbounds i32*, i32** %1194, i64 %1435
  %1438 = load i32*, i32** %1437, align 8
  %1439 = getelementptr inbounds i32, i32* %1438, i64 %1436
  %1440 = load i32, i32* %1439, align 4
  %1441 = sext i32 %1440 to i64
  %1442 = add i64 %1441, %2
  %1443 = lshr i64 %1442, 18
  %1444 = and i64 %1442, 262143
  %1445 = getelementptr inbounds i32*, i32** %1203, i64 %1443
  %1446 = load i32*, i32** %1445, align 8
  %1447 = getelementptr inbounds i32, i32* %1446, i64 %1444
  %1448 = load i32, i32* %1447, align 4
  %1449 = sext i32 %1448 to i64
  %1450 = getelementptr inbounds i8, i8* %270, i64 %1449
  %1451 = load i8, i8* %1450, align 1
  %1452 = lshr i64 %1351, 18
  %1453 = and i64 %1351, 262143
  %1454 = getelementptr inbounds i32*, i32** %1194, i64 %1452
  %1455 = load i32*, i32** %1454, align 8
  %1456 = getelementptr inbounds i32, i32* %1455, i64 %1453
  %1457 = load i32, i32* %1456, align 4
  %1458 = sext i32 %1457 to i64
  %1459 = add i64 %1458, %2
  %1460 = lshr i64 %1459, 18
  %1461 = and i64 %1459, 262143
  %1462 = getelementptr inbounds i32*, i32** %1203, i64 %1460
  %1463 = load i32*, i32** %1462, align 8
  %1464 = getelementptr inbounds i32, i32* %1463, i64 %1461
  %1465 = load i32, i32* %1464, align 4
  %1466 = sext i32 %1465 to i64
  %1467 = getelementptr inbounds i8, i8* %270, i64 %1466
  %1468 = load i8, i8* %1467, align 1
  %1469 = icmp ugt i8 %1451, %1468
  %1470 = select i1 %1469, i8 %1451, i8 %1468
  %1471 = select i1 %1469, i64 %1271, i64 %1351
  %1472 = select i1 %1469, i64 %1351, i64 %1271
  %1473 = lshr i64 %1434, 18
  %1474 = and i64 %1434, 262143
  %1475 = getelementptr inbounds i32*, i32** %1358, i64 %1473
  %1476 = load i32*, i32** %1475, align 8
  %1477 = getelementptr inbounds i32, i32* %1476, i64 %1474
  %1478 = load i32, i32* %1477, align 4
  %1479 = sext i32 %1478 to i64
  %1480 = add i64 %1479, %2
  %1481 = lshr i64 %1480, 18
  %1482 = and i64 %1480, 262143
  %1483 = getelementptr inbounds i32*, i32** %1203, i64 %1481
  %1484 = load i32*, i32** %1483, align 8
  %1485 = getelementptr inbounds i32, i32* %1484, i64 %1482
  %1486 = load i32, i32* %1485, align 4
  %1487 = sext i32 %1486 to i64
  %1488 = getelementptr inbounds i8, i8* %270, i64 %1487
  %1489 = load i8, i8* %1488, align 1
  %1490 = icmp ugt i8 %1470, %1489
  br i1 %1490, label %1491, label %1512

1491:                                             ; preds = %1433
  %1492 = lshr i64 %1472, 18
  %1493 = and i64 %1472, 262143
  %1494 = getelementptr inbounds i32*, i32** %1194, i64 %1492
  %1495 = load i32*, i32** %1494, align 8
  %1496 = getelementptr inbounds i32, i32* %1495, i64 %1493
  %1497 = load i32, i32* %1496, align 4
  %1498 = sext i32 %1497 to i64
  %1499 = add i64 %1498, %2
  %1500 = lshr i64 %1499, 18
  %1501 = and i64 %1499, 262143
  %1502 = getelementptr inbounds i32*, i32** %1203, i64 %1500
  %1503 = load i32*, i32** %1502, align 8
  %1504 = getelementptr inbounds i32, i32* %1503, i64 %1501
  %1505 = load i32, i32* %1504, align 4
  %1506 = sext i32 %1505 to i64
  %1507 = getelementptr inbounds i8, i8* %270, i64 %1506
  %1508 = load i8, i8* %1507, align 1
  %1509 = icmp ugt i8 %1508, %1489
  %1510 = select i1 %1509, %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"* %854
  %1511 = select i1 %1509, i64 %1472, i64 %1434
  br label %1512

1512:                                             ; preds = %864, %927, %1150, %1433, %1491
  %1513 = phi i32 [ %873, %864 ], [ %873, %927 ], [ %1183, %1150 ], [ %1198, %1433 ], [ %1198, %1491 ]
  %1514 = phi i32* [ %871, %864 ], [ %871, %927 ], [ %1181, %1150 ], [ %1196, %1433 ], [ %1196, %1491 ]
  %1515 = phi i64 [ %867, %864 ], [ %867, %927 ], [ %1068, %1150 ], [ %1192, %1433 ], [ %1192, %1491 ]
  %1516 = phi i64 [ %866, %864 ], [ %866, %927 ], [ %1067, %1150 ], [ %1191, %1433 ], [ %1191, %1491 ]
  %1517 = phi i32** [ %878, %864 ], [ %878, %927 ], [ %967, %1150 ], [ %1203, %1433 ], [ %1203, %1491 ]
  %1518 = phi %"class.courgette::PagedArray"* [ %264, %864 ], [ %946, %927 ], [ %1178, %1150 ], [ %264, %1433 ], [ %1510, %1491 ]
  %1519 = phi i64 [ %905, %864 ], [ %947, %927 ], [ %1177, %1150 ], [ %1471, %1433 ], [ %1511, %1491 ]
  %1520 = lshr i64 %1519, 18
  %1521 = and i64 %1519, 262143
  %1522 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1518, i64 0, i32 0
  %1523 = load i32**, i32*** %1522, align 8
  %1524 = getelementptr inbounds i32*, i32** %1523, i64 %1520
  %1525 = load i32*, i32** %1524, align 8
  %1526 = getelementptr inbounds i32, i32* %1525, i64 %1521
  %1527 = load i32, i32* %1526, align 4
  %1528 = sext i32 %1527 to i64
  %1529 = add i64 %1528, %2
  %1530 = lshr i64 %1529, 18
  %1531 = and i64 %1529, 262143
  %1532 = getelementptr inbounds i32*, i32** %1517, i64 %1530
  %1533 = load i32*, i32** %1532, align 8
  %1534 = getelementptr inbounds i32, i32* %1533, i64 %1531
  %1535 = load i32, i32* %1534, align 4
  %1536 = sext i32 %1535 to i64
  %1537 = getelementptr inbounds i8, i8* %270, i64 %1536
  %1538 = load i8, i8* %1537, align 1
  %1539 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %264, i64 0, i32 0
  %1540 = getelementptr inbounds i32, i32* %1514, i64 %1515
  store i32 %1527, i32* %1540, align 4
  %1541 = load i32**, i32*** %1522, align 8
  %1542 = getelementptr inbounds i32*, i32** %1541, i64 %1520
  %1543 = load i32*, i32** %1542, align 8
  %1544 = getelementptr inbounds i32, i32* %1543, i64 %1521
  store i32 %1513, i32* %1544, align 4
  %1545 = add i64 %263, 1
  %1546 = load i64, i64* %45, align 8
  %1547 = icmp ult i64 %1545, %1546
  br i1 %1547, label %1548, label %1643

1548:                                             ; preds = %1512
  %1549 = load i32**, i32*** %1539, align 8
  %1550 = load i32**, i32*** %63, align 8
  br label %1554

1551:                                             ; preds = %1554
  %1552 = add i64 %1555, 1
  %1553 = icmp ult i64 %1552, %1546
  br i1 %1553, label %1554, label %1643

1554:                                             ; preds = %1548, %1551
  %1555 = phi i64 [ %1545, %1548 ], [ %1552, %1551 ]
  %1556 = lshr i64 %1555, 18
  %1557 = and i64 %1555, 262143
  %1558 = getelementptr inbounds i32*, i32** %1549, i64 %1556
  %1559 = load i32*, i32** %1558, align 8
  %1560 = getelementptr inbounds i32, i32* %1559, i64 %1557
  %1561 = load i32, i32* %1560, align 4
  %1562 = sext i32 %1561 to i64
  %1563 = add i64 %1562, %2
  %1564 = lshr i64 %1563, 18
  %1565 = and i64 %1563, 262143
  %1566 = getelementptr inbounds i32*, i32** %1550, i64 %1564
  %1567 = load i32*, i32** %1566, align 8
  %1568 = getelementptr inbounds i32, i32* %1567, i64 %1565
  %1569 = load i32, i32* %1568, align 4
  %1570 = sext i32 %1569 to i64
  %1571 = getelementptr inbounds i8, i8* %270, i64 %1570
  %1572 = load i8, i8* %1571, align 1
  %1573 = icmp eq i8 %1572, %1538
  br i1 %1573, label %1551, label %1574

1574:                                             ; preds = %1554
  %1575 = icmp ult i8 %1572, %1538
  br i1 %1575, label %1576, label %1643

1576:                                             ; preds = %1574
  %1577 = add nuw i64 %1555, 1
  %1578 = icmp ult i64 %1577, %1546
  br i1 %1578, label %1579, label %1643

1579:                                             ; preds = %1576
  %1580 = lshr i64 %1577, 18
  %1581 = and i64 %1577, 262143
  %1582 = getelementptr inbounds i32*, i32** %1549, i64 %1580
  %1583 = load i32*, i32** %1582, align 8
  %1584 = getelementptr inbounds i32, i32* %1583, i64 %1581
  %1585 = load i32, i32* %1584, align 4
  %1586 = sext i32 %1585 to i64
  %1587 = add i64 %1586, %2
  %1588 = lshr i64 %1587, 18
  %1589 = and i64 %1587, 262143
  %1590 = getelementptr inbounds i32*, i32** %1550, i64 %1588
  %1591 = load i32*, i32** %1590, align 8
  %1592 = getelementptr inbounds i32, i32* %1591, i64 %1589
  %1593 = load i32, i32* %1592, align 4
  %1594 = sext i32 %1593 to i64
  %1595 = getelementptr inbounds i8, i8* %270, i64 %1594
  %1596 = load i8, i8* %1595, align 1
  %1597 = icmp ugt i8 %1596, %1538
  br i1 %1597, label %1643, label %1598

1598:                                             ; preds = %1579, %1622
  %1599 = phi i8 [ %1641, %1622 ], [ %1596, %1579 ]
  %1600 = phi i32 [ %1630, %1622 ], [ %1585, %1579 ]
  %1601 = phi i32* [ %1629, %1622 ], [ %1584, %1579 ]
  %1602 = phi i64 [ %1619, %1622 ], [ %1555, %1579 ]
  %1603 = phi i64 [ %1620, %1622 ], [ %1577, %1579 ]
  %1604 = phi i32** [ %1623, %1622 ], [ %1549, %1579 ]
  %1605 = icmp eq i8 %1599, %1538
  br i1 %1605, label %1606, label %1618

1606:                                             ; preds = %1598
  %1607 = lshr i64 %1602, 18
  %1608 = and i64 %1602, 262143
  %1609 = getelementptr inbounds i32*, i32** %1604, i64 %1607
  %1610 = load i32*, i32** %1609, align 8
  %1611 = getelementptr inbounds i32, i32* %1610, i64 %1608
  %1612 = load i32, i32* %1611, align 4
  store i32 %1612, i32* %1601, align 4
  %1613 = load i32**, i32*** %1539, align 8
  %1614 = getelementptr inbounds i32*, i32** %1613, i64 %1607
  %1615 = load i32*, i32** %1614, align 8
  %1616 = getelementptr inbounds i32, i32* %1615, i64 %1608
  store i32 %1600, i32* %1616, align 4
  %1617 = add i64 %1602, 1
  br label %1618

1618:                                             ; preds = %1606, %1598
  %1619 = phi i64 [ %1617, %1606 ], [ %1602, %1598 ]
  %1620 = add nuw i64 %1603, 1
  %1621 = icmp ult i64 %1620, %1546
  br i1 %1621, label %1622, label %1643

1622:                                             ; preds = %1618
  %1623 = load i32**, i32*** %1539, align 8
  %1624 = load i32**, i32*** %63, align 8
  %1625 = lshr i64 %1620, 18
  %1626 = and i64 %1620, 262143
  %1627 = getelementptr inbounds i32*, i32** %1623, i64 %1625
  %1628 = load i32*, i32** %1627, align 8
  %1629 = getelementptr inbounds i32, i32* %1628, i64 %1626
  %1630 = load i32, i32* %1629, align 4
  %1631 = sext i32 %1630 to i64
  %1632 = add i64 %1631, %2
  %1633 = lshr i64 %1632, 18
  %1634 = and i64 %1632, 262143
  %1635 = getelementptr inbounds i32*, i32** %1624, i64 %1633
  %1636 = load i32*, i32** %1635, align 8
  %1637 = getelementptr inbounds i32, i32* %1636, i64 %1634
  %1638 = load i32, i32* %1637, align 4
  %1639 = sext i32 %1638 to i64
  %1640 = getelementptr inbounds i8, i8* %270, i64 %1639
  %1641 = load i8, i8* %1640, align 1
  %1642 = icmp ugt i8 %1641, %1538
  br i1 %1642, label %1643, label %1598

1643:                                             ; preds = %1551, %1618, %1622, %1579, %1512, %1576, %1574
  %1644 = phi i64 [ %1555, %1574 ], [ %1555, %1576 ], [ %1545, %1512 ], [ %1555, %1579 ], [ %1619, %1622 ], [ %1619, %1618 ], [ %1552, %1551 ]
  %1645 = phi i64 [ %1555, %1574 ], [ %1577, %1576 ], [ %1545, %1512 ], [ %1577, %1579 ], [ %1620, %1622 ], [ %1620, %1618 ], [ %1552, %1551 ]
  %1646 = add i64 %1546, -1
  %1647 = icmp ult i64 %1645, %1646
  br i1 %1647, label %1648, label %1744

1648:                                             ; preds = %1643
  %1649 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %854, i64 0, i32 0
  %1650 = load i32**, i32*** %1649, align 8
  %1651 = load i32**, i32*** %63, align 8
  br label %1655

1652:                                             ; preds = %1655
  %1653 = add i64 %1656, -1
  %1654 = icmp ult i64 %1645, %1653
  br i1 %1654, label %1655, label %1744

1655:                                             ; preds = %1648, %1652
  %1656 = phi i64 [ %1646, %1648 ], [ %1653, %1652 ]
  %1657 = lshr i64 %1656, 18
  %1658 = and i64 %1656, 262143
  %1659 = getelementptr inbounds i32*, i32** %1650, i64 %1657
  %1660 = load i32*, i32** %1659, align 8
  %1661 = getelementptr inbounds i32, i32* %1660, i64 %1658
  %1662 = load i32, i32* %1661, align 4
  %1663 = sext i32 %1662 to i64
  %1664 = add i64 %1663, %2
  %1665 = lshr i64 %1664, 18
  %1666 = and i64 %1664, 262143
  %1667 = getelementptr inbounds i32*, i32** %1651, i64 %1665
  %1668 = load i32*, i32** %1667, align 8
  %1669 = getelementptr inbounds i32, i32* %1668, i64 %1666
  %1670 = load i32, i32* %1669, align 4
  %1671 = sext i32 %1670 to i64
  %1672 = getelementptr inbounds i8, i8* %270, i64 %1671
  %1673 = load i8, i8* %1672, align 1
  %1674 = icmp eq i8 %1673, %1538
  br i1 %1674, label %1652, label %1675

1675:                                             ; preds = %1655
  %1676 = icmp ugt i8 %1673, %1538
  br i1 %1676, label %1677, label %1744

1677:                                             ; preds = %1675
  %1678 = add i64 %1656, -1
  %1679 = icmp ult i64 %1645, %1678
  br i1 %1679, label %1680, label %1744

1680:                                             ; preds = %1677
  %1681 = lshr i64 %1678, 18
  %1682 = and i64 %1678, 262143
  %1683 = getelementptr inbounds i32*, i32** %1650, i64 %1681
  %1684 = load i32*, i32** %1683, align 8
  %1685 = getelementptr inbounds i32, i32* %1684, i64 %1682
  %1686 = load i32, i32* %1685, align 4
  %1687 = sext i32 %1686 to i64
  %1688 = add i64 %1687, %2
  %1689 = lshr i64 %1688, 18
  %1690 = and i64 %1688, 262143
  %1691 = getelementptr inbounds i32*, i32** %1651, i64 %1689
  %1692 = load i32*, i32** %1691, align 8
  %1693 = getelementptr inbounds i32, i32* %1692, i64 %1690
  %1694 = load i32, i32* %1693, align 4
  %1695 = sext i32 %1694 to i64
  %1696 = getelementptr inbounds i8, i8* %270, i64 %1695
  %1697 = load i8, i8* %1696, align 1
  %1698 = icmp ult i8 %1697, %1538
  br i1 %1698, label %1744, label %1699

1699:                                             ; preds = %1680, %1723
  %1700 = phi i8 [ %1742, %1723 ], [ %1697, %1680 ]
  %1701 = phi i32 [ %1731, %1723 ], [ %1686, %1680 ]
  %1702 = phi i32* [ %1730, %1723 ], [ %1685, %1680 ]
  %1703 = phi i64 [ %1720, %1723 ], [ %1656, %1680 ]
  %1704 = phi i64 [ %1721, %1723 ], [ %1678, %1680 ]
  %1705 = phi i32** [ %1724, %1723 ], [ %1650, %1680 ]
  %1706 = icmp eq i8 %1700, %1538
  br i1 %1706, label %1707, label %1719

1707:                                             ; preds = %1699
  %1708 = lshr i64 %1703, 18
  %1709 = and i64 %1703, 262143
  %1710 = getelementptr inbounds i32*, i32** %1705, i64 %1708
  %1711 = load i32*, i32** %1710, align 8
  %1712 = getelementptr inbounds i32, i32* %1711, i64 %1709
  %1713 = load i32, i32* %1712, align 4
  store i32 %1713, i32* %1702, align 4
  %1714 = load i32**, i32*** %1649, align 8
  %1715 = getelementptr inbounds i32*, i32** %1714, i64 %1708
  %1716 = load i32*, i32** %1715, align 8
  %1717 = getelementptr inbounds i32, i32* %1716, i64 %1709
  store i32 %1701, i32* %1717, align 4
  %1718 = add i64 %1703, -1
  br label %1719

1719:                                             ; preds = %1707, %1699
  %1720 = phi i64 [ %1718, %1707 ], [ %1703, %1699 ]
  %1721 = add i64 %1704, -1
  %1722 = icmp ult i64 %1645, %1721
  br i1 %1722, label %1723, label %1744

1723:                                             ; preds = %1719
  %1724 = load i32**, i32*** %1649, align 8
  %1725 = load i32**, i32*** %63, align 8
  %1726 = lshr i64 %1721, 18
  %1727 = and i64 %1721, 262143
  %1728 = getelementptr inbounds i32*, i32** %1724, i64 %1726
  %1729 = load i32*, i32** %1728, align 8
  %1730 = getelementptr inbounds i32, i32* %1729, i64 %1727
  %1731 = load i32, i32* %1730, align 4
  %1732 = sext i32 %1731 to i64
  %1733 = add i64 %1732, %2
  %1734 = lshr i64 %1733, 18
  %1735 = and i64 %1733, 262143
  %1736 = getelementptr inbounds i32*, i32** %1725, i64 %1734
  %1737 = load i32*, i32** %1736, align 8
  %1738 = getelementptr inbounds i32, i32* %1737, i64 %1735
  %1739 = load i32, i32* %1738, align 4
  %1740 = sext i32 %1739 to i64
  %1741 = getelementptr inbounds i8, i8* %270, i64 %1740
  %1742 = load i8, i8* %1741, align 1
  %1743 = icmp ult i8 %1742, %1538
  br i1 %1743, label %1744, label %1699

1744:                                             ; preds = %1652, %1719, %1723, %1680, %1643, %1677, %1675
  %1745 = phi i64 [ %1656, %1675 ], [ %1678, %1677 ], [ %1646, %1643 ], [ %1678, %1680 ], [ %1721, %1723 ], [ %1721, %1719 ], [ %1653, %1652 ]
  %1746 = phi i64 [ %1656, %1675 ], [ %1656, %1677 ], [ %1646, %1643 ], [ %1656, %1680 ], [ %1720, %1723 ], [ %1720, %1719 ], [ %1653, %1652 ]
  %1747 = icmp ult i64 %1645, %1745
  br i1 %1747, label %1748, label %1866

1748:                                             ; preds = %1744
  %1749 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %854, i64 0, i32 0
  br label %1750

1750:                                             ; preds = %1748, %1862
  %1751 = phi i64 [ %1746, %1748 ], [ %1863, %1862 ]
  %1752 = phi i64 [ %1745, %1748 ], [ %1864, %1862 ]
  %1753 = phi i64 [ %1645, %1748 ], [ %1818, %1862 ]
  %1754 = phi i64 [ %1644, %1748 ], [ %1817, %1862 ]
  %1755 = lshr i64 %1753, 18
  %1756 = and i64 %1753, 262143
  %1757 = load i32**, i32*** %1539, align 8
  %1758 = getelementptr inbounds i32*, i32** %1757, i64 %1755
  %1759 = load i32*, i32** %1758, align 8
  %1760 = getelementptr inbounds i32, i32* %1759, i64 %1756
  %1761 = load i32, i32* %1760, align 4
  %1762 = lshr i64 %1752, 18
  %1763 = and i64 %1752, 262143
  %1764 = load i32**, i32*** %1749, align 8
  %1765 = getelementptr inbounds i32*, i32** %1764, i64 %1762
  %1766 = load i32*, i32** %1765, align 8
  %1767 = getelementptr inbounds i32, i32* %1766, i64 %1763
  %1768 = load i32, i32* %1767, align 4
  store i32 %1768, i32* %1760, align 4
  %1769 = load i32**, i32*** %1749, align 8
  %1770 = getelementptr inbounds i32*, i32** %1769, i64 %1762
  %1771 = load i32*, i32** %1770, align 8
  %1772 = getelementptr inbounds i32, i32* %1771, i64 %1763
  store i32 %1761, i32* %1772, align 4
  %1773 = add nuw i64 %1753, 1
  %1774 = icmp ult i64 %1773, %1752
  br i1 %1774, label %1775, label %1816

1775:                                             ; preds = %1750, %1812
  %1776 = phi i64 [ %1814, %1812 ], [ %1773, %1750 ]
  %1777 = phi i64 [ %1813, %1812 ], [ %1754, %1750 ]
  %1778 = lshr i64 %1776, 18
  %1779 = and i64 %1776, 262143
  %1780 = load i32**, i32*** %1539, align 8
  %1781 = getelementptr inbounds i32*, i32** %1780, i64 %1778
  %1782 = load i32*, i32** %1781, align 8
  %1783 = getelementptr inbounds i32, i32* %1782, i64 %1779
  %1784 = load i32, i32* %1783, align 4
  %1785 = sext i32 %1784 to i64
  %1786 = add i64 %1785, %2
  %1787 = lshr i64 %1786, 18
  %1788 = and i64 %1786, 262143
  %1789 = load i32**, i32*** %63, align 8
  %1790 = getelementptr inbounds i32*, i32** %1789, i64 %1787
  %1791 = load i32*, i32** %1790, align 8
  %1792 = getelementptr inbounds i32, i32* %1791, i64 %1788
  %1793 = load i32, i32* %1792, align 4
  %1794 = sext i32 %1793 to i64
  %1795 = getelementptr inbounds i8, i8* %270, i64 %1794
  %1796 = load i8, i8* %1795, align 1
  %1797 = icmp ugt i8 %1796, %1538
  br i1 %1797, label %1816, label %1798

1798:                                             ; preds = %1775
  %1799 = icmp eq i8 %1796, %1538
  br i1 %1799, label %1800, label %1812

1800:                                             ; preds = %1798
  %1801 = lshr i64 %1777, 18
  %1802 = and i64 %1777, 262143
  %1803 = getelementptr inbounds i32*, i32** %1780, i64 %1801
  %1804 = load i32*, i32** %1803, align 8
  %1805 = getelementptr inbounds i32, i32* %1804, i64 %1802
  %1806 = load i32, i32* %1805, align 4
  store i32 %1806, i32* %1783, align 4
  %1807 = load i32**, i32*** %1539, align 8
  %1808 = getelementptr inbounds i32*, i32** %1807, i64 %1801
  %1809 = load i32*, i32** %1808, align 8
  %1810 = getelementptr inbounds i32, i32* %1809, i64 %1802
  store i32 %1784, i32* %1810, align 4
  %1811 = add i64 %1777, 1
  br label %1812

1812:                                             ; preds = %1800, %1798
  %1813 = phi i64 [ %1811, %1800 ], [ %1777, %1798 ]
  %1814 = add i64 %1776, 1
  %1815 = icmp eq i64 %1814, %1752
  br i1 %1815, label %1816, label %1775

1816:                                             ; preds = %1812, %1775, %1750
  %1817 = phi i64 [ %1754, %1750 ], [ %1813, %1812 ], [ %1777, %1775 ]
  %1818 = phi i64 [ %1773, %1750 ], [ %1752, %1812 ], [ %1776, %1775 ]
  %1819 = add i64 %1752, -1
  %1820 = icmp ult i64 %1818, %1819
  br i1 %1820, label %1821, label %1862

1821:                                             ; preds = %1816, %1858
  %1822 = phi i64 [ %1860, %1858 ], [ %1819, %1816 ]
  %1823 = phi i64 [ %1859, %1858 ], [ %1751, %1816 ]
  %1824 = lshr i64 %1822, 18
  %1825 = and i64 %1822, 262143
  %1826 = load i32**, i32*** %1749, align 8
  %1827 = getelementptr inbounds i32*, i32** %1826, i64 %1824
  %1828 = load i32*, i32** %1827, align 8
  %1829 = getelementptr inbounds i32, i32* %1828, i64 %1825
  %1830 = load i32, i32* %1829, align 4
  %1831 = sext i32 %1830 to i64
  %1832 = add i64 %1831, %2
  %1833 = lshr i64 %1832, 18
  %1834 = and i64 %1832, 262143
  %1835 = load i32**, i32*** %63, align 8
  %1836 = getelementptr inbounds i32*, i32** %1835, i64 %1833
  %1837 = load i32*, i32** %1836, align 8
  %1838 = getelementptr inbounds i32, i32* %1837, i64 %1834
  %1839 = load i32, i32* %1838, align 4
  %1840 = sext i32 %1839 to i64
  %1841 = getelementptr inbounds i8, i8* %270, i64 %1840
  %1842 = load i8, i8* %1841, align 1
  %1843 = icmp ult i8 %1842, %1538
  br i1 %1843, label %1862, label %1844

1844:                                             ; preds = %1821
  %1845 = icmp eq i8 %1842, %1538
  br i1 %1845, label %1846, label %1858

1846:                                             ; preds = %1844
  %1847 = lshr i64 %1823, 18
  %1848 = and i64 %1823, 262143
  %1849 = getelementptr inbounds i32*, i32** %1826, i64 %1847
  %1850 = load i32*, i32** %1849, align 8
  %1851 = getelementptr inbounds i32, i32* %1850, i64 %1848
  %1852 = load i32, i32* %1851, align 4
  store i32 %1852, i32* %1829, align 4
  %1853 = load i32**, i32*** %1749, align 8
  %1854 = getelementptr inbounds i32*, i32** %1853, i64 %1847
  %1855 = load i32*, i32** %1854, align 8
  %1856 = getelementptr inbounds i32, i32* %1855, i64 %1848
  store i32 %1830, i32* %1856, align 4
  %1857 = add i64 %1823, -1
  br label %1858

1858:                                             ; preds = %1846, %1844
  %1859 = phi i64 [ %1857, %1846 ], [ %1823, %1844 ]
  %1860 = add i64 %1822, -1
  %1861 = icmp ult i64 %1818, %1860
  br i1 %1861, label %1821, label %1862

1862:                                             ; preds = %1858, %1821, %1816
  %1863 = phi i64 [ %1751, %1816 ], [ %1859, %1858 ], [ %1823, %1821 ]
  %1864 = phi i64 [ %1819, %1816 ], [ %1860, %1858 ], [ %1822, %1821 ]
  %1865 = icmp ult i64 %1818, %1864
  br i1 %1865, label %1750, label %1866

1866:                                             ; preds = %1862, %1744
  %1867 = phi i64 [ %1644, %1744 ], [ %1817, %1862 ]
  %1868 = phi i64 [ %1645, %1744 ], [ %1818, %1862 ]
  %1869 = phi i64 [ %1746, %1744 ], [ %1863, %1862 ]
  %1870 = icmp ugt i64 %1867, %1869
  br i1 %1870, label %2156, label %1871

1871:                                             ; preds = %1866
  %1872 = sub i64 %1867, %263
  %1873 = trunc i64 %1872 to i32
  %1874 = sub i64 %1868, %1867
  %1875 = trunc i64 %1874 to i32
  %1876 = icmp sgt i32 %1873, %1875
  %1877 = select i1 %1876, i32 %1875, i32 %1873
  %1878 = icmp sgt i32 %1877, 0
  br i1 %1878, label %1879, label %1907

1879:                                             ; preds = %1871
  %1880 = sext i32 %1877 to i64
  %1881 = sub i64 %1868, %1880
  br label %1882

1882:                                             ; preds = %1879, %1882
  %1883 = phi i32 [ %1903, %1882 ], [ %1877, %1879 ]
  %1884 = phi i64 [ %1905, %1882 ], [ %1881, %1879 ]
  %1885 = phi i64 [ %1904, %1882 ], [ %263, %1879 ]
  %1886 = lshr i64 %1885, 18
  %1887 = and i64 %1885, 262143
  %1888 = load i32**, i32*** %1539, align 8
  %1889 = getelementptr inbounds i32*, i32** %1888, i64 %1886
  %1890 = load i32*, i32** %1889, align 8
  %1891 = getelementptr inbounds i32, i32* %1890, i64 %1887
  %1892 = load i32, i32* %1891, align 4
  %1893 = lshr i64 %1884, 18
  %1894 = and i64 %1884, 262143
  %1895 = getelementptr inbounds i32*, i32** %1888, i64 %1893
  %1896 = load i32*, i32** %1895, align 8
  %1897 = getelementptr inbounds i32, i32* %1896, i64 %1894
  %1898 = load i32, i32* %1897, align 4
  store i32 %1898, i32* %1891, align 4
  %1899 = load i32**, i32*** %1539, align 8
  %1900 = getelementptr inbounds i32*, i32** %1899, i64 %1893
  %1901 = load i32*, i32** %1900, align 8
  %1902 = getelementptr inbounds i32, i32* %1901, i64 %1894
  store i32 %1892, i32* %1902, align 4
  %1903 = add nsw i32 %1883, -1
  %1904 = add i64 %1885, 1
  %1905 = add i64 %1884, 1
  %1906 = icmp sgt i32 %1903, 0
  br i1 %1906, label %1882, label %1907

1907:                                             ; preds = %1882, %1871
  %1908 = sub i64 1, %1868
  %1909 = add i64 %1908, %1869
  %1910 = trunc i64 %1909 to i32
  %1911 = sub i64 %1546, %1869
  %1912 = trunc i64 %1911 to i32
  %1913 = add i32 %1912, -1
  %1914 = icmp slt i32 %1913, %1910
  %1915 = select i1 %1914, i32 %1913, i32 %1910
  %1916 = icmp sgt i32 %1915, 0
  br i1 %1916, label %1917, label %1947

1917:                                             ; preds = %1907
  %1918 = sext i32 %1915 to i64
  %1919 = sub i64 %1546, %1918
  %1920 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %854, i64 0, i32 0
  br label %1921

1921:                                             ; preds = %1917, %1921
  %1922 = phi i32 [ %1915, %1917 ], [ %1943, %1921 ]
  %1923 = phi i64 [ %1919, %1917 ], [ %1945, %1921 ]
  %1924 = phi i64 [ %1868, %1917 ], [ %1944, %1921 ]
  %1925 = lshr i64 %1924, 18
  %1926 = and i64 %1924, 262143
  %1927 = load i32**, i32*** %1539, align 8
  %1928 = getelementptr inbounds i32*, i32** %1927, i64 %1925
  %1929 = load i32*, i32** %1928, align 8
  %1930 = getelementptr inbounds i32, i32* %1929, i64 %1926
  %1931 = load i32, i32* %1930, align 4
  %1932 = lshr i64 %1923, 18
  %1933 = and i64 %1923, 262143
  %1934 = load i32**, i32*** %1920, align 8
  %1935 = getelementptr inbounds i32*, i32** %1934, i64 %1932
  %1936 = load i32*, i32** %1935, align 8
  %1937 = getelementptr inbounds i32, i32* %1936, i64 %1933
  %1938 = load i32, i32* %1937, align 4
  store i32 %1938, i32* %1930, align 4
  %1939 = load i32**, i32*** %1920, align 8
  %1940 = getelementptr inbounds i32*, i32** %1939, i64 %1932
  %1941 = load i32*, i32** %1940, align 8
  %1942 = getelementptr inbounds i32, i32* %1941, i64 %1933
  store i32 %1931, i32* %1942, align 4
  %1943 = add nsw i32 %1922, -1
  %1944 = add i64 %1924, 1
  %1945 = add i64 %1923, 1
  %1946 = icmp sgt i32 %1943, 0
  br i1 %1946, label %1921, label %1947

1947:                                             ; preds = %1921, %1907
  %1948 = add i64 %1874, %263
  %1949 = sub i64 %1546, %1909
  %1950 = lshr i64 %1948, 18
  %1951 = and i64 %1948, 262143
  %1952 = load i32**, i32*** %1539, align 8
  %1953 = getelementptr inbounds i32*, i32** %1952, i64 %1950
  %1954 = load i32*, i32** %1953, align 8
  %1955 = getelementptr inbounds i32, i32* %1954, i64 %1951
  %1956 = load i32, i32* %1955, align 4
  %1957 = sext i32 %1956 to i64
  %1958 = add i64 %1957, %2
  %1959 = lshr i64 %1958, 18
  %1960 = and i64 %1958, 262143
  %1961 = load i32**, i32*** %63, align 8
  %1962 = getelementptr inbounds i32*, i32** %1961, i64 %1959
  %1963 = load i32*, i32** %1962, align 8
  %1964 = getelementptr inbounds i32, i32* %1963, i64 %1960
  %1965 = load i32, i32* %1964, align 4
  %1966 = add nsw i32 %1965, -1
  %1967 = sext i32 %1966 to i64
  %1968 = getelementptr inbounds i8, i8* %270, i64 %1967
  %1969 = load i8, i8* %1968, align 1
  %1970 = icmp ugt i8 %1538, %1969
  br i1 %1970, label %1971, label %1975

1971:                                             ; preds = %1947
  %1972 = call fastcc { %"class.courgette::PagedArray"*, i64 } @_ZN6divsuf12_GLOBAL__N_112ss_partitionEN9courgette19PagedArray_iteratorIKNS1_10PagedArrayIiLi18EEEKiEENS2_IS4_iEES8_i(%"class.courgette::PagedArray"* %1, i64 %2, %"class.courgette::PagedArray"* %264, i64 %1948, %"class.courgette::PagedArray"* %854, i64 %1949, i32 %267)
  %1973 = extractvalue { %"class.courgette::PagedArray"*, i64 } %1972, 0
  %1974 = extractvalue { %"class.courgette::PagedArray"*, i64 } %1972, 1
  br label %1975

1975:                                             ; preds = %1947, %1971
  %1976 = phi %"class.courgette::PagedArray"* [ %1973, %1971 ], [ %264, %1947 ]
  %1977 = phi i64 [ %1974, %1971 ], [ %1948, %1947 ]
  %1978 = icmp sgt i64 %1874, %1909
  %1979 = sub i64 %1949, %1977
  br i1 %1978, label %2068, label %1980

1980:                                             ; preds = %1975
  %1981 = icmp sgt i64 %1909, %1979
  br i1 %1981, label %2014, label %1982

1982:                                             ; preds = %1980
  %1983 = sext i32 %266 to i64
  %1984 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %1983, i32 0, i32 0
  store %"class.courgette::PagedArray"* %1976, %"class.courgette::PagedArray"** %1984, align 8
  %1985 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %1983, i32 0, i32 1
  store i64 %1977, i64* %1985, align 8
  %1986 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %1983, i32 1, i32 0
  store %"class.courgette::PagedArray"* %854, %"class.courgette::PagedArray"** %1986, align 8
  %1987 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %1983, i32 1, i32 1
  store i64 %1949, i64* %1987, align 8
  %1988 = add nsw i32 %267, 1
  %1989 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %1983, i32 2
  store i32 %1988, i32* %1989, align 8
  %1990 = and i64 %1979, 65280
  %1991 = icmp eq i64 %1990, 0
  br i1 %1991, label %1998, label %1992

1992:                                             ; preds = %1982
  %1993 = lshr i64 %1979, 8
  %1994 = and i64 %1993, 255
  %1995 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %1994
  %1996 = load i32, i32* %1995, align 4
  %1997 = add nsw i32 %1996, 8
  br label %2002

1998:                                             ; preds = %1982
  %1999 = and i64 %1979, 255
  %2000 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %1999
  %2001 = load i32, i32* %2000, align 4
  br label %2002

2002:                                             ; preds = %1992, %1998
  %2003 = phi i32 [ %1997, %1992 ], [ %2001, %1998 ]
  %2004 = add nsw i32 %266, 1
  %2005 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %1983, i32 3
  store i32 %2003, i32* %2005, align 4
  %2006 = sext i32 %2004 to i64
  %2007 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2006, i32 0, i32 0
  store %"class.courgette::PagedArray"* %854, %"class.courgette::PagedArray"** %2007, align 8
  %2008 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2006, i32 0, i32 1
  store i64 %1949, i64* %2008, align 8
  %2009 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2006, i32 1
  %2010 = bitcast %"class.courgette::PagedArray_iterator.0"* %2009 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2010, i8* nonnull align 8 %65, i64 16, i1 false)
  %2011 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2006, i32 2
  store i32 %267, i32* %2011, align 8
  %2012 = add nsw i32 %266, 2
  %2013 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2006, i32 3
  store i32 %271, i32* %2013, align 4
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %62, align 8
  store i64 %1948, i64* %45, align 8
  br label %2198

2014:                                             ; preds = %1980
  %2015 = icmp sgt i64 %1874, %1979
  %2016 = sext i32 %266 to i64
  %2017 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2016, i32 0, i32 0
  store %"class.courgette::PagedArray"* %854, %"class.courgette::PagedArray"** %2017, align 8
  %2018 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2016, i32 0, i32 1
  store i64 %1949, i64* %2018, align 8
  %2019 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2016, i32 1
  %2020 = bitcast %"class.courgette::PagedArray_iterator.0"* %2019 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2020, i8* nonnull align 8 %65, i64 16, i1 false)
  %2021 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2016, i32 2
  store i32 %267, i32* %2021, align 8
  %2022 = add nsw i32 %266, 1
  %2023 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2016, i32 3
  store i32 %271, i32* %2023, align 4
  %2024 = sext i32 %2022 to i64
  %2025 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2024, i32 0, i32 0
  br i1 %2015, label %2048, label %2026

2026:                                             ; preds = %2014
  store %"class.courgette::PagedArray"* %1976, %"class.courgette::PagedArray"** %2025, align 8
  %2027 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2024, i32 0, i32 1
  store i64 %1977, i64* %2027, align 8
  %2028 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2024, i32 1, i32 0
  store %"class.courgette::PagedArray"* %854, %"class.courgette::PagedArray"** %2028, align 8
  %2029 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2024, i32 1, i32 1
  store i64 %1949, i64* %2029, align 8
  %2030 = add nsw i32 %267, 1
  %2031 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2024, i32 2
  store i32 %2030, i32* %2031, align 8
  %2032 = and i64 %1979, 65280
  %2033 = icmp eq i64 %2032, 0
  br i1 %2033, label %2040, label %2034

2034:                                             ; preds = %2026
  %2035 = lshr i64 %1979, 8
  %2036 = and i64 %2035, 255
  %2037 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2036
  %2038 = load i32, i32* %2037, align 4
  %2039 = add nsw i32 %2038, 8
  br label %2044

2040:                                             ; preds = %2026
  %2041 = and i64 %1979, 255
  %2042 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2041
  %2043 = load i32, i32* %2042, align 4
  br label %2044

2044:                                             ; preds = %2034, %2040
  %2045 = phi i32 [ %2039, %2034 ], [ %2043, %2040 ]
  %2046 = add nsw i32 %266, 2
  %2047 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2024, i32 3
  store i32 %2045, i32* %2047, align 4
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %62, align 8
  store i64 %1948, i64* %45, align 8
  br label %2198

2048:                                             ; preds = %2014
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %2025, align 8
  %2049 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2024, i32 0, i32 1
  store i64 %263, i64* %2049, align 8
  %2050 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2024, i32 1, i32 0
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %2050, align 8
  %2051 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2024, i32 1, i32 1
  store i64 %1948, i64* %2051, align 8
  %2052 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2024, i32 2
  store i32 %267, i32* %2052, align 8
  %2053 = add nsw i32 %266, 2
  %2054 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2024, i32 3
  store i32 %271, i32* %2054, align 4
  store i64 %1949, i64* %45, align 8
  %2055 = add nsw i32 %267, 1
  %2056 = and i64 %1979, 65280
  %2057 = icmp eq i64 %2056, 0
  br i1 %2057, label %2064, label %2058

2058:                                             ; preds = %2048
  %2059 = lshr i64 %1979, 8
  %2060 = and i64 %2059, 255
  %2061 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2060
  %2062 = load i32, i32* %2061, align 4
  %2063 = add nsw i32 %2062, 8
  br label %2198

2064:                                             ; preds = %2048
  %2065 = and i64 %1979, 255
  %2066 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2065
  %2067 = load i32, i32* %2066, align 4
  br label %2198

2068:                                             ; preds = %1975
  %2069 = icmp sgt i64 %1874, %1979
  br i1 %2069, label %2102, label %2070

2070:                                             ; preds = %2068
  %2071 = sext i32 %266 to i64
  %2072 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2071, i32 0, i32 0
  store %"class.courgette::PagedArray"* %1976, %"class.courgette::PagedArray"** %2072, align 8
  %2073 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2071, i32 0, i32 1
  store i64 %1977, i64* %2073, align 8
  %2074 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2071, i32 1, i32 0
  store %"class.courgette::PagedArray"* %854, %"class.courgette::PagedArray"** %2074, align 8
  %2075 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2071, i32 1, i32 1
  store i64 %1949, i64* %2075, align 8
  %2076 = add nsw i32 %267, 1
  %2077 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2071, i32 2
  store i32 %2076, i32* %2077, align 8
  %2078 = and i64 %1979, 65280
  %2079 = icmp eq i64 %2078, 0
  br i1 %2079, label %2086, label %2080

2080:                                             ; preds = %2070
  %2081 = lshr i64 %1979, 8
  %2082 = and i64 %2081, 255
  %2083 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2082
  %2084 = load i32, i32* %2083, align 4
  %2085 = add nsw i32 %2084, 8
  br label %2090

2086:                                             ; preds = %2070
  %2087 = and i64 %1979, 255
  %2088 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2087
  %2089 = load i32, i32* %2088, align 4
  br label %2090

2090:                                             ; preds = %2080, %2086
  %2091 = phi i32 [ %2085, %2080 ], [ %2089, %2086 ]
  %2092 = add nsw i32 %266, 1
  %2093 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2071, i32 3
  store i32 %2091, i32* %2093, align 4
  %2094 = sext i32 %2092 to i64
  %2095 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2094, i32 0, i32 0
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %2095, align 8
  %2096 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2094, i32 0, i32 1
  store i64 %263, i64* %2096, align 8
  %2097 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2094, i32 1, i32 0
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %2097, align 8
  %2098 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2094, i32 1, i32 1
  store i64 %1948, i64* %2098, align 8
  %2099 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2094, i32 2
  store i32 %267, i32* %2099, align 8
  %2100 = add nsw i32 %266, 2
  %2101 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2094, i32 3
  store i32 %271, i32* %2101, align 4
  br label %2198

2102:                                             ; preds = %2068
  %2103 = icmp sgt i64 %1909, %1979
  %2104 = sext i32 %266 to i64
  %2105 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2104, i32 0, i32 0
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %2105, align 8
  %2106 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2104, i32 0, i32 1
  store i64 %263, i64* %2106, align 8
  %2107 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2104, i32 1, i32 0
  store %"class.courgette::PagedArray"* %264, %"class.courgette::PagedArray"** %2107, align 8
  %2108 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2104, i32 1, i32 1
  store i64 %1948, i64* %2108, align 8
  %2109 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2104, i32 2
  store i32 %267, i32* %2109, align 8
  %2110 = add nsw i32 %266, 1
  %2111 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2104, i32 3
  store i32 %271, i32* %2111, align 4
  %2112 = sext i32 %2110 to i64
  %2113 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2112, i32 0, i32 0
  br i1 %2103, label %2136, label %2114

2114:                                             ; preds = %2102
  store %"class.courgette::PagedArray"* %1976, %"class.courgette::PagedArray"** %2113, align 8
  %2115 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2112, i32 0, i32 1
  store i64 %1977, i64* %2115, align 8
  %2116 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2112, i32 1, i32 0
  store %"class.courgette::PagedArray"* %854, %"class.courgette::PagedArray"** %2116, align 8
  %2117 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2112, i32 1, i32 1
  store i64 %1949, i64* %2117, align 8
  %2118 = add nsw i32 %267, 1
  %2119 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2112, i32 2
  store i32 %2118, i32* %2119, align 8
  %2120 = and i64 %1979, 65280
  %2121 = icmp eq i64 %2120, 0
  br i1 %2121, label %2128, label %2122

2122:                                             ; preds = %2114
  %2123 = lshr i64 %1979, 8
  %2124 = and i64 %2123, 255
  %2125 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2124
  %2126 = load i32, i32* %2125, align 4
  %2127 = add nsw i32 %2126, 8
  br label %2132

2128:                                             ; preds = %2114
  %2129 = and i64 %1979, 255
  %2130 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2129
  %2131 = load i32, i32* %2130, align 4
  br label %2132

2132:                                             ; preds = %2122, %2128
  %2133 = phi i32 [ %2127, %2122 ], [ %2131, %2128 ]
  %2134 = add nsw i32 %266, 2
  %2135 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2112, i32 3
  store i32 %2133, i32* %2135, align 4
  br label %2198

2136:                                             ; preds = %2102
  store %"class.courgette::PagedArray"* %854, %"class.courgette::PagedArray"** %2113, align 8
  %2137 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2112, i32 0, i32 1
  store i64 %1949, i64* %2137, align 8
  %2138 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2112, i32 1
  %2139 = bitcast %"class.courgette::PagedArray_iterator.0"* %2138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2139, i8* nonnull align 8 %65, i64 16, i1 false)
  %2140 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2112, i32 2
  store i32 %267, i32* %2140, align 8
  %2141 = add nsw i32 %266, 2
  %2142 = getelementptr inbounds [16 x %struct.anon], [16 x %struct.anon]* %10, i64 0, i64 %2112, i32 3
  store i32 %271, i32* %2142, align 4
  store i64 %1949, i64* %45, align 8
  %2143 = add nsw i32 %267, 1
  %2144 = and i64 %1979, 65280
  %2145 = icmp eq i64 %2144, 0
  br i1 %2145, label %2152, label %2146

2146:                                             ; preds = %2136
  %2147 = lshr i64 %1979, 8
  %2148 = and i64 %2147, 255
  %2149 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2148
  %2150 = load i32, i32* %2149, align 4
  %2151 = add nsw i32 %2150, 8
  br label %2198

2152:                                             ; preds = %2136
  %2153 = and i64 %1979, 255
  %2154 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2153
  %2155 = load i32, i32* %2154, align 4
  br label %2198

2156:                                             ; preds = %1866
  %2157 = load i32**, i32*** %1539, align 8
  %2158 = getelementptr inbounds i32*, i32** %2157, i64 %1516
  %2159 = load i32*, i32** %2158, align 8
  %2160 = getelementptr inbounds i32, i32* %2159, i64 %1515
  %2161 = load i32, i32* %2160, align 4
  %2162 = sext i32 %2161 to i64
  %2163 = add i64 %2162, %2
  %2164 = lshr i64 %2163, 18
  %2165 = and i64 %2163, 262143
  %2166 = load i32**, i32*** %63, align 8
  %2167 = getelementptr inbounds i32*, i32** %2166, i64 %2164
  %2168 = load i32*, i32** %2167, align 8
  %2169 = getelementptr inbounds i32, i32* %2168, i64 %2165
  %2170 = load i32, i32* %2169, align 4
  %2171 = add nsw i32 %2170, -1
  %2172 = sext i32 %2171 to i64
  %2173 = getelementptr inbounds i8, i8* %270, i64 %2172
  %2174 = load i8, i8* %2173, align 1
  %2175 = icmp ult i8 %2174, %1538
  br i1 %2175, label %2176, label %2193

2176:                                             ; preds = %2156
  %2177 = call fastcc { %"class.courgette::PagedArray"*, i64 } @_ZN6divsuf12_GLOBAL__N_112ss_partitionEN9courgette19PagedArray_iteratorIKNS1_10PagedArrayIiLi18EEEKiEENS2_IS4_iEES8_i(%"class.courgette::PagedArray"* %1, i64 %2, %"class.courgette::PagedArray"* %264, i64 %263, %"class.courgette::PagedArray"* %854, i64 %1546, i32 %267)
  %2178 = extractvalue { %"class.courgette::PagedArray"*, i64 } %2177, 0
  %2179 = extractvalue { %"class.courgette::PagedArray"*, i64 } %2177, 1
  %2180 = sub i64 %1546, %2179
  %2181 = and i64 %2180, 65280
  %2182 = icmp eq i64 %2181, 0
  br i1 %2182, label %2189, label %2183

2183:                                             ; preds = %2176
  %2184 = lshr i64 %2180, 8
  %2185 = and i64 %2184, 255
  %2186 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2185
  %2187 = load i32, i32* %2186, align 4
  %2188 = add nsw i32 %2187, 8
  br label %2193

2189:                                             ; preds = %2176
  %2190 = and i64 %2180, 255
  %2191 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2190
  %2192 = load i32, i32* %2191, align 4
  br label %2193

2193:                                             ; preds = %2189, %2183, %2156
  %2194 = phi i64 [ %263, %2156 ], [ %2179, %2183 ], [ %2179, %2189 ]
  %2195 = phi %"class.courgette::PagedArray"* [ %264, %2156 ], [ %2178, %2183 ], [ %2178, %2189 ]
  %2196 = phi i32 [ %265, %2156 ], [ %2188, %2183 ], [ %2192, %2189 ]
  %2197 = add nsw i32 %267, 1
  br label %2198

2198:                                             ; preds = %2193, %2090, %2132, %2002, %2044, %2058, %2064, %2146, %2152, %835, %803, %809, %789, %843, %849
  %2199 = phi i64 [ %717, %835 ], [ %756, %803 ], [ %756, %809 ], [ %717, %789 ], [ %756, %843 ], [ %756, %849 ], [ %1546, %2132 ], [ %1546, %2090 ], [ %1948, %2044 ], [ %1948, %2002 ], [ %1546, %2193 ], [ %1949, %2058 ], [ %1949, %2064 ], [ %1949, %2146 ], [ %1949, %2152 ]
  %2200 = phi i64 [ %756, %835 ], [ %784, %803 ], [ %784, %809 ], [ %756, %789 ], [ %784, %843 ], [ %784, %849 ], [ %1949, %2132 ], [ %1949, %2090 ], [ %263, %2044 ], [ %263, %2002 ], [ %2194, %2193 ], [ %1977, %2058 ], [ %1977, %2064 ], [ %1977, %2146 ], [ %1977, %2152 ]
  %2201 = phi %"class.courgette::PagedArray"* [ %264, %835 ], [ %785, %803 ], [ %785, %809 ], [ %264, %789 ], [ %785, %843 ], [ %785, %849 ], [ %854, %2132 ], [ %854, %2090 ], [ %264, %2044 ], [ %264, %2002 ], [ %2195, %2193 ], [ %1976, %2058 ], [ %1976, %2064 ], [ %1976, %2146 ], [ %1976, %2152 ]
  %2202 = phi i32 [ -1, %835 ], [ %808, %803 ], [ %812, %809 ], [ -1, %789 ], [ %848, %843 ], [ %852, %849 ], [ %271, %2132 ], [ %271, %2090 ], [ %271, %2044 ], [ %271, %2002 ], [ %2196, %2193 ], [ %2063, %2058 ], [ %2067, %2064 ], [ %2151, %2146 ], [ %2155, %2152 ]
  %2203 = phi i32 [ %837, %835 ], [ %798, %803 ], [ %798, %809 ], [ %266, %789 ], [ %266, %843 ], [ %266, %849 ], [ %2134, %2132 ], [ %2100, %2090 ], [ %2046, %2044 ], [ %2012, %2002 ], [ %266, %2193 ], [ %2053, %2058 ], [ %2053, %2064 ], [ %2141, %2146 ], [ %2141, %2152 ]
  %2204 = phi i32 [ %267, %835 ], [ %800, %803 ], [ %800, %809 ], [ %267, %789 ], [ %840, %843 ], [ %840, %849 ], [ %267, %2132 ], [ %267, %2090 ], [ %267, %2044 ], [ %267, %2002 ], [ %2197, %2193 ], [ %2055, %2058 ], [ %2055, %2064 ], [ %2143, %2146 ], [ %2143, %2152 ]
  br label %74
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6divsuf12_GLOBAL__N_112ss_swapmergeEPKhN9courgette19PagedArray_iteratorIKNS3_10PagedArrayIiLi18EEEKiEENS4_IS6_iEESA_SA_SA_ii(i8* readonly, %"class.courgette::PagedArray"*, i64, %"class.courgette::PagedArray"*, i64, %"class.courgette::PagedArray_iterator.0"* byval(%"class.courgette::PagedArray_iterator.0") align 8, %"class.courgette::PagedArray_iterator.0"* byval(%"class.courgette::PagedArray_iterator.0") align 8, %"class.courgette::PagedArray_iterator.0"* nocapture readonly byval(%"class.courgette::PagedArray_iterator.0") align 8, i32, i32) unnamed_addr #0 {
  %11 = alloca [32 x %struct.anon.1], align 16
  %12 = bitcast [32 x %struct.anon.1]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1792, i8* nonnull %12) #3
  %13 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 0, i32 3
  %14 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 1744, i1 false)
  %15 = bitcast [32 x %struct.anon.1]* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 0, i64 48, i1 false) #3
  %16 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 1
  %17 = bitcast %struct.anon.1* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 48, i1 false) #3
  %18 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 2
  %19 = bitcast %struct.anon.1* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %19, i8 0, i64 48, i1 false) #3
  %20 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 3
  %21 = bitcast %struct.anon.1* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 48, i1 false) #3
  %22 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 4
  %23 = bitcast %struct.anon.1* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %23, i8 0, i64 48, i1 false) #3
  %24 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 5
  %25 = bitcast %struct.anon.1* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 48, i1 false) #3
  %26 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 6
  %27 = bitcast %struct.anon.1* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %27, i8 0, i64 48, i1 false) #3
  %28 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 7
  %29 = bitcast %struct.anon.1* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 48, i1 false) #3
  %30 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 8
  %31 = bitcast %struct.anon.1* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %31, i8 0, i64 48, i1 false) #3
  %32 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 9
  %33 = bitcast %struct.anon.1* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 48, i1 false) #3
  %34 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 10
  %35 = bitcast %struct.anon.1* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %35, i8 0, i64 48, i1 false) #3
  %36 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 11
  %37 = bitcast %struct.anon.1* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 48, i1 false) #3
  %38 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 12
  %39 = bitcast %struct.anon.1* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %39, i8 0, i64 48, i1 false) #3
  %40 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 13
  %41 = bitcast %struct.anon.1* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 48, i1 false) #3
  %42 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 14
  %43 = bitcast %struct.anon.1* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %43, i8 0, i64 48, i1 false) #3
  %44 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 15
  %45 = bitcast %struct.anon.1* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 48, i1 false) #3
  %46 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 16
  %47 = bitcast %struct.anon.1* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %47, i8 0, i64 48, i1 false) #3
  %48 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 17
  %49 = bitcast %struct.anon.1* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 48, i1 false) #3
  %50 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 18
  %51 = bitcast %struct.anon.1* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %51, i8 0, i64 48, i1 false) #3
  %52 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 19
  %53 = bitcast %struct.anon.1* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 48, i1 false) #3
  %54 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 20
  %55 = bitcast %struct.anon.1* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %55, i8 0, i64 48, i1 false) #3
  %56 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 21
  %57 = bitcast %struct.anon.1* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 48, i1 false) #3
  %58 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 22
  %59 = bitcast %struct.anon.1* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %59, i8 0, i64 48, i1 false) #3
  %60 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 23
  %61 = bitcast %struct.anon.1* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 48, i1 false) #3
  %62 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 24
  %63 = bitcast %struct.anon.1* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %63, i8 0, i64 48, i1 false) #3
  %64 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 25
  %65 = bitcast %struct.anon.1* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 48, i1 false) #3
  %66 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 26
  %67 = bitcast %struct.anon.1* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %67, i8 0, i64 48, i1 false) #3
  %68 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 27
  %69 = bitcast %struct.anon.1* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 48, i1 false) #3
  %70 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 28
  %71 = bitcast %struct.anon.1* %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %71, i8 0, i64 48, i1 false) #3
  %72 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 29
  %73 = bitcast %struct.anon.1* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 48, i1 false) #3
  %74 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 30
  %75 = bitcast %struct.anon.1* %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %75, i8 0, i64 48, i1 false) #3
  %76 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 31
  %77 = bitcast %struct.anon.1* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 48, i1 false) #3
  %78 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %6, i64 0, i32 1
  %79 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %5, i64 0, i32 1
  %80 = sext i32 %8 to i64
  %81 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %5, i64 0, i32 0
  %82 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %6, i64 0, i32 0
  %83 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %7, i64 0, i32 0
  %84 = getelementptr inbounds %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator.0"* %7, i64 0, i32 1
  %85 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1, i64 0, i32 0
  %86 = sext i32 %9 to i64
  %87 = getelementptr inbounds i8, i8* %0, i64 %86
  %88 = getelementptr inbounds i8, i8* %0, i64 2
  %89 = bitcast %"class.courgette::PagedArray_iterator.0"* %5 to i8*
  %90 = bitcast %"class.courgette::PagedArray_iterator.0"* %6 to i8*
  br label %91

91:                                               ; preds = %1640, %10
  %92 = phi %"class.courgette::PagedArray"* [ %3, %10 ], [ %1641, %1640 ]
  %93 = phi i64 [ %4, %10 ], [ %1642, %1640 ]
  %94 = phi i32 [ 0, %10 ], [ %1643, %1640 ]
  %95 = phi i32 [ 0, %10 ], [ %1644, %1640 ]
  br label %96

96:                                               ; preds = %91, %1847
  %97 = phi i32 [ %1862, %1847 ], [ %94, %91 ]
  %98 = phi i32 [ %1858, %1847 ], [ %95, %91 ]
  %99 = load i64, i64* %78, align 8
  %100 = load i64, i64* %79, align 8
  %101 = sub i64 %99, %100
  %102 = icmp sgt i64 %101, %80
  br i1 %102, label %984, label %103

103:                                              ; preds = %96
  %104 = icmp ugt i64 %100, %93
  %105 = icmp ugt i64 %99, %100
  %106 = and i1 %104, %105
  br i1 %106, label %107, label %758

107:                                              ; preds = %103
  %108 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %81, align 8
  %109 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %82, align 8
  %110 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %83, align 8
  %111 = load i64, i64* %84, align 8
  %112 = add i64 %101, -1
  %113 = add i64 %112, %111
  %114 = trunc i64 %101 to i32
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %145

116:                                              ; preds = %107
  %117 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %110, i64 0, i32 0
  %118 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %108, i64 0, i32 0
  br label %119

119:                                              ; preds = %119, %116
  %120 = phi i32 [ %114, %116 ], [ %141, %119 ]
  %121 = phi i64 [ %111, %116 ], [ %142, %119 ]
  %122 = phi i64 [ %100, %116 ], [ %143, %119 ]
  %123 = lshr i64 %121, 18
  %124 = and i64 %121, 262143
  %125 = load i32**, i32*** %117, align 8
  %126 = getelementptr inbounds i32*, i32** %125, i64 %123
  %127 = load i32*, i32** %126, align 8
  %128 = getelementptr inbounds i32, i32* %127, i64 %124
  %129 = load i32, i32* %128, align 4
  %130 = lshr i64 %122, 18
  %131 = and i64 %122, 262143
  %132 = load i32**, i32*** %118, align 8
  %133 = getelementptr inbounds i32*, i32** %132, i64 %130
  %134 = load i32*, i32** %133, align 8
  %135 = getelementptr inbounds i32, i32* %134, i64 %131
  %136 = load i32, i32* %135, align 4
  store i32 %136, i32* %128, align 4
  %137 = load i32**, i32*** %118, align 8
  %138 = getelementptr inbounds i32*, i32** %137, i64 %130
  %139 = load i32*, i32** %138, align 8
  %140 = getelementptr inbounds i32, i32* %139, i64 %131
  store i32 %129, i32* %140, align 4
  %141 = add nsw i32 %120, -1
  %142 = add i64 %121, 1
  %143 = add i64 %122, 1
  %144 = icmp sgt i32 %141, 0
  br i1 %144, label %119, label %145

145:                                              ; preds = %119, %107
  %146 = lshr i64 %113, 18
  %147 = and i64 %113, 262143
  %148 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %110, i64 0, i32 0
  %149 = load i32**, i32*** %148, align 8
  %150 = getelementptr inbounds i32*, i32** %149, i64 %146
  %151 = load i32*, i32** %150, align 8
  %152 = getelementptr inbounds i32, i32* %151, i64 %147
  %153 = load i32, i32* %152, align 4
  %154 = ashr i32 %153, 31
  %155 = xor i32 %154, %153
  %156 = lshr i32 %153, 31
  %157 = sext i32 %155 to i64
  %158 = add i64 %157, %2
  %159 = add i64 %100, -1
  %160 = lshr i64 %159, 18
  %161 = and i64 %159, 262143
  %162 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %108, i64 0, i32 0
  %163 = load i32**, i32*** %162, align 8
  %164 = getelementptr inbounds i32*, i32** %163, i64 %160
  %165 = load i32*, i32** %164, align 8
  %166 = getelementptr inbounds i32, i32* %165, i64 %161
  %167 = load i32, i32* %166, align 4
  %168 = icmp slt i32 %167, 0
  %169 = or i32 %156, 2
  %170 = ashr i32 %167, 31
  %171 = xor i32 %170, %167
  %172 = select i1 %168, i32 %169, i32 %156
  %173 = add i64 %99, -1
  %174 = lshr i64 %173, 18
  %175 = and i64 %173, 262143
  %176 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %109, i64 0, i32 0
  %177 = load i32**, i32*** %176, align 8
  %178 = getelementptr inbounds i32*, i32** %177, i64 %174
  %179 = load i32*, i32** %178, align 8
  %180 = getelementptr inbounds i32, i32* %179, i64 %175
  %181 = load i32, i32* %180, align 4
  br label %182

182:                                              ; preds = %507, %145
  %183 = phi i64 [ %159, %145 ], [ %508, %507 ]
  %184 = phi i64 [ %113, %145 ], [ %509, %507 ]
  %185 = phi i64 [ %173, %145 ], [ %510, %507 ]
  %186 = phi i32 [ %171, %145 ], [ %511, %507 ]
  %187 = phi i64 [ %158, %145 ], [ %512, %507 ]
  %188 = phi i32 [ %172, %145 ], [ %513, %507 ]
  %189 = sext i32 %186 to i64
  %190 = add i64 %189, %2
  %191 = lshr i64 %190, 18
  %192 = and i64 %190, 262143
  %193 = add i64 %190, 1
  %194 = lshr i64 %193, 18
  %195 = and i64 %193, 262143
  br label %196

196:                                              ; preds = %334, %182
  %197 = phi i64 [ %184, %182 ], [ %342, %334 ]
  %198 = phi i64 [ %185, %182 ], [ %325, %334 ]
  %199 = phi i64 [ %187, %182 ], [ %360, %334 ]
  %200 = phi i32 [ %188, %182 ], [ %358, %334 ]
  %201 = lshr i64 %199, 18
  %202 = and i64 %199, 262143
  %203 = load i32**, i32*** %85, align 8
  %204 = getelementptr inbounds i32*, i32** %203, i64 %201
  %205 = load i32*, i32** %204, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %202
  %207 = load i32, i32* %206, align 4
  %208 = add i64 %199, 1
  %209 = lshr i64 %208, 18
  %210 = and i64 %208, 262143
  %211 = getelementptr inbounds i32*, i32** %203, i64 %209
  %212 = load i32*, i32** %211, align 8
  %213 = getelementptr inbounds i32, i32* %212, i64 %210
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr inbounds i32*, i32** %203, i64 %191
  %216 = load i32*, i32** %215, align 8
  %217 = getelementptr inbounds i32, i32* %216, i64 %192
  %218 = load i32, i32* %217, align 4
  %219 = getelementptr inbounds i32*, i32** %203, i64 %194
  %220 = load i32*, i32** %219, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 %195
  %222 = load i32, i32* %221, align 4
  %223 = sext i32 %207 to i64
  %224 = getelementptr inbounds i8, i8* %87, i64 %223
  %225 = sext i32 %218 to i64
  %226 = getelementptr inbounds i8, i8* %87, i64 %225
  %227 = sext i32 %214 to i64
  %228 = getelementptr inbounds i8, i8* %88, i64 %227
  %229 = sext i32 %222 to i64
  %230 = getelementptr inbounds i8, i8* %88, i64 %229
  %231 = icmp ult i8* %224, %228
  %232 = icmp ult i8* %226, %230
  %233 = and i1 %231, %232
  br i1 %233, label %234, label %246

234:                                              ; preds = %196, %240
  %235 = phi i8* [ %242, %240 ], [ %226, %196 ]
  %236 = phi i8* [ %241, %240 ], [ %224, %196 ]
  %237 = load i8, i8* %236, align 1
  %238 = load i8, i8* %235, align 1
  %239 = icmp eq i8 %237, %238
  br i1 %239, label %240, label %257

240:                                              ; preds = %234
  %241 = getelementptr inbounds i8, i8* %236, i64 1
  %242 = getelementptr inbounds i8, i8* %235, i64 1
  %243 = icmp ult i8* %241, %228
  %244 = icmp ult i8* %242, %230
  %245 = and i1 %244, %243
  br i1 %245, label %234, label %246

246:                                              ; preds = %240, %196
  %247 = phi i8* [ %224, %196 ], [ %241, %240 ]
  %248 = phi i8* [ %226, %196 ], [ %242, %240 ]
  %249 = phi i1 [ %231, %196 ], [ %243, %240 ]
  %250 = phi i1 [ %232, %196 ], [ %244, %240 ]
  br i1 %249, label %251, label %255

251:                                              ; preds = %246
  br i1 %250, label %252, label %264

252:                                              ; preds = %251
  %253 = load i8, i8* %247, align 1
  %254 = load i8, i8* %248, align 1
  br label %257

255:                                              ; preds = %246
  %256 = sext i1 %250 to i32
  br label %361

257:                                              ; preds = %234, %252
  %258 = phi i8 [ %254, %252 ], [ %238, %234 ]
  %259 = phi i8 [ %253, %252 ], [ %237, %234 ]
  %260 = zext i8 %259 to i32
  %261 = zext i8 %258 to i32
  %262 = sub nsw i32 %260, %261
  %263 = icmp sgt i32 %262, 0
  br i1 %263, label %264, label %361

264:                                              ; preds = %257, %251
  %265 = and i32 %200, 1
  %266 = icmp eq i32 %265, 0
  %267 = load i32**, i32*** %148, align 8
  br i1 %266, label %268, label %277

268:                                              ; preds = %264
  %269 = lshr i64 %197, 18
  %270 = and i64 %197, 262143
  %271 = lshr i64 %198, 18
  %272 = getelementptr inbounds i32*, i32** %267, i64 %269
  %273 = load i32*, i32** %272, align 8
  %274 = getelementptr inbounds i32, i32* %273, i64 %270
  %275 = load i32, i32* %274, align 4
  %276 = and i64 %198, 262143
  br label %316

277:                                              ; preds = %264, %277
  %278 = phi i32** [ %308, %277 ], [ %267, %264 ]
  %279 = phi i64 [ %301, %277 ], [ %197, %264 ]
  %280 = phi i64 [ %287, %277 ], [ %198, %264 ]
  %281 = lshr i64 %279, 18
  %282 = and i64 %279, 262143
  %283 = getelementptr inbounds i32*, i32** %278, i64 %281
  %284 = load i32*, i32** %283, align 8
  %285 = getelementptr inbounds i32, i32* %284, i64 %282
  %286 = load i32, i32* %285, align 4
  %287 = add i64 %280, -1
  %288 = lshr i64 %280, 18
  %289 = and i64 %280, 262143
  %290 = load i32**, i32*** %176, align 8
  %291 = getelementptr inbounds i32*, i32** %290, i64 %288
  %292 = load i32*, i32** %291, align 8
  %293 = getelementptr inbounds i32, i32* %292, i64 %289
  store i32 %286, i32* %293, align 4
  %294 = lshr i64 %287, 18
  %295 = and i64 %287, 262143
  %296 = load i32**, i32*** %176, align 8
  %297 = getelementptr inbounds i32*, i32** %296, i64 %294
  %298 = load i32*, i32** %297, align 8
  %299 = getelementptr inbounds i32, i32* %298, i64 %295
  %300 = load i32, i32* %299, align 4
  %301 = add i64 %279, -1
  %302 = load i32**, i32*** %148, align 8
  %303 = getelementptr inbounds i32*, i32** %302, i64 %281
  %304 = load i32*, i32** %303, align 8
  %305 = getelementptr inbounds i32, i32* %304, i64 %282
  store i32 %300, i32* %305, align 4
  %306 = lshr i64 %301, 18
  %307 = and i64 %301, 262143
  %308 = load i32**, i32*** %148, align 8
  %309 = getelementptr inbounds i32*, i32** %308, i64 %306
  %310 = load i32*, i32** %309, align 8
  %311 = getelementptr inbounds i32, i32* %310, i64 %307
  %312 = load i32, i32* %311, align 4
  %313 = icmp slt i32 %312, 0
  br i1 %313, label %277, label %314

314:                                              ; preds = %277
  %315 = xor i32 %200, 1
  br label %316

316:                                              ; preds = %314, %268
  %317 = phi i64 [ %276, %268 ], [ %295, %314 ]
  %318 = phi i32 [ %275, %268 ], [ %312, %314 ]
  %319 = phi i64 [ %271, %268 ], [ %294, %314 ]
  %320 = phi i64 [ %270, %268 ], [ %307, %314 ]
  %321 = phi i64 [ %269, %268 ], [ %306, %314 ]
  %322 = phi i64 [ %197, %268 ], [ %301, %314 ]
  %323 = phi i64 [ %198, %268 ], [ %287, %314 ]
  %324 = phi i32 [ %200, %268 ], [ %315, %314 ]
  %325 = add i64 %323, -1
  %326 = load i32**, i32*** %176, align 8
  %327 = getelementptr inbounds i32*, i32** %326, i64 %319
  %328 = load i32*, i32** %327, align 8
  %329 = getelementptr inbounds i32, i32* %328, i64 %317
  store i32 %318, i32* %329, align 4
  %330 = icmp ugt i64 %322, %111
  br i1 %330, label %334, label %331

331:                                              ; preds = %316
  %332 = lshr i64 %111, 18
  %333 = and i64 %111, 262143
  br label %751

334:                                              ; preds = %316
  %335 = lshr i64 %325, 18
  %336 = and i64 %325, 262143
  %337 = load i32**, i32*** %176, align 8
  %338 = getelementptr inbounds i32*, i32** %337, i64 %335
  %339 = load i32*, i32** %338, align 8
  %340 = getelementptr inbounds i32, i32* %339, i64 %336
  %341 = load i32, i32* %340, align 4
  %342 = add i64 %322, -1
  %343 = load i32**, i32*** %148, align 8
  %344 = getelementptr inbounds i32*, i32** %343, i64 %321
  %345 = load i32*, i32** %344, align 8
  %346 = getelementptr inbounds i32, i32* %345, i64 %320
  store i32 %341, i32* %346, align 4
  %347 = lshr i64 %342, 18
  %348 = and i64 %342, 262143
  %349 = load i32**, i32*** %148, align 8
  %350 = getelementptr inbounds i32*, i32** %349, i64 %347
  %351 = load i32*, i32** %350, align 8
  %352 = getelementptr inbounds i32, i32* %351, i64 %348
  %353 = load i32, i32* %352, align 4
  %354 = icmp slt i32 %353, 0
  %355 = xor i32 %353, -1
  %356 = or i32 %324, 1
  %357 = select i1 %354, i32 %355, i32 %353
  %358 = select i1 %354, i32 %356, i32 %324
  %359 = sext i32 %357 to i64
  %360 = add i64 %359, %2
  br label %196

361:                                              ; preds = %257, %255
  %362 = phi i32 [ %256, %255 ], [ %262, %257 ]
  %363 = icmp slt i32 %362, 0
  br i1 %363, label %364, label %514

364:                                              ; preds = %361
  %365 = and i32 %200, 2
  %366 = icmp eq i32 %365, 0
  %367 = load i32**, i32*** %162, align 8
  br i1 %366, label %368, label %377

368:                                              ; preds = %364
  %369 = lshr i64 %183, 18
  %370 = and i64 %183, 262143
  %371 = lshr i64 %198, 18
  %372 = getelementptr inbounds i32*, i32** %367, i64 %369
  %373 = load i32*, i32** %372, align 8
  %374 = getelementptr inbounds i32, i32* %373, i64 %370
  %375 = load i32, i32* %374, align 4
  %376 = and i64 %198, 262143
  br label %416

377:                                              ; preds = %364, %377
  %378 = phi i32** [ %408, %377 ], [ %367, %364 ]
  %379 = phi i64 [ %401, %377 ], [ %183, %364 ]
  %380 = phi i64 [ %387, %377 ], [ %198, %364 ]
  %381 = lshr i64 %379, 18
  %382 = and i64 %379, 262143
  %383 = getelementptr inbounds i32*, i32** %378, i64 %381
  %384 = load i32*, i32** %383, align 8
  %385 = getelementptr inbounds i32, i32* %384, i64 %382
  %386 = load i32, i32* %385, align 4
  %387 = add i64 %380, -1
  %388 = lshr i64 %380, 18
  %389 = and i64 %380, 262143
  %390 = load i32**, i32*** %176, align 8
  %391 = getelementptr inbounds i32*, i32** %390, i64 %388
  %392 = load i32*, i32** %391, align 8
  %393 = getelementptr inbounds i32, i32* %392, i64 %389
  store i32 %386, i32* %393, align 4
  %394 = lshr i64 %387, 18
  %395 = and i64 %387, 262143
  %396 = load i32**, i32*** %176, align 8
  %397 = getelementptr inbounds i32*, i32** %396, i64 %394
  %398 = load i32*, i32** %397, align 8
  %399 = getelementptr inbounds i32, i32* %398, i64 %395
  %400 = load i32, i32* %399, align 4
  %401 = add i64 %379, -1
  %402 = load i32**, i32*** %162, align 8
  %403 = getelementptr inbounds i32*, i32** %402, i64 %381
  %404 = load i32*, i32** %403, align 8
  %405 = getelementptr inbounds i32, i32* %404, i64 %382
  store i32 %400, i32* %405, align 4
  %406 = lshr i64 %401, 18
  %407 = and i64 %401, 262143
  %408 = load i32**, i32*** %162, align 8
  %409 = getelementptr inbounds i32*, i32** %408, i64 %406
  %410 = load i32*, i32** %409, align 8
  %411 = getelementptr inbounds i32, i32* %410, i64 %407
  %412 = load i32, i32* %411, align 4
  %413 = icmp slt i32 %412, 0
  br i1 %413, label %377, label %414

414:                                              ; preds = %377
  %415 = xor i32 %200, 2
  br label %416

416:                                              ; preds = %414, %368
  %417 = phi i64 [ %376, %368 ], [ %395, %414 ]
  %418 = phi i32 [ %375, %368 ], [ %412, %414 ]
  %419 = phi i64 [ %371, %368 ], [ %394, %414 ]
  %420 = phi i64 [ %370, %368 ], [ %407, %414 ]
  %421 = phi i64 [ %369, %368 ], [ %406, %414 ]
  %422 = phi i64 [ %183, %368 ], [ %401, %414 ]
  %423 = phi i64 [ %198, %368 ], [ %387, %414 ]
  %424 = phi i32 [ %200, %368 ], [ %415, %414 ]
  %425 = add i64 %423, -1
  %426 = load i32**, i32*** %176, align 8
  %427 = getelementptr inbounds i32*, i32** %426, i64 %419
  %428 = load i32*, i32** %427, align 8
  %429 = getelementptr inbounds i32, i32* %428, i64 %417
  store i32 %418, i32* %429, align 4
  %430 = lshr i64 %425, 18
  %431 = and i64 %425, 262143
  %432 = load i32**, i32*** %176, align 8
  %433 = getelementptr inbounds i32*, i32** %432, i64 %430
  %434 = load i32*, i32** %433, align 8
  %435 = getelementptr inbounds i32, i32* %434, i64 %431
  %436 = load i32, i32* %435, align 4
  %437 = add i64 %422, -1
  %438 = load i32**, i32*** %162, align 8
  %439 = getelementptr inbounds i32*, i32** %438, i64 %421
  %440 = load i32*, i32** %439, align 8
  %441 = getelementptr inbounds i32, i32* %440, i64 %420
  store i32 %436, i32* %441, align 4
  %442 = icmp ult i64 %437, %93
  br i1 %442, label %443, label %495

443:                                              ; preds = %416
  %444 = icmp ult i64 %111, %197
  %445 = lshr i64 %197, 18
  %446 = and i64 %197, 262143
  %447 = load i32**, i32*** %148, align 8
  %448 = getelementptr inbounds i32*, i32** %447, i64 %445
  %449 = load i32*, i32** %448, align 8
  %450 = getelementptr inbounds i32, i32* %449, i64 %446
  %451 = load i32, i32* %450, align 4
  br i1 %444, label %452, label %485

452:                                              ; preds = %443, %452
  %453 = phi i32 [ %484, %452 ], [ %451, %443 ]
  %454 = phi i64 [ %479, %452 ], [ %446, %443 ]
  %455 = phi i64 [ %478, %452 ], [ %445, %443 ]
  %456 = phi i64 [ %458, %452 ], [ %425, %443 ]
  %457 = phi i64 [ %472, %452 ], [ %197, %443 ]
  %458 = add i64 %456, -1
  %459 = lshr i64 %456, 18
  %460 = and i64 %456, 262143
  %461 = load i32**, i32*** %176, align 8
  %462 = getelementptr inbounds i32*, i32** %461, i64 %459
  %463 = load i32*, i32** %462, align 8
  %464 = getelementptr inbounds i32, i32* %463, i64 %460
  store i32 %453, i32* %464, align 4
  %465 = lshr i64 %458, 18
  %466 = and i64 %458, 262143
  %467 = load i32**, i32*** %176, align 8
  %468 = getelementptr inbounds i32*, i32** %467, i64 %465
  %469 = load i32*, i32** %468, align 8
  %470 = getelementptr inbounds i32, i32* %469, i64 %466
  %471 = load i32, i32* %470, align 4
  %472 = add i64 %457, -1
  %473 = load i32**, i32*** %148, align 8
  %474 = getelementptr inbounds i32*, i32** %473, i64 %455
  %475 = load i32*, i32** %474, align 8
  %476 = getelementptr inbounds i32, i32* %475, i64 %454
  store i32 %471, i32* %476, align 4
  %477 = icmp ult i64 %111, %472
  %478 = lshr i64 %472, 18
  %479 = and i64 %472, 262143
  %480 = load i32**, i32*** %148, align 8
  %481 = getelementptr inbounds i32*, i32** %480, i64 %478
  %482 = load i32*, i32** %481, align 8
  %483 = getelementptr inbounds i32, i32* %482, i64 %479
  %484 = load i32, i32* %483, align 4
  br i1 %477, label %452, label %485

485:                                              ; preds = %452, %443
  %486 = phi i64 [ %431, %443 ], [ %466, %452 ]
  %487 = phi i64 [ %430, %443 ], [ %465, %452 ]
  %488 = phi i64 [ %445, %443 ], [ %478, %452 ]
  %489 = phi i64 [ %446, %443 ], [ %479, %452 ]
  %490 = phi i32 [ %451, %443 ], [ %484, %452 ]
  %491 = load i32**, i32*** %176, align 8
  %492 = getelementptr inbounds i32*, i32** %491, i64 %487
  %493 = load i32*, i32** %492, align 8
  %494 = getelementptr inbounds i32, i32* %493, i64 %486
  store i32 %490, i32* %494, align 4
  br label %751

495:                                              ; preds = %416
  %496 = lshr i64 %437, 18
  %497 = and i64 %437, 262143
  %498 = load i32**, i32*** %162, align 8
  %499 = getelementptr inbounds i32*, i32** %498, i64 %496
  %500 = load i32*, i32** %499, align 8
  %501 = getelementptr inbounds i32, i32* %500, i64 %497
  %502 = load i32, i32* %501, align 4
  %503 = icmp slt i32 %502, 0
  br i1 %503, label %504, label %507

504:                                              ; preds = %495
  %505 = xor i32 %502, -1
  %506 = or i32 %424, 2
  br label %507

507:                                              ; preds = %726, %495, %504, %748
  %508 = phi i64 [ %668, %748 ], [ %437, %504 ], [ %437, %495 ], [ %668, %726 ]
  %509 = phi i64 [ %593, %748 ], [ %197, %504 ], [ %197, %495 ], [ %593, %726 ]
  %510 = phi i64 [ %656, %748 ], [ %425, %504 ], [ %425, %495 ], [ %656, %726 ]
  %511 = phi i32 [ %749, %748 ], [ %505, %504 ], [ %502, %495 ], [ %746, %726 ]
  %512 = phi i64 [ %739, %748 ], [ %199, %504 ], [ %199, %495 ], [ %739, %726 ]
  %513 = phi i32 [ %750, %748 ], [ %506, %504 ], [ %424, %495 ], [ %737, %726 ]
  br label %182

514:                                              ; preds = %361
  %515 = and i32 %200, 1
  %516 = icmp eq i32 %515, 0
  %517 = load i32**, i32*** %148, align 8
  br i1 %516, label %518, label %527

518:                                              ; preds = %514
  %519 = lshr i64 %197, 18
  %520 = and i64 %197, 262143
  %521 = lshr i64 %198, 18
  %522 = getelementptr inbounds i32*, i32** %517, i64 %519
  %523 = load i32*, i32** %522, align 8
  %524 = getelementptr inbounds i32, i32* %523, i64 %520
  %525 = load i32, i32* %524, align 4
  %526 = and i64 %198, 262143
  br label %566

527:                                              ; preds = %514, %527
  %528 = phi i32** [ %558, %527 ], [ %517, %514 ]
  %529 = phi i64 [ %551, %527 ], [ %197, %514 ]
  %530 = phi i64 [ %537, %527 ], [ %198, %514 ]
  %531 = lshr i64 %529, 18
  %532 = and i64 %529, 262143
  %533 = getelementptr inbounds i32*, i32** %528, i64 %531
  %534 = load i32*, i32** %533, align 8
  %535 = getelementptr inbounds i32, i32* %534, i64 %532
  %536 = load i32, i32* %535, align 4
  %537 = add i64 %530, -1
  %538 = lshr i64 %530, 18
  %539 = and i64 %530, 262143
  %540 = load i32**, i32*** %176, align 8
  %541 = getelementptr inbounds i32*, i32** %540, i64 %538
  %542 = load i32*, i32** %541, align 8
  %543 = getelementptr inbounds i32, i32* %542, i64 %539
  store i32 %536, i32* %543, align 4
  %544 = lshr i64 %537, 18
  %545 = and i64 %537, 262143
  %546 = load i32**, i32*** %176, align 8
  %547 = getelementptr inbounds i32*, i32** %546, i64 %544
  %548 = load i32*, i32** %547, align 8
  %549 = getelementptr inbounds i32, i32* %548, i64 %545
  %550 = load i32, i32* %549, align 4
  %551 = add i64 %529, -1
  %552 = load i32**, i32*** %148, align 8
  %553 = getelementptr inbounds i32*, i32** %552, i64 %531
  %554 = load i32*, i32** %553, align 8
  %555 = getelementptr inbounds i32, i32* %554, i64 %532
  store i32 %550, i32* %555, align 4
  %556 = lshr i64 %551, 18
  %557 = and i64 %551, 262143
  %558 = load i32**, i32*** %148, align 8
  %559 = getelementptr inbounds i32*, i32** %558, i64 %556
  %560 = load i32*, i32** %559, align 8
  %561 = getelementptr inbounds i32, i32* %560, i64 %557
  %562 = load i32, i32* %561, align 4
  %563 = icmp slt i32 %562, 0
  br i1 %563, label %527, label %564

564:                                              ; preds = %527
  %565 = xor i32 %200, 1
  br label %566

566:                                              ; preds = %564, %518
  %567 = phi i64 [ %526, %518 ], [ %545, %564 ]
  %568 = phi i32 [ %525, %518 ], [ %562, %564 ]
  %569 = phi i64 [ %521, %518 ], [ %544, %564 ]
  %570 = phi i64 [ %520, %518 ], [ %557, %564 ]
  %571 = phi i64 [ %519, %518 ], [ %556, %564 ]
  %572 = phi i64 [ %197, %518 ], [ %551, %564 ]
  %573 = phi i64 [ %198, %518 ], [ %537, %564 ]
  %574 = phi i32 [ %200, %518 ], [ %565, %564 ]
  %575 = xor i32 %568, -1
  %576 = add i64 %573, -1
  %577 = load i32**, i32*** %176, align 8
  %578 = getelementptr inbounds i32*, i32** %577, i64 %569
  %579 = load i32*, i32** %578, align 8
  %580 = getelementptr inbounds i32, i32* %579, i64 %567
  store i32 %575, i32* %580, align 4
  %581 = icmp ugt i64 %572, %111
  br i1 %581, label %585, label %582

582:                                              ; preds = %566
  %583 = lshr i64 %111, 18
  %584 = and i64 %111, 262143
  br label %751

585:                                              ; preds = %566
  %586 = lshr i64 %576, 18
  %587 = and i64 %576, 262143
  %588 = load i32**, i32*** %176, align 8
  %589 = getelementptr inbounds i32*, i32** %588, i64 %586
  %590 = load i32*, i32** %589, align 8
  %591 = getelementptr inbounds i32, i32* %590, i64 %587
  %592 = load i32, i32* %591, align 4
  %593 = add i64 %572, -1
  %594 = load i32**, i32*** %148, align 8
  %595 = getelementptr inbounds i32*, i32** %594, i64 %571
  %596 = load i32*, i32** %595, align 8
  %597 = getelementptr inbounds i32, i32* %596, i64 %570
  store i32 %592, i32* %597, align 4
  %598 = and i32 %574, 2
  %599 = icmp eq i32 %598, 0
  %600 = load i32**, i32*** %162, align 8
  br i1 %599, label %601, label %608

601:                                              ; preds = %585
  %602 = lshr i64 %183, 18
  %603 = and i64 %183, 262143
  %604 = getelementptr inbounds i32*, i32** %600, i64 %602
  %605 = load i32*, i32** %604, align 8
  %606 = getelementptr inbounds i32, i32* %605, i64 %603
  %607 = load i32, i32* %606, align 4
  br label %647

608:                                              ; preds = %585, %608
  %609 = phi i32** [ %639, %608 ], [ %600, %585 ]
  %610 = phi i64 [ %632, %608 ], [ %183, %585 ]
  %611 = phi i64 [ %618, %608 ], [ %576, %585 ]
  %612 = lshr i64 %610, 18
  %613 = and i64 %610, 262143
  %614 = getelementptr inbounds i32*, i32** %609, i64 %612
  %615 = load i32*, i32** %614, align 8
  %616 = getelementptr inbounds i32, i32* %615, i64 %613
  %617 = load i32, i32* %616, align 4
  %618 = add i64 %611, -1
  %619 = lshr i64 %611, 18
  %620 = and i64 %611, 262143
  %621 = load i32**, i32*** %176, align 8
  %622 = getelementptr inbounds i32*, i32** %621, i64 %619
  %623 = load i32*, i32** %622, align 8
  %624 = getelementptr inbounds i32, i32* %623, i64 %620
  store i32 %617, i32* %624, align 4
  %625 = lshr i64 %618, 18
  %626 = and i64 %618, 262143
  %627 = load i32**, i32*** %176, align 8
  %628 = getelementptr inbounds i32*, i32** %627, i64 %625
  %629 = load i32*, i32** %628, align 8
  %630 = getelementptr inbounds i32, i32* %629, i64 %626
  %631 = load i32, i32* %630, align 4
  %632 = add i64 %610, -1
  %633 = load i32**, i32*** %162, align 8
  %634 = getelementptr inbounds i32*, i32** %633, i64 %612
  %635 = load i32*, i32** %634, align 8
  %636 = getelementptr inbounds i32, i32* %635, i64 %613
  store i32 %631, i32* %636, align 4
  %637 = lshr i64 %632, 18
  %638 = and i64 %632, 262143
  %639 = load i32**, i32*** %162, align 8
  %640 = getelementptr inbounds i32*, i32** %639, i64 %637
  %641 = load i32*, i32** %640, align 8
  %642 = getelementptr inbounds i32, i32* %641, i64 %638
  %643 = load i32, i32* %642, align 4
  %644 = icmp slt i32 %643, 0
  br i1 %644, label %608, label %645

645:                                              ; preds = %608
  %646 = xor i32 %574, 2
  br label %647

647:                                              ; preds = %645, %601
  %648 = phi i64 [ %587, %601 ], [ %626, %645 ]
  %649 = phi i32 [ %607, %601 ], [ %643, %645 ]
  %650 = phi i64 [ %586, %601 ], [ %625, %645 ]
  %651 = phi i64 [ %603, %601 ], [ %638, %645 ]
  %652 = phi i64 [ %602, %601 ], [ %637, %645 ]
  %653 = phi i64 [ %183, %601 ], [ %632, %645 ]
  %654 = phi i64 [ %576, %601 ], [ %618, %645 ]
  %655 = phi i32 [ %574, %601 ], [ %646, %645 ]
  %656 = add i64 %654, -1
  %657 = load i32**, i32*** %176, align 8
  %658 = getelementptr inbounds i32*, i32** %657, i64 %650
  %659 = load i32*, i32** %658, align 8
  %660 = getelementptr inbounds i32, i32* %659, i64 %648
  store i32 %649, i32* %660, align 4
  %661 = lshr i64 %656, 18
  %662 = and i64 %656, 262143
  %663 = load i32**, i32*** %176, align 8
  %664 = getelementptr inbounds i32*, i32** %663, i64 %661
  %665 = load i32*, i32** %664, align 8
  %666 = getelementptr inbounds i32, i32* %665, i64 %662
  %667 = load i32, i32* %666, align 4
  %668 = add i64 %653, -1
  %669 = load i32**, i32*** %162, align 8
  %670 = getelementptr inbounds i32*, i32** %669, i64 %652
  %671 = load i32*, i32** %670, align 8
  %672 = getelementptr inbounds i32, i32* %671, i64 %651
  store i32 %667, i32* %672, align 4
  %673 = icmp ult i64 %668, %93
  br i1 %673, label %674, label %726

674:                                              ; preds = %647
  %675 = icmp ult i64 %111, %593
  %676 = lshr i64 %593, 18
  %677 = and i64 %593, 262143
  %678 = load i32**, i32*** %148, align 8
  %679 = getelementptr inbounds i32*, i32** %678, i64 %676
  %680 = load i32*, i32** %679, align 8
  %681 = getelementptr inbounds i32, i32* %680, i64 %677
  %682 = load i32, i32* %681, align 4
  br i1 %675, label %683, label %716

683:                                              ; preds = %674, %683
  %684 = phi i32 [ %715, %683 ], [ %682, %674 ]
  %685 = phi i64 [ %710, %683 ], [ %677, %674 ]
  %686 = phi i64 [ %709, %683 ], [ %676, %674 ]
  %687 = phi i64 [ %689, %683 ], [ %656, %674 ]
  %688 = phi i64 [ %703, %683 ], [ %593, %674 ]
  %689 = add i64 %687, -1
  %690 = lshr i64 %687, 18
  %691 = and i64 %687, 262143
  %692 = load i32**, i32*** %176, align 8
  %693 = getelementptr inbounds i32*, i32** %692, i64 %690
  %694 = load i32*, i32** %693, align 8
  %695 = getelementptr inbounds i32, i32* %694, i64 %691
  store i32 %684, i32* %695, align 4
  %696 = lshr i64 %689, 18
  %697 = and i64 %689, 262143
  %698 = load i32**, i32*** %176, align 8
  %699 = getelementptr inbounds i32*, i32** %698, i64 %696
  %700 = load i32*, i32** %699, align 8
  %701 = getelementptr inbounds i32, i32* %700, i64 %697
  %702 = load i32, i32* %701, align 4
  %703 = add i64 %688, -1
  %704 = load i32**, i32*** %148, align 8
  %705 = getelementptr inbounds i32*, i32** %704, i64 %686
  %706 = load i32*, i32** %705, align 8
  %707 = getelementptr inbounds i32, i32* %706, i64 %685
  store i32 %702, i32* %707, align 4
  %708 = icmp ult i64 %111, %703
  %709 = lshr i64 %703, 18
  %710 = and i64 %703, 262143
  %711 = load i32**, i32*** %148, align 8
  %712 = getelementptr inbounds i32*, i32** %711, i64 %709
  %713 = load i32*, i32** %712, align 8
  %714 = getelementptr inbounds i32, i32* %713, i64 %710
  %715 = load i32, i32* %714, align 4
  br i1 %708, label %683, label %716

716:                                              ; preds = %683, %674
  %717 = phi i64 [ %662, %674 ], [ %697, %683 ]
  %718 = phi i64 [ %661, %674 ], [ %696, %683 ]
  %719 = phi i64 [ %676, %674 ], [ %709, %683 ]
  %720 = phi i64 [ %677, %674 ], [ %710, %683 ]
  %721 = phi i32 [ %682, %674 ], [ %715, %683 ]
  %722 = load i32**, i32*** %176, align 8
  %723 = getelementptr inbounds i32*, i32** %722, i64 %718
  %724 = load i32*, i32** %723, align 8
  %725 = getelementptr inbounds i32, i32* %724, i64 %717
  store i32 %721, i32* %725, align 4
  br label %751

726:                                              ; preds = %647
  %727 = lshr i64 %593, 18
  %728 = and i64 %593, 262143
  %729 = load i32**, i32*** %148, align 8
  %730 = getelementptr inbounds i32*, i32** %729, i64 %727
  %731 = load i32*, i32** %730, align 8
  %732 = getelementptr inbounds i32, i32* %731, i64 %728
  %733 = load i32, i32* %732, align 4
  %734 = ashr i32 %733, 31
  %735 = xor i32 %734, %733
  %736 = lshr i32 %733, 31
  %737 = or i32 %736, %655
  %738 = sext i32 %735 to i64
  %739 = add i64 %738, %2
  %740 = lshr i64 %668, 18
  %741 = and i64 %668, 262143
  %742 = load i32**, i32*** %162, align 8
  %743 = getelementptr inbounds i32*, i32** %742, i64 %740
  %744 = load i32*, i32** %743, align 8
  %745 = getelementptr inbounds i32, i32* %744, i64 %741
  %746 = load i32, i32* %745, align 4
  %747 = icmp slt i32 %746, 0
  br i1 %747, label %748, label %507

748:                                              ; preds = %726
  %749 = xor i32 %746, -1
  %750 = or i32 %737, 2
  br label %507

751:                                              ; preds = %331, %485, %582, %716
  %752 = phi i64 [ %719, %716 ], [ %583, %582 ], [ %488, %485 ], [ %332, %331 ]
  %753 = phi i64 [ %720, %716 ], [ %584, %582 ], [ %489, %485 ], [ %333, %331 ]
  %754 = load i32**, i32*** %148, align 8
  %755 = getelementptr inbounds i32*, i32** %754, i64 %752
  %756 = load i32*, i32** %755, align 8
  %757 = getelementptr inbounds i32, i32* %756, i64 %753
  store i32 %181, i32* %757, align 4
  br label %758

758:                                              ; preds = %751, %103
  %759 = and i32 %97, 1
  %760 = icmp eq i32 %759, 0
  br i1 %760, label %770, label %761

761:                                              ; preds = %758
  %762 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %92, i64 0, i32 0
  %763 = load i32**, i32*** %762, align 8
  %764 = lshr i64 %93, 18
  %765 = and i64 %93, 262143
  %766 = getelementptr inbounds i32*, i32** %763, i64 %764
  %767 = load i32*, i32** %766, align 8
  %768 = getelementptr inbounds i32, i32* %767, i64 %765
  %769 = load i32, i32* %768, align 4
  br label %865

770:                                              ; preds = %758
  %771 = and i32 %97, 2
  %772 = icmp eq i32 %771, 0
  br i1 %772, label %871, label %773

773:                                              ; preds = %770
  %774 = add i64 %93, -1
  %775 = lshr i64 %774, 18
  %776 = and i64 %774, 262143
  %777 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %92, i64 0, i32 0
  %778 = load i32**, i32*** %777, align 8
  %779 = getelementptr inbounds i32*, i32** %778, i64 %775
  %780 = load i32*, i32** %779, align 8
  %781 = getelementptr inbounds i32, i32* %780, i64 %776
  %782 = load i32, i32* %781, align 4
  %783 = ashr i32 %782, 31
  %784 = xor i32 %783, %782
  %785 = sext i32 %784 to i64
  %786 = add i64 %785, %2
  %787 = lshr i64 %93, 18
  %788 = and i64 %93, 262143
  %789 = getelementptr inbounds i32*, i32** %778, i64 %787
  %790 = load i32*, i32** %789, align 8
  %791 = getelementptr inbounds i32, i32* %790, i64 %788
  %792 = load i32, i32* %791, align 4
  %793 = sext i32 %792 to i64
  %794 = add i64 %793, %2
  %795 = lshr i64 %786, 18
  %796 = and i64 %786, 262143
  %797 = load i32**, i32*** %85, align 8
  %798 = getelementptr inbounds i32*, i32** %797, i64 %795
  %799 = load i32*, i32** %798, align 8
  %800 = getelementptr inbounds i32, i32* %799, i64 %796
  %801 = load i32, i32* %800, align 4
  %802 = add i64 %786, 1
  %803 = lshr i64 %802, 18
  %804 = and i64 %802, 262143
  %805 = getelementptr inbounds i32*, i32** %797, i64 %803
  %806 = load i32*, i32** %805, align 8
  %807 = getelementptr inbounds i32, i32* %806, i64 %804
  %808 = load i32, i32* %807, align 4
  %809 = lshr i64 %794, 18
  %810 = and i64 %794, 262143
  %811 = getelementptr inbounds i32*, i32** %797, i64 %809
  %812 = load i32*, i32** %811, align 8
  %813 = getelementptr inbounds i32, i32* %812, i64 %810
  %814 = load i32, i32* %813, align 4
  %815 = add i64 %794, 1
  %816 = lshr i64 %815, 18
  %817 = and i64 %815, 262143
  %818 = getelementptr inbounds i32*, i32** %797, i64 %816
  %819 = load i32*, i32** %818, align 8
  %820 = getelementptr inbounds i32, i32* %819, i64 %817
  %821 = load i32, i32* %820, align 4
  %822 = sext i32 %801 to i64
  %823 = getelementptr inbounds i8, i8* %87, i64 %822
  %824 = sext i32 %814 to i64
  %825 = getelementptr inbounds i8, i8* %87, i64 %824
  %826 = sext i32 %808 to i64
  %827 = getelementptr inbounds i8, i8* %88, i64 %826
  %828 = sext i32 %821 to i64
  %829 = getelementptr inbounds i8, i8* %88, i64 %828
  %830 = icmp ult i8* %823, %827
  %831 = icmp ult i8* %825, %829
  %832 = and i1 %830, %831
  br i1 %832, label %833, label %845

833:                                              ; preds = %773, %839
  %834 = phi i8* [ %841, %839 ], [ %825, %773 ]
  %835 = phi i8* [ %840, %839 ], [ %823, %773 ]
  %836 = load i8, i8* %835, align 1
  %837 = load i8, i8* %834, align 1
  %838 = icmp eq i8 %836, %837
  br i1 %838, label %839, label %854

839:                                              ; preds = %833
  %840 = getelementptr inbounds i8, i8* %835, i64 1
  %841 = getelementptr inbounds i8, i8* %834, i64 1
  %842 = icmp ult i8* %840, %827
  %843 = icmp ult i8* %841, %829
  %844 = and i1 %843, %842
  br i1 %844, label %833, label %845

845:                                              ; preds = %839, %773
  %846 = phi i8* [ %823, %773 ], [ %840, %839 ]
  %847 = phi i8* [ %825, %773 ], [ %841, %839 ]
  %848 = phi i1 [ %830, %773 ], [ %842, %839 ]
  %849 = phi i1 [ %831, %773 ], [ %843, %839 ]
  br i1 %848, label %850, label %860

850:                                              ; preds = %845
  br i1 %849, label %851, label %871

851:                                              ; preds = %850
  %852 = load i8, i8* %846, align 1
  %853 = load i8, i8* %847, align 1
  br label %854

854:                                              ; preds = %833, %851
  %855 = phi i8 [ %853, %851 ], [ %837, %833 ]
  %856 = phi i8 [ %852, %851 ], [ %836, %833 ]
  %857 = zext i8 %856 to i32
  %858 = zext i8 %855 to i32
  %859 = sub nsw i32 %857, %858
  br label %862

860:                                              ; preds = %845
  %861 = sext i1 %849 to i32
  br label %862

862:                                              ; preds = %854, %860
  %863 = phi i32 [ %861, %860 ], [ %859, %854 ]
  %864 = icmp eq i32 %863, 0
  br i1 %864, label %865, label %871

865:                                              ; preds = %761, %862
  %866 = phi i32 [ %769, %761 ], [ %792, %862 ]
  %867 = phi i32* [ %767, %761 ], [ %790, %862 ]
  %868 = phi i64 [ %765, %761 ], [ %788, %862 ]
  %869 = getelementptr inbounds i32, i32* %867, i64 %868
  %870 = xor i32 %866, -1
  store i32 %870, i32* %869, align 4
  br label %871

871:                                              ; preds = %850, %770, %865, %862
  %872 = and i32 %97, 4
  %873 = icmp eq i32 %872, 0
  br i1 %873, label %969, label %874

874:                                              ; preds = %871
  %875 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %82, align 8
  %876 = add i64 %99, -1
  %877 = lshr i64 %876, 18
  %878 = and i64 %876, 262143
  %879 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %875, i64 0, i32 0
  %880 = load i32**, i32*** %879, align 8
  %881 = getelementptr inbounds i32*, i32** %880, i64 %877
  %882 = load i32*, i32** %881, align 8
  %883 = getelementptr inbounds i32, i32* %882, i64 %878
  %884 = load i32, i32* %883, align 4
  %885 = ashr i32 %884, 31
  %886 = xor i32 %885, %884
  %887 = sext i32 %886 to i64
  %888 = add i64 %887, %2
  %889 = lshr i64 %99, 18
  %890 = and i64 %99, 262143
  %891 = getelementptr inbounds i32*, i32** %880, i64 %889
  %892 = load i32*, i32** %891, align 8
  %893 = getelementptr inbounds i32, i32* %892, i64 %890
  %894 = load i32, i32* %893, align 4
  %895 = sext i32 %894 to i64
  %896 = add i64 %895, %2
  %897 = lshr i64 %888, 18
  %898 = and i64 %888, 262143
  %899 = load i32**, i32*** %85, align 8
  %900 = getelementptr inbounds i32*, i32** %899, i64 %897
  %901 = load i32*, i32** %900, align 8
  %902 = getelementptr inbounds i32, i32* %901, i64 %898
  %903 = load i32, i32* %902, align 4
  %904 = add i64 %888, 1
  %905 = lshr i64 %904, 18
  %906 = and i64 %904, 262143
  %907 = getelementptr inbounds i32*, i32** %899, i64 %905
  %908 = load i32*, i32** %907, align 8
  %909 = getelementptr inbounds i32, i32* %908, i64 %906
  %910 = load i32, i32* %909, align 4
  %911 = lshr i64 %896, 18
  %912 = and i64 %896, 262143
  %913 = getelementptr inbounds i32*, i32** %899, i64 %911
  %914 = load i32*, i32** %913, align 8
  %915 = getelementptr inbounds i32, i32* %914, i64 %912
  %916 = load i32, i32* %915, align 4
  %917 = add i64 %896, 1
  %918 = lshr i64 %917, 18
  %919 = and i64 %917, 262143
  %920 = getelementptr inbounds i32*, i32** %899, i64 %918
  %921 = load i32*, i32** %920, align 8
  %922 = getelementptr inbounds i32, i32* %921, i64 %919
  %923 = load i32, i32* %922, align 4
  %924 = sext i32 %903 to i64
  %925 = getelementptr inbounds i8, i8* %87, i64 %924
  %926 = sext i32 %916 to i64
  %927 = getelementptr inbounds i8, i8* %87, i64 %926
  %928 = sext i32 %910 to i64
  %929 = getelementptr inbounds i8, i8* %88, i64 %928
  %930 = sext i32 %923 to i64
  %931 = getelementptr inbounds i8, i8* %88, i64 %930
  %932 = icmp ult i8* %925, %929
  %933 = icmp ult i8* %927, %931
  %934 = and i1 %932, %933
  br i1 %934, label %935, label %947

935:                                              ; preds = %874, %941
  %936 = phi i8* [ %943, %941 ], [ %927, %874 ]
  %937 = phi i8* [ %942, %941 ], [ %925, %874 ]
  %938 = load i8, i8* %937, align 1
  %939 = load i8, i8* %936, align 1
  %940 = icmp eq i8 %938, %939
  br i1 %940, label %941, label %956

941:                                              ; preds = %935
  %942 = getelementptr inbounds i8, i8* %937, i64 1
  %943 = getelementptr inbounds i8, i8* %936, i64 1
  %944 = icmp ult i8* %942, %929
  %945 = icmp ult i8* %943, %931
  %946 = and i1 %945, %944
  br i1 %946, label %935, label %947

947:                                              ; preds = %941, %874
  %948 = phi i8* [ %925, %874 ], [ %942, %941 ]
  %949 = phi i8* [ %927, %874 ], [ %943, %941 ]
  %950 = phi i1 [ %932, %874 ], [ %944, %941 ]
  %951 = phi i1 [ %933, %874 ], [ %945, %941 ]
  br i1 %950, label %952, label %962

952:                                              ; preds = %947
  br i1 %951, label %953, label %969

953:                                              ; preds = %952
  %954 = load i8, i8* %948, align 1
  %955 = load i8, i8* %949, align 1
  br label %956

956:                                              ; preds = %935, %953
  %957 = phi i8 [ %955, %953 ], [ %939, %935 ]
  %958 = phi i8 [ %954, %953 ], [ %938, %935 ]
  %959 = zext i8 %958 to i32
  %960 = zext i8 %957 to i32
  %961 = sub nsw i32 %959, %960
  br label %964

962:                                              ; preds = %947
  %963 = sext i1 %951 to i32
  br label %964

964:                                              ; preds = %956, %962
  %965 = phi i32 [ %963, %962 ], [ %961, %956 ]
  %966 = icmp eq i32 %965, 0
  br i1 %966, label %967, label %969

967:                                              ; preds = %964
  %968 = xor i32 %894, -1
  store i32 %968, i32* %893, align 4
  br label %969

969:                                              ; preds = %952, %871, %964, %967
  %970 = icmp eq i32 %98, 0
  br i1 %970, label %2206, label %971

971:                                              ; preds = %969
  %972 = add nsw i32 %98, -1
  %973 = sext i32 %972 to i64
  %974 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %973, i32 0, i32 0
  %975 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %974, align 8
  %976 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %973, i32 0, i32 1
  %977 = load i64, i64* %976, align 8
  %978 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %973, i32 1
  %979 = bitcast %"class.courgette::PagedArray_iterator.0"* %978 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %89, i8* align 8 %979, i64 16, i1 false)
  %980 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %973, i32 2
  %981 = bitcast %"class.courgette::PagedArray_iterator.0"* %980 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 8 %981, i64 16, i1 false)
  %982 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %973, i32 3
  %983 = load i32, i32* %982, align 8
  br label %1640

984:                                              ; preds = %96
  %985 = sub i64 %100, %93
  %986 = icmp sgt i64 %985, %80
  br i1 %986, label %1645, label %987

987:                                              ; preds = %984
  %988 = icmp ugt i64 %100, %93
  br i1 %988, label %989, label %1414

989:                                              ; preds = %987
  %990 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %81, align 8
  %991 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %83, align 8
  %992 = load i64, i64* %84, align 8
  %993 = add i64 %985, -1
  %994 = add i64 %993, %992
  %995 = trunc i64 %985 to i32
  %996 = icmp sgt i32 %995, 0
  br i1 %996, label %997, label %1026

997:                                              ; preds = %989
  %998 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %991, i64 0, i32 0
  %999 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %92, i64 0, i32 0
  br label %1000

1000:                                             ; preds = %1000, %997
  %1001 = phi i32 [ %995, %997 ], [ %1022, %1000 ]
  %1002 = phi i64 [ %992, %997 ], [ %1023, %1000 ]
  %1003 = phi i64 [ %93, %997 ], [ %1024, %1000 ]
  %1004 = lshr i64 %1002, 18
  %1005 = and i64 %1002, 262143
  %1006 = load i32**, i32*** %998, align 8
  %1007 = getelementptr inbounds i32*, i32** %1006, i64 %1004
  %1008 = load i32*, i32** %1007, align 8
  %1009 = getelementptr inbounds i32, i32* %1008, i64 %1005
  %1010 = load i32, i32* %1009, align 4
  %1011 = lshr i64 %1003, 18
  %1012 = and i64 %1003, 262143
  %1013 = load i32**, i32*** %999, align 8
  %1014 = getelementptr inbounds i32*, i32** %1013, i64 %1011
  %1015 = load i32*, i32** %1014, align 8
  %1016 = getelementptr inbounds i32, i32* %1015, i64 %1012
  %1017 = load i32, i32* %1016, align 4
  store i32 %1017, i32* %1009, align 4
  %1018 = load i32**, i32*** %999, align 8
  %1019 = getelementptr inbounds i32*, i32** %1018, i64 %1011
  %1020 = load i32*, i32** %1019, align 8
  %1021 = getelementptr inbounds i32, i32* %1020, i64 %1012
  store i32 %1010, i32* %1021, align 4
  %1022 = add nsw i32 %1001, -1
  %1023 = add i64 %1002, 1
  %1024 = add i64 %1003, 1
  %1025 = icmp sgt i32 %1022, 0
  br i1 %1025, label %1000, label %1026

1026:                                             ; preds = %1000, %989
  %1027 = lshr i64 %93, 18
  %1028 = and i64 %93, 262143
  %1029 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %92, i64 0, i32 0
  %1030 = load i32**, i32*** %1029, align 8
  %1031 = getelementptr inbounds i32*, i32** %1030, i64 %1027
  %1032 = load i32*, i32** %1031, align 8
  %1033 = getelementptr inbounds i32, i32* %1032, i64 %1028
  %1034 = load i32, i32* %1033, align 4
  %1035 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %991, i64 0, i32 0
  %1036 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %990, i64 0, i32 0
  br label %1041

1037:                                             ; preds = %1262, %1398
  %1038 = phi i64 [ %1342, %1398 ], [ %1206, %1262 ]
  %1039 = phi i64 [ %1303, %1398 ], [ %1048, %1262 ]
  %1040 = phi i64 [ %1328, %1398 ], [ %1192, %1262 ]
  br label %1041

1041:                                             ; preds = %1037, %1026
  %1042 = phi i64 [ %100, %1026 ], [ %1038, %1037 ]
  %1043 = phi i64 [ %992, %1026 ], [ %1039, %1037 ]
  %1044 = phi i64 [ %93, %1026 ], [ %1040, %1037 ]
  %1045 = lshr i64 %1042, 18
  %1046 = and i64 %1042, 262143
  br label %1047

1047:                                             ; preds = %1157, %1041
  %1048 = phi i64 [ %1043, %1041 ], [ %1165, %1157 ]
  %1049 = phi i64 [ %1044, %1041 ], [ %1146, %1157 ]
  %1050 = lshr i64 %1048, 18
  %1051 = and i64 %1048, 262143
  %1052 = load i32**, i32*** %1035, align 8
  %1053 = getelementptr inbounds i32*, i32** %1052, i64 %1050
  %1054 = load i32*, i32** %1053, align 8
  %1055 = getelementptr inbounds i32, i32* %1054, i64 %1051
  %1056 = load i32, i32* %1055, align 4
  %1057 = sext i32 %1056 to i64
  %1058 = add i64 %1057, %2
  %1059 = load i32**, i32*** %1036, align 8
  %1060 = getelementptr inbounds i32*, i32** %1059, i64 %1045
  %1061 = load i32*, i32** %1060, align 8
  %1062 = getelementptr inbounds i32, i32* %1061, i64 %1046
  %1063 = load i32, i32* %1062, align 4
  %1064 = sext i32 %1063 to i64
  %1065 = add i64 %1064, %2
  %1066 = lshr i64 %1058, 18
  %1067 = and i64 %1058, 262143
  %1068 = load i32**, i32*** %85, align 8
  %1069 = getelementptr inbounds i32*, i32** %1068, i64 %1066
  %1070 = load i32*, i32** %1069, align 8
  %1071 = getelementptr inbounds i32, i32* %1070, i64 %1067
  %1072 = load i32, i32* %1071, align 4
  %1073 = add i64 %1058, 1
  %1074 = lshr i64 %1073, 18
  %1075 = and i64 %1073, 262143
  %1076 = getelementptr inbounds i32*, i32** %1068, i64 %1074
  %1077 = load i32*, i32** %1076, align 8
  %1078 = getelementptr inbounds i32, i32* %1077, i64 %1075
  %1079 = load i32, i32* %1078, align 4
  %1080 = lshr i64 %1065, 18
  %1081 = and i64 %1065, 262143
  %1082 = getelementptr inbounds i32*, i32** %1068, i64 %1080
  %1083 = load i32*, i32** %1082, align 8
  %1084 = getelementptr inbounds i32, i32* %1083, i64 %1081
  %1085 = load i32, i32* %1084, align 4
  %1086 = add i64 %1065, 1
  %1087 = lshr i64 %1086, 18
  %1088 = and i64 %1086, 262143
  %1089 = getelementptr inbounds i32*, i32** %1068, i64 %1087
  %1090 = load i32*, i32** %1089, align 8
  %1091 = getelementptr inbounds i32, i32* %1090, i64 %1088
  %1092 = load i32, i32* %1091, align 4
  %1093 = sext i32 %1072 to i64
  %1094 = getelementptr inbounds i8, i8* %87, i64 %1093
  %1095 = sext i32 %1085 to i64
  %1096 = getelementptr inbounds i8, i8* %87, i64 %1095
  %1097 = sext i32 %1079 to i64
  %1098 = getelementptr inbounds i8, i8* %88, i64 %1097
  %1099 = sext i32 %1092 to i64
  %1100 = getelementptr inbounds i8, i8* %88, i64 %1099
  %1101 = icmp ult i8* %1094, %1098
  %1102 = icmp ult i8* %1096, %1100
  %1103 = and i1 %1101, %1102
  br i1 %1103, label %1104, label %1116

1104:                                             ; preds = %1047, %1110
  %1105 = phi i8* [ %1112, %1110 ], [ %1096, %1047 ]
  %1106 = phi i8* [ %1111, %1110 ], [ %1094, %1047 ]
  %1107 = load i8, i8* %1106, align 1
  %1108 = load i8, i8* %1105, align 1
  %1109 = icmp eq i8 %1107, %1108
  br i1 %1109, label %1110, label %1125

1110:                                             ; preds = %1104
  %1111 = getelementptr inbounds i8, i8* %1106, i64 1
  %1112 = getelementptr inbounds i8, i8* %1105, i64 1
  %1113 = icmp ult i8* %1111, %1098
  %1114 = icmp ult i8* %1112, %1100
  %1115 = and i1 %1114, %1113
  br i1 %1115, label %1104, label %1116

1116:                                             ; preds = %1110, %1047
  %1117 = phi i8* [ %1094, %1047 ], [ %1111, %1110 ]
  %1118 = phi i8* [ %1096, %1047 ], [ %1112, %1110 ]
  %1119 = phi i1 [ %1101, %1047 ], [ %1113, %1110 ]
  %1120 = phi i1 [ %1102, %1047 ], [ %1114, %1110 ]
  br i1 %1119, label %1121, label %1131

1121:                                             ; preds = %1116
  br i1 %1120, label %1122, label %1181

1122:                                             ; preds = %1121
  %1123 = load i8, i8* %1117, align 1
  %1124 = load i8, i8* %1118, align 1
  br label %1125

1125:                                             ; preds = %1104, %1122
  %1126 = phi i8 [ %1124, %1122 ], [ %1108, %1104 ]
  %1127 = phi i8 [ %1123, %1122 ], [ %1107, %1104 ]
  %1128 = zext i8 %1127 to i32
  %1129 = zext i8 %1126 to i32
  %1130 = sub nsw i32 %1128, %1129
  br label %1133

1131:                                             ; preds = %1116
  %1132 = sext i1 %1120 to i32
  br label %1133

1133:                                             ; preds = %1131, %1125
  %1134 = phi i32 [ %1132, %1131 ], [ %1130, %1125 ]
  %1135 = icmp slt i32 %1134, 0
  br i1 %1135, label %1136, label %1178

1136:                                             ; preds = %1133, %1157
  %1137 = phi i32** [ %1172, %1157 ], [ %1052, %1133 ]
  %1138 = phi i64 [ %1165, %1157 ], [ %1048, %1133 ]
  %1139 = phi i64 [ %1146, %1157 ], [ %1049, %1133 ]
  %1140 = lshr i64 %1138, 18
  %1141 = and i64 %1138, 262143
  %1142 = getelementptr inbounds i32*, i32** %1137, i64 %1140
  %1143 = load i32*, i32** %1142, align 8
  %1144 = getelementptr inbounds i32, i32* %1143, i64 %1141
  %1145 = load i32, i32* %1144, align 4
  %1146 = add i64 %1139, 1
  %1147 = lshr i64 %1139, 18
  %1148 = and i64 %1139, 262143
  %1149 = load i32**, i32*** %1029, align 8
  %1150 = getelementptr inbounds i32*, i32** %1149, i64 %1147
  %1151 = load i32*, i32** %1150, align 8
  %1152 = getelementptr inbounds i32, i32* %1151, i64 %1148
  store i32 %1145, i32* %1152, align 4
  %1153 = icmp ugt i64 %994, %1138
  br i1 %1153, label %1157, label %1154

1154:                                             ; preds = %1136
  %1155 = lshr i64 %994, 18
  %1156 = and i64 %994, 262143
  br label %1407

1157:                                             ; preds = %1136
  %1158 = lshr i64 %1146, 18
  %1159 = and i64 %1146, 262143
  %1160 = load i32**, i32*** %1029, align 8
  %1161 = getelementptr inbounds i32*, i32** %1160, i64 %1158
  %1162 = load i32*, i32** %1161, align 8
  %1163 = getelementptr inbounds i32, i32* %1162, i64 %1159
  %1164 = load i32, i32* %1163, align 4
  %1165 = add nuw i64 %1138, 1
  %1166 = load i32**, i32*** %1035, align 8
  %1167 = getelementptr inbounds i32*, i32** %1166, i64 %1140
  %1168 = load i32*, i32** %1167, align 8
  %1169 = getelementptr inbounds i32, i32* %1168, i64 %1141
  store i32 %1164, i32* %1169, align 4
  %1170 = lshr i64 %1165, 18
  %1171 = and i64 %1165, 262143
  %1172 = load i32**, i32*** %1035, align 8
  %1173 = getelementptr inbounds i32*, i32** %1172, i64 %1170
  %1174 = load i32*, i32** %1173, align 8
  %1175 = getelementptr inbounds i32, i32* %1174, i64 %1171
  %1176 = load i32, i32* %1175, align 4
  %1177 = icmp slt i32 %1176, 0
  br i1 %1177, label %1136, label %1047

1178:                                             ; preds = %1133
  %1179 = getelementptr inbounds i32, i32* %1061, i64 %1046
  %1180 = icmp eq i32 %1134, 0
  br i1 %1180, label %1271, label %1181

1181:                                             ; preds = %1121, %1178
  br label %1182

1182:                                             ; preds = %1181, %1262
  %1183 = phi i32** [ %1265, %1262 ], [ %1059, %1181 ]
  %1184 = phi i64 [ %1206, %1262 ], [ %1042, %1181 ]
  %1185 = phi i64 [ %1192, %1262 ], [ %1049, %1181 ]
  %1186 = lshr i64 %1184, 18
  %1187 = and i64 %1184, 262143
  %1188 = getelementptr inbounds i32*, i32** %1183, i64 %1186
  %1189 = load i32*, i32** %1188, align 8
  %1190 = getelementptr inbounds i32, i32* %1189, i64 %1187
  %1191 = load i32, i32* %1190, align 4
  %1192 = add i64 %1185, 1
  %1193 = lshr i64 %1185, 18
  %1194 = and i64 %1185, 262143
  %1195 = load i32**, i32*** %1029, align 8
  %1196 = getelementptr inbounds i32*, i32** %1195, i64 %1193
  %1197 = load i32*, i32** %1196, align 8
  %1198 = getelementptr inbounds i32, i32* %1197, i64 %1194
  store i32 %1191, i32* %1198, align 4
  %1199 = lshr i64 %1192, 18
  %1200 = and i64 %1192, 262143
  %1201 = load i32**, i32*** %1029, align 8
  %1202 = getelementptr inbounds i32*, i32** %1201, i64 %1199
  %1203 = load i32*, i32** %1202, align 8
  %1204 = getelementptr inbounds i32, i32* %1203, i64 %1200
  %1205 = load i32, i32* %1204, align 4
  %1206 = add i64 %1184, 1
  %1207 = load i32**, i32*** %1036, align 8
  %1208 = getelementptr inbounds i32*, i32** %1207, i64 %1186
  %1209 = load i32*, i32** %1208, align 8
  %1210 = getelementptr inbounds i32, i32* %1209, i64 %1187
  store i32 %1205, i32* %1210, align 4
  %1211 = icmp ugt i64 %99, %1206
  br i1 %1211, label %1262, label %1212

1212:                                             ; preds = %1182
  %1213 = icmp ult i64 %1048, %994
  %1214 = load i32**, i32*** %1035, align 8
  %1215 = getelementptr inbounds i32*, i32** %1214, i64 %1050
  %1216 = load i32*, i32** %1215, align 8
  %1217 = getelementptr inbounds i32, i32* %1216, i64 %1051
  %1218 = load i32, i32* %1217, align 4
  br i1 %1213, label %1219, label %1252

1219:                                             ; preds = %1212, %1219
  %1220 = phi i32 [ %1250, %1219 ], [ %1218, %1212 ]
  %1221 = phi i64 [ %1245, %1219 ], [ %1051, %1212 ]
  %1222 = phi i64 [ %1244, %1219 ], [ %1050, %1212 ]
  %1223 = phi i64 [ %1225, %1219 ], [ %1192, %1212 ]
  %1224 = phi i64 [ %1239, %1219 ], [ %1048, %1212 ]
  %1225 = add i64 %1223, 1
  %1226 = lshr i64 %1223, 18
  %1227 = and i64 %1223, 262143
  %1228 = load i32**, i32*** %1029, align 8
  %1229 = getelementptr inbounds i32*, i32** %1228, i64 %1226
  %1230 = load i32*, i32** %1229, align 8
  %1231 = getelementptr inbounds i32, i32* %1230, i64 %1227
  store i32 %1220, i32* %1231, align 4
  %1232 = lshr i64 %1225, 18
  %1233 = and i64 %1225, 262143
  %1234 = load i32**, i32*** %1029, align 8
  %1235 = getelementptr inbounds i32*, i32** %1234, i64 %1232
  %1236 = load i32*, i32** %1235, align 8
  %1237 = getelementptr inbounds i32, i32* %1236, i64 %1233
  %1238 = load i32, i32* %1237, align 4
  %1239 = add nuw i64 %1224, 1
  %1240 = load i32**, i32*** %1035, align 8
  %1241 = getelementptr inbounds i32*, i32** %1240, i64 %1222
  %1242 = load i32*, i32** %1241, align 8
  %1243 = getelementptr inbounds i32, i32* %1242, i64 %1221
  store i32 %1238, i32* %1243, align 4
  %1244 = lshr i64 %1239, 18
  %1245 = and i64 %1239, 262143
  %1246 = load i32**, i32*** %1035, align 8
  %1247 = getelementptr inbounds i32*, i32** %1246, i64 %1244
  %1248 = load i32*, i32** %1247, align 8
  %1249 = getelementptr inbounds i32, i32* %1248, i64 %1245
  %1250 = load i32, i32* %1249, align 4
  %1251 = icmp eq i64 %1239, %994
  br i1 %1251, label %1252, label %1219

1252:                                             ; preds = %1219, %1212
  %1253 = phi i64 [ %1200, %1212 ], [ %1233, %1219 ]
  %1254 = phi i64 [ %1199, %1212 ], [ %1232, %1219 ]
  %1255 = phi i64 [ %1050, %1212 ], [ %1244, %1219 ]
  %1256 = phi i64 [ %1051, %1212 ], [ %1245, %1219 ]
  %1257 = phi i32 [ %1218, %1212 ], [ %1250, %1219 ]
  %1258 = load i32**, i32*** %1029, align 8
  %1259 = getelementptr inbounds i32*, i32** %1258, i64 %1254
  %1260 = load i32*, i32** %1259, align 8
  %1261 = getelementptr inbounds i32, i32* %1260, i64 %1253
  store i32 %1257, i32* %1261, align 4
  br label %1407

1262:                                             ; preds = %1182
  %1263 = lshr i64 %1206, 18
  %1264 = and i64 %1206, 262143
  %1265 = load i32**, i32*** %1036, align 8
  %1266 = getelementptr inbounds i32*, i32** %1265, i64 %1263
  %1267 = load i32*, i32** %1266, align 8
  %1268 = getelementptr inbounds i32, i32* %1267, i64 %1264
  %1269 = load i32, i32* %1268, align 4
  %1270 = icmp slt i32 %1269, 0
  br i1 %1270, label %1182, label %1037

1271:                                             ; preds = %1178
  %1272 = xor i32 %1063, -1
  store i32 %1272, i32* %1179, align 4
  %1273 = load i32**, i32*** %1035, align 8
  br label %1274

1274:                                             ; preds = %1295, %1271
  %1275 = phi i32** [ %1273, %1271 ], [ %1310, %1295 ]
  %1276 = phi i64 [ %1048, %1271 ], [ %1303, %1295 ]
  %1277 = phi i64 [ %1049, %1271 ], [ %1284, %1295 ]
  %1278 = lshr i64 %1276, 18
  %1279 = and i64 %1276, 262143
  %1280 = getelementptr inbounds i32*, i32** %1275, i64 %1278
  %1281 = load i32*, i32** %1280, align 8
  %1282 = getelementptr inbounds i32, i32* %1281, i64 %1279
  %1283 = load i32, i32* %1282, align 4
  %1284 = add i64 %1277, 1
  %1285 = lshr i64 %1277, 18
  %1286 = and i64 %1277, 262143
  %1287 = load i32**, i32*** %1029, align 8
  %1288 = getelementptr inbounds i32*, i32** %1287, i64 %1285
  %1289 = load i32*, i32** %1288, align 8
  %1290 = getelementptr inbounds i32, i32* %1289, i64 %1286
  store i32 %1283, i32* %1290, align 4
  %1291 = icmp ugt i64 %994, %1276
  br i1 %1291, label %1295, label %1292

1292:                                             ; preds = %1274
  %1293 = lshr i64 %994, 18
  %1294 = and i64 %994, 262143
  br label %1407

1295:                                             ; preds = %1274
  %1296 = lshr i64 %1284, 18
  %1297 = and i64 %1284, 262143
  %1298 = load i32**, i32*** %1029, align 8
  %1299 = getelementptr inbounds i32*, i32** %1298, i64 %1296
  %1300 = load i32*, i32** %1299, align 8
  %1301 = getelementptr inbounds i32, i32* %1300, i64 %1297
  %1302 = load i32, i32* %1301, align 4
  %1303 = add nuw i64 %1276, 1
  %1304 = load i32**, i32*** %1035, align 8
  %1305 = getelementptr inbounds i32*, i32** %1304, i64 %1278
  %1306 = load i32*, i32** %1305, align 8
  %1307 = getelementptr inbounds i32, i32* %1306, i64 %1279
  store i32 %1302, i32* %1307, align 4
  %1308 = lshr i64 %1303, 18
  %1309 = and i64 %1303, 262143
  %1310 = load i32**, i32*** %1035, align 8
  %1311 = getelementptr inbounds i32*, i32** %1310, i64 %1308
  %1312 = load i32*, i32** %1311, align 8
  %1313 = getelementptr inbounds i32, i32* %1312, i64 %1309
  %1314 = load i32, i32* %1313, align 4
  %1315 = icmp slt i32 %1314, 0
  br i1 %1315, label %1274, label %1316

1316:                                             ; preds = %1295
  %1317 = load i32**, i32*** %1036, align 8
  br label %1318

1318:                                             ; preds = %1398, %1316
  %1319 = phi i32** [ %1401, %1398 ], [ %1317, %1316 ]
  %1320 = phi i64 [ %1342, %1398 ], [ %1042, %1316 ]
  %1321 = phi i64 [ %1328, %1398 ], [ %1284, %1316 ]
  %1322 = lshr i64 %1320, 18
  %1323 = and i64 %1320, 262143
  %1324 = getelementptr inbounds i32*, i32** %1319, i64 %1322
  %1325 = load i32*, i32** %1324, align 8
  %1326 = getelementptr inbounds i32, i32* %1325, i64 %1323
  %1327 = load i32, i32* %1326, align 4
  %1328 = add i64 %1321, 1
  %1329 = lshr i64 %1321, 18
  %1330 = and i64 %1321, 262143
  %1331 = load i32**, i32*** %1029, align 8
  %1332 = getelementptr inbounds i32*, i32** %1331, i64 %1329
  %1333 = load i32*, i32** %1332, align 8
  %1334 = getelementptr inbounds i32, i32* %1333, i64 %1330
  store i32 %1327, i32* %1334, align 4
  %1335 = lshr i64 %1328, 18
  %1336 = and i64 %1328, 262143
  %1337 = load i32**, i32*** %1029, align 8
  %1338 = getelementptr inbounds i32*, i32** %1337, i64 %1335
  %1339 = load i32*, i32** %1338, align 8
  %1340 = getelementptr inbounds i32, i32* %1339, i64 %1336
  %1341 = load i32, i32* %1340, align 4
  %1342 = add i64 %1320, 1
  %1343 = load i32**, i32*** %1036, align 8
  %1344 = getelementptr inbounds i32*, i32** %1343, i64 %1322
  %1345 = load i32*, i32** %1344, align 8
  %1346 = getelementptr inbounds i32, i32* %1345, i64 %1323
  store i32 %1341, i32* %1346, align 4
  %1347 = icmp ugt i64 %99, %1342
  br i1 %1347, label %1398, label %1348

1348:                                             ; preds = %1318
  %1349 = icmp ult i64 %1303, %994
  %1350 = load i32**, i32*** %1035, align 8
  %1351 = getelementptr inbounds i32*, i32** %1350, i64 %1308
  %1352 = load i32*, i32** %1351, align 8
  %1353 = getelementptr inbounds i32, i32* %1352, i64 %1309
  %1354 = load i32, i32* %1353, align 4
  br i1 %1349, label %1355, label %1388

1355:                                             ; preds = %1348, %1355
  %1356 = phi i32 [ %1386, %1355 ], [ %1354, %1348 ]
  %1357 = phi i64 [ %1381, %1355 ], [ %1309, %1348 ]
  %1358 = phi i64 [ %1380, %1355 ], [ %1308, %1348 ]
  %1359 = phi i64 [ %1361, %1355 ], [ %1328, %1348 ]
  %1360 = phi i64 [ %1375, %1355 ], [ %1303, %1348 ]
  %1361 = add i64 %1359, 1
  %1362 = lshr i64 %1359, 18
  %1363 = and i64 %1359, 262143
  %1364 = load i32**, i32*** %1029, align 8
  %1365 = getelementptr inbounds i32*, i32** %1364, i64 %1362
  %1366 = load i32*, i32** %1365, align 8
  %1367 = getelementptr inbounds i32, i32* %1366, i64 %1363
  store i32 %1356, i32* %1367, align 4
  %1368 = lshr i64 %1361, 18
  %1369 = and i64 %1361, 262143
  %1370 = load i32**, i32*** %1029, align 8
  %1371 = getelementptr inbounds i32*, i32** %1370, i64 %1368
  %1372 = load i32*, i32** %1371, align 8
  %1373 = getelementptr inbounds i32, i32* %1372, i64 %1369
  %1374 = load i32, i32* %1373, align 4
  %1375 = add nuw i64 %1360, 1
  %1376 = load i32**, i32*** %1035, align 8
  %1377 = getelementptr inbounds i32*, i32** %1376, i64 %1358
  %1378 = load i32*, i32** %1377, align 8
  %1379 = getelementptr inbounds i32, i32* %1378, i64 %1357
  store i32 %1374, i32* %1379, align 4
  %1380 = lshr i64 %1375, 18
  %1381 = and i64 %1375, 262143
  %1382 = load i32**, i32*** %1035, align 8
  %1383 = getelementptr inbounds i32*, i32** %1382, i64 %1380
  %1384 = load i32*, i32** %1383, align 8
  %1385 = getelementptr inbounds i32, i32* %1384, i64 %1381
  %1386 = load i32, i32* %1385, align 4
  %1387 = icmp eq i64 %1375, %994
  br i1 %1387, label %1388, label %1355

1388:                                             ; preds = %1355, %1348
  %1389 = phi i64 [ %1336, %1348 ], [ %1369, %1355 ]
  %1390 = phi i64 [ %1335, %1348 ], [ %1368, %1355 ]
  %1391 = phi i64 [ %1308, %1348 ], [ %1380, %1355 ]
  %1392 = phi i64 [ %1309, %1348 ], [ %1381, %1355 ]
  %1393 = phi i32 [ %1354, %1348 ], [ %1386, %1355 ]
  %1394 = load i32**, i32*** %1029, align 8
  %1395 = getelementptr inbounds i32*, i32** %1394, i64 %1390
  %1396 = load i32*, i32** %1395, align 8
  %1397 = getelementptr inbounds i32, i32* %1396, i64 %1389
  store i32 %1393, i32* %1397, align 4
  br label %1407

1398:                                             ; preds = %1318
  %1399 = lshr i64 %1342, 18
  %1400 = and i64 %1342, 262143
  %1401 = load i32**, i32*** %1036, align 8
  %1402 = getelementptr inbounds i32*, i32** %1401, i64 %1399
  %1403 = load i32*, i32** %1402, align 8
  %1404 = getelementptr inbounds i32, i32* %1403, i64 %1400
  %1405 = load i32, i32* %1404, align 4
  %1406 = icmp slt i32 %1405, 0
  br i1 %1406, label %1318, label %1037

1407:                                             ; preds = %1154, %1252, %1292, %1388
  %1408 = phi i64 [ %1391, %1388 ], [ %1293, %1292 ], [ %1255, %1252 ], [ %1155, %1154 ]
  %1409 = phi i64 [ %1392, %1388 ], [ %1294, %1292 ], [ %1256, %1252 ], [ %1156, %1154 ]
  %1410 = load i32**, i32*** %1035, align 8
  %1411 = getelementptr inbounds i32*, i32** %1410, i64 %1408
  %1412 = load i32*, i32** %1411, align 8
  %1413 = getelementptr inbounds i32, i32* %1412, i64 %1409
  store i32 %1034, i32* %1413, align 4
  br label %1414

1414:                                             ; preds = %1407, %987
  %1415 = and i32 %97, 1
  %1416 = icmp eq i32 %1415, 0
  br i1 %1416, label %1426, label %1417

1417:                                             ; preds = %1414
  %1418 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %92, i64 0, i32 0
  %1419 = load i32**, i32*** %1418, align 8
  %1420 = lshr i64 %93, 18
  %1421 = and i64 %93, 262143
  %1422 = getelementptr inbounds i32*, i32** %1419, i64 %1420
  %1423 = load i32*, i32** %1422, align 8
  %1424 = getelementptr inbounds i32, i32* %1423, i64 %1421
  %1425 = load i32, i32* %1424, align 4
  br label %1521

1426:                                             ; preds = %1414
  %1427 = and i32 %97, 2
  %1428 = icmp eq i32 %1427, 0
  br i1 %1428, label %1527, label %1429

1429:                                             ; preds = %1426
  %1430 = add i64 %93, -1
  %1431 = lshr i64 %1430, 18
  %1432 = and i64 %1430, 262143
  %1433 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %92, i64 0, i32 0
  %1434 = load i32**, i32*** %1433, align 8
  %1435 = getelementptr inbounds i32*, i32** %1434, i64 %1431
  %1436 = load i32*, i32** %1435, align 8
  %1437 = getelementptr inbounds i32, i32* %1436, i64 %1432
  %1438 = load i32, i32* %1437, align 4
  %1439 = ashr i32 %1438, 31
  %1440 = xor i32 %1439, %1438
  %1441 = sext i32 %1440 to i64
  %1442 = add i64 %1441, %2
  %1443 = lshr i64 %93, 18
  %1444 = and i64 %93, 262143
  %1445 = getelementptr inbounds i32*, i32** %1434, i64 %1443
  %1446 = load i32*, i32** %1445, align 8
  %1447 = getelementptr inbounds i32, i32* %1446, i64 %1444
  %1448 = load i32, i32* %1447, align 4
  %1449 = sext i32 %1448 to i64
  %1450 = add i64 %1449, %2
  %1451 = lshr i64 %1442, 18
  %1452 = and i64 %1442, 262143
  %1453 = load i32**, i32*** %85, align 8
  %1454 = getelementptr inbounds i32*, i32** %1453, i64 %1451
  %1455 = load i32*, i32** %1454, align 8
  %1456 = getelementptr inbounds i32, i32* %1455, i64 %1452
  %1457 = load i32, i32* %1456, align 4
  %1458 = add i64 %1442, 1
  %1459 = lshr i64 %1458, 18
  %1460 = and i64 %1458, 262143
  %1461 = getelementptr inbounds i32*, i32** %1453, i64 %1459
  %1462 = load i32*, i32** %1461, align 8
  %1463 = getelementptr inbounds i32, i32* %1462, i64 %1460
  %1464 = load i32, i32* %1463, align 4
  %1465 = lshr i64 %1450, 18
  %1466 = and i64 %1450, 262143
  %1467 = getelementptr inbounds i32*, i32** %1453, i64 %1465
  %1468 = load i32*, i32** %1467, align 8
  %1469 = getelementptr inbounds i32, i32* %1468, i64 %1466
  %1470 = load i32, i32* %1469, align 4
  %1471 = add i64 %1450, 1
  %1472 = lshr i64 %1471, 18
  %1473 = and i64 %1471, 262143
  %1474 = getelementptr inbounds i32*, i32** %1453, i64 %1472
  %1475 = load i32*, i32** %1474, align 8
  %1476 = getelementptr inbounds i32, i32* %1475, i64 %1473
  %1477 = load i32, i32* %1476, align 4
  %1478 = sext i32 %1457 to i64
  %1479 = getelementptr inbounds i8, i8* %87, i64 %1478
  %1480 = sext i32 %1470 to i64
  %1481 = getelementptr inbounds i8, i8* %87, i64 %1480
  %1482 = sext i32 %1464 to i64
  %1483 = getelementptr inbounds i8, i8* %88, i64 %1482
  %1484 = sext i32 %1477 to i64
  %1485 = getelementptr inbounds i8, i8* %88, i64 %1484
  %1486 = icmp ult i8* %1479, %1483
  %1487 = icmp ult i8* %1481, %1485
  %1488 = and i1 %1486, %1487
  br i1 %1488, label %1489, label %1501

1489:                                             ; preds = %1429, %1495
  %1490 = phi i8* [ %1497, %1495 ], [ %1481, %1429 ]
  %1491 = phi i8* [ %1496, %1495 ], [ %1479, %1429 ]
  %1492 = load i8, i8* %1491, align 1
  %1493 = load i8, i8* %1490, align 1
  %1494 = icmp eq i8 %1492, %1493
  br i1 %1494, label %1495, label %1510

1495:                                             ; preds = %1489
  %1496 = getelementptr inbounds i8, i8* %1491, i64 1
  %1497 = getelementptr inbounds i8, i8* %1490, i64 1
  %1498 = icmp ult i8* %1496, %1483
  %1499 = icmp ult i8* %1497, %1485
  %1500 = and i1 %1499, %1498
  br i1 %1500, label %1489, label %1501

1501:                                             ; preds = %1495, %1429
  %1502 = phi i8* [ %1479, %1429 ], [ %1496, %1495 ]
  %1503 = phi i8* [ %1481, %1429 ], [ %1497, %1495 ]
  %1504 = phi i1 [ %1486, %1429 ], [ %1498, %1495 ]
  %1505 = phi i1 [ %1487, %1429 ], [ %1499, %1495 ]
  br i1 %1504, label %1506, label %1516

1506:                                             ; preds = %1501
  br i1 %1505, label %1507, label %1527

1507:                                             ; preds = %1506
  %1508 = load i8, i8* %1502, align 1
  %1509 = load i8, i8* %1503, align 1
  br label %1510

1510:                                             ; preds = %1489, %1507
  %1511 = phi i8 [ %1509, %1507 ], [ %1493, %1489 ]
  %1512 = phi i8 [ %1508, %1507 ], [ %1492, %1489 ]
  %1513 = zext i8 %1512 to i32
  %1514 = zext i8 %1511 to i32
  %1515 = sub nsw i32 %1513, %1514
  br label %1518

1516:                                             ; preds = %1501
  %1517 = sext i1 %1505 to i32
  br label %1518

1518:                                             ; preds = %1510, %1516
  %1519 = phi i32 [ %1517, %1516 ], [ %1515, %1510 ]
  %1520 = icmp eq i32 %1519, 0
  br i1 %1520, label %1521, label %1527

1521:                                             ; preds = %1417, %1518
  %1522 = phi i32 [ %1425, %1417 ], [ %1448, %1518 ]
  %1523 = phi i32* [ %1423, %1417 ], [ %1446, %1518 ]
  %1524 = phi i64 [ %1421, %1417 ], [ %1444, %1518 ]
  %1525 = getelementptr inbounds i32, i32* %1523, i64 %1524
  %1526 = xor i32 %1522, -1
  store i32 %1526, i32* %1525, align 4
  br label %1527

1527:                                             ; preds = %1506, %1426, %1521, %1518
  %1528 = and i32 %97, 4
  %1529 = icmp eq i32 %1528, 0
  br i1 %1529, label %1625, label %1530

1530:                                             ; preds = %1527
  %1531 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %82, align 8
  %1532 = add i64 %99, -1
  %1533 = lshr i64 %1532, 18
  %1534 = and i64 %1532, 262143
  %1535 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1531, i64 0, i32 0
  %1536 = load i32**, i32*** %1535, align 8
  %1537 = getelementptr inbounds i32*, i32** %1536, i64 %1533
  %1538 = load i32*, i32** %1537, align 8
  %1539 = getelementptr inbounds i32, i32* %1538, i64 %1534
  %1540 = load i32, i32* %1539, align 4
  %1541 = ashr i32 %1540, 31
  %1542 = xor i32 %1541, %1540
  %1543 = sext i32 %1542 to i64
  %1544 = add i64 %1543, %2
  %1545 = lshr i64 %99, 18
  %1546 = and i64 %99, 262143
  %1547 = getelementptr inbounds i32*, i32** %1536, i64 %1545
  %1548 = load i32*, i32** %1547, align 8
  %1549 = getelementptr inbounds i32, i32* %1548, i64 %1546
  %1550 = load i32, i32* %1549, align 4
  %1551 = sext i32 %1550 to i64
  %1552 = add i64 %1551, %2
  %1553 = lshr i64 %1544, 18
  %1554 = and i64 %1544, 262143
  %1555 = load i32**, i32*** %85, align 8
  %1556 = getelementptr inbounds i32*, i32** %1555, i64 %1553
  %1557 = load i32*, i32** %1556, align 8
  %1558 = getelementptr inbounds i32, i32* %1557, i64 %1554
  %1559 = load i32, i32* %1558, align 4
  %1560 = add i64 %1544, 1
  %1561 = lshr i64 %1560, 18
  %1562 = and i64 %1560, 262143
  %1563 = getelementptr inbounds i32*, i32** %1555, i64 %1561
  %1564 = load i32*, i32** %1563, align 8
  %1565 = getelementptr inbounds i32, i32* %1564, i64 %1562
  %1566 = load i32, i32* %1565, align 4
  %1567 = lshr i64 %1552, 18
  %1568 = and i64 %1552, 262143
  %1569 = getelementptr inbounds i32*, i32** %1555, i64 %1567
  %1570 = load i32*, i32** %1569, align 8
  %1571 = getelementptr inbounds i32, i32* %1570, i64 %1568
  %1572 = load i32, i32* %1571, align 4
  %1573 = add i64 %1552, 1
  %1574 = lshr i64 %1573, 18
  %1575 = and i64 %1573, 262143
  %1576 = getelementptr inbounds i32*, i32** %1555, i64 %1574
  %1577 = load i32*, i32** %1576, align 8
  %1578 = getelementptr inbounds i32, i32* %1577, i64 %1575
  %1579 = load i32, i32* %1578, align 4
  %1580 = sext i32 %1559 to i64
  %1581 = getelementptr inbounds i8, i8* %87, i64 %1580
  %1582 = sext i32 %1572 to i64
  %1583 = getelementptr inbounds i8, i8* %87, i64 %1582
  %1584 = sext i32 %1566 to i64
  %1585 = getelementptr inbounds i8, i8* %88, i64 %1584
  %1586 = sext i32 %1579 to i64
  %1587 = getelementptr inbounds i8, i8* %88, i64 %1586
  %1588 = icmp ult i8* %1581, %1585
  %1589 = icmp ult i8* %1583, %1587
  %1590 = and i1 %1588, %1589
  br i1 %1590, label %1591, label %1603

1591:                                             ; preds = %1530, %1597
  %1592 = phi i8* [ %1599, %1597 ], [ %1583, %1530 ]
  %1593 = phi i8* [ %1598, %1597 ], [ %1581, %1530 ]
  %1594 = load i8, i8* %1593, align 1
  %1595 = load i8, i8* %1592, align 1
  %1596 = icmp eq i8 %1594, %1595
  br i1 %1596, label %1597, label %1612

1597:                                             ; preds = %1591
  %1598 = getelementptr inbounds i8, i8* %1593, i64 1
  %1599 = getelementptr inbounds i8, i8* %1592, i64 1
  %1600 = icmp ult i8* %1598, %1585
  %1601 = icmp ult i8* %1599, %1587
  %1602 = and i1 %1601, %1600
  br i1 %1602, label %1591, label %1603

1603:                                             ; preds = %1597, %1530
  %1604 = phi i8* [ %1581, %1530 ], [ %1598, %1597 ]
  %1605 = phi i8* [ %1583, %1530 ], [ %1599, %1597 ]
  %1606 = phi i1 [ %1588, %1530 ], [ %1600, %1597 ]
  %1607 = phi i1 [ %1589, %1530 ], [ %1601, %1597 ]
  br i1 %1606, label %1608, label %1618

1608:                                             ; preds = %1603
  br i1 %1607, label %1609, label %1625

1609:                                             ; preds = %1608
  %1610 = load i8, i8* %1604, align 1
  %1611 = load i8, i8* %1605, align 1
  br label %1612

1612:                                             ; preds = %1591, %1609
  %1613 = phi i8 [ %1611, %1609 ], [ %1595, %1591 ]
  %1614 = phi i8 [ %1610, %1609 ], [ %1594, %1591 ]
  %1615 = zext i8 %1614 to i32
  %1616 = zext i8 %1613 to i32
  %1617 = sub nsw i32 %1615, %1616
  br label %1620

1618:                                             ; preds = %1603
  %1619 = sext i1 %1607 to i32
  br label %1620

1620:                                             ; preds = %1612, %1618
  %1621 = phi i32 [ %1619, %1618 ], [ %1617, %1612 ]
  %1622 = icmp eq i32 %1621, 0
  br i1 %1622, label %1623, label %1625

1623:                                             ; preds = %1620
  %1624 = xor i32 %1550, -1
  store i32 %1624, i32* %1549, align 4
  br label %1625

1625:                                             ; preds = %1608, %1527, %1620, %1623
  %1626 = icmp eq i32 %98, 0
  br i1 %1626, label %2206, label %1627

1627:                                             ; preds = %1625
  %1628 = add nsw i32 %98, -1
  %1629 = sext i32 %1628 to i64
  %1630 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1629, i32 0, i32 0
  %1631 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %1630, align 8
  %1632 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1629, i32 0, i32 1
  %1633 = load i64, i64* %1632, align 8
  %1634 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1629, i32 1
  %1635 = bitcast %"class.courgette::PagedArray_iterator.0"* %1634 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %89, i8* align 8 %1635, i64 16, i1 false)
  %1636 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1629, i32 2
  %1637 = bitcast %"class.courgette::PagedArray_iterator.0"* %1636 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 8 %1637, i64 16, i1 false)
  %1638 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1629, i32 3
  %1639 = load i32, i32* %1638, align 8
  br label %1640

1640:                                             ; preds = %1627, %971, %1863, %2193
  %1641 = phi %"class.courgette::PagedArray"* [ %2197, %2193 ], [ %1769, %1863 ], [ %975, %971 ], [ %1631, %1627 ]
  %1642 = phi i64 [ %2199, %2193 ], [ %1843, %1863 ], [ %977, %971 ], [ %1633, %1627 ]
  %1643 = phi i32 [ %2205, %2193 ], [ %1884, %1863 ], [ %983, %971 ], [ %1639, %1627 ]
  %1644 = phi i32 [ %2194, %2193 ], [ %1880, %1863 ], [ %972, %971 ], [ %1628, %1627 ]
  br label %91

1645:                                             ; preds = %984
  %1646 = icmp slt i64 %985, %101
  %1647 = select i1 %1646, i64 %985, i64 %101
  %1648 = trunc i64 %1647 to i32
  %1649 = icmp sgt i32 %1648, 0
  br i1 %1649, label %1650, label %1885

1650:                                             ; preds = %1645
  %1651 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %81, align 8
  %1652 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1651, i64 0, i32 0
  %1653 = load i32**, i32*** %1652, align 8
  %1654 = load i32**, i32*** %85, align 8
  br label %1655

1655:                                             ; preds = %1650, %1761
  %1656 = phi i32 [ %1648, %1650 ], [ %1762, %1761 ]
  %1657 = phi i32 [ 0, %1650 ], [ %1763, %1761 ]
  %1658 = lshr i32 %1656, 1
  %1659 = sext i32 %1657 to i64
  %1660 = add i64 %100, %1659
  %1661 = zext i32 %1658 to i64
  %1662 = add i64 %1660, %1661
  %1663 = lshr i64 %1662, 18
  %1664 = and i64 %1662, 262143
  %1665 = getelementptr inbounds i32*, i32** %1653, i64 %1663
  %1666 = load i32*, i32** %1665, align 8
  %1667 = getelementptr inbounds i32, i32* %1666, i64 %1664
  %1668 = load i32, i32* %1667, align 4
  %1669 = ashr i32 %1668, 31
  %1670 = xor i32 %1669, %1668
  %1671 = sext i32 %1670 to i64
  %1672 = add i64 %1671, %2
  %1673 = sub i64 %100, %1659
  %1674 = xor i64 %1661, -1
  %1675 = add i64 %1673, %1674
  %1676 = lshr i64 %1675, 18
  %1677 = and i64 %1675, 262143
  %1678 = getelementptr inbounds i32*, i32** %1653, i64 %1676
  %1679 = load i32*, i32** %1678, align 8
  %1680 = getelementptr inbounds i32, i32* %1679, i64 %1677
  %1681 = load i32, i32* %1680, align 4
  %1682 = ashr i32 %1681, 31
  %1683 = xor i32 %1682, %1681
  %1684 = sext i32 %1683 to i64
  %1685 = add i64 %1684, %2
  %1686 = lshr i64 %1672, 18
  %1687 = and i64 %1672, 262143
  %1688 = getelementptr inbounds i32*, i32** %1654, i64 %1686
  %1689 = load i32*, i32** %1688, align 8
  %1690 = getelementptr inbounds i32, i32* %1689, i64 %1687
  %1691 = load i32, i32* %1690, align 4
  %1692 = add i64 %1672, 1
  %1693 = lshr i64 %1692, 18
  %1694 = and i64 %1692, 262143
  %1695 = getelementptr inbounds i32*, i32** %1654, i64 %1693
  %1696 = load i32*, i32** %1695, align 8
  %1697 = getelementptr inbounds i32, i32* %1696, i64 %1694
  %1698 = load i32, i32* %1697, align 4
  %1699 = lshr i64 %1685, 18
  %1700 = and i64 %1685, 262143
  %1701 = getelementptr inbounds i32*, i32** %1654, i64 %1699
  %1702 = load i32*, i32** %1701, align 8
  %1703 = getelementptr inbounds i32, i32* %1702, i64 %1700
  %1704 = load i32, i32* %1703, align 4
  %1705 = add i64 %1685, 1
  %1706 = lshr i64 %1705, 18
  %1707 = and i64 %1705, 262143
  %1708 = getelementptr inbounds i32*, i32** %1654, i64 %1706
  %1709 = load i32*, i32** %1708, align 8
  %1710 = getelementptr inbounds i32, i32* %1709, i64 %1707
  %1711 = load i32, i32* %1710, align 4
  %1712 = sext i32 %1691 to i64
  %1713 = getelementptr inbounds i8, i8* %87, i64 %1712
  %1714 = sext i32 %1704 to i64
  %1715 = getelementptr inbounds i8, i8* %87, i64 %1714
  %1716 = sext i32 %1698 to i64
  %1717 = getelementptr inbounds i8, i8* %88, i64 %1716
  %1718 = sext i32 %1711 to i64
  %1719 = getelementptr inbounds i8, i8* %88, i64 %1718
  %1720 = icmp ult i8* %1713, %1717
  %1721 = icmp ult i8* %1715, %1719
  %1722 = and i1 %1720, %1721
  br i1 %1722, label %1723, label %1735

1723:                                             ; preds = %1655, %1729
  %1724 = phi i8* [ %1731, %1729 ], [ %1715, %1655 ]
  %1725 = phi i8* [ %1730, %1729 ], [ %1713, %1655 ]
  %1726 = load i8, i8* %1725, align 1
  %1727 = load i8, i8* %1724, align 1
  %1728 = icmp eq i8 %1726, %1727
  br i1 %1728, label %1729, label %1744

1729:                                             ; preds = %1723
  %1730 = getelementptr inbounds i8, i8* %1725, i64 1
  %1731 = getelementptr inbounds i8, i8* %1724, i64 1
  %1732 = icmp ult i8* %1730, %1717
  %1733 = icmp ult i8* %1731, %1719
  %1734 = and i1 %1733, %1732
  br i1 %1734, label %1723, label %1735

1735:                                             ; preds = %1729, %1655
  %1736 = phi i8* [ %1713, %1655 ], [ %1730, %1729 ]
  %1737 = phi i8* [ %1715, %1655 ], [ %1731, %1729 ]
  %1738 = phi i1 [ %1720, %1655 ], [ %1732, %1729 ]
  %1739 = phi i1 [ %1721, %1655 ], [ %1733, %1729 ]
  br i1 %1738, label %1740, label %1750

1740:                                             ; preds = %1735
  br i1 %1739, label %1741, label %1761

1741:                                             ; preds = %1740
  %1742 = load i8, i8* %1736, align 1
  %1743 = load i8, i8* %1737, align 1
  br label %1744

1744:                                             ; preds = %1723, %1741
  %1745 = phi i8 [ %1743, %1741 ], [ %1727, %1723 ]
  %1746 = phi i8 [ %1742, %1741 ], [ %1726, %1723 ]
  %1747 = zext i8 %1746 to i32
  %1748 = zext i8 %1745 to i32
  %1749 = sub nsw i32 %1747, %1748
  br label %1752

1750:                                             ; preds = %1735
  %1751 = sext i1 %1739 to i32
  br label %1752

1752:                                             ; preds = %1744, %1750
  %1753 = phi i32 [ %1751, %1750 ], [ %1749, %1744 ]
  %1754 = icmp slt i32 %1753, 0
  br i1 %1754, label %1755, label %1761

1755:                                             ; preds = %1752
  %1756 = add nuw nsw i32 %1658, 1
  %1757 = add nsw i32 %1756, %1657
  %1758 = and i32 %1656, 1
  %1759 = xor i32 %1758, 1
  %1760 = sub nsw i32 %1658, %1759
  br label %1761

1761:                                             ; preds = %1740, %1752, %1755
  %1762 = phi i32 [ %1760, %1755 ], [ %1658, %1752 ], [ %1658, %1740 ]
  %1763 = phi i32 [ %1757, %1755 ], [ %1657, %1752 ], [ %1657, %1740 ]
  %1764 = icmp sgt i32 %1762, 0
  br i1 %1764, label %1655, label %1765

1765:                                             ; preds = %1761
  %1766 = icmp sgt i32 %1763, 0
  br i1 %1766, label %1767, label %1885

1767:                                             ; preds = %1765
  %1768 = sext i32 %1763 to i64
  %1769 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %81, align 8
  %1770 = sub i64 %100, %1768
  %1771 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1769, i64 0, i32 0
  br label %1772

1772:                                             ; preds = %1772, %1767
  %1773 = phi i32 [ %1763, %1767 ], [ %1793, %1772 ]
  %1774 = phi i64 [ %1770, %1767 ], [ %1794, %1772 ]
  %1775 = phi i64 [ %100, %1767 ], [ %1795, %1772 ]
  %1776 = lshr i64 %1774, 18
  %1777 = and i64 %1774, 262143
  %1778 = load i32**, i32*** %1771, align 8
  %1779 = getelementptr inbounds i32*, i32** %1778, i64 %1776
  %1780 = load i32*, i32** %1779, align 8
  %1781 = getelementptr inbounds i32, i32* %1780, i64 %1777
  %1782 = load i32, i32* %1781, align 4
  %1783 = lshr i64 %1775, 18
  %1784 = and i64 %1775, 262143
  %1785 = getelementptr inbounds i32*, i32** %1778, i64 %1783
  %1786 = load i32*, i32** %1785, align 8
  %1787 = getelementptr inbounds i32, i32* %1786, i64 %1784
  %1788 = load i32, i32* %1787, align 4
  store i32 %1788, i32* %1781, align 4
  %1789 = load i32**, i32*** %1771, align 8
  %1790 = getelementptr inbounds i32*, i32** %1789, i64 %1783
  %1791 = load i32*, i32** %1790, align 8
  %1792 = getelementptr inbounds i32, i32* %1791, i64 %1784
  store i32 %1782, i32* %1792, align 4
  %1793 = add nsw i32 %1773, -1
  %1794 = add i64 %1774, 1
  %1795 = add i64 %1775, 1
  %1796 = icmp sgt i32 %1793, 0
  br i1 %1796, label %1772, label %1797

1797:                                             ; preds = %1772
  %1798 = add i64 %100, %1768
  %1799 = icmp ult i64 %1798, %99
  br i1 %1799, label %1800, label %1840

1800:                                             ; preds = %1797
  %1801 = lshr i64 %1798, 18
  %1802 = and i64 %1798, 262143
  %1803 = load i32**, i32*** %1771, align 8
  %1804 = getelementptr inbounds i32*, i32** %1803, i64 %1801
  %1805 = load i32*, i32** %1804, align 8
  %1806 = getelementptr inbounds i32, i32* %1805, i64 %1802
  %1807 = load i32, i32* %1806, align 4
  %1808 = icmp slt i32 %1807, 0
  br i1 %1808, label %1809, label %1824

1809:                                             ; preds = %1800
  %1810 = xor i32 %1807, -1
  store i32 %1810, i32* %1806, align 4
  %1811 = icmp ult i64 %93, %1770
  br i1 %1811, label %1812, label %1840

1812:                                             ; preds = %1809
  %1813 = load i32**, i32*** %1771, align 8
  br label %1814

1814:                                             ; preds = %1812, %1814
  %1815 = phi i64 [ %1816, %1814 ], [ %100, %1812 ]
  %1816 = add i64 %1815, -1
  %1817 = lshr i64 %1816, 18
  %1818 = and i64 %1816, 262143
  %1819 = getelementptr inbounds i32*, i32** %1813, i64 %1817
  %1820 = load i32*, i32** %1819, align 8
  %1821 = getelementptr inbounds i32, i32* %1820, i64 %1818
  %1822 = load i32, i32* %1821, align 4
  %1823 = icmp slt i32 %1822, 0
  br i1 %1823, label %1814, label %1836

1824:                                             ; preds = %1800
  %1825 = icmp ult i64 %93, %1770
  br i1 %1825, label %1826, label %1840

1826:                                             ; preds = %1824, %1826
  %1827 = phi i64 [ %1835, %1826 ], [ %100, %1824 ]
  %1828 = lshr i64 %1827, 18
  %1829 = and i64 %1827, 262143
  %1830 = getelementptr inbounds i32*, i32** %1803, i64 %1828
  %1831 = load i32*, i32** %1830, align 8
  %1832 = getelementptr inbounds i32, i32* %1831, i64 %1829
  %1833 = load i32, i32* %1832, align 4
  %1834 = icmp slt i32 %1833, 0
  %1835 = add i64 %1827, 1
  br i1 %1834, label %1826, label %1838

1836:                                             ; preds = %1814
  %1837 = sub i64 %1816, %93
  br label %1840

1838:                                             ; preds = %1826
  %1839 = sub i64 %99, %1827
  br label %1840

1840:                                             ; preds = %1838, %1836, %1809, %1824, %1797
  %1841 = phi i64 [ %1839, %1838 ], [ %101, %1836 ], [ %101, %1809 ], [ %101, %1824 ], [ %101, %1797 ]
  %1842 = phi i64 [ %985, %1838 ], [ %1837, %1836 ], [ %985, %1809 ], [ %985, %1824 ], [ %985, %1797 ]
  %1843 = phi i64 [ %1827, %1838 ], [ %100, %1836 ], [ %100, %1809 ], [ %100, %1824 ], [ %100, %1797 ]
  %1844 = phi i64 [ %100, %1838 ], [ %1816, %1836 ], [ %100, %1809 ], [ %100, %1824 ], [ %100, %1797 ]
  %1845 = phi i32 [ 2, %1838 ], [ 5, %1836 ], [ 1, %1809 ], [ 0, %1824 ], [ 0, %1797 ]
  %1846 = icmp sgt i64 %1842, %1841
  br i1 %1846, label %1863, label %1847

1847:                                             ; preds = %1840
  %1848 = sext i32 %98 to i64
  %1849 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1848, i32 0, i32 0
  store %"class.courgette::PagedArray"* %1769, %"class.courgette::PagedArray"** %1849, align 8
  %1850 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1848, i32 0, i32 1
  store i64 %1843, i64* %1850, align 8
  %1851 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1848, i32 1, i32 0
  store %"class.courgette::PagedArray"* %1769, %"class.courgette::PagedArray"** %1851, align 8
  %1852 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1848, i32 1, i32 1
  store i64 %1798, i64* %1852, align 8
  %1853 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1848, i32 2
  %1854 = bitcast %"class.courgette::PagedArray_iterator.0"* %1853 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1854, i8* nonnull align 8 %90, i64 16, i1 false)
  %1855 = and i32 %1845, 3
  %1856 = and i32 %97, 4
  %1857 = or i32 %1855, %1856
  %1858 = add nsw i32 %98, 1
  %1859 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1848, i32 3
  store i32 %1857, i32* %1859, align 8
  store i64 %1770, i64* %79, align 8
  store %"class.courgette::PagedArray"* %1769, %"class.courgette::PagedArray"** %82, align 8
  store i64 %1844, i64* %78, align 8
  %1860 = and i32 %97, 3
  %1861 = and i32 %1845, 4
  %1862 = or i32 %1861, %1860
  br label %96

1863:                                             ; preds = %1840
  %1864 = and i32 %1845, 2
  %1865 = icmp ne i32 %1864, 0
  %1866 = icmp eq i64 %1843, %100
  %1867 = and i1 %1865, %1866
  %1868 = xor i32 %1845, 6
  %1869 = select i1 %1867, i32 %1868, i32 %1845
  %1870 = sext i32 %98 to i64
  %1871 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1870, i32 0, i32 0
  store %"class.courgette::PagedArray"* %92, %"class.courgette::PagedArray"** %1871, align 8
  %1872 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1870, i32 0, i32 1
  store i64 %93, i64* %1872, align 8
  %1873 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1870, i32 1, i32 0
  store %"class.courgette::PagedArray"* %1769, %"class.courgette::PagedArray"** %1873, align 8
  %1874 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1870, i32 1, i32 1
  store i64 %1770, i64* %1874, align 8
  %1875 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1870, i32 2, i32 0
  store %"class.courgette::PagedArray"* %1769, %"class.courgette::PagedArray"** %1875, align 8
  %1876 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1870, i32 2, i32 1
  store i64 %1844, i64* %1876, align 8
  %1877 = and i32 %97, 3
  %1878 = and i32 %1869, 4
  %1879 = or i32 %1878, %1877
  %1880 = add nsw i32 %98, 1
  %1881 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %1870, i32 3
  store i32 %1879, i32* %1881, align 8
  store i64 %1798, i64* %79, align 8
  %1882 = and i32 %1869, 3
  %1883 = and i32 %97, 4
  %1884 = or i32 %1882, %1883
  br label %1640

1885:                                             ; preds = %1645, %1765
  %1886 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %81, align 8
  %1887 = add i64 %100, -1
  %1888 = lshr i64 %1887, 18
  %1889 = and i64 %1887, 262143
  %1890 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1886, i64 0, i32 0
  %1891 = load i32**, i32*** %1890, align 8
  %1892 = getelementptr inbounds i32*, i32** %1891, i64 %1888
  %1893 = load i32*, i32** %1892, align 8
  %1894 = getelementptr inbounds i32, i32* %1893, i64 %1889
  %1895 = load i32, i32* %1894, align 4
  %1896 = ashr i32 %1895, 31
  %1897 = xor i32 %1896, %1895
  %1898 = sext i32 %1897 to i64
  %1899 = add i64 %1898, %2
  %1900 = lshr i64 %100, 18
  %1901 = and i64 %100, 262143
  %1902 = getelementptr inbounds i32*, i32** %1891, i64 %1900
  %1903 = load i32*, i32** %1902, align 8
  %1904 = getelementptr inbounds i32, i32* %1903, i64 %1901
  %1905 = load i32, i32* %1904, align 4
  %1906 = sext i32 %1905 to i64
  %1907 = add i64 %1906, %2
  %1908 = lshr i64 %1899, 18
  %1909 = and i64 %1899, 262143
  %1910 = load i32**, i32*** %85, align 8
  %1911 = getelementptr inbounds i32*, i32** %1910, i64 %1908
  %1912 = load i32*, i32** %1911, align 8
  %1913 = getelementptr inbounds i32, i32* %1912, i64 %1909
  %1914 = load i32, i32* %1913, align 4
  %1915 = add i64 %1899, 1
  %1916 = lshr i64 %1915, 18
  %1917 = and i64 %1915, 262143
  %1918 = getelementptr inbounds i32*, i32** %1910, i64 %1916
  %1919 = load i32*, i32** %1918, align 8
  %1920 = getelementptr inbounds i32, i32* %1919, i64 %1917
  %1921 = load i32, i32* %1920, align 4
  %1922 = lshr i64 %1907, 18
  %1923 = and i64 %1907, 262143
  %1924 = getelementptr inbounds i32*, i32** %1910, i64 %1922
  %1925 = load i32*, i32** %1924, align 8
  %1926 = getelementptr inbounds i32, i32* %1925, i64 %1923
  %1927 = load i32, i32* %1926, align 4
  %1928 = add i64 %1907, 1
  %1929 = lshr i64 %1928, 18
  %1930 = and i64 %1928, 262143
  %1931 = getelementptr inbounds i32*, i32** %1910, i64 %1929
  %1932 = load i32*, i32** %1931, align 8
  %1933 = getelementptr inbounds i32, i32* %1932, i64 %1930
  %1934 = load i32, i32* %1933, align 4
  %1935 = sext i32 %1914 to i64
  %1936 = getelementptr inbounds i8, i8* %87, i64 %1935
  %1937 = sext i32 %1927 to i64
  %1938 = getelementptr inbounds i8, i8* %87, i64 %1937
  %1939 = sext i32 %1921 to i64
  %1940 = getelementptr inbounds i8, i8* %88, i64 %1939
  %1941 = sext i32 %1934 to i64
  %1942 = getelementptr inbounds i8, i8* %88, i64 %1941
  %1943 = icmp ult i8* %1936, %1940
  %1944 = icmp ult i8* %1938, %1942
  %1945 = and i1 %1943, %1944
  br i1 %1945, label %1946, label %1958

1946:                                             ; preds = %1885, %1952
  %1947 = phi i8* [ %1954, %1952 ], [ %1938, %1885 ]
  %1948 = phi i8* [ %1953, %1952 ], [ %1936, %1885 ]
  %1949 = load i8, i8* %1948, align 1
  %1950 = load i8, i8* %1947, align 1
  %1951 = icmp eq i8 %1949, %1950
  br i1 %1951, label %1952, label %1967

1952:                                             ; preds = %1946
  %1953 = getelementptr inbounds i8, i8* %1948, i64 1
  %1954 = getelementptr inbounds i8, i8* %1947, i64 1
  %1955 = icmp ult i8* %1953, %1940
  %1956 = icmp ult i8* %1954, %1942
  %1957 = and i1 %1956, %1955
  br i1 %1957, label %1946, label %1958

1958:                                             ; preds = %1952, %1885
  %1959 = phi i8* [ %1936, %1885 ], [ %1953, %1952 ]
  %1960 = phi i8* [ %1938, %1885 ], [ %1954, %1952 ]
  %1961 = phi i1 [ %1943, %1885 ], [ %1955, %1952 ]
  %1962 = phi i1 [ %1944, %1885 ], [ %1956, %1952 ]
  br i1 %1961, label %1963, label %1973

1963:                                             ; preds = %1958
  br i1 %1962, label %1964, label %1980

1964:                                             ; preds = %1963
  %1965 = load i8, i8* %1959, align 1
  %1966 = load i8, i8* %1960, align 1
  br label %1967

1967:                                             ; preds = %1946, %1964
  %1968 = phi i8 [ %1966, %1964 ], [ %1950, %1946 ]
  %1969 = phi i8 [ %1965, %1964 ], [ %1949, %1946 ]
  %1970 = zext i8 %1969 to i32
  %1971 = zext i8 %1968 to i32
  %1972 = sub nsw i32 %1970, %1971
  br label %1975

1973:                                             ; preds = %1958
  %1974 = sext i1 %1962 to i32
  br label %1975

1975:                                             ; preds = %1967, %1973
  %1976 = phi i32 [ %1974, %1973 ], [ %1972, %1967 ]
  %1977 = icmp eq i32 %1976, 0
  br i1 %1977, label %1978, label %1980

1978:                                             ; preds = %1975
  %1979 = xor i32 %1905, -1
  store i32 %1979, i32* %1904, align 4
  br label %1980

1980:                                             ; preds = %1963, %1975, %1978
  %1981 = and i32 %97, 1
  %1982 = icmp eq i32 %1981, 0
  br i1 %1982, label %1992, label %1983

1983:                                             ; preds = %1980
  %1984 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %92, i64 0, i32 0
  %1985 = load i32**, i32*** %1984, align 8
  %1986 = lshr i64 %93, 18
  %1987 = and i64 %93, 262143
  %1988 = getelementptr inbounds i32*, i32** %1985, i64 %1986
  %1989 = load i32*, i32** %1988, align 8
  %1990 = getelementptr inbounds i32, i32* %1989, i64 %1987
  %1991 = load i32, i32* %1990, align 4
  br label %2087

1992:                                             ; preds = %1980
  %1993 = and i32 %97, 2
  %1994 = icmp eq i32 %1993, 0
  br i1 %1994, label %2093, label %1995

1995:                                             ; preds = %1992
  %1996 = add i64 %93, -1
  %1997 = lshr i64 %1996, 18
  %1998 = and i64 %1996, 262143
  %1999 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %92, i64 0, i32 0
  %2000 = load i32**, i32*** %1999, align 8
  %2001 = getelementptr inbounds i32*, i32** %2000, i64 %1997
  %2002 = load i32*, i32** %2001, align 8
  %2003 = getelementptr inbounds i32, i32* %2002, i64 %1998
  %2004 = load i32, i32* %2003, align 4
  %2005 = ashr i32 %2004, 31
  %2006 = xor i32 %2005, %2004
  %2007 = sext i32 %2006 to i64
  %2008 = add i64 %2007, %2
  %2009 = lshr i64 %93, 18
  %2010 = and i64 %93, 262143
  %2011 = getelementptr inbounds i32*, i32** %2000, i64 %2009
  %2012 = load i32*, i32** %2011, align 8
  %2013 = getelementptr inbounds i32, i32* %2012, i64 %2010
  %2014 = load i32, i32* %2013, align 4
  %2015 = sext i32 %2014 to i64
  %2016 = add i64 %2015, %2
  %2017 = lshr i64 %2008, 18
  %2018 = and i64 %2008, 262143
  %2019 = load i32**, i32*** %85, align 8
  %2020 = getelementptr inbounds i32*, i32** %2019, i64 %2017
  %2021 = load i32*, i32** %2020, align 8
  %2022 = getelementptr inbounds i32, i32* %2021, i64 %2018
  %2023 = load i32, i32* %2022, align 4
  %2024 = add i64 %2008, 1
  %2025 = lshr i64 %2024, 18
  %2026 = and i64 %2024, 262143
  %2027 = getelementptr inbounds i32*, i32** %2019, i64 %2025
  %2028 = load i32*, i32** %2027, align 8
  %2029 = getelementptr inbounds i32, i32* %2028, i64 %2026
  %2030 = load i32, i32* %2029, align 4
  %2031 = lshr i64 %2016, 18
  %2032 = and i64 %2016, 262143
  %2033 = getelementptr inbounds i32*, i32** %2019, i64 %2031
  %2034 = load i32*, i32** %2033, align 8
  %2035 = getelementptr inbounds i32, i32* %2034, i64 %2032
  %2036 = load i32, i32* %2035, align 4
  %2037 = add i64 %2016, 1
  %2038 = lshr i64 %2037, 18
  %2039 = and i64 %2037, 262143
  %2040 = getelementptr inbounds i32*, i32** %2019, i64 %2038
  %2041 = load i32*, i32** %2040, align 8
  %2042 = getelementptr inbounds i32, i32* %2041, i64 %2039
  %2043 = load i32, i32* %2042, align 4
  %2044 = sext i32 %2023 to i64
  %2045 = getelementptr inbounds i8, i8* %87, i64 %2044
  %2046 = sext i32 %2036 to i64
  %2047 = getelementptr inbounds i8, i8* %87, i64 %2046
  %2048 = sext i32 %2030 to i64
  %2049 = getelementptr inbounds i8, i8* %88, i64 %2048
  %2050 = sext i32 %2043 to i64
  %2051 = getelementptr inbounds i8, i8* %88, i64 %2050
  %2052 = icmp ult i8* %2045, %2049
  %2053 = icmp ult i8* %2047, %2051
  %2054 = and i1 %2052, %2053
  br i1 %2054, label %2055, label %2067

2055:                                             ; preds = %1995, %2061
  %2056 = phi i8* [ %2063, %2061 ], [ %2047, %1995 ]
  %2057 = phi i8* [ %2062, %2061 ], [ %2045, %1995 ]
  %2058 = load i8, i8* %2057, align 1
  %2059 = load i8, i8* %2056, align 1
  %2060 = icmp eq i8 %2058, %2059
  br i1 %2060, label %2061, label %2076

2061:                                             ; preds = %2055
  %2062 = getelementptr inbounds i8, i8* %2057, i64 1
  %2063 = getelementptr inbounds i8, i8* %2056, i64 1
  %2064 = icmp ult i8* %2062, %2049
  %2065 = icmp ult i8* %2063, %2051
  %2066 = and i1 %2065, %2064
  br i1 %2066, label %2055, label %2067

2067:                                             ; preds = %2061, %1995
  %2068 = phi i8* [ %2045, %1995 ], [ %2062, %2061 ]
  %2069 = phi i8* [ %2047, %1995 ], [ %2063, %2061 ]
  %2070 = phi i1 [ %2052, %1995 ], [ %2064, %2061 ]
  %2071 = phi i1 [ %2053, %1995 ], [ %2065, %2061 ]
  br i1 %2070, label %2072, label %2082

2072:                                             ; preds = %2067
  br i1 %2071, label %2073, label %2093

2073:                                             ; preds = %2072
  %2074 = load i8, i8* %2068, align 1
  %2075 = load i8, i8* %2069, align 1
  br label %2076

2076:                                             ; preds = %2055, %2073
  %2077 = phi i8 [ %2075, %2073 ], [ %2059, %2055 ]
  %2078 = phi i8 [ %2074, %2073 ], [ %2058, %2055 ]
  %2079 = zext i8 %2078 to i32
  %2080 = zext i8 %2077 to i32
  %2081 = sub nsw i32 %2079, %2080
  br label %2084

2082:                                             ; preds = %2067
  %2083 = sext i1 %2071 to i32
  br label %2084

2084:                                             ; preds = %2076, %2082
  %2085 = phi i32 [ %2083, %2082 ], [ %2081, %2076 ]
  %2086 = icmp eq i32 %2085, 0
  br i1 %2086, label %2087, label %2093

2087:                                             ; preds = %1983, %2084
  %2088 = phi i32 [ %1991, %1983 ], [ %2014, %2084 ]
  %2089 = phi i32* [ %1989, %1983 ], [ %2012, %2084 ]
  %2090 = phi i64 [ %1987, %1983 ], [ %2010, %2084 ]
  %2091 = getelementptr inbounds i32, i32* %2089, i64 %2090
  %2092 = xor i32 %2088, -1
  store i32 %2092, i32* %2091, align 4
  br label %2093

2093:                                             ; preds = %2072, %1992, %2087, %2084
  %2094 = and i32 %97, 4
  %2095 = icmp eq i32 %2094, 0
  br i1 %2095, label %2191, label %2096

2096:                                             ; preds = %2093
  %2097 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %82, align 8
  %2098 = add i64 %99, -1
  %2099 = lshr i64 %2098, 18
  %2100 = and i64 %2098, 262143
  %2101 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %2097, i64 0, i32 0
  %2102 = load i32**, i32*** %2101, align 8
  %2103 = getelementptr inbounds i32*, i32** %2102, i64 %2099
  %2104 = load i32*, i32** %2103, align 8
  %2105 = getelementptr inbounds i32, i32* %2104, i64 %2100
  %2106 = load i32, i32* %2105, align 4
  %2107 = ashr i32 %2106, 31
  %2108 = xor i32 %2107, %2106
  %2109 = sext i32 %2108 to i64
  %2110 = add i64 %2109, %2
  %2111 = lshr i64 %99, 18
  %2112 = and i64 %99, 262143
  %2113 = getelementptr inbounds i32*, i32** %2102, i64 %2111
  %2114 = load i32*, i32** %2113, align 8
  %2115 = getelementptr inbounds i32, i32* %2114, i64 %2112
  %2116 = load i32, i32* %2115, align 4
  %2117 = sext i32 %2116 to i64
  %2118 = add i64 %2117, %2
  %2119 = lshr i64 %2110, 18
  %2120 = and i64 %2110, 262143
  %2121 = load i32**, i32*** %85, align 8
  %2122 = getelementptr inbounds i32*, i32** %2121, i64 %2119
  %2123 = load i32*, i32** %2122, align 8
  %2124 = getelementptr inbounds i32, i32* %2123, i64 %2120
  %2125 = load i32, i32* %2124, align 4
  %2126 = add i64 %2110, 1
  %2127 = lshr i64 %2126, 18
  %2128 = and i64 %2126, 262143
  %2129 = getelementptr inbounds i32*, i32** %2121, i64 %2127
  %2130 = load i32*, i32** %2129, align 8
  %2131 = getelementptr inbounds i32, i32* %2130, i64 %2128
  %2132 = load i32, i32* %2131, align 4
  %2133 = lshr i64 %2118, 18
  %2134 = and i64 %2118, 262143
  %2135 = getelementptr inbounds i32*, i32** %2121, i64 %2133
  %2136 = load i32*, i32** %2135, align 8
  %2137 = getelementptr inbounds i32, i32* %2136, i64 %2134
  %2138 = load i32, i32* %2137, align 4
  %2139 = add i64 %2118, 1
  %2140 = lshr i64 %2139, 18
  %2141 = and i64 %2139, 262143
  %2142 = getelementptr inbounds i32*, i32** %2121, i64 %2140
  %2143 = load i32*, i32** %2142, align 8
  %2144 = getelementptr inbounds i32, i32* %2143, i64 %2141
  %2145 = load i32, i32* %2144, align 4
  %2146 = sext i32 %2125 to i64
  %2147 = getelementptr inbounds i8, i8* %87, i64 %2146
  %2148 = sext i32 %2138 to i64
  %2149 = getelementptr inbounds i8, i8* %87, i64 %2148
  %2150 = sext i32 %2132 to i64
  %2151 = getelementptr inbounds i8, i8* %88, i64 %2150
  %2152 = sext i32 %2145 to i64
  %2153 = getelementptr inbounds i8, i8* %88, i64 %2152
  %2154 = icmp ult i8* %2147, %2151
  %2155 = icmp ult i8* %2149, %2153
  %2156 = and i1 %2154, %2155
  br i1 %2156, label %2157, label %2169

2157:                                             ; preds = %2096, %2163
  %2158 = phi i8* [ %2165, %2163 ], [ %2149, %2096 ]
  %2159 = phi i8* [ %2164, %2163 ], [ %2147, %2096 ]
  %2160 = load i8, i8* %2159, align 1
  %2161 = load i8, i8* %2158, align 1
  %2162 = icmp eq i8 %2160, %2161
  br i1 %2162, label %2163, label %2178

2163:                                             ; preds = %2157
  %2164 = getelementptr inbounds i8, i8* %2159, i64 1
  %2165 = getelementptr inbounds i8, i8* %2158, i64 1
  %2166 = icmp ult i8* %2164, %2151
  %2167 = icmp ult i8* %2165, %2153
  %2168 = and i1 %2167, %2166
  br i1 %2168, label %2157, label %2169

2169:                                             ; preds = %2163, %2096
  %2170 = phi i8* [ %2147, %2096 ], [ %2164, %2163 ]
  %2171 = phi i8* [ %2149, %2096 ], [ %2165, %2163 ]
  %2172 = phi i1 [ %2154, %2096 ], [ %2166, %2163 ]
  %2173 = phi i1 [ %2155, %2096 ], [ %2167, %2163 ]
  br i1 %2172, label %2174, label %2184

2174:                                             ; preds = %2169
  br i1 %2173, label %2175, label %2191

2175:                                             ; preds = %2174
  %2176 = load i8, i8* %2170, align 1
  %2177 = load i8, i8* %2171, align 1
  br label %2178

2178:                                             ; preds = %2157, %2175
  %2179 = phi i8 [ %2177, %2175 ], [ %2161, %2157 ]
  %2180 = phi i8 [ %2176, %2175 ], [ %2160, %2157 ]
  %2181 = zext i8 %2180 to i32
  %2182 = zext i8 %2179 to i32
  %2183 = sub nsw i32 %2181, %2182
  br label %2186

2184:                                             ; preds = %2169
  %2185 = sext i1 %2173 to i32
  br label %2186

2186:                                             ; preds = %2178, %2184
  %2187 = phi i32 [ %2185, %2184 ], [ %2183, %2178 ]
  %2188 = icmp eq i32 %2187, 0
  br i1 %2188, label %2189, label %2191

2189:                                             ; preds = %2186
  %2190 = xor i32 %2116, -1
  store i32 %2190, i32* %2115, align 4
  br label %2191

2191:                                             ; preds = %2174, %2093, %2186, %2189
  %2192 = icmp eq i32 %98, 0
  br i1 %2192, label %2206, label %2193

2193:                                             ; preds = %2191
  %2194 = add nsw i32 %98, -1
  %2195 = sext i32 %2194 to i64
  %2196 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %2195, i32 0, i32 0
  %2197 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %2196, align 8
  %2198 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %2195, i32 0, i32 1
  %2199 = load i64, i64* %2198, align 8
  %2200 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %2195, i32 1
  %2201 = bitcast %"class.courgette::PagedArray_iterator.0"* %2200 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %89, i8* align 8 %2201, i64 16, i1 false)
  %2202 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %2195, i32 2
  %2203 = bitcast %"class.courgette::PagedArray_iterator.0"* %2202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 8 %2203, i64 16, i1 false)
  %2204 = getelementptr inbounds [32 x %struct.anon.1], [32 x %struct.anon.1]* %11, i64 0, i64 %2195, i32 3
  %2205 = load i32, i32* %2204, align 8
  br label %1640

2206:                                             ; preds = %2191, %1625, %969
  call void @llvm.lifetime.end.p0i8(i64 1792, i8* nonnull %12) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc { %"class.courgette::PagedArray"*, i64 } @_ZN6divsuf12_GLOBAL__N_112ss_partitionEN9courgette19PagedArray_iteratorIKNS1_10PagedArrayIiLi18EEEKiEENS2_IS4_iEES8_i(%"class.courgette::PagedArray"*, i64, %"class.courgette::PagedArray"*, i64, %"class.courgette::PagedArray"*, i64, i32) unnamed_addr #2 {
  %8 = add i64 %3, -1
  %9 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %2, i64 0, i32 0
  %10 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %4, i64 0, i32 0
  br label %12

12:                                               ; preds = %84, %7
  %13 = phi i64 [ %8, %7 ], [ %51, %84 ]
  %14 = phi i64 [ %5, %7 ], [ %54, %84 ]
  %15 = add i64 %13, 1
  %16 = icmp ult i64 %15, %14
  br i1 %16, label %17, label %50

17:                                               ; preds = %12, %46
  %18 = phi i64 [ %48, %46 ], [ %15, %12 ]
  %19 = lshr i64 %18, 18
  %20 = and i64 %18, 262143
  %21 = load i32**, i32*** %9, align 8
  %22 = getelementptr inbounds i32*, i32** %21, i64 %19
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %20
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = add i64 %26, %1
  %28 = lshr i64 %27, 18
  %29 = and i64 %27, 262143
  %30 = load i32**, i32*** %10, align 8
  %31 = getelementptr inbounds i32*, i32** %30, i64 %28
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 %29
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %34, %6
  %36 = add nsw i32 %25, 1
  %37 = sext i32 %36 to i64
  %38 = add i64 %37, %1
  %39 = lshr i64 %38, 18
  %40 = and i64 %38, 262143
  %41 = getelementptr inbounds i32*, i32** %30, i64 %39
  %42 = load i32*, i32** %41, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 %40
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %35, %44
  br i1 %45, label %46, label %50

46:                                               ; preds = %17
  %47 = xor i32 %25, -1
  store i32 %47, i32* %24, align 4
  %48 = add i64 %18, 1
  %49 = icmp eq i64 %48, %14
  br i1 %49, label %50, label %17

50:                                               ; preds = %17, %46, %12
  %51 = phi i64 [ %15, %12 ], [ %14, %46 ], [ %18, %17 ]
  br label %52

52:                                               ; preds = %56, %50
  %53 = phi i64 [ %14, %50 ], [ %54, %56 ]
  %54 = add i64 %53, -1
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %56, label %104

56:                                               ; preds = %52
  %57 = lshr i64 %54, 18
  %58 = and i64 %54, 262143
  %59 = load i32**, i32*** %11, align 8
  %60 = getelementptr inbounds i32*, i32** %59, i64 %57
  %61 = load i32*, i32** %60, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 %58
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = add i64 %64, %1
  %66 = lshr i64 %65, 18
  %67 = and i64 %65, 262143
  %68 = load i32**, i32*** %10, align 8
  %69 = getelementptr inbounds i32*, i32** %68, i64 %66
  %70 = load i32*, i32** %69, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 %67
  %72 = load i32, i32* %71, align 4
  %73 = add nsw i32 %72, %6
  %74 = add nsw i32 %63, 1
  %75 = sext i32 %74 to i64
  %76 = add i64 %75, %1
  %77 = lshr i64 %76, 18
  %78 = and i64 %76, 262143
  %79 = getelementptr inbounds i32*, i32** %68, i64 %77
  %80 = load i32*, i32** %79, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %78
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %73, %82
  br i1 %83, label %84, label %52

84:                                               ; preds = %56
  %85 = lshr i64 %54, 18
  %86 = and i64 %54, 262143
  %87 = load i32**, i32*** %11, align 8
  %88 = getelementptr inbounds i32*, i32** %87, i64 %85
  %89 = load i32*, i32** %88, align 8
  %90 = getelementptr inbounds i32, i32* %89, i64 %86
  %91 = load i32, i32* %90, align 4
  %92 = xor i32 %91, -1
  %93 = lshr i64 %51, 18
  %94 = and i64 %51, 262143
  %95 = load i32**, i32*** %9, align 8
  %96 = getelementptr inbounds i32*, i32** %95, i64 %93
  %97 = load i32*, i32** %96, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %94
  %99 = load i32, i32* %98, align 4
  store i32 %99, i32* %90, align 4
  %100 = load i32**, i32*** %9, align 8
  %101 = getelementptr inbounds i32*, i32** %100, i64 %93
  %102 = load i32*, i32** %101, align 8
  %103 = getelementptr inbounds i32, i32* %102, i64 %94
  store i32 %92, i32* %103, align 4
  br label %12

104:                                              ; preds = %52
  %105 = insertvalue { %"class.courgette::PagedArray"*, i64 } undef, %"class.courgette::PagedArray"* %2, 0
  %106 = icmp ugt i64 %51, %3
  br i1 %106, label %107, label %116

107:                                              ; preds = %104
  %108 = lshr i64 %3, 18
  %109 = and i64 %3, 262143
  %110 = load i32**, i32*** %9, align 8
  %111 = getelementptr inbounds i32*, i32** %110, i64 %108
  %112 = load i32*, i32** %111, align 8
  %113 = getelementptr inbounds i32, i32* %112, i64 %109
  %114 = load i32, i32* %113, align 4
  %115 = xor i32 %114, -1
  store i32 %115, i32* %113, align 4
  br label %116

116:                                              ; preds = %107, %104
  %117 = insertvalue { %"class.courgette::PagedArray"*, i64 } %105, i64 %51, 1
  ret { %"class.courgette::PagedArray"*, i64 } %117
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
