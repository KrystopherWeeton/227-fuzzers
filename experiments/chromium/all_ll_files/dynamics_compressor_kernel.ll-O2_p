; ModuleID = '../../third_party/blink/renderer/platform/audio/dynamics_compressor_kernel.cc'
source_filename = "../../third_party/blink/renderer/platform/audio/dynamics_compressor_kernel.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::DynamicsCompressorKernel" = type { float, float, float, float, float, i32, %"class.WTF::Vector", i32, i32, float, float, float, float, float, float, float, float, float, float }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::AudioArray"* }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink10AudioArrayIfEENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZN5blink10AudioArrayIfE8AllocateEm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink10AudioArrayIfEENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS8_EEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink10AudioArrayIfEENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink10AudioArrayIfEENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [148 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::AudioArray<float>, std::__1::default_delete<blink::AudioArray<float> > >]\00", align 1
@.str.2 = private unnamed_addr constant [54 x i8] c"n <= std::numeric_limits<unsigned>::max() / sizeof(T)\00", align 1
@.str.3 = private unnamed_addr constant [62 x i8] c"../../third_party/blink/renderer/platform/audio/audio_array.h\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"allocation_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIfEEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioArray<float>]\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink24DynamicsCompressorKernelC1Efj = hidden unnamed_addr alias void (%"class.blink::DynamicsCompressorKernel"*, float, i32), void (%"class.blink::DynamicsCompressorKernel"*, float, i32)* @_ZN5blink24DynamicsCompressorKernelC2Efj

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24DynamicsCompressorKernelC2Efj(%"class.blink::DynamicsCompressorKernel"*, float, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 0
  store float %1, float* %4, align 8
  %5 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 5
  store i32 256, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 6
  %7 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 8
  %9 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false)
  store i32 256, i32* %8, align 4
  %10 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 10
  %11 = bitcast float* %10 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %11, align 4
  %12 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 14
  %13 = bitcast float* %12 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %13, align 4
  %14 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 18
  store float -1.000000e+00, float* %14, align 4
  tail call void @_ZN5blink24DynamicsCompressorKernel19SetNumberOfChannelsEj(%"class.blink::DynamicsCompressorKernel"* %0, i32 %2)
  %15 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 1
  store float 0.000000e+00, float* %15, align 4
  %16 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 2
  store float 1.000000e+00, float* %16, align 8
  %17 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 4
  store float 1.000000e+00, float* %17, align 8
  %18 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %36, label %21

21:                                               ; preds = %3, %21
  %22 = phi i32 [ %33, %21 ], [ 0, %3 ]
  %23 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink10AudioArrayIfEENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 %22) #9
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %25, i64 0, i32 1
  %27 = bitcast float** %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %25, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = shl nuw nsw i64 %31, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 %32, i1 false) #9
  %33 = add nuw i32 %22, 1
  %34 = load i32, i32* %18, align 4
  %35 = icmp ult i32 %33, %34
  br i1 %35, label %21, label %36

36:                                               ; preds = %21, %3
  store i32 0, i32* %7, align 8
  store i32 256, i32* %8, align 4
  %37 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 9
  store float -1.000000e+00, float* %37, align 8
  %38 = fpext float %1 to double
  %39 = tail call double @_ZN5blink15audio_utilities33DiscreteTimeConstantForSampleRateEdd(double 0x3FD4CCCCC0000000, double %38) #9
  %40 = fptrunc double %39 to float
  %41 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 3
  store float %40, float* %41, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24DynamicsCompressorKernel19SetNumberOfChannelsEj(%"class.blink::DynamicsCompressorKernel"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %69, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %36, label %12

12:                                               ; preds = %8
  %13 = icmp eq i32 %6, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %15, align 8
  %17 = zext i32 %6 to i64
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 %17
  br label %19

19:                                               ; preds = %28, %14
  %20 = phi %"class.std::__1::unique_ptr"* [ %29, %28 ], [ %16, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %21, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %21, align 8
  %23 = icmp eq %"class.blink::AudioArray"* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::AudioArray"* %22 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %26) #9
  %27 = bitcast %"class.blink::AudioArray"* %22 to i8*
  tail call void @free(i8* %27) #9
  br label %28

28:                                               ; preds = %24, %19
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 1
  %30 = icmp eq %"class.std::__1::unique_ptr"* %29, %18
  br i1 %30, label %31, label %19

31:                                               ; preds = %28
  store i32 0, i32* %5, align 4
  br label %32

32:                                               ; preds = %31, %12
  %33 = bitcast %"class.WTF::Vector"* %4 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.WTF::Vector"* %4 to i64*
  store atomic i64 0, i64* %35 monotonic, align 8
  store i32 0, i32* %9, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %34) #9
  br label %36

36:                                               ; preds = %8, %32
  %37 = icmp eq i32 %1, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  br label %43

43:                                               ; preds = %66, %38
  %44 = phi i32 [ 0, %38 ], [ %67, %66 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %45 = call noalias i8* @malloc(i64 24) #9
  %46 = bitcast i8* %45 to %"class.blink::AudioArray"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 20, i1 false) #9
  call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %46, i64 1024) #9
  store i8* %45, i8** %41, align 8
  %47 = load i32, i32* %5, align 4
  %48 = load i32, i32* %9, align 8
  %49 = icmp eq i32 %47, %48
  br i1 %49, label %58, label %50, !prof !2

50:                                               ; preds = %43
  %51 = ptrtoint i8* %45 to i64
  %52 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %42, align 8
  %53 = zext i32 %47 to i64
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %52, i64 %53
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %40, align 8
  %55 = bitcast %"class.std::__1::unique_ptr"* %54 to i64*
  store i64 %51, i64* %55, align 8
  %56 = load i32, i32* %5, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %5, align 4
  br label %59

58:                                               ; preds = %43
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink10AudioArrayIfEENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS8_EEvOT_(%"class.WTF::Vector"* %4, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #9
  br label %59

59:                                               ; preds = %50, %58
  %60 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %40, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %40, align 8
  %61 = icmp eq %"class.blink::AudioArray"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = bitcast %"class.blink::AudioArray"* %60 to i8**
  %64 = load i8*, i8** %63, align 8
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %64) #9
  %65 = bitcast %"class.blink::AudioArray"* %60 to i8*
  call void @free(i8* %65) #9
  br label %66

66:                                               ; preds = %59, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  %67 = add nuw i32 %44, 1
  %68 = icmp eq i32 %67, %1
  br i1 %68, label %69, label %43

69:                                               ; preds = %66, %36, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24DynamicsCompressorKernel5ResetEv(%"class.blink::DynamicsCompressorKernel"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 1
  store float 0.000000e+00, float* %2, align 4
  %3 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 2
  store float 1.000000e+00, float* %3, align 8
  %4 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 4
  store float 1.000000e+00, float* %4, align 8
  %5 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 6
  br label %14

10:                                               ; preds = %14, %1
  %11 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 7
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 8
  store i32 256, i32* %12, align 4
  %13 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 9
  store float -1.000000e+00, float* %13, align 8
  ret void

14:                                               ; preds = %8, %14
  %15 = phi i32 [ 0, %8 ], [ %26, %14 ]
  %16 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink10AudioArrayIfEENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %9, i32 %15) #9
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %18, i64 0, i32 1
  %20 = bitcast float** %19 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %18, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 %25, i1 false) #9
  %26 = add nuw i32 %15, 1
  %27 = load i32, i32* %5, align 4
  %28 = icmp ult i32 %26, %27
  br i1 %28, label %14, label %10
}

declare double @_ZN5blink15audio_utilities33DiscreteTimeConstantForSampleRateEdd(double, double) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24DynamicsCompressorKernel15SetPreDelayTimeEf(%"class.blink::DynamicsCompressorKernel"*, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 0
  %4 = load float, float* %3, align 8
  %5 = fmul float %4, %1
  %6 = fptoui float %5 to i32
  %7 = icmp ult i32 %6, 1023
  %8 = select i1 %7, i32 %6, i32 1023
  %9 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, %8
  br i1 %11, label %36, label %12

12:                                               ; preds = %2
  store i32 %8, i32* %9, align 4
  %13 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 6
  br label %21

18:                                               ; preds = %21, %12
  %19 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 7
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 8
  store i32 %8, i32* %20, align 4
  br label %36

21:                                               ; preds = %16, %21
  %22 = phi i32 [ 0, %16 ], [ %33, %21 ]
  %23 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink10AudioArrayIfEENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %17, i32 %22) #9
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %25, i64 0, i32 1
  %27 = bitcast float** %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %25, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = shl nuw nsw i64 %31, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 %32, i1 false) #9
  %33 = add nuw i32 %22, 1
  %34 = load i32, i32* %13, align 4
  %35 = icmp ult i32 %33, %34
  br i1 %35, label %21, label %18

36:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink24DynamicsCompressorKernel9KneeCurveEff(%"class.blink::DynamicsCompressorKernel"* nocapture readonly, float, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 12
  %5 = load float, float* %4, align 4
  %6 = fcmp ogt float %5, %1
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = fsub float %1, %5
  %9 = fmul float %8, %2
  %10 = fsub float -0.000000e+00, %9
  %11 = tail call float @_ZN6fdlibm4expfEf(float %10) #9
  %12 = fsub float 1.000000e+00, %11
  %13 = fdiv float %12, %2
  %14 = fadd float %5, %13
  br label %15

15:                                               ; preds = %3, %7
  %16 = phi float [ %14, %7 ], [ %1, %3 ]
  ret float %16
}

declare float @_ZN6fdlibm4expfEf(float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink24DynamicsCompressorKernel8SaturateEff(%"class.blink::DynamicsCompressorKernel"* nocapture readonly, float, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 15
  %5 = load float, float* %4, align 8
  %6 = fcmp ogt float %5, %1
  br i1 %6, label %7, label %19

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 12
  %9 = load float, float* %8, align 4
  %10 = fcmp ogt float %9, %1
  br i1 %10, label %31, label %11

11:                                               ; preds = %7
  %12 = fsub float %1, %9
  %13 = fmul float %12, %2
  %14 = fsub float -0.000000e+00, %13
  %15 = tail call float @_ZN6fdlibm4expfEf(float %14) #9
  %16 = fsub float 1.000000e+00, %15
  %17 = fdiv float %16, %2
  %18 = fadd float %9, %17
  br label %31

19:                                               ; preds = %3
  %20 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float %1) #9
  %21 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 17
  %22 = load float, float* %21, align 8
  %23 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 11
  %24 = load float, float* %23, align 8
  %25 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 16
  %26 = load float, float* %25, align 4
  %27 = fsub float %20, %26
  %28 = fmul float %24, %27
  %29 = fadd float %22, %28
  %30 = tail call float @_ZN5blink15audio_utilities16DecibelsToLinearEf(float %29) #9
  br label %31

31:                                               ; preds = %11, %7, %19
  %32 = phi float [ %30, %19 ], [ %18, %11 ], [ %1, %7 ]
  ret float %32
}

declare float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float) local_unnamed_addr #1

declare float @_ZN5blink15audio_utilities16DecibelsToLinearEf(float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink24DynamicsCompressorKernel7SlopeAtEff(%"class.blink::DynamicsCompressorKernel"* nocapture readonly, float, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 12
  %5 = load float, float* %4, align 4
  %6 = fcmp ogt float %5, %1
  br i1 %6, label %42, label %7

7:                                                ; preds = %3
  %8 = fpext float %1 to double
  %9 = fmul double %8, 1.001000e+00
  %10 = fptrunc double %9 to float
  %11 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float %1) #9
  %12 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float %10) #9
  %13 = load float, float* %4, align 4
  %14 = fcmp ogt float %13, %1
  br i1 %14, label %23, label %15

15:                                               ; preds = %7
  %16 = fsub float %1, %13
  %17 = fmul float %16, %2
  %18 = fsub float -0.000000e+00, %17
  %19 = tail call float @_ZN6fdlibm4expfEf(float %18) #9
  %20 = fsub float 1.000000e+00, %19
  %21 = fdiv float %20, %2
  %22 = fadd float %13, %21
  br label %23

23:                                               ; preds = %7, %15
  %24 = phi float [ %22, %15 ], [ %1, %7 ]
  %25 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float %24) #9
  %26 = load float, float* %4, align 4
  %27 = fcmp ogt float %26, %10
  br i1 %27, label %36, label %28

28:                                               ; preds = %23
  %29 = fsub float %10, %26
  %30 = fmul float %29, %2
  %31 = fsub float -0.000000e+00, %30
  %32 = tail call float @_ZN6fdlibm4expfEf(float %31) #9
  %33 = fsub float 1.000000e+00, %32
  %34 = fdiv float %33, %2
  %35 = fadd float %26, %34
  br label %36

36:                                               ; preds = %23, %28
  %37 = phi float [ %35, %28 ], [ %10, %23 ]
  %38 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float %37) #9
  %39 = fsub float %38, %25
  %40 = fsub float %12, %11
  %41 = fdiv float %39, %40
  br label %42

42:                                               ; preds = %3, %36
  %43 = phi float [ %41, %36 ], [ 1.000000e+00, %3 ]
  ret float %43
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink24DynamicsCompressorKernel8KAtSlopeEf(%"class.blink::DynamicsCompressorKernel"* nocapture readonly, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 13
  %4 = load float, float* %3, align 8
  %5 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 14
  %6 = load float, float* %5, align 4
  %7 = fadd float %4, %6
  %8 = tail call float @_ZN5blink15audio_utilities16DecibelsToLinearEf(float %7) #9
  br label %10

9:                                                ; preds = %10
  ret float %20

10:                                               ; preds = %10, %2
  %11 = phi i32 [ 0, %2 ], [ %21, %10 ]
  %12 = phi float [ 5.000000e+00, %2 ], [ %20, %10 ]
  %13 = phi float [ 1.000000e+04, %2 ], [ %18, %10 ]
  %14 = phi float [ 0x3FB99999A0000000, %2 ], [ %17, %10 ]
  %15 = tail call float @_ZNK5blink24DynamicsCompressorKernel7SlopeAtEff(%"class.blink::DynamicsCompressorKernel"* %0, float %8, float %12)
  %16 = fcmp olt float %15, %1
  %17 = select i1 %16, float %14, float %12
  %18 = select i1 %16, float %12, float %13
  %19 = fmul float %17, %18
  %20 = tail call float @sqrtf(float %19) #9
  %21 = add nuw nsw i32 %11, 1
  %22 = icmp eq i32 %21, 15
  br i1 %22, label %9, label %10
}

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink24DynamicsCompressorKernel27UpdateStaticCurveParametersEfff(%"class.blink::DynamicsCompressorKernel"* nocapture, float, float, float) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 13
  %6 = load float, float* %5, align 8
  %7 = fcmp une float %6, %1
  br i1 %7, label %19, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 14
  %10 = load float, float* %9, align 4
  %11 = fcmp une float %10, %2
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 10
  %14 = load float, float* %13, align 4
  %15 = fcmp une float %14, %3
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 18
  %18 = load float, float* %17, align 4
  br label %62

19:                                               ; preds = %12, %8, %4
  store float %1, float* %5, align 8
  %20 = tail call float @_ZN5blink15audio_utilities16DecibelsToLinearEf(float %1) #9
  %21 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 12
  store float %20, float* %21, align 4
  %22 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 14
  store float %2, float* %22, align 4
  %23 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 10
  store float %3, float* %23, align 4
  %24 = fdiv float 1.000000e+00, %3
  %25 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 11
  store float %24, float* %25, align 8
  %26 = load float, float* %5, align 8
  %27 = fadd float %26, %2
  %28 = tail call float @_ZN5blink15audio_utilities16DecibelsToLinearEf(float %27) #9
  br label %29

29:                                               ; preds = %29, %19
  %30 = phi i32 [ 0, %19 ], [ %40, %29 ]
  %31 = phi float [ 5.000000e+00, %19 ], [ %39, %29 ]
  %32 = phi float [ 1.000000e+04, %19 ], [ %37, %29 ]
  %33 = phi float [ 0x3FB99999A0000000, %19 ], [ %36, %29 ]
  %34 = tail call float @_ZNK5blink24DynamicsCompressorKernel7SlopeAtEff(%"class.blink::DynamicsCompressorKernel"* %0, float %28, float %31) #9
  %35 = fcmp olt float %34, %24
  %36 = select i1 %35, float %33, float %31
  %37 = select i1 %35, float %31, float %32
  %38 = fmul float %36, %37
  %39 = tail call float @sqrtf(float %38) #9
  %40 = add nuw nsw i32 %30, 1
  %41 = icmp eq i32 %40, 15
  br i1 %41, label %42, label %29

42:                                               ; preds = %29
  %43 = fadd float %1, %2
  %44 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 16
  store float %43, float* %44, align 4
  %45 = tail call float @_ZN5blink15audio_utilities16DecibelsToLinearEf(float %43) #9
  %46 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 15
  store float %45, float* %46, align 8
  %47 = load float, float* %21, align 4
  %48 = fcmp ogt float %47, %45
  br i1 %48, label %57, label %49

49:                                               ; preds = %42
  %50 = fsub float %45, %47
  %51 = fmul float %39, %50
  %52 = fsub float -0.000000e+00, %51
  %53 = tail call float @_ZN6fdlibm4expfEf(float %52) #9
  %54 = fsub float 1.000000e+00, %53
  %55 = fdiv float %54, %39
  %56 = fadd float %47, %55
  br label %57

57:                                               ; preds = %42, %49
  %58 = phi float [ %56, %49 ], [ %45, %42 ]
  %59 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float %58) #9
  %60 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 17
  store float %59, float* %60, align 8
  %61 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 18
  store float %39, float* %61, align 4
  br label %62

62:                                               ; preds = %16, %57
  %63 = phi float [ %18, %16 ], [ %39, %57 ]
  ret float %63
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24DynamicsCompressorKernel7ProcessEPPKfPPfjjffffffffffff(%"class.blink::DynamicsCompressorKernel"*, float** nocapture readonly, float** nocapture readonly, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float) local_unnamed_addr #0 align 2 {
  %18 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 0
  %19 = load float, float* %18, align 8
  %20 = fsub float 1.000000e+00, %12
  %21 = tail call float @_ZN5blink24DynamicsCompressorKernel27UpdateStaticCurveParametersEfff(%"class.blink::DynamicsCompressorKernel"* %0, float %5, float %6, float %7)
  %22 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 15
  %23 = load float, float* %22, align 8
  %24 = fcmp ogt float %23, 1.000000e+00
  br i1 %24, label %25, label %37

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 12
  %27 = load float, float* %26, align 4
  %28 = fcmp ogt float %27, 1.000000e+00
  br i1 %28, label %49, label %29

29:                                               ; preds = %25
  %30 = fsub float 1.000000e+00, %27
  %31 = fmul float %21, %30
  %32 = fsub float -0.000000e+00, %31
  %33 = tail call float @_ZN6fdlibm4expfEf(float %32) #9
  %34 = fsub float 1.000000e+00, %33
  %35 = fdiv float %34, %21
  %36 = fadd float %27, %35
  br label %49

37:                                               ; preds = %17
  %38 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float 1.000000e+00) #9
  %39 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 17
  %40 = load float, float* %39, align 8
  %41 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 11
  %42 = load float, float* %41, align 8
  %43 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 16
  %44 = load float, float* %43, align 4
  %45 = fsub float %38, %44
  %46 = fmul float %42, %45
  %47 = fadd float %40, %46
  %48 = tail call float @_ZN5blink15audio_utilities16DecibelsToLinearEf(float %47) #9
  br label %49

49:                                               ; preds = %25, %29, %37
  %50 = phi float [ %48, %37 ], [ %36, %29 ], [ 1.000000e+00, %25 ]
  %51 = fdiv float 1.000000e+00, %50
  %52 = tail call float @_ZN6fdlibm4powfEff(float %51, float 0x3FE3333340000000) #9
  %53 = tail call float @_ZN5blink15audio_utilities16DecibelsToLinearEf(float %11) #9
  %54 = fmul float %52, %53
  %55 = fcmp ogt float %8, 0x3F50624DE0000000
  %56 = select i1 %55, float %8, float 0x3F50624DE0000000
  %57 = fmul float %19, %56
  %58 = fmul float %19, %9
  %59 = fmul float %19, 0x3F647AE140000000
  %60 = fmul float %58, %13
  %61 = fmul float %58, %14
  %62 = fmul float %58, %15
  %63 = fmul float %58, %16
  %64 = fmul float %61, 0x3CAA9049E0000000
  %65 = fadd float %60, %64
  %66 = fmul float %62, 0x3CABEB8560000000
  %67 = fsub float %65, %66
  %68 = fmul float %63, 0x3C64591320000000
  %69 = fadd float %68, %67
  %70 = fmul float %60, 0x3FF942E560000000
  %71 = fmul float %61, 0x4002A50920000000
  %72 = fsub float %71, %70
  %73 = fmul float %62, 0x3FED407760000000
  %74 = fsub float %72, %73
  %75 = fmul float %63, 0x3FC4C87760000000
  %76 = fadd float %75, %74
  %77 = fmul float %60, 0x3FE111BAE0000000
  %78 = fmul float %61, 0x3FF45D2140000000
  %79 = fsub float %77, %78
  %80 = fmul float %62, 0x3FEDA0DAE0000000
  %81 = fadd float %80, %79
  %82 = fmul float %63, 0x3FC7E14CC0000000
  %83 = fsub float %81, %82
  %84 = fmul float %60, 0x3FB67C54A0000000
  %85 = fmul float %61, 0x3FC5AF6EE0000000
  %86 = fsub float %84, %85
  %87 = fmul float %62, 0x3FB5FC4500000000
  %88 = fadd float %87, %86
  %89 = fmul float %63, 0x3F719BBD00000000
  %90 = fsub float %88, %89
  %91 = fmul float %60, 0x3FA5B7AA60000000
  %92 = fmul float %61, 0x3FBC8FCFA0000000
  %93 = fsub float %92, %91
  %94 = fmul float %62, 0x3FB8FF60E0000000
  %95 = fsub float %93, %94
  %96 = fmul float %63, 0x3F9D2D99A0000000
  %97 = fadd float %96, %95
  %98 = load float, float* %18, align 8
  %99 = fmul float %98, %10
  %100 = fptoui float %99 to i32
  %101 = icmp ult i32 %100, 1023
  %102 = select i1 %101, i32 %100, i32 1023
  %103 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 5
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, %102
  br i1 %105, label %130, label %106

106:                                              ; preds = %49
  store i32 %102, i32* %103, align 4
  %107 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 6
  br label %115

112:                                              ; preds = %115, %106
  %113 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 7
  store i32 0, i32* %113, align 8
  %114 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 8
  store i32 %102, i32* %114, align 4
  br label %130

115:                                              ; preds = %115, %110
  %116 = phi i32 [ 0, %110 ], [ %127, %115 ]
  %117 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink10AudioArrayIfEENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %111, i32 %116) #9
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %117, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %119, i64 0, i32 1
  %121 = bitcast float** %120 to i8**
  %122 = load i8*, i8** %121, align 8
  %123 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %119, i64 0, i32 2
  %124 = load i32, i32* %123, align 8
  %125 = zext i32 %124 to i64
  %126 = shl nuw nsw i64 %125, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %122, i8 0, i64 %126, i1 false) #9
  %127 = add nuw i32 %116, 1
  %128 = load i32, i32* %107, align 4
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %115, label %112

130:                                              ; preds = %49, %112
  %131 = lshr i32 %4, 5
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %154, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 1
  %135 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 2
  %136 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 9
  %137 = fdiv float 1.000000e+00, %57
  %138 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 7
  %139 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 8
  %140 = bitcast float* %134 to i32*
  %141 = bitcast float* %135 to i32*
  %142 = icmp eq i32 %3, 0
  %143 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 6
  %144 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 17
  %145 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 11
  %146 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 16
  %147 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 12
  %148 = fmul float %54, %12
  %149 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 4
  %150 = getelementptr inbounds %"class.blink::DynamicsCompressorKernel", %"class.blink::DynamicsCompressorKernel"* %0, i64 0, i32 3
  %151 = load float, float* %134, align 4
  %152 = zext i32 %3 to i64
  %153 = zext i32 %3 to i64
  br label %155

154:                                              ; preds = %375, %130
  ret void

155:                                              ; preds = %375, %133
  %156 = phi float [ %151, %133 ], [ %294, %375 ]
  %157 = phi i32 [ 0, %133 ], [ %352, %375 ]
  %158 = phi i32 [ 0, %133 ], [ %376, %375 ]
  %159 = fcmp uno float %156, 0.000000e+00
  %160 = select i1 %159, float 1.000000e+00, float %156
  %161 = tail call float @llvm.fabs.f32(float %160) #10
  %162 = fcmp oeq float %161, 0x7FF0000000000000
  %163 = select i1 %162, float 1.000000e+00, float %160
  %164 = or i1 %159, %162
  br i1 %164, label %165, label %166

165:                                              ; preds = %155
  store float %163, float* %134, align 4
  br label %166

166:                                              ; preds = %155, %165
  %167 = fpext float %163 to double
  %168 = tail call float @_ZN6fdlibm5asinfEd(double %167) #9
  %169 = fdiv float %168, 0x3FF921FB60000000
  %170 = load float, float* %135, align 8
  %171 = fcmp ogt float %169, %170
  %172 = fcmp oeq float %169, 0.000000e+00
  br i1 %172, label %173, label %175

173:                                              ; preds = %166
  %174 = select i1 %171, float -1.000000e+00, float 1.000000e+00
  br label %178

175:                                              ; preds = %166
  %176 = fdiv float %170, %169
  %177 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float %176) #9
  br label %178

178:                                              ; preds = %175, %173
  %179 = phi float [ %174, %173 ], [ %177, %175 ]
  br i1 %171, label %180, label %205

180:                                              ; preds = %178
  store float -1.000000e+00, float* %136, align 8
  %181 = fcmp uno float %179, 0.000000e+00
  %182 = select i1 %181, float -1.000000e+00, float %179
  %183 = tail call float @llvm.fabs.f32(float %182) #10
  %184 = fcmp oeq float %183, 0x7FF0000000000000
  %185 = select i1 %184, float -1.000000e+00, float %182
  %186 = fcmp ult float %185, 0.000000e+00
  %187 = fcmp ole float %185, -1.200000e+01
  %188 = select i1 %187, float -1.200000e+01, float %185
  %189 = fadd float %188, 1.200000e+01
  %190 = fmul float %189, 2.500000e-01
  %191 = select i1 %186, float %190, float 3.000000e+00
  %192 = fmul float %191, %191
  %193 = fmul float %191, %192
  %194 = fmul float %192, %192
  %195 = fmul float %76, %191
  %196 = fadd float %69, %195
  %197 = fmul float %83, %192
  %198 = fadd float %196, %197
  %199 = fmul float %90, %193
  %200 = fadd float %198, %199
  %201 = fmul float %97, %194
  %202 = fadd float %201, %200
  %203 = fdiv float 5.000000e+00, %202
  %204 = tail call float @_ZN5blink15audio_utilities16DecibelsToLinearEf(float %203) #9
  br label %223

205:                                              ; preds = %178
  %206 = fcmp uno float %179, 0.000000e+00
  %207 = select i1 %206, float 1.000000e+00, float %179
  %208 = tail call float @llvm.fabs.f32(float %207) #10
  %209 = fcmp oeq float %208, 0x7FF0000000000000
  %210 = select i1 %209, float 1.000000e+00, float %207
  %211 = load float, float* %136, align 8
  %212 = fcmp oeq float %211, -1.000000e+00
  %213 = fcmp olt float %211, %210
  %214 = or i1 %212, %213
  br i1 %214, label %215, label %216

215:                                              ; preds = %205
  store float %210, float* %136, align 8
  br label %216

216:                                              ; preds = %205, %215
  %217 = phi float [ %211, %205 ], [ %210, %215 ]
  %218 = fcmp ogt float %217, 5.000000e-01
  %219 = select i1 %218, float %217, float 5.000000e-01
  %220 = fdiv float 2.500000e-01, %219
  %221 = tail call float @_ZN6fdlibm4powfEff(float %220, float %137) #9
  %222 = fsub float 1.000000e+00, %221
  br label %223

223:                                              ; preds = %216, %180
  %224 = phi float [ %204, %180 ], [ %222, %216 ]
  %225 = load i32, i32* %138, align 8
  %226 = load i32, i32* %139, align 4
  %227 = load float, float* %134, align 4
  %228 = load float, float* %135, align 8
  %229 = fcmp olt float %224, 1.000000e+00
  br label %230

230:                                              ; preds = %223, %351
  %231 = phi float [ %228, %223 ], [ %329, %351 ]
  %232 = phi float [ %227, %223 ], [ %294, %351 ]
  %233 = phi i32 [ 31, %223 ], [ %357, %351 ]
  %234 = phi i32 [ %226, %223 ], [ %356, %351 ]
  %235 = phi i32 [ %225, %223 ], [ %354, %351 ]
  %236 = phi i32 [ %157, %223 ], [ %352, %351 ]
  br i1 %142, label %240, label %237

237:                                              ; preds = %230
  %238 = zext i32 %236 to i64
  %239 = sext i32 %234 to i64
  br label %295

240:                                              ; preds = %295, %230
  %241 = phi float [ 0.000000e+00, %230 ], [ %313, %295 ]
  %242 = fcmp ogt float %241, 0.000000e+00
  %243 = fsub float -0.000000e+00, %241
  %244 = select i1 %242, float %241, float %243
  %245 = load float, float* %22, align 8
  %246 = fcmp ogt float %245, %244
  br i1 %246, label %247, label %258

247:                                              ; preds = %240
  %248 = load float, float* %147, align 4
  %249 = fcmp ogt float %248, %244
  br i1 %249, label %267, label %250

250:                                              ; preds = %247
  %251 = fsub float %244, %248
  %252 = fmul float %21, %251
  %253 = fsub float -0.000000e+00, %252
  %254 = tail call float @_ZN6fdlibm4expfEf(float %253) #9
  %255 = fsub float 1.000000e+00, %254
  %256 = fdiv float %255, %21
  %257 = fadd float %248, %256
  br label %267

258:                                              ; preds = %240
  %259 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float %244) #9
  %260 = load float, float* %144, align 8
  %261 = load float, float* %145, align 8
  %262 = load float, float* %146, align 4
  %263 = fsub float %259, %262
  %264 = fmul float %261, %263
  %265 = fadd float %260, %264
  %266 = tail call float @_ZN5blink15audio_utilities16DecibelsToLinearEf(float %265) #9
  br label %267

267:                                              ; preds = %247, %250, %258
  %268 = phi float [ %266, %258 ], [ %257, %250 ], [ %244, %247 ]
  %269 = fcmp ugt float %244, 0x3F1A36E2E0000000
  %270 = fdiv float %268, %244
  %271 = select i1 %269, float %270, float 1.000000e+00
  %272 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float %271) #9
  %273 = fsub float -0.000000e+00, %272
  %274 = fcmp olt float %272, -2.000000e+00
  %275 = select i1 %274, float %273, float 2.000000e+00
  %276 = fdiv float %275, %59
  %277 = tail call float @_ZN5blink15audio_utilities16DecibelsToLinearEf(float %276) #9
  %278 = fadd float %277, -1.000000e+00
  %279 = fcmp ogt float %271, %232
  %280 = select i1 %279, float %278, float 1.000000e+00
  %281 = fsub float %271, %232
  %282 = fmul float %281, %280
  %283 = fadd float %232, %282
  %284 = fcmp olt float %283, 1.000000e+00
  %285 = bitcast float %283 to i32
  %286 = select i1 %284, i32 %285, i32 1065353216
  %287 = bitcast i32 %286 to float
  %288 = fcmp uno float %287, 0.000000e+00
  %289 = select i1 %288, i32 1065353216, i32 %286
  %290 = bitcast i32 %289 to float
  %291 = tail call float @llvm.fabs.f32(float %290) #10
  %292 = fcmp oeq float %291, 0x7FF0000000000000
  %293 = select i1 %292, i32 1065353216, i32 %289
  %294 = bitcast i32 %293 to float
  br i1 %229, label %316, label %321

295:                                              ; preds = %295, %237
  %296 = phi i64 [ 0, %237 ], [ %314, %295 ]
  %297 = phi float [ 0.000000e+00, %237 ], [ %313, %295 ]
  %298 = trunc i64 %296 to i32
  %299 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink10AudioArrayIfEENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %143, i32 %298) #9
  %300 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %299, i64 0, i32 0, i32 0, i32 0
  %301 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %300, align 8
  %302 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %301, i64 0, i32 1
  %303 = load float*, float** %302, align 8
  %304 = getelementptr inbounds float*, float** %1, i64 %296
  %305 = load float*, float** %304, align 8
  %306 = getelementptr inbounds float, float* %305, i64 %238
  %307 = load float, float* %306, align 4
  %308 = getelementptr inbounds float, float* %303, i64 %239
  store float %307, float* %308, align 4
  %309 = fcmp ogt float %307, 0.000000e+00
  %310 = fsub float -0.000000e+00, %307
  %311 = select i1 %309, float %307, float %310
  %312 = fcmp olt float %297, %311
  %313 = select i1 %312, float %311, float %297
  %314 = add nuw nsw i64 %296, 1
  %315 = icmp eq i64 %314, %152
  br i1 %315, label %240, label %295

316:                                              ; preds = %267
  %317 = fsub float %169, %231
  %318 = fmul float %224, %317
  %319 = fadd float %231, %318
  %320 = bitcast float %319 to i32
  br label %327

321:                                              ; preds = %267
  %322 = fmul float %224, %231
  %323 = fcmp olt float %322, 1.000000e+00
  %324 = bitcast float %322 to i32
  %325 = select i1 %323, i32 %324, i32 1065353216
  %326 = bitcast i32 %325 to float
  br label %327

327:                                              ; preds = %321, %316
  %328 = phi i32 [ %325, %321 ], [ %320, %316 ]
  %329 = phi float [ %326, %321 ], [ %319, %316 ]
  %330 = fmul float %329, 0x3FF921FB60000000
  %331 = fpext float %330 to double
  %332 = tail call float @_ZN6fdlibm4sinfEd(double %331) #9
  %333 = fmul float %148, %332
  %334 = fadd float %20, %333
  %335 = fpext float %332 to double
  %336 = tail call double @_ZN6fdlibm5log10Ed(double %335) #9
  %337 = fmul double %336, 2.000000e+01
  %338 = fptrunc double %337 to float
  %339 = load float, float* %149, align 8
  %340 = fcmp ogt float %339, %338
  br i1 %340, label %346, label %341

341:                                              ; preds = %327
  %342 = fsub float %338, %339
  %343 = load float, float* %150, align 4
  %344 = fmul float %342, %343
  %345 = fadd float %339, %344
  br label %346

346:                                              ; preds = %327, %341
  %347 = phi float [ %345, %341 ], [ %338, %327 ]
  store float %347, float* %149, align 8
  br i1 %142, label %351, label %348

348:                                              ; preds = %346
  %349 = sext i32 %235 to i64
  %350 = zext i32 %236 to i64
  br label %359

351:                                              ; preds = %359, %346
  %352 = add i32 %236, 1
  %353 = add nsw i32 %235, 1
  %354 = and i32 %353, 1023
  %355 = add nsw i32 %234, 1
  %356 = and i32 %355, 1023
  %357 = add nsw i32 %233, -1
  %358 = icmp eq i32 %233, 0
  br i1 %358, label %375, label %230

359:                                              ; preds = %359, %348
  %360 = phi i64 [ 0, %348 ], [ %373, %359 ]
  %361 = trunc i64 %360 to i32
  %362 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink10AudioArrayIfEENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %143, i32 %361) #9
  %363 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %362, i64 0, i32 0, i32 0, i32 0
  %364 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %363, align 8
  %365 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %364, i64 0, i32 1
  %366 = load float*, float** %365, align 8
  %367 = getelementptr inbounds float, float* %366, i64 %349
  %368 = load float, float* %367, align 4
  %369 = fmul float %334, %368
  %370 = getelementptr inbounds float*, float** %2, i64 %360
  %371 = load float*, float** %370, align 8
  %372 = getelementptr inbounds float, float* %371, i64 %350
  store float %369, float* %372, align 4
  %373 = add nuw nsw i64 %360, 1
  %374 = icmp eq i64 %373, %153
  br i1 %374, label %351, label %359

375:                                              ; preds = %351
  store i32 %354, i32* %138, align 8
  store i32 %356, i32* %139, align 4
  store i32 %293, i32* %140, align 4
  store i32 %328, i32* %141, align 8
  %376 = add nuw nsw i32 %158, 1
  %377 = icmp eq i32 %376, %131
  br i1 %377, label %154, label %155
}

declare float @_ZN6fdlibm4powfEff(float, float) local_unnamed_addr #1

declare float @_ZN6fdlibm5asinfEd(double) local_unnamed_addr #1

declare float @_ZN6fdlibm4sinfEd(double) local_unnamed_addr #1

declare double @_ZN6fdlibm5log10Ed(double) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @_ZNK5blink24DynamicsCompressorKernel8TailTimeEv(%"class.blink::DynamicsCompressorKernel"* nocapture readnone) local_unnamed_addr #4 align 2 {
  ret double 1.625000e+00
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink10AudioArrayIfEENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = icmp ugt i64 %1, 1073741823
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #9
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1073741823) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0), i8* %13, i8* %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 63, %"class.logging::CheckOpResult"* nonnull %4) #9
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  %22 = trunc i64 %1 to i32
  %23 = shl i32 %22, 2
  %24 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 0
  %25 = load float*, float** %24, align 8
  %26 = icmp eq float* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast float* %25 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %28) #9
  br label %29

29:                                               ; preds = %21, %27
  %30 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %23, i32 32) #9
  %31 = extractvalue { i32, i1 } %30, 1
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %29
  call void @llvm.trap() #9
  unreachable

33:                                               ; preds = %29
  %34 = extractvalue { i32, i1 } %30, 0
  %35 = zext i32 %34 to i64
  %36 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 %35, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIfEEEEPKcv, i64 0, i64 0)) #9
  %37 = bitcast %"class.blink::AudioArray"* %0 to i8**
  store i8* %36, i8** %37, align 8
  %38 = icmp eq i8* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = ptrtoint i8* %36 to i64
  br label %46

41:                                               ; preds = %33
  %42 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #9
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #9
  %44 = bitcast %"class.blink::AudioArray"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %39, %41
  %47 = phi i64 [ %40, %39 ], [ %45, %41 ]
  %48 = add i64 %47, 31
  %49 = and i64 %48, -32
  %50 = inttoptr i64 %49 to float*
  %51 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 1
  store float* %50, float** %51, align 8
  %52 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 2
  store i32 %22, i32* %52, align 8
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink10AudioArrayIfEENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS8_EEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink10AudioArrayIfEENS2_14default_deleteIS6_EEEEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([148 x i8], [148 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink10AudioArrayIfEENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink10AudioArrayIfEENS2_14default_deleteIS6_EEEEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([148 x i8], [148 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink10AudioArrayIfEENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink10AudioArrayIfEENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
