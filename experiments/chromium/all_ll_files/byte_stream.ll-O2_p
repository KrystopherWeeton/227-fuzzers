; ModuleID = '../../content/browser/byte_stream.cc'
source_filename = "../../content/browser/byte_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::ByteStreamReader" = type { i32 (...)** }
%"class.content::ByteStreamWriter" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.content::ByteStreamWriter"* }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.content::ByteStreamReader"* }
%"struct.content::(anonymous namespace)::LifetimeFlag" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.9", i8, [3 x i8] }>
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.content::(anonymous namespace)::ByteStreamWriterImpl" = type { %"class.content::ByteStreamWriter", i64, %class.scoped_refptr, %class.scoped_refptr.8, %"class.base::RepeatingCallback", %"class.base::circular_deque", i64, %class.scoped_refptr, i64, %class.scoped_refptr.8, %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.11", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.std::__1::pair"*, i64 }
%"struct.std::__1::pair" = type { %class.scoped_refptr.12, i64 }
%class.scoped_refptr.12 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.13", i8* }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%class.scoped_refptr.8 = type { %"struct.content::(anonymous namespace)::LifetimeFlag"* }
%"class.content::(anonymous namespace)::ByteStreamReaderImpl" = type { %"class.content::ByteStreamReader", i64, %class.scoped_refptr, %class.scoped_refptr.8, %"class.base::circular_deque", i8, i32, %"class.base::RepeatingCallback", %"class.base::Time", %class.scoped_refptr, i64, %class.scoped_refptr.8, %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::circular_deque_iterator" = type { %"class.base::internal::circular_deque_const_iterator" }
%"class.base::internal::circular_deque_const_iterator" = type { %"class.base::circular_deque"*, i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.23", %"class.std::__1::__tuple_leaf.24", %"class.std::__1::__tuple_leaf.25", %"class.std::__1::__tuple_leaf.26", %"class.std::__1::__tuple_leaf.27" }
%"class.std::__1::__tuple_leaf" = type { %class.scoped_refptr.8 }
%"class.std::__1::__tuple_leaf.23" = type { %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* }
%"class.std::__1::__tuple_leaf.24" = type { %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.base::circular_deque"* }
%"class.std::__1::__tuple_leaf.25" = type { i64 }
%"class.std::__1::__tuple_leaf.26" = type { i8 }
%"class.std::__1::__tuple_leaf.27" = type { i32 }

$_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE13DestructRangeIS8_Li0EEEvPS8_SB_ = comdat any

$_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPNSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_ = comdat any

$_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_ = comdat any

$_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_ = comdat any

$_ZNK4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm = comdat any

$_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE6insertINS_8internal23circular_deque_iteratorIS7_EEEENS1_9enable_ifIXgssr4base8internal11is_iteratorIT_EE5valueEvE4typeENSA_29circular_deque_const_iteratorIS7_EESE_SE_ = comdat any

$_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE11MakeRoomForEmPNS_8internal23circular_deque_iteratorIS7_EESC_ = comdat any

$_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE25ShrinkCapacityIfNecessaryEv = comdat any

@_ZN7content16ByteStreamWriter28kFractionBufferBeforeSendingE = hidden local_unnamed_addr constant i32 3, align 4
@_ZN7content16ByteStreamReader31kFractionReadBeforeWindowUpdateE = hidden local_unnamed_addr constant i32 3, align 4
@_ZTVN7content12_GLOBAL__N_112LifetimeFlagE = internal unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)* @_ZN7content12_GLOBAL__N_112LifetimeFlagD2Ev to i8*), i8* bitcast (void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)* @_ZN7content12_GLOBAL__N_112LifetimeFlagD0Ev to i8*)] }, align 8
@_ZTVN7content12_GLOBAL__N_120ByteStreamWriterImplE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)* @_ZN7content12_GLOBAL__N_120ByteStreamWriterImplD2Ev to i8*), i8* bitcast (void (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)* @_ZN7content12_GLOBAL__N_120ByteStreamWriterImplD0Ev to i8*), i8* bitcast (i1 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*, %"class.net::IOBuffer"*, i64)* @_ZN7content12_GLOBAL__N_120ByteStreamWriterImpl5WriteE13scoped_refptrIN3net8IOBufferEEm to i8*), i8* bitcast (void (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)* @_ZN7content12_GLOBAL__N_120ByteStreamWriterImpl5FlushEv to i8*), i8* bitcast (void (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*, i32)* @_ZN7content12_GLOBAL__N_120ByteStreamWriterImpl5CloseEi to i8*), i8* bitcast (void (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*, %"class.base::RepeatingCallback"*)* @_ZN7content12_GLOBAL__N_120ByteStreamWriterImpl16RegisterCallbackEN4base17RepeatingCallbackIFvvEEE to i8*), i8* bitcast (i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)* @_ZNK7content12_GLOBAL__N_120ByteStreamWriterImpl21GetTotalBufferedBytesEv to i8*)] }, align 8
@.str = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"PostToPeer\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"../../content/browser/byte_stream.cc\00", align 1
@_ZTVN7content12_GLOBAL__N_120ByteStreamReaderImplE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::(anonymous namespace)::ByteStreamReaderImpl"*)* @_ZN7content12_GLOBAL__N_120ByteStreamReaderImplD2Ev to i8*), i8* bitcast (void (%"class.content::(anonymous namespace)::ByteStreamReaderImpl"*)* @_ZN7content12_GLOBAL__N_120ByteStreamReaderImplD0Ev to i8*), i8* bitcast (i32 (%"class.content::(anonymous namespace)::ByteStreamReaderImpl"*, %class.scoped_refptr.12*, i64*)* @_ZN7content12_GLOBAL__N_120ByteStreamReaderImpl4ReadEP13scoped_refptrIN3net8IOBufferEEPm to i8*), i8* bitcast (i32 (%"class.content::(anonymous namespace)::ByteStreamReaderImpl"*)* @_ZNK7content12_GLOBAL__N_120ByteStreamReaderImpl9GetStatusEv to i8*), i8* bitcast (void (%"class.content::(anonymous namespace)::ByteStreamReaderImpl"*, %"class.base::RepeatingCallback"*)* @_ZN7content12_GLOBAL__N_120ByteStreamReaderImpl16RegisterCallbackEN4base17RepeatingCallbackIFvvEEE to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [17 x i8] c"MaybeUpdateInput\00", align 1

@_ZN7content16ByteStreamReaderD1Ev = hidden unnamed_addr alias void (%"class.content::ByteStreamReader"*), void (%"class.content::ByteStreamReader"*)* @_ZN7content16ByteStreamReaderD2Ev
@_ZN7content16ByteStreamWriterD1Ev = hidden unnamed_addr alias void (%"class.content::ByteStreamWriter"*), void (%"class.content::ByteStreamWriter"*)* @_ZN7content16ByteStreamWriterD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content16ByteStreamReaderD2Ev(%"class.content::ByteStreamReader"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN7content16ByteStreamReaderD0Ev(%"class.content::ByteStreamReader"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content16ByteStreamWriterD2Ev(%"class.content::ByteStreamWriter"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN7content16ByteStreamWriterD0Ev(%"class.content::ByteStreamWriter"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content16CreateByteStreamE13scoped_refptrIN4base19SequencedTaskRunnerEES3_mPNSt3__110unique_ptrINS_16ByteStreamWriterENS4_14default_deleteIS6_EEEEPNS5_INS_16ByteStreamReaderENS7_ISB_EEEE(%"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"*, i64, %"class.std::__1::unique_ptr"* nocapture, %"class.std::__1::unique_ptr.2"* nocapture) local_unnamed_addr #3 {
  %6 = tail call i8* @_Znwm(i64 16) #14
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 4
  %9 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7content12_GLOBAL__N_112LifetimeFlagE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 12
  store i8 1, i8* %10, align 4
  %11 = atomicrmw add i32* %8, i32 1 monotonic
  %12 = tail call i8* @_Znwm(i64 16) #14
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7content12_GLOBAL__N_112LifetimeFlagE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 12
  store i8 1, i8* %16, align 4
  %17 = atomicrmw add i32* %14, i32 1 monotonic
  %18 = tail call i8* @_Znwm(i64 112) #14
  %19 = icmp eq %"class.base::SequencedTaskRunner"* %0, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  %23 = atomicrmw add i32* %8, i32 1 monotonic
  %24 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN7content12_GLOBAL__N_120ByteStreamWriterImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 8
  %26 = bitcast i8* %25 to i64*
  store i64 %2, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %18, i64 16
  %28 = bitcast i8* %27 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* %0, %"class.base::SequencedTaskRunner"** %28, align 8
  %29 = atomicrmw add i32* %21, i32 1 monotonic
  br label %37

30:                                               ; preds = %5
  %31 = atomicrmw add i32* %8, i32 1 monotonic
  %32 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN7content12_GLOBAL__N_120ByteStreamWriterImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds i8, i8* %18, i64 8
  %34 = bitcast i8* %33 to i64*
  store i64 %2, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %18, i64 16
  %36 = bitcast i8* %35 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %36, align 8
  br label %37

37:                                               ; preds = %30, %20
  %38 = getelementptr inbounds i8, i8* %18, i64 24
  %39 = bitcast i8* %38 to i8**
  store i8* %6, i8** %39, align 8
  %40 = atomicrmw add i32* %8, i32 1 monotonic
  %41 = getelementptr inbounds i8, i8* %18, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 80, i1 false) #15
  store i8 1, i8* %10, align 4
  %42 = atomicrmw sub i32* %8, i32 1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %37
  %45 = bitcast i8* %6 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %46 = bitcast i8* %6 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %47 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %47, i64 1
  %49 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %48, align 8
  tail call void %49(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %45) #15
  br label %50

50:                                               ; preds = %44, %37
  br i1 %19, label %59, label %51

51:                                               ; preds = %50
  %52 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %0, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw sub i32* %53, i32 1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %52, i64 -2
  %58 = bitcast %"class.base::RefCountedThreadSafe"* %57 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %58) #15
  br label %59

59:                                               ; preds = %50, %51, %56
  %60 = tail call i8* @_Znwm(i64 120) #14
  %61 = icmp eq %"class.base::SequencedTaskRunner"* %1, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 1 monotonic
  %65 = atomicrmw add i32* %14, i32 1 monotonic
  %66 = bitcast i8* %60 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content12_GLOBAL__N_120ByteStreamReaderImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds i8, i8* %60, i64 8
  %68 = bitcast i8* %67 to i64*
  store i64 %2, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %60, i64 16
  %70 = bitcast i8* %69 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* %1, %"class.base::SequencedTaskRunner"** %70, align 8
  %71 = atomicrmw add i32* %63, i32 1 monotonic
  br label %79

72:                                               ; preds = %59
  %73 = atomicrmw add i32* %14, i32 1 monotonic
  %74 = bitcast i8* %60 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content12_GLOBAL__N_120ByteStreamReaderImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %75 = getelementptr inbounds i8, i8* %60, i64 8
  %76 = bitcast i8* %75 to i64*
  store i64 %2, i64* %76, align 8
  %77 = getelementptr inbounds i8, i8* %60, i64 16
  %78 = bitcast i8* %77 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %78, align 8
  br label %79

79:                                               ; preds = %72, %62
  %80 = getelementptr inbounds i8, i8* %60, i64 24
  %81 = bitcast i8* %80 to i8**
  store i8* %12, i8** %81, align 8
  %82 = atomicrmw add i32* %14, i32 1 monotonic
  %83 = getelementptr inbounds i8, i8* %60, i64 32
  %84 = getelementptr inbounds i8, i8* %60, i64 68
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 33, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %84, i8 0, i64 52, i1 false) #15
  store i8 1, i8* %16, align 4
  %85 = atomicrmw sub i32* %14, i32 1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %93

87:                                               ; preds = %79
  %88 = bitcast i8* %12 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %89 = bitcast i8* %12 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %90 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %90, i64 1
  %92 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %91, align 8
  tail call void %92(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %88) #15
  br label %93

93:                                               ; preds = %87, %79
  br i1 %61, label %94, label %98

94:                                               ; preds = %93
  %95 = atomicrmw add i32* %14, i32 1 monotonic
  %96 = getelementptr inbounds i8, i8* %18, i64 104
  %97 = bitcast i8* %96 to i8**
  store i8* %60, i8** %97, align 8
  br label %113

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw sub i32* %100, i32 1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %99, i64 -2
  %105 = bitcast %"class.base::RefCountedThreadSafe"* %104 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %105) #15
  br label %106

106:                                              ; preds = %98, %103
  %107 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 1 monotonic
  %109 = atomicrmw add i32* %14, i32 1 monotonic
  %110 = getelementptr inbounds i8, i8* %18, i64 104
  %111 = bitcast i8* %110 to i8**
  store i8* %60, i8** %111, align 8
  %112 = atomicrmw add i32* %107, i32 1 monotonic
  br label %113

113:                                              ; preds = %94, %106
  %114 = getelementptr inbounds i8, i8* %18, i64 80
  %115 = ptrtoint %"class.base::SequencedTaskRunner"* %1 to i64
  %116 = bitcast i8* %114 to i64*
  %117 = bitcast i8* %114 to %"class.base::SequencedTaskRunner"**
  %118 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %117, align 8
  store i64 %115, i64* %116, align 8
  %119 = icmp eq %"class.base::SequencedTaskRunner"* %118, null
  br i1 %119, label %128, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %118, i64 0, i32 0, i32 1
  %122 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw sub i32* %122, i32 1 acq_rel
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %128

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %121, i64 -2
  %127 = bitcast %"class.base::RefCountedThreadSafe"* %126 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %127) #15
  br label %128

128:                                              ; preds = %125, %120, %113
  %129 = atomicrmw add i32* %14, i32 1 monotonic
  %130 = getelementptr inbounds i8, i8* %18, i64 96
  %131 = ptrtoint i8* %12 to i64
  %132 = bitcast i8* %130 to i64*
  %133 = bitcast i8* %130 to %"struct.content::(anonymous namespace)::LifetimeFlag"**
  %134 = load %"struct.content::(anonymous namespace)::LifetimeFlag"*, %"struct.content::(anonymous namespace)::LifetimeFlag"** %133, align 8
  store i64 %131, i64* %132, align 8
  %135 = icmp eq %"struct.content::(anonymous namespace)::LifetimeFlag"* %134, null
  br i1 %135, label %148, label %136

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %134, i64 0, i32 1
  %138 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = atomicrmw sub i32* %138, i32 1 acq_rel
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %141, label %148

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %137, i64 -2
  %143 = bitcast %"class.base::RefCountedThreadSafe.9"* %142 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %144 = bitcast %"class.base::RefCountedThreadSafe.9"* %142 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %145 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %145, i64 1
  %147 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %146, align 8
  tail call void %147(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %143) #15
  br label %148

148:                                              ; preds = %128, %136, %141
  %149 = atomicrmw sub i32* %14, i32 1 acq_rel
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %157

151:                                              ; preds = %148
  %152 = bitcast i8* %12 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %153 = bitcast i8* %12 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %154 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %153, align 8
  %155 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %154, i64 1
  %156 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %155, align 8
  tail call void %156(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %152) #15
  br label %157

157:                                              ; preds = %151, %148
  br i1 %61, label %166, label %158

158:                                              ; preds = %157
  %159 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1
  %160 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %159, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw sub i32* %160, i32 1 acq_rel
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %166

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %159, i64 -2
  %165 = bitcast %"class.base::RefCountedThreadSafe"* %164 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %165) #15
  br label %166

166:                                              ; preds = %157, %158, %163
  br i1 %19, label %167, label %171

167:                                              ; preds = %166
  %168 = atomicrmw add i32* %8, i32 1 monotonic
  %169 = getelementptr inbounds i8, i8* %60, i64 112
  %170 = bitcast i8* %169 to i8**
  store i8* %18, i8** %170, align 8
  br label %178

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = atomicrmw add i32* %172, i32 1 monotonic
  %174 = atomicrmw add i32* %8, i32 1 monotonic
  %175 = getelementptr inbounds i8, i8* %60, i64 112
  %176 = bitcast i8* %175 to i8**
  store i8* %18, i8** %176, align 8
  %177 = atomicrmw add i32* %172, i32 1 monotonic
  br label %178

178:                                              ; preds = %167, %171
  %179 = getelementptr inbounds i8, i8* %60, i64 88
  %180 = ptrtoint %"class.base::SequencedTaskRunner"* %0 to i64
  %181 = bitcast i8* %179 to i64*
  %182 = bitcast i8* %179 to %"class.base::SequencedTaskRunner"**
  %183 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %182, align 8
  store i64 %180, i64* %181, align 8
  %184 = icmp eq %"class.base::SequencedTaskRunner"* %183, null
  br i1 %184, label %193, label %185

185:                                              ; preds = %178
  %186 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %183, i64 0, i32 0, i32 1
  %187 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = atomicrmw sub i32* %187, i32 1 acq_rel
  %189 = icmp eq i32 %188, 1
  br i1 %189, label %190, label %193

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %186, i64 -2
  %192 = bitcast %"class.base::RefCountedThreadSafe"* %191 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %192) #15
  br label %193

193:                                              ; preds = %190, %185, %178
  %194 = atomicrmw add i32* %8, i32 1 monotonic
  %195 = getelementptr inbounds i8, i8* %60, i64 104
  %196 = ptrtoint i8* %6 to i64
  %197 = bitcast i8* %195 to i64*
  %198 = bitcast i8* %195 to %"struct.content::(anonymous namespace)::LifetimeFlag"**
  %199 = load %"struct.content::(anonymous namespace)::LifetimeFlag"*, %"struct.content::(anonymous namespace)::LifetimeFlag"** %198, align 8
  store i64 %196, i64* %197, align 8
  %200 = icmp eq %"struct.content::(anonymous namespace)::LifetimeFlag"* %199, null
  br i1 %200, label %213, label %201

201:                                              ; preds = %193
  %202 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %199, i64 0, i32 1
  %203 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %202, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = atomicrmw sub i32* %203, i32 1 acq_rel
  %205 = icmp eq i32 %204, 1
  br i1 %205, label %206, label %213

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %202, i64 -2
  %208 = bitcast %"class.base::RefCountedThreadSafe.9"* %207 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %209 = bitcast %"class.base::RefCountedThreadSafe.9"* %207 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %210 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %209, align 8
  %211 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %210, i64 1
  %212 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %211, align 8
  tail call void %212(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %208) #15
  br label %213

213:                                              ; preds = %193, %201, %206
  %214 = atomicrmw sub i32* %8, i32 1 acq_rel
  %215 = icmp eq i32 %214, 1
  br i1 %215, label %216, label %222

216:                                              ; preds = %213
  %217 = bitcast i8* %6 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %218 = bitcast i8* %6 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %219 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %218, align 8
  %220 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %219, i64 1
  %221 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %220, align 8
  tail call void %221(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %217) #15
  br label %222

222:                                              ; preds = %216, %213
  br i1 %19, label %231, label %223

223:                                              ; preds = %222
  %224 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %0, i64 0, i32 0, i32 1
  %225 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = atomicrmw sub i32* %225, i32 1 acq_rel
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %231

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %224, i64 -2
  %230 = bitcast %"class.base::RefCountedThreadSafe"* %229 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %230) #15
  br label %231

231:                                              ; preds = %222, %223, %228
  %232 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %233 = load %"class.content::ByteStreamWriter"*, %"class.content::ByteStreamWriter"** %232, align 8
  %234 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  store i8* %18, i8** %234, align 8
  %235 = icmp eq %"class.content::ByteStreamWriter"* %233, null
  br i1 %235, label %241, label %236

236:                                              ; preds = %231
  %237 = bitcast %"class.content::ByteStreamWriter"* %233 to void (%"class.content::ByteStreamWriter"*)***
  %238 = load void (%"class.content::ByteStreamWriter"*)**, void (%"class.content::ByteStreamWriter"*)*** %237, align 8
  %239 = getelementptr inbounds void (%"class.content::ByteStreamWriter"*)*, void (%"class.content::ByteStreamWriter"*)** %238, i64 1
  %240 = load void (%"class.content::ByteStreamWriter"*)*, void (%"class.content::ByteStreamWriter"*)** %239, align 8
  tail call void %240(%"class.content::ByteStreamWriter"* nonnull %233) #15
  br label %241

241:                                              ; preds = %231, %236
  %242 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %4, i64 0, i32 0, i32 0, i32 0
  %243 = load %"class.content::ByteStreamReader"*, %"class.content::ByteStreamReader"** %242, align 8
  %244 = bitcast %"class.std::__1::unique_ptr.2"* %4 to i8**
  store i8* %60, i8** %244, align 8
  %245 = icmp eq %"class.content::ByteStreamReader"* %243, null
  br i1 %245, label %251, label %246

246:                                              ; preds = %241
  %247 = bitcast %"class.content::ByteStreamReader"* %243 to void (%"class.content::ByteStreamReader"*)***
  %248 = load void (%"class.content::ByteStreamReader"*)**, void (%"class.content::ByteStreamReader"*)*** %247, align 8
  %249 = getelementptr inbounds void (%"class.content::ByteStreamReader"*)*, void (%"class.content::ByteStreamReader"*)** %248, i64 1
  %250 = load void (%"class.content::ByteStreamReader"*)*, void (%"class.content::ByteStreamReader"*)** %249, align 8
  tail call void %250(%"class.content::ByteStreamReader"* nonnull %243) #15
  br label %251

251:                                              ; preds = %246, %241
  %252 = atomicrmw sub i32* %14, i32 1 acq_rel
  %253 = icmp eq i32 %252, 1
  br i1 %253, label %254, label %260

254:                                              ; preds = %251
  %255 = bitcast i8* %12 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %256 = bitcast i8* %12 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %257 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %256, align 8
  %258 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %257, i64 1
  %259 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %258, align 8
  tail call void %259(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %255) #15
  br label %260

260:                                              ; preds = %254, %251
  %261 = atomicrmw sub i32* %8, i32 1 acq_rel
  %262 = icmp eq i32 %261, 1
  br i1 %262, label %263, label %269

263:                                              ; preds = %260
  %264 = bitcast i8* %6 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %265 = bitcast i8* %6 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %266 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %265, align 8
  %267 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %266, i64 1
  %268 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %267, align 8
  tail call void %268(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %264) #15
  br label %269

269:                                              ; preds = %260, %263
  br i1 %61, label %278, label %270

270:                                              ; preds = %269
  %271 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1
  %272 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %271, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = atomicrmw sub i32* %272, i32 1 acq_rel
  %274 = icmp eq i32 %273, 1
  br i1 %274, label %275, label %278

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %271, i64 -2
  %277 = bitcast %"class.base::RefCountedThreadSafe"* %276 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %277) #15
  br label %278

278:                                              ; preds = %269, %270, %275
  br i1 %19, label %287, label %279

279:                                              ; preds = %278
  %280 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %0, i64 0, i32 0, i32 1
  %281 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %280, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = atomicrmw sub i32* %281, i32 1 acq_rel
  %283 = icmp eq i32 %282, 1
  br i1 %283, label %284, label %287

284:                                              ; preds = %279
  %285 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %280, i64 -2
  %286 = bitcast %"class.base::RefCountedThreadSafe"* %285 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %286) #15
  br label %287

287:                                              ; preds = %278, %279, %284
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_112LifetimeFlagD2Ev(%"struct.content::(anonymous namespace)::LifetimeFlag"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_112LifetimeFlagD0Ev(%"struct.content::(anonymous namespace)::LifetimeFlag"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"struct.content::(anonymous namespace)::LifetimeFlag"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_120ByteStreamWriterImplD2Ev(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN7content12_GLOBAL__N_120ByteStreamWriterImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 3, i32 0
  %4 = load %"struct.content::(anonymous namespace)::LifetimeFlag"*, %"struct.content::(anonymous namespace)::LifetimeFlag"** %3, align 8
  %5 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %4, i64 0, i32 2
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 9, i32 0
  %7 = load %"struct.content::(anonymous namespace)::LifetimeFlag"*, %"struct.content::(anonymous namespace)::LifetimeFlag"** %6, align 8
  %8 = icmp eq %"struct.content::(anonymous namespace)::LifetimeFlag"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %7, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %21

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %10, i64 -2
  %16 = bitcast %"class.base::RefCountedThreadSafe.9"* %15 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %17 = bitcast %"class.base::RefCountedThreadSafe.9"* %15 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %18 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %18, i64 1
  %20 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %19, align 8
  tail call void %20(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %16) #15
  br label %21

21:                                               ; preds = %1, %9, %14
  %22 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 7, i32 0
  %23 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %22, align 8
  %24 = icmp eq %"class.base::SequencedTaskRunner"* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %23, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 -2
  %32 = bitcast %"class.base::RefCountedThreadSafe"* %31 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %32) #15
  br label %33

33:                                               ; preds = %21, %25, %30
  %34 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 5, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 5, i32 2
  %38 = load i64, i64* %37, align 8
  tail call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE13DestructRangeEmm(%"class.base::circular_deque"* %34, i64 %36, i64 %38) #15
  %39 = bitcast %"class.base::circular_deque"* %34 to i8**
  %40 = load i8*, i8** %39, align 8
  tail call void @free(i8* %40) #15
  %41 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %41) #15
  %42 = load %"struct.content::(anonymous namespace)::LifetimeFlag"*, %"struct.content::(anonymous namespace)::LifetimeFlag"** %3, align 8
  %43 = icmp eq %"struct.content::(anonymous namespace)::LifetimeFlag"* %42, null
  br i1 %43, label %56, label %44

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %42, i64 0, i32 1
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw sub i32* %46, i32 1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %56

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %45, i64 -2
  %51 = bitcast %"class.base::RefCountedThreadSafe.9"* %50 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %52 = bitcast %"class.base::RefCountedThreadSafe.9"* %50 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %53 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %53, i64 1
  %55 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %54, align 8
  tail call void %55(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %51) #15
  br label %56

56:                                               ; preds = %33, %44, %49
  %57 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 2, i32 0
  %58 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %57, align 8
  %59 = icmp eq %"class.base::SequencedTaskRunner"* %58, null
  br i1 %59, label %68, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %58, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw sub i32* %62, i32 1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %61, i64 -2
  %67 = bitcast %"class.base::RefCountedThreadSafe"* %66 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %67) #15
  br label %68

68:                                               ; preds = %56, %60, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_120ByteStreamWriterImplD0Ev(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*) unnamed_addr #3 align 2 {
  tail call void @_ZN7content12_GLOBAL__N_120ByteStreamWriterImplD2Ev(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0) #15
  %2 = bitcast %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN7content12_GLOBAL__N_120ByteStreamWriterImpl5WriteE13scoped_refptrIN3net8IOBufferEEm(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*, %"class.net::IOBuffer"*, i64) unnamed_addr #3 align 2 {
  %4 = bitcast %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0 to i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)***
  %5 = load i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)**, i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)*, i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)** %5, i64 6
  %7 = load i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)*, i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)** %6, align 8
  %8 = tail call i64 %7(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0) #15
  %9 = xor i64 %8, -1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %53, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 5
  %13 = icmp eq %"class.net::IOBuffer"* %1, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %11, %14
  %18 = ptrtoint %"class.net::IOBuffer"* %1 to i64
  tail call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %12, i64 1) #15
  %19 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %12, i64 0, i32 0
  %20 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 5, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %19, i64 %21) #15
  %23 = bitcast %"struct.std::__1::pair"* %22 to i64*
  store i64 %18, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 1
  store i64 %2, i64* %24, align 8
  %25 = load i64, i64* %20, align 8
  %26 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 5, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  %29 = icmp eq i64 %25, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %17
  store i64 0, i64* %20, align 8
  br label %34

31:                                               ; preds = %17
  %32 = add i64 %25, 1
  store i64 %32, i64* %20, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31, %30
  br label %35

35:                                               ; preds = %34, %31
  %36 = phi i64 [ %28, %34 ], [ %25, %31 ]
  %37 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZNK4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %19, i64 %36) #15
  %38 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 6
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %2
  store i64 %40, i64* %38, align 8
  %41 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = udiv i64 %42, 3
  %44 = icmp ugt i64 %40, %43
  br i1 %44, label %45, label %46

45:                                               ; preds = %35
  tail call fastcc void @_ZN7content12_GLOBAL__N_120ByteStreamWriterImpl10PostToPeerEbi(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i1 zeroext false, i32 0)
  br label %46

46:                                               ; preds = %45, %35
  %47 = load i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)**, i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)*** %4, align 8
  %48 = getelementptr inbounds i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)*, i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)** %47, i64 6
  %49 = load i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)*, i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)** %48, align 8
  %50 = tail call i64 %49(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0) #15
  %51 = load i64, i64* %41, align 8
  %52 = icmp ule i64 %50, %51
  br label %53

53:                                               ; preds = %3, %46
  %54 = phi i1 [ %52, %46 ], [ false, %3 ]
  %55 = icmp eq %"class.net::IOBuffer"* %1, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 1
  %58 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw sub i32* %58, i32 1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %68

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %57, i64 -2
  %63 = bitcast %"class.base::RefCountedThreadSafe.13"* %62 to %"class.net::IOBuffer"*
  %64 = bitcast %"class.base::RefCountedThreadSafe.13"* %62 to void (%"class.net::IOBuffer"*)***
  %65 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %65, i64 1
  %67 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %66, align 8
  tail call void %67(%"class.net::IOBuffer"* nonnull %63) #15
  br label %68

68:                                               ; preds = %53, %56, %61
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_120ByteStreamWriterImpl5FlushEv(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 6
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call fastcc void @_ZN7content12_GLOBAL__N_120ByteStreamWriterImpl10PostToPeerEbi(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i1 zeroext false, i32 0)
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_120ByteStreamWriterImpl5CloseEi(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"* nocapture, i32) unnamed_addr #3 align 2 {
  tail call fastcc void @_ZN7content12_GLOBAL__N_120ByteStreamWriterImpl10PostToPeerEbi(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i1 zeroext true, i32 %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_120ByteStreamWriterImpl16RegisterCallbackEN4base17RepeatingCallbackIFvvEEE(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*, %"class.base::RepeatingCallback"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 4, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK7content12_GLOBAL__N_120ByteStreamWriterImpl21GetTotalBufferedBytesEv(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 6
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 8
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %3
  ret i64 %6
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %7, %"struct.std::__1::pair"* %8, %"struct.std::__1::pair"* %12)
  %13 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"struct.std::__1::pair"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %7, %"struct.std::__1::pair"* %15, %"struct.std::__1::pair"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"struct.std::__1::pair"*, align 8
  %6 = alloca %"struct.std::__1::pair"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"** %5, align 8
  store %"struct.std::__1::pair"* %2, %"struct.std::__1::pair"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"struct.std::__1::pair"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"struct.std::__1::pair"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #15
  %17 = bitcast %"struct.std::__1::pair"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* %16, i8* %18) #15
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #15
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %26 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %27 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %28 = icmp eq %"struct.std::__1::pair"* %26, %27
  br i1 %28, label %51, label %29

29:                                               ; preds = %25, %46
  %30 = phi %"struct.std::__1::pair"* [ %48, %46 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %31, align 8
  %33 = icmp eq %"class.net::IOBuffer"* %32, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %32, i64 0, i32 1
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %46

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %35, i64 -2
  %41 = bitcast %"class.base::RefCountedThreadSafe.13"* %40 to %"class.net::IOBuffer"*
  %42 = bitcast %"class.base::RefCountedThreadSafe.13"* %40 to void (%"class.net::IOBuffer"*)***
  %43 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %43, i64 1
  %45 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %44, align 8
  call void %45(%"class.net::IOBuffer"* nonnull %41) #15
  br label %46

46:                                               ; preds = %29, %34, %39
  %47 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 1
  store %"struct.std::__1::pair"* %48, %"struct.std::__1::pair"** %5, align 8
  %49 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %50 = icmp eq %"struct.std::__1::pair"* %48, %49
  br i1 %50, label %51, label %29

51:                                               ; preds = %46, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %1
  ret %"struct.std::__1::pair"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #9

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #9

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPNSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #10 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #15
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #9

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN7content12_GLOBAL__N_120ByteStreamWriterImpl10PostToPeerEbi(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"* nocapture, i1 zeroext, i32) unnamed_addr #3 align 2 {
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = zext i1 %1 to i8
  %7 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 6
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %3
  %11 = tail call i8* @_Znwm(i64 32) #14
  %12 = ptrtoint i8* %11 to i64
  %13 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 5
  %14 = bitcast %"class.base::circular_deque"* %13 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 8
  %16 = bitcast i8* %11 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %16, align 8
  %17 = getelementptr inbounds i8, i8* %11, i64 16
  %18 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 5, i32 1
  %19 = bitcast %"class.base::circular_deque"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false)
  %20 = bitcast i64* %18 to <2 x i64>*
  %21 = load <2 x i64>, <2 x i64>* %20, align 8
  %22 = bitcast i8* %17 to <2 x i64>*
  store <2 x i64> %21, <2 x i64>* %22, align 8
  %23 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %23, align 8
  %24 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 8
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, %8
  store i64 %26, i64* %24, align 8
  store i64 0, i64* %7, align 8
  br label %27

27:                                               ; preds = %3, %10
  %28 = phi i64 [ 0, %3 ], [ %12, %10 ]
  %29 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 7, i32 0
  %30 = bitcast %"class.base::SequencedTaskRunner"** %29 to %"class.base::TaskRunner"**
  %31 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %30, align 8
  %32 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #15
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i64 0, i64 0), i32 301) #15
  %33 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 10
  %34 = call i8* @_Znwm(i64 80) #14, !noalias !2
  %35 = bitcast i8* %34 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %35, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS5_20ByteStreamReaderImplENSt3__110unique_ptrINS_14circular_dequeINSA_4pairIS3_IN3net8IOBufferEEmEEEENSA_14default_deleteISI_EEEEmbiEJS7_S9_SL_mbiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS4_20ByteStreamReaderImplENSt3__110unique_ptrINS_14circular_dequeINS9_4pairIS2_IN3net8IOBufferEEmEEEENS9_14default_deleteISH_EEEEmbiEJS6_S8_SK_mbiEE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !2
  %36 = getelementptr inbounds i8, i8* %34, i64 32
  %37 = bitcast i8* %36 to i64*
  store i64 ptrtoint (void (%"struct.content::(anonymous namespace)::LifetimeFlag"*, %"class.content::(anonymous namespace)::ByteStreamReaderImpl"*, %"class.base::circular_deque"*, i64, i1, i32)* @_ZN7content12_GLOBAL__N_120ByteStreamReaderImpl12TransferDataE13scoped_refptrINS0_12LifetimeFlagEEPS1_NSt3__110unique_ptrIN4base14circular_dequeINS6_4pairIS2_IN3net8IOBufferEEmEEEENS6_14default_deleteISF_EEEEmbi to i64), i64* %37, align 8, !noalias !2
  %38 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %0, i64 0, i32 9, i32 0
  %39 = load %"struct.content::(anonymous namespace)::LifetimeFlag"*, %"struct.content::(anonymous namespace)::LifetimeFlag"** %38, align 8, !noalias !2
  %40 = getelementptr inbounds i8, i8* %34, i64 40
  %41 = bitcast i8* %40 to %"struct.content::(anonymous namespace)::LifetimeFlag"**
  store %"struct.content::(anonymous namespace)::LifetimeFlag"* %39, %"struct.content::(anonymous namespace)::LifetimeFlag"** %41, align 8, !noalias !2
  %42 = icmp eq %"struct.content::(anonymous namespace)::LifetimeFlag"* %39, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %27
  %44 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %39, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 1 monotonic, !noalias !2
  br label %46

46:                                               ; preds = %43, %27
  %47 = getelementptr inbounds i8, i8* %34, i64 48
  %48 = bitcast %"class.content::(anonymous namespace)::ByteStreamReaderImpl"** %33 to i64*
  %49 = load i64, i64* %48, align 8, !noalias !2
  %50 = bitcast i8* %47 to i64*
  store i64 %49, i64* %50, align 8, !noalias !2
  %51 = getelementptr inbounds i8, i8* %34, i64 56
  %52 = bitcast i8* %51 to i64*
  store i64 %28, i64* %52, align 8, !noalias !2
  %53 = getelementptr inbounds i8, i8* %34, i64 64
  %54 = bitcast i8* %53 to i64*
  store i64 %8, i64* %54, align 8, !noalias !2
  %55 = getelementptr inbounds i8, i8* %34, i64 72
  store i8 %6, i8* %55, align 1, !noalias !2
  %56 = getelementptr inbounds i8, i8* %34, i64 76
  %57 = bitcast i8* %56 to i32*
  store i32 %2, i32* %57, align 4, !noalias !2
  %58 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %34, i8** %58, align 8, !alias.scope !2
  %59 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %31, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #15
  %60 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %60) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #15
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 16) #15
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #15
  br i1 %37, label %38, label %39, !prof !7

38:                                               ; preds = %27
  tail call void @llvm.trap() #15
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #15
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #15
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #15
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #15
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #3 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"struct.std::__1::pair"* %11, %"struct.std::__1::pair"* %12, %"struct.std::__1::pair"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"struct.std::__1::pair"* %19, %"struct.std::__1::pair"* %20, %"struct.std::__1::pair"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"struct.std::__1::pair"* %24, %"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"struct.std::__1::pair"* %0 to i64
  %6 = icmp ult %"struct.std::__1::pair"* %2, %1
  br i1 %6, label %7, label %23

7:                                                ; preds = %3
  %8 = ptrtoint %"struct.std::__1::pair"* %2 to i64
  %9 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #15
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #15
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !7

16:                                               ; preds = %7
  tail call void @llvm.trap() #15
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %3, %17, %20
  %24 = icmp eq %"struct.std::__1::pair"* %0, %1
  br i1 %24, label %53, label %25

25:                                               ; preds = %23, %49
  %26 = phi %"struct.std::__1::pair"* [ %51, %49 ], [ %2, %23 ]
  %27 = phi %"struct.std::__1::pair"* [ %50, %49 ], [ %0, %23 ]
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 0, i32 0
  %29 = bitcast %"struct.std::__1::pair"* %27 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"struct.std::__1::pair"* %26 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.net::IOBuffer"* null, %"class.net::IOBuffer"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %32, align 8
  %35 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %28, align 8
  %36 = icmp eq %"class.net::IOBuffer"* %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %35, i64 0, i32 1
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %49

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %38, i64 -2
  %44 = bitcast %"class.base::RefCountedThreadSafe.13"* %43 to %"class.net::IOBuffer"*
  %45 = bitcast %"class.base::RefCountedThreadSafe.13"* %43 to void (%"class.net::IOBuffer"*)***
  %46 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %46, i64 1
  %48 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %47, align 8
  call void %48(%"class.net::IOBuffer"* nonnull %44) #15
  br label %49

49:                                               ; preds = %25, %37, %42
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 1
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 1
  %52 = icmp eq %"struct.std::__1::pair"* %50, %1
  br i1 %52, label %53, label %25

53:                                               ; preds = %49, %23
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #12

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair"* @_ZNK4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %1
  ret %"struct.std::__1::pair"* %25
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #9

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_120ByteStreamReaderImpl12TransferDataE13scoped_refptrINS0_12LifetimeFlagEEPS1_NSt3__110unique_ptrIN4base14circular_dequeINS6_4pairIS2_IN3net8IOBufferEEmEEEENS6_14default_deleteISF_EEEEmbi(%"struct.content::(anonymous namespace)::LifetimeFlag"*, %"class.content::(anonymous namespace)::ByteStreamReaderImpl"*, %"class.base::circular_deque"*, i64, i1 zeroext, i32) #3 align 2 {
  %7 = alloca %"class.base::internal::circular_deque_iterator", align 8
  %8 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4, !range !8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %56, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.base::internal::circular_deque_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12)
  %13 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %1, i64 0, i32 4
  %14 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %1, i64 0, i32 4, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %1, i64 0, i32 4, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %15, %17
  %19 = icmp eq %"class.base::circular_deque"* %2, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %7, i64 0, i32 0, i32 0
  store %"class.base::circular_deque"* %2, %"class.base::circular_deque"** %25, align 8
  %26 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %7, i64 0, i32 0, i32 1
  store i64 %24, i64* %26, align 8
  tail call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE6insertINS_8internal23circular_deque_iteratorIS7_EEEENS1_9enable_ifIXgssr4base8internal11is_iteratorIT_EE5valueEvE4typeENSA_29circular_deque_const_iteratorIS7_EESE_SE_(%"class.base::circular_deque"* %13, %"class.base::circular_deque"* %13, i64 %17, %"class.base::circular_deque"* nonnull %2, i64 %22, %"class.base::internal::circular_deque_iterator"* nonnull byval(%"class.base::internal::circular_deque_iterator") align 8 %7) #15
  br label %27

27:                                               ; preds = %20, %11
  br i1 %4, label %28, label %31

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %1, i64 0, i32 5
  store i8 1, i8* %29, align 8
  %30 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %1, i64 0, i32 6
  store i32 %5, i32* %30, align 4
  br label %31

31:                                               ; preds = %28, %27
  br i1 %18, label %32, label %37

32:                                               ; preds = %31
  %33 = load i64, i64* %14, align 8
  %34 = load i64, i64* %16, align 8
  %35 = icmp ne i64 %33, %34
  %36 = or i1 %35, %4
  br i1 %36, label %38, label %46

37:                                               ; preds = %31
  br i1 %4, label %38, label %46

38:                                               ; preds = %37, %32
  %39 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %39, align 8
  %41 = icmp eq %"class.base::internal::BindStateBase"* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %40, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %44, align 8
  tail call void %45(%"class.base::internal::BindStateBase"* nonnull %40) #15
  br label %46

46:                                               ; preds = %42, %38, %37, %32
  br i1 %19, label %55, label %47

47:                                               ; preds = %46
  %48 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 2
  %51 = load i64, i64* %50, align 8
  tail call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE13DestructRangeEmm(%"class.base::circular_deque"* nonnull %2, i64 %49, i64 %51) #15
  %52 = bitcast %"class.base::circular_deque"* %2 to i8**
  %53 = load i8*, i8** %52, align 8
  tail call void @free(i8* %53) #15
  %54 = bitcast %"class.base::circular_deque"* %2 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  br label %55

55:                                               ; preds = %47, %46
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12)
  br label %66

56:                                               ; preds = %6
  %57 = icmp eq %"class.base::circular_deque"* %2, null
  br i1 %57, label %66, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  tail call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE13DestructRangeEmm(%"class.base::circular_deque"* nonnull %2, i64 %60, i64 %62) #15
  %63 = bitcast %"class.base::circular_deque"* %2 to i8**
  %64 = load i8*, i8** %63, align 8
  tail call void @free(i8* %64) #15
  %65 = bitcast %"class.base::circular_deque"* %2 to i8*
  tail call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %55, %56, %58
  %67 = icmp eq %"struct.content::(anonymous namespace)::LifetimeFlag"* %0, null
  br i1 %67, label %80, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %0, i64 0, i32 1
  %70 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw sub i32* %70, i32 1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %80

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %69, i64 -2
  %75 = bitcast %"class.base::RefCountedThreadSafe.9"* %74 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %76 = bitcast %"class.base::RefCountedThreadSafe.9"* %74 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %77 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %77, i64 1
  %79 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %78, align 8
  tail call void %79(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %75) #15
  br label %80

80:                                               ; preds = %66, %68, %73
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS5_20ByteStreamReaderImplENSt3__110unique_ptrINS_14circular_dequeINSA_4pairIS3_IN3net8IOBufferEEmEEEENSA_14default_deleteISI_EEEEmbiEJS7_S9_SL_mbiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture) #3 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*, %"class.content::(anonymous namespace)::ByteStreamReaderImpl"*, %"class.base::circular_deque"*, i64, i1, i32)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.std::__1::tuple"*
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %"class.content::(anonymous namespace)::ByteStreamReaderImpl"**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 3
  %9 = bitcast void ()** %8 to i64*
  %10 = getelementptr inbounds void ()*, void ()** %4, i64 4
  %11 = bitcast void ()** %10 to i8*
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 5, i32 0
  %13 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*, %"class.content::(anonymous namespace)::ByteStreamReaderImpl"*, %"class.base::circular_deque"*, i64, i1, i32)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*, %"class.content::(anonymous namespace)::ByteStreamReaderImpl"*, %"class.base::circular_deque"*, i64, i1, i32)** %3, align 8
  %14 = bitcast void ()** %4 to %"struct.content::(anonymous namespace)::LifetimeFlag"**
  %15 = load %"struct.content::(anonymous namespace)::LifetimeFlag"*, %"struct.content::(anonymous namespace)::LifetimeFlag"** %14, align 8
  store %"struct.content::(anonymous namespace)::LifetimeFlag"* null, %"struct.content::(anonymous namespace)::LifetimeFlag"** %14, align 8
  %16 = load %"class.content::(anonymous namespace)::ByteStreamReaderImpl"*, %"class.content::(anonymous namespace)::ByteStreamReaderImpl"** %7, align 8
  %17 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %18 = bitcast void ()** %17 to %"class.base::circular_deque"**
  %19 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %18, align 8
  store %"class.base::circular_deque"* null, %"class.base::circular_deque"** %18, align 8
  %20 = load i64, i64* %9, align 8
  %21 = load i8, i8* %11, align 1, !range !8
  %22 = icmp ne i8 %21, 0
  %23 = load i32, i32* %12, align 4
  tail call void %13(%"struct.content::(anonymous namespace)::LifetimeFlag"* %15, %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %16, %"class.base::circular_deque"* %19, i64 %20, i1 zeroext %22, i32 %23) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS4_20ByteStreamReaderImplENSt3__110unique_ptrINS_14circular_dequeINS9_4pairIS2_IN3net8IOBufferEEmEEEENS9_14default_deleteISH_EEEEmbiEJS6_S8_SK_mbiEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #3 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %35, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.base::circular_deque"**
  %6 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %5, align 8
  store %"class.base::circular_deque"* null, %"class.base::circular_deque"** %5, align 8
  %7 = icmp eq %"class.base::circular_deque"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %6, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %6, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  tail call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE13DestructRangeEmm(%"class.base::circular_deque"* nonnull %6, i64 %10, i64 %12) #15
  %13 = bitcast %"class.base::circular_deque"* %6 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @free(i8* %14) #15
  %15 = bitcast %"class.base::circular_deque"* %6 to i8*
  tail call void @_ZdlPv(i8* %15) #14
  br label %16

16:                                               ; preds = %8, %3
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to %"struct.content::(anonymous namespace)::LifetimeFlag"**
  %19 = load %"struct.content::(anonymous namespace)::LifetimeFlag"*, %"struct.content::(anonymous namespace)::LifetimeFlag"** %18, align 8
  %20 = icmp eq %"struct.content::(anonymous namespace)::LifetimeFlag"* %19, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %19, i64 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %33

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe.9"* %27 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %29 = bitcast %"class.base::RefCountedThreadSafe.9"* %27 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %30 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %30, i64 1
  %32 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %31, align 8
  tail call void %32(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %28) #15
  br label %33

33:                                               ; preds = %16, %21, %26
  %34 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %33, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE6insertINS_8internal23circular_deque_iteratorIS7_EEEENS1_9enable_ifIXgssr4base8internal11is_iteratorIT_EE5valueEvE4typeENSA_29circular_deque_const_iteratorIS7_EESE_SE_(%"class.base::circular_deque"*, %"class.base::circular_deque"*, i64, %"class.base::circular_deque"*, i64, %"class.base::internal::circular_deque_iterator"* byval(%"class.base::internal::circular_deque_iterator") align 8) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.base::internal::circular_deque_iterator", align 8
  %8 = alloca %"class.base::internal::circular_deque_iterator", align 8
  %9 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %5, i64 0, i32 0, i32 0
  %10 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %5, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %10, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %6
  %17 = sub i64 %12, %14
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %10, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %12, %14
  %22 = add i64 %21, %20
  br label %23

23:                                               ; preds = %18, %16
  %24 = phi i64 [ %17, %16 ], [ %22, %18 ]
  %25 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp ugt i64 %26, %4
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = sub i64 %4, %26
  br label %35

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %4, %26
  %34 = add i64 %33, %32
  br label %35

35:                                               ; preds = %28, %30
  %36 = phi i64 [ %29, %28 ], [ %34, %30 ]
  %37 = sub i64 %24, %36
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %122, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.base::internal::circular_deque_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #15
  %41 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %7, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 16, i1 false) #15
  %43 = bitcast %"class.base::internal::circular_deque_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #15
  %44 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %8, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 16, i1 false) #15
  %46 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %2
  br i1 %48, label %49, label %56

49:                                               ; preds = %39
  tail call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %0, i64 %37)
  %50 = load i64, i64* %46, align 8
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %44, align 8
  store i64 %50, i64* %45, align 8
  %51 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %37
  %54 = add i64 %53, %52
  %55 = urem i64 %54, %52
  store i64 %55, i64* %46, align 8
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %41, align 8
  store i64 %55, i64* %42, align 8
  br label %59

56:                                               ; preds = %39
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %41, align 8
  store i64 %2, i64* %42, align 8
  call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE11MakeRoomForEmPNS_8internal23circular_deque_iteratorIS7_EESC_(%"class.base::circular_deque"* %0, i64 %37, %"class.base::internal::circular_deque_iterator"* nonnull %7, %"class.base::internal::circular_deque_iterator"* nonnull %8)
  %57 = load i64, i64* %42, align 8
  %58 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %41, align 8
  br label %59

59:                                               ; preds = %56, %49
  %60 = phi %"class.base::circular_deque"* [ %58, %56 ], [ %0, %49 ]
  %61 = phi i64 [ %57, %56 ], [ %55, %49 ]
  %62 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %63 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 0
  %64 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 0, i32 1
  br label %65

65:                                               ; preds = %106, %59
  %66 = phi %"class.base::circular_deque"* [ %60, %59 ], [ %112, %106 ]
  %67 = phi i64 [ %61, %59 ], [ %116, %106 ]
  %68 = phi i64 [ %4, %59 ], [ %120, %106 ]
  %69 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %66, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp ult i64 %67, %70
  br i1 %71, label %74, label %72

72:                                               ; preds = %65
  %73 = sub i64 %67, %70
  br label %79

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %66, i64 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %67, %70
  %78 = add i64 %77, %76
  br label %79

79:                                               ; preds = %74, %72
  %80 = phi i64 [ %73, %72 ], [ %78, %74 ]
  %81 = load i64, i64* %45, align 8
  %82 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %44, align 8
  %83 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %82, i64 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = icmp ult i64 %81, %84
  br i1 %85, label %88, label %86

86:                                               ; preds = %79
  %87 = sub i64 %81, %84
  br label %93

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %82, i64 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %81, %84
  %92 = add i64 %91, %90
  br label %93

93:                                               ; preds = %86, %88
  %94 = phi i64 [ %87, %86 ], [ %92, %88 ]
  %95 = icmp ult i64 %80, %94
  br i1 %95, label %96, label %121

96:                                               ; preds = %93
  %97 = call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %62, i64 %67)
  %98 = call dereferenceable(16) %"struct.std::__1::pair"* @_ZNK4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %63, i64 %68) #15
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %99, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 0, i32 0
  store %"class.net::IOBuffer"* %100, %"class.net::IOBuffer"** %101, align 8
  %102 = icmp eq %"class.net::IOBuffer"* %100, null
  br i1 %102, label %106, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %100, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw add i32* %104, i32 1 monotonic
  br label %106

106:                                              ; preds = %96, %103
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 1
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %98, i64 0, i32 1
  %109 = load i64, i64* %108, align 8
  store i64 %109, i64* %107, align 8
  %110 = load i64, i64* %42, align 8
  %111 = add i64 %110, 1
  store i64 %111, i64* %42, align 8
  %112 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %41, align 8
  %113 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %112, i64 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %111, %114
  %116 = select i1 %115, i64 0, i64 %111
  store i64 %116, i64* %42, align 8
  %117 = add i64 %68, 1
  %118 = load i64, i64* %64, align 8
  %119 = icmp eq i64 %117, %118
  %120 = select i1 %119, i64 0, i64 %117
  br label %65

121:                                              ; preds = %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #15
  br label %122

122:                                              ; preds = %35, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE11MakeRoomForEmPNS_8internal23circular_deque_iteratorIS7_EESC_(%"class.base::circular_deque"*, i64, %"class.base::internal::circular_deque_iterator"*, %"class.base::internal::circular_deque_iterator"*) local_unnamed_addr #3 comdat align 2 {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = bitcast %"class.base::internal::circular_deque_iterator"* %3 to i8*
  %8 = bitcast %"class.base::internal::circular_deque_iterator"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  br label %65

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %2, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %12, align 8
  %14 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %13, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %11, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %9
  %18 = sub i64 %11, %15
  br label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %13, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %11, %15
  %23 = add i64 %22, %21
  br label %24

24:                                               ; preds = %17, %19
  %25 = phi i64 [ %18, %17 ], [ %23, %19 ]
  tail call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %0, i64 %1)
  %26 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, %25
  %29 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %30 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = urem i64 %28, %31
  store i64 %32, i64* %10, align 8
  %33 = add i64 %32, %1
  %34 = load i64, i64* %30, align 8
  %35 = urem i64 %33, %34
  %36 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %3, i64 0, i32 0, i32 0
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %36, align 8
  %37 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %3, i64 0, i32 0, i32 1
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %1
  %41 = load i64, i64* %30, align 8
  %42 = urem i64 %40, %41
  store i64 %42, i64* %38, align 8
  %43 = load i64, i64* %10, align 8
  %44 = icmp eq i64 %39, %43
  br i1 %44, label %65, label %45

45:                                               ; preds = %24, %57
  %46 = phi i64 [ %59, %57 ], [ %42, %24 ]
  %47 = phi i64 [ %53, %57 ], [ %39, %24 ]
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = load i64, i64* %30, align 8
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi i64 [ %50, %49 ], [ %47, %45 ]
  %53 = add i64 %52, -1
  %54 = icmp eq i64 %46, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = load i64, i64* %30, align 8
  br label %57

57:                                               ; preds = %51, %55
  %58 = phi i64 [ %56, %55 ], [ %46, %51 ]
  %59 = add i64 %58, -1
  %60 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %53)
  %61 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %52)
  %62 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %59)
  tail call void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE9MoveRangeIS8_Li0EEEvPS8_SB_SB_(%"struct.std::__1::pair"* %60, %"struct.std::__1::pair"* %61, %"struct.std::__1::pair"* %62)
  %63 = load i64, i64* %10, align 8
  %64 = icmp eq i64 %53, %63
  br i1 %64, label %65, label %45

65:                                               ; preds = %57, %24, %6
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_120ByteStreamReaderImplD2Ev(%"class.content::(anonymous namespace)::ByteStreamReaderImpl"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content12_GLOBAL__N_120ByteStreamReaderImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 3, i32 0
  %4 = load %"struct.content::(anonymous namespace)::LifetimeFlag"*, %"struct.content::(anonymous namespace)::LifetimeFlag"** %3, align 8
  %5 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %4, i64 0, i32 2
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 11, i32 0
  %7 = load %"struct.content::(anonymous namespace)::LifetimeFlag"*, %"struct.content::(anonymous namespace)::LifetimeFlag"** %6, align 8
  %8 = icmp eq %"struct.content::(anonymous namespace)::LifetimeFlag"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %7, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %21

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %10, i64 -2
  %16 = bitcast %"class.base::RefCountedThreadSafe.9"* %15 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %17 = bitcast %"class.base::RefCountedThreadSafe.9"* %15 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %18 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %18, i64 1
  %20 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %19, align 8
  tail call void %20(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %16) #15
  br label %21

21:                                               ; preds = %1, %9, %14
  %22 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 9, i32 0
  %23 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %22, align 8
  %24 = icmp eq %"class.base::SequencedTaskRunner"* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %23, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 -2
  %32 = bitcast %"class.base::RefCountedThreadSafe"* %31 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %32) #15
  br label %33

33:                                               ; preds = %21, %25, %30
  %34 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 7, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %34) #15
  %35 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 4, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 4, i32 2
  %39 = load i64, i64* %38, align 8
  tail call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE13DestructRangeEmm(%"class.base::circular_deque"* %35, i64 %37, i64 %39) #15
  %40 = bitcast %"class.base::circular_deque"* %35 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void @free(i8* %41) #15
  %42 = load %"struct.content::(anonymous namespace)::LifetimeFlag"*, %"struct.content::(anonymous namespace)::LifetimeFlag"** %3, align 8
  %43 = icmp eq %"struct.content::(anonymous namespace)::LifetimeFlag"* %42, null
  br i1 %43, label %56, label %44

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %42, i64 0, i32 1
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw sub i32* %46, i32 1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %56

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %45, i64 -2
  %51 = bitcast %"class.base::RefCountedThreadSafe.9"* %50 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %52 = bitcast %"class.base::RefCountedThreadSafe.9"* %50 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %53 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %53, i64 1
  %55 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %54, align 8
  tail call void %55(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %51) #15
  br label %56

56:                                               ; preds = %33, %44, %49
  %57 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 2, i32 0
  %58 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %57, align 8
  %59 = icmp eq %"class.base::SequencedTaskRunner"* %58, null
  br i1 %59, label %68, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %58, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw sub i32* %62, i32 1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %61, i64 -2
  %67 = bitcast %"class.base::RefCountedThreadSafe"* %66 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %67) #15
  br label %68

68:                                               ; preds = %56, %60, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_120ByteStreamReaderImplD0Ev(%"class.content::(anonymous namespace)::ByteStreamReaderImpl"*) unnamed_addr #3 align 2 {
  tail call void @_ZN7content12_GLOBAL__N_120ByteStreamReaderImplD2Ev(%"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0) #15
  %2 = bitcast %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN7content12_GLOBAL__N_120ByteStreamReaderImpl4ReadEP13scoped_refptrIN3net8IOBufferEEPm(%"class.content::(anonymous namespace)::ByteStreamReaderImpl"*, %class.scoped_refptr.12* nocapture, i64* nocapture) unnamed_addr #3 align 2 {
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 4, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 4, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, %8
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = sub i64 %10, %8
  br label %19

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 4, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %10, %8
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %12, %14
  %20 = phi i64 [ %13, %12 ], [ %18, %14 ]
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %104, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %6, i64 0, i32 0
  %24 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %23, i64 %8) #15
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %25, align 8
  %27 = icmp eq %"class.net::IOBuffer"* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %26, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  br label %31

31:                                               ; preds = %22, %28
  %32 = ptrtoint %"class.net::IOBuffer"* %26 to i64
  %33 = bitcast %class.scoped_refptr.12* %1 to i64*
  %34 = getelementptr inbounds %class.scoped_refptr.12, %class.scoped_refptr.12* %1, i64 0, i32 0
  %35 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %34, align 8
  store i64 %32, i64* %33, align 8
  %36 = icmp eq %"class.net::IOBuffer"* %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %35, i64 0, i32 1
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %49

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %38, i64 -2
  %44 = bitcast %"class.base::RefCountedThreadSafe.13"* %43 to %"class.net::IOBuffer"*
  %45 = bitcast %"class.base::RefCountedThreadSafe.13"* %43 to void (%"class.net::IOBuffer"*)***
  %46 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %46, i64 1
  %48 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %47, align 8
  tail call void %48(%"class.net::IOBuffer"* nonnull %44) #15
  br label %49

49:                                               ; preds = %31, %37, %42
  %50 = load i64, i64* %7, align 8
  %51 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %23, i64 %50) #15
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %2, align 8
  %54 = load i64, i64* %7, align 8
  %55 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %23, i64 %54) #15
  %56 = load i64, i64* %7, align 8
  %57 = add i64 %56, 1
  %58 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEEixEm(%"class.base::internal::VectorBuffer"* %23, i64 %57) #15
  tail call void @_ZN4base8internal12VectorBufferINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %23, %"struct.std::__1::pair"* %55, %"struct.std::__1::pair"* %58) #15
  %59 = load i64, i64* %7, align 8
  %60 = add i64 %59, 1
  %61 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 4, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %60, %62
  %64 = select i1 %63, i64 0, i64 %60
  store i64 %64, i64* %7, align 8
  tail call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %6) #15
  %65 = load i64, i64* %2, align 8
  %66 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 10
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, %65
  store i64 %68, i64* %66, align 8
  %69 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69)
  %70 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = udiv i64 %71, 3
  %73 = icmp ugt i64 %68, %72
  br i1 %73, label %74, label %103

74:                                               ; preds = %49
  %75 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 9, i32 0
  %76 = bitcast %"class.base::SequencedTaskRunner"** %75 to %"class.base::TaskRunner"**
  %77 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %76, align 8
  %78 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %78) #15
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i64 0, i64 0), i32 425) #15
  %79 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 12
  %80 = call i8* @_Znwm(i64 64) #14, !noalias !9
  %81 = bitcast i8* %80 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %81, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS5_20ByteStreamWriterImplEmEJS7_S9_mEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS4_20ByteStreamWriterImplEmEJS6_S8_mEE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !9
  %82 = getelementptr inbounds i8, i8* %80, i64 32
  %83 = bitcast i8* %82 to i64*
  store i64 ptrtoint (void (%"struct.content::(anonymous namespace)::LifetimeFlag"*, %"class.content::(anonymous namespace)::ByteStreamWriterImpl"*, i64)* @_ZN7content12_GLOBAL__N_120ByteStreamWriterImpl12UpdateWindowE13scoped_refptrINS0_12LifetimeFlagEEPS1_m to i64), i64* %83, align 8, !noalias !9
  %84 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 11, i32 0
  %85 = load %"struct.content::(anonymous namespace)::LifetimeFlag"*, %"struct.content::(anonymous namespace)::LifetimeFlag"** %84, align 8, !noalias !9
  %86 = getelementptr inbounds i8, i8* %80, i64 40
  %87 = bitcast i8* %86 to %"struct.content::(anonymous namespace)::LifetimeFlag"**
  store %"struct.content::(anonymous namespace)::LifetimeFlag"* %85, %"struct.content::(anonymous namespace)::LifetimeFlag"** %87, align 8, !noalias !9
  %88 = icmp eq %"struct.content::(anonymous namespace)::LifetimeFlag"* %85, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %74
  %90 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %85, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 1 monotonic, !noalias !9
  br label %92

92:                                               ; preds = %89, %74
  %93 = getelementptr inbounds i8, i8* %80, i64 48
  %94 = bitcast %"class.content::(anonymous namespace)::ByteStreamWriterImpl"** %79 to i64*
  %95 = load i64, i64* %94, align 8, !noalias !9
  %96 = bitcast i8* %93 to i64*
  store i64 %95, i64* %96, align 8, !noalias !9
  %97 = getelementptr inbounds i8, i8* %80, i64 56
  %98 = bitcast i8* %97 to i64*
  %99 = load i64, i64* %66, align 8, !noalias !9
  store i64 %99, i64* %98, align 8, !noalias !9
  %100 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %80, i8** %100, align 8, !alias.scope !9
  %101 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %77, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #15
  %102 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %102) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %78) #15
  store i64 0, i64* %66, align 8
  br label %103

103:                                              ; preds = %49, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69)
  br label %109

104:                                              ; preds = %19
  %105 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 5
  %106 = load i8, i8* %105, align 8, !range !8
  %107 = icmp eq i8 %106, 0
  %108 = select i1 %107, i32 0, i32 2
  br label %109

109:                                              ; preds = %104, %103
  %110 = phi i32 [ 1, %103 ], [ %108, %104 ]
  ret i32 %110
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZNK7content12_GLOBAL__N_120ByteStreamReaderImpl9GetStatusEv(%"class.content::(anonymous namespace)::ByteStreamReaderImpl"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_120ByteStreamReaderImpl16RegisterCallbackEN4base17RepeatingCallbackIFvvEEE(%"class.content::(anonymous namespace)::ByteStreamReaderImpl"*, %"class.base::RepeatingCallback"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamReaderImpl", %"class.content::(anonymous namespace)::ByteStreamReaderImpl"* %0, i64 0, i32 7, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #15
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 16) #15
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #15
  br i1 %31, label %32, label %33, !prof !7

32:                                               ; preds = %27
  tail call void @llvm.trap() #15
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #15
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__14pairI13scoped_refptrIN3net8IOBufferEEmEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #15
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #15
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #15
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_120ByteStreamWriterImpl12UpdateWindowE13scoped_refptrINS0_12LifetimeFlagEEPS1_m(%"struct.content::(anonymous namespace)::LifetimeFlag"*, %"class.content::(anonymous namespace)::ByteStreamWriterImpl"*, i64) #3 align 2 {
  %4 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %34, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %1 to i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)***
  %9 = load i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)**, i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)*, i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)** %9, i64 6
  %11 = load i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)*, i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)** %10, align 8
  %12 = tail call i64 %11(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %1) #15
  %13 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %1, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %1, i64 0, i32 8
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %2
  store i64 %17, i64* %15, align 8
  %18 = load i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)**, i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)*** %8, align 8
  %19 = getelementptr inbounds i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)*, i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)** %18, i64 6
  %20 = load i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)*, i64 (%"class.content::(anonymous namespace)::ByteStreamWriterImpl"*)** %19, align 8
  %21 = tail call i64 %20(%"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %1) #15
  %22 = load i64, i64* %13, align 8
  %23 = icmp ule i64 %21, %22
  %24 = icmp ugt i64 %12, %14
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %34

26:                                               ; preds = %7
  %27 = getelementptr inbounds %"class.content::(anonymous namespace)::ByteStreamWriterImpl", %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %27, align 8
  %29 = icmp eq %"class.base::internal::BindStateBase"* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %28, i64 0, i32 1
  %32 = bitcast void ()** %31 to void (%"class.base::internal::BindStateBase"*)**
  %33 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %32, align 8
  tail call void %33(%"class.base::internal::BindStateBase"* nonnull %28) #15
  br label %34

34:                                               ; preds = %30, %26, %7, %3
  %35 = icmp eq %"struct.content::(anonymous namespace)::LifetimeFlag"* %0, null
  br i1 %35, label %48, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %0, i64 0, i32 1
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw sub i32* %38, i32 1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %37, i64 -2
  %43 = bitcast %"class.base::RefCountedThreadSafe.9"* %42 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %44 = bitcast %"class.base::RefCountedThreadSafe.9"* %42 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %45 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %45, i64 1
  %47 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %46, align 8
  tail call void %47(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %43) #15
  br label %48

48:                                               ; preds = %34, %36, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS5_20ByteStreamWriterImplEmEJS7_S9_mEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture) #3 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*, %"class.content::(anonymous namespace)::ByteStreamWriterImpl"*, i64)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %6 = bitcast void ()** %5 to %"class.content::(anonymous namespace)::ByteStreamWriterImpl"**
  %7 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %8 = bitcast void ()** %7 to i64*
  %9 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*, %"class.content::(anonymous namespace)::ByteStreamWriterImpl"*, i64)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*, %"class.content::(anonymous namespace)::ByteStreamWriterImpl"*, i64)** %3, align 8
  %10 = bitcast void ()** %4 to %"struct.content::(anonymous namespace)::LifetimeFlag"**
  %11 = load %"struct.content::(anonymous namespace)::LifetimeFlag"*, %"struct.content::(anonymous namespace)::LifetimeFlag"** %10, align 8
  store %"struct.content::(anonymous namespace)::LifetimeFlag"* null, %"struct.content::(anonymous namespace)::LifetimeFlag"** %10, align 8
  %12 = load %"class.content::(anonymous namespace)::ByteStreamWriterImpl"*, %"class.content::(anonymous namespace)::ByteStreamWriterImpl"** %6, align 8
  %13 = load i64, i64* %8, align 8
  tail call void %9(%"struct.content::(anonymous namespace)::LifetimeFlag"* %11, %"class.content::(anonymous namespace)::ByteStreamWriterImpl"* %12, i64 %13) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS4_20ByteStreamWriterImplEmEJS6_S8_mEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #3 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"struct.content::(anonymous namespace)::LifetimeFlag"**
  %6 = load %"struct.content::(anonymous namespace)::LifetimeFlag"*, %"struct.content::(anonymous namespace)::LifetimeFlag"** %5, align 8
  %7 = icmp eq %"struct.content::(anonymous namespace)::LifetimeFlag"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.content::(anonymous namespace)::LifetimeFlag", %"struct.content::(anonymous namespace)::LifetimeFlag"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe.9"* %14 to %"struct.content::(anonymous namespace)::LifetimeFlag"*
  %16 = bitcast %"class.base::RefCountedThreadSafe.9"* %14 to void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)***
  %17 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)**, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %17, i64 1
  %19 = load void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)*, void (%"struct.content::(anonymous namespace)::LifetimeFlag"*)** %18, align 8
  tail call void %19(%"struct.content::(anonymous namespace)::LifetimeFlag"* nonnull %15) #15
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #9

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS5_20ByteStreamReaderImplENSt3__110unique_ptrINS_14circular_dequeINSA_4pairIS3_IN3net8IOBufferEEmEEEENSA_14default_deleteISI_EEEEmbiEJRS7_RS9_SL_RmRbRiEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS5_20ByteStreamReaderImplENSt3__110unique_ptrINS_14circular_dequeINSA_4pairIS3_IN3net8IOBufferEEmEEEENSA_14default_deleteISI_EEEEmbiEJRS7_RS9_SL_RmRbRiEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS3_20ByteStreamReaderImplENSt3__110unique_ptrINS_14circular_dequeINS8_4pairIS1_IN3net8IOBufferEEmEEEENS8_14default_deleteISG_EEEEmbiEJRS5_RS7_SJ_RmRbRiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSU_DpOSV_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS3_20ByteStreamReaderImplENSt3__110unique_ptrINS_14circular_dequeINS8_4pairIS1_IN3net8IOBufferEEmEEEENS8_14default_deleteISG_EEEEmbiEJRS5_RS7_SJ_RmRbRiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSU_DpOSV_"}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{i8 0, i8 2}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS5_20ByteStreamWriterImplEmEJRS7_RS9_RmEEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS5_20ByteStreamWriterImplEmEJRS7_RS9_RmEEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS3_20ByteStreamWriterImplEmEJRS5_RS7_RmEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIPFv13scoped_refptrIN7content12_GLOBAL__N_112LifetimeFlagEEPNS3_20ByteStreamWriterImplEmEJRS5_RS7_RmEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
