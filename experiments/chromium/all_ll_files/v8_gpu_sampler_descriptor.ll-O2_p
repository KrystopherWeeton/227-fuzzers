; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_gpu_sampler_descriptor.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_gpu_sampler_descriptor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.78", i32, [4 x i8], %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.214", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.230", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.248", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.255", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.194", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__cxx_atomic_impl.117" }
%"struct.std::__1::__cxx_atomic_impl.117" = type { %"struct.std::__1::__cxx_atomic_base_impl.118" }
%"struct.std::__1::__cxx_atomic_base_impl.118" = type { i64 }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::Worklist.125"* }
%"class.blink::Worklist.125" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::Worklist.132"* }
%"class.blink::Worklist.132" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::Worklist.139"* }
%"class.blink::Worklist.139" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::Worklist.146"* }
%"class.blink::Worklist.146" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::Worklist.153"* }
%"class.blink::Worklist.153" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::Worklist.160"* }
%"class.blink::Worklist.160" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::Worklist.167"* }
%"class.blink::Worklist.167" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.174", %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.188", [4 x i8] }>
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176", %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { i64 }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { float }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.197", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.206" }
%"class.WTF::Vector.206" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.222" }
%"class.WTF::VectorBuffer.222" = type { %"class.WTF::VectorBufferBase.223" }
%"class.WTF::VectorBufferBase.223" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.236" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.125"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.132"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.139"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.146"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.153"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.286" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.254 }
%class.scoped_refptr.254 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.255" = type { %"struct.std::__1::__atomic_base.256" }
%"struct.std::__1::__atomic_base.256" = type { %"struct.std::__1::__cxx_atomic_impl.257" }
%"struct.std::__1::__cxx_atomic_impl.257" = type { %"struct.std::__1::__cxx_atomic_base_impl.258" }
%"struct.std::__1::__cxx_atomic_base_impl.258" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::GPUSamplerDescriptor" = type { %"class.blink::GPUObjectDescriptorBase", i8, i8, i8, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", float, float, %"class.WTF::String", i16, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::GPUObjectDescriptorBase" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.25", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.72", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.259", %"class.std::__1::unique_ptr.264", %"class.blink::Persistent.270", %"class.blink::Persistent.274", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.9", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", i32, i32 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.25" = type { %"class.WTF::HashTable.26" }
%"class.WTF::HashTable.26" = type <{ %"struct.WTF::KeyValuePair.29"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.29" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.38", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.33", i8* }
%"class.WTF::HashMap.33" = type { %"class.WTF::HashTable.34" }
%"class.WTF::HashTable.34" = type <{ %"struct.WTF::KeyValuePair.37"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.37" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.38" = type { %"class.v8::PersistentValueMapBase.39" }
%"class.v8::PersistentValueMapBase.39" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.40", i8* }
%"class.WTF::HashMap.40" = type { %"class.WTF::HashTable.41" }
%"class.WTF::HashTable.41" = type <{ %"struct.WTF::KeyValuePair.44"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.44" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.45" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.56", %"class.WTF::Vector.62", i8, i32 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.62" = type { %"class.WTF::VectorBuffer.63" }
%"class.WTF::VectorBuffer.63" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.293, %"class.blink::Member.312", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.293 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.294", i32, i32, %"class.blink::Persistent.296" }
%"class.WTF::RefCounted.294" = type { %"class.base::RefCounted.295" }
%"class.base::RefCounted.295" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.296" = type { %"class.blink::PersistentBase.297" }
%"class.blink::PersistentBase.297" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.302" }
%"class.WTF::HashMap.302" = type { %"class.WTF::HashTable.303" }
%"class.WTF::HashTable.303" = type <{ %"struct.WTF::KeyValuePair.305"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.305" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.309" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.309" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.309" = type { %"class.v8::TracedReference.310" }
%"class.v8::TracedReference.310" = type { %"class.v8::BasicTracedReference.311" }
%"class.v8::BasicTracedReference.311" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.259" = type { %"class.WTF::VectorBuffer.260" }
%"class.WTF::VectorBuffer.260" = type { %"class.WTF::VectorBufferBase.261" }
%"class.WTF::VectorBufferBase.261" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.274" = type { %"class.blink::PersistentBase.275" }
%"class.blink::PersistentBase.275" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.280" }
%"class.WTF::Vector.280" = type { %"class.WTF::VectorBuffer.281" }
%"class.WTF::VectorBuffer.281" = type { %"class.WTF::VectorBufferBase.282" }
%"class.WTF::VectorBufferBase.282" = type { %"struct.std::__1::pair.283"*, i32, i32 }
%"struct.std::__1::pair.283" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.314" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Number" = type { i8 }
%"class.v8::Integer" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Int32" = type { i8 }

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateEE12kValidValues = internal constant [3 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [14 x i8] c"clamp-to-edge\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"repeat\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"mirror-repeat\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"GPUAddressMode\00", align 1
@_ZZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateEE12kValidValues_0 = internal constant [3 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0)], align 16
@_ZZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateEE12kValidValues_1 = internal constant [3 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0)], align 16
@_ZZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateEE12kValidValues_2 = internal constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0)], align 16
@.str.5 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"less\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"equal\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"less-equal\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"greater\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"not-equal\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"greater-equal\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"GPUCompareFunction\00", align 1
@_ZZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateEE12kValidValues_3 = internal constant [2 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0)], align 16
@.str.14 = private unnamed_addr constant [8 x i8] c"nearest\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"linear\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"GPUFilterMode\00", align 1
@_ZZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateEE12kValidValues_4 = internal constant [2 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0)], align 16
@_ZZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateEE12kValidValues_5 = internal constant [2 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0)], align 16
@_ZZN5blinkL33eternalV8GPUSamplerDescriptorKeysEPN2v87IsolateEE5kKeys = internal constant [10 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i32 0, i32 0)], align 16
@.str.17 = private unnamed_addr constant [13 x i8] c"addressModeU\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"addressModeV\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"addressModeW\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"compare\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"lodMaxClamp\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"lodMinClamp\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"magFilter\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"maxAnisotropy\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"minFilter\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"mipmapFilter\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 10, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZZN5blinkL33eternalV8GPUSamplerDescriptorKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.28 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.29 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::GPUSamplerDescriptor"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.blink::V8StringResource", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::V8StringResource", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::V8StringResource", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.blink::V8StringResource", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.blink::V8StringResource", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.blink::V8StringResource", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.blink::V8StringResource", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.WTF::String", align 8
  %27 = icmp eq %"class.v8::Value"* %1, null
  br i1 %27, label %1869, label %28

28:                                               ; preds = %4
  %29 = bitcast %"class.v8::Value"* %1 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 3
  %32 = icmp eq i64 %31, 1
  br i1 %32, label %33, label %49

33:                                               ; preds = %28
  %34 = add i64 %30, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = and i64 %30, -4294967296
  %38 = zext i32 %36 to i64
  %39 = or i64 %37, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load i16, i16* %41, align 2
  %43 = icmp eq i16 %42, 67
  br i1 %43, label %44, label %49

44:                                               ; preds = %33
  %45 = add i64 %30, 23
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = ashr i32 %47, 1
  switch i32 %48, label %49 [
    i32 5, label %1869
    i32 3, label %1869
  ]

49:                                               ; preds = %44, %33, %28
  %50 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %50, label %52, label %51

51:                                               ; preds = %49
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #7
  br label %1869

52:                                               ; preds = %49
  %53 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %54 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 0
  tail call void @_ZN5blink25V8GPUObjectDescriptorBase6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_23GPUObjectDescriptorBaseERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1, %"class.blink::GPUObjectDescriptorBase"* %54, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %55 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %1869

58:                                               ; preds = %52
  %59 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %60 = add i64 %59, 8
  %61 = inttoptr i64 %60 to %"class.blink::V8PerIsolateData"**
  %62 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %61, align 8
  %63 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %62, i8* bitcast ([10 x i8*]* @_ZZN5blinkL33eternalV8GPUSamplerDescriptorKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.314"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.314"*)) #7
  %64 = extractvalue { i64, %"class.v8::Eternal"* } %63, 1
  %65 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %65) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #7
  %66 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %67 = bitcast %"class.v8::Eternal"* %64 to %"class.v8::Value"**
  %68 = load %"class.v8::Value"*, %"class.v8::Value"** %67, align 8
  %69 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %53, %"class.v8::Context"* %66, %"class.v8::Value"* %68) #7
  %70 = icmp eq %"class.v8::Value"* %69, null
  br i1 %70, label %71, label %77

71:                                               ; preds = %58
  %72 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %73 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %74 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %74, i64 5
  %76 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %75, align 8
  call void %76(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %72) #7
  br label %1868

77:                                               ; preds = %58
  %78 = bitcast %"class.v8::Value"* %69 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = and i64 %79, 3
  %81 = icmp eq i64 %80, 1
  br i1 %81, label %82, label %99

82:                                               ; preds = %77
  %83 = add i64 %79, -1
  %84 = inttoptr i64 %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = and i64 %79, -4294967296
  %87 = zext i32 %85 to i64
  %88 = or i64 %86, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load i16, i16* %90, align 2
  %92 = icmp eq i16 %91, 67
  br i1 %92, label %93, label %99

93:                                               ; preds = %82
  %94 = add i64 %79, 23
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, -2
  %98 = icmp eq i32 %97, 10
  br i1 %98, label %305, label %99

99:                                               ; preds = %82, %77, %93
  %100 = bitcast %"class.blink::V8StringResource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %100) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 -86, i64 152, i1 false)
  %101 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %69, %"class.v8::Value"** %101, align 8
  %102 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 1
  store i32 0, i32* %102, align 8
  %103 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %103, align 8
  %104 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1
  %105 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  store i64 0, i64* %105, align 8
  %106 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %6, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %106, label %107, label %283

107:                                              ; preds = %99
  %108 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #7
  %109 = load %"class.v8::Value"*, %"class.v8::Value"** %101, align 8
  %110 = icmp eq %"class.v8::Value"* %109, null
  br i1 %110, label %115, label %111, !prof !2

111:                                              ; preds = %107
  %112 = bitcast %"class.v8::Value"* %109 to %"class.v8::String"*
  %113 = load i32, i32* %102, align 8
  %114 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %112, i32 %113) #7
  br label %135

115:                                              ; preds = %107
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %135, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %135

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = zext i32 %125 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #7
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !2

132:                                              ; preds = %123
  call void @llvm.trap() #7
  unreachable

133:                                              ; preds = %123
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %124, align 4
  br label %135

135:                                              ; preds = %111, %115, %118, %133
  %136 = phi %"class.WTF::StringImpl"* [ %114, %111 ], [ null, %115 ], [ %116, %118 ], [ %116, %133 ]
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %136, %"class.WTF::StringImpl"** %137, align 8
  %138 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i64 14) #7
  %139 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %7, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %140 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #7
  br label %156

156:                                              ; preds = %135, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #7
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #7
  br label %172

172:                                              ; preds = %156, %168, %171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #7
  br i1 %139, label %173, label %283

173:                                              ; preds = %172
  %174 = load %"class.v8::Value"*, %"class.v8::Value"** %101, align 8
  %175 = icmp eq %"class.v8::Value"* %174, null
  br i1 %175, label %176, label %200, !prof !2

176:                                              ; preds = %173
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %179, label %181

179:                                              ; preds = %176
  %180 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 4
  br label %225

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %198

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = zext i32 %188 to i33
  %190 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %189, i33 1) #7
  %191 = extractvalue { i33, i1 } %190, 1
  %192 = extractvalue { i33, i1 } %190, 0
  %193 = icmp slt i33 %192, 0
  %194 = or i1 %191, %193
  br i1 %194, label %195, label %196, !prof !2

195:                                              ; preds = %186
  call void @llvm.trap() #7
  unreachable

196:                                              ; preds = %186
  %197 = trunc i33 %192 to i32
  store i32 %197, i32* %187, align 4
  br label %198

198:                                              ; preds = %181, %196
  %199 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 4
  br label %206

200:                                              ; preds = %173
  %201 = bitcast %"class.v8::Value"* %174 to %"class.v8::String"*
  %202 = load i32, i32* %102, align 8
  %203 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %201, i32 %202) #7
  %204 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 4
  %205 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %205, label %225, label %206

206:                                              ; preds = %198, %200
  %207 = phi %"class.WTF::String"* [ %199, %198 ], [ %204, %200 ]
  %208 = phi %"class.WTF::StringImpl"* [ %177, %198 ], [ %203, %200 ]
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = and i32 %210, 2
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %225

213:                                              ; preds = %206
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = zext i32 %215 to i33
  %217 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %216, i33 1) #7
  %218 = extractvalue { i33, i1 } %217, 1
  %219 = extractvalue { i33, i1 } %217, 0
  %220 = icmp slt i33 %219, 0
  %221 = or i1 %218, %220
  br i1 %221, label %222, label %223, !prof !2

222:                                              ; preds = %213
  call void @llvm.trap() #7
  unreachable

223:                                              ; preds = %213
  %224 = trunc i33 %219 to i32
  store i32 %224, i32* %214, align 4
  br label %225

225:                                              ; preds = %179, %223, %206, %200
  %226 = phi i1 [ false, %223 ], [ false, %206 ], [ true, %200 ], [ true, %179 ]
  %227 = phi %"class.WTF::String"* [ %207, %223 ], [ %207, %206 ], [ %204, %200 ], [ %180, %179 ]
  %228 = phi %"class.WTF::StringImpl"* [ %208, %223 ], [ %208, %206 ], [ null, %200 ], [ null, %179 ]
  %229 = ptrtoint %"class.WTF::StringImpl"* %228 to i64
  %230 = bitcast %"class.WTF::String"* %227 to i64*
  %231 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %227, i64 0, i32 0, i32 0
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  store i64 %229, i64* %230, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %247, label %234

234:                                              ; preds = %225
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  br i1 %238, label %241, label %243

241:                                              ; preds = %234
  %242 = add i32 %240, -1
  store i32 %242, i32* %239, align 4
  br label %243

243:                                              ; preds = %241, %234
  %244 = phi i32 [ %242, %241 ], [ %240, %234 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %232) #7
  br label %247

247:                                              ; preds = %225, %243, %246
  br i1 %226, label %261, label %248

248:                                              ; preds = %247
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %228) #7
  br label %261

261:                                              ; preds = %247, %257, %260
  %262 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %263 = load i8*, i8** %262, align 8
  store i8* null, i8** %262, align 8
  %264 = icmp eq i8* %263, null
  br i1 %264, label %266, label %265

265:                                              ; preds = %261
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %263) #7
  br label %266

266:                                              ; preds = %265, %261
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %268 = icmp eq %"class.WTF::StringImpl"* %267, null
  br i1 %268, label %282, label %269

269:                                              ; preds = %266
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = load atomic i32, i32* %270 monotonic, align 4
  %272 = and i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  br i1 %273, label %276, label %278

276:                                              ; preds = %269
  %277 = add i32 %275, -1
  store i32 %277, i32* %274, align 4
  br label %278

278:                                              ; preds = %276, %269
  %279 = phi i32 [ %277, %276 ], [ %275, %269 ]
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %278
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %267) #7
  br label %282

282:                                              ; preds = %266, %278, %281
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %100) #7
  br label %305

283:                                              ; preds = %172, %99
  %284 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %285 = load i8*, i8** %284, align 8
  store i8* null, i8** %284, align 8
  %286 = icmp eq i8* %285, null
  br i1 %286, label %288, label %287

287:                                              ; preds = %283
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %285) #7
  br label %288

288:                                              ; preds = %287, %283
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %304, label %291

291:                                              ; preds = %288
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %298, label %300

298:                                              ; preds = %291
  %299 = add i32 %297, -1
  store i32 %299, i32* %296, align 4
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %299, %298 ], [ %297, %291 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %289) #7
  br label %304

304:                                              ; preds = %288, %300, %303
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %100) #7
  br label %1868

305:                                              ; preds = %282, %93
  %306 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %64, i64 1, i32 0
  %307 = bitcast %"class.v8::Name"** %306 to %"class.v8::Value"**
  %308 = load %"class.v8::Value"*, %"class.v8::Value"** %307, align 8
  %309 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %53, %"class.v8::Context"* %66, %"class.v8::Value"* %308) #7
  %310 = icmp eq %"class.v8::Value"* %309, null
  br i1 %310, label %311, label %317

311:                                              ; preds = %305
  %312 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %313 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %314 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %313, align 8
  %315 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %314, i64 5
  %316 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %315, align 8
  call void %316(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %312) #7
  br label %1868

317:                                              ; preds = %305
  %318 = bitcast %"class.v8::Value"* %309 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = and i64 %319, 3
  %321 = icmp eq i64 %320, 1
  br i1 %321, label %322, label %339

322:                                              ; preds = %317
  %323 = add i64 %319, -1
  %324 = inttoptr i64 %323 to i32*
  %325 = load i32, i32* %324, align 4
  %326 = and i64 %319, -4294967296
  %327 = zext i32 %325 to i64
  %328 = or i64 %326, %327
  %329 = add i64 %328, 7
  %330 = inttoptr i64 %329 to i16*
  %331 = load i16, i16* %330, align 2
  %332 = icmp eq i16 %331, 67
  br i1 %332, label %333, label %339

333:                                              ; preds = %322
  %334 = add i64 %319, 23
  %335 = inttoptr i64 %334 to i32*
  %336 = load i32, i32* %335, align 4
  %337 = and i32 %336, -2
  %338 = icmp eq i32 %337, 10
  br i1 %338, label %545, label %339

339:                                              ; preds = %322, %317, %333
  %340 = bitcast %"class.blink::V8StringResource"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %340) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %340, i8 -86, i64 152, i1 false)
  %341 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %309, %"class.v8::Value"** %341, align 8
  %342 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 1
  store i32 0, i32* %342, align 8
  %343 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %343, align 8
  %344 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1
  %345 = bitcast %"class.std::__1::unique_ptr"* %344 to i64*
  store i64 0, i64* %345, align 8
  %346 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %9, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %346, label %347, label %523

347:                                              ; preds = %339
  %348 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %348) #7
  %349 = load %"class.v8::Value"*, %"class.v8::Value"** %341, align 8
  %350 = icmp eq %"class.v8::Value"* %349, null
  br i1 %350, label %355, label %351, !prof !2

351:                                              ; preds = %347
  %352 = bitcast %"class.v8::Value"* %349 to %"class.v8::String"*
  %353 = load i32, i32* %342, align 8
  %354 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %352, i32 %353) #7
  br label %375

355:                                              ; preds = %347
  %356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %343, align 8
  %357 = icmp eq %"class.WTF::StringImpl"* %356, null
  br i1 %357, label %375, label %358

358:                                              ; preds = %355
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %360 = load atomic i32, i32* %359 monotonic, align 4
  %361 = and i32 %360, 2
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %375

363:                                              ; preds = %358
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 0
  %365 = load i32, i32* %364, align 4
  %366 = zext i32 %365 to i33
  %367 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %366, i33 1) #7
  %368 = extractvalue { i33, i1 } %367, 1
  %369 = extractvalue { i33, i1 } %367, 0
  %370 = icmp slt i33 %369, 0
  %371 = or i1 %368, %370
  br i1 %371, label %372, label %373, !prof !2

372:                                              ; preds = %363
  call void @llvm.trap() #7
  unreachable

373:                                              ; preds = %363
  %374 = trunc i33 %369 to i32
  store i32 %374, i32* %364, align 4
  br label %375

375:                                              ; preds = %351, %355, %358, %373
  %376 = phi %"class.WTF::StringImpl"* [ %354, %351 ], [ null, %355 ], [ %356, %358 ], [ %356, %373 ]
  %377 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %376, %"class.WTF::StringImpl"** %377, align 8
  %378 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %378) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i64 14) #7
  %379 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %10, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateEE12kValidValues_0, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %380 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %381 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %380, align 8
  %382 = icmp eq %"class.WTF::StringImpl"* %381, null
  br i1 %382, label %396, label %383

383:                                              ; preds = %375
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load atomic i32, i32* %384 monotonic, align 4
  %386 = and i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 0
  %389 = load i32, i32* %388, align 4
  br i1 %387, label %390, label %392

390:                                              ; preds = %383
  %391 = add i32 %389, -1
  store i32 %391, i32* %388, align 4
  br label %392

392:                                              ; preds = %390, %383
  %393 = phi i32 [ %391, %390 ], [ %389, %383 ]
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %396

395:                                              ; preds = %392
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %381) #7
  br label %396

396:                                              ; preds = %375, %392, %395
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %378) #7
  %397 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  %398 = icmp eq %"class.WTF::StringImpl"* %397, null
  br i1 %398, label %412, label %399

399:                                              ; preds = %396
  %400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %397, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %401 = load atomic i32, i32* %400 monotonic, align 4
  %402 = and i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %397, i64 0, i32 0
  %405 = load i32, i32* %404, align 4
  br i1 %403, label %406, label %408

406:                                              ; preds = %399
  %407 = add i32 %405, -1
  store i32 %407, i32* %404, align 4
  br label %408

408:                                              ; preds = %406, %399
  %409 = phi i32 [ %407, %406 ], [ %405, %399 ]
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %411, label %412

411:                                              ; preds = %408
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %397) #7
  br label %412

412:                                              ; preds = %396, %408, %411
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %348) #7
  br i1 %379, label %413, label %523

413:                                              ; preds = %412
  %414 = load %"class.v8::Value"*, %"class.v8::Value"** %341, align 8
  %415 = icmp eq %"class.v8::Value"* %414, null
  br i1 %415, label %416, label %440, !prof !2

416:                                              ; preds = %413
  %417 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %343, align 8
  %418 = icmp eq %"class.WTF::StringImpl"* %417, null
  br i1 %418, label %419, label %421

419:                                              ; preds = %416
  %420 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 5
  br label %465

421:                                              ; preds = %416
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %417, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = load atomic i32, i32* %422 monotonic, align 4
  %424 = and i32 %423, 2
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %438

426:                                              ; preds = %421
  %427 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %417, i64 0, i32 0
  %428 = load i32, i32* %427, align 4
  %429 = zext i32 %428 to i33
  %430 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %429, i33 1) #7
  %431 = extractvalue { i33, i1 } %430, 1
  %432 = extractvalue { i33, i1 } %430, 0
  %433 = icmp slt i33 %432, 0
  %434 = or i1 %431, %433
  br i1 %434, label %435, label %436, !prof !2

435:                                              ; preds = %426
  call void @llvm.trap() #7
  unreachable

436:                                              ; preds = %426
  %437 = trunc i33 %432 to i32
  store i32 %437, i32* %427, align 4
  br label %438

438:                                              ; preds = %421, %436
  %439 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 5
  br label %446

440:                                              ; preds = %413
  %441 = bitcast %"class.v8::Value"* %414 to %"class.v8::String"*
  %442 = load i32, i32* %342, align 8
  %443 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %441, i32 %442) #7
  %444 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 5
  %445 = icmp eq %"class.WTF::StringImpl"* %443, null
  br i1 %445, label %465, label %446

446:                                              ; preds = %438, %440
  %447 = phi %"class.WTF::String"* [ %439, %438 ], [ %444, %440 ]
  %448 = phi %"class.WTF::StringImpl"* [ %417, %438 ], [ %443, %440 ]
  %449 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %448, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %450 = load atomic i32, i32* %449 monotonic, align 4
  %451 = and i32 %450, 2
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %453, label %465

453:                                              ; preds = %446
  %454 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %448, i64 0, i32 0
  %455 = load i32, i32* %454, align 4
  %456 = zext i32 %455 to i33
  %457 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %456, i33 1) #7
  %458 = extractvalue { i33, i1 } %457, 1
  %459 = extractvalue { i33, i1 } %457, 0
  %460 = icmp slt i33 %459, 0
  %461 = or i1 %458, %460
  br i1 %461, label %462, label %463, !prof !2

462:                                              ; preds = %453
  call void @llvm.trap() #7
  unreachable

463:                                              ; preds = %453
  %464 = trunc i33 %459 to i32
  store i32 %464, i32* %454, align 4
  br label %465

465:                                              ; preds = %419, %463, %446, %440
  %466 = phi i1 [ false, %463 ], [ false, %446 ], [ true, %440 ], [ true, %419 ]
  %467 = phi %"class.WTF::String"* [ %447, %463 ], [ %447, %446 ], [ %444, %440 ], [ %420, %419 ]
  %468 = phi %"class.WTF::StringImpl"* [ %448, %463 ], [ %448, %446 ], [ null, %440 ], [ null, %419 ]
  %469 = ptrtoint %"class.WTF::StringImpl"* %468 to i64
  %470 = bitcast %"class.WTF::String"* %467 to i64*
  %471 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %467, i64 0, i32 0, i32 0
  %472 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %471, align 8
  store i64 %469, i64* %470, align 8
  %473 = icmp eq %"class.WTF::StringImpl"* %472, null
  br i1 %473, label %487, label %474

474:                                              ; preds = %465
  %475 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %472, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %476 = load atomic i32, i32* %475 monotonic, align 4
  %477 = and i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %472, i64 0, i32 0
  %480 = load i32, i32* %479, align 4
  br i1 %478, label %481, label %483

481:                                              ; preds = %474
  %482 = add i32 %480, -1
  store i32 %482, i32* %479, align 4
  br label %483

483:                                              ; preds = %481, %474
  %484 = phi i32 [ %482, %481 ], [ %480, %474 ]
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %486, label %487

486:                                              ; preds = %483
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %472) #7
  br label %487

487:                                              ; preds = %465, %483, %486
  br i1 %466, label %501, label %488

488:                                              ; preds = %487
  %489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %468, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %490 = load atomic i32, i32* %489 monotonic, align 4
  %491 = and i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %468, i64 0, i32 0
  %494 = load i32, i32* %493, align 4
  br i1 %492, label %495, label %497

495:                                              ; preds = %488
  %496 = add i32 %494, -1
  store i32 %496, i32* %493, align 4
  br label %497

497:                                              ; preds = %495, %488
  %498 = phi i32 [ %496, %495 ], [ %494, %488 ]
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %501

500:                                              ; preds = %497
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %468) #7
  br label %501

501:                                              ; preds = %487, %497, %500
  %502 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %503 = load i8*, i8** %502, align 8
  store i8* null, i8** %502, align 8
  %504 = icmp eq i8* %503, null
  br i1 %504, label %506, label %505

505:                                              ; preds = %501
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %503) #7
  br label %506

506:                                              ; preds = %505, %501
  %507 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %343, align 8
  %508 = icmp eq %"class.WTF::StringImpl"* %507, null
  br i1 %508, label %522, label %509

509:                                              ; preds = %506
  %510 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %507, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %511 = load atomic i32, i32* %510 monotonic, align 4
  %512 = and i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %507, i64 0, i32 0
  %515 = load i32, i32* %514, align 4
  br i1 %513, label %516, label %518

516:                                              ; preds = %509
  %517 = add i32 %515, -1
  store i32 %517, i32* %514, align 4
  br label %518

518:                                              ; preds = %516, %509
  %519 = phi i32 [ %517, %516 ], [ %515, %509 ]
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %521, label %522

521:                                              ; preds = %518
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %507) #7
  br label %522

522:                                              ; preds = %506, %518, %521
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %340) #7
  br label %545

523:                                              ; preds = %412, %339
  %524 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %525 = load i8*, i8** %524, align 8
  store i8* null, i8** %524, align 8
  %526 = icmp eq i8* %525, null
  br i1 %526, label %528, label %527

527:                                              ; preds = %523
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %525) #7
  br label %528

528:                                              ; preds = %527, %523
  %529 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %343, align 8
  %530 = icmp eq %"class.WTF::StringImpl"* %529, null
  br i1 %530, label %544, label %531

531:                                              ; preds = %528
  %532 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %529, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %533 = load atomic i32, i32* %532 monotonic, align 4
  %534 = and i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %529, i64 0, i32 0
  %537 = load i32, i32* %536, align 4
  br i1 %535, label %538, label %540

538:                                              ; preds = %531
  %539 = add i32 %537, -1
  store i32 %539, i32* %536, align 4
  br label %540

540:                                              ; preds = %538, %531
  %541 = phi i32 [ %539, %538 ], [ %537, %531 ]
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %543, label %544

543:                                              ; preds = %540
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %529) #7
  br label %544

544:                                              ; preds = %528, %540, %543
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %340) #7
  br label %1868

545:                                              ; preds = %522, %333
  %546 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %64, i64 2, i32 0
  %547 = bitcast %"class.v8::Name"** %546 to %"class.v8::Value"**
  %548 = load %"class.v8::Value"*, %"class.v8::Value"** %547, align 8
  %549 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %53, %"class.v8::Context"* %66, %"class.v8::Value"* %548) #7
  %550 = icmp eq %"class.v8::Value"* %549, null
  br i1 %550, label %551, label %557

551:                                              ; preds = %545
  %552 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %553 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %554 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %553, align 8
  %555 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %554, i64 5
  %556 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %555, align 8
  call void %556(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %552) #7
  br label %1868

557:                                              ; preds = %545
  %558 = bitcast %"class.v8::Value"* %549 to i64*
  %559 = load i64, i64* %558, align 8
  %560 = and i64 %559, 3
  %561 = icmp eq i64 %560, 1
  br i1 %561, label %562, label %579

562:                                              ; preds = %557
  %563 = add i64 %559, -1
  %564 = inttoptr i64 %563 to i32*
  %565 = load i32, i32* %564, align 4
  %566 = and i64 %559, -4294967296
  %567 = zext i32 %565 to i64
  %568 = or i64 %566, %567
  %569 = add i64 %568, 7
  %570 = inttoptr i64 %569 to i16*
  %571 = load i16, i16* %570, align 2
  %572 = icmp eq i16 %571, 67
  br i1 %572, label %573, label %579

573:                                              ; preds = %562
  %574 = add i64 %559, 23
  %575 = inttoptr i64 %574 to i32*
  %576 = load i32, i32* %575, align 4
  %577 = and i32 %576, -2
  %578 = icmp eq i32 %577, 10
  br i1 %578, label %785, label %579

579:                                              ; preds = %562, %557, %573
  %580 = bitcast %"class.blink::V8StringResource"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %580) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %580, i8 -86, i64 152, i1 false)
  %581 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %549, %"class.v8::Value"** %581, align 8
  %582 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 1
  store i32 0, i32* %582, align 8
  %583 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %583, align 8
  %584 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1
  %585 = bitcast %"class.std::__1::unique_ptr"* %584 to i64*
  store i64 0, i64* %585, align 8
  %586 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %12, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %586, label %587, label %763

587:                                              ; preds = %579
  %588 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %588) #7
  %589 = load %"class.v8::Value"*, %"class.v8::Value"** %581, align 8
  %590 = icmp eq %"class.v8::Value"* %589, null
  br i1 %590, label %595, label %591, !prof !2

591:                                              ; preds = %587
  %592 = bitcast %"class.v8::Value"* %589 to %"class.v8::String"*
  %593 = load i32, i32* %582, align 8
  %594 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %592, i32 %593) #7
  br label %615

595:                                              ; preds = %587
  %596 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %583, align 8
  %597 = icmp eq %"class.WTF::StringImpl"* %596, null
  br i1 %597, label %615, label %598

598:                                              ; preds = %595
  %599 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %596, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %600 = load atomic i32, i32* %599 monotonic, align 4
  %601 = and i32 %600, 2
  %602 = icmp eq i32 %601, 0
  br i1 %602, label %603, label %615

603:                                              ; preds = %598
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %596, i64 0, i32 0
  %605 = load i32, i32* %604, align 4
  %606 = zext i32 %605 to i33
  %607 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %606, i33 1) #7
  %608 = extractvalue { i33, i1 } %607, 1
  %609 = extractvalue { i33, i1 } %607, 0
  %610 = icmp slt i33 %609, 0
  %611 = or i1 %608, %610
  br i1 %611, label %612, label %613, !prof !2

612:                                              ; preds = %603
  call void @llvm.trap() #7
  unreachable

613:                                              ; preds = %603
  %614 = trunc i33 %609 to i32
  store i32 %614, i32* %604, align 4
  br label %615

615:                                              ; preds = %591, %595, %598, %613
  %616 = phi %"class.WTF::StringImpl"* [ %594, %591 ], [ null, %595 ], [ %596, %598 ], [ %596, %613 ]
  %617 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %616, %"class.WTF::StringImpl"** %617, align 8
  %618 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %618) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i64 14) #7
  %619 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %13, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateEE12kValidValues_1, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %14, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %620 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %621 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %620, align 8
  %622 = icmp eq %"class.WTF::StringImpl"* %621, null
  br i1 %622, label %636, label %623

623:                                              ; preds = %615
  %624 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %621, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %625 = load atomic i32, i32* %624 monotonic, align 4
  %626 = and i32 %625, 2
  %627 = icmp eq i32 %626, 0
  %628 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %621, i64 0, i32 0
  %629 = load i32, i32* %628, align 4
  br i1 %627, label %630, label %632

630:                                              ; preds = %623
  %631 = add i32 %629, -1
  store i32 %631, i32* %628, align 4
  br label %632

632:                                              ; preds = %630, %623
  %633 = phi i32 [ %631, %630 ], [ %629, %623 ]
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %635, label %636

635:                                              ; preds = %632
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %621) #7
  br label %636

636:                                              ; preds = %615, %632, %635
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %618) #7
  %637 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %617, align 8
  %638 = icmp eq %"class.WTF::StringImpl"* %637, null
  br i1 %638, label %652, label %639

639:                                              ; preds = %636
  %640 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %637, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %641 = load atomic i32, i32* %640 monotonic, align 4
  %642 = and i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %637, i64 0, i32 0
  %645 = load i32, i32* %644, align 4
  br i1 %643, label %646, label %648

646:                                              ; preds = %639
  %647 = add i32 %645, -1
  store i32 %647, i32* %644, align 4
  br label %648

648:                                              ; preds = %646, %639
  %649 = phi i32 [ %647, %646 ], [ %645, %639 ]
  %650 = icmp eq i32 %649, 0
  br i1 %650, label %651, label %652

651:                                              ; preds = %648
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %637) #7
  br label %652

652:                                              ; preds = %636, %648, %651
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %588) #7
  br i1 %619, label %653, label %763

653:                                              ; preds = %652
  %654 = load %"class.v8::Value"*, %"class.v8::Value"** %581, align 8
  %655 = icmp eq %"class.v8::Value"* %654, null
  br i1 %655, label %656, label %680, !prof !2

656:                                              ; preds = %653
  %657 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %583, align 8
  %658 = icmp eq %"class.WTF::StringImpl"* %657, null
  br i1 %658, label %659, label %661

659:                                              ; preds = %656
  %660 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 6
  br label %705

661:                                              ; preds = %656
  %662 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %657, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %663 = load atomic i32, i32* %662 monotonic, align 4
  %664 = and i32 %663, 2
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %666, label %678

666:                                              ; preds = %661
  %667 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %657, i64 0, i32 0
  %668 = load i32, i32* %667, align 4
  %669 = zext i32 %668 to i33
  %670 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %669, i33 1) #7
  %671 = extractvalue { i33, i1 } %670, 1
  %672 = extractvalue { i33, i1 } %670, 0
  %673 = icmp slt i33 %672, 0
  %674 = or i1 %671, %673
  br i1 %674, label %675, label %676, !prof !2

675:                                              ; preds = %666
  call void @llvm.trap() #7
  unreachable

676:                                              ; preds = %666
  %677 = trunc i33 %672 to i32
  store i32 %677, i32* %667, align 4
  br label %678

678:                                              ; preds = %661, %676
  %679 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 6
  br label %686

680:                                              ; preds = %653
  %681 = bitcast %"class.v8::Value"* %654 to %"class.v8::String"*
  %682 = load i32, i32* %582, align 8
  %683 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %681, i32 %682) #7
  %684 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 6
  %685 = icmp eq %"class.WTF::StringImpl"* %683, null
  br i1 %685, label %705, label %686

686:                                              ; preds = %678, %680
  %687 = phi %"class.WTF::String"* [ %679, %678 ], [ %684, %680 ]
  %688 = phi %"class.WTF::StringImpl"* [ %657, %678 ], [ %683, %680 ]
  %689 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %688, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %690 = load atomic i32, i32* %689 monotonic, align 4
  %691 = and i32 %690, 2
  %692 = icmp eq i32 %691, 0
  br i1 %692, label %693, label %705

693:                                              ; preds = %686
  %694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %688, i64 0, i32 0
  %695 = load i32, i32* %694, align 4
  %696 = zext i32 %695 to i33
  %697 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %696, i33 1) #7
  %698 = extractvalue { i33, i1 } %697, 1
  %699 = extractvalue { i33, i1 } %697, 0
  %700 = icmp slt i33 %699, 0
  %701 = or i1 %698, %700
  br i1 %701, label %702, label %703, !prof !2

702:                                              ; preds = %693
  call void @llvm.trap() #7
  unreachable

703:                                              ; preds = %693
  %704 = trunc i33 %699 to i32
  store i32 %704, i32* %694, align 4
  br label %705

705:                                              ; preds = %659, %703, %686, %680
  %706 = phi i1 [ false, %703 ], [ false, %686 ], [ true, %680 ], [ true, %659 ]
  %707 = phi %"class.WTF::String"* [ %687, %703 ], [ %687, %686 ], [ %684, %680 ], [ %660, %659 ]
  %708 = phi %"class.WTF::StringImpl"* [ %688, %703 ], [ %688, %686 ], [ null, %680 ], [ null, %659 ]
  %709 = ptrtoint %"class.WTF::StringImpl"* %708 to i64
  %710 = bitcast %"class.WTF::String"* %707 to i64*
  %711 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %707, i64 0, i32 0, i32 0
  %712 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %711, align 8
  store i64 %709, i64* %710, align 8
  %713 = icmp eq %"class.WTF::StringImpl"* %712, null
  br i1 %713, label %727, label %714

714:                                              ; preds = %705
  %715 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %712, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %716 = load atomic i32, i32* %715 monotonic, align 4
  %717 = and i32 %716, 2
  %718 = icmp eq i32 %717, 0
  %719 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %712, i64 0, i32 0
  %720 = load i32, i32* %719, align 4
  br i1 %718, label %721, label %723

721:                                              ; preds = %714
  %722 = add i32 %720, -1
  store i32 %722, i32* %719, align 4
  br label %723

723:                                              ; preds = %721, %714
  %724 = phi i32 [ %722, %721 ], [ %720, %714 ]
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %726, label %727

726:                                              ; preds = %723
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %712) #7
  br label %727

727:                                              ; preds = %705, %723, %726
  br i1 %706, label %741, label %728

728:                                              ; preds = %727
  %729 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %708, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %730 = load atomic i32, i32* %729 monotonic, align 4
  %731 = and i32 %730, 2
  %732 = icmp eq i32 %731, 0
  %733 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %708, i64 0, i32 0
  %734 = load i32, i32* %733, align 4
  br i1 %732, label %735, label %737

735:                                              ; preds = %728
  %736 = add i32 %734, -1
  store i32 %736, i32* %733, align 4
  br label %737

737:                                              ; preds = %735, %728
  %738 = phi i32 [ %736, %735 ], [ %734, %728 ]
  %739 = icmp eq i32 %738, 0
  br i1 %739, label %740, label %741

740:                                              ; preds = %737
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %708) #7
  br label %741

741:                                              ; preds = %727, %737, %740
  %742 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %743 = load i8*, i8** %742, align 8
  store i8* null, i8** %742, align 8
  %744 = icmp eq i8* %743, null
  br i1 %744, label %746, label %745

745:                                              ; preds = %741
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %743) #7
  br label %746

746:                                              ; preds = %745, %741
  %747 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %583, align 8
  %748 = icmp eq %"class.WTF::StringImpl"* %747, null
  br i1 %748, label %762, label %749

749:                                              ; preds = %746
  %750 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %747, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %751 = load atomic i32, i32* %750 monotonic, align 4
  %752 = and i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %747, i64 0, i32 0
  %755 = load i32, i32* %754, align 4
  br i1 %753, label %756, label %758

756:                                              ; preds = %749
  %757 = add i32 %755, -1
  store i32 %757, i32* %754, align 4
  br label %758

758:                                              ; preds = %756, %749
  %759 = phi i32 [ %757, %756 ], [ %755, %749 ]
  %760 = icmp eq i32 %759, 0
  br i1 %760, label %761, label %762

761:                                              ; preds = %758
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %747) #7
  br label %762

762:                                              ; preds = %746, %758, %761
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %580) #7
  br label %785

763:                                              ; preds = %652, %579
  %764 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %765 = load i8*, i8** %764, align 8
  store i8* null, i8** %764, align 8
  %766 = icmp eq i8* %765, null
  br i1 %766, label %768, label %767

767:                                              ; preds = %763
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %765) #7
  br label %768

768:                                              ; preds = %767, %763
  %769 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %583, align 8
  %770 = icmp eq %"class.WTF::StringImpl"* %769, null
  br i1 %770, label %784, label %771

771:                                              ; preds = %768
  %772 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %769, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %773 = load atomic i32, i32* %772 monotonic, align 4
  %774 = and i32 %773, 2
  %775 = icmp eq i32 %774, 0
  %776 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %769, i64 0, i32 0
  %777 = load i32, i32* %776, align 4
  br i1 %775, label %778, label %780

778:                                              ; preds = %771
  %779 = add i32 %777, -1
  store i32 %779, i32* %776, align 4
  br label %780

780:                                              ; preds = %778, %771
  %781 = phi i32 [ %779, %778 ], [ %777, %771 ]
  %782 = icmp eq i32 %781, 0
  br i1 %782, label %783, label %784

783:                                              ; preds = %780
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %769) #7
  br label %784

784:                                              ; preds = %768, %780, %783
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %580) #7
  br label %1868

785:                                              ; preds = %762, %573
  %786 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %64, i64 3, i32 0
  %787 = bitcast %"class.v8::Name"** %786 to %"class.v8::Value"**
  %788 = load %"class.v8::Value"*, %"class.v8::Value"** %787, align 8
  %789 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %53, %"class.v8::Context"* %66, %"class.v8::Value"* %788) #7
  %790 = icmp eq %"class.v8::Value"* %789, null
  br i1 %790, label %791, label %797

791:                                              ; preds = %785
  %792 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %793 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %794 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %793, align 8
  %795 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %794, i64 5
  %796 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %795, align 8
  call void %796(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %792) #7
  br label %1868

797:                                              ; preds = %785
  %798 = bitcast %"class.v8::Value"* %789 to i64*
  %799 = load i64, i64* %798, align 8
  %800 = and i64 %799, 3
  %801 = icmp eq i64 %800, 1
  br i1 %801, label %802, label %819

802:                                              ; preds = %797
  %803 = add i64 %799, -1
  %804 = inttoptr i64 %803 to i32*
  %805 = load i32, i32* %804, align 4
  %806 = and i64 %799, -4294967296
  %807 = zext i32 %805 to i64
  %808 = or i64 %806, %807
  %809 = add i64 %808, 7
  %810 = inttoptr i64 %809 to i16*
  %811 = load i16, i16* %810, align 2
  %812 = icmp eq i16 %811, 67
  br i1 %812, label %813, label %819

813:                                              ; preds = %802
  %814 = add i64 %799, 23
  %815 = inttoptr i64 %814 to i32*
  %816 = load i32, i32* %815, align 4
  %817 = and i32 %816, -2
  %818 = icmp eq i32 %817, 10
  br i1 %818, label %1025, label %819

819:                                              ; preds = %802, %797, %813
  %820 = bitcast %"class.blink::V8StringResource"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %820) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %820, i8 -86, i64 152, i1 false)
  %821 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %789, %"class.v8::Value"** %821, align 8
  %822 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 1
  store i32 0, i32* %822, align 8
  %823 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %823, align 8
  %824 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 3, i32 1
  %825 = bitcast %"class.std::__1::unique_ptr"* %824 to i64*
  store i64 0, i64* %825, align 8
  %826 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %15, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %826, label %827, label %1003

827:                                              ; preds = %819
  %828 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %828) #7
  %829 = load %"class.v8::Value"*, %"class.v8::Value"** %821, align 8
  %830 = icmp eq %"class.v8::Value"* %829, null
  br i1 %830, label %835, label %831, !prof !2

831:                                              ; preds = %827
  %832 = bitcast %"class.v8::Value"* %829 to %"class.v8::String"*
  %833 = load i32, i32* %822, align 8
  %834 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %832, i32 %833) #7
  br label %855

835:                                              ; preds = %827
  %836 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %823, align 8
  %837 = icmp eq %"class.WTF::StringImpl"* %836, null
  br i1 %837, label %855, label %838

838:                                              ; preds = %835
  %839 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %836, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %840 = load atomic i32, i32* %839 monotonic, align 4
  %841 = and i32 %840, 2
  %842 = icmp eq i32 %841, 0
  br i1 %842, label %843, label %855

843:                                              ; preds = %838
  %844 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %836, i64 0, i32 0
  %845 = load i32, i32* %844, align 4
  %846 = zext i32 %845 to i33
  %847 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %846, i33 1) #7
  %848 = extractvalue { i33, i1 } %847, 1
  %849 = extractvalue { i33, i1 } %847, 0
  %850 = icmp slt i33 %849, 0
  %851 = or i1 %848, %850
  br i1 %851, label %852, label %853, !prof !2

852:                                              ; preds = %843
  call void @llvm.trap() #7
  unreachable

853:                                              ; preds = %843
  %854 = trunc i33 %849 to i32
  store i32 %854, i32* %844, align 4
  br label %855

855:                                              ; preds = %831, %835, %838, %853
  %856 = phi %"class.WTF::StringImpl"* [ %834, %831 ], [ null, %835 ], [ %836, %838 ], [ %836, %853 ]
  %857 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %856, %"class.WTF::StringImpl"** %857, align 8
  %858 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %858) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), i64 18) #7
  %859 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %16, i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @_ZZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateEE12kValidValues_2, i64 0, i64 0), i64 8, %"class.WTF::String"* nonnull dereferenceable(8) %17, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %860 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %861 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %860, align 8
  %862 = icmp eq %"class.WTF::StringImpl"* %861, null
  br i1 %862, label %876, label %863

863:                                              ; preds = %855
  %864 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %861, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %865 = load atomic i32, i32* %864 monotonic, align 4
  %866 = and i32 %865, 2
  %867 = icmp eq i32 %866, 0
  %868 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %861, i64 0, i32 0
  %869 = load i32, i32* %868, align 4
  br i1 %867, label %870, label %872

870:                                              ; preds = %863
  %871 = add i32 %869, -1
  store i32 %871, i32* %868, align 4
  br label %872

872:                                              ; preds = %870, %863
  %873 = phi i32 [ %871, %870 ], [ %869, %863 ]
  %874 = icmp eq i32 %873, 0
  br i1 %874, label %875, label %876

875:                                              ; preds = %872
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %861) #7
  br label %876

876:                                              ; preds = %855, %872, %875
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %858) #7
  %877 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %857, align 8
  %878 = icmp eq %"class.WTF::StringImpl"* %877, null
  br i1 %878, label %892, label %879

879:                                              ; preds = %876
  %880 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %877, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %881 = load atomic i32, i32* %880 monotonic, align 4
  %882 = and i32 %881, 2
  %883 = icmp eq i32 %882, 0
  %884 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %877, i64 0, i32 0
  %885 = load i32, i32* %884, align 4
  br i1 %883, label %886, label %888

886:                                              ; preds = %879
  %887 = add i32 %885, -1
  store i32 %887, i32* %884, align 4
  br label %888

888:                                              ; preds = %886, %879
  %889 = phi i32 [ %887, %886 ], [ %885, %879 ]
  %890 = icmp eq i32 %889, 0
  br i1 %890, label %891, label %892

891:                                              ; preds = %888
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %877) #7
  br label %892

892:                                              ; preds = %876, %888, %891
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %828) #7
  br i1 %859, label %893, label %1003

893:                                              ; preds = %892
  %894 = load %"class.v8::Value"*, %"class.v8::Value"** %821, align 8
  %895 = icmp eq %"class.v8::Value"* %894, null
  br i1 %895, label %896, label %920, !prof !2

896:                                              ; preds = %893
  %897 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %823, align 8
  %898 = icmp eq %"class.WTF::StringImpl"* %897, null
  br i1 %898, label %899, label %901

899:                                              ; preds = %896
  %900 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 7
  br label %945

901:                                              ; preds = %896
  %902 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %897, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %903 = load atomic i32, i32* %902 monotonic, align 4
  %904 = and i32 %903, 2
  %905 = icmp eq i32 %904, 0
  br i1 %905, label %906, label %918

906:                                              ; preds = %901
  %907 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %897, i64 0, i32 0
  %908 = load i32, i32* %907, align 4
  %909 = zext i32 %908 to i33
  %910 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %909, i33 1) #7
  %911 = extractvalue { i33, i1 } %910, 1
  %912 = extractvalue { i33, i1 } %910, 0
  %913 = icmp slt i33 %912, 0
  %914 = or i1 %911, %913
  br i1 %914, label %915, label %916, !prof !2

915:                                              ; preds = %906
  call void @llvm.trap() #7
  unreachable

916:                                              ; preds = %906
  %917 = trunc i33 %912 to i32
  store i32 %917, i32* %907, align 4
  br label %918

918:                                              ; preds = %901, %916
  %919 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 7
  br label %926

920:                                              ; preds = %893
  %921 = bitcast %"class.v8::Value"* %894 to %"class.v8::String"*
  %922 = load i32, i32* %822, align 8
  %923 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %921, i32 %922) #7
  %924 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 7
  %925 = icmp eq %"class.WTF::StringImpl"* %923, null
  br i1 %925, label %945, label %926

926:                                              ; preds = %918, %920
  %927 = phi %"class.WTF::String"* [ %919, %918 ], [ %924, %920 ]
  %928 = phi %"class.WTF::StringImpl"* [ %897, %918 ], [ %923, %920 ]
  %929 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %930 = load atomic i32, i32* %929 monotonic, align 4
  %931 = and i32 %930, 2
  %932 = icmp eq i32 %931, 0
  br i1 %932, label %933, label %945

933:                                              ; preds = %926
  %934 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 0
  %935 = load i32, i32* %934, align 4
  %936 = zext i32 %935 to i33
  %937 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %936, i33 1) #7
  %938 = extractvalue { i33, i1 } %937, 1
  %939 = extractvalue { i33, i1 } %937, 0
  %940 = icmp slt i33 %939, 0
  %941 = or i1 %938, %940
  br i1 %941, label %942, label %943, !prof !2

942:                                              ; preds = %933
  call void @llvm.trap() #7
  unreachable

943:                                              ; preds = %933
  %944 = trunc i33 %939 to i32
  store i32 %944, i32* %934, align 4
  br label %945

945:                                              ; preds = %899, %943, %926, %920
  %946 = phi i1 [ false, %943 ], [ false, %926 ], [ true, %920 ], [ true, %899 ]
  %947 = phi %"class.WTF::String"* [ %927, %943 ], [ %927, %926 ], [ %924, %920 ], [ %900, %899 ]
  %948 = phi %"class.WTF::StringImpl"* [ %928, %943 ], [ %928, %926 ], [ null, %920 ], [ null, %899 ]
  %949 = ptrtoint %"class.WTF::StringImpl"* %948 to i64
  %950 = bitcast %"class.WTF::String"* %947 to i64*
  %951 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %947, i64 0, i32 0, i32 0
  %952 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %951, align 8
  store i64 %949, i64* %950, align 8
  %953 = icmp eq %"class.WTF::StringImpl"* %952, null
  br i1 %953, label %967, label %954

954:                                              ; preds = %945
  %955 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %952, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %956 = load atomic i32, i32* %955 monotonic, align 4
  %957 = and i32 %956, 2
  %958 = icmp eq i32 %957, 0
  %959 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %952, i64 0, i32 0
  %960 = load i32, i32* %959, align 4
  br i1 %958, label %961, label %963

961:                                              ; preds = %954
  %962 = add i32 %960, -1
  store i32 %962, i32* %959, align 4
  br label %963

963:                                              ; preds = %961, %954
  %964 = phi i32 [ %962, %961 ], [ %960, %954 ]
  %965 = icmp eq i32 %964, 0
  br i1 %965, label %966, label %967

966:                                              ; preds = %963
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %952) #7
  br label %967

967:                                              ; preds = %945, %963, %966
  br i1 %946, label %981, label %968

968:                                              ; preds = %967
  %969 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %948, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %970 = load atomic i32, i32* %969 monotonic, align 4
  %971 = and i32 %970, 2
  %972 = icmp eq i32 %971, 0
  %973 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %948, i64 0, i32 0
  %974 = load i32, i32* %973, align 4
  br i1 %972, label %975, label %977

975:                                              ; preds = %968
  %976 = add i32 %974, -1
  store i32 %976, i32* %973, align 4
  br label %977

977:                                              ; preds = %975, %968
  %978 = phi i32 [ %976, %975 ], [ %974, %968 ]
  %979 = icmp eq i32 %978, 0
  br i1 %979, label %980, label %981

980:                                              ; preds = %977
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %948) #7
  br label %981

981:                                              ; preds = %967, %977, %980
  %982 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %983 = load i8*, i8** %982, align 8
  store i8* null, i8** %982, align 8
  %984 = icmp eq i8* %983, null
  br i1 %984, label %986, label %985

985:                                              ; preds = %981
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %983) #7
  br label %986

986:                                              ; preds = %985, %981
  %987 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %823, align 8
  %988 = icmp eq %"class.WTF::StringImpl"* %987, null
  br i1 %988, label %1002, label %989

989:                                              ; preds = %986
  %990 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %987, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %991 = load atomic i32, i32* %990 monotonic, align 4
  %992 = and i32 %991, 2
  %993 = icmp eq i32 %992, 0
  %994 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %987, i64 0, i32 0
  %995 = load i32, i32* %994, align 4
  br i1 %993, label %996, label %998

996:                                              ; preds = %989
  %997 = add i32 %995, -1
  store i32 %997, i32* %994, align 4
  br label %998

998:                                              ; preds = %996, %989
  %999 = phi i32 [ %997, %996 ], [ %995, %989 ]
  %1000 = icmp eq i32 %999, 0
  br i1 %1000, label %1001, label %1002

1001:                                             ; preds = %998
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %987) #7
  br label %1002

1002:                                             ; preds = %986, %998, %1001
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %820) #7
  br label %1025

1003:                                             ; preds = %892, %819
  %1004 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1005 = load i8*, i8** %1004, align 8
  store i8* null, i8** %1004, align 8
  %1006 = icmp eq i8* %1005, null
  br i1 %1006, label %1008, label %1007

1007:                                             ; preds = %1003
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1005) #7
  br label %1008

1008:                                             ; preds = %1007, %1003
  %1009 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %823, align 8
  %1010 = icmp eq %"class.WTF::StringImpl"* %1009, null
  br i1 %1010, label %1024, label %1011

1011:                                             ; preds = %1008
  %1012 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1009, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1013 = load atomic i32, i32* %1012 monotonic, align 4
  %1014 = and i32 %1013, 2
  %1015 = icmp eq i32 %1014, 0
  %1016 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1009, i64 0, i32 0
  %1017 = load i32, i32* %1016, align 4
  br i1 %1015, label %1018, label %1020

1018:                                             ; preds = %1011
  %1019 = add i32 %1017, -1
  store i32 %1019, i32* %1016, align 4
  br label %1020

1020:                                             ; preds = %1018, %1011
  %1021 = phi i32 [ %1019, %1018 ], [ %1017, %1011 ]
  %1022 = icmp eq i32 %1021, 0
  br i1 %1022, label %1023, label %1024

1023:                                             ; preds = %1020
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1009) #7
  br label %1024

1024:                                             ; preds = %1008, %1020, %1023
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %820) #7
  br label %1868

1025:                                             ; preds = %1002, %813
  %1026 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %64, i64 4, i32 0
  %1027 = bitcast %"class.v8::Name"** %1026 to %"class.v8::Value"**
  %1028 = load %"class.v8::Value"*, %"class.v8::Value"** %1027, align 8
  %1029 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %53, %"class.v8::Context"* %66, %"class.v8::Value"* %1028) #7
  %1030 = icmp eq %"class.v8::Value"* %1029, null
  br i1 %1030, label %1031, label %1037

1031:                                             ; preds = %1025
  %1032 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1033 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1034 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1033, align 8
  %1035 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1034, i64 5
  %1036 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1035, align 8
  call void %1036(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1032) #7
  br label %1868

1037:                                             ; preds = %1025
  %1038 = bitcast %"class.v8::Value"* %1029 to i64*
  %1039 = load i64, i64* %1038, align 8
  %1040 = and i64 %1039, 3
  %1041 = icmp eq i64 %1040, 1
  br i1 %1041, label %1042, label %1059

1042:                                             ; preds = %1037
  %1043 = add i64 %1039, -1
  %1044 = inttoptr i64 %1043 to i32*
  %1045 = load i32, i32* %1044, align 4
  %1046 = and i64 %1039, -4294967296
  %1047 = zext i32 %1045 to i64
  %1048 = or i64 %1046, %1047
  %1049 = add i64 %1048, 7
  %1050 = inttoptr i64 %1049 to i16*
  %1051 = load i16, i16* %1050, align 2
  %1052 = icmp eq i16 %1051, 67
  br i1 %1052, label %1053, label %1059

1053:                                             ; preds = %1042
  %1054 = add i64 %1039, 23
  %1055 = inttoptr i64 %1054 to i32*
  %1056 = load i32, i32* %1055, align 4
  %1057 = and i32 %1056, -2
  %1058 = icmp eq i32 %1057, 10
  br i1 %1058, label %1066, label %1059

1059:                                             ; preds = %1042, %1037, %1053
  %1060 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1029, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %1061 = load i32, i32* %55, align 8
  %1062 = icmp eq i32 %1061, 0
  br i1 %1062, label %1063, label %1868

1063:                                             ; preds = %1059
  %1064 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 8
  store float %1060, float* %1064, align 8
  %1065 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 1
  store i8 1, i8* %1065, align 8
  br label %1066

1066:                                             ; preds = %1063, %1053
  %1067 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %64, i64 5, i32 0
  %1068 = bitcast %"class.v8::Name"** %1067 to %"class.v8::Value"**
  %1069 = load %"class.v8::Value"*, %"class.v8::Value"** %1068, align 8
  %1070 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %53, %"class.v8::Context"* %66, %"class.v8::Value"* %1069) #7
  %1071 = icmp eq %"class.v8::Value"* %1070, null
  br i1 %1071, label %1072, label %1078

1072:                                             ; preds = %1066
  %1073 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1074 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1075 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1074, align 8
  %1076 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1075, i64 5
  %1077 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1076, align 8
  call void %1077(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1073) #7
  br label %1868

1078:                                             ; preds = %1066
  %1079 = bitcast %"class.v8::Value"* %1070 to i64*
  %1080 = load i64, i64* %1079, align 8
  %1081 = and i64 %1080, 3
  %1082 = icmp eq i64 %1081, 1
  br i1 %1082, label %1083, label %1100

1083:                                             ; preds = %1078
  %1084 = add i64 %1080, -1
  %1085 = inttoptr i64 %1084 to i32*
  %1086 = load i32, i32* %1085, align 4
  %1087 = and i64 %1080, -4294967296
  %1088 = zext i32 %1086 to i64
  %1089 = or i64 %1087, %1088
  %1090 = add i64 %1089, 7
  %1091 = inttoptr i64 %1090 to i16*
  %1092 = load i16, i16* %1091, align 2
  %1093 = icmp eq i16 %1092, 67
  br i1 %1093, label %1094, label %1100

1094:                                             ; preds = %1083
  %1095 = add i64 %1080, 23
  %1096 = inttoptr i64 %1095 to i32*
  %1097 = load i32, i32* %1096, align 4
  %1098 = and i32 %1097, -2
  %1099 = icmp eq i32 %1098, 10
  br i1 %1099, label %1107, label %1100

1100:                                             ; preds = %1083, %1078, %1094
  %1101 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1070, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %1102 = load i32, i32* %55, align 8
  %1103 = icmp eq i32 %1102, 0
  br i1 %1103, label %1104, label %1868

1104:                                             ; preds = %1100
  %1105 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 9
  store float %1101, float* %1105, align 4
  %1106 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 2
  store i8 1, i8* %1106, align 1
  br label %1107

1107:                                             ; preds = %1104, %1094
  %1108 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %64, i64 6, i32 0
  %1109 = bitcast %"class.v8::Name"** %1108 to %"class.v8::Value"**
  %1110 = load %"class.v8::Value"*, %"class.v8::Value"** %1109, align 8
  %1111 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %53, %"class.v8::Context"* %66, %"class.v8::Value"* %1110) #7
  %1112 = icmp eq %"class.v8::Value"* %1111, null
  br i1 %1112, label %1113, label %1119

1113:                                             ; preds = %1107
  %1114 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1115 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1116 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1115, align 8
  %1117 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1116, i64 5
  %1118 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1117, align 8
  call void %1118(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1114) #7
  br label %1868

1119:                                             ; preds = %1107
  %1120 = bitcast %"class.v8::Value"* %1111 to i64*
  %1121 = load i64, i64* %1120, align 8
  %1122 = and i64 %1121, 3
  %1123 = icmp eq i64 %1122, 1
  br i1 %1123, label %1124, label %1141

1124:                                             ; preds = %1119
  %1125 = add i64 %1121, -1
  %1126 = inttoptr i64 %1125 to i32*
  %1127 = load i32, i32* %1126, align 4
  %1128 = and i64 %1121, -4294967296
  %1129 = zext i32 %1127 to i64
  %1130 = or i64 %1128, %1129
  %1131 = add i64 %1130, 7
  %1132 = inttoptr i64 %1131 to i16*
  %1133 = load i16, i16* %1132, align 2
  %1134 = icmp eq i16 %1133, 67
  br i1 %1134, label %1135, label %1141

1135:                                             ; preds = %1124
  %1136 = add i64 %1121, 23
  %1137 = inttoptr i64 %1136 to i32*
  %1138 = load i32, i32* %1137, align 4
  %1139 = and i32 %1138, -2
  %1140 = icmp eq i32 %1139, 10
  br i1 %1140, label %1347, label %1141

1141:                                             ; preds = %1124, %1119, %1135
  %1142 = bitcast %"class.blink::V8StringResource"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1142) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1142, i8 -86, i64 152, i1 false)
  %1143 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %18, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1111, %"class.v8::Value"** %1143, align 8
  %1144 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %18, i64 0, i32 1
  store i32 0, i32* %1144, align 8
  %1145 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %18, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1145, align 8
  %1146 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %18, i64 0, i32 3, i32 1
  %1147 = bitcast %"class.std::__1::unique_ptr"* %1146 to i64*
  store i64 0, i64* %1147, align 8
  %1148 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %18, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1148, label %1149, label %1325

1149:                                             ; preds = %1141
  %1150 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1150) #7
  %1151 = load %"class.v8::Value"*, %"class.v8::Value"** %1143, align 8
  %1152 = icmp eq %"class.v8::Value"* %1151, null
  br i1 %1152, label %1157, label %1153, !prof !2

1153:                                             ; preds = %1149
  %1154 = bitcast %"class.v8::Value"* %1151 to %"class.v8::String"*
  %1155 = load i32, i32* %1144, align 8
  %1156 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1154, i32 %1155) #7
  br label %1177

1157:                                             ; preds = %1149
  %1158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1145, align 8
  %1159 = icmp eq %"class.WTF::StringImpl"* %1158, null
  br i1 %1159, label %1177, label %1160

1160:                                             ; preds = %1157
  %1161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1162 = load atomic i32, i32* %1161 monotonic, align 4
  %1163 = and i32 %1162, 2
  %1164 = icmp eq i32 %1163, 0
  br i1 %1164, label %1165, label %1177

1165:                                             ; preds = %1160
  %1166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1158, i64 0, i32 0
  %1167 = load i32, i32* %1166, align 4
  %1168 = zext i32 %1167 to i33
  %1169 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1168, i33 1) #7
  %1170 = extractvalue { i33, i1 } %1169, 1
  %1171 = extractvalue { i33, i1 } %1169, 0
  %1172 = icmp slt i33 %1171, 0
  %1173 = or i1 %1170, %1172
  br i1 %1173, label %1174, label %1175, !prof !2

1174:                                             ; preds = %1165
  call void @llvm.trap() #7
  unreachable

1175:                                             ; preds = %1165
  %1176 = trunc i33 %1171 to i32
  store i32 %1176, i32* %1166, align 4
  br label %1177

1177:                                             ; preds = %1153, %1157, %1160, %1175
  %1178 = phi %"class.WTF::StringImpl"* [ %1156, %1153 ], [ null, %1157 ], [ %1158, %1160 ], [ %1158, %1175 ]
  %1179 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1178, %"class.WTF::StringImpl"** %1179, align 8
  %1180 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1180) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i64 13) #7
  %1181 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %19, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateEE12kValidValues_3, i64 0, i64 0), i64 2, %"class.WTF::String"* nonnull dereferenceable(8) %20, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %1182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %1183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1182, align 8
  %1184 = icmp eq %"class.WTF::StringImpl"* %1183, null
  br i1 %1184, label %1198, label %1185

1185:                                             ; preds = %1177
  %1186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1187 = load atomic i32, i32* %1186 monotonic, align 4
  %1188 = and i32 %1187, 2
  %1189 = icmp eq i32 %1188, 0
  %1190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1183, i64 0, i32 0
  %1191 = load i32, i32* %1190, align 4
  br i1 %1189, label %1192, label %1194

1192:                                             ; preds = %1185
  %1193 = add i32 %1191, -1
  store i32 %1193, i32* %1190, align 4
  br label %1194

1194:                                             ; preds = %1192, %1185
  %1195 = phi i32 [ %1193, %1192 ], [ %1191, %1185 ]
  %1196 = icmp eq i32 %1195, 0
  br i1 %1196, label %1197, label %1198

1197:                                             ; preds = %1194
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1183) #7
  br label %1198

1198:                                             ; preds = %1177, %1194, %1197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1180) #7
  %1199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1179, align 8
  %1200 = icmp eq %"class.WTF::StringImpl"* %1199, null
  br i1 %1200, label %1214, label %1201

1201:                                             ; preds = %1198
  %1202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1199, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1203 = load atomic i32, i32* %1202 monotonic, align 4
  %1204 = and i32 %1203, 2
  %1205 = icmp eq i32 %1204, 0
  %1206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1199, i64 0, i32 0
  %1207 = load i32, i32* %1206, align 4
  br i1 %1205, label %1208, label %1210

1208:                                             ; preds = %1201
  %1209 = add i32 %1207, -1
  store i32 %1209, i32* %1206, align 4
  br label %1210

1210:                                             ; preds = %1208, %1201
  %1211 = phi i32 [ %1209, %1208 ], [ %1207, %1201 ]
  %1212 = icmp eq i32 %1211, 0
  br i1 %1212, label %1213, label %1214

1213:                                             ; preds = %1210
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1199) #7
  br label %1214

1214:                                             ; preds = %1198, %1210, %1213
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1150) #7
  br i1 %1181, label %1215, label %1325

1215:                                             ; preds = %1214
  %1216 = load %"class.v8::Value"*, %"class.v8::Value"** %1143, align 8
  %1217 = icmp eq %"class.v8::Value"* %1216, null
  br i1 %1217, label %1218, label %1242, !prof !2

1218:                                             ; preds = %1215
  %1219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1145, align 8
  %1220 = icmp eq %"class.WTF::StringImpl"* %1219, null
  br i1 %1220, label %1221, label %1223

1221:                                             ; preds = %1218
  %1222 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 10
  br label %1267

1223:                                             ; preds = %1218
  %1224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1219, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1225 = load atomic i32, i32* %1224 monotonic, align 4
  %1226 = and i32 %1225, 2
  %1227 = icmp eq i32 %1226, 0
  br i1 %1227, label %1228, label %1240

1228:                                             ; preds = %1223
  %1229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1219, i64 0, i32 0
  %1230 = load i32, i32* %1229, align 4
  %1231 = zext i32 %1230 to i33
  %1232 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1231, i33 1) #7
  %1233 = extractvalue { i33, i1 } %1232, 1
  %1234 = extractvalue { i33, i1 } %1232, 0
  %1235 = icmp slt i33 %1234, 0
  %1236 = or i1 %1233, %1235
  br i1 %1236, label %1237, label %1238, !prof !2

1237:                                             ; preds = %1228
  call void @llvm.trap() #7
  unreachable

1238:                                             ; preds = %1228
  %1239 = trunc i33 %1234 to i32
  store i32 %1239, i32* %1229, align 4
  br label %1240

1240:                                             ; preds = %1223, %1238
  %1241 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 10
  br label %1248

1242:                                             ; preds = %1215
  %1243 = bitcast %"class.v8::Value"* %1216 to %"class.v8::String"*
  %1244 = load i32, i32* %1144, align 8
  %1245 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1243, i32 %1244) #7
  %1246 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 10
  %1247 = icmp eq %"class.WTF::StringImpl"* %1245, null
  br i1 %1247, label %1267, label %1248

1248:                                             ; preds = %1240, %1242
  %1249 = phi %"class.WTF::String"* [ %1241, %1240 ], [ %1246, %1242 ]
  %1250 = phi %"class.WTF::StringImpl"* [ %1219, %1240 ], [ %1245, %1242 ]
  %1251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1252 = load atomic i32, i32* %1251 monotonic, align 4
  %1253 = and i32 %1252, 2
  %1254 = icmp eq i32 %1253, 0
  br i1 %1254, label %1255, label %1267

1255:                                             ; preds = %1248
  %1256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1250, i64 0, i32 0
  %1257 = load i32, i32* %1256, align 4
  %1258 = zext i32 %1257 to i33
  %1259 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1258, i33 1) #7
  %1260 = extractvalue { i33, i1 } %1259, 1
  %1261 = extractvalue { i33, i1 } %1259, 0
  %1262 = icmp slt i33 %1261, 0
  %1263 = or i1 %1260, %1262
  br i1 %1263, label %1264, label %1265, !prof !2

1264:                                             ; preds = %1255
  call void @llvm.trap() #7
  unreachable

1265:                                             ; preds = %1255
  %1266 = trunc i33 %1261 to i32
  store i32 %1266, i32* %1256, align 4
  br label %1267

1267:                                             ; preds = %1221, %1265, %1248, %1242
  %1268 = phi i1 [ false, %1265 ], [ false, %1248 ], [ true, %1242 ], [ true, %1221 ]
  %1269 = phi %"class.WTF::String"* [ %1249, %1265 ], [ %1249, %1248 ], [ %1246, %1242 ], [ %1222, %1221 ]
  %1270 = phi %"class.WTF::StringImpl"* [ %1250, %1265 ], [ %1250, %1248 ], [ null, %1242 ], [ null, %1221 ]
  %1271 = ptrtoint %"class.WTF::StringImpl"* %1270 to i64
  %1272 = bitcast %"class.WTF::String"* %1269 to i64*
  %1273 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1269, i64 0, i32 0, i32 0
  %1274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1273, align 8
  store i64 %1271, i64* %1272, align 8
  %1275 = icmp eq %"class.WTF::StringImpl"* %1274, null
  br i1 %1275, label %1289, label %1276

1276:                                             ; preds = %1267
  %1277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1278 = load atomic i32, i32* %1277 monotonic, align 4
  %1279 = and i32 %1278, 2
  %1280 = icmp eq i32 %1279, 0
  %1281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1274, i64 0, i32 0
  %1282 = load i32, i32* %1281, align 4
  br i1 %1280, label %1283, label %1285

1283:                                             ; preds = %1276
  %1284 = add i32 %1282, -1
  store i32 %1284, i32* %1281, align 4
  br label %1285

1285:                                             ; preds = %1283, %1276
  %1286 = phi i32 [ %1284, %1283 ], [ %1282, %1276 ]
  %1287 = icmp eq i32 %1286, 0
  br i1 %1287, label %1288, label %1289

1288:                                             ; preds = %1285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1274) #7
  br label %1289

1289:                                             ; preds = %1267, %1285, %1288
  br i1 %1268, label %1303, label %1290

1290:                                             ; preds = %1289
  %1291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1292 = load atomic i32, i32* %1291 monotonic, align 4
  %1293 = and i32 %1292, 2
  %1294 = icmp eq i32 %1293, 0
  %1295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1270, i64 0, i32 0
  %1296 = load i32, i32* %1295, align 4
  br i1 %1294, label %1297, label %1299

1297:                                             ; preds = %1290
  %1298 = add i32 %1296, -1
  store i32 %1298, i32* %1295, align 4
  br label %1299

1299:                                             ; preds = %1297, %1290
  %1300 = phi i32 [ %1298, %1297 ], [ %1296, %1290 ]
  %1301 = icmp eq i32 %1300, 0
  br i1 %1301, label %1302, label %1303

1302:                                             ; preds = %1299
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1270) #7
  br label %1303

1303:                                             ; preds = %1289, %1299, %1302
  %1304 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %18, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1305 = load i8*, i8** %1304, align 8
  store i8* null, i8** %1304, align 8
  %1306 = icmp eq i8* %1305, null
  br i1 %1306, label %1308, label %1307

1307:                                             ; preds = %1303
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1305) #7
  br label %1308

1308:                                             ; preds = %1307, %1303
  %1309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1145, align 8
  %1310 = icmp eq %"class.WTF::StringImpl"* %1309, null
  br i1 %1310, label %1324, label %1311

1311:                                             ; preds = %1308
  %1312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1313 = load atomic i32, i32* %1312 monotonic, align 4
  %1314 = and i32 %1313, 2
  %1315 = icmp eq i32 %1314, 0
  %1316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1309, i64 0, i32 0
  %1317 = load i32, i32* %1316, align 4
  br i1 %1315, label %1318, label %1320

1318:                                             ; preds = %1311
  %1319 = add i32 %1317, -1
  store i32 %1319, i32* %1316, align 4
  br label %1320

1320:                                             ; preds = %1318, %1311
  %1321 = phi i32 [ %1319, %1318 ], [ %1317, %1311 ]
  %1322 = icmp eq i32 %1321, 0
  br i1 %1322, label %1323, label %1324

1323:                                             ; preds = %1320
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1309) #7
  br label %1324

1324:                                             ; preds = %1308, %1320, %1323
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1142) #7
  br label %1347

1325:                                             ; preds = %1214, %1141
  %1326 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %18, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1327 = load i8*, i8** %1326, align 8
  store i8* null, i8** %1326, align 8
  %1328 = icmp eq i8* %1327, null
  br i1 %1328, label %1330, label %1329

1329:                                             ; preds = %1325
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1327) #7
  br label %1330

1330:                                             ; preds = %1329, %1325
  %1331 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1145, align 8
  %1332 = icmp eq %"class.WTF::StringImpl"* %1331, null
  br i1 %1332, label %1346, label %1333

1333:                                             ; preds = %1330
  %1334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1331, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1335 = load atomic i32, i32* %1334 monotonic, align 4
  %1336 = and i32 %1335, 2
  %1337 = icmp eq i32 %1336, 0
  %1338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1331, i64 0, i32 0
  %1339 = load i32, i32* %1338, align 4
  br i1 %1337, label %1340, label %1342

1340:                                             ; preds = %1333
  %1341 = add i32 %1339, -1
  store i32 %1341, i32* %1338, align 4
  br label %1342

1342:                                             ; preds = %1340, %1333
  %1343 = phi i32 [ %1341, %1340 ], [ %1339, %1333 ]
  %1344 = icmp eq i32 %1343, 0
  br i1 %1344, label %1345, label %1346

1345:                                             ; preds = %1342
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1331) #7
  br label %1346

1346:                                             ; preds = %1330, %1342, %1345
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1142) #7
  br label %1868

1347:                                             ; preds = %1324, %1135
  %1348 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %64, i64 7, i32 0
  %1349 = bitcast %"class.v8::Name"** %1348 to %"class.v8::Value"**
  %1350 = load %"class.v8::Value"*, %"class.v8::Value"** %1349, align 8
  %1351 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %53, %"class.v8::Context"* %66, %"class.v8::Value"* %1350) #7
  %1352 = icmp eq %"class.v8::Value"* %1351, null
  br i1 %1352, label %1353, label %1359

1353:                                             ; preds = %1347
  %1354 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1355 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1356 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1355, align 8
  %1357 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1356, i64 5
  %1358 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1357, align 8
  call void %1358(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1354) #7
  br label %1868

1359:                                             ; preds = %1347
  %1360 = bitcast %"class.v8::Value"* %1351 to i64*
  %1361 = load i64, i64* %1360, align 8
  %1362 = and i64 %1361, 3
  %1363 = icmp eq i64 %1362, 1
  br i1 %1363, label %1364, label %1381

1364:                                             ; preds = %1359
  %1365 = add i64 %1361, -1
  %1366 = inttoptr i64 %1365 to i32*
  %1367 = load i32, i32* %1366, align 4
  %1368 = and i64 %1361, -4294967296
  %1369 = zext i32 %1367 to i64
  %1370 = or i64 %1368, %1369
  %1371 = add i64 %1370, 7
  %1372 = inttoptr i64 %1371 to i16*
  %1373 = load i16, i16* %1372, align 2
  %1374 = icmp eq i16 %1373, 67
  br i1 %1374, label %1375, label %1381

1375:                                             ; preds = %1364
  %1376 = add i64 %1361, 23
  %1377 = inttoptr i64 %1376 to i32*
  %1378 = load i32, i32* %1377, align 4
  %1379 = and i32 %1378, -2
  %1380 = icmp eq i32 %1379, 10
  br i1 %1380, label %1388, label %1381

1381:                                             ; preds = %1364, %1359, %1375
  %1382 = call zeroext i16 @_ZN5blink8ToUInt16EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1351, i32 1, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %1383 = load i32, i32* %55, align 8
  %1384 = icmp eq i32 %1383, 0
  br i1 %1384, label %1385, label %1868

1385:                                             ; preds = %1381
  %1386 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 11
  store i16 %1382, i16* %1386, align 8
  %1387 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 3
  store i8 1, i8* %1387, align 2
  br label %1388

1388:                                             ; preds = %1385, %1375
  %1389 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %64, i64 8, i32 0
  %1390 = bitcast %"class.v8::Name"** %1389 to %"class.v8::Value"**
  %1391 = load %"class.v8::Value"*, %"class.v8::Value"** %1390, align 8
  %1392 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %53, %"class.v8::Context"* %66, %"class.v8::Value"* %1391) #7
  %1393 = icmp eq %"class.v8::Value"* %1392, null
  br i1 %1393, label %1394, label %1400

1394:                                             ; preds = %1388
  %1395 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1396 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1397 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1396, align 8
  %1398 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1397, i64 5
  %1399 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1398, align 8
  call void %1399(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1395) #7
  br label %1868

1400:                                             ; preds = %1388
  %1401 = bitcast %"class.v8::Value"* %1392 to i64*
  %1402 = load i64, i64* %1401, align 8
  %1403 = and i64 %1402, 3
  %1404 = icmp eq i64 %1403, 1
  br i1 %1404, label %1405, label %1422

1405:                                             ; preds = %1400
  %1406 = add i64 %1402, -1
  %1407 = inttoptr i64 %1406 to i32*
  %1408 = load i32, i32* %1407, align 4
  %1409 = and i64 %1402, -4294967296
  %1410 = zext i32 %1408 to i64
  %1411 = or i64 %1409, %1410
  %1412 = add i64 %1411, 7
  %1413 = inttoptr i64 %1412 to i16*
  %1414 = load i16, i16* %1413, align 2
  %1415 = icmp eq i16 %1414, 67
  br i1 %1415, label %1416, label %1422

1416:                                             ; preds = %1405
  %1417 = add i64 %1402, 23
  %1418 = inttoptr i64 %1417 to i32*
  %1419 = load i32, i32* %1418, align 4
  %1420 = and i32 %1419, -2
  %1421 = icmp eq i32 %1420, 10
  br i1 %1421, label %1628, label %1422

1422:                                             ; preds = %1405, %1400, %1416
  %1423 = bitcast %"class.blink::V8StringResource"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1423) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1423, i8 -86, i64 152, i1 false)
  %1424 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %21, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1392, %"class.v8::Value"** %1424, align 8
  %1425 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %21, i64 0, i32 1
  store i32 0, i32* %1425, align 8
  %1426 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %21, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1426, align 8
  %1427 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %21, i64 0, i32 3, i32 1
  %1428 = bitcast %"class.std::__1::unique_ptr"* %1427 to i64*
  store i64 0, i64* %1428, align 8
  %1429 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %21, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1429, label %1430, label %1606

1430:                                             ; preds = %1422
  %1431 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1431) #7
  %1432 = load %"class.v8::Value"*, %"class.v8::Value"** %1424, align 8
  %1433 = icmp eq %"class.v8::Value"* %1432, null
  br i1 %1433, label %1438, label %1434, !prof !2

1434:                                             ; preds = %1430
  %1435 = bitcast %"class.v8::Value"* %1432 to %"class.v8::String"*
  %1436 = load i32, i32* %1425, align 8
  %1437 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1435, i32 %1436) #7
  br label %1458

1438:                                             ; preds = %1430
  %1439 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1426, align 8
  %1440 = icmp eq %"class.WTF::StringImpl"* %1439, null
  br i1 %1440, label %1458, label %1441

1441:                                             ; preds = %1438
  %1442 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1439, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1443 = load atomic i32, i32* %1442 monotonic, align 4
  %1444 = and i32 %1443, 2
  %1445 = icmp eq i32 %1444, 0
  br i1 %1445, label %1446, label %1458

1446:                                             ; preds = %1441
  %1447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1439, i64 0, i32 0
  %1448 = load i32, i32* %1447, align 4
  %1449 = zext i32 %1448 to i33
  %1450 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1449, i33 1) #7
  %1451 = extractvalue { i33, i1 } %1450, 1
  %1452 = extractvalue { i33, i1 } %1450, 0
  %1453 = icmp slt i33 %1452, 0
  %1454 = or i1 %1451, %1453
  br i1 %1454, label %1455, label %1456, !prof !2

1455:                                             ; preds = %1446
  call void @llvm.trap() #7
  unreachable

1456:                                             ; preds = %1446
  %1457 = trunc i33 %1452 to i32
  store i32 %1457, i32* %1447, align 4
  br label %1458

1458:                                             ; preds = %1434, %1438, %1441, %1456
  %1459 = phi %"class.WTF::StringImpl"* [ %1437, %1434 ], [ null, %1438 ], [ %1439, %1441 ], [ %1439, %1456 ]
  %1460 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1459, %"class.WTF::StringImpl"** %1460, align 8
  %1461 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1461) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i64 13) #7
  %1462 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %22, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateEE12kValidValues_4, i64 0, i64 0), i64 2, %"class.WTF::String"* nonnull dereferenceable(8) %23, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %1463 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %1464 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1463, align 8
  %1465 = icmp eq %"class.WTF::StringImpl"* %1464, null
  br i1 %1465, label %1479, label %1466

1466:                                             ; preds = %1458
  %1467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1464, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1468 = load atomic i32, i32* %1467 monotonic, align 4
  %1469 = and i32 %1468, 2
  %1470 = icmp eq i32 %1469, 0
  %1471 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1464, i64 0, i32 0
  %1472 = load i32, i32* %1471, align 4
  br i1 %1470, label %1473, label %1475

1473:                                             ; preds = %1466
  %1474 = add i32 %1472, -1
  store i32 %1474, i32* %1471, align 4
  br label %1475

1475:                                             ; preds = %1473, %1466
  %1476 = phi i32 [ %1474, %1473 ], [ %1472, %1466 ]
  %1477 = icmp eq i32 %1476, 0
  br i1 %1477, label %1478, label %1479

1478:                                             ; preds = %1475
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1464) #7
  br label %1479

1479:                                             ; preds = %1458, %1475, %1478
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1461) #7
  %1480 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1460, align 8
  %1481 = icmp eq %"class.WTF::StringImpl"* %1480, null
  br i1 %1481, label %1495, label %1482

1482:                                             ; preds = %1479
  %1483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1480, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1484 = load atomic i32, i32* %1483 monotonic, align 4
  %1485 = and i32 %1484, 2
  %1486 = icmp eq i32 %1485, 0
  %1487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1480, i64 0, i32 0
  %1488 = load i32, i32* %1487, align 4
  br i1 %1486, label %1489, label %1491

1489:                                             ; preds = %1482
  %1490 = add i32 %1488, -1
  store i32 %1490, i32* %1487, align 4
  br label %1491

1491:                                             ; preds = %1489, %1482
  %1492 = phi i32 [ %1490, %1489 ], [ %1488, %1482 ]
  %1493 = icmp eq i32 %1492, 0
  br i1 %1493, label %1494, label %1495

1494:                                             ; preds = %1491
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1480) #7
  br label %1495

1495:                                             ; preds = %1479, %1491, %1494
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1431) #7
  br i1 %1462, label %1496, label %1606

1496:                                             ; preds = %1495
  %1497 = load %"class.v8::Value"*, %"class.v8::Value"** %1424, align 8
  %1498 = icmp eq %"class.v8::Value"* %1497, null
  br i1 %1498, label %1499, label %1523, !prof !2

1499:                                             ; preds = %1496
  %1500 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1426, align 8
  %1501 = icmp eq %"class.WTF::StringImpl"* %1500, null
  br i1 %1501, label %1502, label %1504

1502:                                             ; preds = %1499
  %1503 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 12
  br label %1548

1504:                                             ; preds = %1499
  %1505 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1500, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1506 = load atomic i32, i32* %1505 monotonic, align 4
  %1507 = and i32 %1506, 2
  %1508 = icmp eq i32 %1507, 0
  br i1 %1508, label %1509, label %1521

1509:                                             ; preds = %1504
  %1510 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1500, i64 0, i32 0
  %1511 = load i32, i32* %1510, align 4
  %1512 = zext i32 %1511 to i33
  %1513 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1512, i33 1) #7
  %1514 = extractvalue { i33, i1 } %1513, 1
  %1515 = extractvalue { i33, i1 } %1513, 0
  %1516 = icmp slt i33 %1515, 0
  %1517 = or i1 %1514, %1516
  br i1 %1517, label %1518, label %1519, !prof !2

1518:                                             ; preds = %1509
  call void @llvm.trap() #7
  unreachable

1519:                                             ; preds = %1509
  %1520 = trunc i33 %1515 to i32
  store i32 %1520, i32* %1510, align 4
  br label %1521

1521:                                             ; preds = %1504, %1519
  %1522 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 12
  br label %1529

1523:                                             ; preds = %1496
  %1524 = bitcast %"class.v8::Value"* %1497 to %"class.v8::String"*
  %1525 = load i32, i32* %1425, align 8
  %1526 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1524, i32 %1525) #7
  %1527 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 12
  %1528 = icmp eq %"class.WTF::StringImpl"* %1526, null
  br i1 %1528, label %1548, label %1529

1529:                                             ; preds = %1521, %1523
  %1530 = phi %"class.WTF::String"* [ %1522, %1521 ], [ %1527, %1523 ]
  %1531 = phi %"class.WTF::StringImpl"* [ %1500, %1521 ], [ %1526, %1523 ]
  %1532 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1531, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1533 = load atomic i32, i32* %1532 monotonic, align 4
  %1534 = and i32 %1533, 2
  %1535 = icmp eq i32 %1534, 0
  br i1 %1535, label %1536, label %1548

1536:                                             ; preds = %1529
  %1537 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1531, i64 0, i32 0
  %1538 = load i32, i32* %1537, align 4
  %1539 = zext i32 %1538 to i33
  %1540 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1539, i33 1) #7
  %1541 = extractvalue { i33, i1 } %1540, 1
  %1542 = extractvalue { i33, i1 } %1540, 0
  %1543 = icmp slt i33 %1542, 0
  %1544 = or i1 %1541, %1543
  br i1 %1544, label %1545, label %1546, !prof !2

1545:                                             ; preds = %1536
  call void @llvm.trap() #7
  unreachable

1546:                                             ; preds = %1536
  %1547 = trunc i33 %1542 to i32
  store i32 %1547, i32* %1537, align 4
  br label %1548

1548:                                             ; preds = %1502, %1546, %1529, %1523
  %1549 = phi i1 [ false, %1546 ], [ false, %1529 ], [ true, %1523 ], [ true, %1502 ]
  %1550 = phi %"class.WTF::String"* [ %1530, %1546 ], [ %1530, %1529 ], [ %1527, %1523 ], [ %1503, %1502 ]
  %1551 = phi %"class.WTF::StringImpl"* [ %1531, %1546 ], [ %1531, %1529 ], [ null, %1523 ], [ null, %1502 ]
  %1552 = ptrtoint %"class.WTF::StringImpl"* %1551 to i64
  %1553 = bitcast %"class.WTF::String"* %1550 to i64*
  %1554 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1550, i64 0, i32 0, i32 0
  %1555 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1554, align 8
  store i64 %1552, i64* %1553, align 8
  %1556 = icmp eq %"class.WTF::StringImpl"* %1555, null
  br i1 %1556, label %1570, label %1557

1557:                                             ; preds = %1548
  %1558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1555, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1559 = load atomic i32, i32* %1558 monotonic, align 4
  %1560 = and i32 %1559, 2
  %1561 = icmp eq i32 %1560, 0
  %1562 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1555, i64 0, i32 0
  %1563 = load i32, i32* %1562, align 4
  br i1 %1561, label %1564, label %1566

1564:                                             ; preds = %1557
  %1565 = add i32 %1563, -1
  store i32 %1565, i32* %1562, align 4
  br label %1566

1566:                                             ; preds = %1564, %1557
  %1567 = phi i32 [ %1565, %1564 ], [ %1563, %1557 ]
  %1568 = icmp eq i32 %1567, 0
  br i1 %1568, label %1569, label %1570

1569:                                             ; preds = %1566
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1555) #7
  br label %1570

1570:                                             ; preds = %1548, %1566, %1569
  br i1 %1549, label %1584, label %1571

1571:                                             ; preds = %1570
  %1572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1551, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1573 = load atomic i32, i32* %1572 monotonic, align 4
  %1574 = and i32 %1573, 2
  %1575 = icmp eq i32 %1574, 0
  %1576 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1551, i64 0, i32 0
  %1577 = load i32, i32* %1576, align 4
  br i1 %1575, label %1578, label %1580

1578:                                             ; preds = %1571
  %1579 = add i32 %1577, -1
  store i32 %1579, i32* %1576, align 4
  br label %1580

1580:                                             ; preds = %1578, %1571
  %1581 = phi i32 [ %1579, %1578 ], [ %1577, %1571 ]
  %1582 = icmp eq i32 %1581, 0
  br i1 %1582, label %1583, label %1584

1583:                                             ; preds = %1580
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1551) #7
  br label %1584

1584:                                             ; preds = %1570, %1580, %1583
  %1585 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %21, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1586 = load i8*, i8** %1585, align 8
  store i8* null, i8** %1585, align 8
  %1587 = icmp eq i8* %1586, null
  br i1 %1587, label %1589, label %1588

1588:                                             ; preds = %1584
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1586) #7
  br label %1589

1589:                                             ; preds = %1588, %1584
  %1590 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1426, align 8
  %1591 = icmp eq %"class.WTF::StringImpl"* %1590, null
  br i1 %1591, label %1605, label %1592

1592:                                             ; preds = %1589
  %1593 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1590, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1594 = load atomic i32, i32* %1593 monotonic, align 4
  %1595 = and i32 %1594, 2
  %1596 = icmp eq i32 %1595, 0
  %1597 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1590, i64 0, i32 0
  %1598 = load i32, i32* %1597, align 4
  br i1 %1596, label %1599, label %1601

1599:                                             ; preds = %1592
  %1600 = add i32 %1598, -1
  store i32 %1600, i32* %1597, align 4
  br label %1601

1601:                                             ; preds = %1599, %1592
  %1602 = phi i32 [ %1600, %1599 ], [ %1598, %1592 ]
  %1603 = icmp eq i32 %1602, 0
  br i1 %1603, label %1604, label %1605

1604:                                             ; preds = %1601
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1590) #7
  br label %1605

1605:                                             ; preds = %1589, %1601, %1604
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1423) #7
  br label %1628

1606:                                             ; preds = %1495, %1422
  %1607 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %21, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1608 = load i8*, i8** %1607, align 8
  store i8* null, i8** %1607, align 8
  %1609 = icmp eq i8* %1608, null
  br i1 %1609, label %1611, label %1610

1610:                                             ; preds = %1606
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1608) #7
  br label %1611

1611:                                             ; preds = %1610, %1606
  %1612 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1426, align 8
  %1613 = icmp eq %"class.WTF::StringImpl"* %1612, null
  br i1 %1613, label %1627, label %1614

1614:                                             ; preds = %1611
  %1615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1612, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1616 = load atomic i32, i32* %1615 monotonic, align 4
  %1617 = and i32 %1616, 2
  %1618 = icmp eq i32 %1617, 0
  %1619 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1612, i64 0, i32 0
  %1620 = load i32, i32* %1619, align 4
  br i1 %1618, label %1621, label %1623

1621:                                             ; preds = %1614
  %1622 = add i32 %1620, -1
  store i32 %1622, i32* %1619, align 4
  br label %1623

1623:                                             ; preds = %1621, %1614
  %1624 = phi i32 [ %1622, %1621 ], [ %1620, %1614 ]
  %1625 = icmp eq i32 %1624, 0
  br i1 %1625, label %1626, label %1627

1626:                                             ; preds = %1623
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1612) #7
  br label %1627

1627:                                             ; preds = %1611, %1623, %1626
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1423) #7
  br label %1868

1628:                                             ; preds = %1605, %1416
  %1629 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %64, i64 9, i32 0
  %1630 = bitcast %"class.v8::Name"** %1629 to %"class.v8::Value"**
  %1631 = load %"class.v8::Value"*, %"class.v8::Value"** %1630, align 8
  %1632 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %53, %"class.v8::Context"* %66, %"class.v8::Value"* %1631) #7
  %1633 = icmp eq %"class.v8::Value"* %1632, null
  br i1 %1633, label %1634, label %1640

1634:                                             ; preds = %1628
  %1635 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1636 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1637 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1636, align 8
  %1638 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1637, i64 5
  %1639 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1638, align 8
  call void %1639(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1635) #7
  br label %1868

1640:                                             ; preds = %1628
  %1641 = bitcast %"class.v8::Value"* %1632 to i64*
  %1642 = load i64, i64* %1641, align 8
  %1643 = and i64 %1642, 3
  %1644 = icmp eq i64 %1643, 1
  br i1 %1644, label %1645, label %1662

1645:                                             ; preds = %1640
  %1646 = add i64 %1642, -1
  %1647 = inttoptr i64 %1646 to i32*
  %1648 = load i32, i32* %1647, align 4
  %1649 = and i64 %1642, -4294967296
  %1650 = zext i32 %1648 to i64
  %1651 = or i64 %1649, %1650
  %1652 = add i64 %1651, 7
  %1653 = inttoptr i64 %1652 to i16*
  %1654 = load i16, i16* %1653, align 2
  %1655 = icmp eq i16 %1654, 67
  br i1 %1655, label %1656, label %1662

1656:                                             ; preds = %1645
  %1657 = add i64 %1642, 23
  %1658 = inttoptr i64 %1657 to i32*
  %1659 = load i32, i32* %1658, align 4
  %1660 = and i32 %1659, -2
  %1661 = icmp eq i32 %1660, 10
  br i1 %1661, label %1868, label %1662

1662:                                             ; preds = %1645, %1640, %1656
  %1663 = bitcast %"class.blink::V8StringResource"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1663) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1663, i8 -86, i64 152, i1 false)
  %1664 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %24, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1632, %"class.v8::Value"** %1664, align 8
  %1665 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %24, i64 0, i32 1
  store i32 0, i32* %1665, align 8
  %1666 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %24, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1666, align 8
  %1667 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %24, i64 0, i32 3, i32 1
  %1668 = bitcast %"class.std::__1::unique_ptr"* %1667 to i64*
  store i64 0, i64* %1668, align 8
  %1669 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %24, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1669, label %1670, label %1846

1670:                                             ; preds = %1662
  %1671 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1671) #7
  %1672 = load %"class.v8::Value"*, %"class.v8::Value"** %1664, align 8
  %1673 = icmp eq %"class.v8::Value"* %1672, null
  br i1 %1673, label %1678, label %1674, !prof !2

1674:                                             ; preds = %1670
  %1675 = bitcast %"class.v8::Value"* %1672 to %"class.v8::String"*
  %1676 = load i32, i32* %1665, align 8
  %1677 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1675, i32 %1676) #7
  br label %1698

1678:                                             ; preds = %1670
  %1679 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1666, align 8
  %1680 = icmp eq %"class.WTF::StringImpl"* %1679, null
  br i1 %1680, label %1698, label %1681

1681:                                             ; preds = %1678
  %1682 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1679, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1683 = load atomic i32, i32* %1682 monotonic, align 4
  %1684 = and i32 %1683, 2
  %1685 = icmp eq i32 %1684, 0
  br i1 %1685, label %1686, label %1698

1686:                                             ; preds = %1681
  %1687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1679, i64 0, i32 0
  %1688 = load i32, i32* %1687, align 4
  %1689 = zext i32 %1688 to i33
  %1690 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1689, i33 1) #7
  %1691 = extractvalue { i33, i1 } %1690, 1
  %1692 = extractvalue { i33, i1 } %1690, 0
  %1693 = icmp slt i33 %1692, 0
  %1694 = or i1 %1691, %1693
  br i1 %1694, label %1695, label %1696, !prof !2

1695:                                             ; preds = %1686
  call void @llvm.trap() #7
  unreachable

1696:                                             ; preds = %1686
  %1697 = trunc i33 %1692 to i32
  store i32 %1697, i32* %1687, align 4
  br label %1698

1698:                                             ; preds = %1674, %1678, %1681, %1696
  %1699 = phi %"class.WTF::StringImpl"* [ %1677, %1674 ], [ null, %1678 ], [ %1679, %1681 ], [ %1679, %1696 ]
  %1700 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1699, %"class.WTF::StringImpl"** %1700, align 8
  %1701 = bitcast %"class.WTF::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1701) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %26, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i64 13) #7
  %1702 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %25, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateEE12kValidValues_5, i64 0, i64 0), i64 2, %"class.WTF::String"* nonnull dereferenceable(8) %26, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %1703 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %1704 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1703, align 8
  %1705 = icmp eq %"class.WTF::StringImpl"* %1704, null
  br i1 %1705, label %1719, label %1706

1706:                                             ; preds = %1698
  %1707 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1704, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1708 = load atomic i32, i32* %1707 monotonic, align 4
  %1709 = and i32 %1708, 2
  %1710 = icmp eq i32 %1709, 0
  %1711 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1704, i64 0, i32 0
  %1712 = load i32, i32* %1711, align 4
  br i1 %1710, label %1713, label %1715

1713:                                             ; preds = %1706
  %1714 = add i32 %1712, -1
  store i32 %1714, i32* %1711, align 4
  br label %1715

1715:                                             ; preds = %1713, %1706
  %1716 = phi i32 [ %1714, %1713 ], [ %1712, %1706 ]
  %1717 = icmp eq i32 %1716, 0
  br i1 %1717, label %1718, label %1719

1718:                                             ; preds = %1715
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1704) #7
  br label %1719

1719:                                             ; preds = %1698, %1715, %1718
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1701) #7
  %1720 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1700, align 8
  %1721 = icmp eq %"class.WTF::StringImpl"* %1720, null
  br i1 %1721, label %1735, label %1722

1722:                                             ; preds = %1719
  %1723 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1720, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1724 = load atomic i32, i32* %1723 monotonic, align 4
  %1725 = and i32 %1724, 2
  %1726 = icmp eq i32 %1725, 0
  %1727 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1720, i64 0, i32 0
  %1728 = load i32, i32* %1727, align 4
  br i1 %1726, label %1729, label %1731

1729:                                             ; preds = %1722
  %1730 = add i32 %1728, -1
  store i32 %1730, i32* %1727, align 4
  br label %1731

1731:                                             ; preds = %1729, %1722
  %1732 = phi i32 [ %1730, %1729 ], [ %1728, %1722 ]
  %1733 = icmp eq i32 %1732, 0
  br i1 %1733, label %1734, label %1735

1734:                                             ; preds = %1731
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1720) #7
  br label %1735

1735:                                             ; preds = %1719, %1731, %1734
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1671) #7
  br i1 %1702, label %1736, label %1846

1736:                                             ; preds = %1735
  %1737 = load %"class.v8::Value"*, %"class.v8::Value"** %1664, align 8
  %1738 = icmp eq %"class.v8::Value"* %1737, null
  br i1 %1738, label %1739, label %1763, !prof !2

1739:                                             ; preds = %1736
  %1740 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1666, align 8
  %1741 = icmp eq %"class.WTF::StringImpl"* %1740, null
  br i1 %1741, label %1742, label %1744

1742:                                             ; preds = %1739
  %1743 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 13
  br label %1788

1744:                                             ; preds = %1739
  %1745 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1740, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1746 = load atomic i32, i32* %1745 monotonic, align 4
  %1747 = and i32 %1746, 2
  %1748 = icmp eq i32 %1747, 0
  br i1 %1748, label %1749, label %1761

1749:                                             ; preds = %1744
  %1750 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1740, i64 0, i32 0
  %1751 = load i32, i32* %1750, align 4
  %1752 = zext i32 %1751 to i33
  %1753 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1752, i33 1) #7
  %1754 = extractvalue { i33, i1 } %1753, 1
  %1755 = extractvalue { i33, i1 } %1753, 0
  %1756 = icmp slt i33 %1755, 0
  %1757 = or i1 %1754, %1756
  br i1 %1757, label %1758, label %1759, !prof !2

1758:                                             ; preds = %1749
  call void @llvm.trap() #7
  unreachable

1759:                                             ; preds = %1749
  %1760 = trunc i33 %1755 to i32
  store i32 %1760, i32* %1750, align 4
  br label %1761

1761:                                             ; preds = %1744, %1759
  %1762 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 13
  br label %1769

1763:                                             ; preds = %1736
  %1764 = bitcast %"class.v8::Value"* %1737 to %"class.v8::String"*
  %1765 = load i32, i32* %1665, align 8
  %1766 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1764, i32 %1765) #7
  %1767 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %2, i64 0, i32 13
  %1768 = icmp eq %"class.WTF::StringImpl"* %1766, null
  br i1 %1768, label %1788, label %1769

1769:                                             ; preds = %1761, %1763
  %1770 = phi %"class.WTF::String"* [ %1762, %1761 ], [ %1767, %1763 ]
  %1771 = phi %"class.WTF::StringImpl"* [ %1740, %1761 ], [ %1766, %1763 ]
  %1772 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1771, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1773 = load atomic i32, i32* %1772 monotonic, align 4
  %1774 = and i32 %1773, 2
  %1775 = icmp eq i32 %1774, 0
  br i1 %1775, label %1776, label %1788

1776:                                             ; preds = %1769
  %1777 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1771, i64 0, i32 0
  %1778 = load i32, i32* %1777, align 4
  %1779 = zext i32 %1778 to i33
  %1780 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1779, i33 1) #7
  %1781 = extractvalue { i33, i1 } %1780, 1
  %1782 = extractvalue { i33, i1 } %1780, 0
  %1783 = icmp slt i33 %1782, 0
  %1784 = or i1 %1781, %1783
  br i1 %1784, label %1785, label %1786, !prof !2

1785:                                             ; preds = %1776
  call void @llvm.trap() #7
  unreachable

1786:                                             ; preds = %1776
  %1787 = trunc i33 %1782 to i32
  store i32 %1787, i32* %1777, align 4
  br label %1788

1788:                                             ; preds = %1742, %1786, %1769, %1763
  %1789 = phi i1 [ false, %1786 ], [ false, %1769 ], [ true, %1763 ], [ true, %1742 ]
  %1790 = phi %"class.WTF::String"* [ %1770, %1786 ], [ %1770, %1769 ], [ %1767, %1763 ], [ %1743, %1742 ]
  %1791 = phi %"class.WTF::StringImpl"* [ %1771, %1786 ], [ %1771, %1769 ], [ null, %1763 ], [ null, %1742 ]
  %1792 = ptrtoint %"class.WTF::StringImpl"* %1791 to i64
  %1793 = bitcast %"class.WTF::String"* %1790 to i64*
  %1794 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1790, i64 0, i32 0, i32 0
  %1795 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1794, align 8
  store i64 %1792, i64* %1793, align 8
  %1796 = icmp eq %"class.WTF::StringImpl"* %1795, null
  br i1 %1796, label %1810, label %1797

1797:                                             ; preds = %1788
  %1798 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1795, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1799 = load atomic i32, i32* %1798 monotonic, align 4
  %1800 = and i32 %1799, 2
  %1801 = icmp eq i32 %1800, 0
  %1802 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1795, i64 0, i32 0
  %1803 = load i32, i32* %1802, align 4
  br i1 %1801, label %1804, label %1806

1804:                                             ; preds = %1797
  %1805 = add i32 %1803, -1
  store i32 %1805, i32* %1802, align 4
  br label %1806

1806:                                             ; preds = %1804, %1797
  %1807 = phi i32 [ %1805, %1804 ], [ %1803, %1797 ]
  %1808 = icmp eq i32 %1807, 0
  br i1 %1808, label %1809, label %1810

1809:                                             ; preds = %1806
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1795) #7
  br label %1810

1810:                                             ; preds = %1788, %1806, %1809
  br i1 %1789, label %1824, label %1811

1811:                                             ; preds = %1810
  %1812 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1791, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1813 = load atomic i32, i32* %1812 monotonic, align 4
  %1814 = and i32 %1813, 2
  %1815 = icmp eq i32 %1814, 0
  %1816 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1791, i64 0, i32 0
  %1817 = load i32, i32* %1816, align 4
  br i1 %1815, label %1818, label %1820

1818:                                             ; preds = %1811
  %1819 = add i32 %1817, -1
  store i32 %1819, i32* %1816, align 4
  br label %1820

1820:                                             ; preds = %1818, %1811
  %1821 = phi i32 [ %1819, %1818 ], [ %1817, %1811 ]
  %1822 = icmp eq i32 %1821, 0
  br i1 %1822, label %1823, label %1824

1823:                                             ; preds = %1820
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1791) #7
  br label %1824

1824:                                             ; preds = %1810, %1820, %1823
  %1825 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %24, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1826 = load i8*, i8** %1825, align 8
  store i8* null, i8** %1825, align 8
  %1827 = icmp eq i8* %1826, null
  br i1 %1827, label %1829, label %1828

1828:                                             ; preds = %1824
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1826) #7
  br label %1829

1829:                                             ; preds = %1828, %1824
  %1830 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1666, align 8
  %1831 = icmp eq %"class.WTF::StringImpl"* %1830, null
  br i1 %1831, label %1845, label %1832

1832:                                             ; preds = %1829
  %1833 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1830, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1834 = load atomic i32, i32* %1833 monotonic, align 4
  %1835 = and i32 %1834, 2
  %1836 = icmp eq i32 %1835, 0
  %1837 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1830, i64 0, i32 0
  %1838 = load i32, i32* %1837, align 4
  br i1 %1836, label %1839, label %1841

1839:                                             ; preds = %1832
  %1840 = add i32 %1838, -1
  store i32 %1840, i32* %1837, align 4
  br label %1841

1841:                                             ; preds = %1839, %1832
  %1842 = phi i32 [ %1840, %1839 ], [ %1838, %1832 ]
  %1843 = icmp eq i32 %1842, 0
  br i1 %1843, label %1844, label %1845

1844:                                             ; preds = %1841
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1830) #7
  br label %1845

1845:                                             ; preds = %1829, %1841, %1844
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1663) #7
  br label %1868

1846:                                             ; preds = %1735, %1662
  %1847 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %24, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1848 = load i8*, i8** %1847, align 8
  store i8* null, i8** %1847, align 8
  %1849 = icmp eq i8* %1848, null
  br i1 %1849, label %1851, label %1850

1850:                                             ; preds = %1846
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1848) #7
  br label %1851

1851:                                             ; preds = %1850, %1846
  %1852 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1666, align 8
  %1853 = icmp eq %"class.WTF::StringImpl"* %1852, null
  br i1 %1853, label %1867, label %1854

1854:                                             ; preds = %1851
  %1855 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1852, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1856 = load atomic i32, i32* %1855 monotonic, align 4
  %1857 = and i32 %1856, 2
  %1858 = icmp eq i32 %1857, 0
  %1859 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1852, i64 0, i32 0
  %1860 = load i32, i32* %1859, align 4
  br i1 %1858, label %1861, label %1863

1861:                                             ; preds = %1854
  %1862 = add i32 %1860, -1
  store i32 %1862, i32* %1859, align 4
  br label %1863

1863:                                             ; preds = %1861, %1854
  %1864 = phi i32 [ %1862, %1861 ], [ %1860, %1854 ]
  %1865 = icmp eq i32 %1864, 0
  br i1 %1865, label %1866, label %1867

1866:                                             ; preds = %1863
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1852) #7
  br label %1867

1867:                                             ; preds = %1851, %1863, %1866
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1663) #7
  br label %1868

1868:                                             ; preds = %1381, %1100, %1059, %311, %544, %791, %1024, %1072, %1353, %1634, %1867, %1845, %1656, %1627, %1394, %1346, %1113, %1031, %784, %551, %304, %71
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %65) #7
  br label %1869

1869:                                             ; preds = %52, %44, %44, %4, %1868, %51
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink25V8GPUObjectDescriptorBase6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_23GPUObjectDescriptorBaseERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::GPUObjectDescriptorBase"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = tail call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* %0)
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %7 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %6) #7
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::Value"*, %"class.v8::Value"** %8, align 8
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #7
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %9, %"class.v8::Context"* %10) #7
  %12 = ptrtoint %"class.v8::String"* %11 to i64
  %13 = bitcast %"class.blink::V8StringResource"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %"class.v8::String"* %11, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %3) #7
  %17 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %18 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, i64 5
  %20 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %19, align 8
  call void %20(%"class.blink::ExceptionState"* %1, %"class.v8::Value"* %16) #7
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi i1 [ false, %15 ], [ true, %5 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #7
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi i1 [ true, %2 ], [ %22, %21 ]
  ret i1 %24
}

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink20GPUSamplerDescriptor8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::GPUSamplerDescriptor"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %5 = tail call zeroext i1 @_ZN5blink24toV8GPUSamplerDescriptorEPKNS_20GPUSamplerDescriptorEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::GPUSamplerDescriptor"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink24toV8GPUSamplerDescriptorEPKNS_20GPUSamplerDescriptorEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::GPUSamplerDescriptor"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %0, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZN5blink27toV8GPUObjectDescriptorBaseEPKNS_23GPUObjectDescriptorBaseEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::GPUObjectDescriptorBase"* %12, %"class.v8::Object"* %1, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  br i1 %13, label %14, label %268

14:                                               ; preds = %4
  %15 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %16 = add i64 %15, 8
  %17 = inttoptr i64 %16 to %"class.blink::V8PerIsolateData"**
  %18 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %17, align 8
  %19 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %18, i8* bitcast ([10 x i8*]* @_ZZN5blinkL33eternalV8GPUSamplerDescriptorKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.314"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.314"*)) #7
  %20 = extractvalue { i64, %"class.v8::Eternal"* } %19, 1
  %21 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %22 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %0, i64 0, i32 4, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %14
  %26 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #7
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %32 = bitcast i8** %31 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %29, i32* %33, align 8
  %34 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #7
  br label %39

35:                                               ; preds = %14
  %36 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i32 0, i32 13) #7
  %37 = icmp eq %"class.v8::String"* %36, null
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %35
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %39

39:                                               ; preds = %38, %35, %25
  %40 = phi %"class.v8::String"* [ %34, %25 ], [ %36, %35 ], [ null, %38 ]
  %41 = bitcast %"class.v8::String"* %40 to %"class.v8::Value"*
  %42 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 0, i32 0
  %43 = load %"class.v8::Name"*, %"class.v8::Name"** %42, align 8
  %44 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %43, %"class.v8::Value"* %41) #7
  %45 = trunc i16 %44 to i8
  %46 = icmp ne i8 %45, 0
  %47 = icmp ugt i16 %44, 255
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %268

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %0, i64 0, i32 5, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #7
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 1
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %60 = bitcast i8** %59 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %57, i32* %61, align 8
  %62 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #7
  br label %67

63:                                               ; preds = %49
  %64 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i32 0, i32 13) #7
  %65 = icmp eq %"class.v8::String"* %64, null
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %63
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %67

67:                                               ; preds = %66, %63, %53
  %68 = phi %"class.v8::String"* [ %62, %53 ], [ %64, %63 ], [ null, %66 ]
  %69 = bitcast %"class.v8::String"* %68 to %"class.v8::Value"*
  %70 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 1, i32 0
  %71 = load %"class.v8::Name"*, %"class.v8::Name"** %70, align 8
  %72 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %71, %"class.v8::Value"* %69) #7
  %73 = trunc i16 %72 to i8
  %74 = icmp ne i8 %73, 0
  %75 = icmp ugt i16 %72, 255
  %76 = and i1 %75, %74
  br i1 %76, label %77, label %268

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %0, i64 0, i32 6, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %91, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #7
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %83, align 8
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 1
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %88 = bitcast i8** %87 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %85, i32* %89, align 8
  %90 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #7
  br label %95

91:                                               ; preds = %77
  %92 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i32 0, i32 13) #7
  %93 = icmp eq %"class.v8::String"* %92, null
  br i1 %93, label %94, label %95, !prof !2

94:                                               ; preds = %91
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %95

95:                                               ; preds = %94, %91, %81
  %96 = phi %"class.v8::String"* [ %90, %81 ], [ %92, %91 ], [ null, %94 ]
  %97 = bitcast %"class.v8::String"* %96 to %"class.v8::Value"*
  %98 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 2, i32 0
  %99 = load %"class.v8::Name"*, %"class.v8::Name"** %98, align 8
  %100 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %99, %"class.v8::Value"* %97) #7
  %101 = trunc i16 %100 to i8
  %102 = icmp ne i8 %101, 0
  %103 = icmp ugt i16 %100, 255
  %104 = and i1 %103, %102
  br i1 %104, label %105, label %268

105:                                              ; preds = %95
  %106 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %0, i64 0, i32 7, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %127, label %109

109:                                              ; preds = %105
  %110 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #7
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %111, align 8
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 1
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %116 = bitcast i8** %115 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %116, align 8
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %113, i32* %117, align 8
  %118 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #7
  %119 = bitcast %"class.v8::String"* %118 to %"class.v8::Value"*
  %120 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 3, i32 0
  %121 = load %"class.v8::Name"*, %"class.v8::Name"** %120, align 8
  %122 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %121, %"class.v8::Value"* %119) #7
  %123 = trunc i16 %122 to i8
  %124 = icmp ne i8 %123, 0
  %125 = icmp ugt i16 %122, 255
  %126 = and i1 %125, %124
  br i1 %126, label %127, label %268

127:                                              ; preds = %105, %109
  %128 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %0, i64 0, i32 1
  %129 = load i8, i8* %128, align 8, !range !3
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %135, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %0, i64 0, i32 8
  %133 = load float, float* %132, align 8
  %134 = fpext float %133 to double
  br label %135

135:                                              ; preds = %127, %131
  %136 = phi double [ %134, %131 ], [ 0x41EFFFFFFFE00000, %127 ]
  %137 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %136) #7
  %138 = bitcast %"class.v8::Number"* %137 to %"class.v8::Value"*
  %139 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 4, i32 0
  %140 = load %"class.v8::Name"*, %"class.v8::Name"** %139, align 8
  %141 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %140, %"class.v8::Value"* %138) #7
  %142 = trunc i16 %141 to i8
  %143 = icmp ne i8 %142, 0
  %144 = icmp ugt i16 %141, 255
  %145 = and i1 %144, %143
  br i1 %145, label %146, label %268

146:                                              ; preds = %135
  %147 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %0, i64 0, i32 2
  %148 = load i8, i8* %147, align 1, !range !3
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %154, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %0, i64 0, i32 9
  %152 = load float, float* %151, align 4
  %153 = fpext float %152 to double
  br label %154

154:                                              ; preds = %146, %150
  %155 = phi double [ %153, %150 ], [ 0.000000e+00, %146 ]
  %156 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %155) #7
  %157 = bitcast %"class.v8::Number"* %156 to %"class.v8::Value"*
  %158 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 5, i32 0
  %159 = load %"class.v8::Name"*, %"class.v8::Name"** %158, align 8
  %160 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %159, %"class.v8::Value"* %157) #7
  %161 = trunc i16 %160 to i8
  %162 = icmp ne i8 %161, 0
  %163 = icmp ugt i16 %160, 255
  %164 = and i1 %163, %162
  br i1 %164, label %165, label %268

165:                                              ; preds = %154
  %166 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %0, i64 0, i32 10, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %179, label %169

169:                                              ; preds = %165
  %170 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #7
  %171 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %171, align 8
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 1
  %175 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %176 = bitcast i8** %175 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %174, %"class.WTF::StringImpl"** %176, align 8
  %177 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %173, i32* %177, align 8
  %178 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #7
  br label %183

179:                                              ; preds = %165
  %180 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i32 0, i32 7) #7
  %181 = icmp eq %"class.v8::String"* %180, null
  br i1 %181, label %182, label %183, !prof !2

182:                                              ; preds = %179
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %183

183:                                              ; preds = %182, %179, %169
  %184 = phi %"class.v8::String"* [ %178, %169 ], [ %180, %179 ], [ null, %182 ]
  %185 = bitcast %"class.v8::String"* %184 to %"class.v8::Value"*
  %186 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 6, i32 0
  %187 = load %"class.v8::Name"*, %"class.v8::Name"** %186, align 8
  %188 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %187, %"class.v8::Value"* %185) #7
  %189 = trunc i16 %188 to i8
  %190 = icmp ne i8 %189, 0
  %191 = icmp ugt i16 %188, 255
  %192 = and i1 %191, %190
  br i1 %192, label %193, label %268

193:                                              ; preds = %183
  %194 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %0, i64 0, i32 3
  %195 = load i8, i8* %194, align 2, !range !3
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %201, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %0, i64 0, i32 11
  %199 = load i16, i16* %198, align 8
  %200 = zext i16 %199 to i32
  br label %201

201:                                              ; preds = %193, %197
  %202 = phi i32 [ %200, %197 ], [ 1, %193 ]
  %203 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %202) #7
  %204 = bitcast %"class.v8::Integer"* %203 to %"class.v8::Value"*
  %205 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 7, i32 0
  %206 = load %"class.v8::Name"*, %"class.v8::Name"** %205, align 8
  %207 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %206, %"class.v8::Value"* %204) #7
  %208 = trunc i16 %207 to i8
  %209 = icmp ne i8 %208, 0
  %210 = icmp ugt i16 %207, 255
  %211 = and i1 %210, %209
  br i1 %211, label %212, label %268

212:                                              ; preds = %201
  %213 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %0, i64 0, i32 12, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %226, label %216

216:                                              ; preds = %212
  %217 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #7
  %218 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %214, %"class.WTF::StringImpl"** %218, align 8
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 1
  %222 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %223 = bitcast i8** %222 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %221, %"class.WTF::StringImpl"** %223, align 8
  %224 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %220, i32* %224, align 8
  %225 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #7
  br label %230

226:                                              ; preds = %212
  %227 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i32 0, i32 7) #7
  %228 = icmp eq %"class.v8::String"* %227, null
  br i1 %228, label %229, label %230, !prof !2

229:                                              ; preds = %226
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %230

230:                                              ; preds = %229, %226, %216
  %231 = phi %"class.v8::String"* [ %225, %216 ], [ %227, %226 ], [ null, %229 ]
  %232 = bitcast %"class.v8::String"* %231 to %"class.v8::Value"*
  %233 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 8, i32 0
  %234 = load %"class.v8::Name"*, %"class.v8::Name"** %233, align 8
  %235 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %234, %"class.v8::Value"* %232) #7
  %236 = trunc i16 %235 to i8
  %237 = icmp ne i8 %236, 0
  %238 = icmp ugt i16 %235, 255
  %239 = and i1 %238, %237
  br i1 %239, label %240, label %268

240:                                              ; preds = %230
  %241 = getelementptr inbounds %"class.blink::GPUSamplerDescriptor", %"class.blink::GPUSamplerDescriptor"* %0, i64 0, i32 13, i32 0, i32 0
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %254, label %244

244:                                              ; preds = %240
  %245 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %245) #7
  %246 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %242, %"class.WTF::StringImpl"** %246, align 8
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 1
  %248 = load i32, i32* %247, align 4
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 1
  %250 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %251 = bitcast i8** %250 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %249, %"class.WTF::StringImpl"** %251, align 8
  %252 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %248, i32* %252, align 8
  %253 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %245) #7
  br label %258

254:                                              ; preds = %240
  %255 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i32 0, i32 7) #7
  %256 = icmp eq %"class.v8::String"* %255, null
  br i1 %256, label %257, label %258, !prof !2

257:                                              ; preds = %254
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %258

258:                                              ; preds = %257, %254, %244
  %259 = phi %"class.v8::String"* [ %253, %244 ], [ %255, %254 ], [ null, %257 ]
  %260 = bitcast %"class.v8::String"* %259 to %"class.v8::Value"*
  %261 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 9, i32 0
  %262 = load %"class.v8::Name"*, %"class.v8::Name"** %261, align 8
  %263 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %262, %"class.v8::Value"* %260) #7
  %264 = trunc i16 %263 to i8
  %265 = icmp ne i8 %264, 0
  %266 = icmp ugt i16 %263, 255
  %267 = and i1 %266, %265
  br label %268

268:                                              ; preds = %39, %95, %135, %183, %258, %230, %201, %154, %109, %67, %4
  %269 = phi i1 [ false, %4 ], [ false, %39 ], [ false, %67 ], [ false, %95 ], [ false, %109 ], [ false, %135 ], [ false, %154 ], [ false, %183 ], [ false, %201 ], [ %267, %258 ], [ false, %230 ]
  ret i1 %269
}

declare zeroext i1 @_ZN5blink27toV8GPUObjectDescriptorBaseEPKNS_23GPUObjectDescriptorBaseEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::GPUObjectDescriptorBase"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #1

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::GPUSamplerDescriptor"* @_ZN5blink17NativeValueTraitsINS_20GPUSamplerDescriptorEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 96) #7
  %5 = bitcast i8* %4 to %"class.blink::GPUSamplerDescriptor"*
  tail call void @_ZN5blink20GPUSamplerDescriptorC1Ev(%"class.blink::GPUSamplerDescriptor"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink22V8GPUSamplerDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUSamplerDescriptorERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::GPUSamplerDescriptor"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::GPUSamplerDescriptor"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.314"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink20GPUSamplerDescriptorC1Ev(%"class.blink::GPUSamplerDescriptor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !4

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !5

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %22, label %23, label %80, !prof !5

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #7
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #7
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #7
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #7
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

declare zeroext i16 @_ZN5blink8ToUInt16EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2146410443, i32 1073205}
!5 = !{!"branch_weights", i32 2000, i32 1}
