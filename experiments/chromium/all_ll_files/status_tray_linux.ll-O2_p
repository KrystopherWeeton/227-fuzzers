; ModuleID = '../../chrome/browser/ui/views/status_icons/status_tray_linux.cc'
source_filename = "../../chrome/browser/ui/views/status_icons/status_tray_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.StatusTrayLinux = type { %class.StatusTray }
%class.StatusTray = type { i32 (...)**, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.StatusIcon* }
%class.StatusIcon = type { i32 (...)**, %"class.base::ObserverList", %"class.std::__1::unique_ptr.10" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.3", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.5" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %class.StatusIconMenuModel* }
%class.StatusIconMenuModel = type { %"class.ui::SimpleMenuModel", %"class.ui::SimpleMenuModel::Delegate", %"class.base::SupportsWeakPtr.38", %"class.std::__1::map", %"class.base::ObserverList.47", %"class.StatusIconMenuModel::Delegate"* }
%"class.ui::SimpleMenuModel" = type { %"class.ui::MenuModel", %"class.std::__1::vector.19", %"class.ui::SimpleMenuModel::Delegate"*, %"class.base::WeakPtrFactory" }
%"class.ui::MenuModel" = type { i32 (...)**, %"class.base::SupportsWeakPtr", %"class.ui::MenuModelDelegate"* }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.ui::MenuModelDelegate" = type { i32 (...)** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"struct.ui::SimpleMenuModel::Item"*, %"struct.ui::SimpleMenuModel::Item"*, %"class.std::__1::__compressed_pair.33" }
%"struct.ui::SimpleMenuModel::Item" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.ui::ImageModel", %"class.ui::ImageModel", i32, %"class.ui::MenuModel"*, %"class.ui::ButtonMenuItemModel"*, i32, i8, i8, i8, i8, %"class.ui::ElementIdentifier" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.ui::ImageModel" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"class.ui::VectorIconModel" }
%"class.ui::VectorIconModel" = type { %"struct.gfx::VectorIcon"*, i32, %"class.absl::variant.26", %"struct.gfx::VectorIcon"* }
%"class.absl::variant.26" = type { %"class.absl::variant_internal::VariantStateBase.27" }
%"class.absl::variant_internal::VariantStateBase.27" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { i32 }
%"struct.gfx::VectorIcon" = type opaque
%"class.ui::ButtonMenuItemModel" = type opaque
%"class.ui::ElementIdentifier" = type { i8* }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.ui::SimpleMenuModel::Item"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.ui::SimpleMenuModel::Delegate" = type { %"class.ui::AcceleratorProvider" }
%"class.ui::AcceleratorProvider" = type { i32 (...)** }
%"class.base::SupportsWeakPtr.38" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { i64 }
%"class.base::ObserverList.47" = type <{ %"class.std::__1::vector.3", %"class.base::LinkedList.48", i64, i32, [4 x i8] }>
%"class.base::LinkedList.48" = type { %"class.base::LinkNode.49" }
%"class.base::LinkNode.49" = type { %"class.base::internal::LinkNodeBase" }
%"class.StatusIconMenuModel::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.55 }
%class.scoped_refptr.55 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%class.StatusIconLinuxWrapper = type { %class.StatusIcon, %"class.views::StatusIconLinux::Delegate", %"class.StatusIconMenuModel::Observer", %class.DesktopNotificationBalloon, %class.scoped_refptr.59, %"class.std::__1::unique_ptr.60", %"class.views::StatusIconLinux"*, i32, %"class.gfx::ImageSkia", %"class.std::__1::basic_string", %class.StatusIconMenuModel* }
%"class.views::StatusIconLinux::Delegate" = type { i32 (...)** }
%"class.StatusIconMenuModel::Observer" = type { i32 (...)** }
%class.DesktopNotificationBalloon = type { i32 (...)** }
%class.scoped_refptr.59 = type { %class.StatusIconLinuxDbus* }
%class.StatusIconLinuxDbus = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.views::StatusIconLinux"* }
%"class.views::StatusIconLinux" = type { i32 (...)**, %"class.views::StatusIconLinux::Delegate"* }

@_ZTV15StatusTrayLinux = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.StatusTrayLinux*)* @_ZN15StatusTrayLinuxD2Ev to i8*), i8* bitcast (void (%class.StatusTrayLinux*)* @_ZN15StatusTrayLinuxD0Ev to i8*), i8* bitcast (%class.StatusIcon* (%class.StatusTrayLinux*, i32, %"class.gfx::ImageSkia"*, %"class.std::__1::basic_string"*)* @_ZN15StatusTrayLinux24CreatePlatformStatusIconEN10StatusTray14StatusIconTypeERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEE to i8*)] }, align 8

@_ZN15StatusTrayLinuxC1Ev = hidden unnamed_addr alias void (%class.StatusTrayLinux*), void (%class.StatusTrayLinux*)* @_ZN15StatusTrayLinuxC2Ev
@_ZN15StatusTrayLinuxD1Ev = hidden unnamed_addr alias void (%class.StatusTrayLinux*), void (%class.StatusTrayLinux*)* @_ZN15StatusTrayLinuxD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15StatusTrayLinuxC2Ev(%class.StatusTrayLinux*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusTrayLinux, %class.StatusTrayLinux* %0, i64 0, i32 0
  tail call void @_ZN10StatusTrayC2Ev(%class.StatusTray* %2) #5
  %3 = getelementptr inbounds %class.StatusTrayLinux, %class.StatusTrayLinux* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV15StatusTrayLinux, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN10StatusTrayC2Ev(%class.StatusTray*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10StatusTrayD2Ev(%class.StatusTray*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15StatusTrayLinuxD2Ev(%class.StatusTrayLinux*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusTrayLinux, %class.StatusTrayLinux* %0, i64 0, i32 0
  tail call void @_ZN10StatusTrayD2Ev(%class.StatusTray* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15StatusTrayLinuxD0Ev(%class.StatusTrayLinux*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusTrayLinux, %class.StatusTrayLinux* %0, i64 0, i32 0
  tail call void @_ZN10StatusTrayD2Ev(%class.StatusTray* %2) #5
  %3 = bitcast %class.StatusTrayLinux* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.StatusIcon* @_ZN15StatusTrayLinux24CreatePlatformStatusIconEN10StatusTray14StatusIconTypeERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEE(%class.StatusTrayLinux* nocapture readnone, i32, %"class.gfx::ImageSkia"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = tail call %class.StatusIconLinuxWrapper* @_ZN22StatusIconLinuxWrapper23CreateWrappedStatusIconERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.gfx::ImageSkia"* dereferenceable(8) %2, %"class.std::__1::basic_string"* dereferenceable(24) %3) #5
  %6 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %5, i64 0, i32 0
  ret %class.StatusIcon* %6
}

declare %class.StatusIconLinuxWrapper* @_ZN22StatusIconLinuxWrapper23CreateWrappedStatusIconERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.gfx::ImageSkia"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.StatusTray* @_ZN10StatusTray6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 32) #6
  %2 = bitcast i8* %1 to %class.StatusTray*
  tail call void @_ZN10StatusTrayC2Ev(%class.StatusTray* nonnull %2) #5
  %3 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV15StatusTrayLinux, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret %class.StatusTray* %2
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
