; ModuleID = '../../ui/message_center/public/cpp/notification.cc'
source_filename = "../../ui/message_center/public/cpp/notification.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gfx::VectorIcon" = type { %"struct.gfx::VectorIconRep"*, i64, i8* }
%"struct.gfx::VectorIconRep" = type { %"struct.gfx::PathElement"*, i64 }
%"struct.gfx::PathElement" = type { %union.anon.2 }
%union.anon.2 = type { i32 }
%"struct.message_center::ButtonInfo" = type { %"class.std::__1::basic_string", %"class.gfx::Image", %"class.absl::optional" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.gfx::Image" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.std::__1::basic_string" }
%"class.message_center::RichNotificationData" = type <{ i32, i8, [3 x i8], %"class.base::Time", %"class.std::__1::basic_string", %"class.gfx::Image", %"class.gfx::Image", i8, [7 x i8], %"struct.gfx::VectorIcon"*, %"class.std::__1::vector", i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector.8", i8, [7 x i8], %"class.std::__1::vector.15", i8, i8, [6 x i8], %"class.std::__1::basic_string", %"class.absl::optional.22", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.message_center::NotificationItem"*, %"struct.message_center::NotificationItem"*, %"class.std::__1::__compressed_pair.3" }
%"struct.message_center::NotificationItem" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.message_center::NotificationItem"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.message_center::ButtonInfo"*, %"struct.message_center::ButtonInfo"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.message_center::ButtonInfo"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { i32*, i32*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i32* }
%"class.absl::optional.22" = type { %"class.absl::optional_internal::optional_data.23" }
%"class.absl::optional_internal::optional_data.23" = type { %"class.absl::optional_internal::optional_data_base.24" }
%"class.absl::optional_internal::optional_data_base.24" = type { %"class.absl::optional_internal::optional_data_dtor_base.25" }
%"class.absl::optional_internal::optional_data_dtor_base.25" = type { i8, %union.anon.26 }
%union.anon.26 = type { i32 }
%"class.message_center::Notification" = type { i32 (...)**, i32, %"class.std::__1::basic_string.27", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.gfx::Image", %"class.std::__1::basic_string", %class.GURL, %"struct.message_center::NotifierId", %"class.message_center::RichNotificationData", i32, %class.scoped_refptr.39, %"class.std::__1::basic_string.27" }
%class.GURL = type { %"class.std::__1::basic_string.27", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.GURL* }
%"struct.message_center::NotifierId" = type { i32, %"class.std::__1::basic_string.27", %class.GURL, %"class.std::__1::basic_string.27" }
%class.scoped_refptr.39 = type { %"class.message_center::NotificationDelegate"* }
%"class.message_center::NotificationDelegate" = type <{ %"class.message_center::NotificationObserver", %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.message_center::NotificationObserver" = type { i32 (...)** }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.30 }
%union.anon.30 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.31 }
%struct.anon.31 = type { i8 }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.47 }
%class.scoped_refptr.47 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.gfx::Size" = type { i32, i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.54 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.48, i32, i32 }
%class.sk_sp.48 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.49" }
%"struct.std::__1::atomic.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.54 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZN14message_center10NotifierIdaSERKS0_ = comdat any

$_ZN14message_center20RichNotificationDataaSERKS0_ = comdat any

$_ZNSt3__16vectorIN14message_center16NotificationItemENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZN14message_center16NotificationItemC2ERKS0_ = comdat any

$_ZNSt3__16vectorIN14message_center10ButtonInfoENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

@_ZN3gfx9kNoneIconE = external global %"struct.gfx::VectorIcon", align 8
@_ZTVN14message_center12NotificationE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.message_center::Notification"*)* @_ZN14message_center12NotificationD2Ev to i8*), i8* bitcast (void (%"class.message_center::Notification"*)* @_ZN14message_center12NotificationD0Ev to i8*)] }, align 8
@_ZN14message_center12_GLOBAL__N_120g_next_serial_numberE = internal unnamed_addr global i32 0, align 4

@_ZN14message_center10ButtonInfoC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE = hidden unnamed_addr alias void (%"struct.message_center::ButtonInfo"*, %"class.std::__1::basic_string"*), void (%"struct.message_center::ButtonInfo"*, %"class.std::__1::basic_string"*)* @_ZN14message_center10ButtonInfoC2ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE
@_ZN14message_center10ButtonInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.message_center::ButtonInfo"*, %"struct.message_center::ButtonInfo"*), void (%"struct.message_center::ButtonInfo"*, %"struct.message_center::ButtonInfo"*)* @_ZN14message_center10ButtonInfoC2ERKS0_
@_ZN14message_center10ButtonInfoC1Ev = hidden unnamed_addr alias void (%"struct.message_center::ButtonInfo"*), void (%"struct.message_center::ButtonInfo"*)* @_ZN14message_center10ButtonInfoC2Ev
@_ZN14message_center10ButtonInfoD1Ev = hidden unnamed_addr alias void (%"struct.message_center::ButtonInfo"*), void (%"struct.message_center::ButtonInfo"*)* @_ZN14message_center10ButtonInfoD2Ev
@_ZN14message_center20RichNotificationDataC1Ev = hidden unnamed_addr alias void (%"class.message_center::RichNotificationData"*), void (%"class.message_center::RichNotificationData"*)* @_ZN14message_center20RichNotificationDataC2Ev
@_ZN14message_center20RichNotificationDataC1ERKS0_ = hidden unnamed_addr alias void (%"class.message_center::RichNotificationData"*, %"class.message_center::RichNotificationData"*), void (%"class.message_center::RichNotificationData"*, %"class.message_center::RichNotificationData"*)* @_ZN14message_center20RichNotificationDataC2ERKS0_
@_ZN14message_center20RichNotificationDataD1Ev = hidden unnamed_addr alias void (%"class.message_center::RichNotificationData"*), void (%"class.message_center::RichNotificationData"*)* @_ZN14message_center20RichNotificationDataD2Ev
@_ZN14message_center12NotificationC1ENS_16NotificationTypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS3_IDsNS4_IDsEENS6_IDsEEEESF_RKN3gfx5ImageESF_RK4GURLRKNS_10NotifierIdERKNS_20RichNotificationDataE13scoped_refptrINS_20NotificationDelegateEE = hidden unnamed_addr alias void (%"class.message_center::Notification"*, i32, %"class.std::__1::basic_string.27"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.gfx::Image"*, %"class.std::__1::basic_string"*, %class.GURL*, %"struct.message_center::NotifierId"*, %"class.message_center::RichNotificationData"*, i64), void (%"class.message_center::Notification"*, i32, %"class.std::__1::basic_string.27"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.gfx::Image"*, %"class.std::__1::basic_string"*, %class.GURL*, %"struct.message_center::NotifierId"*, %"class.message_center::RichNotificationData"*, i64)* @_ZN14message_center12NotificationC2ENS_16NotificationTypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS3_IDsNS4_IDsEENS6_IDsEEEESF_RKN3gfx5ImageESF_RK4GURLRKNS_10NotifierIdERKNS_20RichNotificationDataE13scoped_refptrINS_20NotificationDelegateEE
@_ZN14message_center12NotificationC1E13scoped_refptrINS_20NotificationDelegateEERKS0_ = hidden unnamed_addr alias void (%"class.message_center::Notification"*, %"class.message_center::NotificationDelegate"*, %"class.message_center::Notification"*), void (%"class.message_center::Notification"*, %"class.message_center::NotificationDelegate"*, %"class.message_center::Notification"*)* @_ZN14message_center12NotificationC2E13scoped_refptrINS_20NotificationDelegateEERKS0_
@_ZN14message_center12NotificationC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKS0_ = hidden unnamed_addr alias void (%"class.message_center::Notification"*, %"class.std::__1::basic_string.27"*, %"class.message_center::Notification"*), void (%"class.message_center::Notification"*, %"class.std::__1::basic_string.27"*, %"class.message_center::Notification"*)* @_ZN14message_center12NotificationC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKS0_
@_ZN14message_center12NotificationC1ERKS0_ = hidden unnamed_addr alias void (%"class.message_center::Notification"*, %"class.message_center::Notification"*), void (%"class.message_center::Notification"*, %"class.message_center::Notification"*)* @_ZN14message_center12NotificationC2ERKS0_
@_ZN14message_center12NotificationD1Ev = hidden unnamed_addr alias void (%"class.message_center::Notification"*), void (%"class.message_center::Notification"*)* @_ZN14message_center12NotificationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14message_center10ButtonInfoC2ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"struct.message_center::ButtonInfo"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.message_center::ButtonInfo"* %0 to i8*
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #10
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.message_center::ButtonInfo"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.message_center::ButtonInfo"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.message_center::ButtonInfo"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #11
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #11
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.message_center::ButtonInfo"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !2
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !2
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !5, !noalias !2
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !5, !noalias !2
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !2
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !5, !noalias !2
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !5, !noalias !2
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !2
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !5, !noalias !2
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !5, !noalias !2
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !2
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !5, !noalias !2
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !5, !noalias !2
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !7

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !2
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !5, !noalias !2
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !5, !noalias !2
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !9

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !11

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !12

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 1
  tail call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* %186) #10
  %187 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %187, align 8
  %188 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %189 = bitcast %union.anon.1* %188 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 24, i1 false) #10
  ret void
}

declare void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14message_center10ButtonInfoC2ERKS0_(%"struct.message_center::ButtonInfo"*, %"struct.message_center::ButtonInfo"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.message_center::ButtonInfo"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.message_center::ButtonInfo"* %0 to i8*
  %9 = bitcast %"struct.message_center::ButtonInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #10
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.message_center::ButtonInfo"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.message_center::ButtonInfo"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.message_center::ButtonInfo"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #11
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #11
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.message_center::ButtonInfo"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !13
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !13
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !16, !noalias !13
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !16, !noalias !13
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !13
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !13
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !16, !noalias !13
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !16, !noalias !13
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !13
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !13
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !16, !noalias !13
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !16, !noalias !13
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !13
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !13
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !16, !noalias !13
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !16, !noalias !13
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !18

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !13
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !13
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !16, !noalias !13
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !16, !noalias !13
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !19

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !20

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !21

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %1, i64 0, i32 1
  tail call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %186, %"class.gfx::Image"* dereferenceable(8) %187) #10
  %188 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 32, i1 false) #10
  %190 = load i8, i8* %189, align 8, !range !22
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %378, label %192

192:                                              ; preds = %185
  %193 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %194 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %195 = bitcast %"class.std::__1::basic_string"* %193 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %196 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %195, i64 0, i32 1, i32 1
  %197 = load i8, i8* %196, align 1
  %198 = icmp slt i8 %197, 0
  br i1 %198, label %202, label %199

199:                                              ; preds = %192
  %200 = bitcast %"class.std::__1::basic_string"* %194 to i8*
  %201 = bitcast %"class.std::__1::basic_string"* %193 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %200, i8* align 8 %201, i64 24, i1 false) #10
  br label %377

202:                                              ; preds = %192
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i16*, i16** %203, align 8
  %205 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %206 = load i64, i64* %205, align 8
  %207 = icmp ult i64 %206, 11
  br i1 %207, label %208, label %213

208:                                              ; preds = %202
  %209 = bitcast %"class.std::__1::basic_string"* %194 to i16*
  %210 = trunc i64 %206 to i8
  %211 = bitcast %"class.std::__1::basic_string"* %194 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %211, i64 0, i32 1, i32 1
  store i8 %210, i8* %212, align 1
  br label %230

213:                                              ; preds = %202
  %214 = icmp ugt i64 %206, 9223372036854775791
  br i1 %214, label %215, label %217

215:                                              ; preds = %213
  %216 = bitcast %"class.std::__1::basic_string"* %194 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %216) #11
  unreachable

217:                                              ; preds = %213
  %218 = add nuw nsw i64 %206, 8
  %219 = and i64 %218, -8
  %220 = icmp slt i64 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %217
  tail call void @abort() #11
  unreachable

222:                                              ; preds = %217
  %223 = shl i64 %219, 1
  %224 = tail call i8* @_Znwm(i64 %223) #12
  %225 = bitcast i8* %224 to i16*
  %226 = bitcast %"class.std::__1::basic_string"* %194 to i8**
  store i8* %224, i8** %226, align 8
  %227 = or i64 %219, -9223372036854775808
  %228 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %227, i64* %228, align 8
  %229 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %206, i64* %229, align 8
  br label %230

230:                                              ; preds = %222, %208
  %231 = phi i16* [ %209, %208 ], [ %225, %222 ]
  %232 = add nuw nsw i64 %206, 1
  %233 = add i64 %206, 1
  %234 = icmp ult i64 %233, 16
  br i1 %234, label %324, label %235

235:                                              ; preds = %230
  %236 = add i64 %206, 1
  %237 = getelementptr i16, i16* %231, i64 %236
  %238 = getelementptr i16, i16* %204, i64 %236
  %239 = icmp ult i16* %231, %238
  %240 = icmp ult i16* %204, %237
  %241 = and i1 %239, %240
  br i1 %241, label %324, label %242

242:                                              ; preds = %235
  %243 = and i64 %233, -16
  %244 = sub i64 %232, %243
  %245 = getelementptr i16, i16* %204, i64 %243
  %246 = getelementptr i16, i16* %231, i64 %243
  %247 = add i64 %243, -16
  %248 = lshr exact i64 %247, 4
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 48
  br i1 %251, label %303, label %252

252:                                              ; preds = %242
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i16, i16* %204, i64 %255
  %258 = getelementptr i16, i16* %231, i64 %255
  %259 = bitcast i16* %257 to <8 x i16>*
  %260 = load <8 x i16>, <8 x i16>* %259, align 2, !alias.scope !23
  %261 = getelementptr i16, i16* %257, i64 8
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !23
  %264 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %260, <8 x i16>* %264, align 2, !alias.scope !26, !noalias !23
  %265 = getelementptr i16, i16* %258, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %266, align 2, !alias.scope !26, !noalias !23
  %267 = or i64 %255, 16
  %268 = getelementptr i16, i16* %204, i64 %267
  %269 = getelementptr i16, i16* %231, i64 %267
  %270 = bitcast i16* %268 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !23
  %272 = getelementptr i16, i16* %268, i64 8
  %273 = bitcast i16* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !23
  %275 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %275, align 2, !alias.scope !26, !noalias !23
  %276 = getelementptr i16, i16* %269, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %277, align 2, !alias.scope !26, !noalias !23
  %278 = or i64 %255, 32
  %279 = getelementptr i16, i16* %204, i64 %278
  %280 = getelementptr i16, i16* %231, i64 %278
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !23
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !23
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !26, !noalias !23
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !26, !noalias !23
  %289 = or i64 %255, 48
  %290 = getelementptr i16, i16* %204, i64 %289
  %291 = getelementptr i16, i16* %231, i64 %289
  %292 = bitcast i16* %290 to <8 x i16>*
  %293 = load <8 x i16>, <8 x i16>* %292, align 2, !alias.scope !23
  %294 = getelementptr i16, i16* %290, i64 8
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !23
  %297 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %293, <8 x i16>* %297, align 2, !alias.scope !26, !noalias !23
  %298 = getelementptr i16, i16* %291, i64 8
  %299 = bitcast i16* %298 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %299, align 2, !alias.scope !26, !noalias !23
  %300 = add i64 %255, 64
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !28

303:                                              ; preds = %254, %242
  %304 = phi i64 [ 0, %242 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i16, i16* %204, i64 %307
  %310 = getelementptr i16, i16* %231, i64 %307
  %311 = bitcast i16* %309 to <8 x i16>*
  %312 = load <8 x i16>, <8 x i16>* %311, align 2, !alias.scope !23
  %313 = getelementptr i16, i16* %309, i64 8
  %314 = bitcast i16* %313 to <8 x i16>*
  %315 = load <8 x i16>, <8 x i16>* %314, align 2, !alias.scope !23
  %316 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %312, <8 x i16>* %316, align 2, !alias.scope !26, !noalias !23
  %317 = getelementptr i16, i16* %310, i64 8
  %318 = bitcast i16* %317 to <8 x i16>*
  store <8 x i16> %315, <8 x i16>* %318, align 2, !alias.scope !26, !noalias !23
  %319 = add i64 %307, 16
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !29

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %233, %243
  br i1 %323, label %377, label %324

324:                                              ; preds = %322, %235, %230
  %325 = phi i64 [ %232, %235 ], [ %232, %230 ], [ %244, %322 ]
  %326 = phi i16* [ %204, %235 ], [ %204, %230 ], [ %245, %322 ]
  %327 = phi i16* [ %231, %235 ], [ %231, %230 ], [ %246, %322 ]
  %328 = add i64 %325, -1
  %329 = and i64 %325, 7
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %342, label %331

331:                                              ; preds = %324, %331
  %332 = phi i64 [ %337, %331 ], [ %325, %324 ]
  %333 = phi i16* [ %339, %331 ], [ %326, %324 ]
  %334 = phi i16* [ %338, %331 ], [ %327, %324 ]
  %335 = phi i64 [ %340, %331 ], [ %329, %324 ]
  %336 = load i16, i16* %333, align 2
  store i16 %336, i16* %334, align 2
  %337 = add i64 %332, -1
  %338 = getelementptr inbounds i16, i16* %334, i64 1
  %339 = getelementptr inbounds i16, i16* %333, i64 1
  %340 = add i64 %335, -1
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %342, label %331, !llvm.loop !30

342:                                              ; preds = %331, %324
  %343 = phi i64 [ %325, %324 ], [ %337, %331 ]
  %344 = phi i16* [ %326, %324 ], [ %339, %331 ]
  %345 = phi i16* [ %327, %324 ], [ %338, %331 ]
  %346 = icmp ult i64 %328, 7
  br i1 %346, label %377, label %347

347:                                              ; preds = %342, %347
  %348 = phi i64 [ %373, %347 ], [ %343, %342 ]
  %349 = phi i16* [ %375, %347 ], [ %344, %342 ]
  %350 = phi i16* [ %374, %347 ], [ %345, %342 ]
  %351 = load i16, i16* %349, align 2
  store i16 %351, i16* %350, align 2
  %352 = getelementptr inbounds i16, i16* %350, i64 1
  %353 = getelementptr inbounds i16, i16* %349, i64 1
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = getelementptr inbounds i16, i16* %350, i64 2
  %356 = getelementptr inbounds i16, i16* %349, i64 2
  %357 = load i16, i16* %356, align 2
  store i16 %357, i16* %355, align 2
  %358 = getelementptr inbounds i16, i16* %350, i64 3
  %359 = getelementptr inbounds i16, i16* %349, i64 3
  %360 = load i16, i16* %359, align 2
  store i16 %360, i16* %358, align 2
  %361 = getelementptr inbounds i16, i16* %350, i64 4
  %362 = getelementptr inbounds i16, i16* %349, i64 4
  %363 = load i16, i16* %362, align 2
  store i16 %363, i16* %361, align 2
  %364 = getelementptr inbounds i16, i16* %350, i64 5
  %365 = getelementptr inbounds i16, i16* %349, i64 5
  %366 = load i16, i16* %365, align 2
  store i16 %366, i16* %364, align 2
  %367 = getelementptr inbounds i16, i16* %350, i64 6
  %368 = getelementptr inbounds i16, i16* %349, i64 6
  %369 = load i16, i16* %368, align 2
  store i16 %369, i16* %367, align 2
  %370 = getelementptr inbounds i16, i16* %350, i64 7
  %371 = getelementptr inbounds i16, i16* %349, i64 7
  %372 = load i16, i16* %371, align 2
  store i16 %372, i16* %370, align 2
  %373 = add i64 %348, -8
  %374 = getelementptr inbounds i16, i16* %350, i64 8
  %375 = getelementptr inbounds i16, i16* %349, i64 8
  %376 = icmp eq i64 %373, 0
  br i1 %376, label %377, label %347, !llvm.loop !31

377:                                              ; preds = %342, %347, %322, %199
  store i8 1, i8* %188, align 8
  br label %378

378:                                              ; preds = %185, %377
  ret void
}

declare void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14message_center10ButtonInfoC2Ev(%"struct.message_center::ButtonInfo"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.message_center::ButtonInfo"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #10
  %3 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 1
  tail call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* %3) #10
  %4 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %union.anon.1* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14message_center10ButtonInfoD2Ev(%"struct.message_center::ButtonInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !22
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #12
  br label %14

14:                                               ; preds = %11, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 1
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %16) #10
  %17 = bitcast %"struct.message_center::ButtonInfo"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = bitcast %"struct.message_center::ButtonInfo"* %0 to i8**
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %15, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"struct.message_center::ButtonInfo"* @_ZN14message_center10ButtonInfoaSERKS0_(%"struct.message_center::ButtonInfo"* returned, %"struct.message_center::ButtonInfo"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %4)
  %6 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %1, i64 0, i32 1
  %8 = tail call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"* %6, %"class.gfx::Image"* dereferenceable(8) %7) #10
  %9 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !22
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %205, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !22
  %17 = icmp eq i8 %16, 0
  %18 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %17, label %21, label %19

19:                                               ; preds = %13
  %20 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %18, %"class.std::__1::basic_string"* dereferenceable(24) %14) #10
  br label %219

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #10
  br label %204

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  %32 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, 11
  br i1 %34, label %35, label %40

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::basic_string"* %18 to i16*
  %37 = trunc i64 %33 to i8
  %38 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  store i8 %37, i8* %39, align 1
  br label %57

40:                                               ; preds = %29
  %41 = icmp ugt i64 %33, 9223372036854775791
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::basic_string"* %18 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %43) #11
  unreachable

44:                                               ; preds = %40
  %45 = add nuw nsw i64 %33, 8
  %46 = and i64 %45, -8
  %47 = icmp slt i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  tail call void @abort() #11
  unreachable

49:                                               ; preds = %44
  %50 = shl i64 %46, 1
  %51 = tail call i8* @_Znwm(i64 %50) #12
  %52 = bitcast i8* %51 to i16*
  %53 = bitcast %"class.std::__1::basic_string"* %18 to i8**
  store i8* %51, i8** %53, align 8
  %54 = or i64 %46, -9223372036854775808
  %55 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %56, align 8
  br label %57

57:                                               ; preds = %49, %35
  %58 = phi i16* [ %36, %35 ], [ %52, %49 ]
  %59 = add nuw nsw i64 %33, 1
  %60 = add i64 %33, 1
  %61 = icmp ult i64 %60, 16
  br i1 %61, label %151, label %62

62:                                               ; preds = %57
  %63 = add i64 %33, 1
  %64 = getelementptr i16, i16* %58, i64 %63
  %65 = getelementptr i16, i16* %31, i64 %63
  %66 = icmp ult i16* %58, %65
  %67 = icmp ult i16* %31, %64
  %68 = and i1 %66, %67
  br i1 %68, label %151, label %69

69:                                               ; preds = %62
  %70 = and i64 %60, -16
  %71 = sub i64 %59, %70
  %72 = getelementptr i16, i16* %31, i64 %70
  %73 = getelementptr i16, i16* %58, i64 %70
  %74 = add i64 %70, -16
  %75 = lshr exact i64 %74, 4
  %76 = add nuw nsw i64 %75, 1
  %77 = and i64 %76, 3
  %78 = icmp ult i64 %74, 48
  br i1 %78, label %130, label %79

79:                                               ; preds = %69
  %80 = sub nsw i64 %76, %77
  br label %81

81:                                               ; preds = %81, %79
  %82 = phi i64 [ 0, %79 ], [ %127, %81 ]
  %83 = phi i64 [ %80, %79 ], [ %128, %81 ]
  %84 = getelementptr i16, i16* %31, i64 %82
  %85 = getelementptr i16, i16* %58, i64 %82
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !32
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !32
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !35, !noalias !32
  %92 = getelementptr i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !35, !noalias !32
  %94 = or i64 %82, 16
  %95 = getelementptr i16, i16* %31, i64 %94
  %96 = getelementptr i16, i16* %58, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !32
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !32
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !35, !noalias !32
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !35, !noalias !32
  %105 = or i64 %82, 32
  %106 = getelementptr i16, i16* %31, i64 %105
  %107 = getelementptr i16, i16* %58, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !32
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !32
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !35, !noalias !32
  %114 = getelementptr i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !35, !noalias !32
  %116 = or i64 %82, 48
  %117 = getelementptr i16, i16* %31, i64 %116
  %118 = getelementptr i16, i16* %58, i64 %116
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !32
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !32
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !35, !noalias !32
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !35, !noalias !32
  %127 = add i64 %82, 64
  %128 = add i64 %83, -4
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %81, !llvm.loop !37

130:                                              ; preds = %81, %69
  %131 = phi i64 [ 0, %69 ], [ %127, %81 ]
  %132 = icmp eq i64 %77, 0
  br i1 %132, label %149, label %133

133:                                              ; preds = %130, %133
  %134 = phi i64 [ %146, %133 ], [ %131, %130 ]
  %135 = phi i64 [ %147, %133 ], [ %77, %130 ]
  %136 = getelementptr i16, i16* %31, i64 %134
  %137 = getelementptr i16, i16* %58, i64 %134
  %138 = bitcast i16* %136 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !32
  %140 = getelementptr i16, i16* %136, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !32
  %143 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %143, align 2, !alias.scope !35, !noalias !32
  %144 = getelementptr i16, i16* %137, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %145, align 2, !alias.scope !35, !noalias !32
  %146 = add i64 %134, 16
  %147 = add i64 %135, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %133, !llvm.loop !38

149:                                              ; preds = %133, %130
  %150 = icmp eq i64 %60, %70
  br i1 %150, label %204, label %151

151:                                              ; preds = %149, %62, %57
  %152 = phi i64 [ %59, %62 ], [ %59, %57 ], [ %71, %149 ]
  %153 = phi i16* [ %31, %62 ], [ %31, %57 ], [ %72, %149 ]
  %154 = phi i16* [ %58, %62 ], [ %58, %57 ], [ %73, %149 ]
  %155 = add i64 %152, -1
  %156 = and i64 %152, 7
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %169, label %158

158:                                              ; preds = %151, %158
  %159 = phi i64 [ %164, %158 ], [ %152, %151 ]
  %160 = phi i16* [ %166, %158 ], [ %153, %151 ]
  %161 = phi i16* [ %165, %158 ], [ %154, %151 ]
  %162 = phi i64 [ %167, %158 ], [ %156, %151 ]
  %163 = load i16, i16* %160, align 2
  store i16 %163, i16* %161, align 2
  %164 = add i64 %159, -1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = getelementptr inbounds i16, i16* %160, i64 1
  %167 = add i64 %162, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %158, !llvm.loop !39

169:                                              ; preds = %158, %151
  %170 = phi i64 [ %152, %151 ], [ %164, %158 ]
  %171 = phi i16* [ %153, %151 ], [ %166, %158 ]
  %172 = phi i16* [ %154, %151 ], [ %165, %158 ]
  %173 = icmp ult i64 %155, 7
  br i1 %173, label %204, label %174

174:                                              ; preds = %169, %174
  %175 = phi i64 [ %200, %174 ], [ %170, %169 ]
  %176 = phi i16* [ %202, %174 ], [ %171, %169 ]
  %177 = phi i16* [ %201, %174 ], [ %172, %169 ]
  %178 = load i16, i16* %176, align 2
  store i16 %178, i16* %177, align 2
  %179 = getelementptr inbounds i16, i16* %177, i64 1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %177, i64 2
  %183 = getelementptr inbounds i16, i16* %176, i64 2
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %177, i64 3
  %186 = getelementptr inbounds i16, i16* %176, i64 3
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %177, i64 4
  %189 = getelementptr inbounds i16, i16* %176, i64 4
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %177, i64 5
  %192 = getelementptr inbounds i16, i16* %176, i64 5
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %177, i64 6
  %195 = getelementptr inbounds i16, i16* %176, i64 6
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %177, i64 7
  %198 = getelementptr inbounds i16, i16* %176, i64 7
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = add i64 %175, -8
  %201 = getelementptr inbounds i16, i16* %177, i64 8
  %202 = getelementptr inbounds i16, i16* %176, i64 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %174, !llvm.loop !40

204:                                              ; preds = %169, %174, %149, %26
  store i8 1, i8* %15, align 8
  br label %219

205:                                              ; preds = %2
  %206 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %207 = load i8, i8* %206, align 8, !range !22
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %219, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %211 = bitcast %"class.std::__1::basic_string"* %210 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %211, i64 0, i32 1, i32 1
  %213 = load i8, i8* %212, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %209
  %216 = bitcast %"class.std::__1::basic_string"* %210 to i8**
  %217 = load i8*, i8** %216, align 8
  tail call void @_ZdlPv(i8* %217) #12
  br label %218

218:                                              ; preds = %215, %209
  store i8 0, i8* %206, align 8
  br label %219

219:                                              ; preds = %19, %204, %205, %218
  ret %"struct.message_center::ButtonInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !41
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !41
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !44, !noalias !41
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !44, !noalias !41
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !41
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !41
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !44, !noalias !41
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !44, !noalias !41
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !41
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !41
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !44, !noalias !41
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !44, !noalias !41
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !41
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !41
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !44, !noalias !41
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !44, !noalias !41
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !46

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !41
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !41
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !44, !noalias !41
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !44, !noalias !41
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !47

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !48

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !49

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #11
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #11
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !50
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !50
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !53, !noalias !50
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !53, !noalias !50
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !50
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !50
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !53, !noalias !50
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !53, !noalias !50
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !50
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !50
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !53, !noalias !50
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !53, !noalias !50
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !50
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !50
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !53, !noalias !50
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !53, !noalias !50
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !55

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !50
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !50
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !53, !noalias !50
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !53, !noalias !50
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !56

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !57

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !58

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !59
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !59
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !62, !noalias !59
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !62, !noalias !59
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !59
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !59
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !62, !noalias !59
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !62, !noalias !59
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !59
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !59
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !62, !noalias !59
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !62, !noalias !59
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !59
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !59
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !62, !noalias !59
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !62, !noalias !59
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !64

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !59
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !59
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !62, !noalias !59
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !62, !noalias !59
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !65

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !66

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !67

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #10
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

declare dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14message_center20RichNotificationDataC2Ev(%"class.message_center::RichNotificationData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = tail call i64 @_ZN4base4Time3NowEv() #10
  %5 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 4
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #10
  %8 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 5
  tail call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* %8) #10
  %9 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 6
  tail call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* %9) #10
  %10 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 7
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 9
  store %"struct.gfx::VectorIcon"* @_ZN3gfx9kNoneIconE, %"struct.gfx::VectorIcon"** %11, align 8
  %12 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 10
  %13 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 13
  %14 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 15
  %15 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 28, i1 false)
  %16 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 48, i1 false)
  store i8 1, i8* %14, align 8
  %17 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 17
  %18 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 21
  %19 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 23
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 24
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 26
  store i32 0, i32* %21, align 8
  %22 = bitcast %"class.std::__1::vector.15"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 26, i1 false)
  %23 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 25, i1 false)
  ret void
}

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14message_center20RichNotificationDataC2ERKS0_(%"class.message_center::RichNotificationData"*, %"class.message_center::RichNotificationData"* dereferenceable(240)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.message_center::RichNotificationData"* %0 to i8*
  %4 = bitcast %"class.message_center::RichNotificationData"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 4
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #10
  br label %189

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #11
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @abort() #11
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = tail call i8* @_Znwm(i64 %35) #12
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !68
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !68
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !71, !noalias !68
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !71, !noalias !68
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !68
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !68
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !71, !noalias !68
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !71, !noalias !68
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !68
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !68
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !71, !noalias !68
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !71, !noalias !68
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !68
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !68
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !71, !noalias !68
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !71, !noalias !68
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !73

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !68
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !68
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !71, !noalias !68
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !71, !noalias !68
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !74

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !75

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !76

189:                                              ; preds = %154, %159, %134, %11
  %190 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 5
  %191 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 5
  tail call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %190, %"class.gfx::Image"* dereferenceable(8) %191) #10
  %192 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 6
  %193 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 6
  tail call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %192, %"class.gfx::Image"* dereferenceable(8) %193) #10
  %194 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 7
  %195 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* align 8 %195, i64 16, i1 false)
  %196 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 10
  %197 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 10
  %198 = bitcast %"class.std::__1::vector"* %196 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %198, i8 0, i64 24, i1 false) #10
  %199 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 10, i32 0, i32 1
  %200 = bitcast %"struct.message_center::NotificationItem"** %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.std::__1::vector"* %197 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = sub i64 %201, %203
  %205 = sdiv exact i64 %204, 48
  %206 = icmp eq i64 %204, 0
  br i1 %206, label %235, label %207

207:                                              ; preds = %189
  %208 = icmp ugt i64 %205, 384307168202282325
  br i1 %208, label %209, label %211

209:                                              ; preds = %207
  %210 = bitcast %"class.std::__1::vector"* %196 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %210) #11
  unreachable

211:                                              ; preds = %207
  %212 = tail call i8* @_Znwm(i64 %204) #12
  %213 = bitcast i8* %212 to %"struct.message_center::NotificationItem"*
  %214 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 10, i32 0, i32 1
  %215 = bitcast %"struct.message_center::NotificationItem"** %214 to i8**
  store i8* %212, i8** %215, align 8
  %216 = bitcast %"class.std::__1::vector"* %196 to i8**
  store i8* %212, i8** %216, align 8
  %217 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %213, i64 %205
  %218 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  store %"struct.message_center::NotificationItem"* %217, %"struct.message_center::NotificationItem"** %218, align 8
  %219 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %197, i64 0, i32 0, i32 0
  %220 = load %"struct.message_center::NotificationItem"*, %"struct.message_center::NotificationItem"** %219, align 8
  %221 = load %"struct.message_center::NotificationItem"*, %"struct.message_center::NotificationItem"** %199, align 8
  %222 = bitcast %"struct.message_center::NotificationItem"** %214 to i64*
  %223 = ptrtoint i8* %212 to i64
  %224 = icmp eq %"struct.message_center::NotificationItem"* %220, %221
  br i1 %224, label %233, label %225

225:                                              ; preds = %211, %225
  %226 = phi %"struct.message_center::NotificationItem"* [ %229, %225 ], [ %213, %211 ]
  %227 = phi %"struct.message_center::NotificationItem"* [ %228, %225 ], [ %220, %211 ]
  tail call void @_ZN14message_center16NotificationItemC2ERKS0_(%"struct.message_center::NotificationItem"* %226, %"struct.message_center::NotificationItem"* dereferenceable(48) %227) #10
  %228 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %227, i64 1
  %229 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %226, i64 1
  %230 = icmp eq %"struct.message_center::NotificationItem"* %228, %221
  br i1 %230, label %231, label %225

231:                                              ; preds = %225
  %232 = ptrtoint %"struct.message_center::NotificationItem"* %229 to i64
  br label %233

233:                                              ; preds = %231, %211
  %234 = phi i64 [ %223, %211 ], [ %232, %231 ]
  store i64 %234, i64* %222, align 8
  br label %235

235:                                              ; preds = %189, %233
  %236 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 11
  %237 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 11
  %238 = load i32, i32* %237, align 8
  store i32 %238, i32* %236, align 8
  %239 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 13
  %240 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 13
  %241 = bitcast %"class.std::__1::basic_string"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %248, label %245

245:                                              ; preds = %235
  %246 = bitcast %"class.std::__1::basic_string"* %239 to i8*
  %247 = bitcast %"class.std::__1::basic_string"* %240 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %246, i8* align 8 %247, i64 24, i1 false) #10
  br label %423

248:                                              ; preds = %235
  %249 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %240, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load i16*, i16** %249, align 8
  %251 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %252 = load i64, i64* %251, align 8
  %253 = icmp ult i64 %252, 11
  br i1 %253, label %254, label %259

254:                                              ; preds = %248
  %255 = bitcast %"class.std::__1::basic_string"* %239 to i16*
  %256 = trunc i64 %252 to i8
  %257 = bitcast %"class.std::__1::basic_string"* %239 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %258 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %257, i64 0, i32 1, i32 1
  store i8 %256, i8* %258, align 1
  br label %276

259:                                              ; preds = %248
  %260 = icmp ugt i64 %252, 9223372036854775791
  br i1 %260, label %261, label %263

261:                                              ; preds = %259
  %262 = bitcast %"class.std::__1::basic_string"* %239 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %262) #11
  unreachable

263:                                              ; preds = %259
  %264 = add nuw nsw i64 %252, 8
  %265 = and i64 %264, -8
  %266 = icmp slt i64 %265, 0
  br i1 %266, label %267, label %268

267:                                              ; preds = %263
  tail call void @abort() #11
  unreachable

268:                                              ; preds = %263
  %269 = shl i64 %265, 1
  %270 = tail call i8* @_Znwm(i64 %269) #12
  %271 = bitcast i8* %270 to i16*
  %272 = bitcast %"class.std::__1::basic_string"* %239 to i8**
  store i8* %270, i8** %272, align 8
  %273 = or i64 %265, -9223372036854775808
  %274 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %273, i64* %274, align 8
  %275 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %252, i64* %275, align 8
  br label %276

276:                                              ; preds = %268, %254
  %277 = phi i16* [ %255, %254 ], [ %271, %268 ]
  %278 = add nuw nsw i64 %252, 1
  %279 = add i64 %252, 1
  %280 = icmp ult i64 %279, 16
  br i1 %280, label %370, label %281

281:                                              ; preds = %276
  %282 = add i64 %252, 1
  %283 = getelementptr i16, i16* %277, i64 %282
  %284 = getelementptr i16, i16* %250, i64 %282
  %285 = icmp ult i16* %277, %284
  %286 = icmp ult i16* %250, %283
  %287 = and i1 %285, %286
  br i1 %287, label %370, label %288

288:                                              ; preds = %281
  %289 = and i64 %279, -16
  %290 = sub i64 %278, %289
  %291 = getelementptr i16, i16* %250, i64 %289
  %292 = getelementptr i16, i16* %277, i64 %289
  %293 = add i64 %289, -16
  %294 = lshr exact i64 %293, 4
  %295 = add nuw nsw i64 %294, 1
  %296 = and i64 %295, 3
  %297 = icmp ult i64 %293, 48
  br i1 %297, label %349, label %298

298:                                              ; preds = %288
  %299 = sub nsw i64 %295, %296
  br label %300

300:                                              ; preds = %300, %298
  %301 = phi i64 [ 0, %298 ], [ %346, %300 ]
  %302 = phi i64 [ %299, %298 ], [ %347, %300 ]
  %303 = getelementptr i16, i16* %250, i64 %301
  %304 = getelementptr i16, i16* %277, i64 %301
  %305 = bitcast i16* %303 to <8 x i16>*
  %306 = load <8 x i16>, <8 x i16>* %305, align 2, !alias.scope !77
  %307 = getelementptr i16, i16* %303, i64 8
  %308 = bitcast i16* %307 to <8 x i16>*
  %309 = load <8 x i16>, <8 x i16>* %308, align 2, !alias.scope !77
  %310 = bitcast i16* %304 to <8 x i16>*
  store <8 x i16> %306, <8 x i16>* %310, align 2, !alias.scope !80, !noalias !77
  %311 = getelementptr i16, i16* %304, i64 8
  %312 = bitcast i16* %311 to <8 x i16>*
  store <8 x i16> %309, <8 x i16>* %312, align 2, !alias.scope !80, !noalias !77
  %313 = or i64 %301, 16
  %314 = getelementptr i16, i16* %250, i64 %313
  %315 = getelementptr i16, i16* %277, i64 %313
  %316 = bitcast i16* %314 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !77
  %318 = getelementptr i16, i16* %314, i64 8
  %319 = bitcast i16* %318 to <8 x i16>*
  %320 = load <8 x i16>, <8 x i16>* %319, align 2, !alias.scope !77
  %321 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %321, align 2, !alias.scope !80, !noalias !77
  %322 = getelementptr i16, i16* %315, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  store <8 x i16> %320, <8 x i16>* %323, align 2, !alias.scope !80, !noalias !77
  %324 = or i64 %301, 32
  %325 = getelementptr i16, i16* %250, i64 %324
  %326 = getelementptr i16, i16* %277, i64 %324
  %327 = bitcast i16* %325 to <8 x i16>*
  %328 = load <8 x i16>, <8 x i16>* %327, align 2, !alias.scope !77
  %329 = getelementptr i16, i16* %325, i64 8
  %330 = bitcast i16* %329 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !77
  %332 = bitcast i16* %326 to <8 x i16>*
  store <8 x i16> %328, <8 x i16>* %332, align 2, !alias.scope !80, !noalias !77
  %333 = getelementptr i16, i16* %326, i64 8
  %334 = bitcast i16* %333 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %334, align 2, !alias.scope !80, !noalias !77
  %335 = or i64 %301, 48
  %336 = getelementptr i16, i16* %250, i64 %335
  %337 = getelementptr i16, i16* %277, i64 %335
  %338 = bitcast i16* %336 to <8 x i16>*
  %339 = load <8 x i16>, <8 x i16>* %338, align 2, !alias.scope !77
  %340 = getelementptr i16, i16* %336, i64 8
  %341 = bitcast i16* %340 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !77
  %343 = bitcast i16* %337 to <8 x i16>*
  store <8 x i16> %339, <8 x i16>* %343, align 2, !alias.scope !80, !noalias !77
  %344 = getelementptr i16, i16* %337, i64 8
  %345 = bitcast i16* %344 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %345, align 2, !alias.scope !80, !noalias !77
  %346 = add i64 %301, 64
  %347 = add i64 %302, -4
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %349, label %300, !llvm.loop !82

349:                                              ; preds = %300, %288
  %350 = phi i64 [ 0, %288 ], [ %346, %300 ]
  %351 = icmp eq i64 %296, 0
  br i1 %351, label %368, label %352

352:                                              ; preds = %349, %352
  %353 = phi i64 [ %365, %352 ], [ %350, %349 ]
  %354 = phi i64 [ %366, %352 ], [ %296, %349 ]
  %355 = getelementptr i16, i16* %250, i64 %353
  %356 = getelementptr i16, i16* %277, i64 %353
  %357 = bitcast i16* %355 to <8 x i16>*
  %358 = load <8 x i16>, <8 x i16>* %357, align 2, !alias.scope !77
  %359 = getelementptr i16, i16* %355, i64 8
  %360 = bitcast i16* %359 to <8 x i16>*
  %361 = load <8 x i16>, <8 x i16>* %360, align 2, !alias.scope !77
  %362 = bitcast i16* %356 to <8 x i16>*
  store <8 x i16> %358, <8 x i16>* %362, align 2, !alias.scope !80, !noalias !77
  %363 = getelementptr i16, i16* %356, i64 8
  %364 = bitcast i16* %363 to <8 x i16>*
  store <8 x i16> %361, <8 x i16>* %364, align 2, !alias.scope !80, !noalias !77
  %365 = add i64 %353, 16
  %366 = add i64 %354, -1
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %368, label %352, !llvm.loop !83

368:                                              ; preds = %352, %349
  %369 = icmp eq i64 %279, %289
  br i1 %369, label %423, label %370

370:                                              ; preds = %368, %281, %276
  %371 = phi i64 [ %278, %281 ], [ %278, %276 ], [ %290, %368 ]
  %372 = phi i16* [ %250, %281 ], [ %250, %276 ], [ %291, %368 ]
  %373 = phi i16* [ %277, %281 ], [ %277, %276 ], [ %292, %368 ]
  %374 = add i64 %371, -1
  %375 = and i64 %371, 7
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %388, label %377

377:                                              ; preds = %370, %377
  %378 = phi i64 [ %383, %377 ], [ %371, %370 ]
  %379 = phi i16* [ %385, %377 ], [ %372, %370 ]
  %380 = phi i16* [ %384, %377 ], [ %373, %370 ]
  %381 = phi i64 [ %386, %377 ], [ %375, %370 ]
  %382 = load i16, i16* %379, align 2
  store i16 %382, i16* %380, align 2
  %383 = add i64 %378, -1
  %384 = getelementptr inbounds i16, i16* %380, i64 1
  %385 = getelementptr inbounds i16, i16* %379, i64 1
  %386 = add i64 %381, -1
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %388, label %377, !llvm.loop !84

388:                                              ; preds = %377, %370
  %389 = phi i64 [ %371, %370 ], [ %383, %377 ]
  %390 = phi i16* [ %372, %370 ], [ %385, %377 ]
  %391 = phi i16* [ %373, %370 ], [ %384, %377 ]
  %392 = icmp ult i64 %374, 7
  br i1 %392, label %423, label %393

393:                                              ; preds = %388, %393
  %394 = phi i64 [ %419, %393 ], [ %389, %388 ]
  %395 = phi i16* [ %421, %393 ], [ %390, %388 ]
  %396 = phi i16* [ %420, %393 ], [ %391, %388 ]
  %397 = load i16, i16* %395, align 2
  store i16 %397, i16* %396, align 2
  %398 = getelementptr inbounds i16, i16* %396, i64 1
  %399 = getelementptr inbounds i16, i16* %395, i64 1
  %400 = load i16, i16* %399, align 2
  store i16 %400, i16* %398, align 2
  %401 = getelementptr inbounds i16, i16* %396, i64 2
  %402 = getelementptr inbounds i16, i16* %395, i64 2
  %403 = load i16, i16* %402, align 2
  store i16 %403, i16* %401, align 2
  %404 = getelementptr inbounds i16, i16* %396, i64 3
  %405 = getelementptr inbounds i16, i16* %395, i64 3
  %406 = load i16, i16* %405, align 2
  store i16 %406, i16* %404, align 2
  %407 = getelementptr inbounds i16, i16* %396, i64 4
  %408 = getelementptr inbounds i16, i16* %395, i64 4
  %409 = load i16, i16* %408, align 2
  store i16 %409, i16* %407, align 2
  %410 = getelementptr inbounds i16, i16* %396, i64 5
  %411 = getelementptr inbounds i16, i16* %395, i64 5
  %412 = load i16, i16* %411, align 2
  store i16 %412, i16* %410, align 2
  %413 = getelementptr inbounds i16, i16* %396, i64 6
  %414 = getelementptr inbounds i16, i16* %395, i64 6
  %415 = load i16, i16* %414, align 2
  store i16 %415, i16* %413, align 2
  %416 = getelementptr inbounds i16, i16* %396, i64 7
  %417 = getelementptr inbounds i16, i16* %395, i64 7
  %418 = load i16, i16* %417, align 2
  store i16 %418, i16* %416, align 2
  %419 = add i64 %394, -8
  %420 = getelementptr inbounds i16, i16* %396, i64 8
  %421 = getelementptr inbounds i16, i16* %395, i64 8
  %422 = icmp eq i64 %419, 0
  br i1 %422, label %423, label %393, !llvm.loop !85

423:                                              ; preds = %388, %393, %368, %245
  %424 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 14
  %425 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 14
  %426 = bitcast %"class.std::__1::vector.8"* %424 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %426, i8 0, i64 24, i1 false) #10
  %427 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 14, i32 0, i32 1
  %428 = bitcast %"struct.message_center::ButtonInfo"** %427 to i64*
  %429 = load i64, i64* %428, align 8
  %430 = bitcast %"class.std::__1::vector.8"* %425 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = sub i64 %429, %431
  %433 = ashr exact i64 %432, 6
  %434 = icmp eq i64 %432, 0
  br i1 %434, label %463, label %435

435:                                              ; preds = %423
  %436 = icmp ugt i64 %433, 288230376151711743
  br i1 %436, label %437, label %439

437:                                              ; preds = %435
  %438 = bitcast %"class.std::__1::vector.8"* %424 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %438) #11
  unreachable

439:                                              ; preds = %435
  %440 = tail call i8* @_Znwm(i64 %432) #12
  %441 = bitcast i8* %440 to %"struct.message_center::ButtonInfo"*
  %442 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 14, i32 0, i32 1
  %443 = bitcast %"struct.message_center::ButtonInfo"** %442 to i8**
  store i8* %440, i8** %443, align 8
  %444 = bitcast %"class.std::__1::vector.8"* %424 to i8**
  store i8* %440, i8** %444, align 8
  %445 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %441, i64 %433
  %446 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  store %"struct.message_center::ButtonInfo"* %445, %"struct.message_center::ButtonInfo"** %446, align 8
  %447 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %425, i64 0, i32 0, i32 0
  %448 = load %"struct.message_center::ButtonInfo"*, %"struct.message_center::ButtonInfo"** %447, align 8
  %449 = load %"struct.message_center::ButtonInfo"*, %"struct.message_center::ButtonInfo"** %427, align 8
  %450 = bitcast %"struct.message_center::ButtonInfo"** %442 to i64*
  %451 = ptrtoint i8* %440 to i64
  %452 = icmp eq %"struct.message_center::ButtonInfo"* %448, %449
  br i1 %452, label %461, label %453

453:                                              ; preds = %439, %453
  %454 = phi %"struct.message_center::ButtonInfo"* [ %457, %453 ], [ %441, %439 ]
  %455 = phi %"struct.message_center::ButtonInfo"* [ %456, %453 ], [ %448, %439 ]
  tail call void @_ZN14message_center10ButtonInfoC2ERKS0_(%"struct.message_center::ButtonInfo"* %454, %"struct.message_center::ButtonInfo"* dereferenceable(64) %455) #10
  %456 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %455, i64 1
  %457 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %454, i64 1
  %458 = icmp eq %"struct.message_center::ButtonInfo"* %456, %449
  br i1 %458, label %459, label %453

459:                                              ; preds = %453
  %460 = ptrtoint %"struct.message_center::ButtonInfo"* %457 to i64
  br label %461

461:                                              ; preds = %459, %439
  %462 = phi i64 [ %451, %439 ], [ %460, %459 ]
  store i64 %462, i64* %450, align 8
  br label %463

463:                                              ; preds = %423, %461
  %464 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 15
  %465 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 15
  %466 = load i8, i8* %465, align 8, !range !22
  store i8 %466, i8* %464, align 8
  %467 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 17
  %468 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 17
  %469 = bitcast %"class.std::__1::vector.15"* %467 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %469, i8 0, i64 24, i1 false) #10
  %470 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 17, i32 0, i32 1
  %471 = bitcast i32** %470 to i64*
  %472 = load i64, i64* %471, align 8
  %473 = bitcast %"class.std::__1::vector.15"* %468 to i64*
  %474 = load i64, i64* %473, align 8
  %475 = sub i64 %472, %474
  %476 = ashr exact i64 %475, 2
  %477 = icmp eq i64 %475, 0
  br i1 %477, label %505, label %478

478:                                              ; preds = %463
  %479 = icmp ugt i64 %476, 4611686018427387903
  br i1 %479, label %480, label %482

480:                                              ; preds = %478
  %481 = bitcast %"class.std::__1::vector.15"* %467 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %481) #11
  unreachable

482:                                              ; preds = %478
  %483 = tail call i8* @_Znwm(i64 %475) #12
  %484 = bitcast i8* %483 to i32*
  %485 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 17, i32 0, i32 1
  %486 = bitcast i32** %485 to i8**
  store i8* %483, i8** %486, align 8
  %487 = bitcast %"class.std::__1::vector.15"* %467 to i8**
  store i8* %483, i8** %487, align 8
  %488 = getelementptr inbounds i32, i32* %484, i64 %476
  %489 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 17, i32 0, i32 2, i32 0, i32 0
  store i32* %488, i32** %489, align 8
  %490 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %468, i64 0, i32 0, i32 0
  %491 = load i32*, i32** %490, align 8
  %492 = load i64, i64* %471, align 8
  %493 = bitcast i32** %485 to i64*
  %494 = ptrtoint i8* %483 to i64
  %495 = ptrtoint i32* %491 to i64
  %496 = sub i64 %492, %495
  %497 = icmp sgt i64 %496, 0
  br i1 %497, label %498, label %503

498:                                              ; preds = %482
  %499 = lshr exact i64 %496, 2
  %500 = bitcast i32* %491 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %483, i8* align 4 %500, i64 %496, i1 false) #10
  %501 = getelementptr inbounds i32, i32* %484, i64 %499
  %502 = ptrtoint i32* %501 to i64
  br label %503

503:                                              ; preds = %498, %482
  %504 = phi i64 [ %502, %498 ], [ %494, %482 ]
  store i64 %504, i64* %493, align 8
  br label %505

505:                                              ; preds = %463, %503
  %506 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 18
  %507 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 18
  %508 = bitcast i8* %507 to i16*
  %509 = bitcast i8* %506 to i16*
  %510 = load i16, i16* %508, align 8
  store i16 %510, i16* %509, align 8
  %511 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 21
  %512 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 21
  %513 = bitcast %"class.std::__1::basic_string"* %512 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %514 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %513, i64 0, i32 1, i32 1
  %515 = load i8, i8* %514, align 1
  %516 = icmp slt i8 %515, 0
  br i1 %516, label %520, label %517

517:                                              ; preds = %505
  %518 = bitcast %"class.std::__1::basic_string"* %511 to i8*
  %519 = bitcast %"class.std::__1::basic_string"* %512 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %518, i8* align 8 %519, i64 24, i1 false) #10
  br label %695

520:                                              ; preds = %505
  %521 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %512, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %522 = load i16*, i16** %521, align 8
  %523 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %524 = load i64, i64* %523, align 8
  %525 = icmp ult i64 %524, 11
  br i1 %525, label %526, label %531

526:                                              ; preds = %520
  %527 = bitcast %"class.std::__1::basic_string"* %511 to i16*
  %528 = trunc i64 %524 to i8
  %529 = bitcast %"class.std::__1::basic_string"* %511 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %530 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %529, i64 0, i32 1, i32 1
  store i8 %528, i8* %530, align 1
  br label %548

531:                                              ; preds = %520
  %532 = icmp ugt i64 %524, 9223372036854775791
  br i1 %532, label %533, label %535

533:                                              ; preds = %531
  %534 = bitcast %"class.std::__1::basic_string"* %511 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %534) #11
  unreachable

535:                                              ; preds = %531
  %536 = add nuw nsw i64 %524, 8
  %537 = and i64 %536, -8
  %538 = icmp slt i64 %537, 0
  br i1 %538, label %539, label %540

539:                                              ; preds = %535
  tail call void @abort() #11
  unreachable

540:                                              ; preds = %535
  %541 = shl i64 %537, 1
  %542 = tail call i8* @_Znwm(i64 %541) #12
  %543 = bitcast i8* %542 to i16*
  %544 = bitcast %"class.std::__1::basic_string"* %511 to i8**
  store i8* %542, i8** %544, align 8
  %545 = or i64 %537, -9223372036854775808
  %546 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %545, i64* %546, align 8
  %547 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %524, i64* %547, align 8
  br label %548

548:                                              ; preds = %540, %526
  %549 = phi i16* [ %527, %526 ], [ %543, %540 ]
  %550 = add nuw nsw i64 %524, 1
  %551 = add i64 %524, 1
  %552 = icmp ult i64 %551, 16
  br i1 %552, label %642, label %553

553:                                              ; preds = %548
  %554 = add i64 %524, 1
  %555 = getelementptr i16, i16* %549, i64 %554
  %556 = getelementptr i16, i16* %522, i64 %554
  %557 = icmp ult i16* %549, %556
  %558 = icmp ult i16* %522, %555
  %559 = and i1 %557, %558
  br i1 %559, label %642, label %560

560:                                              ; preds = %553
  %561 = and i64 %551, -16
  %562 = sub i64 %550, %561
  %563 = getelementptr i16, i16* %522, i64 %561
  %564 = getelementptr i16, i16* %549, i64 %561
  %565 = add i64 %561, -16
  %566 = lshr exact i64 %565, 4
  %567 = add nuw nsw i64 %566, 1
  %568 = and i64 %567, 3
  %569 = icmp ult i64 %565, 48
  br i1 %569, label %621, label %570

570:                                              ; preds = %560
  %571 = sub nsw i64 %567, %568
  br label %572

572:                                              ; preds = %572, %570
  %573 = phi i64 [ 0, %570 ], [ %618, %572 ]
  %574 = phi i64 [ %571, %570 ], [ %619, %572 ]
  %575 = getelementptr i16, i16* %522, i64 %573
  %576 = getelementptr i16, i16* %549, i64 %573
  %577 = bitcast i16* %575 to <8 x i16>*
  %578 = load <8 x i16>, <8 x i16>* %577, align 2, !alias.scope !86
  %579 = getelementptr i16, i16* %575, i64 8
  %580 = bitcast i16* %579 to <8 x i16>*
  %581 = load <8 x i16>, <8 x i16>* %580, align 2, !alias.scope !86
  %582 = bitcast i16* %576 to <8 x i16>*
  store <8 x i16> %578, <8 x i16>* %582, align 2, !alias.scope !89, !noalias !86
  %583 = getelementptr i16, i16* %576, i64 8
  %584 = bitcast i16* %583 to <8 x i16>*
  store <8 x i16> %581, <8 x i16>* %584, align 2, !alias.scope !89, !noalias !86
  %585 = or i64 %573, 16
  %586 = getelementptr i16, i16* %522, i64 %585
  %587 = getelementptr i16, i16* %549, i64 %585
  %588 = bitcast i16* %586 to <8 x i16>*
  %589 = load <8 x i16>, <8 x i16>* %588, align 2, !alias.scope !86
  %590 = getelementptr i16, i16* %586, i64 8
  %591 = bitcast i16* %590 to <8 x i16>*
  %592 = load <8 x i16>, <8 x i16>* %591, align 2, !alias.scope !86
  %593 = bitcast i16* %587 to <8 x i16>*
  store <8 x i16> %589, <8 x i16>* %593, align 2, !alias.scope !89, !noalias !86
  %594 = getelementptr i16, i16* %587, i64 8
  %595 = bitcast i16* %594 to <8 x i16>*
  store <8 x i16> %592, <8 x i16>* %595, align 2, !alias.scope !89, !noalias !86
  %596 = or i64 %573, 32
  %597 = getelementptr i16, i16* %522, i64 %596
  %598 = getelementptr i16, i16* %549, i64 %596
  %599 = bitcast i16* %597 to <8 x i16>*
  %600 = load <8 x i16>, <8 x i16>* %599, align 2, !alias.scope !86
  %601 = getelementptr i16, i16* %597, i64 8
  %602 = bitcast i16* %601 to <8 x i16>*
  %603 = load <8 x i16>, <8 x i16>* %602, align 2, !alias.scope !86
  %604 = bitcast i16* %598 to <8 x i16>*
  store <8 x i16> %600, <8 x i16>* %604, align 2, !alias.scope !89, !noalias !86
  %605 = getelementptr i16, i16* %598, i64 8
  %606 = bitcast i16* %605 to <8 x i16>*
  store <8 x i16> %603, <8 x i16>* %606, align 2, !alias.scope !89, !noalias !86
  %607 = or i64 %573, 48
  %608 = getelementptr i16, i16* %522, i64 %607
  %609 = getelementptr i16, i16* %549, i64 %607
  %610 = bitcast i16* %608 to <8 x i16>*
  %611 = load <8 x i16>, <8 x i16>* %610, align 2, !alias.scope !86
  %612 = getelementptr i16, i16* %608, i64 8
  %613 = bitcast i16* %612 to <8 x i16>*
  %614 = load <8 x i16>, <8 x i16>* %613, align 2, !alias.scope !86
  %615 = bitcast i16* %609 to <8 x i16>*
  store <8 x i16> %611, <8 x i16>* %615, align 2, !alias.scope !89, !noalias !86
  %616 = getelementptr i16, i16* %609, i64 8
  %617 = bitcast i16* %616 to <8 x i16>*
  store <8 x i16> %614, <8 x i16>* %617, align 2, !alias.scope !89, !noalias !86
  %618 = add i64 %573, 64
  %619 = add i64 %574, -4
  %620 = icmp eq i64 %619, 0
  br i1 %620, label %621, label %572, !llvm.loop !91

621:                                              ; preds = %572, %560
  %622 = phi i64 [ 0, %560 ], [ %618, %572 ]
  %623 = icmp eq i64 %568, 0
  br i1 %623, label %640, label %624

624:                                              ; preds = %621, %624
  %625 = phi i64 [ %637, %624 ], [ %622, %621 ]
  %626 = phi i64 [ %638, %624 ], [ %568, %621 ]
  %627 = getelementptr i16, i16* %522, i64 %625
  %628 = getelementptr i16, i16* %549, i64 %625
  %629 = bitcast i16* %627 to <8 x i16>*
  %630 = load <8 x i16>, <8 x i16>* %629, align 2, !alias.scope !86
  %631 = getelementptr i16, i16* %627, i64 8
  %632 = bitcast i16* %631 to <8 x i16>*
  %633 = load <8 x i16>, <8 x i16>* %632, align 2, !alias.scope !86
  %634 = bitcast i16* %628 to <8 x i16>*
  store <8 x i16> %630, <8 x i16>* %634, align 2, !alias.scope !89, !noalias !86
  %635 = getelementptr i16, i16* %628, i64 8
  %636 = bitcast i16* %635 to <8 x i16>*
  store <8 x i16> %633, <8 x i16>* %636, align 2, !alias.scope !89, !noalias !86
  %637 = add i64 %625, 16
  %638 = add i64 %626, -1
  %639 = icmp eq i64 %638, 0
  br i1 %639, label %640, label %624, !llvm.loop !92

640:                                              ; preds = %624, %621
  %641 = icmp eq i64 %551, %561
  br i1 %641, label %695, label %642

642:                                              ; preds = %640, %553, %548
  %643 = phi i64 [ %550, %553 ], [ %550, %548 ], [ %562, %640 ]
  %644 = phi i16* [ %522, %553 ], [ %522, %548 ], [ %563, %640 ]
  %645 = phi i16* [ %549, %553 ], [ %549, %548 ], [ %564, %640 ]
  %646 = add i64 %643, -1
  %647 = and i64 %643, 7
  %648 = icmp eq i64 %647, 0
  br i1 %648, label %660, label %649

649:                                              ; preds = %642, %649
  %650 = phi i64 [ %655, %649 ], [ %643, %642 ]
  %651 = phi i16* [ %657, %649 ], [ %644, %642 ]
  %652 = phi i16* [ %656, %649 ], [ %645, %642 ]
  %653 = phi i64 [ %658, %649 ], [ %647, %642 ]
  %654 = load i16, i16* %651, align 2
  store i16 %654, i16* %652, align 2
  %655 = add i64 %650, -1
  %656 = getelementptr inbounds i16, i16* %652, i64 1
  %657 = getelementptr inbounds i16, i16* %651, i64 1
  %658 = add i64 %653, -1
  %659 = icmp eq i64 %658, 0
  br i1 %659, label %660, label %649, !llvm.loop !93

660:                                              ; preds = %649, %642
  %661 = phi i64 [ %643, %642 ], [ %655, %649 ]
  %662 = phi i16* [ %644, %642 ], [ %657, %649 ]
  %663 = phi i16* [ %645, %642 ], [ %656, %649 ]
  %664 = icmp ult i64 %646, 7
  br i1 %664, label %695, label %665

665:                                              ; preds = %660, %665
  %666 = phi i64 [ %691, %665 ], [ %661, %660 ]
  %667 = phi i16* [ %693, %665 ], [ %662, %660 ]
  %668 = phi i16* [ %692, %665 ], [ %663, %660 ]
  %669 = load i16, i16* %667, align 2
  store i16 %669, i16* %668, align 2
  %670 = getelementptr inbounds i16, i16* %668, i64 1
  %671 = getelementptr inbounds i16, i16* %667, i64 1
  %672 = load i16, i16* %671, align 2
  store i16 %672, i16* %670, align 2
  %673 = getelementptr inbounds i16, i16* %668, i64 2
  %674 = getelementptr inbounds i16, i16* %667, i64 2
  %675 = load i16, i16* %674, align 2
  store i16 %675, i16* %673, align 2
  %676 = getelementptr inbounds i16, i16* %668, i64 3
  %677 = getelementptr inbounds i16, i16* %667, i64 3
  %678 = load i16, i16* %677, align 2
  store i16 %678, i16* %676, align 2
  %679 = getelementptr inbounds i16, i16* %668, i64 4
  %680 = getelementptr inbounds i16, i16* %667, i64 4
  %681 = load i16, i16* %680, align 2
  store i16 %681, i16* %679, align 2
  %682 = getelementptr inbounds i16, i16* %668, i64 5
  %683 = getelementptr inbounds i16, i16* %667, i64 5
  %684 = load i16, i16* %683, align 2
  store i16 %684, i16* %682, align 2
  %685 = getelementptr inbounds i16, i16* %668, i64 6
  %686 = getelementptr inbounds i16, i16* %667, i64 6
  %687 = load i16, i16* %686, align 2
  store i16 %687, i16* %685, align 2
  %688 = getelementptr inbounds i16, i16* %668, i64 7
  %689 = getelementptr inbounds i16, i16* %667, i64 7
  %690 = load i16, i16* %689, align 2
  store i16 %690, i16* %688, align 2
  %691 = add i64 %666, -8
  %692 = getelementptr inbounds i16, i16* %668, i64 8
  %693 = getelementptr inbounds i16, i16* %667, i64 8
  %694 = icmp eq i64 %691, 0
  br i1 %694, label %695, label %665, !llvm.loop !94

695:                                              ; preds = %660, %665, %640, %517
  %696 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  %697 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %696, i8* align 8 %697, i64 20, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14message_center20RichNotificationDataD2Ev(%"class.message_center::RichNotificationData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 21
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 17, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 17, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 14
  %21 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %20, i64 0, i32 0, i32 0
  %22 = load %"struct.message_center::ButtonInfo"*, %"struct.message_center::ButtonInfo"** %21, align 8
  %23 = icmp eq %"struct.message_center::ButtonInfo"* %22, null
  br i1 %23, label %61, label %24

24:                                               ; preds = %19
  %25 = bitcast %"struct.message_center::ButtonInfo"* %22 to i8*
  %26 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 14, i32 0, i32 1
  %27 = load %"struct.message_center::ButtonInfo"*, %"struct.message_center::ButtonInfo"** %26, align 8
  %28 = icmp eq %"struct.message_center::ButtonInfo"* %27, %22
  br i1 %28, label %59, label %29

29:                                               ; preds = %24, %54
  %30 = phi %"struct.message_center::ButtonInfo"* [ %31, %54 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %30, i64 -1
  %32 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %30, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0
  %33 = load i8, i8* %32, align 8, !range !22
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %30, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = bitcast %"class.std::__1::basic_string"* %36 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %41, %35
  store i8 0, i8* %32, align 8
  br label %45

45:                                               ; preds = %44, %29
  %46 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %30, i64 -1, i32 1
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %46) #10
  %47 = bitcast %"struct.message_center::ButtonInfo"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %47, i64 0, i32 1, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = bitcast %"struct.message_center::ButtonInfo"* %31 to i8**
  %53 = load i8*, i8** %52, align 8
  tail call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %51, %45
  %55 = icmp eq %"struct.message_center::ButtonInfo"* %31, %22
  br i1 %55, label %56, label %29

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.8"* %20 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %24
  %60 = phi i8* [ %58, %56 ], [ %25, %24 ]
  store %"struct.message_center::ButtonInfo"* %22, %"struct.message_center::ButtonInfo"** %26, align 8
  tail call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %19, %59
  %62 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 13
  %63 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = bitcast %"class.std::__1::basic_string"* %62 to i8**
  %69 = load i8*, i8** %68, align 8
  tail call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %61, %67
  %71 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 10
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %71, i64 0, i32 0, i32 0
  %73 = load %"struct.message_center::NotificationItem"*, %"struct.message_center::NotificationItem"** %72, align 8
  %74 = icmp eq %"struct.message_center::NotificationItem"* %73, null
  br i1 %74, label %106, label %75

75:                                               ; preds = %70
  %76 = bitcast %"struct.message_center::NotificationItem"* %73 to i8*
  %77 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 10, i32 0, i32 1
  %78 = load %"struct.message_center::NotificationItem"*, %"struct.message_center::NotificationItem"** %77, align 8
  %79 = icmp eq %"struct.message_center::NotificationItem"* %78, %73
  br i1 %79, label %104, label %80

80:                                               ; preds = %75, %99
  %81 = phi %"struct.message_center::NotificationItem"* [ %82, %99 ], [ %78, %75 ]
  %82 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %81, i64 -1
  %83 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %81, i64 -1, i32 1
  %84 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %84, i64 0, i32 1, i32 1
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %80
  %89 = bitcast %"class.std::__1::basic_string"* %83 to i8**
  %90 = load i8*, i8** %89, align 8
  tail call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %88, %80
  %92 = bitcast %"struct.message_center::NotificationItem"* %82 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %92, i64 0, i32 1, i32 1
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %91
  %97 = bitcast %"struct.message_center::NotificationItem"* %82 to i8**
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %96, %91
  %100 = icmp eq %"struct.message_center::NotificationItem"* %82, %73
  br i1 %100, label %101, label %80

101:                                              ; preds = %99
  %102 = bitcast %"class.std::__1::vector"* %71 to i8**
  %103 = load i8*, i8** %102, align 8
  br label %104

104:                                              ; preds = %101, %75
  %105 = phi i8* [ %103, %101 ], [ %76, %75 ]
  store %"struct.message_center::NotificationItem"* %73, %"struct.message_center::NotificationItem"** %77, align 8
  tail call void @_ZdlPv(i8* %105) #12
  br label %106

106:                                              ; preds = %70, %104
  %107 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 6
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %107) #10
  %108 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 5
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %108) #10
  %109 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 4
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %110, i64 0, i32 1, i32 1
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %106
  %115 = bitcast %"class.std::__1::basic_string"* %109 to i8**
  %116 = load i8*, i8** %115, align 8
  tail call void @_ZdlPv(i8* %116) #12
  br label %117

117:                                              ; preds = %106, %114
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14message_center12NotificationC2ENS_16NotificationTypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS3_IDsNS4_IDsEENS6_IDsEEEESF_RKN3gfx5ImageESF_RK4GURLRKNS_10NotifierIdERKNS_20RichNotificationDataE13scoped_refptrINS_20NotificationDelegateEE(%"class.message_center::Notification"*, i32, %"class.std::__1::basic_string.27"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.gfx::Image"* dereferenceable(8), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %class.GURL* dereferenceable(120), %"struct.message_center::NotifierId"* dereferenceable(176), %"class.message_center::RichNotificationData"* dereferenceable(240), i64) unnamed_addr #0 align 2 {
  %12 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN14message_center12NotificationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 1
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 2
  %15 = bitcast %"class.std::__1::basic_string.27"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %11
  %20 = bitcast %"class.std::__1::basic_string.27"* %14 to i8*
  %21 = bitcast %"class.std::__1::basic_string.27"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #10
  br label %27

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.27"* %14, i8* %24, i64 %26) #10
  br label %27

27:                                               ; preds = %19, %22
  %28 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %35 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false) #10
  br label %211

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i16*, i16** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp ult i64 %40, 11
  br i1 %41, label %42, label %47

42:                                               ; preds = %36
  %43 = bitcast %"class.std::__1::basic_string"* %28 to i16*
  %44 = trunc i64 %40 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  store i8 %44, i8* %46, align 1
  br label %64

47:                                               ; preds = %36
  %48 = icmp ugt i64 %40, 9223372036854775791
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::basic_string"* %28 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %50) #11
  unreachable

51:                                               ; preds = %47
  %52 = add nuw nsw i64 %40, 8
  %53 = and i64 %52, -8
  %54 = icmp slt i64 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %51
  tail call void @abort() #11
  unreachable

56:                                               ; preds = %51
  %57 = shl i64 %53, 1
  %58 = tail call i8* @_Znwm(i64 %57) #12
  %59 = bitcast i8* %58 to i16*
  %60 = bitcast %"class.std::__1::basic_string"* %28 to i8**
  store i8* %58, i8** %60, align 8
  %61 = or i64 %53, -9223372036854775808
  %62 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %40, i64* %63, align 8
  br label %64

64:                                               ; preds = %56, %42
  %65 = phi i16* [ %43, %42 ], [ %59, %56 ]
  %66 = add nuw nsw i64 %40, 1
  %67 = add i64 %40, 1
  %68 = icmp ult i64 %67, 16
  br i1 %68, label %158, label %69

69:                                               ; preds = %64
  %70 = add i64 %40, 1
  %71 = getelementptr i16, i16* %65, i64 %70
  %72 = getelementptr i16, i16* %38, i64 %70
  %73 = icmp ult i16* %65, %72
  %74 = icmp ult i16* %38, %71
  %75 = and i1 %73, %74
  br i1 %75, label %158, label %76

76:                                               ; preds = %69
  %77 = and i64 %67, -16
  %78 = sub i64 %66, %77
  %79 = getelementptr i16, i16* %38, i64 %77
  %80 = getelementptr i16, i16* %65, i64 %77
  %81 = add i64 %77, -16
  %82 = lshr exact i64 %81, 4
  %83 = add nuw nsw i64 %82, 1
  %84 = and i64 %83, 3
  %85 = icmp ult i64 %81, 48
  br i1 %85, label %137, label %86

86:                                               ; preds = %76
  %87 = sub nsw i64 %83, %84
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ 0, %86 ], [ %134, %88 ]
  %90 = phi i64 [ %87, %86 ], [ %135, %88 ]
  %91 = getelementptr i16, i16* %38, i64 %89
  %92 = getelementptr i16, i16* %65, i64 %89
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !95
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !95
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !98, !noalias !95
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !98, !noalias !95
  %101 = or i64 %89, 16
  %102 = getelementptr i16, i16* %38, i64 %101
  %103 = getelementptr i16, i16* %65, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !95
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !95
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !98, !noalias !95
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !98, !noalias !95
  %112 = or i64 %89, 32
  %113 = getelementptr i16, i16* %38, i64 %112
  %114 = getelementptr i16, i16* %65, i64 %112
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !95
  %117 = getelementptr i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !95
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !98, !noalias !95
  %121 = getelementptr i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !98, !noalias !95
  %123 = or i64 %89, 48
  %124 = getelementptr i16, i16* %38, i64 %123
  %125 = getelementptr i16, i16* %65, i64 %123
  %126 = bitcast i16* %124 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !95
  %128 = getelementptr i16, i16* %124, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !95
  %131 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !98, !noalias !95
  %132 = getelementptr i16, i16* %125, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %133, align 2, !alias.scope !98, !noalias !95
  %134 = add i64 %89, 64
  %135 = add i64 %90, -4
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %88, !llvm.loop !100

137:                                              ; preds = %88, %76
  %138 = phi i64 [ 0, %76 ], [ %134, %88 ]
  %139 = icmp eq i64 %84, 0
  br i1 %139, label %156, label %140

140:                                              ; preds = %137, %140
  %141 = phi i64 [ %153, %140 ], [ %138, %137 ]
  %142 = phi i64 [ %154, %140 ], [ %84, %137 ]
  %143 = getelementptr i16, i16* %38, i64 %141
  %144 = getelementptr i16, i16* %65, i64 %141
  %145 = bitcast i16* %143 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !95
  %147 = getelementptr i16, i16* %143, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !95
  %150 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %150, align 2, !alias.scope !98, !noalias !95
  %151 = getelementptr i16, i16* %144, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %152, align 2, !alias.scope !98, !noalias !95
  %153 = add i64 %141, 16
  %154 = add i64 %142, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %140, !llvm.loop !101

156:                                              ; preds = %140, %137
  %157 = icmp eq i64 %67, %77
  br i1 %157, label %211, label %158

158:                                              ; preds = %156, %69, %64
  %159 = phi i64 [ %66, %69 ], [ %66, %64 ], [ %78, %156 ]
  %160 = phi i16* [ %38, %69 ], [ %38, %64 ], [ %79, %156 ]
  %161 = phi i16* [ %65, %69 ], [ %65, %64 ], [ %80, %156 ]
  %162 = add i64 %159, -1
  %163 = and i64 %159, 7
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %176, label %165

165:                                              ; preds = %158, %165
  %166 = phi i64 [ %171, %165 ], [ %159, %158 ]
  %167 = phi i16* [ %173, %165 ], [ %160, %158 ]
  %168 = phi i16* [ %172, %165 ], [ %161, %158 ]
  %169 = phi i64 [ %174, %165 ], [ %163, %158 ]
  %170 = load i16, i16* %167, align 2
  store i16 %170, i16* %168, align 2
  %171 = add i64 %166, -1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = getelementptr inbounds i16, i16* %167, i64 1
  %174 = add i64 %169, -1
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %165, !llvm.loop !102

176:                                              ; preds = %165, %158
  %177 = phi i64 [ %159, %158 ], [ %171, %165 ]
  %178 = phi i16* [ %160, %158 ], [ %173, %165 ]
  %179 = phi i16* [ %161, %158 ], [ %172, %165 ]
  %180 = icmp ult i64 %162, 7
  br i1 %180, label %211, label %181

181:                                              ; preds = %176, %181
  %182 = phi i64 [ %207, %181 ], [ %177, %176 ]
  %183 = phi i16* [ %209, %181 ], [ %178, %176 ]
  %184 = phi i16* [ %208, %181 ], [ %179, %176 ]
  %185 = load i16, i16* %183, align 2
  store i16 %185, i16* %184, align 2
  %186 = getelementptr inbounds i16, i16* %184, i64 1
  %187 = getelementptr inbounds i16, i16* %183, i64 1
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %184, i64 2
  %190 = getelementptr inbounds i16, i16* %183, i64 2
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %184, i64 3
  %193 = getelementptr inbounds i16, i16* %183, i64 3
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %184, i64 4
  %196 = getelementptr inbounds i16, i16* %183, i64 4
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %184, i64 5
  %199 = getelementptr inbounds i16, i16* %183, i64 5
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = getelementptr inbounds i16, i16* %184, i64 6
  %202 = getelementptr inbounds i16, i16* %183, i64 6
  %203 = load i16, i16* %202, align 2
  store i16 %203, i16* %201, align 2
  %204 = getelementptr inbounds i16, i16* %184, i64 7
  %205 = getelementptr inbounds i16, i16* %183, i64 7
  %206 = load i16, i16* %205, align 2
  store i16 %206, i16* %204, align 2
  %207 = add i64 %182, -8
  %208 = getelementptr inbounds i16, i16* %184, i64 8
  %209 = getelementptr inbounds i16, i16* %183, i64 8
  %210 = icmp eq i64 %207, 0
  br i1 %210, label %211, label %181, !llvm.loop !103

211:                                              ; preds = %176, %181, %156, %33
  %212 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 4
  %213 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %213, i64 0, i32 1, i32 1
  %215 = load i8, i8* %214, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %220, label %217

217:                                              ; preds = %211
  %218 = bitcast %"class.std::__1::basic_string"* %212 to i8*
  %219 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 24, i1 false) #10
  br label %395

220:                                              ; preds = %211
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load i16*, i16** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %224 = load i64, i64* %223, align 8
  %225 = icmp ult i64 %224, 11
  br i1 %225, label %226, label %231

226:                                              ; preds = %220
  %227 = bitcast %"class.std::__1::basic_string"* %212 to i16*
  %228 = trunc i64 %224 to i8
  %229 = bitcast %"class.std::__1::basic_string"* %212 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %229, i64 0, i32 1, i32 1
  store i8 %228, i8* %230, align 1
  br label %248

231:                                              ; preds = %220
  %232 = icmp ugt i64 %224, 9223372036854775791
  br i1 %232, label %233, label %235

233:                                              ; preds = %231
  %234 = bitcast %"class.std::__1::basic_string"* %212 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %234) #11
  unreachable

235:                                              ; preds = %231
  %236 = add nuw nsw i64 %224, 8
  %237 = and i64 %236, -8
  %238 = icmp slt i64 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %235
  tail call void @abort() #11
  unreachable

240:                                              ; preds = %235
  %241 = shl i64 %237, 1
  %242 = tail call i8* @_Znwm(i64 %241) #12
  %243 = bitcast i8* %242 to i16*
  %244 = bitcast %"class.std::__1::basic_string"* %212 to i8**
  store i8* %242, i8** %244, align 8
  %245 = or i64 %237, -9223372036854775808
  %246 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %245, i64* %246, align 8
  %247 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %224, i64* %247, align 8
  br label %248

248:                                              ; preds = %240, %226
  %249 = phi i16* [ %227, %226 ], [ %243, %240 ]
  %250 = add nuw nsw i64 %224, 1
  %251 = add i64 %224, 1
  %252 = icmp ult i64 %251, 16
  br i1 %252, label %342, label %253

253:                                              ; preds = %248
  %254 = add i64 %224, 1
  %255 = getelementptr i16, i16* %249, i64 %254
  %256 = getelementptr i16, i16* %222, i64 %254
  %257 = icmp ult i16* %249, %256
  %258 = icmp ult i16* %222, %255
  %259 = and i1 %257, %258
  br i1 %259, label %342, label %260

260:                                              ; preds = %253
  %261 = and i64 %251, -16
  %262 = sub i64 %250, %261
  %263 = getelementptr i16, i16* %222, i64 %261
  %264 = getelementptr i16, i16* %249, i64 %261
  %265 = add i64 %261, -16
  %266 = lshr exact i64 %265, 4
  %267 = add nuw nsw i64 %266, 1
  %268 = and i64 %267, 3
  %269 = icmp ult i64 %265, 48
  br i1 %269, label %321, label %270

270:                                              ; preds = %260
  %271 = sub nsw i64 %267, %268
  br label %272

272:                                              ; preds = %272, %270
  %273 = phi i64 [ 0, %270 ], [ %318, %272 ]
  %274 = phi i64 [ %271, %270 ], [ %319, %272 ]
  %275 = getelementptr i16, i16* %222, i64 %273
  %276 = getelementptr i16, i16* %249, i64 %273
  %277 = bitcast i16* %275 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !104
  %279 = getelementptr i16, i16* %275, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  %281 = load <8 x i16>, <8 x i16>* %280, align 2, !alias.scope !104
  %282 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %282, align 2, !alias.scope !107, !noalias !104
  %283 = getelementptr i16, i16* %276, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %281, <8 x i16>* %284, align 2, !alias.scope !107, !noalias !104
  %285 = or i64 %273, 16
  %286 = getelementptr i16, i16* %222, i64 %285
  %287 = getelementptr i16, i16* %249, i64 %285
  %288 = bitcast i16* %286 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !104
  %290 = getelementptr i16, i16* %286, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !104
  %293 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %293, align 2, !alias.scope !107, !noalias !104
  %294 = getelementptr i16, i16* %287, i64 8
  %295 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %295, align 2, !alias.scope !107, !noalias !104
  %296 = or i64 %273, 32
  %297 = getelementptr i16, i16* %222, i64 %296
  %298 = getelementptr i16, i16* %249, i64 %296
  %299 = bitcast i16* %297 to <8 x i16>*
  %300 = load <8 x i16>, <8 x i16>* %299, align 2, !alias.scope !104
  %301 = getelementptr i16, i16* %297, i64 8
  %302 = bitcast i16* %301 to <8 x i16>*
  %303 = load <8 x i16>, <8 x i16>* %302, align 2, !alias.scope !104
  %304 = bitcast i16* %298 to <8 x i16>*
  store <8 x i16> %300, <8 x i16>* %304, align 2, !alias.scope !107, !noalias !104
  %305 = getelementptr i16, i16* %298, i64 8
  %306 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %303, <8 x i16>* %306, align 2, !alias.scope !107, !noalias !104
  %307 = or i64 %273, 48
  %308 = getelementptr i16, i16* %222, i64 %307
  %309 = getelementptr i16, i16* %249, i64 %307
  %310 = bitcast i16* %308 to <8 x i16>*
  %311 = load <8 x i16>, <8 x i16>* %310, align 2, !alias.scope !104
  %312 = getelementptr i16, i16* %308, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !104
  %315 = bitcast i16* %309 to <8 x i16>*
  store <8 x i16> %311, <8 x i16>* %315, align 2, !alias.scope !107, !noalias !104
  %316 = getelementptr i16, i16* %309, i64 8
  %317 = bitcast i16* %316 to <8 x i16>*
  store <8 x i16> %314, <8 x i16>* %317, align 2, !alias.scope !107, !noalias !104
  %318 = add i64 %273, 64
  %319 = add i64 %274, -4
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %272, !llvm.loop !109

321:                                              ; preds = %272, %260
  %322 = phi i64 [ 0, %260 ], [ %318, %272 ]
  %323 = icmp eq i64 %268, 0
  br i1 %323, label %340, label %324

324:                                              ; preds = %321, %324
  %325 = phi i64 [ %337, %324 ], [ %322, %321 ]
  %326 = phi i64 [ %338, %324 ], [ %268, %321 ]
  %327 = getelementptr i16, i16* %222, i64 %325
  %328 = getelementptr i16, i16* %249, i64 %325
  %329 = bitcast i16* %327 to <8 x i16>*
  %330 = load <8 x i16>, <8 x i16>* %329, align 2, !alias.scope !104
  %331 = getelementptr i16, i16* %327, i64 8
  %332 = bitcast i16* %331 to <8 x i16>*
  %333 = load <8 x i16>, <8 x i16>* %332, align 2, !alias.scope !104
  %334 = bitcast i16* %328 to <8 x i16>*
  store <8 x i16> %330, <8 x i16>* %334, align 2, !alias.scope !107, !noalias !104
  %335 = getelementptr i16, i16* %328, i64 8
  %336 = bitcast i16* %335 to <8 x i16>*
  store <8 x i16> %333, <8 x i16>* %336, align 2, !alias.scope !107, !noalias !104
  %337 = add i64 %325, 16
  %338 = add i64 %326, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %324, !llvm.loop !110

340:                                              ; preds = %324, %321
  %341 = icmp eq i64 %251, %261
  br i1 %341, label %395, label %342

342:                                              ; preds = %340, %253, %248
  %343 = phi i64 [ %250, %253 ], [ %250, %248 ], [ %262, %340 ]
  %344 = phi i16* [ %222, %253 ], [ %222, %248 ], [ %263, %340 ]
  %345 = phi i16* [ %249, %253 ], [ %249, %248 ], [ %264, %340 ]
  %346 = add i64 %343, -1
  %347 = and i64 %343, 7
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %360, label %349

349:                                              ; preds = %342, %349
  %350 = phi i64 [ %355, %349 ], [ %343, %342 ]
  %351 = phi i16* [ %357, %349 ], [ %344, %342 ]
  %352 = phi i16* [ %356, %349 ], [ %345, %342 ]
  %353 = phi i64 [ %358, %349 ], [ %347, %342 ]
  %354 = load i16, i16* %351, align 2
  store i16 %354, i16* %352, align 2
  %355 = add i64 %350, -1
  %356 = getelementptr inbounds i16, i16* %352, i64 1
  %357 = getelementptr inbounds i16, i16* %351, i64 1
  %358 = add i64 %353, -1
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %360, label %349, !llvm.loop !111

360:                                              ; preds = %349, %342
  %361 = phi i64 [ %343, %342 ], [ %355, %349 ]
  %362 = phi i16* [ %344, %342 ], [ %357, %349 ]
  %363 = phi i16* [ %345, %342 ], [ %356, %349 ]
  %364 = icmp ult i64 %346, 7
  br i1 %364, label %395, label %365

365:                                              ; preds = %360, %365
  %366 = phi i64 [ %391, %365 ], [ %361, %360 ]
  %367 = phi i16* [ %393, %365 ], [ %362, %360 ]
  %368 = phi i16* [ %392, %365 ], [ %363, %360 ]
  %369 = load i16, i16* %367, align 2
  store i16 %369, i16* %368, align 2
  %370 = getelementptr inbounds i16, i16* %368, i64 1
  %371 = getelementptr inbounds i16, i16* %367, i64 1
  %372 = load i16, i16* %371, align 2
  store i16 %372, i16* %370, align 2
  %373 = getelementptr inbounds i16, i16* %368, i64 2
  %374 = getelementptr inbounds i16, i16* %367, i64 2
  %375 = load i16, i16* %374, align 2
  store i16 %375, i16* %373, align 2
  %376 = getelementptr inbounds i16, i16* %368, i64 3
  %377 = getelementptr inbounds i16, i16* %367, i64 3
  %378 = load i16, i16* %377, align 2
  store i16 %378, i16* %376, align 2
  %379 = getelementptr inbounds i16, i16* %368, i64 4
  %380 = getelementptr inbounds i16, i16* %367, i64 4
  %381 = load i16, i16* %380, align 2
  store i16 %381, i16* %379, align 2
  %382 = getelementptr inbounds i16, i16* %368, i64 5
  %383 = getelementptr inbounds i16, i16* %367, i64 5
  %384 = load i16, i16* %383, align 2
  store i16 %384, i16* %382, align 2
  %385 = getelementptr inbounds i16, i16* %368, i64 6
  %386 = getelementptr inbounds i16, i16* %367, i64 6
  %387 = load i16, i16* %386, align 2
  store i16 %387, i16* %385, align 2
  %388 = getelementptr inbounds i16, i16* %368, i64 7
  %389 = getelementptr inbounds i16, i16* %367, i64 7
  %390 = load i16, i16* %389, align 2
  store i16 %390, i16* %388, align 2
  %391 = add i64 %366, -8
  %392 = getelementptr inbounds i16, i16* %368, i64 8
  %393 = getelementptr inbounds i16, i16* %367, i64 8
  %394 = icmp eq i64 %391, 0
  br i1 %394, label %395, label %365, !llvm.loop !112

395:                                              ; preds = %360, %365, %340, %217
  %396 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 5
  tail call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %396, %"class.gfx::Image"* dereferenceable(8) %5) #10
  %397 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 6
  %398 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %399 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %398, i64 0, i32 1, i32 1
  %400 = load i8, i8* %399, align 1
  %401 = icmp slt i8 %400, 0
  br i1 %401, label %405, label %402

402:                                              ; preds = %395
  %403 = bitcast %"class.std::__1::basic_string"* %397 to i8*
  %404 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %403, i8* align 8 %404, i64 24, i1 false) #10
  br label %580

405:                                              ; preds = %395
  %406 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %407 = load i16*, i16** %406, align 8
  %408 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %409 = load i64, i64* %408, align 8
  %410 = icmp ult i64 %409, 11
  br i1 %410, label %411, label %416

411:                                              ; preds = %405
  %412 = bitcast %"class.std::__1::basic_string"* %397 to i16*
  %413 = trunc i64 %409 to i8
  %414 = bitcast %"class.std::__1::basic_string"* %397 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %415 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %414, i64 0, i32 1, i32 1
  store i8 %413, i8* %415, align 1
  br label %433

416:                                              ; preds = %405
  %417 = icmp ugt i64 %409, 9223372036854775791
  br i1 %417, label %418, label %420

418:                                              ; preds = %416
  %419 = bitcast %"class.std::__1::basic_string"* %397 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %419) #11
  unreachable

420:                                              ; preds = %416
  %421 = add nuw nsw i64 %409, 8
  %422 = and i64 %421, -8
  %423 = icmp slt i64 %422, 0
  br i1 %423, label %424, label %425

424:                                              ; preds = %420
  tail call void @abort() #11
  unreachable

425:                                              ; preds = %420
  %426 = shl i64 %422, 1
  %427 = tail call i8* @_Znwm(i64 %426) #12
  %428 = bitcast i8* %427 to i16*
  %429 = bitcast %"class.std::__1::basic_string"* %397 to i8**
  store i8* %427, i8** %429, align 8
  %430 = or i64 %422, -9223372036854775808
  %431 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %430, i64* %431, align 8
  %432 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %409, i64* %432, align 8
  br label %433

433:                                              ; preds = %425, %411
  %434 = phi i16* [ %412, %411 ], [ %428, %425 ]
  %435 = add nuw nsw i64 %409, 1
  %436 = add i64 %409, 1
  %437 = icmp ult i64 %436, 16
  br i1 %437, label %527, label %438

438:                                              ; preds = %433
  %439 = add i64 %409, 1
  %440 = getelementptr i16, i16* %434, i64 %439
  %441 = getelementptr i16, i16* %407, i64 %439
  %442 = icmp ult i16* %434, %441
  %443 = icmp ult i16* %407, %440
  %444 = and i1 %442, %443
  br i1 %444, label %527, label %445

445:                                              ; preds = %438
  %446 = and i64 %436, -16
  %447 = sub i64 %435, %446
  %448 = getelementptr i16, i16* %407, i64 %446
  %449 = getelementptr i16, i16* %434, i64 %446
  %450 = add i64 %446, -16
  %451 = lshr exact i64 %450, 4
  %452 = add nuw nsw i64 %451, 1
  %453 = and i64 %452, 3
  %454 = icmp ult i64 %450, 48
  br i1 %454, label %506, label %455

455:                                              ; preds = %445
  %456 = sub nsw i64 %452, %453
  br label %457

457:                                              ; preds = %457, %455
  %458 = phi i64 [ 0, %455 ], [ %503, %457 ]
  %459 = phi i64 [ %456, %455 ], [ %504, %457 ]
  %460 = getelementptr i16, i16* %407, i64 %458
  %461 = getelementptr i16, i16* %434, i64 %458
  %462 = bitcast i16* %460 to <8 x i16>*
  %463 = load <8 x i16>, <8 x i16>* %462, align 2, !alias.scope !113
  %464 = getelementptr i16, i16* %460, i64 8
  %465 = bitcast i16* %464 to <8 x i16>*
  %466 = load <8 x i16>, <8 x i16>* %465, align 2, !alias.scope !113
  %467 = bitcast i16* %461 to <8 x i16>*
  store <8 x i16> %463, <8 x i16>* %467, align 2, !alias.scope !116, !noalias !113
  %468 = getelementptr i16, i16* %461, i64 8
  %469 = bitcast i16* %468 to <8 x i16>*
  store <8 x i16> %466, <8 x i16>* %469, align 2, !alias.scope !116, !noalias !113
  %470 = or i64 %458, 16
  %471 = getelementptr i16, i16* %407, i64 %470
  %472 = getelementptr i16, i16* %434, i64 %470
  %473 = bitcast i16* %471 to <8 x i16>*
  %474 = load <8 x i16>, <8 x i16>* %473, align 2, !alias.scope !113
  %475 = getelementptr i16, i16* %471, i64 8
  %476 = bitcast i16* %475 to <8 x i16>*
  %477 = load <8 x i16>, <8 x i16>* %476, align 2, !alias.scope !113
  %478 = bitcast i16* %472 to <8 x i16>*
  store <8 x i16> %474, <8 x i16>* %478, align 2, !alias.scope !116, !noalias !113
  %479 = getelementptr i16, i16* %472, i64 8
  %480 = bitcast i16* %479 to <8 x i16>*
  store <8 x i16> %477, <8 x i16>* %480, align 2, !alias.scope !116, !noalias !113
  %481 = or i64 %458, 32
  %482 = getelementptr i16, i16* %407, i64 %481
  %483 = getelementptr i16, i16* %434, i64 %481
  %484 = bitcast i16* %482 to <8 x i16>*
  %485 = load <8 x i16>, <8 x i16>* %484, align 2, !alias.scope !113
  %486 = getelementptr i16, i16* %482, i64 8
  %487 = bitcast i16* %486 to <8 x i16>*
  %488 = load <8 x i16>, <8 x i16>* %487, align 2, !alias.scope !113
  %489 = bitcast i16* %483 to <8 x i16>*
  store <8 x i16> %485, <8 x i16>* %489, align 2, !alias.scope !116, !noalias !113
  %490 = getelementptr i16, i16* %483, i64 8
  %491 = bitcast i16* %490 to <8 x i16>*
  store <8 x i16> %488, <8 x i16>* %491, align 2, !alias.scope !116, !noalias !113
  %492 = or i64 %458, 48
  %493 = getelementptr i16, i16* %407, i64 %492
  %494 = getelementptr i16, i16* %434, i64 %492
  %495 = bitcast i16* %493 to <8 x i16>*
  %496 = load <8 x i16>, <8 x i16>* %495, align 2, !alias.scope !113
  %497 = getelementptr i16, i16* %493, i64 8
  %498 = bitcast i16* %497 to <8 x i16>*
  %499 = load <8 x i16>, <8 x i16>* %498, align 2, !alias.scope !113
  %500 = bitcast i16* %494 to <8 x i16>*
  store <8 x i16> %496, <8 x i16>* %500, align 2, !alias.scope !116, !noalias !113
  %501 = getelementptr i16, i16* %494, i64 8
  %502 = bitcast i16* %501 to <8 x i16>*
  store <8 x i16> %499, <8 x i16>* %502, align 2, !alias.scope !116, !noalias !113
  %503 = add i64 %458, 64
  %504 = add i64 %459, -4
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %506, label %457, !llvm.loop !118

506:                                              ; preds = %457, %445
  %507 = phi i64 [ 0, %445 ], [ %503, %457 ]
  %508 = icmp eq i64 %453, 0
  br i1 %508, label %525, label %509

509:                                              ; preds = %506, %509
  %510 = phi i64 [ %522, %509 ], [ %507, %506 ]
  %511 = phi i64 [ %523, %509 ], [ %453, %506 ]
  %512 = getelementptr i16, i16* %407, i64 %510
  %513 = getelementptr i16, i16* %434, i64 %510
  %514 = bitcast i16* %512 to <8 x i16>*
  %515 = load <8 x i16>, <8 x i16>* %514, align 2, !alias.scope !113
  %516 = getelementptr i16, i16* %512, i64 8
  %517 = bitcast i16* %516 to <8 x i16>*
  %518 = load <8 x i16>, <8 x i16>* %517, align 2, !alias.scope !113
  %519 = bitcast i16* %513 to <8 x i16>*
  store <8 x i16> %515, <8 x i16>* %519, align 2, !alias.scope !116, !noalias !113
  %520 = getelementptr i16, i16* %513, i64 8
  %521 = bitcast i16* %520 to <8 x i16>*
  store <8 x i16> %518, <8 x i16>* %521, align 2, !alias.scope !116, !noalias !113
  %522 = add i64 %510, 16
  %523 = add i64 %511, -1
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %525, label %509, !llvm.loop !119

525:                                              ; preds = %509, %506
  %526 = icmp eq i64 %436, %446
  br i1 %526, label %580, label %527

527:                                              ; preds = %525, %438, %433
  %528 = phi i64 [ %435, %438 ], [ %435, %433 ], [ %447, %525 ]
  %529 = phi i16* [ %407, %438 ], [ %407, %433 ], [ %448, %525 ]
  %530 = phi i16* [ %434, %438 ], [ %434, %433 ], [ %449, %525 ]
  %531 = add i64 %528, -1
  %532 = and i64 %528, 7
  %533 = icmp eq i64 %532, 0
  br i1 %533, label %545, label %534

534:                                              ; preds = %527, %534
  %535 = phi i64 [ %540, %534 ], [ %528, %527 ]
  %536 = phi i16* [ %542, %534 ], [ %529, %527 ]
  %537 = phi i16* [ %541, %534 ], [ %530, %527 ]
  %538 = phi i64 [ %543, %534 ], [ %532, %527 ]
  %539 = load i16, i16* %536, align 2
  store i16 %539, i16* %537, align 2
  %540 = add i64 %535, -1
  %541 = getelementptr inbounds i16, i16* %537, i64 1
  %542 = getelementptr inbounds i16, i16* %536, i64 1
  %543 = add i64 %538, -1
  %544 = icmp eq i64 %543, 0
  br i1 %544, label %545, label %534, !llvm.loop !120

545:                                              ; preds = %534, %527
  %546 = phi i64 [ %528, %527 ], [ %540, %534 ]
  %547 = phi i16* [ %529, %527 ], [ %542, %534 ]
  %548 = phi i16* [ %530, %527 ], [ %541, %534 ]
  %549 = icmp ult i64 %531, 7
  br i1 %549, label %580, label %550

550:                                              ; preds = %545, %550
  %551 = phi i64 [ %576, %550 ], [ %546, %545 ]
  %552 = phi i16* [ %578, %550 ], [ %547, %545 ]
  %553 = phi i16* [ %577, %550 ], [ %548, %545 ]
  %554 = load i16, i16* %552, align 2
  store i16 %554, i16* %553, align 2
  %555 = getelementptr inbounds i16, i16* %553, i64 1
  %556 = getelementptr inbounds i16, i16* %552, i64 1
  %557 = load i16, i16* %556, align 2
  store i16 %557, i16* %555, align 2
  %558 = getelementptr inbounds i16, i16* %553, i64 2
  %559 = getelementptr inbounds i16, i16* %552, i64 2
  %560 = load i16, i16* %559, align 2
  store i16 %560, i16* %558, align 2
  %561 = getelementptr inbounds i16, i16* %553, i64 3
  %562 = getelementptr inbounds i16, i16* %552, i64 3
  %563 = load i16, i16* %562, align 2
  store i16 %563, i16* %561, align 2
  %564 = getelementptr inbounds i16, i16* %553, i64 4
  %565 = getelementptr inbounds i16, i16* %552, i64 4
  %566 = load i16, i16* %565, align 2
  store i16 %566, i16* %564, align 2
  %567 = getelementptr inbounds i16, i16* %553, i64 5
  %568 = getelementptr inbounds i16, i16* %552, i64 5
  %569 = load i16, i16* %568, align 2
  store i16 %569, i16* %567, align 2
  %570 = getelementptr inbounds i16, i16* %553, i64 6
  %571 = getelementptr inbounds i16, i16* %552, i64 6
  %572 = load i16, i16* %571, align 2
  store i16 %572, i16* %570, align 2
  %573 = getelementptr inbounds i16, i16* %553, i64 7
  %574 = getelementptr inbounds i16, i16* %552, i64 7
  %575 = load i16, i16* %574, align 2
  store i16 %575, i16* %573, align 2
  %576 = add i64 %551, -8
  %577 = getelementptr inbounds i16, i16* %553, i64 8
  %578 = getelementptr inbounds i16, i16* %552, i64 8
  %579 = icmp eq i64 %576, 0
  br i1 %579, label %580, label %550, !llvm.loop !121

580:                                              ; preds = %545, %550, %525, %402
  %581 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 7
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %581, %class.GURL* dereferenceable(120) %7) #10
  %582 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 8
  tail call void @_ZN14message_center10NotifierIdC1ERKS0_(%"struct.message_center::NotifierId"* %582, %"struct.message_center::NotifierId"* dereferenceable(176) %8) #10
  %583 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 9
  tail call void @_ZN14message_center20RichNotificationDataC2ERKS0_(%"class.message_center::RichNotificationData"* %583, %"class.message_center::RichNotificationData"* dereferenceable(240) %9)
  %584 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 10
  %585 = load i32, i32* @_ZN14message_center12_GLOBAL__N_120g_next_serial_numberE, align 4
  %586 = add i32 %585, 1
  store i32 %586, i32* @_ZN14message_center12_GLOBAL__N_120g_next_serial_numberE, align 4
  store i32 %585, i32* %584, align 8
  %587 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 11
  %588 = bitcast %class.scoped_refptr.39* %587 to i64*
  store i64 %10, i64* %588, align 8
  %589 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 12
  %590 = bitcast %"class.std::__1::basic_string.27"* %589 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %590, i8 0, i64 24, i1 false) #10
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

declare void @_ZN14message_center10NotifierIdC1ERKS0_(%"struct.message_center::NotifierId"*, %"struct.message_center::NotifierId"* dereferenceable(176)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14message_center12NotificationC2E13scoped_refptrINS_20NotificationDelegateEERKS0_(%"class.message_center::Notification"*, %"class.message_center::NotificationDelegate"*, %"class.message_center::Notification"* dereferenceable(696)) unnamed_addr #0 align 2 {
  tail call void @_ZN14message_center12NotificationC2ERKS0_(%"class.message_center::Notification"* %0, %"class.message_center::Notification"* dereferenceable(696) %2)
  %4 = icmp eq %"class.message_center::NotificationDelegate"* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.message_center::NotificationDelegate", %"class.message_center::NotificationDelegate"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic
  br label %8

8:                                                ; preds = %3, %5
  %9 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 11
  %10 = ptrtoint %"class.message_center::NotificationDelegate"* %1 to i64
  %11 = bitcast %class.scoped_refptr.39* %9 to i64*
  %12 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %9, i64 0, i32 0
  %13 = load %"class.message_center::NotificationDelegate"*, %"class.message_center::NotificationDelegate"** %12, align 8
  store i64 %10, i64* %11, align 8
  %14 = icmp eq %"class.message_center::NotificationDelegate"* %13, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.message_center::NotificationDelegate", %"class.message_center::NotificationDelegate"* %13, i64 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %27

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %16, i64 -2
  %22 = bitcast %"class.base::RefCountedThreadSafe"* %21 to %"class.message_center::NotificationDelegate"*
  %23 = bitcast %"class.base::RefCountedThreadSafe"* %21 to void (%"class.message_center::NotificationDelegate"*)***
  %24 = load void (%"class.message_center::NotificationDelegate"*)**, void (%"class.message_center::NotificationDelegate"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.message_center::NotificationDelegate"*)*, void (%"class.message_center::NotificationDelegate"*)** %24, i64 5
  %26 = load void (%"class.message_center::NotificationDelegate"*)*, void (%"class.message_center::NotificationDelegate"*)** %25, align 8
  tail call void %26(%"class.message_center::NotificationDelegate"* nonnull %22) #10
  br label %27

27:                                               ; preds = %8, %15, %20
  br i1 %4, label %40, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.message_center::NotificationDelegate", %"class.message_center::NotificationDelegate"* %1, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe"* %34 to %"class.message_center::NotificationDelegate"*
  %36 = bitcast %"class.base::RefCountedThreadSafe"* %34 to void (%"class.message_center::NotificationDelegate"*)***
  %37 = load void (%"class.message_center::NotificationDelegate"*)**, void (%"class.message_center::NotificationDelegate"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.message_center::NotificationDelegate"*)*, void (%"class.message_center::NotificationDelegate"*)** %37, i64 5
  %39 = load void (%"class.message_center::NotificationDelegate"*)*, void (%"class.message_center::NotificationDelegate"*)** %38, align 8
  tail call void %39(%"class.message_center::NotificationDelegate"* nonnull %35) #10
  br label %40

40:                                               ; preds = %27, %28, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14message_center12NotificationC2ERKS0_(%"class.message_center::Notification"*, %"class.message_center::Notification"* dereferenceable(696)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN14message_center12NotificationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 2
  %9 = bitcast %"class.std::__1::basic_string.27"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string.27"* %7 to i8*
  %15 = bitcast %"class.std::__1::basic_string.27"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #10
  br label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.27"* %7, i8* %18, i64 %20) #10
  br label %21

21:                                               ; preds = %13, %16
  %22 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 3
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %30 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false) #10
  br label %206

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, 11
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = bitcast %"class.std::__1::basic_string"* %22 to i16*
  %39 = trunc i64 %35 to i8
  %40 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  store i8 %39, i8* %41, align 1
  br label %59

42:                                               ; preds = %31
  %43 = icmp ugt i64 %35, 9223372036854775791
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::basic_string"* %22 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %45) #11
  unreachable

46:                                               ; preds = %42
  %47 = add nuw nsw i64 %35, 8
  %48 = and i64 %47, -8
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  tail call void @abort() #11
  unreachable

51:                                               ; preds = %46
  %52 = shl i64 %48, 1
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to i16*
  %55 = bitcast %"class.std::__1::basic_string"* %22 to i8**
  store i8* %53, i8** %55, align 8
  %56 = or i64 %48, -9223372036854775808
  %57 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %35, i64* %58, align 8
  br label %59

59:                                               ; preds = %51, %37
  %60 = phi i16* [ %38, %37 ], [ %54, %51 ]
  %61 = add nuw nsw i64 %35, 1
  %62 = add i64 %35, 1
  %63 = icmp ult i64 %62, 16
  br i1 %63, label %153, label %64

64:                                               ; preds = %59
  %65 = add i64 %35, 1
  %66 = getelementptr i16, i16* %60, i64 %65
  %67 = getelementptr i16, i16* %33, i64 %65
  %68 = icmp ult i16* %60, %67
  %69 = icmp ult i16* %33, %66
  %70 = and i1 %68, %69
  br i1 %70, label %153, label %71

71:                                               ; preds = %64
  %72 = and i64 %62, -16
  %73 = sub i64 %61, %72
  %74 = getelementptr i16, i16* %33, i64 %72
  %75 = getelementptr i16, i16* %60, i64 %72
  %76 = add i64 %72, -16
  %77 = lshr exact i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp ult i64 %76, 48
  br i1 %80, label %132, label %81

81:                                               ; preds = %71
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %129, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %130, %83 ]
  %86 = getelementptr i16, i16* %33, i64 %84
  %87 = getelementptr i16, i16* %60, i64 %84
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !122
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !122
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !125, !noalias !122
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !125, !noalias !122
  %96 = or i64 %84, 16
  %97 = getelementptr i16, i16* %33, i64 %96
  %98 = getelementptr i16, i16* %60, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !122
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !122
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !125, !noalias !122
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !125, !noalias !122
  %107 = or i64 %84, 32
  %108 = getelementptr i16, i16* %33, i64 %107
  %109 = getelementptr i16, i16* %60, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !122
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !122
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !125, !noalias !122
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !125, !noalias !122
  %118 = or i64 %84, 48
  %119 = getelementptr i16, i16* %33, i64 %118
  %120 = getelementptr i16, i16* %60, i64 %118
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !122
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !122
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !125, !noalias !122
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !125, !noalias !122
  %129 = add i64 %84, 64
  %130 = add i64 %85, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %83, !llvm.loop !127

132:                                              ; preds = %83, %71
  %133 = phi i64 [ 0, %71 ], [ %129, %83 ]
  %134 = icmp eq i64 %79, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %148, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %149, %135 ], [ %79, %132 ]
  %138 = getelementptr i16, i16* %33, i64 %136
  %139 = getelementptr i16, i16* %60, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !122
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !122
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !125, !noalias !122
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !125, !noalias !122
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !128

151:                                              ; preds = %135, %132
  %152 = icmp eq i64 %62, %72
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %64, %59
  %154 = phi i64 [ %61, %64 ], [ %61, %59 ], [ %73, %151 ]
  %155 = phi i16* [ %33, %64 ], [ %33, %59 ], [ %74, %151 ]
  %156 = phi i16* [ %60, %64 ], [ %60, %59 ], [ %75, %151 ]
  %157 = add i64 %154, -1
  %158 = and i64 %154, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i64 [ %166, %160 ], [ %154, %153 ]
  %162 = phi i16* [ %168, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %167, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = load i16, i16* %162, align 2
  store i16 %165, i16* %163, align 2
  %166 = add i64 %161, -1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = getelementptr inbounds i16, i16* %162, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !129

171:                                              ; preds = %160, %153
  %172 = phi i64 [ %154, %153 ], [ %166, %160 ]
  %173 = phi i16* [ %155, %153 ], [ %168, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %167, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i64 [ %202, %176 ], [ %172, %171 ]
  %178 = phi i16* [ %204, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %203, %176 ], [ %174, %171 ]
  %180 = load i16, i16* %178, align 2
  store i16 %180, i16* %179, align 2
  %181 = getelementptr inbounds i16, i16* %179, i64 1
  %182 = getelementptr inbounds i16, i16* %178, i64 1
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %179, i64 2
  %185 = getelementptr inbounds i16, i16* %178, i64 2
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %179, i64 3
  %188 = getelementptr inbounds i16, i16* %178, i64 3
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %179, i64 4
  %191 = getelementptr inbounds i16, i16* %178, i64 4
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %179, i64 5
  %194 = getelementptr inbounds i16, i16* %178, i64 5
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %179, i64 6
  %197 = getelementptr inbounds i16, i16* %178, i64 6
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %179, i64 7
  %200 = getelementptr inbounds i16, i16* %178, i64 7
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = add i64 %177, -8
  %203 = getelementptr inbounds i16, i16* %179, i64 8
  %204 = getelementptr inbounds i16, i16* %178, i64 8
  %205 = icmp eq i64 %202, 0
  br i1 %205, label %206, label %176, !llvm.loop !130

206:                                              ; preds = %171, %176, %151, %28
  %207 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 4
  %208 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 4
  %209 = bitcast %"class.std::__1::basic_string"* %208 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %209, i64 0, i32 1, i32 1
  %211 = load i8, i8* %210, align 1
  %212 = icmp slt i8 %211, 0
  br i1 %212, label %216, label %213

213:                                              ; preds = %206
  %214 = bitcast %"class.std::__1::basic_string"* %207 to i8*
  %215 = bitcast %"class.std::__1::basic_string"* %208 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %214, i8* align 8 %215, i64 24, i1 false) #10
  br label %391

216:                                              ; preds = %206
  %217 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %208, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load i16*, i16** %217, align 8
  %219 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %220 = load i64, i64* %219, align 8
  %221 = icmp ult i64 %220, 11
  br i1 %221, label %222, label %227

222:                                              ; preds = %216
  %223 = bitcast %"class.std::__1::basic_string"* %207 to i16*
  %224 = trunc i64 %220 to i8
  %225 = bitcast %"class.std::__1::basic_string"* %207 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %225, i64 0, i32 1, i32 1
  store i8 %224, i8* %226, align 1
  br label %244

227:                                              ; preds = %216
  %228 = icmp ugt i64 %220, 9223372036854775791
  br i1 %228, label %229, label %231

229:                                              ; preds = %227
  %230 = bitcast %"class.std::__1::basic_string"* %207 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %230) #11
  unreachable

231:                                              ; preds = %227
  %232 = add nuw nsw i64 %220, 8
  %233 = and i64 %232, -8
  %234 = icmp slt i64 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %231
  tail call void @abort() #11
  unreachable

236:                                              ; preds = %231
  %237 = shl i64 %233, 1
  %238 = tail call i8* @_Znwm(i64 %237) #12
  %239 = bitcast i8* %238 to i16*
  %240 = bitcast %"class.std::__1::basic_string"* %207 to i8**
  store i8* %238, i8** %240, align 8
  %241 = or i64 %233, -9223372036854775808
  %242 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %220, i64* %243, align 8
  br label %244

244:                                              ; preds = %236, %222
  %245 = phi i16* [ %223, %222 ], [ %239, %236 ]
  %246 = add nuw nsw i64 %220, 1
  %247 = add i64 %220, 1
  %248 = icmp ult i64 %247, 16
  br i1 %248, label %338, label %249

249:                                              ; preds = %244
  %250 = add i64 %220, 1
  %251 = getelementptr i16, i16* %245, i64 %250
  %252 = getelementptr i16, i16* %218, i64 %250
  %253 = icmp ult i16* %245, %252
  %254 = icmp ult i16* %218, %251
  %255 = and i1 %253, %254
  br i1 %255, label %338, label %256

256:                                              ; preds = %249
  %257 = and i64 %247, -16
  %258 = sub i64 %246, %257
  %259 = getelementptr i16, i16* %218, i64 %257
  %260 = getelementptr i16, i16* %245, i64 %257
  %261 = add i64 %257, -16
  %262 = lshr exact i64 %261, 4
  %263 = add nuw nsw i64 %262, 1
  %264 = and i64 %263, 3
  %265 = icmp ult i64 %261, 48
  br i1 %265, label %317, label %266

266:                                              ; preds = %256
  %267 = sub nsw i64 %263, %264
  br label %268

268:                                              ; preds = %268, %266
  %269 = phi i64 [ 0, %266 ], [ %314, %268 ]
  %270 = phi i64 [ %267, %266 ], [ %315, %268 ]
  %271 = getelementptr i16, i16* %218, i64 %269
  %272 = getelementptr i16, i16* %245, i64 %269
  %273 = bitcast i16* %271 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !131
  %275 = getelementptr i16, i16* %271, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !131
  %278 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %278, align 2, !alias.scope !134, !noalias !131
  %279 = getelementptr i16, i16* %272, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %280, align 2, !alias.scope !134, !noalias !131
  %281 = or i64 %269, 16
  %282 = getelementptr i16, i16* %218, i64 %281
  %283 = getelementptr i16, i16* %245, i64 %281
  %284 = bitcast i16* %282 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !131
  %286 = getelementptr i16, i16* %282, i64 8
  %287 = bitcast i16* %286 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !131
  %289 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %289, align 2, !alias.scope !134, !noalias !131
  %290 = getelementptr i16, i16* %283, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %291, align 2, !alias.scope !134, !noalias !131
  %292 = or i64 %269, 32
  %293 = getelementptr i16, i16* %218, i64 %292
  %294 = getelementptr i16, i16* %245, i64 %292
  %295 = bitcast i16* %293 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !131
  %297 = getelementptr i16, i16* %293, i64 8
  %298 = bitcast i16* %297 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !131
  %300 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %300, align 2, !alias.scope !134, !noalias !131
  %301 = getelementptr i16, i16* %294, i64 8
  %302 = bitcast i16* %301 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %302, align 2, !alias.scope !134, !noalias !131
  %303 = or i64 %269, 48
  %304 = getelementptr i16, i16* %218, i64 %303
  %305 = getelementptr i16, i16* %245, i64 %303
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !131
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !131
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !134, !noalias !131
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !134, !noalias !131
  %314 = add i64 %269, 64
  %315 = add i64 %270, -4
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %268, !llvm.loop !136

317:                                              ; preds = %268, %256
  %318 = phi i64 [ 0, %256 ], [ %314, %268 ]
  %319 = icmp eq i64 %264, 0
  br i1 %319, label %336, label %320

320:                                              ; preds = %317, %320
  %321 = phi i64 [ %333, %320 ], [ %318, %317 ]
  %322 = phi i64 [ %334, %320 ], [ %264, %317 ]
  %323 = getelementptr i16, i16* %218, i64 %321
  %324 = getelementptr i16, i16* %245, i64 %321
  %325 = bitcast i16* %323 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !131
  %327 = getelementptr i16, i16* %323, i64 8
  %328 = bitcast i16* %327 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !131
  %330 = bitcast i16* %324 to <8 x i16>*
  store <8 x i16> %326, <8 x i16>* %330, align 2, !alias.scope !134, !noalias !131
  %331 = getelementptr i16, i16* %324, i64 8
  %332 = bitcast i16* %331 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %332, align 2, !alias.scope !134, !noalias !131
  %333 = add i64 %321, 16
  %334 = add i64 %322, -1
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %336, label %320, !llvm.loop !137

336:                                              ; preds = %320, %317
  %337 = icmp eq i64 %247, %257
  br i1 %337, label %391, label %338

338:                                              ; preds = %336, %249, %244
  %339 = phi i64 [ %246, %249 ], [ %246, %244 ], [ %258, %336 ]
  %340 = phi i16* [ %218, %249 ], [ %218, %244 ], [ %259, %336 ]
  %341 = phi i16* [ %245, %249 ], [ %245, %244 ], [ %260, %336 ]
  %342 = add i64 %339, -1
  %343 = and i64 %339, 7
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %356, label %345

345:                                              ; preds = %338, %345
  %346 = phi i64 [ %351, %345 ], [ %339, %338 ]
  %347 = phi i16* [ %353, %345 ], [ %340, %338 ]
  %348 = phi i16* [ %352, %345 ], [ %341, %338 ]
  %349 = phi i64 [ %354, %345 ], [ %343, %338 ]
  %350 = load i16, i16* %347, align 2
  store i16 %350, i16* %348, align 2
  %351 = add i64 %346, -1
  %352 = getelementptr inbounds i16, i16* %348, i64 1
  %353 = getelementptr inbounds i16, i16* %347, i64 1
  %354 = add i64 %349, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %345, !llvm.loop !138

356:                                              ; preds = %345, %338
  %357 = phi i64 [ %339, %338 ], [ %351, %345 ]
  %358 = phi i16* [ %340, %338 ], [ %353, %345 ]
  %359 = phi i16* [ %341, %338 ], [ %352, %345 ]
  %360 = icmp ult i64 %342, 7
  br i1 %360, label %391, label %361

361:                                              ; preds = %356, %361
  %362 = phi i64 [ %387, %361 ], [ %357, %356 ]
  %363 = phi i16* [ %389, %361 ], [ %358, %356 ]
  %364 = phi i16* [ %388, %361 ], [ %359, %356 ]
  %365 = load i16, i16* %363, align 2
  store i16 %365, i16* %364, align 2
  %366 = getelementptr inbounds i16, i16* %364, i64 1
  %367 = getelementptr inbounds i16, i16* %363, i64 1
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %364, i64 2
  %370 = getelementptr inbounds i16, i16* %363, i64 2
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %364, i64 3
  %373 = getelementptr inbounds i16, i16* %363, i64 3
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = getelementptr inbounds i16, i16* %364, i64 4
  %376 = getelementptr inbounds i16, i16* %363, i64 4
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = getelementptr inbounds i16, i16* %364, i64 5
  %379 = getelementptr inbounds i16, i16* %363, i64 5
  %380 = load i16, i16* %379, align 2
  store i16 %380, i16* %378, align 2
  %381 = getelementptr inbounds i16, i16* %364, i64 6
  %382 = getelementptr inbounds i16, i16* %363, i64 6
  %383 = load i16, i16* %382, align 2
  store i16 %383, i16* %381, align 2
  %384 = getelementptr inbounds i16, i16* %364, i64 7
  %385 = getelementptr inbounds i16, i16* %363, i64 7
  %386 = load i16, i16* %385, align 2
  store i16 %386, i16* %384, align 2
  %387 = add i64 %362, -8
  %388 = getelementptr inbounds i16, i16* %364, i64 8
  %389 = getelementptr inbounds i16, i16* %363, i64 8
  %390 = icmp eq i64 %387, 0
  br i1 %390, label %391, label %361, !llvm.loop !139

391:                                              ; preds = %356, %361, %336, %213
  %392 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 5
  %393 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 5
  tail call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %392, %"class.gfx::Image"* dereferenceable(8) %393) #10
  %394 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 6
  %395 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 6
  %396 = bitcast %"class.std::__1::basic_string"* %395 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %397 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %396, i64 0, i32 1, i32 1
  %398 = load i8, i8* %397, align 1
  %399 = icmp slt i8 %398, 0
  br i1 %399, label %403, label %400

400:                                              ; preds = %391
  %401 = bitcast %"class.std::__1::basic_string"* %394 to i8*
  %402 = bitcast %"class.std::__1::basic_string"* %395 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %401, i8* align 8 %402, i64 24, i1 false) #10
  br label %578

403:                                              ; preds = %391
  %404 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %395, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %405 = load i16*, i16** %404, align 8
  %406 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %407 = load i64, i64* %406, align 8
  %408 = icmp ult i64 %407, 11
  br i1 %408, label %409, label %414

409:                                              ; preds = %403
  %410 = bitcast %"class.std::__1::basic_string"* %394 to i16*
  %411 = trunc i64 %407 to i8
  %412 = bitcast %"class.std::__1::basic_string"* %394 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %413 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %412, i64 0, i32 1, i32 1
  store i8 %411, i8* %413, align 1
  br label %431

414:                                              ; preds = %403
  %415 = icmp ugt i64 %407, 9223372036854775791
  br i1 %415, label %416, label %418

416:                                              ; preds = %414
  %417 = bitcast %"class.std::__1::basic_string"* %394 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %417) #11
  unreachable

418:                                              ; preds = %414
  %419 = add nuw nsw i64 %407, 8
  %420 = and i64 %419, -8
  %421 = icmp slt i64 %420, 0
  br i1 %421, label %422, label %423

422:                                              ; preds = %418
  tail call void @abort() #11
  unreachable

423:                                              ; preds = %418
  %424 = shl i64 %420, 1
  %425 = tail call i8* @_Znwm(i64 %424) #12
  %426 = bitcast i8* %425 to i16*
  %427 = bitcast %"class.std::__1::basic_string"* %394 to i8**
  store i8* %425, i8** %427, align 8
  %428 = or i64 %420, -9223372036854775808
  %429 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %428, i64* %429, align 8
  %430 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %407, i64* %430, align 8
  br label %431

431:                                              ; preds = %423, %409
  %432 = phi i16* [ %410, %409 ], [ %426, %423 ]
  %433 = add nuw nsw i64 %407, 1
  %434 = add i64 %407, 1
  %435 = icmp ult i64 %434, 16
  br i1 %435, label %525, label %436

436:                                              ; preds = %431
  %437 = add i64 %407, 1
  %438 = getelementptr i16, i16* %432, i64 %437
  %439 = getelementptr i16, i16* %405, i64 %437
  %440 = icmp ult i16* %432, %439
  %441 = icmp ult i16* %405, %438
  %442 = and i1 %440, %441
  br i1 %442, label %525, label %443

443:                                              ; preds = %436
  %444 = and i64 %434, -16
  %445 = sub i64 %433, %444
  %446 = getelementptr i16, i16* %405, i64 %444
  %447 = getelementptr i16, i16* %432, i64 %444
  %448 = add i64 %444, -16
  %449 = lshr exact i64 %448, 4
  %450 = add nuw nsw i64 %449, 1
  %451 = and i64 %450, 3
  %452 = icmp ult i64 %448, 48
  br i1 %452, label %504, label %453

453:                                              ; preds = %443
  %454 = sub nsw i64 %450, %451
  br label %455

455:                                              ; preds = %455, %453
  %456 = phi i64 [ 0, %453 ], [ %501, %455 ]
  %457 = phi i64 [ %454, %453 ], [ %502, %455 ]
  %458 = getelementptr i16, i16* %405, i64 %456
  %459 = getelementptr i16, i16* %432, i64 %456
  %460 = bitcast i16* %458 to <8 x i16>*
  %461 = load <8 x i16>, <8 x i16>* %460, align 2, !alias.scope !140
  %462 = getelementptr i16, i16* %458, i64 8
  %463 = bitcast i16* %462 to <8 x i16>*
  %464 = load <8 x i16>, <8 x i16>* %463, align 2, !alias.scope !140
  %465 = bitcast i16* %459 to <8 x i16>*
  store <8 x i16> %461, <8 x i16>* %465, align 2, !alias.scope !143, !noalias !140
  %466 = getelementptr i16, i16* %459, i64 8
  %467 = bitcast i16* %466 to <8 x i16>*
  store <8 x i16> %464, <8 x i16>* %467, align 2, !alias.scope !143, !noalias !140
  %468 = or i64 %456, 16
  %469 = getelementptr i16, i16* %405, i64 %468
  %470 = getelementptr i16, i16* %432, i64 %468
  %471 = bitcast i16* %469 to <8 x i16>*
  %472 = load <8 x i16>, <8 x i16>* %471, align 2, !alias.scope !140
  %473 = getelementptr i16, i16* %469, i64 8
  %474 = bitcast i16* %473 to <8 x i16>*
  %475 = load <8 x i16>, <8 x i16>* %474, align 2, !alias.scope !140
  %476 = bitcast i16* %470 to <8 x i16>*
  store <8 x i16> %472, <8 x i16>* %476, align 2, !alias.scope !143, !noalias !140
  %477 = getelementptr i16, i16* %470, i64 8
  %478 = bitcast i16* %477 to <8 x i16>*
  store <8 x i16> %475, <8 x i16>* %478, align 2, !alias.scope !143, !noalias !140
  %479 = or i64 %456, 32
  %480 = getelementptr i16, i16* %405, i64 %479
  %481 = getelementptr i16, i16* %432, i64 %479
  %482 = bitcast i16* %480 to <8 x i16>*
  %483 = load <8 x i16>, <8 x i16>* %482, align 2, !alias.scope !140
  %484 = getelementptr i16, i16* %480, i64 8
  %485 = bitcast i16* %484 to <8 x i16>*
  %486 = load <8 x i16>, <8 x i16>* %485, align 2, !alias.scope !140
  %487 = bitcast i16* %481 to <8 x i16>*
  store <8 x i16> %483, <8 x i16>* %487, align 2, !alias.scope !143, !noalias !140
  %488 = getelementptr i16, i16* %481, i64 8
  %489 = bitcast i16* %488 to <8 x i16>*
  store <8 x i16> %486, <8 x i16>* %489, align 2, !alias.scope !143, !noalias !140
  %490 = or i64 %456, 48
  %491 = getelementptr i16, i16* %405, i64 %490
  %492 = getelementptr i16, i16* %432, i64 %490
  %493 = bitcast i16* %491 to <8 x i16>*
  %494 = load <8 x i16>, <8 x i16>* %493, align 2, !alias.scope !140
  %495 = getelementptr i16, i16* %491, i64 8
  %496 = bitcast i16* %495 to <8 x i16>*
  %497 = load <8 x i16>, <8 x i16>* %496, align 2, !alias.scope !140
  %498 = bitcast i16* %492 to <8 x i16>*
  store <8 x i16> %494, <8 x i16>* %498, align 2, !alias.scope !143, !noalias !140
  %499 = getelementptr i16, i16* %492, i64 8
  %500 = bitcast i16* %499 to <8 x i16>*
  store <8 x i16> %497, <8 x i16>* %500, align 2, !alias.scope !143, !noalias !140
  %501 = add i64 %456, 64
  %502 = add i64 %457, -4
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %455, !llvm.loop !145

504:                                              ; preds = %455, %443
  %505 = phi i64 [ 0, %443 ], [ %501, %455 ]
  %506 = icmp eq i64 %451, 0
  br i1 %506, label %523, label %507

507:                                              ; preds = %504, %507
  %508 = phi i64 [ %520, %507 ], [ %505, %504 ]
  %509 = phi i64 [ %521, %507 ], [ %451, %504 ]
  %510 = getelementptr i16, i16* %405, i64 %508
  %511 = getelementptr i16, i16* %432, i64 %508
  %512 = bitcast i16* %510 to <8 x i16>*
  %513 = load <8 x i16>, <8 x i16>* %512, align 2, !alias.scope !140
  %514 = getelementptr i16, i16* %510, i64 8
  %515 = bitcast i16* %514 to <8 x i16>*
  %516 = load <8 x i16>, <8 x i16>* %515, align 2, !alias.scope !140
  %517 = bitcast i16* %511 to <8 x i16>*
  store <8 x i16> %513, <8 x i16>* %517, align 2, !alias.scope !143, !noalias !140
  %518 = getelementptr i16, i16* %511, i64 8
  %519 = bitcast i16* %518 to <8 x i16>*
  store <8 x i16> %516, <8 x i16>* %519, align 2, !alias.scope !143, !noalias !140
  %520 = add i64 %508, 16
  %521 = add i64 %509, -1
  %522 = icmp eq i64 %521, 0
  br i1 %522, label %523, label %507, !llvm.loop !146

523:                                              ; preds = %507, %504
  %524 = icmp eq i64 %434, %444
  br i1 %524, label %578, label %525

525:                                              ; preds = %523, %436, %431
  %526 = phi i64 [ %433, %436 ], [ %433, %431 ], [ %445, %523 ]
  %527 = phi i16* [ %405, %436 ], [ %405, %431 ], [ %446, %523 ]
  %528 = phi i16* [ %432, %436 ], [ %432, %431 ], [ %447, %523 ]
  %529 = add i64 %526, -1
  %530 = and i64 %526, 7
  %531 = icmp eq i64 %530, 0
  br i1 %531, label %543, label %532

532:                                              ; preds = %525, %532
  %533 = phi i64 [ %538, %532 ], [ %526, %525 ]
  %534 = phi i16* [ %540, %532 ], [ %527, %525 ]
  %535 = phi i16* [ %539, %532 ], [ %528, %525 ]
  %536 = phi i64 [ %541, %532 ], [ %530, %525 ]
  %537 = load i16, i16* %534, align 2
  store i16 %537, i16* %535, align 2
  %538 = add i64 %533, -1
  %539 = getelementptr inbounds i16, i16* %535, i64 1
  %540 = getelementptr inbounds i16, i16* %534, i64 1
  %541 = add i64 %536, -1
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %543, label %532, !llvm.loop !147

543:                                              ; preds = %532, %525
  %544 = phi i64 [ %526, %525 ], [ %538, %532 ]
  %545 = phi i16* [ %527, %525 ], [ %540, %532 ]
  %546 = phi i16* [ %528, %525 ], [ %539, %532 ]
  %547 = icmp ult i64 %529, 7
  br i1 %547, label %578, label %548

548:                                              ; preds = %543, %548
  %549 = phi i64 [ %574, %548 ], [ %544, %543 ]
  %550 = phi i16* [ %576, %548 ], [ %545, %543 ]
  %551 = phi i16* [ %575, %548 ], [ %546, %543 ]
  %552 = load i16, i16* %550, align 2
  store i16 %552, i16* %551, align 2
  %553 = getelementptr inbounds i16, i16* %551, i64 1
  %554 = getelementptr inbounds i16, i16* %550, i64 1
  %555 = load i16, i16* %554, align 2
  store i16 %555, i16* %553, align 2
  %556 = getelementptr inbounds i16, i16* %551, i64 2
  %557 = getelementptr inbounds i16, i16* %550, i64 2
  %558 = load i16, i16* %557, align 2
  store i16 %558, i16* %556, align 2
  %559 = getelementptr inbounds i16, i16* %551, i64 3
  %560 = getelementptr inbounds i16, i16* %550, i64 3
  %561 = load i16, i16* %560, align 2
  store i16 %561, i16* %559, align 2
  %562 = getelementptr inbounds i16, i16* %551, i64 4
  %563 = getelementptr inbounds i16, i16* %550, i64 4
  %564 = load i16, i16* %563, align 2
  store i16 %564, i16* %562, align 2
  %565 = getelementptr inbounds i16, i16* %551, i64 5
  %566 = getelementptr inbounds i16, i16* %550, i64 5
  %567 = load i16, i16* %566, align 2
  store i16 %567, i16* %565, align 2
  %568 = getelementptr inbounds i16, i16* %551, i64 6
  %569 = getelementptr inbounds i16, i16* %550, i64 6
  %570 = load i16, i16* %569, align 2
  store i16 %570, i16* %568, align 2
  %571 = getelementptr inbounds i16, i16* %551, i64 7
  %572 = getelementptr inbounds i16, i16* %550, i64 7
  %573 = load i16, i16* %572, align 2
  store i16 %573, i16* %571, align 2
  %574 = add i64 %549, -8
  %575 = getelementptr inbounds i16, i16* %551, i64 8
  %576 = getelementptr inbounds i16, i16* %550, i64 8
  %577 = icmp eq i64 %574, 0
  br i1 %577, label %578, label %548, !llvm.loop !148

578:                                              ; preds = %543, %548, %523, %400
  %579 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 7
  %580 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 7
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %579, %class.GURL* dereferenceable(120) %580) #10
  %581 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 8
  %582 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 8
  tail call void @_ZN14message_center10NotifierIdC1ERKS0_(%"struct.message_center::NotifierId"* %581, %"struct.message_center::NotifierId"* dereferenceable(176) %582) #10
  %583 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 9
  %584 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 9
  tail call void @_ZN14message_center20RichNotificationDataC2ERKS0_(%"class.message_center::RichNotificationData"* %583, %"class.message_center::RichNotificationData"* dereferenceable(240) %584)
  %585 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 10
  %586 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 10
  %587 = load i32, i32* %586, align 8
  store i32 %587, i32* %585, align 8
  %588 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 11, i32 0
  %589 = load %"class.message_center::NotificationDelegate"*, %"class.message_center::NotificationDelegate"** %588, align 8
  %590 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 11, i32 0
  store %"class.message_center::NotificationDelegate"* %589, %"class.message_center::NotificationDelegate"** %590, align 8
  %591 = icmp eq %"class.message_center::NotificationDelegate"* %589, null
  br i1 %591, label %595, label %592

592:                                              ; preds = %578
  %593 = getelementptr inbounds %"class.message_center::NotificationDelegate", %"class.message_center::NotificationDelegate"* %589, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %594 = atomicrmw add i32* %593, i32 1 monotonic
  br label %595

595:                                              ; preds = %578, %592
  %596 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 12
  %597 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 12
  %598 = bitcast %"class.std::__1::basic_string.27"* %597 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %599 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %598, i64 0, i32 1, i32 0
  %600 = load i8, i8* %599, align 1
  %601 = icmp slt i8 %600, 0
  br i1 %601, label %605, label %602

602:                                              ; preds = %595
  %603 = bitcast %"class.std::__1::basic_string.27"* %596 to i8*
  %604 = bitcast %"class.std::__1::basic_string.27"* %597 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %603, i8* align 8 %604, i64 24, i1 false) #10
  br label %610

605:                                              ; preds = %595
  %606 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %597, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %607 = load i8*, i8** %606, align 8
  %608 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %609 = load i64, i64* %608, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.27"* %596, i8* %607, i64 %609) #10
  br label %610

610:                                              ; preds = %602, %605
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14message_center12NotificationC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKS0_(%"class.message_center::Notification"*, %"class.std::__1::basic_string.27"* dereferenceable(24), %"class.message_center::Notification"* dereferenceable(696)) unnamed_addr #0 align 2 {
  tail call void @_ZN14message_center12NotificationC2ERKS0_(%"class.message_center::Notification"* %0, %"class.message_center::Notification"* dereferenceable(696) %2)
  %4 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 2
  %5 = icmp eq %"class.std::__1::basic_string.27"* %4, %1
  br i1 %5, label %35, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::basic_string.27"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = bitcast %"class.std::__1::basic_string.27"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %10, label %25, label %15

15:                                               ; preds = %6
  br i1 %14, label %19, label %16

16:                                               ; preds = %15
  %17 = bitcast %"class.std::__1::basic_string.27"* %4 to i8*
  %18 = bitcast %"class.std::__1::basic_string.27"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #10
  br label %35

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = tail call dereferenceable(24) %"class.std::__1::basic_string.27"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.27"* %4, i8* %21, i64 %23) #10
  br label %35

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::basic_string.27"* %1 to i8*
  %31 = zext i8 %13 to i64
  %32 = select i1 %14, i8* %27, i8* %30
  %33 = select i1 %14, i64 %29, i64 %31
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string.27"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.27"* %4, i8* %32, i64 %33) #10
  br label %35

35:                                               ; preds = %3, %16, %19, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(696) %"class.message_center::Notification"* @_ZN14message_center12NotificationaSERKS0_(%"class.message_center::Notification"* returned, %"class.message_center::Notification"* dereferenceable(696)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 1
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 2
  %8 = icmp eq %"class.message_center::Notification"* %0, %1
  br i1 %8, label %38, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string.27"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = bitcast %"class.std::__1::basic_string.27"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %13, label %28, label %18

18:                                               ; preds = %9
  br i1 %17, label %22, label %19

19:                                               ; preds = %18
  %20 = bitcast %"class.std::__1::basic_string.27"* %6 to i8*
  %21 = bitcast %"class.std::__1::basic_string.27"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #10
  br label %38

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = tail call dereferenceable(24) %"class.std::__1::basic_string.27"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.27"* %6, i8* %24, i64 %26) #10
  br label %38

28:                                               ; preds = %9
  %29 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::basic_string.27"* %7 to i8*
  %34 = zext i8 %16 to i64
  %35 = select i1 %17, i8* %30, i8* %33
  %36 = select i1 %17, i64 %32, i64 %34
  %37 = tail call dereferenceable(24) %"class.std::__1::basic_string.27"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.27"* %6, i8* %35, i64 %36) #10
  br label %38

38:                                               ; preds = %2, %19, %22, %28
  %39 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 3
  %41 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %39, %"class.std::__1::basic_string"* dereferenceable(24) %40)
  %42 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 4
  %43 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 4
  %44 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %42, %"class.std::__1::basic_string"* dereferenceable(24) %43)
  %45 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 5
  %46 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 5
  %47 = tail call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"* %45, %"class.gfx::Image"* dereferenceable(8) %46) #10
  %48 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 6
  %49 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 6
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %48, %"class.std::__1::basic_string"* dereferenceable(24) %49)
  %51 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 7
  %52 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 7
  %53 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %51, %class.GURL* dereferenceable(120) %52) #10
  %54 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 8
  %55 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 8
  %56 = tail call dereferenceable(176) %"struct.message_center::NotifierId"* @_ZN14message_center10NotifierIdaSERKS0_(%"struct.message_center::NotifierId"* %54, %"struct.message_center::NotifierId"* dereferenceable(176) %55)
  %57 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 9
  %58 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 9
  %59 = tail call dereferenceable(240) %"class.message_center::RichNotificationData"* @_ZN14message_center20RichNotificationDataaSERKS0_(%"class.message_center::RichNotificationData"* %57, %"class.message_center::RichNotificationData"* dereferenceable(240) %58)
  %60 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 10
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 10
  store i32 %61, i32* %62, align 8
  %63 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 11
  %64 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 11, i32 0
  %65 = load %"class.message_center::NotificationDelegate"*, %"class.message_center::NotificationDelegate"** %64, align 8
  %66 = icmp eq %"class.message_center::NotificationDelegate"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %38
  %68 = getelementptr inbounds %"class.message_center::NotificationDelegate", %"class.message_center::NotificationDelegate"* %65, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 1 monotonic
  br label %70

70:                                               ; preds = %38, %67
  %71 = ptrtoint %"class.message_center::NotificationDelegate"* %65 to i64
  %72 = bitcast %class.scoped_refptr.39* %63 to i64*
  %73 = getelementptr inbounds %class.scoped_refptr.39, %class.scoped_refptr.39* %63, i64 0, i32 0
  %74 = load %"class.message_center::NotificationDelegate"*, %"class.message_center::NotificationDelegate"** %73, align 8
  store i64 %71, i64* %72, align 8
  %75 = icmp eq %"class.message_center::NotificationDelegate"* %74, null
  br i1 %75, label %88, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.message_center::NotificationDelegate", %"class.message_center::NotificationDelegate"* %74, i64 0, i32 1
  %78 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw sub i32* %78, i32 1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %88

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %77, i64 -2
  %83 = bitcast %"class.base::RefCountedThreadSafe"* %82 to %"class.message_center::NotificationDelegate"*
  %84 = bitcast %"class.base::RefCountedThreadSafe"* %82 to void (%"class.message_center::NotificationDelegate"*)***
  %85 = load void (%"class.message_center::NotificationDelegate"*)**, void (%"class.message_center::NotificationDelegate"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.message_center::NotificationDelegate"*)*, void (%"class.message_center::NotificationDelegate"*)** %85, i64 5
  %87 = load void (%"class.message_center::NotificationDelegate"*)*, void (%"class.message_center::NotificationDelegate"*)** %86, align 8
  tail call void %87(%"class.message_center::NotificationDelegate"* nonnull %83) #10
  br label %88

88:                                               ; preds = %70, %76, %81
  %89 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 12
  %90 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 12
  br i1 %8, label %120, label %91

91:                                               ; preds = %88
  %92 = bitcast %"class.std::__1::basic_string.27"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = bitcast %"class.std::__1::basic_string.27"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %95, label %110, label %100

100:                                              ; preds = %91
  br i1 %99, label %104, label %101

101:                                              ; preds = %100
  %102 = bitcast %"class.std::__1::basic_string.27"* %89 to i8*
  %103 = bitcast %"class.std::__1::basic_string.27"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 24, i1 false) #10
  br label %120

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = tail call dereferenceable(24) %"class.std::__1::basic_string.27"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.27"* %89, i8* %106, i64 %108) #10
  br label %120

110:                                              ; preds = %91
  %111 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  %113 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::basic_string.27"* %90 to i8*
  %116 = zext i8 %98 to i64
  %117 = select i1 %99, i8* %112, i8* %115
  %118 = select i1 %99, i64 %114, i64 %116
  %119 = tail call dereferenceable(24) %"class.std::__1::basic_string.27"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.27"* %89, i8* %117, i64 %118) #10
  br label %120

120:                                              ; preds = %88, %101, %104, %110
  ret %"class.message_center::Notification"* %0
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(176) %"struct.message_center::NotifierId"* @_ZN14message_center10NotifierIdaSERKS0_(%"struct.message_center::NotifierId"*, %"struct.message_center::NotifierId"* dereferenceable(176)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.message_center::NotifierId", %"struct.message_center::NotifierId"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.message_center::NotifierId", %"struct.message_center::NotifierId"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.message_center::NotifierId", %"struct.message_center::NotifierId"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.message_center::NotifierId", %"struct.message_center::NotifierId"* %1, i64 0, i32 1
  %8 = icmp eq %"struct.message_center::NotifierId"* %0, %1
  br i1 %8, label %38, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string.27"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = bitcast %"class.std::__1::basic_string.27"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %13, label %28, label %18

18:                                               ; preds = %9
  br i1 %17, label %22, label %19

19:                                               ; preds = %18
  %20 = bitcast %"class.std::__1::basic_string.27"* %6 to i8*
  %21 = bitcast %"class.std::__1::basic_string.27"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #10
  br label %38

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"struct.message_center::NotifierId", %"struct.message_center::NotifierId"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = tail call dereferenceable(24) %"class.std::__1::basic_string.27"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.27"* %6, i8* %24, i64 %26) #10
  br label %38

28:                                               ; preds = %9
  %29 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"struct.message_center::NotifierId", %"struct.message_center::NotifierId"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::basic_string.27"* %7 to i8*
  %34 = zext i8 %16 to i64
  %35 = select i1 %17, i8* %30, i8* %33
  %36 = select i1 %17, i64 %32, i64 %34
  %37 = tail call dereferenceable(24) %"class.std::__1::basic_string.27"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.27"* %6, i8* %35, i64 %36) #10
  br label %38

38:                                               ; preds = %2, %19, %22, %28
  %39 = getelementptr inbounds %"struct.message_center::NotifierId", %"struct.message_center::NotifierId"* %0, i64 0, i32 2
  %40 = getelementptr inbounds %"struct.message_center::NotifierId", %"struct.message_center::NotifierId"* %1, i64 0, i32 2
  %41 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %39, %class.GURL* dereferenceable(120) %40) #10
  %42 = getelementptr inbounds %"struct.message_center::NotifierId", %"struct.message_center::NotifierId"* %0, i64 0, i32 3
  %43 = getelementptr inbounds %"struct.message_center::NotifierId", %"struct.message_center::NotifierId"* %1, i64 0, i32 3
  br i1 %8, label %73, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.std::__1::basic_string.27"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = bitcast %"class.std::__1::basic_string.27"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %48, label %63, label %53

53:                                               ; preds = %44
  br i1 %52, label %57, label %54

54:                                               ; preds = %53
  %55 = bitcast %"class.std::__1::basic_string.27"* %42 to i8*
  %56 = bitcast %"class.std::__1::basic_string.27"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #10
  br label %73

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"struct.message_center::NotifierId", %"struct.message_center::NotifierId"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = tail call dereferenceable(24) %"class.std::__1::basic_string.27"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.27"* %42, i8* %59, i64 %61) #10
  br label %73

63:                                               ; preds = %44
  %64 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds %"struct.message_center::NotifierId", %"struct.message_center::NotifierId"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::basic_string.27"* %43 to i8*
  %69 = zext i8 %51 to i64
  %70 = select i1 %52, i8* %65, i8* %68
  %71 = select i1 %52, i64 %67, i64 %69
  %72 = tail call dereferenceable(24) %"class.std::__1::basic_string.27"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.27"* %42, i8* %70, i64 %71) #10
  br label %73

73:                                               ; preds = %38, %54, %57, %63
  ret %"struct.message_center::NotifierId"* %0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(240) %"class.message_center::RichNotificationData"* @_ZN14message_center20RichNotificationDataaSERKS0_(%"class.message_center::RichNotificationData"*, %"class.message_center::RichNotificationData"* dereferenceable(240)) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast %"class.message_center::RichNotificationData"* %0 to i8*
  %4 = bitcast %"class.message_center::RichNotificationData"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 4
  %7 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %6)
  %8 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 5
  %10 = tail call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"* %8, %"class.gfx::Image"* dereferenceable(8) %9) #10
  %11 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 6
  %13 = tail call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"* %11, %"class.gfx::Image"* dereferenceable(8) %12) #10
  %14 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 7
  %15 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false)
  %16 = icmp eq %"class.message_center::RichNotificationData"* %0, %1
  br i1 %16, label %42, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 10
  %19 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 10, i32 0, i32 0
  %20 = load %"struct.message_center::NotificationItem"*, %"struct.message_center::NotificationItem"** %19, align 8
  %21 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 10, i32 0, i32 1
  %22 = load %"struct.message_center::NotificationItem"*, %"struct.message_center::NotificationItem"** %21, align 8
  tail call void @_ZNSt3__16vectorIN14message_center16NotificationItemENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %18, %"struct.message_center::NotificationItem"* %20, %"struct.message_center::NotificationItem"* %22) #10
  %23 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 11
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 11
  store i32 %24, i32* %25, align 8
  %26 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 13
  %27 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 13
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %26, %"class.std::__1::basic_string"* dereferenceable(24) %27)
  %29 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 14
  %30 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 14, i32 0, i32 0
  %31 = load %"struct.message_center::ButtonInfo"*, %"struct.message_center::ButtonInfo"** %30, align 8
  %32 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 14, i32 0, i32 1
  %33 = load %"struct.message_center::ButtonInfo"*, %"struct.message_center::ButtonInfo"** %32, align 8
  tail call void @_ZNSt3__16vectorIN14message_center10ButtonInfoENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.8"* %29, %"struct.message_center::ButtonInfo"* %31, %"struct.message_center::ButtonInfo"* %33) #10
  %34 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 15
  %35 = load i8, i8* %34, align 8, !range !22
  %36 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 15
  store i8 %35, i8* %36, align 8
  %37 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 17
  %38 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 17, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 17, i32 0, i32 1
  %41 = load i32*, i32** %40, align 8
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.15"* %37, i32* %39, i32* %41) #10
  br label %52

42:                                               ; preds = %2
  %43 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 11
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 11
  store i32 %44, i32* %45, align 8
  %46 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 13
  %47 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 13
  %48 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %46, %"class.std::__1::basic_string"* dereferenceable(24) %47)
  %49 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 15
  %50 = load i8, i8* %49, align 8, !range !22
  %51 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 15
  store i8 %50, i8* %51, align 8
  br label %52

52:                                               ; preds = %42, %17
  %53 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 18
  %54 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 18
  %55 = bitcast i8* %54 to i16*
  %56 = bitcast i8* %53 to i16*
  %57 = load i16, i16* %55, align 8
  store i16 %57, i16* %56, align 8
  %58 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 21
  %59 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 21
  %60 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %58, %"class.std::__1::basic_string"* dereferenceable(24) %59)
  %61 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.message_center::RichNotificationData", %"class.message_center::RichNotificationData"* %1, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 20, i1 false)
  ret %"class.message_center::RichNotificationData"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14message_center12NotificationD2Ev(%"class.message_center::Notification"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN14message_center12NotificationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 12
  %4 = bitcast %"class.std::__1::basic_string.27"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 11, i32 0
  %13 = load %"class.message_center::NotificationDelegate"*, %"class.message_center::NotificationDelegate"** %12, align 8
  %14 = icmp eq %"class.message_center::NotificationDelegate"* %13, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.message_center::NotificationDelegate", %"class.message_center::NotificationDelegate"* %13, i64 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %27

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %16, i64 -2
  %22 = bitcast %"class.base::RefCountedThreadSafe"* %21 to %"class.message_center::NotificationDelegate"*
  %23 = bitcast %"class.base::RefCountedThreadSafe"* %21 to void (%"class.message_center::NotificationDelegate"*)***
  %24 = load void (%"class.message_center::NotificationDelegate"*)**, void (%"class.message_center::NotificationDelegate"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.message_center::NotificationDelegate"*)*, void (%"class.message_center::NotificationDelegate"*)** %24, i64 5
  %26 = load void (%"class.message_center::NotificationDelegate"*)*, void (%"class.message_center::NotificationDelegate"*)** %25, align 8
  tail call void %26(%"class.message_center::NotificationDelegate"* nonnull %22) #10
  br label %27

27:                                               ; preds = %11, %15, %20
  %28 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 9
  tail call void @_ZN14message_center20RichNotificationDataD2Ev(%"class.message_center::RichNotificationData"* %28) #10
  %29 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 8, i32 3
  %30 = bitcast %"class.std::__1::basic_string.27"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %34, %27
  %38 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 8, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %38) #10
  %39 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 8, i32 1
  %40 = bitcast %"class.std::__1::basic_string.27"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #12
  br label %47

47:                                               ; preds = %37, %44
  %48 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 7
  tail call void @_ZN4GURLD1Ev(%class.GURL* %48) #10
  %49 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 6
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %50, i64 0, i32 1, i32 1
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = bitcast %"class.std::__1::basic_string"* %49 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #12
  br label %57

57:                                               ; preds = %47, %54
  %58 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 5
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %58) #10
  %59 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 4
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %57
  %65 = bitcast %"class.std::__1::basic_string"* %59 to i8**
  %66 = load i8*, i8** %65, align 8
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %57, %64
  %68 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 3
  %69 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %69, i64 0, i32 1, i32 1
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %67
  %74 = bitcast %"class.std::__1::basic_string"* %68 to i8**
  %75 = load i8*, i8** %74, align 8
  tail call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %67, %73
  %77 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 2
  %78 = bitcast %"class.std::__1::basic_string.27"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.std::__1::basic_string.27", %"class.std::__1::basic_string.27"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  tail call void @_ZdlPv(i8* %84) #12
  br label %85

85:                                               ; preds = %76, %82
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14message_center12NotificationD0Ev(%"class.message_center::Notification"*) unnamed_addr #0 align 2 {
  tail call void @_ZN14message_center12NotificationD2Ev(%"class.message_center::Notification"* %0) #10
  %2 = bitcast %"class.message_center::Notification"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.message_center::Notification"* @_ZN14message_center12Notification8DeepCopyERKS0_bbb(%"class.message_center::Notification"* dereferenceable(696), i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.gfx::ImageSkia", align 8
  %6 = alloca %"class.gfx::ImageSkia", align 8
  %7 = alloca %"class.gfx::ImageSkia", align 8
  %8 = alloca %"class.gfx::Image", align 8
  %9 = alloca %"class.gfx::Image", align 8
  %10 = alloca %"class.gfx::Image", align 8
  %11 = alloca %"class.gfx::Image", align 8
  %12 = tail call i8* @_Znwm(i64 696) #12
  %13 = bitcast i8* %12 to %"class.message_center::Notification"*
  tail call void @_ZN14message_center12NotificationC2ERKS0_(%"class.message_center::Notification"* nonnull %13, %"class.message_center::Notification"* dereferenceable(696) %0) #10
  %14 = bitcast %"class.gfx::Image"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds i8, i8* %12, i64 88
  %16 = bitcast i8* %15 to %"class.gfx::Image"*
  %17 = tail call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* %16) #10, !noalias !149
  br i1 %17, label %18, label %19

18:                                               ; preds = %4
  call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* nonnull %8) #10
  br label %21

19:                                               ; preds = %4
  %20 = bitcast %"class.gfx::ImageSkia"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10, !noalias !149
  call void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* nonnull sret %6, %"class.gfx::Image"* %16) #10
  call void @_ZN3gfx5ImageC1ERKNS_9ImageSkiaE(%"class.gfx::Image"* nonnull %8, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %6) #10
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10, !noalias !149
  br label %21

21:                                               ; preds = %18, %19
  %22 = call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"* %16, %"class.gfx::Image"* nonnull dereferenceable(8) %8) #10
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %23 = bitcast %"class.gfx::Image"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  br i1 %1, label %24, label %31

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %12, i64 456
  %26 = bitcast i8* %25 to %"class.gfx::Image"*
  %27 = call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* %26) #10, !noalias !152
  br i1 %27, label %28, label %29

28:                                               ; preds = %24
  call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* nonnull %9) #10
  br label %32

29:                                               ; preds = %24
  %30 = bitcast %"class.gfx::ImageSkia"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10, !noalias !152
  call void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* nonnull sret %5, %"class.gfx::Image"* %26) #10
  call void @_ZN3gfx5ImageC1ERKNS_9ImageSkiaE(%"class.gfx::Image"* nonnull %9, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %5) #10
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10, !noalias !152
  br label %32

31:                                               ; preds = %21
  call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* nonnull %9) #10
  br label %32

32:                                               ; preds = %29, %28, %31
  %33 = getelementptr inbounds i8, i8* %12, i64 456
  %34 = bitcast i8* %33 to %"class.gfx::Image"*
  %35 = call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"* %34, %"class.gfx::Image"* nonnull dereferenceable(8) %9) #10
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  %36 = bitcast %"class.gfx::Image"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  br i1 %2, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds i8, i8* %12, i64 464
  %39 = bitcast i8* %38 to %"class.gfx::Image"*
  call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* nonnull %10, %"class.gfx::Image"* dereferenceable(8) %39) #10
  br label %41

40:                                               ; preds = %32
  call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* nonnull %10) #10
  br label %41

41:                                               ; preds = %40, %37
  %42 = getelementptr inbounds i8, i8* %12, i64 464
  %43 = bitcast i8* %42 to %"class.gfx::Image"*
  %44 = call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"* %43, %"class.gfx::Image"* nonnull dereferenceable(8) %10) #10
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  %45 = getelementptr inbounds i8, i8* %12, i64 544
  %46 = getelementptr inbounds i8, i8* %12, i64 552
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast i8* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %48, %50
  br i1 %51, label %82, label %52

52:                                               ; preds = %41
  %53 = bitcast %"class.gfx::Image"* %11 to i8*
  %54 = bitcast %"class.gfx::ImageSkia"* %7 to i8*
  br label %55

55:                                               ; preds = %52, %75
  %56 = phi i64 [ %50, %52 ], [ %78, %75 ]
  %57 = phi i64 [ 0, %52 ], [ %76, %75 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  br i1 %3, label %58, label %64

58:                                               ; preds = %55
  %59 = inttoptr i64 %56 to %"struct.message_center::ButtonInfo"*
  %60 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %59, i64 %57, i32 1
  %61 = call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* %60) #10, !noalias !155
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* nonnull %11) #10
  br label %65

63:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10, !noalias !155
  call void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* nonnull sret %7, %"class.gfx::Image"* %60) #10
  call void @_ZN3gfx5ImageC1ERKNS_9ImageSkiaE(%"class.gfx::Image"* nonnull %11, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %7) #10
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10, !noalias !155
  br label %65

64:                                               ; preds = %55
  call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* nonnull %11) #10
  br label %65

65:                                               ; preds = %63, %62, %64
  %66 = load i64, i64* %47, align 8
  %67 = load i64, i64* %49, align 8
  %68 = sub i64 %66, %67
  %69 = ashr exact i64 %68, 6
  %70 = icmp ugt i64 %69, %57
  br i1 %70, label %71, label %75

71:                                               ; preds = %65
  %72 = inttoptr i64 %67 to %"struct.message_center::ButtonInfo"*
  %73 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %72, i64 %57, i32 1
  %74 = call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"* %73, %"class.gfx::Image"* nonnull dereferenceable(8) %11) #10
  br label %75

75:                                               ; preds = %65, %71
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  %76 = add nuw i64 %57, 1
  %77 = load i64, i64* %47, align 8
  %78 = load i64, i64* %49, align 8
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 6
  %81 = icmp ult i64 %76, %80
  br i1 %81, label %55, label %82

82:                                               ; preds = %75, %41
  ret %"class.message_center::Notification"* %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14message_center12Notification13SetButtonIconEmRKN3gfx5ImageE(%"class.message_center::Notification"* nocapture readonly, i64, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 9, i32 14
  %5 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 9, i32 14, i32 0, i32 1
  %6 = bitcast %"struct.message_center::ButtonInfo"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.8"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 6
  %12 = icmp ugt i64 %11, %1
  br i1 %12, label %13, label %17

13:                                               ; preds = %3
  %14 = inttoptr i64 %9 to %"struct.message_center::ButtonInfo"*
  %15 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %14, i64 %1, i32 1
  %16 = tail call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"* %15, %"class.gfx::Image"* dereferenceable(8) %2) #10
  br label %17

17:                                               ; preds = %3, %13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN14message_center12Notification17SetSystemPriorityEv(%"class.message_center::Notification"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 9, i32 0
  store i32 3, i32* %2, align 8
  %3 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 9, i32 1
  store i8 1, i8* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK14message_center12Notification25UseOriginAsContextMessageEv(%"class.message_center::Notification"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 9, i32 4
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 9, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 7, i32 1
  %17 = load i8, i8* %16, align 8, !range !22
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %0, i64 0, i32 7
  %21 = tail call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* %20) #10
  br label %22

22:                                               ; preds = %15, %19, %12
  %23 = phi i1 [ false, %15 ], [ false, %12 ], [ %21, %19 ]
  ret i1 %23
}

declare zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14message_center12Notification23GenerateMaskedSmallIconEijjj(%"class.gfx::Image"* noalias sret, %"class.message_center::Notification"*, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.gfx::ImageSkia", align 8
  %8 = alloca %"class.gfx::ImageSkia", align 8
  %9 = alloca %"class.gfx::ImageSkia", align 8
  %10 = alloca %"class.gfx::Image", align 8
  %11 = alloca %"class.gfx::ImageSkia", align 8
  %12 = alloca %"class.gfx::ImageSkia", align 8
  %13 = alloca %"class.gfx::ImageSkia", align 8
  %14 = alloca %"class.gfx::Size", align 4
  %15 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 9, i32 9
  %16 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %15, align 8
  %17 = getelementptr inbounds %"struct.gfx::VectorIcon", %"struct.gfx::VectorIcon"* %16, i64 0, i32 0
  %18 = load %"struct.gfx::VectorIconRep"*, %"struct.gfx::VectorIconRep"** %17, align 8
  %19 = icmp eq %"struct.gfx::VectorIconRep"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %6
  %21 = bitcast %"class.gfx::ImageSkia"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN3gfx16CreateVectorIconERKNS_10VectorIconEij(%"class.gfx::ImageSkia"* nonnull sret %7, %"struct.gfx::VectorIcon"* dereferenceable(24) %16, i32 %2, i32 %3) #10
  call void @_ZN3gfx5ImageC1ERKNS_9ImageSkiaE(%"class.gfx::Image"* %0, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %7) #10
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %49

22:                                               ; preds = %6
  %23 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 9, i32 6
  %24 = tail call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* %23) #10
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* %0) #10
  br label %49

26:                                               ; preds = %22
  %27 = bitcast %"class.gfx::ImageSkia"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %8, i64 0, i32 0, i32 0
  store %"class.gfx::internal::ImageSkiaStorage"* inttoptr (i64 -6148914691236517206 to %"class.gfx::internal::ImageSkiaStorage"*), %"class.gfx::internal::ImageSkiaStorage"** %28, align 8
  call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* nonnull %8) #10
  %29 = getelementptr inbounds %"class.message_center::Notification", %"class.message_center::Notification"* %1, i64 0, i32 9, i32 7
  %30 = load i8, i8* %29, align 8, !range !22
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = bitcast %"class.gfx::ImageSkia"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = bitcast %"class.gfx::Image"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = bitcast %"class.gfx::ImageSkia"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  call void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* nonnull sret %11, %"class.gfx::Image"* %23) #10
  call void @_ZNK14message_center12Notification19GetMaskedSmallImageERKN3gfx9ImageSkiaEjj(%"class.gfx::Image"* nonnull sret %10, %"class.message_center::Notification"* undef, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %11, i32 %4, i32 %5)
  call void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* nonnull sret %9, %"class.gfx::Image"* nonnull %10) #10
  %36 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* nonnull %8, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %9) #10
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %9) #10
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %10) #10
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %40

37:                                               ; preds = %26
  %38 = bitcast %"class.gfx::ImageSkia"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #10
  call void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* nonnull sret %12, %"class.gfx::Image"* %23) #10
  %39 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* nonnull %8, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %12) #10
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %12) #10
  br label %40

40:                                               ; preds = %32, %37
  %41 = phi i8* [ %33, %32 ], [ %38, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #10
  %42 = bitcast %"class.gfx::ImageSkia"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #10
  %43 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %13, i64 0, i32 0, i32 0
  store %"class.gfx::internal::ImageSkiaStorage"* inttoptr (i64 -6148914691236517206 to %"class.gfx::internal::ImageSkiaStorage"*), %"class.gfx::internal::ImageSkiaStorage"** %43, align 8
  %44 = bitcast %"class.gfx::Size"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10
  %45 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %14, i64 0, i32 0
  %46 = icmp sgt i32 %2, 0
  %47 = select i1 %46, i32 %2, i32 0
  store i32 %47, i32* %45, align 4
  %48 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %14, i64 0, i32 1
  store i32 %47, i32* %48, align 4
  call void @_ZN3gfx19ImageSkiaOperations18CreateResizedImageERKNS_9ImageSkiaEN4skia15ImageOperations12ResizeMethodERKNS_4SizeE(%"class.gfx::ImageSkia"* nonnull sret %13, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %8, i32 2, %"class.gfx::Size"* nonnull dereferenceable(8) %14) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10
  call void @_ZN3gfx5ImageC1ERKNS_9ImageSkiaE(%"class.gfx::Image"* %0, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %13) #10
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #10
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %49

49:                                               ; preds = %40, %25, %20
  ret void
}

declare void @_ZN3gfx16CreateVectorIconERKNS_10VectorIconEij(%"class.gfx::ImageSkia"* sret, %"struct.gfx::VectorIcon"* dereferenceable(24), i32, i32) local_unnamed_addr #1

declare void @_ZN3gfx5ImageC1ERKNS_9ImageSkiaE(%"class.gfx::Image"*, %"class.gfx::ImageSkia"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #2

declare zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"*) local_unnamed_addr #1

declare void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14message_center12Notification19GetMaskedSmallImageERKN3gfx9ImageSkiaEjj(%"class.gfx::Image"* noalias sret, %"class.message_center::Notification"* nocapture readnone, %"class.gfx::ImageSkia"* dereferenceable(8), i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkBitmap, align 8
  %7 = alloca %class.SkBitmap, align 8
  %8 = alloca %"class.gfx::ImageSkia", align 8
  %9 = alloca %"class.gfx::ImageSkia", align 8
  %10 = alloca %"class.gfx::ImageSkia", align 8
  %11 = alloca %"class.gfx::ImageSkia", align 8
  %12 = tail call i32 @_ZNK3gfx9ImageSkia5widthEv(%"class.gfx::ImageSkia"* %2) #10
  %13 = tail call i32 @_ZNK3gfx9ImageSkia6heightEv(%"class.gfx::ImageSkia"* %2) #10
  %14 = bitcast %"class.gfx::ImageSkia"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %8, i64 0, i32 0, i32 0
  store %"class.gfx::internal::ImageSkiaStorage"* inttoptr (i64 -6148914691236517206 to %"class.gfx::internal::ImageSkiaStorage"*), %"class.gfx::internal::ImageSkiaStorage"** %15, align 8
  %16 = bitcast %class.SkBitmap* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %16) #10, !noalias !158
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 56, i1 false) #10, !noalias !158
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %7) #10, !noalias !158
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* nonnull %7, i32 %12, i32 %13, i1 zeroext false) #10, !noalias !158
  call void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap* nonnull %7, i32 %3) #10, !noalias !158
  call void @_ZN3gfx9ImageSkia18CreateFrom1xBitmapERK8SkBitmap(%"class.gfx::ImageSkia"* nonnull sret %8, %class.SkBitmap* nonnull dereferenceable(56) %7) #10
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %16) #10, !noalias !158
  %17 = bitcast %"class.gfx::ImageSkia"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %9, i64 0, i32 0, i32 0
  store %"class.gfx::internal::ImageSkiaStorage"* inttoptr (i64 -6148914691236517206 to %"class.gfx::internal::ImageSkiaStorage"*), %"class.gfx::internal::ImageSkiaStorage"** %18, align 8
  %19 = bitcast %class.SkBitmap* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %19) #10, !noalias !161
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 56, i1 false) #10, !noalias !161
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %6) #10, !noalias !161
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* nonnull %6, i32 %12, i32 %13, i1 zeroext false) #10, !noalias !161
  call void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap* nonnull %6, i32 %4) #10, !noalias !161
  call void @_ZN3gfx9ImageSkia18CreateFrom1xBitmapERK8SkBitmap(%"class.gfx::ImageSkia"* nonnull sret %9, %class.SkBitmap* nonnull dereferenceable(56) %6) #10
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %19) #10, !noalias !161
  %20 = bitcast %"class.gfx::ImageSkia"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %10, i64 0, i32 0, i32 0
  store %"class.gfx::internal::ImageSkiaStorage"* inttoptr (i64 -6148914691236517206 to %"class.gfx::internal::ImageSkiaStorage"*), %"class.gfx::internal::ImageSkiaStorage"** %21, align 8
  call void @_ZN3gfx19ImageSkiaOperations17CreateMaskedImageERKNS_9ImageSkiaES3_(%"class.gfx::ImageSkia"* nonnull sret %10, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %9, %"class.gfx::ImageSkia"* dereferenceable(8) %2) #10
  %22 = bitcast %"class.gfx::ImageSkia"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  call void @_ZN3gfx19ImageSkiaOperations23CreateSuperimposedImageERKNS_9ImageSkiaES3_(%"class.gfx::ImageSkia"* nonnull sret %11, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %8, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %10) #10
  call void @_ZN3gfx5ImageC1ERKNS_9ImageSkiaE(%"class.gfx::Image"* %0, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %11) #10
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  ret void
}

declare void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* sret, %"class.gfx::Image"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3gfx19ImageSkiaOperations17CreateMaskedImageERKNS_9ImageSkiaES3_(%"class.gfx::ImageSkia"* sret, %"class.gfx::ImageSkia"* dereferenceable(8), %"class.gfx::ImageSkia"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK3gfx9ImageSkia5widthEv(%"class.gfx::ImageSkia"*) local_unnamed_addr #1

declare i32 @_ZNK3gfx9ImageSkia6heightEv(%"class.gfx::ImageSkia"*) local_unnamed_addr #1

declare void @_ZN3gfx19ImageSkiaOperations18CreateResizedImageERKNS_9ImageSkiaEN4skia15ImageOperations12ResizeMethodERKNS_4SizeE(%"class.gfx::ImageSkia"* sret, %"class.gfx::ImageSkia"* dereferenceable(8), i32, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3gfx19ImageSkiaOperations23CreateSuperimposedImageERKNS_9ImageSkiaES3_(%"class.gfx::ImageSkia"* sret, %"class.gfx::ImageSkia"* dereferenceable(8), %"class.gfx::ImageSkia"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN14message_center16NotificationItemENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"struct.message_center::NotificationItem"*, %"struct.message_center::NotificationItem"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.message_center::NotificationItem"* %2 to i64
  %5 = ptrtoint %"struct.message_center::NotificationItem"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 48
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.message_center::NotificationItem"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 48
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.message_center::NotificationItem"*
  br i1 %15, label %81, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.message_center::NotificationItem"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 48
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %1, i64 %22
  %25 = select i1 %23, %"struct.message_center::NotificationItem"* %24, %"struct.message_center::NotificationItem"* %2
  %26 = icmp eq %"struct.message_center::NotificationItem"* %25, %1
  br i1 %26, label %39, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"struct.message_center::NotificationItem"* [ %37, %27 ], [ %16, %17 ]
  %29 = phi %"struct.message_center::NotificationItem"* [ %36, %27 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %28, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %29, i64 0, i32 0
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %30, %"class.std::__1::basic_string"* dereferenceable(24) %31) #10
  %33 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %28, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %29, i64 0, i32 1
  %35 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %33, %"class.std::__1::basic_string"* dereferenceable(24) %34) #10
  %36 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %29, i64 1
  %37 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %28, i64 1
  %38 = icmp eq %"struct.message_center::NotificationItem"* %36, %25
  br i1 %38, label %39, label %27

39:                                               ; preds = %27, %17
  %40 = phi %"struct.message_center::NotificationItem"* [ %16, %17 ], [ %37, %27 ]
  br i1 %23, label %41, label %56

41:                                               ; preds = %39
  %42 = load i64, i64* %19, align 8
  %43 = icmp eq %"struct.message_center::NotificationItem"* %25, %2
  br i1 %43, label %54, label %44

44:                                               ; preds = %41
  %45 = inttoptr i64 %42 to %"struct.message_center::NotificationItem"*
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi %"struct.message_center::NotificationItem"* [ %50, %46 ], [ %45, %44 ]
  %48 = phi %"struct.message_center::NotificationItem"* [ %49, %46 ], [ %24, %44 ]
  tail call void @_ZN14message_center16NotificationItemC2ERKS0_(%"struct.message_center::NotificationItem"* %47, %"struct.message_center::NotificationItem"* dereferenceable(48) %48) #10
  %49 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %48, i64 1
  %50 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %47, i64 1
  %51 = icmp eq %"struct.message_center::NotificationItem"* %49, %2
  br i1 %51, label %52, label %46

52:                                               ; preds = %46
  %53 = ptrtoint %"struct.message_center::NotificationItem"* %50 to i64
  br label %54

54:                                               ; preds = %41, %52
  %55 = phi i64 [ %42, %41 ], [ %53, %52 ]
  store i64 %55, i64* %19, align 8
  br label %149

56:                                               ; preds = %39
  %57 = load %"struct.message_center::NotificationItem"*, %"struct.message_center::NotificationItem"** %18, align 8
  %58 = icmp eq %"struct.message_center::NotificationItem"* %57, %40
  br i1 %58, label %80, label %59

59:                                               ; preds = %56, %78
  %60 = phi %"struct.message_center::NotificationItem"* [ %61, %78 ], [ %57, %56 ]
  %61 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %60, i64 -1, i32 1
  %63 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %59
  %68 = bitcast %"class.std::__1::basic_string"* %62 to i8**
  %69 = load i8*, i8** %68, align 8
  tail call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %67, %59
  %71 = bitcast %"struct.message_center::NotificationItem"* %61 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %71, i64 0, i32 1, i32 1
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = bitcast %"struct.message_center::NotificationItem"* %61 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #12
  br label %78

78:                                               ; preds = %75, %70
  %79 = icmp eq %"struct.message_center::NotificationItem"* %61, %40
  br i1 %79, label %80, label %59

80:                                               ; preds = %78, %56
  store %"struct.message_center::NotificationItem"* %40, %"struct.message_center::NotificationItem"** %18, align 8
  br label %149

81:                                               ; preds = %3
  %82 = icmp eq i64 %12, 0
  br i1 %82, label %115, label %83

83:                                               ; preds = %81
  %84 = inttoptr i64 %12 to i8*
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %86 = load %"struct.message_center::NotificationItem"*, %"struct.message_center::NotificationItem"** %85, align 8
  %87 = icmp eq %"struct.message_center::NotificationItem"* %86, %16
  br i1 %87, label %112, label %88

88:                                               ; preds = %83, %107
  %89 = phi %"struct.message_center::NotificationItem"* [ %90, %107 ], [ %86, %83 ]
  %90 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %89, i64 -1
  %91 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %89, i64 -1, i32 1
  %92 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %92, i64 0, i32 1, i32 1
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %88
  %97 = bitcast %"class.std::__1::basic_string"* %91 to i8**
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %96, %88
  %100 = bitcast %"struct.message_center::NotificationItem"* %90 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %100, i64 0, i32 1, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %99
  %105 = bitcast %"struct.message_center::NotificationItem"* %90 to i8**
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %104, %99
  %108 = icmp eq %"struct.message_center::NotificationItem"* %90, %16
  br i1 %108, label %109, label %88

109:                                              ; preds = %107
  %110 = bitcast %"class.std::__1::vector"* %0 to i8**
  %111 = load i8*, i8** %110, align 8
  br label %112

112:                                              ; preds = %109, %83
  %113 = phi i8* [ %111, %109 ], [ %84, %83 ]
  store %"struct.message_center::NotificationItem"* %16, %"struct.message_center::NotificationItem"** %85, align 8
  tail call void @_ZdlPv(i8* %113) #12
  %114 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 24, i1 false) #10
  br label %115

115:                                              ; preds = %81, %112
  %116 = phi i64 [ %10, %81 ], [ 0, %112 ]
  %117 = icmp ugt i64 %7, 384307168202282325
  br i1 %117, label %118, label %120

118:                                              ; preds = %115
  %119 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %119) #11
  unreachable

120:                                              ; preds = %115
  %121 = sdiv exact i64 %116, 48
  %122 = icmp ult i64 %121, 192153584101141162
  br i1 %122, label %123, label %127

123:                                              ; preds = %120
  %124 = shl nsw i64 %121, 1
  %125 = icmp ult i64 %124, %7
  %126 = select i1 %125, i64 %7, i64 %124
  br label %127

127:                                              ; preds = %123, %120
  %128 = phi i64 [ %126, %123 ], [ 384307168202282325, %120 ]
  %129 = mul i64 %128, 48
  %130 = tail call i8* @_Znwm(i64 %129) #12
  %131 = bitcast i8* %130 to %"struct.message_center::NotificationItem"*
  %132 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %133 = bitcast %"struct.message_center::NotificationItem"** %132 to i8**
  store i8* %130, i8** %133, align 8
  %134 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %130, i8** %134, align 8
  %135 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %131, i64 %128
  store %"struct.message_center::NotificationItem"* %135, %"struct.message_center::NotificationItem"** %8, align 8
  %136 = bitcast %"struct.message_center::NotificationItem"** %132 to i64*
  %137 = ptrtoint i8* %130 to i64
  %138 = icmp eq %"struct.message_center::NotificationItem"* %1, %2
  br i1 %138, label %147, label %139

139:                                              ; preds = %127, %139
  %140 = phi %"struct.message_center::NotificationItem"* [ %143, %139 ], [ %131, %127 ]
  %141 = phi %"struct.message_center::NotificationItem"* [ %142, %139 ], [ %1, %127 ]
  tail call void @_ZN14message_center16NotificationItemC2ERKS0_(%"struct.message_center::NotificationItem"* %140, %"struct.message_center::NotificationItem"* dereferenceable(48) %141) #10
  %142 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %141, i64 1
  %143 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %140, i64 1
  %144 = icmp eq %"struct.message_center::NotificationItem"* %142, %2
  br i1 %144, label %145, label %139

145:                                              ; preds = %139
  %146 = ptrtoint %"struct.message_center::NotificationItem"* %143 to i64
  br label %147

147:                                              ; preds = %127, %145
  %148 = phi i64 [ %137, %127 ], [ %146, %145 ]
  store i64 %148, i64* %136, align 8
  br label %149

149:                                              ; preds = %54, %80, %147
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14message_center16NotificationItemC2ERKS0_(%"struct.message_center::NotificationItem"*, %"struct.message_center::NotificationItem"* dereferenceable(48)) unnamed_addr #4 comdat align 2 {
  %3 = bitcast %"struct.message_center::NotificationItem"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.message_center::NotificationItem"* %0 to i8*
  %9 = bitcast %"struct.message_center::NotificationItem"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #10
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.message_center::NotificationItem"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.message_center::NotificationItem"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.message_center::NotificationItem"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #11
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #11
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.message_center::NotificationItem"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !164
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !164
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !167, !noalias !164
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !167, !noalias !164
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !164
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !164
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !167, !noalias !164
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !167, !noalias !164
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !164
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !164
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !167, !noalias !164
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !167, !noalias !164
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !164
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !164
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !167, !noalias !164
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !167, !noalias !164
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !169

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !164
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !164
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !167, !noalias !164
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !167, !noalias !164
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !170

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !171

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !172

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %1, i64 0, i32 1
  %188 = bitcast %"class.std::__1::basic_string"* %187 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %188, i64 0, i32 1, i32 1
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %185
  %193 = bitcast %"class.std::__1::basic_string"* %186 to i8*
  %194 = bitcast %"class.std::__1::basic_string"* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 24, i1 false) #10
  br label %370

195:                                              ; preds = %185
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = icmp ult i64 %199, 11
  br i1 %200, label %201, label %206

201:                                              ; preds = %195
  %202 = bitcast %"class.std::__1::basic_string"* %186 to i16*
  %203 = trunc i64 %199 to i8
  %204 = bitcast %"class.std::__1::basic_string"* %186 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  store i8 %203, i8* %205, align 1
  br label %223

206:                                              ; preds = %195
  %207 = icmp ugt i64 %199, 9223372036854775791
  br i1 %207, label %208, label %210

208:                                              ; preds = %206
  %209 = bitcast %"class.std::__1::basic_string"* %186 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %209) #11
  unreachable

210:                                              ; preds = %206
  %211 = add nuw nsw i64 %199, 8
  %212 = and i64 %211, -8
  %213 = icmp slt i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %210
  tail call void @abort() #11
  unreachable

215:                                              ; preds = %210
  %216 = shl i64 %212, 1
  %217 = tail call i8* @_Znwm(i64 %216) #12
  %218 = bitcast i8* %217 to i16*
  %219 = bitcast %"class.std::__1::basic_string"* %186 to i8**
  store i8* %217, i8** %219, align 8
  %220 = or i64 %212, -9223372036854775808
  %221 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"struct.message_center::NotificationItem", %"struct.message_center::NotificationItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %199, i64* %222, align 8
  br label %223

223:                                              ; preds = %215, %201
  %224 = phi i16* [ %202, %201 ], [ %218, %215 ]
  %225 = add nuw nsw i64 %199, 1
  %226 = add i64 %199, 1
  %227 = icmp ult i64 %226, 16
  br i1 %227, label %317, label %228

228:                                              ; preds = %223
  %229 = add i64 %199, 1
  %230 = getelementptr i16, i16* %224, i64 %229
  %231 = getelementptr i16, i16* %197, i64 %229
  %232 = icmp ult i16* %224, %231
  %233 = icmp ult i16* %197, %230
  %234 = and i1 %232, %233
  br i1 %234, label %317, label %235

235:                                              ; preds = %228
  %236 = and i64 %226, -16
  %237 = sub i64 %225, %236
  %238 = getelementptr i16, i16* %197, i64 %236
  %239 = getelementptr i16, i16* %224, i64 %236
  %240 = add i64 %236, -16
  %241 = lshr exact i64 %240, 4
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp ult i64 %240, 48
  br i1 %244, label %296, label %245

245:                                              ; preds = %235
  %246 = sub nsw i64 %242, %243
  br label %247

247:                                              ; preds = %247, %245
  %248 = phi i64 [ 0, %245 ], [ %293, %247 ]
  %249 = phi i64 [ %246, %245 ], [ %294, %247 ]
  %250 = getelementptr i16, i16* %197, i64 %248
  %251 = getelementptr i16, i16* %224, i64 %248
  %252 = bitcast i16* %250 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !173
  %254 = getelementptr i16, i16* %250, i64 8
  %255 = bitcast i16* %254 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !173
  %257 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %257, align 2, !alias.scope !176, !noalias !173
  %258 = getelementptr i16, i16* %251, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %259, align 2, !alias.scope !176, !noalias !173
  %260 = or i64 %248, 16
  %261 = getelementptr i16, i16* %197, i64 %260
  %262 = getelementptr i16, i16* %224, i64 %260
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !173
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !173
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2, !alias.scope !176, !noalias !173
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2, !alias.scope !176, !noalias !173
  %271 = or i64 %248, 32
  %272 = getelementptr i16, i16* %197, i64 %271
  %273 = getelementptr i16, i16* %224, i64 %271
  %274 = bitcast i16* %272 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !173
  %276 = getelementptr i16, i16* %272, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !173
  %279 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %279, align 2, !alias.scope !176, !noalias !173
  %280 = getelementptr i16, i16* %273, i64 8
  %281 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %281, align 2, !alias.scope !176, !noalias !173
  %282 = or i64 %248, 48
  %283 = getelementptr i16, i16* %197, i64 %282
  %284 = getelementptr i16, i16* %224, i64 %282
  %285 = bitcast i16* %283 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !173
  %287 = getelementptr i16, i16* %283, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !173
  %290 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %290, align 2, !alias.scope !176, !noalias !173
  %291 = getelementptr i16, i16* %284, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %292, align 2, !alias.scope !176, !noalias !173
  %293 = add i64 %248, 64
  %294 = add i64 %249, -4
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %247, !llvm.loop !178

296:                                              ; preds = %247, %235
  %297 = phi i64 [ 0, %235 ], [ %293, %247 ]
  %298 = icmp eq i64 %243, 0
  br i1 %298, label %315, label %299

299:                                              ; preds = %296, %299
  %300 = phi i64 [ %312, %299 ], [ %297, %296 ]
  %301 = phi i64 [ %313, %299 ], [ %243, %296 ]
  %302 = getelementptr i16, i16* %197, i64 %300
  %303 = getelementptr i16, i16* %224, i64 %300
  %304 = bitcast i16* %302 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !173
  %306 = getelementptr i16, i16* %302, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !173
  %309 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %309, align 2, !alias.scope !176, !noalias !173
  %310 = getelementptr i16, i16* %303, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %311, align 2, !alias.scope !176, !noalias !173
  %312 = add i64 %300, 16
  %313 = add i64 %301, -1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %299, !llvm.loop !179

315:                                              ; preds = %299, %296
  %316 = icmp eq i64 %226, %236
  br i1 %316, label %370, label %317

317:                                              ; preds = %315, %228, %223
  %318 = phi i64 [ %225, %228 ], [ %225, %223 ], [ %237, %315 ]
  %319 = phi i16* [ %197, %228 ], [ %197, %223 ], [ %238, %315 ]
  %320 = phi i16* [ %224, %228 ], [ %224, %223 ], [ %239, %315 ]
  %321 = add i64 %318, -1
  %322 = and i64 %318, 7
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %335, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %330, %324 ], [ %318, %317 ]
  %326 = phi i16* [ %332, %324 ], [ %319, %317 ]
  %327 = phi i16* [ %331, %324 ], [ %320, %317 ]
  %328 = phi i64 [ %333, %324 ], [ %322, %317 ]
  %329 = load i16, i16* %326, align 2
  store i16 %329, i16* %327, align 2
  %330 = add i64 %325, -1
  %331 = getelementptr inbounds i16, i16* %327, i64 1
  %332 = getelementptr inbounds i16, i16* %326, i64 1
  %333 = add i64 %328, -1
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %324, !llvm.loop !180

335:                                              ; preds = %324, %317
  %336 = phi i64 [ %318, %317 ], [ %330, %324 ]
  %337 = phi i16* [ %319, %317 ], [ %332, %324 ]
  %338 = phi i16* [ %320, %317 ], [ %331, %324 ]
  %339 = icmp ult i64 %321, 7
  br i1 %339, label %370, label %340

340:                                              ; preds = %335, %340
  %341 = phi i64 [ %366, %340 ], [ %336, %335 ]
  %342 = phi i16* [ %368, %340 ], [ %337, %335 ]
  %343 = phi i16* [ %367, %340 ], [ %338, %335 ]
  %344 = load i16, i16* %342, align 2
  store i16 %344, i16* %343, align 2
  %345 = getelementptr inbounds i16, i16* %343, i64 1
  %346 = getelementptr inbounds i16, i16* %342, i64 1
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %343, i64 2
  %349 = getelementptr inbounds i16, i16* %342, i64 2
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %343, i64 3
  %352 = getelementptr inbounds i16, i16* %342, i64 3
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %343, i64 4
  %355 = getelementptr inbounds i16, i16* %342, i64 4
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %343, i64 5
  %358 = getelementptr inbounds i16, i16* %342, i64 5
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %343, i64 6
  %361 = getelementptr inbounds i16, i16* %342, i64 6
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %343, i64 7
  %364 = getelementptr inbounds i16, i16* %342, i64 7
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = add i64 %341, -8
  %367 = getelementptr inbounds i16, i16* %343, i64 8
  %368 = getelementptr inbounds i16, i16* %342, i64 8
  %369 = icmp eq i64 %366, 0
  br i1 %369, label %370, label %340, !llvm.loop !181

370:                                              ; preds = %335, %340, %315, %192
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN14message_center10ButtonInfoENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.8"*, %"struct.message_center::ButtonInfo"*, %"struct.message_center::ButtonInfo"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.message_center::ButtonInfo"* %2 to i64
  %5 = ptrtoint %"struct.message_center::ButtonInfo"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 6
  %8 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.message_center::ButtonInfo"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.8"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 6
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.message_center::ButtonInfo"*
  br i1 %15, label %82, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.message_center::ButtonInfo"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 6
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %1, i64 %22
  %25 = select i1 %23, %"struct.message_center::ButtonInfo"* %24, %"struct.message_center::ButtonInfo"* %2
  %26 = icmp eq %"struct.message_center::ButtonInfo"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"struct.message_center::ButtonInfo"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"struct.message_center::ButtonInfo"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(64) %"struct.message_center::ButtonInfo"* @_ZN14message_center10ButtonInfoaSERKS0_(%"struct.message_center::ButtonInfo"* %28, %"struct.message_center::ButtonInfo"* dereferenceable(64) %29) #10
  %31 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %29, i64 1
  %32 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %28, i64 1
  %33 = icmp eq %"struct.message_center::ButtonInfo"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"struct.message_center::ButtonInfo"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %51

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"struct.message_center::ButtonInfo"* %25, %2
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"struct.message_center::ButtonInfo"*
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %"struct.message_center::ButtonInfo"* [ %45, %41 ], [ %40, %39 ]
  %43 = phi %"struct.message_center::ButtonInfo"* [ %44, %41 ], [ %24, %39 ]
  tail call void @_ZN14message_center10ButtonInfoC2ERKS0_(%"struct.message_center::ButtonInfo"* %42, %"struct.message_center::ButtonInfo"* dereferenceable(64) %43) #10
  %44 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %43, i64 1
  %45 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %42, i64 1
  %46 = icmp eq %"struct.message_center::ButtonInfo"* %44, %2
  br i1 %46, label %47, label %41

47:                                               ; preds = %41
  %48 = ptrtoint %"struct.message_center::ButtonInfo"* %45 to i64
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi i64 [ %37, %36 ], [ %48, %47 ]
  store i64 %50, i64* %19, align 8
  br label %159

51:                                               ; preds = %34
  %52 = load %"struct.message_center::ButtonInfo"*, %"struct.message_center::ButtonInfo"** %18, align 8
  %53 = icmp eq %"struct.message_center::ButtonInfo"* %52, %35
  br i1 %53, label %81, label %54

54:                                               ; preds = %51, %79
  %55 = phi %"struct.message_center::ButtonInfo"* [ %56, %79 ], [ %52, %51 ]
  %56 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %55, i64 -1
  %57 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %55, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0
  %58 = load i8, i8* %57, align 8, !range !22
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %55, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %62, i64 0, i32 1, i32 1
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %60
  %67 = bitcast %"class.std::__1::basic_string"* %61 to i8**
  %68 = load i8*, i8** %67, align 8
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %66, %60
  store i8 0, i8* %57, align 8
  br label %70

70:                                               ; preds = %69, %54
  %71 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %55, i64 -1, i32 1
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %71) #10
  %72 = bitcast %"struct.message_center::ButtonInfo"* %56 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %72, i64 0, i32 1, i32 1
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %70
  %77 = bitcast %"struct.message_center::ButtonInfo"* %56 to i8**
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %76, %70
  %80 = icmp eq %"struct.message_center::ButtonInfo"* %56, %35
  br i1 %80, label %81, label %54

81:                                               ; preds = %79, %51
  store %"struct.message_center::ButtonInfo"* %35, %"struct.message_center::ButtonInfo"** %18, align 8
  br label %159

82:                                               ; preds = %3
  %83 = icmp eq i64 %12, 0
  br i1 %83, label %122, label %84

84:                                               ; preds = %82
  %85 = inttoptr i64 %12 to i8*
  %86 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %87 = load %"struct.message_center::ButtonInfo"*, %"struct.message_center::ButtonInfo"** %86, align 8
  %88 = icmp eq %"struct.message_center::ButtonInfo"* %87, %16
  br i1 %88, label %119, label %89

89:                                               ; preds = %84, %114
  %90 = phi %"struct.message_center::ButtonInfo"* [ %91, %114 ], [ %87, %84 ]
  %91 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %90, i64 -1
  %92 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %90, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0
  %93 = load i8, i8* %92, align 8, !range !22
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %90, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %97 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %97, i64 0, i32 1, i32 1
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = bitcast %"class.std::__1::basic_string"* %96 to i8**
  %103 = load i8*, i8** %102, align 8
  tail call void @_ZdlPv(i8* %103) #12
  br label %104

104:                                              ; preds = %101, %95
  store i8 0, i8* %92, align 8
  br label %105

105:                                              ; preds = %104, %89
  %106 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %90, i64 -1, i32 1
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %106) #10
  %107 = bitcast %"struct.message_center::ButtonInfo"* %91 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %107, i64 0, i32 1, i32 1
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %105
  %112 = bitcast %"struct.message_center::ButtonInfo"* %91 to i8**
  %113 = load i8*, i8** %112, align 8
  tail call void @_ZdlPv(i8* %113) #12
  br label %114

114:                                              ; preds = %111, %105
  %115 = icmp eq %"struct.message_center::ButtonInfo"* %91, %16
  br i1 %115, label %116, label %89

116:                                              ; preds = %114
  %117 = bitcast %"class.std::__1::vector.8"* %0 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %84
  %120 = phi i8* [ %118, %116 ], [ %85, %84 ]
  store %"struct.message_center::ButtonInfo"* %16, %"struct.message_center::ButtonInfo"** %86, align 8
  tail call void @_ZdlPv(i8* %120) #12
  %121 = bitcast %"class.std::__1::vector.8"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 24, i1 false) #10
  br label %122

122:                                              ; preds = %82, %119
  %123 = phi i64 [ %10, %82 ], [ 0, %119 ]
  %124 = icmp ugt i64 %7, 288230376151711743
  br i1 %124, label %125, label %127

125:                                              ; preds = %122
  %126 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %126) #11
  unreachable

127:                                              ; preds = %122
  %128 = ashr exact i64 %123, 6
  %129 = icmp ult i64 %128, 144115188075855871
  br i1 %129, label %130, label %137

130:                                              ; preds = %127
  %131 = ashr exact i64 %123, 5
  %132 = icmp ult i64 %131, %7
  br i1 %132, label %137, label %133

133:                                              ; preds = %130
  %134 = icmp ugt i64 %131, 288230376151711743
  br i1 %134, label %135, label %137

135:                                              ; preds = %133
  %136 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %136) #11
  unreachable

137:                                              ; preds = %130, %127, %133
  %138 = phi i64 [ %131, %133 ], [ 288230376151711743, %127 ], [ %7, %130 ]
  %139 = shl i64 %138, 6
  %140 = tail call i8* @_Znwm(i64 %139) #12
  %141 = bitcast i8* %140 to %"struct.message_center::ButtonInfo"*
  %142 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %143 = bitcast %"struct.message_center::ButtonInfo"** %142 to i8**
  store i8* %140, i8** %143, align 8
  %144 = bitcast %"class.std::__1::vector.8"* %0 to i8**
  store i8* %140, i8** %144, align 8
  %145 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %141, i64 %138
  store %"struct.message_center::ButtonInfo"* %145, %"struct.message_center::ButtonInfo"** %8, align 8
  %146 = bitcast %"struct.message_center::ButtonInfo"** %142 to i64*
  %147 = ptrtoint i8* %140 to i64
  %148 = icmp eq %"struct.message_center::ButtonInfo"* %1, %2
  br i1 %148, label %157, label %149

149:                                              ; preds = %137, %149
  %150 = phi %"struct.message_center::ButtonInfo"* [ %153, %149 ], [ %141, %137 ]
  %151 = phi %"struct.message_center::ButtonInfo"* [ %152, %149 ], [ %1, %137 ]
  tail call void @_ZN14message_center10ButtonInfoC2ERKS0_(%"struct.message_center::ButtonInfo"* %150, %"struct.message_center::ButtonInfo"* dereferenceable(64) %151) #10
  %152 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %151, i64 1
  %153 = getelementptr inbounds %"struct.message_center::ButtonInfo", %"struct.message_center::ButtonInfo"* %150, i64 1
  %154 = icmp eq %"struct.message_center::ButtonInfo"* %152, %2
  br i1 %154, label %155, label %149

155:                                              ; preds = %149
  %156 = ptrtoint %"struct.message_center::ButtonInfo"* %153 to i64
  br label %157

157:                                              ; preds = %137, %155
  %158 = phi i64 [ %147, %137 ], [ %156, %155 ]
  store i64 %158, i64* %146, align 8
  br label %159

159:                                              ; preds = %49, %81, %157
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.15"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.15"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #10
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #10
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.15"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #10
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #11
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #11
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.15"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #10
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

declare void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap*, i32, i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap*, i32) local_unnamed_addr #1

declare void @_ZN3gfx9ImageSkia18CreateFrom1xBitmapERK8SkBitmap(%"class.gfx::ImageSkia"* sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #11
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #11
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !182
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !182
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !185, !noalias !182
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !185, !noalias !182
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !182
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !182
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !185, !noalias !182
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !185, !noalias !182
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !182
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !182
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !185, !noalias !182
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !185, !noalias !182
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !182
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !182
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !185, !noalias !182
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !185, !noalias !182
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !187

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !182
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !182
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !185, !noalias !182
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !185, !noalias !182
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !188

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !189

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !190

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !191

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !192

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !193

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !195
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !195
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !198, !noalias !195
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !198, !noalias !195
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !195
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !195
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !198, !noalias !195
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !198, !noalias !195
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !195
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !195
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !198, !noalias !195
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !198, !noalias !195
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !195
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !195
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !198, !noalias !195
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !198, !noalias !195
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !200

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !195
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !195
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !198, !noalias !195
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !198, !noalias !195
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !201

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !202

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !203

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

declare dereferenceable(24) %"class.std::__1::basic_string.27"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.27"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.27"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.27"*, i8*, i64) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.27"*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{i8 0, i8 2}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !8}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !8}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !8}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !10}
!40 = distinct !{!40, !8}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !8}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !10}
!49 = distinct !{!49, !8}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !8}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !10}
!58 = distinct !{!58, !8}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !8}
!65 = distinct !{!65, !10}
!66 = distinct !{!66, !10}
!67 = distinct !{!67, !8}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !8}
!74 = distinct !{!74, !10}
!75 = distinct !{!75, !10}
!76 = distinct !{!76, !8}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !8}
!83 = distinct !{!83, !10}
!84 = distinct !{!84, !10}
!85 = distinct !{!85, !8}
!86 = !{!87}
!87 = distinct !{!87, !88}
!88 = distinct !{!88, !"LVerDomain"}
!89 = !{!90}
!90 = distinct !{!90, !88}
!91 = distinct !{!91, !8}
!92 = distinct !{!92, !10}
!93 = distinct !{!93, !10}
!94 = distinct !{!94, !8}
!95 = !{!96}
!96 = distinct !{!96, !97}
!97 = distinct !{!97, !"LVerDomain"}
!98 = !{!99}
!99 = distinct !{!99, !97}
!100 = distinct !{!100, !8}
!101 = distinct !{!101, !10}
!102 = distinct !{!102, !10}
!103 = distinct !{!103, !8}
!104 = !{!105}
!105 = distinct !{!105, !106}
!106 = distinct !{!106, !"LVerDomain"}
!107 = !{!108}
!108 = distinct !{!108, !106}
!109 = distinct !{!109, !8}
!110 = distinct !{!110, !10}
!111 = distinct !{!111, !10}
!112 = distinct !{!112, !8}
!113 = !{!114}
!114 = distinct !{!114, !115}
!115 = distinct !{!115, !"LVerDomain"}
!116 = !{!117}
!117 = distinct !{!117, !115}
!118 = distinct !{!118, !8}
!119 = distinct !{!119, !10}
!120 = distinct !{!120, !10}
!121 = distinct !{!121, !8}
!122 = !{!123}
!123 = distinct !{!123, !124}
!124 = distinct !{!124, !"LVerDomain"}
!125 = !{!126}
!126 = distinct !{!126, !124}
!127 = distinct !{!127, !8}
!128 = distinct !{!128, !10}
!129 = distinct !{!129, !10}
!130 = distinct !{!130, !8}
!131 = !{!132}
!132 = distinct !{!132, !133}
!133 = distinct !{!133, !"LVerDomain"}
!134 = !{!135}
!135 = distinct !{!135, !133}
!136 = distinct !{!136, !8}
!137 = distinct !{!137, !10}
!138 = distinct !{!138, !10}
!139 = distinct !{!139, !8}
!140 = !{!141}
!141 = distinct !{!141, !142}
!142 = distinct !{!142, !"LVerDomain"}
!143 = !{!144}
!144 = distinct !{!144, !142}
!145 = distinct !{!145, !8}
!146 = distinct !{!146, !10}
!147 = distinct !{!147, !10}
!148 = distinct !{!148, !8}
!149 = !{!150}
!150 = distinct !{!150, !151, !"_ZN14message_center12_GLOBAL__N_114DuplicateImageERKN3gfx5ImageE: argument 0"}
!151 = distinct !{!151, !"_ZN14message_center12_GLOBAL__N_114DuplicateImageERKN3gfx5ImageE"}
!152 = !{!153}
!153 = distinct !{!153, !154, !"_ZN14message_center12_GLOBAL__N_114DuplicateImageERKN3gfx5ImageE: argument 0"}
!154 = distinct !{!154, !"_ZN14message_center12_GLOBAL__N_114DuplicateImageERKN3gfx5ImageE"}
!155 = !{!156}
!156 = distinct !{!156, !157, !"_ZN14message_center12_GLOBAL__N_114DuplicateImageERKN3gfx5ImageE: argument 0"}
!157 = distinct !{!157, !"_ZN14message_center12_GLOBAL__N_114DuplicateImageERKN3gfx5ImageE"}
!158 = !{!159}
!159 = distinct !{!159, !160, !"_ZN14message_center12_GLOBAL__N_121CreateSolidColorImageEiij: argument 0"}
!160 = distinct !{!160, !"_ZN14message_center12_GLOBAL__N_121CreateSolidColorImageEiij"}
!161 = !{!162}
!162 = distinct !{!162, !163, !"_ZN14message_center12_GLOBAL__N_121CreateSolidColorImageEiij: argument 0"}
!163 = distinct !{!163, !"_ZN14message_center12_GLOBAL__N_121CreateSolidColorImageEiij"}
!164 = !{!165}
!165 = distinct !{!165, !166}
!166 = distinct !{!166, !"LVerDomain"}
!167 = !{!168}
!168 = distinct !{!168, !166}
!169 = distinct !{!169, !8}
!170 = distinct !{!170, !10}
!171 = distinct !{!171, !10}
!172 = distinct !{!172, !8}
!173 = !{!174}
!174 = distinct !{!174, !175}
!175 = distinct !{!175, !"LVerDomain"}
!176 = !{!177}
!177 = distinct !{!177, !175}
!178 = distinct !{!178, !8}
!179 = distinct !{!179, !10}
!180 = distinct !{!180, !10}
!181 = distinct !{!181, !8}
!182 = !{!183}
!183 = distinct !{!183, !184}
!184 = distinct !{!184, !"LVerDomain"}
!185 = !{!186}
!186 = distinct !{!186, !184}
!187 = distinct !{!187, !8}
!188 = distinct !{!188, !10}
!189 = distinct !{!189, !10}
!190 = distinct !{!190, !8}
!191 = distinct !{!191, !8}
!192 = distinct !{!192, !10}
!193 = distinct !{!193, !194, !8}
!194 = !{!"llvm.loop.unroll.runtime.disable"}
!195 = !{!196}
!196 = distinct !{!196, !197}
!197 = distinct !{!197, !"LVerDomain"}
!198 = !{!199}
!199 = distinct !{!199, !197}
!200 = distinct !{!200, !8}
!201 = distinct !{!201, !10}
!202 = distinct !{!202, !10}
!203 = distinct !{!203, !8}
