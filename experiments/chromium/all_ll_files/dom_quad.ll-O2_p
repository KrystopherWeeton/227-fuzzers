; ModuleID = '../../third_party/blink/renderer/core/geometry/dom_quad.cc'
source_filename = "../../third_party/blink/renderer/core/geometry/dom_quad.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.177", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.120", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist.51"* }
%"class.blink::Worklist.51" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.100", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.114", [4 x i8] }>
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102", %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { float }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.123", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.51"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.79"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.185" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.176 }
%class.scoped_refptr.176 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.11", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.194" }
%"struct.std::__1::atomic.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__cxx_atomic_impl.197" }
%"struct.std::__1::__cxx_atomic_impl.197" = type { %"struct.std::__1::__cxx_atomic_base_impl.198" }
%"struct.std::__1::__cxx_atomic_base_impl.198" = type { i32 }
%"class.blink::DOMQuad" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", double, double, double, double, i8, [7 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DOMPoint"* }
%"class.blink::DOMPoint" = type { %"class.blink::DOMPointReadOnly" }
%"class.blink::DOMPointReadOnly" = type { %"class.blink::ScriptWrappable", double, double, double, double }
%"class.blink::DOMPointInit" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, double, double, double, double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::DOMRectInit" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, double, double, double, double }
%"class.blink::DOMQuadInit" = type { %"class.blink::IDLDictionaryBase", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::DOMPointInit"* }
%"class.blink::DOMRect" = type { %"class.blink::DOMRectReadOnly" }
%"class.blink::DOMRectReadOnly" = type { %"class.blink::ScriptWrappable", double, double, double, double }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.190", %class.scoped_refptr.193 }
%"class.blink::TraceWrapperV8Reference.190" = type { %"class.v8::TracedReference.191" }
%"class.v8::TracedReference.191" = type { %"class.v8::BasicTracedReference.192" }
%"class.v8::BasicTracedReference.192" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.193 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.181", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.181" = type { %"class.blink::MemberBase.182" }
%"class.blink::MemberBase.182" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.183" }
%"class.blink::Persistent.183" = type { %"class.blink::PersistentBase.184" }
%"class.blink::PersistentBase.184" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::V8ObjectBuilder" = type { %"class.blink::ScriptState"*, %"class.v8::Local" }
%"class.v8::Local" = type { %"class.v8::Object"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::(anonymous namespace)::DOMQuadPoint" = type { %"class.blink::DOMPoint", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::DOMQuad"* }

$_ZN5blink15V8ObjectBuilder3AddIPNS_8DOMPointEEERS0_RKN3WTF10StringViewERKT_ = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink7DOMQuadD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink7DOMQuad5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink7DOMQuad18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZNK5blink8DOMPoint18GetWrapperTypeInfoEv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_7DOMQuadEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_7DOMQuadEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink10TraceTraitINS_8DOMPointEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink7DOMQuadE = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink7DOMQuadE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::DOMQuad"*)* @_ZN5blink7DOMQuadD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::DOMQuad"*, %"class.blink::Visitor"*)* @_ZNK5blink7DOMQuad5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::DOMQuad"*)* @_ZNK5blink7DOMQuad18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [3 x i8] c"p1\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"p2\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"p3\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"p4\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink12_GLOBAL__N_112DOMQuadPointE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::DOMQuadPoint"*)* @_ZN5blink12_GLOBAL__N_112DOMQuadPointD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::DOMQuadPoint"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_112DOMQuadPoint5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::DOMPoint"*)* @_ZNK5blink8DOMPoint18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::DOMQuadPoint"*, double)* @_ZN5blink12_GLOBAL__N_112DOMQuadPoint4setXEd to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::DOMQuadPoint"*, double)* @_ZN5blink12_GLOBAL__N_112DOMQuadPoint4setYEd to i8*)] }, align 8
@_ZN5blink8DOMPoint18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.7 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink7DOMQuad18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8

@_ZN5blink7DOMQuadC1EPKNS_12DOMPointInitES3_S3_S3_ = hidden unnamed_addr alias void (%"class.blink::DOMQuad"*, %"class.blink::DOMPointInit"*, %"class.blink::DOMPointInit"*, %"class.blink::DOMPointInit"*, %"class.blink::DOMPointInit"*), void (%"class.blink::DOMQuad"*, %"class.blink::DOMPointInit"*, %"class.blink::DOMPointInit"*, %"class.blink::DOMPointInit"*, %"class.blink::DOMPointInit"*)* @_ZN5blink7DOMQuadC2EPKNS_12DOMPointInitES3_S3_S3_
@_ZN5blink7DOMQuadC1Edddd = hidden unnamed_addr alias void (%"class.blink::DOMQuad"*, double, double, double, double), void (%"class.blink::DOMQuad"*, double, double, double, double)* @_ZN5blink7DOMQuadC2Edddd

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMQuad"* @_ZN5blink7DOMQuad6CreateEPKNS_12DOMPointInitES3_S3_S3_(%"class.blink::DOMPointInit"*, %"class.blink::DOMPointInit"*, %"class.blink::DOMPointInit"*, %"class.blink::DOMPointInit"*) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 88) #7
  %6 = bitcast i8* %5 to %"class.blink::DOMQuad"*
  tail call void @_ZN5blink7DOMQuadC2EPKNS_12DOMPointInitES3_S3_S3_(%"class.blink::DOMQuad"* %6, %"class.blink::DOMPointInit"* %0, %"class.blink::DOMPointInit"* %1, %"class.blink::DOMPointInit"* %2, %"class.blink::DOMPointInit"* %3) #7
  %7 = getelementptr inbounds i8, i8* %5, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  ret %"class.blink::DOMQuad"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMQuad"* @_ZN5blink7DOMQuad8fromRectEPKNS_11DOMRectInitE(%"class.blink::DOMRectInit"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMRectInit", %"class.blink::DOMRectInit"* %0, i64 0, i32 7
  %3 = load double, double* %2, align 8
  %4 = getelementptr inbounds %"class.blink::DOMRectInit", %"class.blink::DOMRectInit"* %0, i64 0, i32 8
  %5 = load double, double* %4, align 8
  %6 = getelementptr inbounds %"class.blink::DOMRectInit", %"class.blink::DOMRectInit"* %0, i64 0, i32 6
  %7 = load double, double* %6, align 8
  %8 = getelementptr inbounds %"class.blink::DOMRectInit", %"class.blink::DOMRectInit"* %0, i64 0, i32 5
  %9 = load double, double* %8, align 8
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 88) #7
  %11 = bitcast i8* %10 to %"class.blink::DOMQuad"*
  tail call void @_ZN5blink7DOMQuadC2Edddd(%"class.blink::DOMQuad"* %11, double %3, double %5, double %7, double %9) #7
  %12 = getelementptr inbounds i8, i8* %10, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  ret %"class.blink::DOMQuad"* %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMQuad"* @_ZN5blink7DOMQuad8fromQuadEPKNS_11DOMQuadInitE(%"class.blink::DOMQuadInit"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMQuadInit", %"class.blink::DOMQuadInit"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::DOMPointInit"*, %"class.blink::DOMPointInit"** %2, align 8
  %4 = icmp eq %"class.blink::DOMPointInit"* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 48) #7
  %7 = bitcast i8* %6 to %"class.blink::DOMPointInit"*
  tail call void @_ZN5blink12DOMPointInitC1Ev(%"class.blink::DOMPointInit"* %7) #7
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %"class.blink::DOMPointInit"* [ %7, %5 ], [ %3, %1 ]
  %14 = getelementptr inbounds %"class.blink::DOMQuadInit", %"class.blink::DOMQuadInit"* %0, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::DOMPointInit"*, %"class.blink::DOMPointInit"** %14, align 8
  %16 = icmp eq %"class.blink::DOMPointInit"* %15, null
  br i1 %16, label %17, label %24

17:                                               ; preds = %12
  %18 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 48) #7
  %19 = bitcast i8* %18 to %"class.blink::DOMPointInit"*
  tail call void @_ZN5blink12DOMPointInitC1Ev(%"class.blink::DOMPointInit"* %19) #7
  %20 = getelementptr inbounds i8, i8* %18, i64 -4
  %21 = bitcast i8* %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = or i16 %22, 1
  store atomic i16 %23, i16* %21 release, align 2
  br label %24

24:                                               ; preds = %12, %17
  %25 = phi %"class.blink::DOMPointInit"* [ %19, %17 ], [ %15, %12 ]
  %26 = getelementptr inbounds %"class.blink::DOMQuadInit", %"class.blink::DOMQuadInit"* %0, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::DOMPointInit"*, %"class.blink::DOMPointInit"** %26, align 8
  %28 = icmp eq %"class.blink::DOMPointInit"* %27, null
  br i1 %28, label %29, label %36

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 48) #7
  %31 = bitcast i8* %30 to %"class.blink::DOMPointInit"*
  tail call void @_ZN5blink12DOMPointInitC1Ev(%"class.blink::DOMPointInit"* %31) #7
  %32 = getelementptr inbounds i8, i8* %30, i64 -4
  %33 = bitcast i8* %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = or i16 %34, 1
  store atomic i16 %35, i16* %33 release, align 2
  br label %36

36:                                               ; preds = %24, %29
  %37 = phi %"class.blink::DOMPointInit"* [ %31, %29 ], [ %27, %24 ]
  %38 = getelementptr inbounds %"class.blink::DOMQuadInit", %"class.blink::DOMQuadInit"* %0, i64 0, i32 4, i32 0, i32 0
  %39 = load %"class.blink::DOMPointInit"*, %"class.blink::DOMPointInit"** %38, align 8
  %40 = icmp eq %"class.blink::DOMPointInit"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 48) #7
  %43 = bitcast i8* %42 to %"class.blink::DOMPointInit"*
  tail call void @_ZN5blink12DOMPointInitC1Ev(%"class.blink::DOMPointInit"* %43) #7
  %44 = getelementptr inbounds i8, i8* %42, i64 -4
  %45 = bitcast i8* %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = or i16 %46, 1
  store atomic i16 %47, i16* %45 release, align 2
  br label %48

48:                                               ; preds = %36, %41
  %49 = phi %"class.blink::DOMPointInit"* [ %43, %41 ], [ %39, %36 ]
  %50 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 88) #7
  %51 = bitcast i8* %50 to %"class.blink::DOMQuad"*
  tail call void @_ZN5blink7DOMQuadC2EPKNS_12DOMPointInitES3_S3_S3_(%"class.blink::DOMQuad"* %51, %"class.blink::DOMPointInit"* %13, %"class.blink::DOMPointInit"* %25, %"class.blink::DOMPointInit"* %37, %"class.blink::DOMPointInit"* %49) #7
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::DOMQuad"* %51
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMRect"* @_ZN5blink7DOMQuad9getBoundsEv(%"class.blink::DOMQuad"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink7DOMQuad15CalculateBoundsEv(%"class.blink::DOMQuad"* %0)
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 5
  %8 = load double, double* %7, align 8
  %9 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 6
  %10 = load double, double* %9, align 8
  %11 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 7
  %12 = load double, double* %11, align 8
  %13 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 8
  %14 = load double, double* %13, align 8
  %15 = tail call %"class.blink::DOMRect"* @_ZN5blink7DOMRect6CreateEdddd(double %8, double %10, double %12, double %14) #7
  ret %"class.blink::DOMRect"* %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink7DOMQuad15CalculateBoundsEv(%"class.blink::DOMQuad"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::DOMPoint"*, %"class.blink::DOMPoint"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::DOMPoint", %"class.blink::DOMPoint"* %3, i64 0, i32 0, i32 1
  %5 = load double, double* %4, align 8
  %6 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::DOMPoint"*, %"class.blink::DOMPoint"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::DOMPoint", %"class.blink::DOMPoint"* %7, i64 0, i32 0, i32 1
  %9 = load double, double* %8, align 8
  %10 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::DOMPoint"*, %"class.blink::DOMPoint"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::DOMPoint", %"class.blink::DOMPoint"* %11, i64 0, i32 0, i32 1
  %13 = load double, double* %12, align 8
  %14 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 4, i32 0, i32 0
  %15 = load %"class.blink::DOMPoint"*, %"class.blink::DOMPoint"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::DOMPoint", %"class.blink::DOMPoint"* %15, i64 0, i32 0, i32 1
  %17 = load double, double* %16, align 8
  %18 = fcmp uno double %5, %9
  %19 = fcmp olt double %9, %5
  %20 = select i1 %19, double %9, double %5
  %21 = select i1 %18, double 0x7FF8000000000000, double %20
  %22 = fcmp uno double %13, %17
  %23 = fcmp olt double %17, %13
  %24 = select i1 %23, double %17, double %13
  %25 = select i1 %22, double 0x7FF8000000000000, double %24
  %26 = fcmp uno double %21, %25
  %27 = fcmp olt double %25, %21
  %28 = select i1 %27, double %25, double %21
  %29 = select i1 %26, double 0x7FF8000000000000, double %28
  %30 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 5
  store double %29, double* %30, align 8
  %31 = getelementptr inbounds %"class.blink::DOMPoint", %"class.blink::DOMPoint"* %3, i64 0, i32 0, i32 2
  %32 = load double, double* %31, align 8
  %33 = getelementptr inbounds %"class.blink::DOMPoint", %"class.blink::DOMPoint"* %7, i64 0, i32 0, i32 2
  %34 = load double, double* %33, align 8
  %35 = getelementptr inbounds %"class.blink::DOMPoint", %"class.blink::DOMPoint"* %11, i64 0, i32 0, i32 2
  %36 = load double, double* %35, align 8
  %37 = getelementptr inbounds %"class.blink::DOMPoint", %"class.blink::DOMPoint"* %15, i64 0, i32 0, i32 2
  %38 = load double, double* %37, align 8
  %39 = fcmp uno double %32, %34
  %40 = fcmp olt double %34, %32
  %41 = select i1 %40, double %34, double %32
  %42 = select i1 %39, double 0x7FF8000000000000, double %41
  %43 = fcmp uno double %36, %38
  %44 = fcmp olt double %38, %36
  %45 = select i1 %44, double %38, double %36
  %46 = select i1 %43, double 0x7FF8000000000000, double %45
  %47 = fcmp uno double %42, %46
  %48 = fcmp olt double %46, %42
  %49 = select i1 %48, double %46, double %42
  %50 = select i1 %47, double 0x7FF8000000000000, double %49
  %51 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 6
  store double %50, double* %51, align 8
  %52 = load double, double* %4, align 8
  %53 = load double, double* %8, align 8
  %54 = load double, double* %12, align 8
  %55 = load double, double* %16, align 8
  %56 = fcmp uno double %52, %53
  %57 = fcmp olt double %52, %53
  %58 = select i1 %57, double %53, double %52
  %59 = select i1 %56, double 0x7FF8000000000000, double %58
  %60 = fcmp uno double %54, %55
  %61 = fcmp olt double %54, %55
  %62 = select i1 %61, double %55, double %54
  %63 = select i1 %60, double 0x7FF8000000000000, double %62
  %64 = fcmp uno double %59, %63
  %65 = fcmp olt double %59, %63
  %66 = select i1 %65, double %63, double %59
  %67 = select i1 %64, double 0x7FF8000000000000, double %66
  %68 = fsub double %67, %29
  %69 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 7
  store double %68, double* %69, align 8
  %70 = load double, double* %31, align 8
  %71 = load double, double* %33, align 8
  %72 = load double, double* %35, align 8
  %73 = load double, double* %37, align 8
  %74 = fcmp uno double %70, %71
  %75 = fcmp olt double %70, %71
  %76 = select i1 %75, double %71, double %70
  %77 = select i1 %74, double 0x7FF8000000000000, double %76
  %78 = fcmp uno double %72, %73
  %79 = fcmp olt double %72, %73
  %80 = select i1 %79, double %73, double %72
  %81 = select i1 %78, double 0x7FF8000000000000, double %80
  %82 = fcmp uno double %77, %81
  %83 = fcmp olt double %77, %81
  %84 = select i1 %83, double %81, double %77
  %85 = select i1 %82, double 0x7FF8000000000000, double %84
  %86 = fsub double %85, %50
  %87 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 8
  store double %86, double* %87, align 8
  %88 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 9
  store i8 0, i8* %88, align 8
  ret void
}

declare %"class.blink::DOMRect"* @_ZN5blink7DOMRect6CreateEdddd(double, double, double, double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7DOMQuadC2EPKNS_12DOMPointInitES3_S3_S3_(%"class.blink::DOMQuad"*, %"class.blink::DOMPointInit"* nocapture readonly, %"class.blink::DOMPointInit"* nocapture readonly, %"class.blink::DOMPointInit"* nocapture readonly, %"class.blink::DOMPointInit"* nocapture readonly) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink7DOMQuadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = ptrtoint %"class.blink::DOMQuad"* %0 to i64
  %9 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %1, i64 0, i32 6
  %10 = load double, double* %9, align 8
  %11 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %1, i64 0, i32 7
  %12 = load double, double* %11, align 8
  %13 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %1, i64 0, i32 8
  %14 = load double, double* %13, align 8
  %15 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %1, i64 0, i32 5
  %16 = load double, double* %15, align 8
  %17 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #7
  %18 = bitcast i8* %17 to %"class.blink::DOMPoint"*
  tail call void @_ZN5blink8DOMPointC2Edddd(%"class.blink::DOMPoint"* %18, double %10, double %12, double %14, double %16) #7
  %19 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink12_GLOBAL__N_112DOMQuadPointE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %17, i64 48
  %21 = bitcast i8* %20 to i64*
  store i64 %8, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %17, i64 -4
  %23 = bitcast i8* %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = or i16 %24, 1
  store atomic i16 %25, i16* %23 release, align 2
  %26 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 1, i32 0, i32 0
  %27 = bitcast %"class.blink::DOMPoint"** %26 to i8**
  store i8* %17, i8** %27, align 8
  %28 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %2, i64 0, i32 6
  %29 = load double, double* %28, align 8
  %30 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %2, i64 0, i32 7
  %31 = load double, double* %30, align 8
  %32 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %2, i64 0, i32 8
  %33 = load double, double* %32, align 8
  %34 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %2, i64 0, i32 5
  %35 = load double, double* %34, align 8
  %36 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #7
  %37 = bitcast i8* %36 to %"class.blink::DOMPoint"*
  tail call void @_ZN5blink8DOMPointC2Edddd(%"class.blink::DOMPoint"* %37, double %29, double %31, double %33, double %35) #7
  %38 = bitcast i8* %36 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink12_GLOBAL__N_112DOMQuadPointE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds i8, i8* %36, i64 48
  %40 = bitcast i8* %39 to i64*
  store i64 %8, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %36, i64 -4
  %42 = bitcast i8* %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = or i16 %43, 1
  store atomic i16 %44, i16* %42 release, align 2
  %45 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 2, i32 0, i32 0
  %46 = bitcast %"class.blink::DOMPoint"** %45 to i8**
  store i8* %36, i8** %46, align 8
  %47 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %3, i64 0, i32 6
  %48 = load double, double* %47, align 8
  %49 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %3, i64 0, i32 7
  %50 = load double, double* %49, align 8
  %51 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %3, i64 0, i32 8
  %52 = load double, double* %51, align 8
  %53 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %3, i64 0, i32 5
  %54 = load double, double* %53, align 8
  %55 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #7
  %56 = bitcast i8* %55 to %"class.blink::DOMPoint"*
  tail call void @_ZN5blink8DOMPointC2Edddd(%"class.blink::DOMPoint"* %56, double %48, double %50, double %52, double %54) #7
  %57 = bitcast i8* %55 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink12_GLOBAL__N_112DOMQuadPointE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds i8, i8* %55, i64 48
  %59 = bitcast i8* %58 to i64*
  store i64 %8, i64* %59, align 8
  %60 = getelementptr inbounds i8, i8* %55, i64 -4
  %61 = bitcast i8* %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = or i16 %62, 1
  store atomic i16 %63, i16* %61 release, align 2
  %64 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 3, i32 0, i32 0
  %65 = bitcast %"class.blink::DOMPoint"** %64 to i8**
  store i8* %55, i8** %65, align 8
  %66 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %4, i64 0, i32 6
  %67 = load double, double* %66, align 8
  %68 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %4, i64 0, i32 7
  %69 = load double, double* %68, align 8
  %70 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %4, i64 0, i32 8
  %71 = load double, double* %70, align 8
  %72 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %4, i64 0, i32 5
  %73 = load double, double* %72, align 8
  %74 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #7
  %75 = bitcast i8* %74 to %"class.blink::DOMPoint"*
  tail call void @_ZN5blink8DOMPointC2Edddd(%"class.blink::DOMPoint"* %75, double %67, double %69, double %71, double %73) #7
  %76 = bitcast i8* %74 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink12_GLOBAL__N_112DOMQuadPointE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds i8, i8* %74, i64 48
  %78 = bitcast i8* %77 to i64*
  store i64 %8, i64* %78, align 8
  %79 = getelementptr inbounds i8, i8* %74, i64 -4
  %80 = bitcast i8* %79 to i16*
  %81 = load atomic i16, i16* %80 monotonic, align 2
  %82 = or i16 %81, 1
  store atomic i16 %82, i16* %80 release, align 2
  %83 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 4, i32 0, i32 0
  %84 = bitcast %"class.blink::DOMPoint"** %83 to i8**
  store i8* %74, i8** %84, align 8
  %85 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 9
  store i8 1, i8* %85, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7DOMQuadC2Edddd(%"class.blink::DOMQuad"*, double, double, double, double) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink7DOMQuadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = ptrtoint %"class.blink::DOMQuad"* %0 to i64
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #7
  %10 = bitcast i8* %9 to %"class.blink::DOMPoint"*
  tail call void @_ZN5blink8DOMPointC2Edddd(%"class.blink::DOMPoint"* %10, double %1, double %2, double 0.000000e+00, double 1.000000e+00) #7
  %11 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink12_GLOBAL__N_112DOMQuadPointE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 48
  %13 = bitcast i8* %12 to i64*
  store i64 %8, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 -4
  %15 = bitcast i8* %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = or i16 %16, 1
  store atomic i16 %17, i16* %15 release, align 2
  %18 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 1, i32 0, i32 0
  %19 = bitcast %"class.blink::DOMPoint"** %18 to i8**
  store i8* %9, i8** %19, align 8
  %20 = fadd double %1, %3
  %21 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #7
  %22 = bitcast i8* %21 to %"class.blink::DOMPoint"*
  tail call void @_ZN5blink8DOMPointC2Edddd(%"class.blink::DOMPoint"* %22, double %20, double %2, double 0.000000e+00, double 1.000000e+00) #7
  %23 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink12_GLOBAL__N_112DOMQuadPointE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %21, i64 48
  %25 = bitcast i8* %24 to i64*
  store i64 %8, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %21, i64 -4
  %27 = bitcast i8* %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = or i16 %28, 1
  store atomic i16 %29, i16* %27 release, align 2
  %30 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = bitcast %"class.blink::DOMPoint"** %30 to i8**
  store i8* %21, i8** %31, align 8
  %32 = fadd double %2, %4
  %33 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #7
  %34 = bitcast i8* %33 to %"class.blink::DOMPoint"*
  tail call void @_ZN5blink8DOMPointC2Edddd(%"class.blink::DOMPoint"* %34, double %20, double %32, double 0.000000e+00, double 1.000000e+00) #7
  %35 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink12_GLOBAL__N_112DOMQuadPointE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds i8, i8* %33, i64 48
  %37 = bitcast i8* %36 to i64*
  store i64 %8, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %33, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  %42 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 3, i32 0, i32 0
  %43 = bitcast %"class.blink::DOMPoint"** %42 to i8**
  store i8* %33, i8** %43, align 8
  %44 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #7
  %45 = bitcast i8* %44 to %"class.blink::DOMPoint"*
  tail call void @_ZN5blink8DOMPointC2Edddd(%"class.blink::DOMPoint"* %45, double %1, double %32, double 0.000000e+00, double 1.000000e+00) #7
  %46 = bitcast i8* %44 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink12_GLOBAL__N_112DOMQuadPointE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds i8, i8* %44, i64 48
  %48 = bitcast i8* %47 to i64*
  store i64 %8, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %44, i64 -4
  %50 = bitcast i8* %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = or i16 %51, 1
  store atomic i16 %52, i16* %50 release, align 2
  %53 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 4, i32 0, i32 0
  %54 = bitcast %"class.blink::DOMPoint"** %53 to i8**
  store i8* %44, i8** %54, align 8
  %55 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 9
  store i8 1, i8* %55, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7DOMQuad16toJSONForBindingEPNS_11ScriptStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::DOMQuad"* nocapture readonly, %"class.blink::ScriptState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::V8ObjectBuilder", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.blink::DOMPoint"*, align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.blink::DOMPoint"*, align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.blink::DOMPoint"*, align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.blink::DOMPoint"*, align 8
  %13 = bitcast %"class.blink::V8ObjectBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  %14 = bitcast %"class.blink::V8ObjectBuilder"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  call void @_ZN5blink15V8ObjectBuilderC1EPNS_11ScriptStateE(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.blink::ScriptState"* %2) #7
  %15 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #7
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 2, i32* %19, align 8
  %20 = bitcast %"class.blink::DOMPoint"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %1, i64 0, i32 1, i32 0, i32 0
  %22 = bitcast %"class.blink::DOMPoint"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.blink::DOMPoint"** %6 to i64*
  store i64 %23, i64* %24, align 8
  %25 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder3AddIPNS_8DOMPointEEERS0_RKN3WTF10StringViewERKT_(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.blink::DOMPoint"** nonnull dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #7
  %26 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #7
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %28 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 2, i32* %30, align 8
  %31 = bitcast %"class.blink::DOMPoint"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %1, i64 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.blink::DOMPoint"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.blink::DOMPoint"** %8 to i64*
  store i64 %34, i64* %35, align 8
  %36 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder3AddIPNS_8DOMPointEEERS0_RKN3WTF10StringViewERKT_(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.blink::DOMPoint"** nonnull dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #7
  %37 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #7
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %39 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 2, i32* %41, align 8
  %42 = bitcast %"class.blink::DOMPoint"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #7
  %43 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %1, i64 0, i32 3, i32 0, i32 0
  %44 = bitcast %"class.blink::DOMPoint"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::DOMPoint"** %10 to i64*
  store i64 %45, i64* %46, align 8
  %47 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder3AddIPNS_8DOMPointEEERS0_RKN3WTF10StringViewERKT_(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.blink::DOMPoint"** nonnull dereferenceable(8) %10)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #7
  %48 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #7
  %49 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %50 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8** %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 2, i32* %52, align 8
  %53 = bitcast %"class.blink::DOMPoint"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #7
  %54 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %1, i64 0, i32 4, i32 0, i32 0
  %55 = bitcast %"class.blink::DOMPoint"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.blink::DOMPoint"** %12 to i64*
  store i64 %56, i64* %57, align 8
  %58 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder3AddIPNS_8DOMPointEEERS0_RKN3WTF10StringViewERKT_(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.blink::DOMPoint"** nonnull dereferenceable(8) %12)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #7
  call void @_ZNK5blink15V8ObjectBuilder14GetScriptValueEv(%"class.blink::ScriptValue"* sret %0, %"class.blink::V8ObjectBuilder"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7
  ret void
}

declare void @_ZN5blink15V8ObjectBuilderC1EPNS_11ScriptStateE(%"class.blink::V8ObjectBuilder"*, %"class.blink::ScriptState"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder3AddIPNS_8DOMPointEEERS0_RKN3WTF10StringViewERKT_(%"class.blink::V8ObjectBuilder"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::DOMPoint"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::DOMPoint"** %2 to %"class.blink::ScriptWrappable"**
  %5 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::V8ObjectBuilder", %"class.blink::V8ObjectBuilder"* %0, i64 0, i32 0
  %7 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.v8::Context"*, %"class.v8::Context"** %8, align 8
  %10 = icmp eq %"class.v8::Context"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.blink::ScriptState"* %7 to %"class.v8::internal::Isolate"**
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %14 = bitcast %"class.v8::Context"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %13, i64 %15) #7
  %17 = bitcast i64* %16 to %"class.v8::Context"*
  br label %18

18:                                               ; preds = %3, %11
  %19 = phi %"class.v8::Context"* [ %17, %11 ], [ null, %3 ]
  %20 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %19) #7
  %21 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %6, align 8
  %22 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %21, i64 0, i32 0
  %23 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %22, align 8
  %24 = icmp eq %"class.blink::ScriptWrappable"* %5, null
  br i1 %24, label %25, label %28, !prof !3

25:                                               ; preds = %18
  %26 = ptrtoint %"class.v8::Isolate"* %23 to i64
  %27 = add i64 %26, 176
  br label %44

28:                                               ; preds = %18
  %29 = tail call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %5, %"class.v8::Isolate"* %23) #7
  %30 = ptrtoint %"class.v8::Object"* %29 to i64
  %31 = icmp eq %"class.v8::Object"* %29, null
  br i1 %31, label %32, label %44

32:                                               ; preds = %28
  %33 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %20) #7
  %34 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %33) #7
  %35 = bitcast %"class.blink::ScriptWrappable"* %5 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %36 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %36, i64 7
  %38 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %37, align 8
  %39 = tail call %"class.v8::Value"* %38(%"class.blink::ScriptWrappable"* nonnull %5, %"class.blink::ScriptState"* %34) #7
  %40 = icmp eq %"class.v8::Value"* %39, null
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %42

42:                                               ; preds = %41, %32
  %43 = ptrtoint %"class.v8::Value"* %39 to i64
  br label %44

44:                                               ; preds = %25, %28, %42
  %45 = phi i64 [ %27, %25 ], [ %43, %42 ], [ %30, %28 ]
  %46 = inttoptr i64 %45 to %"class.v8::Value"*
  tail call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* %0, %"class.WTF::StringView"* dereferenceable(24) %1, %"class.v8::Value"* %46) #7
  ret %"class.blink::V8ObjectBuilder"* %0
}

declare void @_ZNK5blink15V8ObjectBuilder14GetScriptValueEv(%"class.blink::ScriptValue"* sret, %"class.blink::V8ObjectBuilder"*) local_unnamed_addr #3

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7DOMQuadD0Ev(%"class.blink::DOMQuad"*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink7DOMQuad5TraceEPNS_7VisitorE(%"class.blink::DOMQuad"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DOMPointEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DOMPointEE5TraceEPNS_7VisitorEPKv) #7
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 3
  %26 = bitcast %"class.blink::Member"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DOMPointEE5TraceEPNS_7VisitorEPKv) #7
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 4
  %37 = bitcast %"class.blink::Member"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DOMPointEE5TraceEPNS_7VisitorEPKv) #7
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %47, %"class.blink::Visitor"* %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink7DOMQuad18GetWrapperTypeInfoEv(%"class.blink::DOMQuad"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink7DOMQuad18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #3

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #3

declare void @_ZN5blink12DOMPointInitC1Ev(%"class.blink::DOMPointInit"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.194"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.194"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #7
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %21, i8* %22) #7
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #7
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #7
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.194"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.194"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.194"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #7
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink8DOMPointC2Edddd(%"class.blink::DOMPoint"*, double, double, double, double) unnamed_addr #3

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112DOMQuadPointD0Ev(%"class.blink::(anonymous namespace)::DOMQuadPoint"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_112DOMQuadPoint5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::DOMQuadPoint"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::DOMQuadPoint", %"class.blink::(anonymous namespace)::DOMQuadPoint"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::WeakMember"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::WeakMember"* %3 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %11, i64 6
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %9, i8* %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7DOMQuadEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_7DOMQuadEEEvRKNS_14LivenessBrokerEPKv) #7
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::DOMQuadPoint", %"class.blink::(anonymous namespace)::DOMQuadPoint"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %15, %"class.blink::Visitor"* %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink8DOMPoint18GetWrapperTypeInfoEv(%"class.blink::DOMPoint"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink8DOMPoint18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112DOMQuadPoint4setXEd(%"class.blink::(anonymous namespace)::DOMQuadPoint"* nocapture, double) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::DOMQuadPoint", %"class.blink::(anonymous namespace)::DOMQuadPoint"* %0, i64 0, i32 0, i32 0, i32 1
  store double %1, double* %3, align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::DOMQuadPoint", %"class.blink::(anonymous namespace)::DOMQuadPoint"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::DOMQuad"*, %"class.blink::DOMQuad"** %4, align 8
  %6 = icmp eq %"class.blink::DOMQuad"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %5, i64 0, i32 9
  store i8 1, i8* %8, align 8
  br label %9

9:                                                ; preds = %2, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112DOMQuadPoint4setYEd(%"class.blink::(anonymous namespace)::DOMQuadPoint"* nocapture, double) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::DOMQuadPoint", %"class.blink::(anonymous namespace)::DOMQuadPoint"* %0, i64 0, i32 0, i32 0, i32 2
  store double %1, double* %3, align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::DOMQuadPoint", %"class.blink::(anonymous namespace)::DOMQuadPoint"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::DOMQuad"*, %"class.blink::DOMQuad"** %4, align 8
  %6 = icmp eq %"class.blink::DOMQuad"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %5, i64 0, i32 9
  store i8 1, i8* %8, align 8
  br label %9

9:                                                ; preds = %2, %7
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_7DOMQuadEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DOMQuad"**
  %4 = load %"class.blink::DOMQuad"*, %"class.blink::DOMQuad"** %3, align 8
  %5 = ptrtoint %"class.blink::DOMQuad"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #7
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #7
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::DOMQuad", %"class.blink::DOMQuad"* %4, i64 -1, i32 9
  %20 = getelementptr inbounds i8, i8* %19, i64 6
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7DOMQuadEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DOMQuad"*
  %4 = bitcast i8* %1 to void (%"class.blink::DOMQuad"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::DOMQuad"*, %"class.blink::Visitor"*)**, void (%"class.blink::DOMQuad"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::DOMQuad"*, %"class.blink::Visitor"*)*, void (%"class.blink::DOMQuad"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::DOMQuad"*, %"class.blink::Visitor"*)*, void (%"class.blink::DOMQuad"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::DOMQuad"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"*, %"class.WTF::StringView"* dereferenceable(24), %"class.v8::Value"*) local_unnamed_addr #3

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #7
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #7
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #7
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #7
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %47, %"class.blink::ScriptWrappable"* %0) #7
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #7
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.7, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0)) #7
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.7, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0)) #7
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #3

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DOMPointEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
