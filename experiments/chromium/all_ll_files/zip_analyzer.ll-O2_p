; ModuleID = '../../chrome/common/safe_browsing/zip_analyzer.cc'
source_filename = "../../chrome/common/safe_browsing/zip_analyzer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"struct.safe_browsing::ArchiveAnalyzerResults" = type { i8, i8, i8, %"class.google::protobuf::RepeatedPtrField", %"class.std::__1::vector", i32, i32 }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic.0", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.0" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::FilePath"*, %"class.base::FilePath"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.base::FilePath"* }
%"class.zip::ZipReader" = type { i8*, i32, i8, %"class.std::__1::unique_ptr", %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.zip::ZipReader::EntryInfo"* }
%"class.zip::ZipReader::EntryInfo" = type <{ %"class.base::FilePath", i64, %"class.base::Time", i8, i8, i8, [5 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i8 }
%"class.zip::FileWriterDelegate" = type { %"class.zip::WriterDelegate", %"class.base::File"*, %"class.std::__1::unique_ptr.40", i64 }
%"class.zip::WriterDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.base::File"* }
%"class.safe_browsing::FileTypePolicies" = type { i32 (...)**, %"class.std::__1::unique_ptr.24", %"class.std::__1::map", %"class.safe_browsing::DownloadFileType", %"class.base::Lock" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.safe_browsing::DownloadFileTypeConfig"* }
%"class.safe_browsing::DownloadFileTypeConfig" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.27", %"class.safe_browsing::DownloadFileType"*, i32, float, i64 }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic.14" }
%"class.google::protobuf::RepeatedPtrField.27" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"class.safe_browsing::DownloadFileType" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.28", %"struct.google::protobuf::internal::ArenaStringPtr", i64, i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.google::protobuf::RepeatedPtrField.28" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [4 x i8] c"zip\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13safe_browsing12zip_analyzer14AnalyzeZipFileEN4base4FileES2_PNS_22ArchiveAnalyzerResultsE(%"class.base::File"*, %"class.base::File"*, %"struct.safe_browsing::ArchiveAnalyzerResults"*) local_unnamed_addr #0 {
  %4 = alloca %"class.zip::ZipReader", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.zip::FileWriterDelegate", align 8
  %7 = alloca %"class.base::FilePath", align 8
  %8 = tail call i64 @_ZN4base4Time3NowEv() #6
  %9 = bitcast %"class.zip::ZipReader"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 40, i1 false)
  call void @_ZN3zip9ZipReaderC1Ev(%"class.zip::ZipReader"* nonnull %4) #6
  %10 = call i32 @_ZNK4base4File15GetPlatformFileEv(%"class.base::File"* %0) #6
  %11 = call zeroext i1 @_ZN3zip9ZipReader20OpenFromPlatformFileEi(%"class.zip::ZipReader"* nonnull %4, i32 %10) #6
  br i1 %11, label %12, label %78

12:                                               ; preds = %3
  %13 = call i64 @_ZN4base4File9GetLengthEv(%"class.base::File"* %0) #6
  %14 = icmp sgt i64 %13, -1
  br i1 %14, label %16, label %15, !prof !2

15:                                               ; preds = %12
  call void @llvm.trap() #6
  unreachable

16:                                               ; preds = %12
  %17 = call %"class.safe_browsing::FileTypePolicies"* @_ZN13safe_browsing16FileTypePolicies11GetInstanceEv() #6
  %18 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #6
  %19 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 3, i8* %20, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #6
  %21 = getelementptr inbounds i8, i8* %18, i64 3
  store i8 0, i8* %21, align 1
  %22 = call i64 @_ZNK13safe_browsing16FileTypePolicies23GetMaxFileSizeToAnalyzeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.safe_browsing::FileTypePolicies"* %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #6
  %23 = icmp ugt i64 %13, %22
  %24 = load i8, i8* %20, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #7
  br label %29

29:                                               ; preds = %16, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #6
  br i1 %23, label %30, label %32

30:                                               ; preds = %29
  %31 = getelementptr inbounds %"struct.safe_browsing::ArchiveAnalyzerResults", %"struct.safe_browsing::ArchiveAnalyzerResults"* %2, i64 0, i32 0
  store i8 0, i8* %31, align 8
  br label %78

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.safe_browsing::ArchiveAnalyzerResults", %"struct.safe_browsing::ArchiveAnalyzerResults"* %2, i64 0, i32 5
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.safe_browsing::ArchiveAnalyzerResults", %"struct.safe_browsing::ArchiveAnalyzerResults"* %2, i64 0, i32 6
  store i32 0, i32* %34, align 4
  %35 = call zeroext i1 @_ZN3zip9ZipReader7HasMoreEv(%"class.zip::ZipReader"* nonnull %4) #6
  br i1 %35, label %36, label %75

36:                                               ; preds = %32
  %37 = bitcast %"class.zip::FileWriterDelegate"* %6 to i8*
  %38 = getelementptr inbounds %"class.zip::FileWriterDelegate", %"class.zip::FileWriterDelegate"* %6, i64 0, i32 3
  %39 = getelementptr inbounds %"class.zip::FileWriterDelegate", %"class.zip::FileWriterDelegate"* %6, i64 0, i32 0
  %40 = getelementptr inbounds %"class.zip::ZipReader", %"class.zip::ZipReader"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = bitcast %"class.zip::FileWriterDelegate"* %6 to i8*
  br label %43

42:                                               ; preds = %72
  br i1 %73, label %43, label %78

43:                                               ; preds = %36, %42
  %44 = call zeroext i1 @_ZN3zip9ZipReader21OpenCurrentEntryInZipEv(%"class.zip::ZipReader"* nonnull %4) #6
  br i1 %44, label %45, label %72

45:                                               ; preds = %43
  %46 = call i64 @_ZN4base4Time3NowEv() #6
  %47 = sub nsw i64 %46, %8
  %48 = icmp sgt i64 %47, 10000000
  br i1 %48, label %75, label %49

49:                                               ; preds = %45
  %50 = call i64 @_ZN4base4File4SeekENS0_6WhenceEl(%"class.base::File"* %1, i32 0, i64 0) #6
  %51 = call zeroext i1 @_ZN4base4File9SetLengthEl(%"class.base::File"* %1, i64 0) #6
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false)
  call void @_ZN3zip18FileWriterDelegateC1EPN4base4FileE(%"class.zip::FileWriterDelegate"* nonnull %6, %"class.base::File"* %1) #6
  %52 = call zeroext i1 @_ZNK3zip9ZipReader19ExtractCurrentEntryEPNS_14WriterDelegateEm(%"class.zip::ZipReader"* nonnull %4, %"class.zip::WriterDelegate"* nonnull %39, i64 -1) #6
  %53 = load %"class.zip::ZipReader::EntryInfo"*, %"class.zip::ZipReader::EntryInfo"** %40, align 8
  %54 = getelementptr inbounds %"class.zip::ZipReader::EntryInfo", %"class.zip::ZipReader::EntryInfo"* %53, i64 0, i32 0
  call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* nonnull %7, %"class.base::FilePath"* dereferenceable(24) %54) #6
  %55 = load i64, i64* %38, align 8
  %56 = trunc i64 %55 to i32
  %57 = load %"class.zip::ZipReader::EntryInfo"*, %"class.zip::ZipReader::EntryInfo"** %40, align 8
  %58 = getelementptr inbounds %"class.zip::ZipReader::EntryInfo", %"class.zip::ZipReader::EntryInfo"* %57, i64 0, i32 5
  %59 = load i8, i8* %58, align 2, !range !3
  %60 = icmp ne i8 %59, 0
  call void @_ZN13safe_browsing36UpdateArchiveAnalyzerResultsWithFileEN4base8FilePathEPNS0_4FileEibPNS_22ArchiveAnalyzerResultsE(%"class.base::FilePath"* nonnull %7, %"class.base::File"* %1, i32 %56, i1 zeroext %60, %"struct.safe_browsing::ArchiveAnalyzerResults"* %2) #6
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %7) #6
  %61 = load %"class.zip::ZipReader::EntryInfo"*, %"class.zip::ZipReader::EntryInfo"** %40, align 8
  %62 = getelementptr inbounds %"class.zip::ZipReader::EntryInfo", %"class.zip::ZipReader::EntryInfo"* %61, i64 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !3
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %49
  %66 = load i32, i32* %34, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %34, align 4
  br label %71

68:                                               ; preds = %49
  %69 = load i32, i32* %33, align 8
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %33, align 8
  br label %71

71:                                               ; preds = %68, %65
  call void @_ZN3zip18FileWriterDelegateD1Ev(%"class.zip::FileWriterDelegate"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #6
  br label %72

72:                                               ; preds = %43, %71
  %73 = call zeroext i1 @_ZN3zip9ZipReader18AdvanceToNextEntryEv(%"class.zip::ZipReader"* nonnull %4) #6
  %74 = call zeroext i1 @_ZN3zip9ZipReader7HasMoreEv(%"class.zip::ZipReader"* nonnull %4) #6
  br i1 %74, label %42, label %75

75:                                               ; preds = %72, %45, %32
  %76 = phi i8 [ 1, %32 ], [ 0, %45 ], [ 1, %72 ]
  %77 = getelementptr inbounds %"struct.safe_browsing::ArchiveAnalyzerResults", %"struct.safe_browsing::ArchiveAnalyzerResults"* %2, i64 0, i32 0
  store i8 %76, i8* %77, align 8
  br label %78

78:                                               ; preds = %42, %30, %75, %3
  call void @_ZN3zip9ZipReaderD1Ev(%"class.zip::ZipReader"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3zip9ZipReaderC1Ev(%"class.zip::ZipReader"*) unnamed_addr #2

declare zeroext i1 @_ZN3zip9ZipReader20OpenFromPlatformFileEi(%"class.zip::ZipReader"*, i32) local_unnamed_addr #2

declare i32 @_ZNK4base4File15GetPlatformFileEv(%"class.base::File"*) local_unnamed_addr #2

declare i64 @_ZN4base4File9GetLengthEv(%"class.base::File"*) local_unnamed_addr #2

declare %"class.safe_browsing::FileTypePolicies"* @_ZN13safe_browsing16FileTypePolicies11GetInstanceEv() local_unnamed_addr #2

declare i64 @_ZNK13safe_browsing16FileTypePolicies23GetMaxFileSizeToAnalyzeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.safe_browsing::FileTypePolicies"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3zip9ZipReader7HasMoreEv(%"class.zip::ZipReader"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3zip9ZipReader21OpenCurrentEntryInZipEv(%"class.zip::ZipReader"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64 @_ZN4base4File4SeekENS0_6WhenceEl(%"class.base::File"*, i32, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base4File9SetLengthEl(%"class.base::File"*, i64) local_unnamed_addr #2

declare void @_ZN3zip18FileWriterDelegateC1EPN4base4FileE(%"class.zip::FileWriterDelegate"*, %"class.base::File"*) unnamed_addr #2

declare zeroext i1 @_ZNK3zip9ZipReader19ExtractCurrentEntryEPNS_14WriterDelegateEm(%"class.zip::ZipReader"*, %"class.zip::WriterDelegate"*, i64) local_unnamed_addr #2

declare void @_ZN13safe_browsing36UpdateArchiveAnalyzerResultsWithFileEN4base8FilePathEPNS0_4FileEibPNS_22ArchiveAnalyzerResultsE(%"class.base::FilePath"*, %"class.base::File"*, i32, i1 zeroext, %"struct.safe_browsing::ArchiveAnalyzerResults"*) local_unnamed_addr #2

declare void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3zip18FileWriterDelegateD1Ev(%"class.zip::FileWriterDelegate"*) unnamed_addr #3

declare zeroext i1 @_ZN3zip9ZipReader18AdvanceToNextEntryEv(%"class.zip::ZipReader"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3zip9ZipReaderD1Ev(%"class.zip::ZipReader"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
