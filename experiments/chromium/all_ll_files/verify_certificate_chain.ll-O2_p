; ModuleID = '../../net/cert/internal/verify_certificate_chain.cc'
source_filename = "../../net/cert/internal/verify_certificate_chain.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.net::VerifyCertificateChainDelegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.80" }
%class.scoped_refptr = type { %"class.net::ParsedCertificate"* }
%"class.net::ParsedCertificate" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::unique_ptr", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::BitString", %"struct.net::ParsedTbsCertificate", %"class.std::__1::unique_ptr.2", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"struct.net::ParsedBasicConstraints", i8, [3 x i8], %"class.net::der::BitString", i8, %"class.std::__1::vector.15", %"struct.net::ParsedExtension", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.49", i8, [7 x i8], %"struct.net::ParsedExtension", %"class.std::__1::vector.25", %"class.std::__1::vector.25", i8, %"class.std::__1::vector.15", i8, %"struct.net::ParsedPolicyConstraints", i8, %"class.std::__1::vector.55", i8, i8, %"class.absl::optional", %"class.absl::optional.63", %"class.std::__1::map" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.net::der::Input" = type { i8*, i64 }
%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::SignatureAlgorithm"* }
%"class.net::SignatureAlgorithm" = type { i32, i32, %"class.std::__1::unique_ptr.5" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.net::SignatureAlgorithmParameters"* }
%"class.net::SignatureAlgorithmParameters" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.net::ParsedBasicConstraints" = type { i8, i8, i8 }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.net::GeneralNames"* }
%"struct.net::GeneralNames" = type <{ %"class.std::__1::vector.15", %"class.std::__1::vector.25", %"class.std::__1::vector.25", %"class.std::__1::vector.15", %"class.std::__1::vector.15", %"class.std::__1::vector.15", %"class.std::__1::vector.25", %"class.std::__1::vector.32", %"class.std::__1::vector.39", %"class.std::__1::vector.15", i32, [4 x i8] }>
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.net::IPAddress"*, %"class.net::IPAddress"*, %"class.std::__1::__compressed_pair.34" }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.net::IPAddress"* }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.41" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.net::NameConstraints"* }
%"class.net::NameConstraints" = type { %"struct.net::GeneralNames", %"struct.net::GeneralNames", i32, [4 x i8] }
%"struct.net::ParsedExtension" = type <{ %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.27" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.net::der::Input"* }
%"struct.net::ParsedPolicyConstraints" = type { i8, i8, i8, i8 }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"*, %"class.std::__1::__compressed_pair.57" }
%"struct.net::ParsedPolicyMapping" = type { %"class.net::der::Input", %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.net::ParsedPolicyMapping"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.62 }
%union.anon.62 = type { %"struct.net::ParsedAuthorityKeyIdentifier" }
%"struct.net::ParsedAuthorityKeyIdentifier" = type { %"class.absl::optional.63", %"class.absl::optional.63", %"class.absl::optional.63" }
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { %"class.net::der::Input" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.72", %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { i64 }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %class.scoped_refptr* }
%"struct.net::CertificateTrust" = type { i32 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.85" }
%"class.std::__1::__tree.85" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.86", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.net::CertPathErrors" = type { %"class.std::__1::vector.92", %"class.net::CertErrors" }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.net::CertErrors"*, %"class.net::CertErrors"*, %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.net::CertErrors"* }
%"class.net::CertErrors" = type { %"class.std::__1::vector.94" }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %"struct.net::CertError"*, %"struct.net::CertError"*, %"class.std::__1::__compressed_pair.102" }
%"struct.net::CertError" = type { i32, i8*, %"class.std::__1::unique_ptr.96" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.net::CertErrorParams"* }
%"class.net::CertErrorParams" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.net::CertError"* }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %struct.evp_pkey_st* }
%struct.evp_pkey_st = type { i32, i32, %union.anon.129, %struct.evp_pkey_asn1_method_st* }
%union.anon.129 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.net::der::Input"* }
%"class.std::__1::tuple.164" = type { i8 }
%"struct.net::(anonymous namespace)::ValidPolicyTree::Node" = type { %"class.net::der::Input", %"class.net::der::Input", %"class.std::__1::set" }
%"class.std::__1::map.151" = type { %"class.std::__1::__tree.152" }
%"class.std::__1::__tree.152" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.153", %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.net::(anonymous namespace)::PathVerifier" = type { %"class.net::(anonymous namespace)::ValidPolicyTree", %"class.std::__1::vector.119", i64, i64, i64, %"class.std::__1::unique_ptr.126", %"class.net::der::Input", i64, %"class.net::VerifyCertificateChainDelegate"* }
%"class.net::(anonymous namespace)::ValidPolicyTree" = type { %"class.std::__1::vector.112" }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"class.net::NameConstraints"**, %"class.net::NameConstraints"**, %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.net::NameConstraints"** }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.net::der::Input" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__tree_node.166" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.165" }
%"struct.std::__1::__value_type.165" = type { %"struct.std::__1::pair.161" }
%"struct.std::__1::pair.161" = type { %"class.net::der::Input", %"class.std::__1::set" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE15__assign_uniqueIPKS3_EEvT_SC_ = comdat any

$_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE20__node_assign_uniqueERKS3_PNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE14__assign_multiINS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEEEvT_SG_ = comdat any

$_ZNSt3__13setIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE6insertIPKS3_EEvT_SC_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS_3setIS4_NS_4lessIS4_EENS_9allocatorIS4_EEEEEENS_19__map_value_compareIS4_SB_S7_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_4pairINS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS_3setIS4_NS_4lessIS4_EENS_9allocatorIS4_EEEEEENS_19__map_value_compareIS4_SB_S7_Lb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE = comdat any

@_ZTVN3net30VerifyCertificateChainDelegateE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.net::VerifyCertificateChainDelegate"*)* @_ZN3net30VerifyCertificateChainDelegateD2Ev to i8*), i8* bitcast (void (%"class.net::VerifyCertificateChainDelegate"*)* @_ZN3net30VerifyCertificateChainDelegateD0Ev to i8*)] }, align 8
@_ZN3net11cert_errors13kChainIsEmptyE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors15kChainIsLength1E = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors21kCertIsNotTrustAnchorE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors23kDistrustedByTrustStoreE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors36kEkuLacksServerAuthButHasGatedCryptoE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors19kEkuLacksServerAuthE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors19kEkuLacksClientAuthE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors28kUnconsumedCriticalExtensionE = external local_unnamed_addr constant i8*, align 8
@.str.1 = private unnamed_addr constant [4 x i8] c"oid\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@_ZN3net11cert_errors18kFailedParsingSpkiE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors22kUnacceptablePublicKeyE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors31kUnacceptableSignatureAlgorithmE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors23kVerifySignedDataFailedE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors26kSubjectDoesNotMatchIssuerE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors37kSignatureAlgorithmsDifferentEncodingE = external local_unnamed_addr constant i8*, align 8
@.str.3 = private unnamed_addr constant [22 x i8] c"Certificate.algorithm\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"TBSCertificate.signature\00", align 1
@_ZN3net11cert_errors27kSignatureAlgorithmMismatchE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors24kValidityFailedNotBeforeE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors23kValidityFailedNotAfterE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors14kNoValidPolicyE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors24kMissingBasicConstraintsE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors31kBasicConstraintsIndicatesNotCaE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors22kMaxPathLengthViolatedE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors21kKeyCertSignBitNotSetE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors23kPolicyMappingAnyPolicyE = external local_unnamed_addr constant i8*, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZN3net11cert_errors29kTargetCertInconsistentCaBitsE = external local_unnamed_addr constant i8*, align 8

@_ZN3net30VerifyCertificateChainDelegateD1Ev = hidden unnamed_addr alias void (%"class.net::VerifyCertificateChainDelegate"*), void (%"class.net::VerifyCertificateChainDelegate"*)* @_ZN3net30VerifyCertificateChainDelegateD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net30VerifyCertificateChainDelegateD2Ev(%"class.net::VerifyCertificateChainDelegate"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net30VerifyCertificateChainDelegateD0Ev(%"class.net::VerifyCertificateChainDelegate"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net22VerifyCertificateChainERKNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS0_9allocatorIS4_EEEERKNS_16CertificateTrustEPNS_30VerifyCertificateChainDelegateERKNS_3der15GeneralizedTimeENS_10KeyPurposeENS_21InitialExplicitPolicyERKNS0_3setINSF_5InputENS0_4lessISM_EENS5_ISM_EEEENS_27InitialPolicyMappingInhibitENS_23InitialAnyPolicyInhibitEPSQ_PNS_14CertPathErrorsE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"struct.net::CertificateTrust"* nocapture readonly dereferenceable(4), %"class.net::VerifyCertificateChainDelegate"*, %"struct.net::der::GeneralizedTime"* dereferenceable(8), i32, i32, %"class.std::__1::set"* readonly dereferenceable(24), i32, i32, %"class.std::__1::set"*, %"class.net::CertPathErrors"*) local_unnamed_addr #3 {
  %12 = alloca %"class.std::__1::unique_ptr.126", align 8
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %"class.net::der::Input"*
  %15 = alloca <2 x i64>, align 16
  %16 = bitcast <2 x i64>* %15 to %"class.net::der::Input"*
  %17 = alloca <2 x i64>, align 16
  %18 = bitcast <2 x i64>* %17 to %"class.net::der::Input"*
  %19 = alloca <2 x i64>, align 16
  %20 = bitcast <2 x i64>* %19 to %"class.net::der::Input"*
  %21 = alloca <2 x i64>, align 16
  %22 = bitcast <2 x i64>* %21 to %"class.net::der::Input"*
  %23 = alloca <2 x i64>, align 16
  %24 = bitcast <2 x i64>* %23 to %"class.net::der::Input"*
  %25 = alloca <2 x i64>, align 16
  %26 = bitcast <2 x i64>* %25 to %"class.net::der::Input"*
  %27 = alloca <2 x i64>, align 16
  %28 = bitcast <2 x i64>* %27 to %"class.net::der::Input"*
  %29 = alloca %"class.std::__1::unique_ptr.126", align 8
  %30 = alloca <2 x i64>, align 16
  %31 = bitcast <2 x i64>* %30 to %"class.net::der::Input"*
  %32 = alloca %"class.std::__1::tuple", align 8
  %33 = alloca %"class.std::__1::tuple.164", align 1
  %34 = alloca %"class.net::der::Input", align 8
  %35 = alloca %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", align 8
  %36 = alloca %"class.net::der::Input", align 8
  %37 = alloca %"class.net::der::Input", align 8
  %38 = alloca %"class.std::__1::map.151", align 8
  %39 = alloca <2 x i64>, align 16
  %40 = bitcast <2 x i64>* %39 to %"class.net::der::Input"*
  %41 = alloca <2 x i64>, align 16
  %42 = bitcast <2 x i64>* %41 to %"class.net::der::Input"*
  %43 = alloca <2 x i64>, align 16
  %44 = bitcast <2 x i64>* %43 to %"class.net::der::Input"*
  %45 = alloca <2 x i64>, align 16
  %46 = bitcast <2 x i64>* %45 to %"class.net::der::Input"*
  %47 = alloca %"class.std::__1::set", align 8
  %48 = alloca %"class.std::__1::set", align 8
  %49 = alloca %"class.std::__1::set", align 8
  %50 = alloca %"class.net::der::Input", align 8
  %51 = alloca %"class.net::der::Input", align 8
  %52 = alloca %"class.std::__1::set", align 8
  %53 = alloca <2 x i64>, align 16
  %54 = bitcast <2 x i64>* %53 to %"class.net::der::Input"*
  %55 = alloca <2 x i64>, align 16
  %56 = bitcast <2 x i64>* %55 to %"class.net::der::Input"*
  %57 = alloca <2 x i64>, align 16
  %58 = bitcast <2 x i64>* %57 to %"class.net::der::Input"*
  %59 = alloca <2 x i64>, align 16
  %60 = bitcast <2 x i64>* %59 to %"class.net::der::Input"*
  %61 = alloca <2 x i64>, align 16
  %62 = bitcast <2 x i64>* %61 to %"class.net::der::Input"*
  %63 = alloca <2 x i64>, align 16
  %64 = bitcast <2 x i64>* %63 to %"class.net::der::Input"*
  %65 = alloca <2 x i64>, align 16
  %66 = bitcast <2 x i64>* %65 to %"class.net::der::Input"*
  %67 = alloca <2 x i64>, align 16
  %68 = bitcast <2 x i64>* %67 to %"class.net::der::Input"*
  %69 = alloca <2 x i64>, align 16
  %70 = bitcast <2 x i64>* %69 to %"class.net::der::Input"*
  %71 = alloca %"class.std::__1::unique_ptr.126", align 8
  %72 = alloca %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", align 8
  %73 = alloca %"class.net::der::Input", align 8
  %74 = alloca [1 x %"class.net::der::Input"], align 8
  %75 = alloca %"class.net::(anonymous namespace)::PathVerifier", align 8
  %76 = bitcast %"class.net::(anonymous namespace)::PathVerifier"* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %76) #13
  %77 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 2
  %78 = bitcast i64* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 64, i1 false)
  %79 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 5
  %80 = bitcast %"class.std::__1::unique_ptr.126"* %79 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 48, i1 false) #13
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %81) #13
  %82 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 8
  store %"class.net::VerifyCertificateChainDelegate"* %2, %"class.net::VerifyCertificateChainDelegate"** %82, align 8
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %84 = load %class.scoped_refptr*, %class.scoped_refptr** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %86 = load %class.scoped_refptr*, %class.scoped_refptr** %85, align 8
  %87 = icmp eq %class.scoped_refptr* %84, %86
  br i1 %87, label %88, label %91

88:                                               ; preds = %11
  %89 = call %"class.net::CertErrors"* @_ZN3net14CertPathErrors14GetOtherErrorsEv(%"class.net::CertPathErrors"* %10) #13
  %90 = load i8*, i8** @_ZN3net11cert_errors13kChainIsEmptyE, align 8
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %89, i8* %90) #13
  br label %1285

91:                                               ; preds = %11
  %92 = ptrtoint %class.scoped_refptr* %84 to i64
  %93 = ptrtoint %class.scoped_refptr* %86 to i64
  %94 = bitcast %class.scoped_refptr** %85 to i64*
  %95 = bitcast %"class.std::__1::vector"* %0 to i64*
  %96 = sub i64 %93, %92
  %97 = ashr exact i64 %96, 3
  %98 = icmp eq i64 %96, 8
  br i1 %98, label %99, label %102

99:                                               ; preds = %91
  %100 = call %"class.net::CertErrors"* @_ZN3net14CertPathErrors14GetOtherErrorsEv(%"class.net::CertPathErrors"* %10) #13
  %101 = load i8*, i8** @_ZN3net11cert_errors15kChainIsLength1E, align 8
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %100, i8* %101) #13
  br label %1285

102:                                              ; preds = %91
  %103 = add nsw i64 %97, -1
  %104 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 0
  %105 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %105, align 8
  %107 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 0, i32 0, i32 0, i32 1
  %108 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107, align 8
  %109 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %108, %106
  br i1 %109, label %118, label %110

110:                                              ; preds = %102, %110
  %111 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %112, %110 ], [ %108, %102 ]
  %112 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %111, i64 -1
  %113 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %111, i64 -1, i32 2, i32 0
  %114 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %111, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  %115 = bitcast %"class.std::__1::__tree_end_node"* %114 to %"class.std::__1::__tree_node"**
  %116 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %115, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %113, %"class.std::__1::__tree_node"* %116) #13
  %117 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %112, %106
  br i1 %117, label %118, label %110

118:                                              ; preds = %110, %102
  store %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %106, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107, align 8
  %119 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 0
  %120 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %119, align 8
  %121 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %122 = icmp eq %"class.std::__1::__tree_end_node"* %120, %121
  br i1 %122, label %173, label %123

123:                                              ; preds = %118
  %124 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %72 to i8*
  %125 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %72, i64 0, i32 0
  %126 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %72, i64 0, i32 1
  %127 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %72, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %72, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %72, i64 0, i32 2, i32 0, i32 0
  %130 = bitcast %"class.std::__1::__tree_node_base"** %127 to i8*
  %131 = bitcast %"class.net::der::Input"* %126 to i8*
  %132 = bitcast [1 x %"class.net::der::Input"]* %74 to i8*
  %133 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %74, i64 0, i64 0
  %134 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %72, i64 0, i32 2, i32 0
  %135 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %74, i64 0, i64 1
  %136 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 0, i32 0
  %137 = bitcast %"class.std::__1::__tree_end_node"* %128 to %"class.std::__1::__tree_node"**
  br label %138

138:                                              ; preds = %170, %123
  %139 = phi %"class.std::__1::__tree_end_node"* [ %120, %123 ], [ %171, %170 ]
  %140 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %139, i64 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %124) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 56, i1 false) #13
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %125) #13
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %126) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %128, %"class.std::__1::__tree_end_node"** %129, align 8
  %141 = bitcast %"class.std::__1::__tree_end_node"* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %124, i8* align 8 %141, i64 16, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %141, i64 16, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %132) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %132, i8* align 8 %141, i64 16, i1 false) #13
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE15__assign_uniqueIPKS3_EEvT_SC_(%"class.std::__1::__tree.85"* %134, %"class.net::der::Input"* nonnull %133, %"class.net::der::Input"* %135) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #13
  call fastcc void @_ZNSt3__16vectorIN3net12_GLOBAL__N_115ValidPolicyTree4NodeENS_9allocatorIS4_EEE9push_backEOS4_(%"class.std::__1::vector.112"* nonnull %136, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* nonnull dereferenceable(56) %72) #13
  %142 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %137, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %134, %"class.std::__1::__tree_node"* %142) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %124) #13
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %139, i64 1, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, null
  br i1 %145, label %146, label %154

146:                                              ; preds = %138
  %147 = bitcast %"class.std::__1::__tree_end_node"* %139 to %"class.std::__1::__tree_node_base"*
  %148 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %139, i64 2
  %149 = bitcast %"class.std::__1::__tree_end_node"* %148 to %"class.std::__1::__tree_end_node"**
  %150 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %149, align 8
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %150, i64 0, i32 0
  %152 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node_base"* %152, %147
  br i1 %153, label %170, label %161

154:                                              ; preds = %138, %154
  %155 = phi %"class.std::__1::__tree_node_base"* [ %157, %154 ], [ %144, %138 ]
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %155, i64 0, i32 0, i32 0
  %157 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %156, align 8
  %158 = icmp eq %"class.std::__1::__tree_node_base"* %157, null
  br i1 %158, label %159, label %154

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %155, i64 0, i32 0
  br label %170

161:                                              ; preds = %146, %161
  %162 = phi %"class.std::__1::__tree_end_node"** [ %165, %161 ], [ %149, %146 ]
  %163 = bitcast %"class.std::__1::__tree_end_node"** %162 to %"class.std::__1::__tree_node_base"**
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %164, i64 0, i32 2
  %166 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %166, i64 0, i32 0
  %168 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %167, align 8
  %169 = icmp eq %"class.std::__1::__tree_node_base"* %168, %164
  br i1 %169, label %170, label %161

170:                                              ; preds = %161, %159, %146
  %171 = phi %"class.std::__1::__tree_end_node"* [ %160, %159 ], [ %150, %146 ], [ %166, %161 ]
  %172 = icmp eq %"class.std::__1::__tree_end_node"* %171, %121
  br i1 %172, label %173, label %138

173:                                              ; preds = %170, %118
  %174 = icmp eq i32 %5, 1
  %175 = select i1 %174, i64 0, i64 %97
  %176 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 2
  store i64 %175, i64* %176, align 8
  %177 = icmp eq i32 %8, 1
  %178 = select i1 %177, i64 0, i64 %97
  %179 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 3
  store i64 %178, i64* %179, align 8
  %180 = icmp eq i32 %7, 1
  %181 = select i1 %180, i64 0, i64 %97
  %182 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 4
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 7
  store i64 %103, i64* %183, align 8
  %184 = load i64, i64* %94, align 8
  %185 = load i64, i64* %95, align 8
  %186 = sub i64 %184, %185
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %1225, label %188

188:                                              ; preds = %173
  %189 = ashr exact i64 %186, 3
  %190 = load i8*, i8** @_ZN3net11cert_errors27kSignatureAlgorithmMismatchE, align 8
  %191 = load i8*, i8** @_ZN3net11cert_errors37kSignatureAlgorithmsDifferentEncodingE, align 8
  %192 = load i8*, i8** @_ZN3net11cert_errors31kUnacceptableSignatureAlgorithmE, align 8
  %193 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 5, i32 0, i32 0, i32 0
  %194 = load i8*, i8** @_ZN3net11cert_errors24kValidityFailedNotBeforeE, align 8
  %195 = load i8*, i8** @_ZN3net11cert_errors23kValidityFailedNotAfterE, align 8
  %196 = bitcast <2 x i64>* %65 to i8*
  %197 = bitcast <2 x i64>* %63 to i8*
  %198 = load i8*, i8** @_ZN3net11cert_errors26kSubjectDoesNotMatchIssuerE, align 8
  %199 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 1, i32 0, i32 0
  %200 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 1, i32 0, i32 1
  %201 = bitcast <2 x i64>* %59 to i8*
  %202 = bitcast <2 x i64>* %57 to i8*
  %203 = bitcast <2 x i64>* %61 to i8*
  %204 = bitcast <2 x i64>* %55 to i8*
  %205 = bitcast <2 x i64>* %67 to i8*
  %206 = bitcast <2 x i64>* %53 to i8*
  %207 = bitcast %"class.net::der::Input"* %50 to i8*
  %208 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %50, i64 0, i32 0
  %209 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %50, i64 0, i32 1
  %210 = bitcast %"class.net::der::Input"* %51 to i8*
  %211 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %51, i64 0, i32 0
  %212 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %51, i64 0, i32 1
  %213 = bitcast %"class.std::__1::set"* %48 to i8*
  %214 = bitcast [1 x %"class.net::der::Input"]* %74 to i8*
  %215 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %74, i64 0, i64 0
  %216 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %48, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %217 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %48, i64 0, i32 0, i32 1, i32 0, i32 0
  %218 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %48, i64 0, i32 0, i32 0
  %219 = bitcast %"class.std::__1::__tree_node_base"** %216 to i8*
  %220 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %74, i64 0, i64 1
  %221 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %48, i64 0, i32 0
  %222 = bitcast %"class.std::__1::__tree_end_node"* %217 to %"class.std::__1::__tree_node"**
  %223 = bitcast %"class.std::__1::set"* %47 to i8*
  %224 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %47, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %225 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %47, i64 0, i32 0, i32 1, i32 0, i32 0
  %226 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %47, i64 0, i32 0, i32 0
  %227 = bitcast %"class.std::__1::__tree_node_base"** %224 to i8*
  %228 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %47, i64 0, i32 0
  %229 = bitcast %"class.std::__1::__tree_end_node"* %225 to %"class.std::__1::__tree_node"**
  %230 = bitcast <2 x i64>* %43 to i8*
  %231 = bitcast <2 x i64>* %41 to i8*
  %232 = bitcast <2 x i64>* %45 to i8*
  %233 = bitcast <2 x i64>* %39 to i8*
  %234 = bitcast %"class.std::__1::set"* %52 to i8*
  %235 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %52, i64 0, i32 0, i32 0
  %236 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %52, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %237 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %52, i64 0, i32 0, i32 1, i32 0, i32 0
  %238 = bitcast %"class.std::__1::__tree_node_base"** %236 to i8*
  %239 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %52, i64 0, i32 0
  %240 = bitcast %"class.std::__1::__tree_end_node"* %237 to %"class.std::__1::__tree_node"**
  %241 = bitcast %"class.std::__1::set"* %49 to i8*
  %242 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %49, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %243 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %49, i64 0, i32 0, i32 1, i32 0, i32 0
  %244 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %49, i64 0, i32 0, i32 0
  %245 = bitcast %"class.std::__1::__tree_node_base"** %242 to i8*
  %246 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %49, i64 0, i32 0
  %247 = bitcast %"class.std::__1::__tree_end_node"* %243 to %"class.std::__1::__tree_node"**
  %248 = load i8*, i8** @_ZN3net11cert_errors14kNoValidPolicyE, align 8
  %249 = bitcast %"class.net::der::Input"* %36 to i8*
  %250 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %36, i64 0, i32 0
  %251 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %36, i64 0, i32 1
  %252 = bitcast %"class.net::der::Input"* %37 to i8*
  %253 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %37, i64 0, i32 0
  %254 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %37, i64 0, i32 1
  %255 = load i8*, i8** @_ZN3net11cert_errors23kPolicyMappingAnyPolicyE, align 8
  %256 = bitcast %"class.net::der::Input"* %34 to i8*
  %257 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %34, i64 0, i32 0
  %258 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %34, i64 0, i32 1
  %259 = bitcast %"class.std::__1::map.151"* %38 to i8*
  %260 = getelementptr inbounds %"class.std::__1::map.151", %"class.std::__1::map.151"* %38, i64 0, i32 0, i32 0
  %261 = getelementptr inbounds %"class.std::__1::map.151", %"class.std::__1::map.151"* %38, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %262 = getelementptr inbounds %"class.std::__1::map.151", %"class.std::__1::map.151"* %38, i64 0, i32 0, i32 1, i32 0, i32 0
  %263 = bitcast %"class.std::__1::__tree_node_base"** %261 to i8*
  %264 = getelementptr inbounds %"class.std::__1::map.151", %"class.std::__1::map.151"* %38, i64 0, i32 0
  %265 = bitcast %"class.std::__1::tuple"* %32 to i8*
  %266 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %32, i64 0, i32 0, i32 0, i32 0
  %267 = getelementptr inbounds %"class.std::__1::tuple.164", %"class.std::__1::tuple.164"* %33, i64 0, i32 0
  %268 = bitcast %"class.std::__1::__tree_end_node"* %262 to %"class.std::__1::__tree_node.166"**
  %269 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107 to i64*
  %270 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %35 to i8*
  %271 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %35, i64 0, i32 2
  %272 = bitcast %"class.std::__1::set"* %271 to i64*
  %273 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %35, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %274 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %35, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %275 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %271, i64 0, i32 0, i32 0
  %276 = bitcast %"class.std::__1::__tree_end_node"* %274 to i64*
  %277 = bitcast %"class.std::__1::__tree_end_node"* %274 to i8*
  %278 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %35, i64 0, i32 2, i32 0
  %279 = bitcast <2 x i64>* %30 to i8*
  %280 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 6, i32 0
  %281 = bitcast %"class.std::__1::unique_ptr.126"* %29 to i8*
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.126"* %29, i64 0, i32 0, i32 0, i32 0
  %283 = bitcast %"class.std::__1::unique_ptr.126"* %29 to i64*
  %284 = load i8*, i8** @_ZN3net11cert_errors18kFailedParsingSpkiE, align 8
  %285 = load i8*, i8** @_ZN3net11cert_errors22kUnacceptablePublicKeyE, align 8
  %286 = getelementptr inbounds %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.126"* %79, i64 0, i32 0, i32 0, i32 0
  %287 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 1
  %288 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %289 = bitcast %"class.net::NameConstraints"*** %200 to i64*
  %290 = bitcast %"class.std::__1::vector.119"* %287 to i64*
  %291 = bitcast %"class.net::NameConstraints"*** %288 to i64*
  %292 = bitcast <2 x i64>* %25 to i8*
  %293 = bitcast <2 x i64>* %23 to i8*
  %294 = bitcast <2 x i64>* %27 to i8*
  %295 = bitcast <2 x i64>* %21 to i8*
  %296 = load i8*, i8** @_ZN3net11cert_errors31kBasicConstraintsIndicatesNotCaE, align 8
  %297 = load i8*, i8** @_ZN3net11cert_errors24kMissingBasicConstraintsE, align 8
  %298 = bitcast <2 x i64>* %17 to i8*
  %299 = bitcast <2 x i64>* %15 to i8*
  %300 = bitcast <2 x i64>* %19 to i8*
  %301 = bitcast <2 x i64>* %13 to i8*
  %302 = load i8*, i8** @_ZN3net11cert_errors22kMaxPathLengthViolatedE, align 8
  %303 = load i8*, i8** @_ZN3net11cert_errors21kKeyCertSignBitNotSetE, align 8
  %304 = load i8*, i8** @_ZN3net11cert_errors29kTargetCertInconsistentCaBitsE, align 8
  %305 = bitcast %"class.std::__1::unique_ptr.126"* %12 to i8*
  %306 = getelementptr inbounds %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.126"* %12, i64 0, i32 0, i32 0, i32 0
  %307 = bitcast %"class.std::__1::unique_ptr.126"* %12 to i64*
  %308 = getelementptr inbounds %"struct.net::CertificateTrust", %"struct.net::CertificateTrust"* %1, i64 0, i32 0
  %309 = bitcast %"class.std::__1::unique_ptr.126"* %71 to i8*
  %310 = getelementptr inbounds %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.126"* %71, i64 0, i32 0, i32 0, i32 0
  %311 = bitcast %"class.std::__1::unique_ptr.126"* %71 to i64*
  %312 = bitcast <2 x i64>* %69 to i8*
  %313 = load %class.scoped_refptr*, %class.scoped_refptr** %83, align 8
  %314 = bitcast %"class.std::__1::set"* %271 to <2 x i64>*
  %315 = bitcast i8** %280 to <2 x i64>*
  %316 = bitcast i8** %280 to <2 x i64>*
  br label %317

317:                                              ; preds = %1217, %188
  %318 = phi %class.scoped_refptr* [ %313, %188 ], [ %1224, %1217 ]
  %319 = phi i64 [ %189, %188 ], [ %1222, %1217 ]
  %320 = phi i64 [ 0, %188 ], [ %1218, %1217 ]
  %321 = xor i64 %320, -1
  %322 = add i64 %319, %321
  %323 = icmp eq i64 %322, 0
  %324 = icmp eq i64 %320, 0
  %325 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %318, i64 %322, i32 0
  %326 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %325, align 8
  %327 = call %"class.net::CertErrors"* @_ZN3net14CertPathErrors16GetErrorsForCertEm(%"class.net::CertPathErrors"* %10, i64 %322) #13
  br i1 %324, label %328, label %431

328:                                              ; preds = %317
  %329 = load i32, i32* %308, align 4
  switch i32 %329, label %405 [
    i32 1, label %330
    i32 0, label %332
    i32 3, label %334
  ]

330:                                              ; preds = %328
  %331 = load i8*, i8** @_ZN3net11cert_errors21kCertIsNotTrustAnchorE, align 8
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %331) #13
  br label %1285

332:                                              ; preds = %328
  %333 = load i8*, i8** @_ZN3net11cert_errors23kDistrustedByTrustStoreE, align 8
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %333) #13
  br label %1285

334:                                              ; preds = %328
  call fastcc void @_ZN3net12_GLOBAL__N_122VerifyExtendedKeyUsageERKNS_17ParsedCertificateENS_10KeyPurposeEPNS_10CertErrorsE(%"class.net::ParsedCertificate"* dereferenceable(752) %326, i32 %4, %"class.net::CertErrors"* %327) #13
  %335 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 19, i32 0, i32 0, i32 0
  %336 = load %"class.net::NameConstraints"*, %"class.net::NameConstraints"** %335, align 8
  %337 = icmp eq %"class.net::NameConstraints"* %336, null
  br i1 %337, label %392, label %338

338:                                              ; preds = %334
  %339 = ptrtoint %"class.net::NameConstraints"* %336 to i64
  %340 = load %"class.net::NameConstraints"**, %"class.net::NameConstraints"*** %200, align 8
  %341 = load %"class.net::NameConstraints"**, %"class.net::NameConstraints"*** %288, align 8
  %342 = icmp ult %"class.net::NameConstraints"** %340, %341
  %343 = ptrtoint %"class.net::NameConstraints"** %341 to i64
  br i1 %342, label %344, label %348

344:                                              ; preds = %338
  %345 = bitcast %"class.net::NameConstraints"** %340 to i64*
  store i64 %339, i64* %345, align 8
  %346 = getelementptr inbounds %"class.net::NameConstraints"*, %"class.net::NameConstraints"** %340, i64 1
  %347 = ptrtoint %"class.net::NameConstraints"** %346 to i64
  store i64 %347, i64* %289, align 8
  br label %392

348:                                              ; preds = %338
  %349 = ptrtoint %"class.net::NameConstraints"** %340 to i64
  %350 = load i64, i64* %290, align 8
  %351 = sub i64 %349, %350
  %352 = ashr exact i64 %351, 3
  %353 = add nsw i64 %352, 1
  %354 = icmp ugt i64 %353, 2305843009213693951
  br i1 %354, label %355, label %357

355:                                              ; preds = %348
  %356 = bitcast %"class.std::__1::vector.119"* %287 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %356) #12
  unreachable

357:                                              ; preds = %348
  %358 = sub i64 %343, %350
  %359 = ashr exact i64 %358, 3
  %360 = icmp ult i64 %359, 1152921504606846975
  br i1 %360, label %361, label %369

361:                                              ; preds = %357
  %362 = ashr exact i64 %358, 2
  %363 = icmp ult i64 %362, %353
  %364 = select i1 %363, i64 %353, i64 %362
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %374, label %366

366:                                              ; preds = %361
  %367 = icmp ugt i64 %364, 2305843009213693951
  br i1 %367, label %368, label %369

368:                                              ; preds = %366
  call void @abort() #12
  unreachable

369:                                              ; preds = %366, %357
  %370 = phi i64 [ %364, %366 ], [ 2305843009213693951, %357 ]
  %371 = shl i64 %370, 3
  %372 = call i8* @_Znwm(i64 %371) #14
  %373 = bitcast i8* %372 to %"class.net::NameConstraints"**
  br label %374

374:                                              ; preds = %369, %361
  %375 = phi i64 [ %370, %369 ], [ 0, %361 ]
  %376 = phi i8* [ %372, %369 ], [ null, %361 ]
  %377 = phi %"class.net::NameConstraints"** [ %373, %369 ], [ null, %361 ]
  %378 = getelementptr inbounds %"class.net::NameConstraints"*, %"class.net::NameConstraints"** %377, i64 %352
  %379 = getelementptr inbounds %"class.net::NameConstraints"*, %"class.net::NameConstraints"** %377, i64 %375
  %380 = ptrtoint %"class.net::NameConstraints"** %379 to i64
  %381 = bitcast %"class.net::NameConstraints"** %378 to i64*
  store i64 %339, i64* %381, align 8
  %382 = getelementptr inbounds %"class.net::NameConstraints"*, %"class.net::NameConstraints"** %378, i64 1
  %383 = ptrtoint %"class.net::NameConstraints"** %382 to i64
  %384 = ptrtoint %"class.net::NameConstraints"** %377 to i64
  %385 = icmp sgt i64 %351, 0
  br i1 %385, label %386, label %388

386:                                              ; preds = %374
  %387 = inttoptr i64 %350 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %376, i8* align 8 %387, i64 %351, i1 false) #13
  br label %388

388:                                              ; preds = %386, %374
  store i64 %384, i64* %290, align 8
  store i64 %383, i64* %289, align 8
  store i64 %380, i64* %291, align 8
  %389 = icmp eq i64 %350, 0
  br i1 %389, label %392, label %390

390:                                              ; preds = %388
  %391 = inttoptr i64 %350 to i8*
  call void @_ZdlPv(i8* %391) #14
  br label %392

392:                                              ; preds = %390, %388, %344, %334
  %393 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 10
  %394 = load i8, i8* %393, align 8, !range !2
  %395 = icmp eq i8 %394, 0
  br i1 %395, label %404, label %396

396:                                              ; preds = %392
  %397 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 11, i32 1
  %398 = load i8, i8* %397, align 1, !range !2
  %399 = icmp eq i8 %398, 0
  br i1 %399, label %404, label %400

400:                                              ; preds = %396
  %401 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 11, i32 2
  %402 = load i8, i8* %401, align 1
  %403 = zext i8 %402 to i64
  store i64 %403, i64* %183, align 8
  br label %404

404:                                              ; preds = %400, %396, %392
  call fastcc void @_ZN3net12_GLOBAL__N_136VerifyNoUnconsumedCriticalExtensionsERKNS_17ParsedCertificateEPNS_10CertErrorsE(%"class.net::ParsedCertificate"* dereferenceable(752) %326, %"class.net::CertErrors"* %327) #13
  br label %405

405:                                              ; preds = %404, %328
  %406 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 6, i32 7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %309) #13
  store i64 0, i64* %311, align 8
  %407 = call zeroext i1 @_ZN3net14ParsePublicKeyERKNS_3der5InputEPNSt3__110unique_ptrI11evp_pkey_stN4bssl8internal7DeleterIS6_EEEE(%"class.net::der::Input"* dereferenceable(16) %406, %"class.std::__1::unique_ptr.126"* nonnull %71) #13
  br i1 %407, label %408, label %419

408:                                              ; preds = %405
  %409 = load %"class.net::VerifyCertificateChainDelegate"*, %"class.net::VerifyCertificateChainDelegate"** %82, align 8
  %410 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %310, align 8
  %411 = bitcast %"class.net::VerifyCertificateChainDelegate"* %409 to i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)***
  %412 = load i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)**, i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)*** %411, align 8
  %413 = getelementptr inbounds i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)*, i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)** %412, i64 1
  %414 = load i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)*, i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)** %413, align 8
  %415 = call zeroext i1 %414(%"class.net::VerifyCertificateChainDelegate"* %409, %struct.evp_pkey_st* %410, %"class.net::CertErrors"* %327) #13
  br i1 %415, label %417, label %416

416:                                              ; preds = %408
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %285) #13
  br label %417

417:                                              ; preds = %416, %408
  %418 = load i64, i64* %311, align 8
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %310, align 8
  br label %423

419:                                              ; preds = %405
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %284) #13
  %420 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %310, align 8
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %310, align 8
  %421 = icmp eq %struct.evp_pkey_st* %420, null
  br i1 %421, label %423, label %422

422:                                              ; preds = %419
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %420) #13
  br label %423

423:                                              ; preds = %422, %419, %417
  %424 = phi i64 [ %418, %417 ], [ 0, %419 ], [ 0, %422 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %309) #13
  %425 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %286, align 8
  store i64 %424, i64* %80, align 8
  %426 = icmp eq %struct.evp_pkey_st* %425, null
  br i1 %426, label %428, label %427

427:                                              ; preds = %423
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %425) #13
  br label %428

428:                                              ; preds = %427, %423
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %312) #13
  %429 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 8
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %70, %"class.std::__1::basic_string"* %429) #13
  %430 = load <2 x i64>, <2 x i64>* %69, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %312) #13
  store <2 x i64> %430, <2 x i64>* %316, align 8
  br label %1217

431:                                              ; preds = %317
  %432 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 4
  %433 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 6, i32 2
  %434 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %432, %"class.net::der::Input"* dereferenceable(16) %433) #13
  br i1 %434, label %440, label %435

435:                                              ; preds = %431
  %436 = call zeroext i1 @_ZN3net18SignatureAlgorithm12IsEquivalentERKNS_3der5InputES4_(%"class.net::der::Input"* dereferenceable(16) %432, %"class.net::der::Input"* dereferenceable(16) %433) #13
  %437 = call %"class.net::CertErrorParams"* @_ZN3net25CreateCertErrorParams2DerEPKcRKNS_3der5InputES1_S5_(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), %"class.net::der::Input"* dereferenceable(16) %432, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), %"class.net::der::Input"* dereferenceable(16) %433) #13
  br i1 %436, label %438, label %439

438:                                              ; preds = %435
  call void @_ZN3net10CertErrors10AddWarningEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS3_14default_deleteIS5_EEEE(%"class.net::CertErrors"* %327, i8* %191, %"class.net::CertErrorParams"* %437) #13
  br label %440

439:                                              ; preds = %435
  call void @_ZN3net10CertErrors8AddErrorEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS3_14default_deleteIS5_EEEE(%"class.net::CertErrors"* %327, i8* %190, %"class.net::CertErrorParams"* %437) #13
  br label %440

440:                                              ; preds = %439, %438, %431
  %441 = phi i8 [ 0, %431 ], [ 0, %438 ], [ 1, %439 ]
  %442 = load %"class.net::VerifyCertificateChainDelegate"*, %"class.net::VerifyCertificateChainDelegate"** %82, align 8
  %443 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 7, i32 0, i32 0, i32 0
  %444 = load %"class.net::SignatureAlgorithm"*, %"class.net::SignatureAlgorithm"** %443, align 8
  %445 = bitcast %"class.net::VerifyCertificateChainDelegate"* %442 to i1 (%"class.net::VerifyCertificateChainDelegate"*, %"class.net::SignatureAlgorithm"*, %"class.net::CertErrors"*)***
  %446 = load i1 (%"class.net::VerifyCertificateChainDelegate"*, %"class.net::SignatureAlgorithm"*, %"class.net::CertErrors"*)**, i1 (%"class.net::VerifyCertificateChainDelegate"*, %"class.net::SignatureAlgorithm"*, %"class.net::CertErrors"*)*** %445, align 8
  %447 = load i1 (%"class.net::VerifyCertificateChainDelegate"*, %"class.net::SignatureAlgorithm"*, %"class.net::CertErrors"*)*, i1 (%"class.net::VerifyCertificateChainDelegate"*, %"class.net::SignatureAlgorithm"*, %"class.net::CertErrors"*)** %446, align 8
  %448 = call zeroext i1 %447(%"class.net::VerifyCertificateChainDelegate"* %442, %"class.net::SignatureAlgorithm"* dereferenceable(16) %444, %"class.net::CertErrors"* %327) #13
  br i1 %448, label %450, label %449

449:                                              ; preds = %440
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %192) #13
  br label %450

450:                                              ; preds = %449, %440
  %451 = phi i8 [ %441, %440 ], [ 1, %449 ]
  %452 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %193, align 8
  %453 = icmp eq %struct.evp_pkey_st* %452, null
  br i1 %453, label %461, label %454

454:                                              ; preds = %450
  %455 = load %"class.net::SignatureAlgorithm"*, %"class.net::SignatureAlgorithm"** %443, align 8
  %456 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 3
  %457 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 5
  %458 = call zeroext i1 @_ZN3net16VerifySignedDataERKNS_18SignatureAlgorithmERKNS_3der5InputERKNS3_9BitStringEP11evp_pkey_st(%"class.net::SignatureAlgorithm"* dereferenceable(16) %455, %"class.net::der::Input"* dereferenceable(16) %456, %"class.net::der::BitString"* dereferenceable(24) %457, %struct.evp_pkey_st* nonnull %452) #13
  br i1 %458, label %461, label %459

459:                                              ; preds = %454
  %460 = load i8*, i8** @_ZN3net11cert_errors23kVerifySignedDataFailedE, align 8
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %460) #13
  br label %1285

461:                                              ; preds = %454, %450
  %462 = icmp eq i8 %451, 0
  br i1 %462, label %463, label %1285

463:                                              ; preds = %461
  %464 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 6, i32 4
  %465 = call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %3, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %464) #13
  br i1 %465, label %466, label %467

466:                                              ; preds = %463
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %194) #13
  br label %467

467:                                              ; preds = %466, %463
  %468 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 6, i32 5
  %469 = call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %468, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %3) #13
  br i1 %469, label %470, label %471

470:                                              ; preds = %467
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %195) #13
  br label %471

471:                                              ; preds = %470, %467
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %196) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %197) #13
  %472 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 9
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %64, %"class.std::__1::basic_string"* %472) #13
  %473 = load <2 x i64>, <2 x i64>* %63, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %197) #13
  store <2 x i64> %473, <2 x i64>* %65, align 16
  %474 = call zeroext i1 @_ZN3net3derneERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %66, %"class.net::der::Input"* dereferenceable(16) %81) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %196) #13
  br i1 %474, label %475, label %476

475:                                              ; preds = %471
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %198) #13
  br label %476

476:                                              ; preds = %475, %471
  %477 = load %"class.net::NameConstraints"**, %"class.net::NameConstraints"*** %199, align 8
  %478 = load %"class.net::NameConstraints"**, %"class.net::NameConstraints"*** %200, align 8
  %479 = icmp eq %"class.net::NameConstraints"** %477, %478
  br i1 %479, label %500, label %480

480:                                              ; preds = %476
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %201) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %202) #13
  %481 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 8
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %58, %"class.std::__1::basic_string"* %481) #13
  %482 = load <2 x i64>, <2 x i64>* %57, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %202) #13
  store <2 x i64> %482, <2 x i64>* %59, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %203) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %204) #13
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %56, %"class.std::__1::basic_string"* %472) #13
  %483 = load <2 x i64>, <2 x i64>* %55, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %204) #13
  store <2 x i64> %483, <2 x i64>* %61, align 16
  %484 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %60, %"class.net::der::Input"* nonnull dereferenceable(16) %62) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %203) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %201) #13
  %485 = xor i1 %484, true
  %486 = or i1 %323, %485
  br i1 %486, label %487, label %500

487:                                              ; preds = %480
  %488 = load %"class.net::NameConstraints"**, %"class.net::NameConstraints"*** %199, align 8
  %489 = load %"class.net::NameConstraints"**, %"class.net::NameConstraints"*** %200, align 8
  %490 = icmp eq %"class.net::NameConstraints"** %488, %489
  br i1 %490, label %500, label %491

491:                                              ; preds = %487
  %492 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 18, i32 0, i32 0, i32 0
  br label %493

493:                                              ; preds = %493, %491
  %494 = phi %"class.net::NameConstraints"** [ %488, %491 ], [ %498, %493 ]
  %495 = load %"class.net::NameConstraints"*, %"class.net::NameConstraints"** %494, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %205) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %206) #13
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %54, %"class.std::__1::basic_string"* %481) #13
  %496 = load <2 x i64>, <2 x i64>* %53, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %206) #13
  store <2 x i64> %496, <2 x i64>* %67, align 16
  %497 = load %"struct.net::GeneralNames"*, %"struct.net::GeneralNames"** %492, align 8
  call void @_ZNK3net15NameConstraints15IsPermittedCertERKNS_3der5InputEPKNS_12GeneralNamesEPNS_10CertErrorsE(%"class.net::NameConstraints"* %495, %"class.net::der::Input"* nonnull dereferenceable(16) %68, %"struct.net::GeneralNames"* %497, %"class.net::CertErrors"* %327) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %205) #13
  %498 = getelementptr inbounds %"class.net::NameConstraints"*, %"class.net::NameConstraints"** %494, i64 1
  %499 = icmp eq %"class.net::NameConstraints"** %498, %489
  br i1 %499, label %500, label %493

500:                                              ; preds = %493, %487, %480, %476
  %501 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 25
  %502 = load i8, i8* %501, align 8, !range !2
  %503 = icmp eq i8 %502, 0
  br i1 %503, label %680, label %504

504:                                              ; preds = %500
  %505 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %105, align 8
  %506 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107, align 8
  %507 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %505, %506
  br i1 %507, label %677, label %508

508:                                              ; preds = %504
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #13
  br label %511

509:                                              ; preds = %511
  %510 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %518, %506
  br i1 %510, label %519, label %511

511:                                              ; preds = %509, %508
  %512 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %505, %508 ], [ %518, %509 ]
  %513 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %512, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %207) #13
  %514 = call { i8*, i64 } @_ZN3net9AnyPolicyEv() #13
  %515 = extractvalue { i8*, i64 } %514, 0
  store i8* %515, i8** %208, align 8
  %516 = extractvalue { i8*, i64 } %514, 1
  store i64 %516, i64* %209, align 8
  %517 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %513, %"class.net::der::Input"* nonnull dereferenceable(16) %50) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %207) #13
  %518 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %512, i64 1
  br i1 %517, label %519, label %509

519:                                              ; preds = %511, %509
  %520 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %512, %511 ], [ null, %509 ]
  %521 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 26, i32 0, i32 0
  %522 = load %"class.net::der::Input"*, %"class.net::der::Input"** %521, align 8
  %523 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 26, i32 0, i32 1
  %524 = load %"class.net::der::Input"*, %"class.net::der::Input"** %523, align 8
  %525 = icmp eq %"class.net::der::Input"* %522, %524
  br i1 %525, label %665, label %526

526:                                              ; preds = %519
  %527 = icmp ne %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %520, null
  br label %531

528:                                              ; preds = %574
  %529 = and i8 %575, 1
  %530 = icmp eq i8 %529, 0
  br i1 %530, label %665, label %578

531:                                              ; preds = %574, %526
  %532 = phi i8 [ 0, %526 ], [ %575, %574 ]
  %533 = phi %"class.net::der::Input"* [ %522, %526 ], [ %576, %574 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %210) #13
  %534 = call { i8*, i64 } @_ZN3net9AnyPolicyEv() #13
  %535 = extractvalue { i8*, i64 } %534, 0
  store i8* %535, i8** %211, align 8
  %536 = extractvalue { i8*, i64 } %534, 1
  store i64 %536, i64* %212, align 8
  %537 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %533, %"class.net::der::Input"* nonnull dereferenceable(16) %51) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %210) #13
  br i1 %537, label %574, label %538

538:                                              ; preds = %531
  %539 = bitcast %"class.net::der::Input"* %533 to i8*
  br label %544

540:                                              ; preds = %568
  %541 = and i8 %569, 1
  %542 = icmp eq i8 %541, 0
  %543 = and i1 %527, %542
  br i1 %543, label %572, label %574

544:                                              ; preds = %568, %538
  %545 = phi i8 [ 0, %538 ], [ %569, %568 ]
  %546 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %505, %538 ], [ %570, %568 ]
  %547 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %546, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %548 = bitcast %"class.std::__1::__tree_end_node"* %547 to %"class.std::__1::__tree_node"**
  %549 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %548, align 8
  %550 = icmp eq %"class.std::__1::__tree_node"* %549, null
  br i1 %550, label %568, label %551

551:                                              ; preds = %544, %562
  %552 = phi %"class.std::__1::__tree_node"* [ %564, %562 ], [ %549, %544 ]
  %553 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %552, i64 0, i32 1
  %554 = call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %533, %"class.net::der::Input"* dereferenceable(16) %553) #13
  br i1 %554, label %555, label %557

555:                                              ; preds = %551
  %556 = bitcast %"class.std::__1::__tree_node"* %552 to %"class.std::__1::__tree_node"**
  br label %562

557:                                              ; preds = %551
  %558 = call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %553, %"class.net::der::Input"* dereferenceable(16) %533) #13
  br i1 %558, label %559, label %566

559:                                              ; preds = %557
  %560 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %552, i64 0, i32 0, i32 1
  %561 = bitcast %"class.std::__1::__tree_node_base"** %560 to %"class.std::__1::__tree_node"**
  br label %562

562:                                              ; preds = %559, %555
  %563 = phi %"class.std::__1::__tree_node"** [ %556, %555 ], [ %561, %559 ]
  %564 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %563, align 8
  %565 = icmp eq %"class.std::__1::__tree_node"* %564, null
  br i1 %565, label %568, label %551

566:                                              ; preds = %557
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %213) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %214) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %214, i8* align 8 %539, i64 16, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %219, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %217, %"class.std::__1::__tree_end_node"** %218, align 8
  call void @_ZNSt3__13setIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE6insertIPKS3_EEvT_SC_(%"class.std::__1::set"* nonnull %48, %"class.net::der::Input"* nonnull %215, %"class.net::der::Input"* %220) #13
  call fastcc void @_ZN3net12_GLOBAL__N_115ValidPolicyTree28AddNodeWithExpectedPolicySetERKNS1_4NodeERKNS_3der5InputERKNSt3__13setIS6_NS9_4lessIS6_EENS9_9allocatorIS6_EEEE(%"class.net::(anonymous namespace)::ValidPolicyTree"* nonnull %104, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* dereferenceable(56) %546, %"class.net::der::Input"* dereferenceable(16) %533, %"class.std::__1::set"* nonnull dereferenceable(24) %48) #13
  %567 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %222, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* nonnull %221, %"class.std::__1::__tree_node"* %567) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %214) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %213) #13
  br label %568

568:                                              ; preds = %562, %566, %544
  %569 = phi i8 [ 1, %566 ], [ %545, %544 ], [ %545, %562 ]
  %570 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %546, i64 1
  %571 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %570, %506
  br i1 %571, label %540, label %544

572:                                              ; preds = %540
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %223) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %214) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %214, i8* align 8 %539, i64 16, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %227, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %225, %"class.std::__1::__tree_end_node"** %226, align 8
  call void @_ZNSt3__13setIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE6insertIPKS3_EEvT_SC_(%"class.std::__1::set"* nonnull %47, %"class.net::der::Input"* nonnull %215, %"class.net::der::Input"* %220) #13
  call fastcc void @_ZN3net12_GLOBAL__N_115ValidPolicyTree28AddNodeWithExpectedPolicySetERKNS1_4NodeERKNS_3der5InputERKNSt3__13setIS6_NS9_4lessIS6_EENS9_9allocatorIS6_EEEE(%"class.net::(anonymous namespace)::ValidPolicyTree"* nonnull %104, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* nonnull dereferenceable(56) %520, %"class.net::der::Input"* dereferenceable(16) %533, %"class.std::__1::set"* nonnull dereferenceable(24) %47) #13
  %573 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %229, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* nonnull %228, %"class.std::__1::__tree_node"* %573) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %214) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #13
  br label %574

574:                                              ; preds = %572, %540, %531
  %575 = phi i8 [ 1, %531 ], [ %532, %540 ], [ %532, %572 ]
  %576 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %533, i64 1
  %577 = icmp eq %"class.net::der::Input"* %576, %524
  br i1 %577, label %528, label %531

578:                                              ; preds = %528
  %579 = load i64, i64* %179, align 8
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %587

581:                                              ; preds = %578
  br i1 %323, label %665, label %582

582:                                              ; preds = %581
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %230) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %231) #13
  %583 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 8
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %42, %"class.std::__1::basic_string"* %583) #13
  %584 = load <2 x i64>, <2 x i64>* %41, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %231) #13
  store <2 x i64> %584, <2 x i64>* %43, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %232) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %233) #13
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %40, %"class.std::__1::basic_string"* %472) #13
  %585 = load <2 x i64>, <2 x i64>* %39, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %233) #13
  store <2 x i64> %585, <2 x i64>* %45, align 16
  %586 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %44, %"class.net::der::Input"* nonnull dereferenceable(16) %46) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %232) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %230) #13
  br i1 %586, label %587, label %665

587:                                              ; preds = %582, %578
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %234) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %238, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %237, %"class.std::__1::__tree_end_node"** %235, align 8
  %588 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %105, align 8
  %589 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107, align 8
  %590 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %588, %589
  br i1 %590, label %591, label %592

591:                                              ; preds = %592, %587
  br label %600

592:                                              ; preds = %587, %592
  %593 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %596, %592 ], [ %588, %587 ]
  %594 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %593, i64 0, i32 1
  %595 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.85"* nonnull %239, %"class.net::der::Input"* dereferenceable(16) %594, %"class.net::der::Input"* dereferenceable(16) %594) #13
  %596 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %593, i64 1
  %597 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %596, %589
  br i1 %597, label %591, label %592

598:                                              ; preds = %606
  %599 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %240, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* nonnull %239, %"class.std::__1::__tree_node"* %599) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %234) #13
  br label %665

600:                                              ; preds = %591, %606
  %601 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %607, %606 ], [ %505, %591 ]
  %602 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %601, i64 0, i32 2, i32 0, i32 0
  %603 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %602, align 8
  %604 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %601, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %605 = icmp eq %"class.std::__1::__tree_end_node"* %603, %604
  br i1 %605, label %606, label %609

606:                                              ; preds = %662, %600
  %607 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %601, i64 1
  %608 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %607, %506
  br i1 %608, label %598, label %600

609:                                              ; preds = %600, %662
  %610 = phi %"class.std::__1::__tree_end_node"* [ %663, %662 ], [ %603, %600 ]
  %611 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %610, i64 4
  %612 = bitcast %"class.std::__1::__tree_end_node"* %611 to %"class.net::der::Input"*
  %613 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %240, align 8
  %614 = icmp eq %"class.std::__1::__tree_node"* %613, null
  br i1 %614, label %630, label %615

615:                                              ; preds = %609, %626
  %616 = phi %"class.std::__1::__tree_node"* [ %628, %626 ], [ %613, %609 ]
  %617 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %616, i64 0, i32 1
  %618 = call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %612, %"class.net::der::Input"* dereferenceable(16) %617) #13
  br i1 %618, label %619, label %621

619:                                              ; preds = %615
  %620 = bitcast %"class.std::__1::__tree_node"* %616 to %"class.std::__1::__tree_node"**
  br label %626

621:                                              ; preds = %615
  %622 = call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %617, %"class.net::der::Input"* dereferenceable(16) %612) #13
  br i1 %622, label %623, label %634

623:                                              ; preds = %621
  %624 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %616, i64 0, i32 0, i32 1
  %625 = bitcast %"class.std::__1::__tree_node_base"** %624 to %"class.std::__1::__tree_node"**
  br label %626

626:                                              ; preds = %623, %619
  %627 = phi %"class.std::__1::__tree_node"** [ %620, %619 ], [ %625, %623 ]
  %628 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %627, align 8
  %629 = icmp eq %"class.std::__1::__tree_node"* %628, null
  br i1 %629, label %630, label %615

630:                                              ; preds = %626, %609
  %631 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.85"* nonnull %239, %"class.net::der::Input"* dereferenceable(16) %612, %"class.net::der::Input"* dereferenceable(16) %612) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %241) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %214) #13
  %632 = bitcast %"class.std::__1::__tree_end_node"* %611 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %214, i8* align 8 %632, i64 16, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %245, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %243, %"class.std::__1::__tree_end_node"** %244, align 8
  call void @_ZNSt3__13setIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE6insertIPKS3_EEvT_SC_(%"class.std::__1::set"* nonnull %49, %"class.net::der::Input"* nonnull %215, %"class.net::der::Input"* %220) #13
  call fastcc void @_ZN3net12_GLOBAL__N_115ValidPolicyTree28AddNodeWithExpectedPolicySetERKNS1_4NodeERKNS_3der5InputERKNSt3__13setIS6_NS9_4lessIS6_EENS9_9allocatorIS6_EEEE(%"class.net::(anonymous namespace)::ValidPolicyTree"* nonnull %104, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* dereferenceable(56) %601, %"class.net::der::Input"* dereferenceable(16) %612, %"class.std::__1::set"* nonnull dereferenceable(24) %49) #13
  %633 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %247, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* nonnull %246, %"class.std::__1::__tree_node"* %633) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %214) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %241) #13
  br label %634

634:                                              ; preds = %621, %630
  %635 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %610, i64 1, i32 0
  %636 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %635, align 8
  %637 = icmp eq %"class.std::__1::__tree_node_base"* %636, null
  br i1 %637, label %638, label %646

638:                                              ; preds = %634
  %639 = bitcast %"class.std::__1::__tree_end_node"* %610 to %"class.std::__1::__tree_node_base"*
  %640 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %610, i64 2
  %641 = bitcast %"class.std::__1::__tree_end_node"* %640 to %"class.std::__1::__tree_end_node"**
  %642 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %641, align 8
  %643 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %642, i64 0, i32 0
  %644 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %643, align 8
  %645 = icmp eq %"class.std::__1::__tree_node_base"* %644, %639
  br i1 %645, label %662, label %653

646:                                              ; preds = %634, %646
  %647 = phi %"class.std::__1::__tree_node_base"* [ %649, %646 ], [ %636, %634 ]
  %648 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %647, i64 0, i32 0, i32 0
  %649 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %648, align 8
  %650 = icmp eq %"class.std::__1::__tree_node_base"* %649, null
  br i1 %650, label %651, label %646

651:                                              ; preds = %646
  %652 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %647, i64 0, i32 0
  br label %662

653:                                              ; preds = %638, %653
  %654 = phi %"class.std::__1::__tree_end_node"** [ %657, %653 ], [ %641, %638 ]
  %655 = bitcast %"class.std::__1::__tree_end_node"** %654 to %"class.std::__1::__tree_node_base"**
  %656 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %655, align 8
  %657 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %656, i64 0, i32 2
  %658 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %657, align 8
  %659 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %658, i64 0, i32 0
  %660 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %659, align 8
  %661 = icmp eq %"class.std::__1::__tree_node_base"* %660, %656
  br i1 %661, label %662, label %653

662:                                              ; preds = %653, %651, %638
  %663 = phi %"class.std::__1::__tree_end_node"* [ %652, %651 ], [ %642, %638 ], [ %658, %653 ]
  %664 = icmp eq %"class.std::__1::__tree_end_node"* %663, %604
  br i1 %664, label %606, label %609

665:                                              ; preds = %598, %582, %581, %528, %519
  %666 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %505, null
  br i1 %666, label %677, label %667

667:                                              ; preds = %665, %667
  %668 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %669, %667 ], [ %506, %665 ]
  %669 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %668, i64 -1
  %670 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %668, i64 -1, i32 2, i32 0
  %671 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %668, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  %672 = bitcast %"class.std::__1::__tree_end_node"* %671 to %"class.std::__1::__tree_node"**
  %673 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %672, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %670, %"class.std::__1::__tree_node"* %673) #13
  %674 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %669, %505
  br i1 %674, label %675, label %667

675:                                              ; preds = %667
  %676 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %505 to i8*
  call void @_ZdlPv(i8* %676) #14
  br label %677

677:                                              ; preds = %675, %665, %504
  %678 = load i8, i8* %501, align 8
  %679 = icmp eq i8 %678, 0
  br i1 %679, label %680, label %693

680:                                              ; preds = %677, %500
  %681 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %105, align 8
  %682 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107, align 8
  %683 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %682, %681
  br i1 %683, label %692, label %684

684:                                              ; preds = %680, %684
  %685 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %686, %684 ], [ %682, %680 ]
  %686 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %685, i64 -1
  %687 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %685, i64 -1, i32 2, i32 0
  %688 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %685, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  %689 = bitcast %"class.std::__1::__tree_end_node"* %688 to %"class.std::__1::__tree_node"**
  %690 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %689, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %687, %"class.std::__1::__tree_node"* %690) #13
  %691 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %686, %681
  br i1 %691, label %692, label %684

692:                                              ; preds = %684, %680
  store %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %681, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107, align 8
  br label %693

693:                                              ; preds = %692, %677
  %694 = load i64, i64* %176, align 8
  %695 = icmp eq i64 %694, 0
  br i1 %695, label %696, label %701

696:                                              ; preds = %693
  %697 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %105, align 8
  %698 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107, align 8
  %699 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %697, %698
  br i1 %699, label %700, label %701

700:                                              ; preds = %696
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %248) #13
  br label %701

701:                                              ; preds = %700, %696, %693
  call fastcc void @_ZN3net12_GLOBAL__N_122VerifyExtendedKeyUsageERKNS_17ParsedCertificateENS_10KeyPurposeEPNS_10CertErrorsE(%"class.net::ParsedCertificate"* dereferenceable(752) %326, i32 %4, %"class.net::CertErrors"* %327) #13
  br i1 %323, label %1136, label %702

702:                                              ; preds = %701
  %703 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 29
  %704 = load i8, i8* %703, align 1, !range !2
  %705 = icmp eq i8 %704, 0
  br i1 %705, label %953, label %706

706:                                              ; preds = %702
  %707 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 30, i32 0, i32 0
  %708 = load %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"** %707, align 8
  %709 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 30, i32 0, i32 1
  %710 = load %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"** %709, align 8
  %711 = icmp eq %"struct.net::ParsedPolicyMapping"* %708, %710
  br i1 %711, label %712, label %715

712:                                              ; preds = %742, %706
  %713 = load i64, i64* %182, align 8
  %714 = icmp eq i64 %713, 0
  br i1 %714, label %848, label %745

715:                                              ; preds = %706, %742
  %716 = phi %"struct.net::ParsedPolicyMapping"* [ %743, %742 ], [ %708, %706 ]
  %717 = getelementptr inbounds %"struct.net::ParsedPolicyMapping", %"struct.net::ParsedPolicyMapping"* %716, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %249) #13
  %718 = call { i8*, i64 } @_ZN3net9AnyPolicyEv() #13
  %719 = extractvalue { i8*, i64 } %718, 0
  store i8* %719, i8** %250, align 8
  %720 = extractvalue { i8*, i64 } %718, 1
  store i64 %720, i64* %251, align 8
  %721 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %717, %"class.net::der::Input"* nonnull dereferenceable(16) %36) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %252) #13
  br i1 %721, label %728, label %722

722:                                              ; preds = %715
  %723 = getelementptr inbounds %"struct.net::ParsedPolicyMapping", %"struct.net::ParsedPolicyMapping"* %716, i64 0, i32 1
  %724 = call { i8*, i64 } @_ZN3net9AnyPolicyEv() #13
  %725 = extractvalue { i8*, i64 } %724, 0
  store i8* %725, i8** %253, align 8
  %726 = extractvalue { i8*, i64 } %724, 1
  store i64 %726, i64* %254, align 8
  %727 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %723, %"class.net::der::Input"* nonnull dereferenceable(16) %37) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %252) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %249) #13
  br i1 %727, label %729, label %742

728:                                              ; preds = %715
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %252) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %249) #13
  br label %729

729:                                              ; preds = %728, %722
  %730 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %105, align 8
  %731 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107, align 8
  %732 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %731, %730
  br i1 %732, label %741, label %733

733:                                              ; preds = %729, %733
  %734 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %735, %733 ], [ %731, %729 ]
  %735 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %734, i64 -1
  %736 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %734, i64 -1, i32 2, i32 0
  %737 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %734, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  %738 = bitcast %"class.std::__1::__tree_end_node"* %737 to %"class.std::__1::__tree_node"**
  %739 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %738, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %736, %"class.std::__1::__tree_node"* %739) #13
  %740 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %735, %730
  br i1 %740, label %741, label %733

741:                                              ; preds = %733, %729
  store %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %730, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107, align 8
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %255) #13
  br label %742

742:                                              ; preds = %741, %722
  %743 = getelementptr inbounds %"struct.net::ParsedPolicyMapping", %"struct.net::ParsedPolicyMapping"* %716, i64 1
  %744 = icmp eq %"struct.net::ParsedPolicyMapping"* %743, %710
  br i1 %744, label %712, label %715

745:                                              ; preds = %712
  %746 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %105, align 8
  %747 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107, align 8
  %748 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %746, %747
  br i1 %748, label %759, label %751

749:                                              ; preds = %751
  %750 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %758, %747
  br i1 %750, label %759, label %751

751:                                              ; preds = %745, %749
  %752 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %758, %749 ], [ %746, %745 ]
  %753 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %752, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %256) #13
  %754 = call { i8*, i64 } @_ZN3net9AnyPolicyEv() #13
  %755 = extractvalue { i8*, i64 } %754, 0
  store i8* %755, i8** %257, align 8
  %756 = extractvalue { i8*, i64 } %754, 1
  store i64 %756, i64* %258, align 8
  %757 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %753, %"class.net::der::Input"* nonnull dereferenceable(16) %34) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %256) #13
  %758 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %752, i64 1
  br i1 %757, label %759, label %749

759:                                              ; preds = %751, %749, %745
  %760 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ null, %745 ], [ %752, %751 ], [ null, %749 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %259) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %263, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %262, %"class.std::__1::__tree_end_node"** %260, align 8
  %761 = load %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"** %707, align 8
  %762 = load %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"** %709, align 8
  %763 = icmp eq %"struct.net::ParsedPolicyMapping"* %761, %762
  br i1 %763, label %844, label %769

764:                                              ; preds = %769
  %765 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %260, align 8
  %766 = icmp eq %"class.std::__1::__tree_end_node"* %765, %262
  br i1 %766, label %844, label %767

767:                                              ; preds = %764
  %768 = icmp ne %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %760, null
  br label %780

769:                                              ; preds = %759, %769
  %770 = phi %"struct.net::ParsedPolicyMapping"* [ %778, %769 ], [ %761, %759 ]
  %771 = getelementptr inbounds %"struct.net::ParsedPolicyMapping", %"struct.net::ParsedPolicyMapping"* %770, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %265) #13
  store %"class.net::der::Input"* %771, %"class.net::der::Input"** %266, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %267) #13
  %772 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS_3setIS4_NS_4lessIS4_EENS_9allocatorIS4_EEEEEENS_19__map_value_compareIS4_SB_S7_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_4pairINS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.152"* nonnull %264, %"class.net::der::Input"* dereferenceable(16) %771, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %32, %"class.std::__1::tuple.164"* nonnull dereferenceable(1) %33) #13
  %773 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %772, 0
  %774 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %773, i64 6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %267) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %265) #13
  %775 = getelementptr inbounds %"struct.net::ParsedPolicyMapping", %"struct.net::ParsedPolicyMapping"* %770, i64 0, i32 1
  %776 = bitcast %"class.std::__1::__tree_end_node"* %774 to %"class.std::__1::__tree.85"*
  %777 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.85"* %776, %"class.net::der::Input"* dereferenceable(16) %775, %"class.net::der::Input"* dereferenceable(16) %775) #13
  %778 = getelementptr inbounds %"struct.net::ParsedPolicyMapping", %"struct.net::ParsedPolicyMapping"* %770, i64 1
  %779 = icmp eq %"struct.net::ParsedPolicyMapping"* %778, %762
  br i1 %779, label %764, label %769

780:                                              ; preds = %841, %767
  %781 = phi %"class.std::__1::__tree_end_node"* [ %765, %767 ], [ %842, %841 ]
  %782 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %781, i64 4
  %783 = bitcast %"class.std::__1::__tree_end_node"* %782 to %"class.net::der::Input"*
  %784 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %781, i64 6
  %785 = bitcast %"class.std::__1::__tree_end_node"* %784 to %"class.std::__1::set"*
  %786 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %105, align 8
  %787 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107, align 8
  %788 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %786, %787
  br i1 %788, label %792, label %789

789:                                              ; preds = %780
  %790 = bitcast %"class.std::__1::__tree_end_node"* %784 to %"class.std::__1::__tree_end_node"**
  %791 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %781, i64 7
  br label %797

792:                                              ; preds = %808, %780
  %793 = phi i8 [ 0, %780 ], [ %809, %808 ]
  %794 = and i8 %793, 1
  %795 = icmp eq i8 %794, 0
  %796 = and i1 %768, %795
  br i1 %796, label %812, label %813

797:                                              ; preds = %808, %789
  %798 = phi i8 [ 0, %789 ], [ %809, %808 ]
  %799 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %786, %789 ], [ %810, %808 ]
  %800 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %799, i64 0, i32 1
  %801 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %800, %"class.net::der::Input"* dereferenceable(16) %783) #13
  br i1 %801, label %802, label %808

802:                                              ; preds = %797
  %803 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %799, i64 0, i32 2
  %804 = icmp eq %"class.std::__1::set"* %803, %785
  br i1 %804, label %808, label %805

805:                                              ; preds = %802
  %806 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %803, i64 0, i32 0
  %807 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %790, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE14__assign_multiINS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEEEvT_SG_(%"class.std::__1::__tree.85"* %806, %"class.std::__1::__tree_end_node"* %807, %"class.std::__1::__tree_end_node"* %791) #13
  br label %808

808:                                              ; preds = %805, %802, %797
  %809 = phi i8 [ %798, %797 ], [ 1, %802 ], [ 1, %805 ]
  %810 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %799, i64 1
  %811 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %810, %787
  br i1 %811, label %792, label %797

812:                                              ; preds = %792
  call fastcc void @_ZN3net12_GLOBAL__N_115ValidPolicyTree28AddNodeWithExpectedPolicySetERKNS1_4NodeERKNS_3der5InputERKNSt3__13setIS6_NS9_4lessIS6_EENS9_9allocatorIS6_EEEE(%"class.net::(anonymous namespace)::ValidPolicyTree"* nonnull %104, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* nonnull dereferenceable(56) %760, %"class.net::der::Input"* dereferenceable(16) %783, %"class.std::__1::set"* dereferenceable(24) %785) #13
  br label %813

813:                                              ; preds = %812, %792
  %814 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %781, i64 1, i32 0
  %815 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %814, align 8
  %816 = icmp eq %"class.std::__1::__tree_node_base"* %815, null
  br i1 %816, label %817, label %825

817:                                              ; preds = %813
  %818 = bitcast %"class.std::__1::__tree_end_node"* %781 to %"class.std::__1::__tree_node_base"*
  %819 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %781, i64 2
  %820 = bitcast %"class.std::__1::__tree_end_node"* %819 to %"class.std::__1::__tree_end_node"**
  %821 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %820, align 8
  %822 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %821, i64 0, i32 0
  %823 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %822, align 8
  %824 = icmp eq %"class.std::__1::__tree_node_base"* %823, %818
  br i1 %824, label %841, label %832

825:                                              ; preds = %813, %825
  %826 = phi %"class.std::__1::__tree_node_base"* [ %828, %825 ], [ %815, %813 ]
  %827 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %826, i64 0, i32 0, i32 0
  %828 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %827, align 8
  %829 = icmp eq %"class.std::__1::__tree_node_base"* %828, null
  br i1 %829, label %830, label %825

830:                                              ; preds = %825
  %831 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %826, i64 0, i32 0
  br label %841

832:                                              ; preds = %817, %832
  %833 = phi %"class.std::__1::__tree_end_node"** [ %836, %832 ], [ %820, %817 ]
  %834 = bitcast %"class.std::__1::__tree_end_node"** %833 to %"class.std::__1::__tree_node_base"**
  %835 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %834, align 8
  %836 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %835, i64 0, i32 2
  %837 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %836, align 8
  %838 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %837, i64 0, i32 0
  %839 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %838, align 8
  %840 = icmp eq %"class.std::__1::__tree_node_base"* %839, %835
  br i1 %840, label %841, label %832

841:                                              ; preds = %832, %830, %817
  %842 = phi %"class.std::__1::__tree_end_node"* [ %831, %830 ], [ %821, %817 ], [ %837, %832 ]
  %843 = icmp eq %"class.std::__1::__tree_end_node"* %842, %262
  br i1 %843, label %844, label %780

844:                                              ; preds = %841, %764, %759
  %845 = load %"class.std::__1::__tree_node.166"*, %"class.std::__1::__tree_node.166"** %268, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS_3setIS4_NS_4lessIS4_EENS_9allocatorIS4_EEEEEENS_19__map_value_compareIS4_SB_S7_Lb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(%"class.std::__1::__tree.152"* nonnull %264, %"class.std::__1::__tree_node.166"* %845) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %259) #13
  %846 = load i64, i64* %182, align 8
  %847 = icmp eq i64 %846, 0
  br i1 %847, label %848, label %953

848:                                              ; preds = %844, %712
  %849 = load %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"** %707, align 8
  %850 = load %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"** %709, align 8
  %851 = icmp eq %"struct.net::ParsedPolicyMapping"* %849, %850
  br i1 %851, label %953, label %852

852:                                              ; preds = %848
  %853 = load i64, i64* %269, align 8
  br label %854

854:                                              ; preds = %949, %852
  %855 = phi i64 [ %853, %852 ], [ %950, %949 ]
  %856 = phi %"struct.net::ParsedPolicyMapping"* [ %849, %852 ], [ %951, %949 ]
  %857 = getelementptr inbounds %"struct.net::ParsedPolicyMapping", %"struct.net::ParsedPolicyMapping"* %856, i64 0, i32 0
  %858 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %105, align 8
  %859 = inttoptr i64 %855 to %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*
  %860 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %858, %859
  br i1 %860, label %949, label %861

861:                                              ; preds = %854, %930
  %862 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %933, %930 ], [ %859, %854 ]
  %863 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %932, %930 ], [ %858, %854 ]
  %864 = phi i64 [ %931, %930 ], [ %855, %854 ]
  %865 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %863, i64 0, i32 1
  %866 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %865, %"class.net::der::Input"* dereferenceable(16) %857) #13
  br i1 %866, label %867, label %928

867:                                              ; preds = %861
  %868 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %862, i64 -1
  %869 = ptrtoint %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %868 to i64
  %870 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %863, %868
  br i1 %870, label %930, label %871

871:                                              ; preds = %867
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %270) #13
  %872 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %863 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %270, i8* align 8 %872, i64 32, i1 false) #13
  %873 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %863, i64 0, i32 2
  %874 = bitcast %"class.std::__1::set"* %873 to i64*
  %875 = bitcast %"class.std::__1::set"* %873 to <2 x i64>*
  %876 = load <2 x i64>, <2 x i64>* %875, align 8
  store <2 x i64> %876, <2 x i64>* %314, align 8
  %877 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %863, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %878 = load i64, i64* %877, align 8
  store i64 %878, i64* %273, align 8
  %879 = icmp eq i64 %878, 0
  %880 = extractelement <2 x i64> %876, i32 1
  br i1 %879, label %881, label %883

881:                                              ; preds = %871
  %882 = inttoptr i64 %880 to %"class.std::__1::__tree_node"*
  store %"class.std::__1::__tree_end_node"* %274, %"class.std::__1::__tree_end_node"** %275, align 8
  br label %889

883:                                              ; preds = %871
  %884 = inttoptr i64 %880 to %"class.std::__1::__tree_node_base"*
  %885 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %873, i64 0, i32 0, i32 0
  %886 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %884, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %274, %"class.std::__1::__tree_end_node"** %886, align 8
  %887 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %863, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %887, %"class.std::__1::__tree_end_node"** %885, align 8
  %888 = bitcast %"class.std::__1::__tree_end_node"* %887 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %888, i8 0, i64 16, i1 false) #13
  br label %889

889:                                              ; preds = %883, %881
  %890 = phi %"class.std::__1::__tree_node"* [ %882, %881 ], [ null, %883 ]
  %891 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %868 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %872, i8* align 8 %891, i64 32, i1 false) #13
  %892 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %862, i64 -1, i32 2
  %893 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %873, i64 0, i32 0
  %894 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %863, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %893, %"class.std::__1::__tree_node"* %890) #13
  %895 = bitcast %"class.std::__1::set"* %892 to i64*
  %896 = load i64, i64* %895, align 8
  store i64 %896, i64* %874, align 8
  %897 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %862, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  %898 = bitcast %"class.std::__1::__tree_end_node"* %897 to i64*
  %899 = bitcast %"class.std::__1::__tree_end_node"* %894 to i64*
  %900 = load i64, i64* %898, align 8
  store i64 %900, i64* %899, align 8
  %901 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %862, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %902 = load i64, i64* %901, align 8
  store i64 %902, i64* %877, align 8
  %903 = icmp eq i64 %902, 0
  br i1 %903, label %904, label %908

904:                                              ; preds = %889
  %905 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %873, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %894, %"class.std::__1::__tree_end_node"** %905, align 8
  %906 = bitcast %"class.std::__1::__tree_end_node"* %897 to %"class.std::__1::__tree_node"**
  %907 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %906, align 8
  br label %913

908:                                              ; preds = %889
  %909 = inttoptr i64 %900 to %"class.std::__1::__tree_node_base"*
  %910 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %909, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %894, %"class.std::__1::__tree_end_node"** %910, align 8
  %911 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %892, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %897, %"class.std::__1::__tree_end_node"** %911, align 8
  %912 = bitcast %"class.std::__1::__tree_end_node"* %897 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %912, i8 0, i64 16, i1 false) #13
  br label %913

913:                                              ; preds = %908, %904
  %914 = phi %"class.std::__1::__tree_node"* [ %907, %904 ], [ null, %908 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %891, i8* nonnull align 8 %270, i64 32, i1 false) #13
  %915 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %892, i64 0, i32 0
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %915, %"class.std::__1::__tree_node"* %914) #13
  %916 = load i64, i64* %272, align 8
  store i64 %916, i64* %895, align 8
  %917 = load i64, i64* %276, align 8
  store i64 %917, i64* %898, align 8
  %918 = load i64, i64* %273, align 8
  store i64 %918, i64* %901, align 8
  %919 = icmp eq i64 %918, 0
  br i1 %919, label %920, label %923

920:                                              ; preds = %913
  %921 = inttoptr i64 %917 to %"class.std::__1::__tree_node"*
  %922 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %892, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %897, %"class.std::__1::__tree_end_node"** %922, align 8
  br label %926

923:                                              ; preds = %913
  %924 = inttoptr i64 %917 to %"class.std::__1::__tree_node_base"*
  %925 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %924, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %897, %"class.std::__1::__tree_end_node"** %925, align 8
  store %"class.std::__1::__tree_end_node"* %274, %"class.std::__1::__tree_end_node"** %275, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %277, i8 0, i64 16, i1 false) #13
  br label %926

926:                                              ; preds = %923, %920
  %927 = phi %"class.std::__1::__tree_node"* [ %921, %920 ], [ null, %923 ]
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %278, %"class.std::__1::__tree_node"* %927) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %270) #13
  br label %930

928:                                              ; preds = %861
  %929 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %863, i64 1
  br label %930

930:                                              ; preds = %928, %926, %867
  %931 = phi i64 [ %869, %926 ], [ %869, %867 ], [ %864, %928 ]
  %932 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %863, %926 ], [ %863, %867 ], [ %929, %928 ]
  %933 = inttoptr i64 %931 to %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*
  %934 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %932, %933
  br i1 %934, label %935, label %861

935:                                              ; preds = %930
  %936 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107, align 8
  %937 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %936, %932
  %938 = ptrtoint %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %936 to i64
  br i1 %937, label %949, label %939

939:                                              ; preds = %935, %939
  %940 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %941, %939 ], [ %936, %935 ]
  %941 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %940, i64 -1
  %942 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %940, i64 -1, i32 2, i32 0
  %943 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %940, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  %944 = bitcast %"class.std::__1::__tree_end_node"* %943 to %"class.std::__1::__tree_node"**
  %945 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %944, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %942, %"class.std::__1::__tree_node"* %945) #13
  %946 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %941, %932
  br i1 %946, label %947, label %939

947:                                              ; preds = %939
  store %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %932, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107, align 8
  %948 = ptrtoint %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %932 to i64
  br label %949

949:                                              ; preds = %947, %935, %854
  %950 = phi i64 [ %855, %854 ], [ %938, %935 ], [ %948, %947 ]
  %951 = getelementptr inbounds %"struct.net::ParsedPolicyMapping", %"struct.net::ParsedPolicyMapping"* %856, i64 1
  %952 = icmp eq %"struct.net::ParsedPolicyMapping"* %951, %850
  br i1 %952, label %953, label %854

953:                                              ; preds = %949, %848, %844, %702
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %279) #13
  %954 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 8
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %31, %"class.std::__1::basic_string"* %954) #13
  %955 = load <2 x i64>, <2 x i64>* %30, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %279) #13
  store <2 x i64> %955, <2 x i64>* %315, align 8
  %956 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 6, i32 7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %281) #13
  store i64 0, i64* %283, align 8
  %957 = call zeroext i1 @_ZN3net14ParsePublicKeyERKNS_3der5InputEPNSt3__110unique_ptrI11evp_pkey_stN4bssl8internal7DeleterIS6_EEEE(%"class.net::der::Input"* dereferenceable(16) %956, %"class.std::__1::unique_ptr.126"* nonnull %29) #13
  br i1 %957, label %958, label %969

958:                                              ; preds = %953
  %959 = load %"class.net::VerifyCertificateChainDelegate"*, %"class.net::VerifyCertificateChainDelegate"** %82, align 8
  %960 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %282, align 8
  %961 = bitcast %"class.net::VerifyCertificateChainDelegate"* %959 to i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)***
  %962 = load i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)**, i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)*** %961, align 8
  %963 = getelementptr inbounds i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)*, i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)** %962, i64 1
  %964 = load i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)*, i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)** %963, align 8
  %965 = call zeroext i1 %964(%"class.net::VerifyCertificateChainDelegate"* %959, %struct.evp_pkey_st* %960, %"class.net::CertErrors"* %327) #13
  br i1 %965, label %967, label %966

966:                                              ; preds = %958
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %285) #13
  br label %967

967:                                              ; preds = %966, %958
  %968 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %282, align 8
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %282, align 8
  br label %973

969:                                              ; preds = %953
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %284) #13
  %970 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %282, align 8
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %282, align 8
  %971 = icmp eq %struct.evp_pkey_st* %970, null
  br i1 %971, label %973, label %972

972:                                              ; preds = %969
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %970) #13
  br label %973

973:                                              ; preds = %972, %969, %967
  %974 = phi %struct.evp_pkey_st* [ %968, %967 ], [ null, %969 ], [ null, %972 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %281) #13
  %975 = ptrtoint %struct.evp_pkey_st* %974 to i64
  %976 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %286, align 8
  store i64 %975, i64* %80, align 8
  %977 = icmp eq %struct.evp_pkey_st* %976, null
  br i1 %977, label %979, label %978

978:                                              ; preds = %973
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %976) #13
  br label %979

979:                                              ; preds = %978, %973
  %980 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 19, i32 0, i32 0, i32 0
  %981 = load %"class.net::NameConstraints"*, %"class.net::NameConstraints"** %980, align 8
  %982 = icmp eq %"class.net::NameConstraints"* %981, null
  br i1 %982, label %1037, label %983

983:                                              ; preds = %979
  %984 = ptrtoint %"class.net::NameConstraints"* %981 to i64
  %985 = load %"class.net::NameConstraints"**, %"class.net::NameConstraints"*** %200, align 8
  %986 = load %"class.net::NameConstraints"**, %"class.net::NameConstraints"*** %288, align 8
  %987 = icmp ult %"class.net::NameConstraints"** %985, %986
  %988 = ptrtoint %"class.net::NameConstraints"** %986 to i64
  br i1 %987, label %989, label %993

989:                                              ; preds = %983
  %990 = bitcast %"class.net::NameConstraints"** %985 to i64*
  store i64 %984, i64* %990, align 8
  %991 = getelementptr inbounds %"class.net::NameConstraints"*, %"class.net::NameConstraints"** %985, i64 1
  %992 = ptrtoint %"class.net::NameConstraints"** %991 to i64
  store i64 %992, i64* %289, align 8
  br label %1037

993:                                              ; preds = %983
  %994 = ptrtoint %"class.net::NameConstraints"** %985 to i64
  %995 = load i64, i64* %290, align 8
  %996 = sub i64 %994, %995
  %997 = ashr exact i64 %996, 3
  %998 = add nsw i64 %997, 1
  %999 = icmp ugt i64 %998, 2305843009213693951
  br i1 %999, label %1000, label %1002

1000:                                             ; preds = %993
  %1001 = bitcast %"class.std::__1::vector.119"* %287 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1001) #12
  unreachable

1002:                                             ; preds = %993
  %1003 = sub i64 %988, %995
  %1004 = ashr exact i64 %1003, 3
  %1005 = icmp ult i64 %1004, 1152921504606846975
  br i1 %1005, label %1006, label %1014

1006:                                             ; preds = %1002
  %1007 = ashr exact i64 %1003, 2
  %1008 = icmp ult i64 %1007, %998
  %1009 = select i1 %1008, i64 %998, i64 %1007
  %1010 = icmp eq i64 %1009, 0
  br i1 %1010, label %1019, label %1011

1011:                                             ; preds = %1006
  %1012 = icmp ugt i64 %1009, 2305843009213693951
  br i1 %1012, label %1013, label %1014

1013:                                             ; preds = %1011
  call void @abort() #12
  unreachable

1014:                                             ; preds = %1011, %1002
  %1015 = phi i64 [ %1009, %1011 ], [ 2305843009213693951, %1002 ]
  %1016 = shl i64 %1015, 3
  %1017 = call i8* @_Znwm(i64 %1016) #14
  %1018 = bitcast i8* %1017 to %"class.net::NameConstraints"**
  br label %1019

1019:                                             ; preds = %1014, %1006
  %1020 = phi i64 [ %1015, %1014 ], [ 0, %1006 ]
  %1021 = phi i8* [ %1017, %1014 ], [ null, %1006 ]
  %1022 = phi %"class.net::NameConstraints"** [ %1018, %1014 ], [ null, %1006 ]
  %1023 = getelementptr inbounds %"class.net::NameConstraints"*, %"class.net::NameConstraints"** %1022, i64 %997
  %1024 = getelementptr inbounds %"class.net::NameConstraints"*, %"class.net::NameConstraints"** %1022, i64 %1020
  %1025 = ptrtoint %"class.net::NameConstraints"** %1024 to i64
  %1026 = bitcast %"class.net::NameConstraints"** %1023 to i64*
  store i64 %984, i64* %1026, align 8
  %1027 = getelementptr inbounds %"class.net::NameConstraints"*, %"class.net::NameConstraints"** %1023, i64 1
  %1028 = ptrtoint %"class.net::NameConstraints"** %1027 to i64
  %1029 = ptrtoint %"class.net::NameConstraints"** %1022 to i64
  %1030 = icmp sgt i64 %996, 0
  br i1 %1030, label %1031, label %1033

1031:                                             ; preds = %1019
  %1032 = inttoptr i64 %995 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1021, i8* align 8 %1032, i64 %996, i1 false) #13
  br label %1033

1033:                                             ; preds = %1031, %1019
  store i64 %1029, i64* %290, align 8
  store i64 %1028, i64* %289, align 8
  store i64 %1025, i64* %291, align 8
  %1034 = icmp eq i64 %995, 0
  br i1 %1034, label %1037, label %1035

1035:                                             ; preds = %1033
  %1036 = inttoptr i64 %995 to i8*
  call void @_ZdlPv(i8* %1036) #14
  br label %1037

1037:                                             ; preds = %1035, %1033, %989, %979
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %292) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %293) #13
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %24, %"class.std::__1::basic_string"* %954) #13
  %1038 = load <2 x i64>, <2 x i64>* %23, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %293) #13
  store <2 x i64> %1038, <2 x i64>* %25, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %294) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %295) #13
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %22, %"class.std::__1::basic_string"* %472) #13
  %1039 = load <2 x i64>, <2 x i64>* %21, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %295) #13
  store <2 x i64> %1039, <2 x i64>* %27, align 16
  %1040 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %26, %"class.net::der::Input"* nonnull dereferenceable(16) %28) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %294) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %292) #13
  br i1 %1040, label %1056, label %1041

1041:                                             ; preds = %1037
  %1042 = load i64, i64* %176, align 8
  %1043 = icmp eq i64 %1042, 0
  br i1 %1043, label %1046, label %1044

1044:                                             ; preds = %1041
  %1045 = add i64 %1042, -1
  store i64 %1045, i64* %176, align 8
  br label %1046

1046:                                             ; preds = %1044, %1041
  %1047 = load i64, i64* %182, align 8
  %1048 = icmp eq i64 %1047, 0
  br i1 %1048, label %1051, label %1049

1049:                                             ; preds = %1046
  %1050 = add i64 %1047, -1
  store i64 %1050, i64* %182, align 8
  br label %1051

1051:                                             ; preds = %1049, %1046
  %1052 = load i64, i64* %179, align 8
  %1053 = icmp eq i64 %1052, 0
  br i1 %1053, label %1056, label %1054

1054:                                             ; preds = %1051
  %1055 = add i64 %1052, -1
  store i64 %1055, i64* %179, align 8
  br label %1056

1056:                                             ; preds = %1054, %1051, %1037
  %1057 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 27
  %1058 = load i8, i8* %1057, align 8, !range !2
  %1059 = icmp eq i8 %1058, 0
  br i1 %1059, label %1082, label %1060

1060:                                             ; preds = %1056
  %1061 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 28, i32 0
  %1062 = load i8, i8* %1061, align 1, !range !2
  %1063 = icmp eq i8 %1062, 0
  br i1 %1063, label %1071, label %1064

1064:                                             ; preds = %1060
  %1065 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 28, i32 1
  %1066 = load i8, i8* %1065, align 1
  %1067 = zext i8 %1066 to i64
  %1068 = load i64, i64* %176, align 8
  %1069 = icmp ugt i64 %1068, %1067
  br i1 %1069, label %1070, label %1071

1070:                                             ; preds = %1064
  store i64 %1067, i64* %176, align 8
  br label %1071

1071:                                             ; preds = %1070, %1064, %1060
  %1072 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 28, i32 2
  %1073 = load i8, i8* %1072, align 1, !range !2
  %1074 = icmp eq i8 %1073, 0
  br i1 %1074, label %1082, label %1075

1075:                                             ; preds = %1071
  %1076 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 28, i32 3
  %1077 = load i8, i8* %1076, align 1
  %1078 = zext i8 %1077 to i64
  %1079 = load i64, i64* %182, align 8
  %1080 = icmp ugt i64 %1079, %1078
  br i1 %1080, label %1081, label %1082

1081:                                             ; preds = %1075
  store i64 %1078, i64* %182, align 8
  br label %1082

1082:                                             ; preds = %1081, %1075, %1071, %1056
  %1083 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 31
  %1084 = load i8, i8* %1083, align 8, !range !2
  %1085 = icmp eq i8 %1084, 0
  br i1 %1085, label %1093, label %1086

1086:                                             ; preds = %1082
  %1087 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 32
  %1088 = load i8, i8* %1087, align 1
  %1089 = zext i8 %1088 to i64
  %1090 = load i64, i64* %179, align 8
  %1091 = icmp ugt i64 %1090, %1089
  br i1 %1091, label %1092, label %1093

1092:                                             ; preds = %1086
  store i64 %1089, i64* %179, align 8
  br label %1093

1093:                                             ; preds = %1092, %1086, %1082
  %1094 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 10
  %1095 = load i8, i8* %1094, align 8, !range !2
  %1096 = icmp eq i8 %1095, 0
  br i1 %1096, label %1101, label %1097

1097:                                             ; preds = %1093
  %1098 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 11, i32 0
  %1099 = load i8, i8* %1098, align 1, !range !2
  %1100 = icmp eq i8 %1099, 0
  br i1 %1100, label %1101, label %1103

1101:                                             ; preds = %1097, %1093
  %1102 = phi i8* [ %297, %1093 ], [ %296, %1097 ]
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %1102) #13
  br label %1103

1103:                                             ; preds = %1101, %1097
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %298) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %299) #13
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %16, %"class.std::__1::basic_string"* %954) #13
  %1104 = load <2 x i64>, <2 x i64>* %15, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %299) #13
  store <2 x i64> %1104, <2 x i64>* %17, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %300) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %301) #13
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %14, %"class.std::__1::basic_string"* %472) #13
  %1105 = load <2 x i64>, <2 x i64>* %13, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %301) #13
  store <2 x i64> %1105, <2 x i64>* %19, align 16
  %1106 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %18, %"class.net::der::Input"* nonnull dereferenceable(16) %20) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %300) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %298) #13
  br i1 %1106, label %1113, label %1107

1107:                                             ; preds = %1103
  %1108 = load i64, i64* %183, align 8
  %1109 = icmp eq i64 %1108, 0
  br i1 %1109, label %1110, label %1111

1110:                                             ; preds = %1107
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %302) #13
  br label %1113

1111:                                             ; preds = %1107
  %1112 = add i64 %1108, -1
  store i64 %1112, i64* %183, align 8
  br label %1113

1113:                                             ; preds = %1111, %1110, %1103
  %1114 = load i8, i8* %1094, align 8, !range !2
  %1115 = icmp eq i8 %1114, 0
  br i1 %1115, label %1127, label %1116

1116:                                             ; preds = %1113
  %1117 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 11, i32 1
  %1118 = load i8, i8* %1117, align 1, !range !2
  %1119 = icmp eq i8 %1118, 0
  br i1 %1119, label %1127, label %1120

1120:                                             ; preds = %1116
  %1121 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 11, i32 2
  %1122 = load i8, i8* %1121, align 1
  %1123 = zext i8 %1122 to i64
  %1124 = load i64, i64* %183, align 8
  %1125 = icmp ugt i64 %1124, %1123
  br i1 %1125, label %1126, label %1127

1126:                                             ; preds = %1120
  store i64 %1123, i64* %183, align 8
  br label %1127

1127:                                             ; preds = %1126, %1120, %1116, %1113
  %1128 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 12
  %1129 = load i8, i8* %1128, align 4, !range !2
  %1130 = icmp eq i8 %1129, 0
  br i1 %1130, label %1135, label %1131

1131:                                             ; preds = %1127
  %1132 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 14
  %1133 = call zeroext i1 @_ZNK3net3der9BitString10AssertsBitEm(%"class.net::der::BitString"* %1132, i64 5) #13
  br i1 %1133, label %1135, label %1134

1134:                                             ; preds = %1131
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %303) #13
  br label %1135

1135:                                             ; preds = %1134, %1131, %1127
  call fastcc void @_ZN3net12_GLOBAL__N_136VerifyNoUnconsumedCriticalExtensionsERKNS_17ParsedCertificateEPNS_10CertErrorsE(%"class.net::ParsedCertificate"* dereferenceable(752) %326, %"class.net::CertErrors"* %327) #13
  br label %1217

1136:                                             ; preds = %701
  %1137 = load i64, i64* %176, align 8
  %1138 = icmp eq i64 %1137, 0
  br i1 %1138, label %1141, label %1139

1139:                                             ; preds = %1136
  %1140 = add i64 %1137, -1
  store i64 %1140, i64* %176, align 8
  br label %1141

1141:                                             ; preds = %1139, %1136
  %1142 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 27
  %1143 = load i8, i8* %1142, align 8, !range !2
  %1144 = icmp eq i8 %1143, 0
  br i1 %1144, label %1154, label %1145

1145:                                             ; preds = %1141
  %1146 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 28, i32 0
  %1147 = load i8, i8* %1146, align 1, !range !2
  %1148 = icmp eq i8 %1147, 0
  br i1 %1148, label %1154, label %1149

1149:                                             ; preds = %1145
  %1150 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 28, i32 1
  %1151 = load i8, i8* %1150, align 1
  %1152 = icmp eq i8 %1151, 0
  br i1 %1152, label %1153, label %1154

1153:                                             ; preds = %1149
  store i64 0, i64* %176, align 8
  br label %1154

1154:                                             ; preds = %1153, %1149, %1145, %1141
  call fastcc void @_ZN3net12_GLOBAL__N_136VerifyNoUnconsumedCriticalExtensionsERKNS_17ParsedCertificateEPNS_10CertErrorsE(%"class.net::ParsedCertificate"* dereferenceable(752) %326, %"class.net::CertErrors"* %327) #13
  %1155 = load i64, i64* %176, align 8
  %1156 = icmp eq i64 %1155, 0
  br i1 %1156, label %1157, label %1162

1157:                                             ; preds = %1154
  %1158 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %105, align 8
  %1159 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107, align 8
  %1160 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1158, %1159
  br i1 %1160, label %1161, label %1162

1161:                                             ; preds = %1157
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %248) #13
  br label %1162

1162:                                             ; preds = %1161, %1157, %1154
  %1163 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 10
  %1164 = load i8, i8* %1163, align 8, !range !2
  %1165 = icmp eq i8 %1164, 0
  br i1 %1165, label %1174, label %1166

1166:                                             ; preds = %1162
  %1167 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 11, i32 0
  %1168 = load i8, i8* %1167, align 1, !range !2
  %1169 = icmp eq i8 %1168, 0
  br i1 %1169, label %1170, label %1188

1170:                                             ; preds = %1166
  %1171 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 11, i32 1
  %1172 = load i8, i8* %1171, align 1, !range !2
  %1173 = icmp eq i8 %1172, 0
  br i1 %1173, label %1174, label %1195

1174:                                             ; preds = %1170, %1162
  %1175 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 12
  %1176 = load i8, i8* %1175, align 4, !range !2
  %1177 = icmp eq i8 %1176, 0
  br i1 %1177, label %1196, label %1178

1178:                                             ; preds = %1174
  %1179 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 14
  %1180 = call zeroext i1 @_ZNK3net3der9BitString10AssertsBitEm(%"class.net::der::BitString"* %1179, i64 5) #13
  br i1 %1180, label %1181, label %1196

1181:                                             ; preds = %1178
  %1182 = load i8, i8* %1163, align 8, !range !2
  %1183 = icmp eq i8 %1182, 0
  br i1 %1183, label %1195, label %1184

1184:                                             ; preds = %1181
  %1185 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 11, i32 0
  %1186 = load i8, i8* %1185, align 1, !range !2
  %1187 = icmp eq i8 %1186, 0
  br i1 %1187, label %1195, label %1188

1188:                                             ; preds = %1184, %1166
  %1189 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 12
  %1190 = load i8, i8* %1189, align 4, !range !2
  %1191 = icmp eq i8 %1190, 0
  br i1 %1191, label %1196, label %1192

1192:                                             ; preds = %1188
  %1193 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 14
  %1194 = call zeroext i1 @_ZNK3net3der9BitString10AssertsBitEm(%"class.net::der::BitString"* %1193, i64 5) #13
  br i1 %1194, label %1196, label %1195

1195:                                             ; preds = %1192, %1184, %1181, %1170
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %304) #13
  br label %1196

1196:                                             ; preds = %1195, %1192, %1188, %1178, %1174
  %1197 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %326, i64 0, i32 6, i32 7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #13
  store i64 0, i64* %307, align 8
  %1198 = call zeroext i1 @_ZN3net14ParsePublicKeyERKNS_3der5InputEPNSt3__110unique_ptrI11evp_pkey_stN4bssl8internal7DeleterIS6_EEEE(%"class.net::der::Input"* dereferenceable(16) %1197, %"class.std::__1::unique_ptr.126"* nonnull %12) #13
  br i1 %1198, label %1199, label %1208

1199:                                             ; preds = %1196
  %1200 = load %"class.net::VerifyCertificateChainDelegate"*, %"class.net::VerifyCertificateChainDelegate"** %82, align 8
  %1201 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %306, align 8
  %1202 = bitcast %"class.net::VerifyCertificateChainDelegate"* %1200 to i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)***
  %1203 = load i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)**, i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)*** %1202, align 8
  %1204 = getelementptr inbounds i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)*, i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)** %1203, i64 1
  %1205 = load i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)*, i1 (%"class.net::VerifyCertificateChainDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)** %1204, align 8
  %1206 = call zeroext i1 %1205(%"class.net::VerifyCertificateChainDelegate"* %1200, %struct.evp_pkey_st* %1201, %"class.net::CertErrors"* %327) #13
  br i1 %1206, label %1213, label %1207

1207:                                             ; preds = %1199
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %285) #13
  br label %1213

1208:                                             ; preds = %1196
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %327, i8* %284) #13
  %1209 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %306, align 8
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %306, align 8
  %1210 = icmp eq %struct.evp_pkey_st* %1209, null
  br i1 %1210, label %1212, label %1211

1211:                                             ; preds = %1208
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %1209) #13
  br label %1212

1212:                                             ; preds = %1211, %1208
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #13
  br label %1217

1213:                                             ; preds = %1207, %1199
  %1214 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %306, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #13
  %1215 = icmp eq %struct.evp_pkey_st* %1214, null
  br i1 %1215, label %1217, label %1216

1216:                                             ; preds = %1213
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %1214) #13
  br label %1217

1217:                                             ; preds = %1216, %1213, %1212, %1135, %428
  %1218 = add nuw i64 %320, 1
  %1219 = load i64, i64* %94, align 8
  %1220 = load i64, i64* %95, align 8
  %1221 = sub i64 %1219, %1220
  %1222 = ashr exact i64 %1221, 3
  %1223 = icmp ult i64 %1218, %1222
  %1224 = inttoptr i64 %1220 to %class.scoped_refptr*
  br i1 %1223, label %317, label %1225

1225:                                             ; preds = %1217, %173
  %1226 = icmp eq %"class.std::__1::set"* %9, null
  br i1 %1226, label %1285, label %1227

1227:                                             ; preds = %1225
  %1228 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0
  %1229 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %1230 = bitcast %"class.std::__1::__tree_end_node"* %1229 to %"class.std::__1::__tree_node"**
  %1231 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1230, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %1228, %"class.std::__1::__tree_node"* %1231) #13
  %1232 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %1232, align 8
  %1233 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1229, %"class.std::__1::__tree_end_node"** %1233, align 8
  %1234 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1229, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %1234, align 8
  %1235 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %105, align 8
  %1236 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %107, align 8
  %1237 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1235, %1236
  br i1 %1237, label %1238, label %1244

1238:                                             ; preds = %1227
  %1239 = bitcast %"class.net::der::Input"* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1239) #13
  br label %1283

1240:                                             ; preds = %1244
  %1241 = load i64, i64* %1232, align 8
  %1242 = icmp ugt i64 %1241, 1
  %1243 = bitcast %"class.net::der::Input"* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1243) #13
  br i1 %1242, label %1250, label %1283

1244:                                             ; preds = %1227, %1244
  %1245 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %1248, %1244 ], [ %1235, %1227 ]
  %1246 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1245, i64 0, i32 0
  %1247 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.85"* %1228, %"class.net::der::Input"* dereferenceable(16) %1246, %"class.net::der::Input"* dereferenceable(16) %1246) #13
  %1248 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1245, i64 1
  %1249 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1248, %1236
  br i1 %1249, label %1240, label %1244

1250:                                             ; preds = %1240
  %1251 = call { i8*, i64 } @_ZN3net9AnyPolicyEv() #13
  %1252 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %73, i64 0, i32 0
  %1253 = extractvalue { i8*, i64 } %1251, 0
  store i8* %1253, i8** %1252, align 8
  %1254 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %73, i64 0, i32 1
  %1255 = extractvalue { i8*, i64 } %1251, 1
  store i64 %1255, i64* %1254, align 8
  %1256 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1230, align 8
  %1257 = icmp eq %"class.std::__1::__tree_node"* %1256, null
  br i1 %1257, label %1273, label %1258

1258:                                             ; preds = %1250, %1269
  %1259 = phi %"class.std::__1::__tree_node"* [ %1271, %1269 ], [ %1256, %1250 ]
  %1260 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1259, i64 0, i32 1
  %1261 = call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %73, %"class.net::der::Input"* dereferenceable(16) %1260) #13
  br i1 %1261, label %1262, label %1264

1262:                                             ; preds = %1258
  %1263 = bitcast %"class.std::__1::__tree_node"* %1259 to %"class.std::__1::__tree_node"**
  br label %1269

1264:                                             ; preds = %1258
  %1265 = call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %1260, %"class.net::der::Input"* nonnull dereferenceable(16) %73) #13
  br i1 %1265, label %1266, label %1274

1266:                                             ; preds = %1264
  %1267 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1259, i64 0, i32 0, i32 1
  %1268 = bitcast %"class.std::__1::__tree_node_base"** %1267 to %"class.std::__1::__tree_node"**
  br label %1269

1269:                                             ; preds = %1266, %1262
  %1270 = phi %"class.std::__1::__tree_node"** [ %1263, %1262 ], [ %1268, %1266 ]
  %1271 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1270, align 8
  %1272 = icmp eq %"class.std::__1::__tree_node"* %1271, null
  br i1 %1272, label %1273, label %1258

1273:                                             ; preds = %1269, %1250
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1243) #13
  br label %1285

1274:                                             ; preds = %1264
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1243) #13
  %1275 = bitcast [1 x %"class.net::der::Input"]* %74 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1275) #13
  %1276 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %74, i64 0, i64 0
  %1277 = call { i8*, i64 } @_ZN3net9AnyPolicyEv() #13
  %1278 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %74, i64 0, i64 0, i32 0
  %1279 = extractvalue { i8*, i64 } %1277, 0
  store i8* %1279, i8** %1278, align 8
  %1280 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %74, i64 0, i64 0, i32 1
  %1281 = extractvalue { i8*, i64 } %1277, 1
  store i64 %1281, i64* %1280, align 8
  %1282 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %74, i64 0, i64 1
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE15__assign_uniqueIPKS3_EEvT_SC_(%"class.std::__1::__tree.85"* %1228, %"class.net::der::Input"* nonnull %1276, %"class.net::der::Input"* %1282) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1275) #13
  br label %1285

1283:                                             ; preds = %1240, %1238
  %1284 = phi i8* [ %1239, %1238 ], [ %1243, %1240 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1284) #13
  br label %1285

1285:                                             ; preds = %461, %88, %99, %330, %332, %459, %1225, %1273, %1274, %1283
  %1286 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 5, i32 0, i32 0, i32 0
  %1287 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %1286, align 8
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %1286, align 8
  %1288 = icmp eq %struct.evp_pkey_st* %1287, null
  br i1 %1288, label %1290, label %1289

1289:                                             ; preds = %1285
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %1287) #13
  br label %1290

1290:                                             ; preds = %1289, %1285
  %1291 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 1, i32 0, i32 0
  %1292 = load %"class.net::NameConstraints"**, %"class.net::NameConstraints"*** %1291, align 8
  %1293 = icmp eq %"class.net::NameConstraints"** %1292, null
  br i1 %1293, label %1299, label %1294

1294:                                             ; preds = %1290
  %1295 = ptrtoint %"class.net::NameConstraints"** %1292 to i64
  %1296 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 1, i32 0, i32 1
  %1297 = bitcast %"class.net::NameConstraints"*** %1296 to i64*
  store i64 %1295, i64* %1297, align 8
  %1298 = bitcast %"class.net::NameConstraints"** %1292 to i8*
  call void @_ZdlPv(i8* %1298) #14
  br label %1299

1299:                                             ; preds = %1294, %1290
  %1300 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %1301 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %1300, align 8
  %1302 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1301, null
  br i1 %1302, label %1321, label %1303

1303:                                             ; preds = %1299
  %1304 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1301 to i8*
  %1305 = getelementptr inbounds %"class.net::(anonymous namespace)::PathVerifier", %"class.net::(anonymous namespace)::PathVerifier"* %75, i64 0, i32 0, i32 0, i32 0, i32 1
  %1306 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %1305, align 8
  %1307 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1306, %1301
  br i1 %1307, label %1319, label %1308

1308:                                             ; preds = %1303, %1308
  %1309 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %1310, %1308 ], [ %1306, %1303 ]
  %1310 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1309, i64 -1
  %1311 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1309, i64 -1, i32 2, i32 0
  %1312 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1309, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  %1313 = bitcast %"class.std::__1::__tree_end_node"* %1312 to %"class.std::__1::__tree_node"**
  %1314 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1313, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %1311, %"class.std::__1::__tree_node"* %1314) #13
  %1315 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1310, %1301
  br i1 %1315, label %1316, label %1308

1316:                                             ; preds = %1308
  %1317 = bitcast %"class.net::(anonymous namespace)::PathVerifier"* %75 to i8**
  %1318 = load i8*, i8** %1317, align 8
  br label %1319

1319:                                             ; preds = %1316, %1303
  %1320 = phi i8* [ %1318, %1316 ], [ %1304, %1303 ]
  store %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1301, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %1305, align 8
  call void @_ZdlPv(i8* %1320) #14
  br label %1321

1321:                                             ; preds = %1299, %1319
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %76) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"*) unnamed_addr #5

declare %"class.net::CertErrors"* @_ZN3net14CertPathErrors14GetOtherErrorsEv(%"class.net::CertPathErrors"*) local_unnamed_addr #5

declare void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"*, i8*) local_unnamed_addr #5

declare %"class.net::CertErrors"* @_ZN3net14CertPathErrors16GetErrorsForCertEm(%"class.net::CertPathErrors"*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16vectorIN3net12_GLOBAL__N_115ValidPolicyTree4NodeENS_9allocatorIS4_EEE9push_backEOS4_(%"class.std::__1::vector.112"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* dereferenceable(56)) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %0, i64 0, i32 0, i32 1
  %4 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %5, align 8
  %7 = icmp ult %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %4, %6
  %8 = ptrtoint %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %6 to i64
  br i1 %7, label %9, label %39

9:                                                ; preds = %2
  %10 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %4 to i8*
  %11 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 32, i1 false) #13
  %12 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %4, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1, i64 0, i32 2
  %14 = bitcast %"class.std::__1::set"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::set"* %12 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %4, i64 0, i32 2, i32 0, i32 1
  %18 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1, i64 0, i32 2, i32 0, i32 1
  %19 = bitcast %"class.std::__1::__compressed_pair.86"* %18 to i64*
  %20 = bitcast %"class.std::__1::__compressed_pair.86"* %17 to i64*
  %21 = load i64, i64* %19, align 8
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %4, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %24 = load i64, i64* %22, align 8
  store i64 %24, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  %26 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %4, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  br i1 %25, label %27, label %29

27:                                               ; preds = %9
  %28 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %26, %"class.std::__1::__tree_end_node"** %28, align 8
  br label %35

29:                                               ; preds = %9
  %30 = inttoptr i64 %21 to %"class.std::__1::__tree_node_base"*
  %31 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %13, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %30, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %26, %"class.std::__1::__tree_end_node"** %32, align 8
  %33 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %33, %"class.std::__1::__tree_end_node"** %31, align 8
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #13
  br label %35

35:                                               ; preds = %27, %29
  %36 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %4, i64 1
  %37 = ptrtoint %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %36 to i64
  %38 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %3 to i64*
  store i64 %37, i64* %38, align 8
  br label %159

39:                                               ; preds = %2
  %40 = ptrtoint %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %4 to i64
  %41 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %3 to i64*
  %42 = bitcast %"class.std::__1::vector.112"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %40, %43
  %45 = sdiv exact i64 %44, 56
  %46 = add nsw i64 %45, 1
  %47 = icmp ugt i64 %46, 329406144173384850
  br i1 %47, label %48, label %50

48:                                               ; preds = %39
  %49 = bitcast %"class.std::__1::vector.112"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %49) #12
  unreachable

50:                                               ; preds = %39
  %51 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %5 to i64*
  %52 = sub i64 %8, %43
  %53 = sdiv exact i64 %52, 56
  %54 = icmp ult i64 %53, 164703072086692425
  br i1 %54, label %55, label %60

55:                                               ; preds = %50
  %56 = shl nsw i64 %53, 1
  %57 = icmp ult i64 %56, %46
  %58 = select i1 %57, i64 %46, i64 %56
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %55, %50
  %61 = phi i64 [ %58, %55 ], [ 329406144173384850, %50 ]
  %62 = mul i64 %61, 56
  %63 = tail call i8* @_Znwm(i64 %62) #14
  %64 = bitcast i8* %63 to %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*
  br label %65

65:                                               ; preds = %60, %55
  %66 = phi i64 [ %61, %60 ], [ 0, %55 ]
  %67 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %64, %60 ], [ null, %55 ]
  %68 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %67, i64 %45
  %69 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %67, i64 %66
  %70 = ptrtoint %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %69 to i64
  %71 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %68 to i8*
  %72 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 32, i1 false) #13
  %73 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %67, i64 %45, i32 2
  %74 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1, i64 0, i32 2
  %75 = bitcast %"class.std::__1::set"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.std::__1::set"* %73 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %67, i64 %45, i32 2, i32 0, i32 1
  %79 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.std::__1::__compressed_pair.86"* %79 to i64*
  %81 = bitcast %"class.std::__1::__compressed_pair.86"* %78 to i64*
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %67, i64 %45, i32 2, i32 0, i32 2, i32 0, i32 0
  %85 = load i64, i64* %83, align 8
  store i64 %85, i64* %84, align 8
  %86 = icmp eq i64 %85, 0
  %87 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %67, i64 %45, i32 2, i32 0, i32 1, i32 0, i32 0
  br i1 %86, label %88, label %90

88:                                               ; preds = %65
  %89 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %73, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %87, %"class.std::__1::__tree_end_node"** %89, align 8
  br label %96

90:                                               ; preds = %65
  %91 = inttoptr i64 %82 to %"class.std::__1::__tree_node_base"*
  %92 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %74, i64 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %91, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %87, %"class.std::__1::__tree_end_node"** %93, align 8
  %94 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %94, %"class.std::__1::__tree_end_node"** %92, align 8
  %95 = bitcast %"class.std::__1::__tree_end_node"* %94 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false) #13
  br label %96

96:                                               ; preds = %90, %88
  %97 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %68, i64 1
  %98 = ptrtoint %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %97 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %0, i64 0, i32 0, i32 0
  %100 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %99, align 8
  %101 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %3, align 8
  %102 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %101, %100
  br i1 %102, label %103, label %105

103:                                              ; preds = %96
  %104 = ptrtoint %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %100 to i64
  br label %140

105:                                              ; preds = %96, %135
  %106 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %108, %135 ], [ %68, %96 ]
  %107 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %109, %135 ], [ %101, %96 ]
  %108 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %106, i64 -1
  %109 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %107, i64 -1
  %110 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %108 to i8*
  %111 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 32, i1 false) #13
  %112 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %106, i64 -1, i32 2
  %113 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %107, i64 -1, i32 2
  %114 = bitcast %"class.std::__1::set"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.std::__1::set"* %112 to i64*
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %106, i64 -1, i32 2, i32 0, i32 1
  %118 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %107, i64 -1, i32 2, i32 0, i32 1
  %119 = bitcast %"class.std::__1::__compressed_pair.86"* %118 to i64*
  %120 = bitcast %"class.std::__1::__compressed_pair.86"* %117 to i64*
  %121 = load i64, i64* %119, align 8
  store i64 %121, i64* %120, align 8
  %122 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %107, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %106, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %124 = load i64, i64* %122, align 8
  store i64 %124, i64* %123, align 8
  %125 = icmp eq i64 %124, 0
  %126 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %106, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  br i1 %125, label %127, label %129

127:                                              ; preds = %105
  %128 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %112, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %126, %"class.std::__1::__tree_end_node"** %128, align 8
  br label %135

129:                                              ; preds = %105
  %130 = inttoptr i64 %121 to %"class.std::__1::__tree_node_base"*
  %131 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %113, i64 0, i32 0, i32 0
  %132 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %130, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %126, %"class.std::__1::__tree_end_node"** %132, align 8
  %133 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %107, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %133, %"class.std::__1::__tree_end_node"** %131, align 8
  %134 = bitcast %"class.std::__1::__tree_end_node"* %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 16, i1 false) #13
  br label %135

135:                                              ; preds = %129, %127
  %136 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %109, %100
  br i1 %136, label %137, label %105

137:                                              ; preds = %135
  %138 = load i64, i64* %42, align 8
  %139 = load %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"** %3, align 8
  br label %140

140:                                              ; preds = %137, %103
  %141 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %100, %103 ], [ %139, %137 ]
  %142 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %68, %103 ], [ %108, %137 ]
  %143 = phi i64 [ %104, %103 ], [ %138, %137 ]
  %144 = ptrtoint %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %142 to i64
  store i64 %144, i64* %42, align 8
  store i64 %98, i64* %41, align 8
  store i64 %70, i64* %51, align 8
  %145 = inttoptr i64 %143 to %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"*
  %146 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %141, %145
  br i1 %146, label %155, label %147

147:                                              ; preds = %140, %147
  %148 = phi %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* [ %149, %147 ], [ %141, %140 ]
  %149 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %148, i64 -1
  %150 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %148, i64 -1, i32 2, i32 0
  %151 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %148, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  %152 = bitcast %"class.std::__1::__tree_end_node"* %151 to %"class.std::__1::__tree_node"**
  %153 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %152, align 8
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %150, %"class.std::__1::__tree_node"* %153) #13
  %154 = icmp eq %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %149, %145
  br i1 %154, label %155, label %147

155:                                              ; preds = %147, %140
  %156 = icmp eq i64 %143, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  %158 = inttoptr i64 %143 to i8*
  tail call void @_ZdlPv(i8* %158) #14
  br label %159

159:                                              ; preds = %157, %155, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE15__assign_uniqueIPKS3_EEvT_SC_(%"class.std::__1::__tree.85"*, %"class.net::der::Input"*, %"class.net::der::Input"*) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %173, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::__tree.85"* %0 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %13, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_end_node"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #13
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  %19 = bitcast %"class.std::__1::__tree_node_base"* %17 to %"class.std::__1::__tree_node"*
  %20 = select i1 %18, %"class.std::__1::__tree_node"* %10, %"class.std::__1::__tree_node"* %19
  %21 = ptrtoint %"class.std::__1::__tree_node"* %20 to i64
  %22 = icmp eq %"class.std::__1::__tree_node"* %20, null
  br i1 %22, label %153, label %23

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 2
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::__tree_node"* %20 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, %28
  br i1 %31, label %32, label %51

32:                                               ; preds = %27
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %29, align 8
  %33 = bitcast %"class.std::__1::__tree_end_node"** %24 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %72, label %38

38:                                               ; preds = %32, %47
  %39 = phi %"class.std::__1::__tree_node_base"* [ %48, %47 ], [ %36, %32 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 1
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43, %38
  %48 = phi %"class.std::__1::__tree_node_base"* [ %41, %38 ], [ %45, %43 ]
  br label %38

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::__tree_node_base"* %39 to %"class.std::__1::__tree_node"*
  br label %72

51:                                               ; preds = %27
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %52, align 8
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node"*
  br label %72

59:                                               ; preds = %51, %68
  %60 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %51 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64, %59
  %69 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %66, %64 ]
  br label %59

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::__tree_node_base"* %60 to %"class.std::__1::__tree_node"*
  br label %72

72:                                               ; preds = %23, %32, %49, %57, %70
  %73 = phi %"class.std::__1::__tree_node"* [ %50, %49 ], [ %58, %57 ], [ %71, %70 ], [ null, %23 ], [ %34, %32 ]
  %74 = ptrtoint %"class.std::__1::__tree_node"* %73 to i64
  %75 = icmp eq %"class.net::der::Input"* %1, %2
  %76 = or i1 %22, %75
  br i1 %76, label %153, label %77

77:                                               ; preds = %72, %143
  %78 = phi %"class.std::__1::__tree_node"* [ %147, %143 ], [ %20, %72 ]
  %79 = phi %"class.net::der::Input"* [ %146, %143 ], [ %1, %72 ]
  %80 = phi i64 [ %145, %143 ], [ %74, %72 ]
  %81 = phi i64 [ %144, %143 ], [ %21, %72 ]
  %82 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE20__node_assign_uniqueERKS3_PNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %0, %"class.net::der::Input"* dereferenceable(16) %79, %"class.std::__1::__tree_node"* nonnull %78)
  %83 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %82, 1
  %84 = and i8 %83, 1
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %143, label %86

86:                                               ; preds = %77
  %87 = icmp eq i64 %80, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %79, i64 1
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %0, %"class.std::__1::__tree_node"* null) #13
  br label %173

90:                                               ; preds = %86
  %91 = inttoptr i64 %80 to %"class.std::__1::__tree_node"*
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %91, i64 0, i32 0, i32 2
  %93 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %92, align 8
  %94 = icmp eq %"class.std::__1::__tree_end_node"* %93, null
  br i1 %94, label %140, label %95

95:                                               ; preds = %90
  %96 = inttoptr i64 %80 to %"class.std::__1::__tree_node_base"*
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, %96
  br i1 %99, label %100, label %119

100:                                              ; preds = %95
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %97, align 8
  %101 = bitcast %"class.std::__1::__tree_end_node"** %92 to %"class.std::__1::__tree_node"**
  %102 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %101, align 8
  %103 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %102, i64 0, i32 0, i32 1
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, null
  br i1 %105, label %140, label %106

106:                                              ; preds = %100, %115
  %107 = phi %"class.std::__1::__tree_node_base"* [ %116, %115 ], [ %104, %100 ]
  %108 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %107, i64 0, i32 0, i32 0
  %109 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8
  %110 = icmp eq %"class.std::__1::__tree_node_base"* %109, null
  br i1 %110, label %111, label %115

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %107, i64 0, i32 1
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %111, %106
  %116 = phi %"class.std::__1::__tree_node_base"* [ %109, %106 ], [ %113, %111 ]
  br label %106

117:                                              ; preds = %111
  %118 = bitcast %"class.std::__1::__tree_node_base"* %107 to %"class.std::__1::__tree_node"*
  br label %140

119:                                              ; preds = %95
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %120, align 8
  %121 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %92, align 8
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 0, i32 0
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node_base"* %123, null
  br i1 %124, label %125, label %127

125:                                              ; preds = %119
  %126 = bitcast %"class.std::__1::__tree_end_node"* %121 to %"class.std::__1::__tree_node"*
  br label %140

127:                                              ; preds = %119, %136
  %128 = phi %"class.std::__1::__tree_node_base"* [ %137, %136 ], [ %123, %119 ]
  %129 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %128, i64 0, i32 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, null
  br i1 %131, label %132, label %136

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %128, i64 0, i32 1
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node_base"* %134, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %132, %127
  %137 = phi %"class.std::__1::__tree_node_base"* [ %130, %127 ], [ %134, %132 ]
  br label %127

138:                                              ; preds = %132
  %139 = bitcast %"class.std::__1::__tree_node_base"* %128 to %"class.std::__1::__tree_node"*
  br label %140

140:                                              ; preds = %138, %125, %117, %100, %90
  %141 = phi %"class.std::__1::__tree_node"* [ %118, %117 ], [ %126, %125 ], [ %139, %138 ], [ null, %90 ], [ %102, %100 ]
  %142 = ptrtoint %"class.std::__1::__tree_node"* %141 to i64
  br label %143

143:                                              ; preds = %140, %77
  %144 = phi i64 [ %81, %77 ], [ %80, %140 ]
  %145 = phi i64 [ %80, %77 ], [ %142, %140 ]
  %146 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %79, i64 1
  %147 = inttoptr i64 %144 to %"class.std::__1::__tree_node"*
  %148 = icmp eq i64 %144, 0
  %149 = icmp eq %"class.net::der::Input"* %146, %2
  %150 = or i1 %148, %149
  br i1 %150, label %151, label %77

151:                                              ; preds = %143
  %152 = inttoptr i64 %144 to %"class.std::__1::__tree_node"*
  br label %153

153:                                              ; preds = %151, %7, %72
  %154 = phi i64 [ %74, %72 ], [ %21, %7 ], [ %145, %151 ]
  %155 = phi %"class.net::der::Input"* [ %1, %72 ], [ %1, %7 ], [ %146, %151 ]
  %156 = phi %"class.std::__1::__tree_node"* [ %20, %72 ], [ null, %7 ], [ %152, %151 ]
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %0, %"class.std::__1::__tree_node"* %156) #13
  %157 = inttoptr i64 %154 to %"class.std::__1::__tree_node"*
  %158 = icmp eq i64 %154, 0
  br i1 %158, label %173, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %157, i64 0, i32 0, i32 2
  %161 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %160, align 8
  %162 = icmp eq %"class.std::__1::__tree_end_node"* %161, null
  br i1 %162, label %171, label %163

163:                                              ; preds = %159, %163
  %164 = phi %"class.std::__1::__tree_end_node"* [ %167, %163 ], [ %161, %159 ]
  %165 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %164, i64 2
  %166 = bitcast %"class.std::__1::__tree_end_node"* %165 to %"class.std::__1::__tree_end_node"**
  %167 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %166, align 8
  %168 = icmp eq %"class.std::__1::__tree_end_node"* %167, null
  br i1 %168, label %169, label %163

169:                                              ; preds = %163
  %170 = bitcast %"class.std::__1::__tree_end_node"* %164 to %"class.std::__1::__tree_node"*
  br label %171

171:                                              ; preds = %169, %159
  %172 = phi %"class.std::__1::__tree_node"* [ %157, %159 ], [ %170, %169 ]
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %0, %"class.std::__1::__tree_node"* %172) #13
  br label %173

173:                                              ; preds = %88, %171, %153, %3
  %174 = phi %"class.net::der::Input"* [ %1, %3 ], [ %155, %153 ], [ %155, %171 ], [ %89, %88 ]
  %175 = icmp eq %"class.net::der::Input"* %174, %2
  br i1 %175, label %181, label %176

176:                                              ; preds = %173, %176
  %177 = phi %"class.net::der::Input"* [ %179, %176 ], [ %174, %173 ]
  %178 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.85"* %0, %"class.net::der::Input"* dereferenceable(16) %177, %"class.net::der::Input"* dereferenceable(16) %177) #13
  %179 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %177, i64 1
  %180 = icmp eq %"class.net::der::Input"* %179, %2
  br i1 %180, label %181, label %176

181:                                              ; preds = %176, %173
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE20__node_assign_uniqueERKS3_PNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"*, %"class.net::der::Input"* dereferenceable(16), %"class.std::__1::__tree_node"*) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %31, %8
  %11 = phi %"class.std::__1::__tree_node"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %14 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %1, %"class.net::der::Input"* dereferenceable(16) %13) #13
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %13, %"class.net::der::Input"* dereferenceable(16) %1) #13
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node"*
  br label %10

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %19, %27, %29, %35
  %38 = phi %"class.std::__1::__tree_end_node"* [ %4, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %12, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node"* %41, null
  br i1 %42, label %43, label %66

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2, i64 0, i32 1
  %45 = bitcast %"class.net::der::Input"* %44 to i8*
  %46 = bitcast %"class.net::der::Input"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false)
  %47 = bitcast %"class.std::__1::__tree_node"* %2 to %"class.std::__1::__tree_node_base"*
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2, i64 0, i32 0, i32 2
  %49 = bitcast %"class.std::__1::__tree_node"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %48, align 8
  store %"class.std::__1::__tree_node"* %2, %"class.std::__1::__tree_node"** %40, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %43
  %56 = ptrtoint %"class.std::__1::__tree_node_base"* %53 to i64
  %57 = bitcast %"class.std::__1::__tree.85"* %0 to i64*
  store i64 %56, i64* %57, align 8
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %59

59:                                               ; preds = %43, %55
  %60 = phi %"class.std::__1::__tree_node_base"* [ %47, %43 ], [ %58, %55 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"* %60) #13
  %63 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 2, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %59, %37
  %67 = phi i8 [ 1, %59 ], [ 0, %37 ]
  %68 = phi %"class.std::__1::__tree_node"* [ %2, %59 ], [ %41, %37 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %68, i64 0, i32 0, i32 0
  %70 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %69, 0
  %71 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %70, i8 %67, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %71
}

declare zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #3 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.85"*, %"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %31, %8
  %11 = phi %"class.std::__1::__tree_node"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %14 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %1, %"class.net::der::Input"* dereferenceable(16) %13) #13
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %13, %"class.net::der::Input"* dereferenceable(16) %1) #13
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node"*
  br label %10

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %19, %27, %29, %35
  %38 = phi %"class.std::__1::__tree_end_node"* [ %4, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %12, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node"* %41, null
  br i1 %42, label %43, label %68

43:                                               ; preds = %37
  %44 = tail call i8* @_Znwm(i64 48) #14, !noalias !3
  %45 = getelementptr inbounds i8, i8* %44, i64 32
  %46 = bitcast %"class.net::der::Input"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false) #13, !noalias !3
  %47 = bitcast i8* %44 to %"class.std::__1::__tree_node"*
  %48 = bitcast i8* %44 to %"class.std::__1::__tree_node_base"*
  %49 = getelementptr inbounds i8, i8* %44, i64 16
  %50 = bitcast i8* %49 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %50, align 8
  %51 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8**
  store i8* %44, i8** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %43
  %58 = ptrtoint %"class.std::__1::__tree_node_base"* %55 to i64
  %59 = bitcast %"class.std::__1::__tree.85"* %0 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %61

61:                                               ; preds = %57, %43
  %62 = phi %"class.std::__1::__tree_node_base"* [ %48, %43 ], [ %60, %57 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %64, %"class.std::__1::__tree_node_base"* %62) #13
  %65 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8
  br label %68

68:                                               ; preds = %61, %37
  %69 = phi i8 [ 1, %61 ], [ 0, %37 ]
  %70 = phi %"class.std::__1::__tree_node"* [ %47, %61 ], [ %41, %37 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %70, i64 0, i32 0, i32 0
  %72 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %71, 0
  %73 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %72, i8 %69, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %73
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_122VerifyExtendedKeyUsageERKNS_17ParsedCertificateENS_10KeyPurposeEPNS_10CertErrorsE(%"class.net::ParsedCertificate"* nocapture readonly dereferenceable(752), i32, %"class.net::CertErrors"*) unnamed_addr #3 {
  %4 = alloca %"class.net::der::Input", align 8
  %5 = alloca %"class.net::der::Input", align 8
  %6 = alloca %"class.net::der::Input", align 8
  %7 = alloca %"class.net::der::Input", align 8
  %8 = alloca %"class.net::der::Input", align 8
  switch i32 %1, label %116 [
    i32 2, label %83
    i32 1, label %9
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %0, i64 0, i32 15
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %116, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %0, i64 0, i32 16, i32 0, i32 0
  %15 = load %"class.net::der::Input"*, %"class.net::der::Input"** %14, align 8
  %16 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %0, i64 0, i32 16, i32 0, i32 1
  %17 = load %"class.net::der::Input"*, %"class.net::der::Input"** %16, align 8
  %18 = icmp eq %"class.net::der::Input"* %15, %17
  br i1 %18, label %81, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.net::der::Input"* %4 to i8*
  %21 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %4, i64 0, i32 1
  %23 = bitcast %"class.net::der::Input"* %5 to i8*
  %24 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %5, i64 0, i32 0
  %25 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %5, i64 0, i32 1
  br label %28

26:                                               ; preds = %34
  %27 = icmp eq %"class.net::der::Input"* %39, %17
  br i1 %27, label %40, label %28

28:                                               ; preds = %19, %26
  %29 = phi %"class.net::der::Input"* [ %15, %19 ], [ %39, %26 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #13
  %30 = call { i8*, i64 } @_ZN3net6AnyEKUEv() #13
  %31 = extractvalue { i8*, i64 } %30, 0
  store i8* %31, i8** %21, align 8
  %32 = extractvalue { i8*, i64 } %30, 1
  store i64 %32, i64* %22, align 8
  %33 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %29, %"class.net::der::Input"* nonnull dereferenceable(16) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #13
  br i1 %33, label %116, label %34

34:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #13
  %35 = call { i8*, i64 } @_ZN3net10ServerAuthEv() #13
  %36 = extractvalue { i8*, i64 } %35, 0
  store i8* %36, i8** %24, align 8
  %37 = extractvalue { i8*, i64 } %35, 1
  store i64 %37, i64* %25, align 8
  %38 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %29, %"class.net::der::Input"* nonnull dereferenceable(16) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #13
  %39 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %29, i64 1
  br i1 %38, label %116, label %26

40:                                               ; preds = %26
  %41 = load %"class.net::der::Input"*, %"class.net::der::Input"** %14, align 8
  %42 = load %"class.net::der::Input"*, %"class.net::der::Input"** %16, align 8
  %43 = icmp eq %"class.net::der::Input"* %41, %42
  br i1 %43, label %81, label %44

44:                                               ; preds = %40
  %45 = bitcast %"class.net::der::Input"* %6 to i8*
  %46 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %6, i64 0, i32 0
  %47 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %6, i64 0, i32 1
  br label %48

48:                                               ; preds = %48, %44
  %49 = phi i8 [ 0, %44 ], [ %55, %48 ]
  %50 = phi %"class.net::der::Input"* [ %41, %44 ], [ %56, %48 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #13
  %51 = call { i8*, i64 } @_ZN3net25NetscapeServerGatedCryptoEv() #13
  %52 = extractvalue { i8*, i64 } %51, 0
  store i8* %52, i8** %46, align 8
  %53 = extractvalue { i8*, i64 } %51, 1
  store i64 %53, i64* %47, align 8
  %54 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %50, %"class.net::der::Input"* nonnull dereferenceable(16) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #13
  %55 = select i1 %54, i8 1, i8 %49
  %56 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %50, i64 1
  %57 = icmp eq %"class.net::der::Input"* %56, %42
  %58 = or i1 %54, %57
  br i1 %58, label %59, label %48

59:                                               ; preds = %48
  %60 = and i8 %55, 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %81, label %62

62:                                               ; preds = %59
  %63 = load i8*, i8** @_ZN3net11cert_errors36kEkuLacksServerAuthButHasGatedCryptoE, align 8
  call void @_ZN3net10CertErrors10AddWarningEPKv(%"class.net::CertErrors"* %2, i8* %63) #13
  %64 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %0, i64 0, i32 10
  %65 = load i8, i8* %64, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %0, i64 0, i32 11, i32 0
  %69 = load i8, i8* %68, align 1, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %81, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %73 = load %"class.net::SignatureAlgorithm"*, %"class.net::SignatureAlgorithm"** %72, align 8
  %74 = getelementptr inbounds %"class.net::SignatureAlgorithm", %"class.net::SignatureAlgorithm"* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.net::SignatureAlgorithm", %"class.net::SignatureAlgorithm"* %73, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 3
  br i1 %80, label %116, label %81

81:                                               ; preds = %13, %40, %62, %67, %59, %71, %77
  %82 = load i8*, i8** @_ZN3net11cert_errors19kEkuLacksServerAuthE, align 8
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %2, i8* %82) #13
  br label %116

83:                                               ; preds = %3
  %84 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %0, i64 0, i32 15
  %85 = load i8, i8* %84, align 8, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %116, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %0, i64 0, i32 16, i32 0, i32 0
  %89 = load %"class.net::der::Input"*, %"class.net::der::Input"** %88, align 8
  %90 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %0, i64 0, i32 16, i32 0, i32 1
  %91 = load %"class.net::der::Input"*, %"class.net::der::Input"** %90, align 8
  %92 = icmp eq %"class.net::der::Input"* %89, %91
  br i1 %92, label %114, label %93

93:                                               ; preds = %87
  %94 = bitcast %"class.net::der::Input"* %7 to i8*
  %95 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %7, i64 0, i32 0
  %96 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %7, i64 0, i32 1
  %97 = bitcast %"class.net::der::Input"* %8 to i8*
  %98 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %8, i64 0, i32 0
  %99 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %8, i64 0, i32 1
  br label %102

100:                                              ; preds = %108
  %101 = icmp eq %"class.net::der::Input"* %113, %91
  br i1 %101, label %114, label %102

102:                                              ; preds = %93, %100
  %103 = phi %"class.net::der::Input"* [ %89, %93 ], [ %113, %100 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #13
  %104 = call { i8*, i64 } @_ZN3net6AnyEKUEv() #13
  %105 = extractvalue { i8*, i64 } %104, 0
  store i8* %105, i8** %95, align 8
  %106 = extractvalue { i8*, i64 } %104, 1
  store i64 %106, i64* %96, align 8
  %107 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %103, %"class.net::der::Input"* nonnull dereferenceable(16) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #13
  br i1 %107, label %116, label %108

108:                                              ; preds = %102
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #13
  %109 = call { i8*, i64 } @_ZN3net10ClientAuthEv() #13
  %110 = extractvalue { i8*, i64 } %109, 0
  store i8* %110, i8** %98, align 8
  %111 = extractvalue { i8*, i64 } %109, 1
  store i64 %111, i64* %99, align 8
  %112 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %103, %"class.net::der::Input"* nonnull dereferenceable(16) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #13
  %113 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %103, i64 1
  br i1 %112, label %116, label %100

114:                                              ; preds = %100, %87
  %115 = load i8*, i8** @_ZN3net11cert_errors19kEkuLacksClientAuthE, align 8
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %2, i8* %115) #13
  br label %116

116:                                              ; preds = %34, %28, %108, %102, %83, %9, %81, %77, %3, %114
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_136VerifyNoUnconsumedCriticalExtensionsERKNS_17ParsedCertificateEPNS_10CertErrorsE(%"class.net::ParsedCertificate"* dereferenceable(752), %"class.net::CertErrors"*) unnamed_addr #3 {
  %3 = alloca %"class.net::der::Input", align 8
  %4 = alloca %"class.net::der::Input", align 8
  %5 = alloca %"class.net::der::Input", align 8
  %6 = alloca %"class.net::der::Input", align 8
  %7 = alloca %"class.net::der::Input", align 8
  %8 = alloca %"class.net::der::Input", align 8
  %9 = alloca %"class.std::__1::vector.15", align 8
  %10 = alloca %"class.net::CertErrors", align 8
  %11 = alloca %"class.net::der::Input", align 8
  %12 = alloca %"class.net::der::Input", align 8
  %13 = alloca %"class.net::der::Input", align 8
  %14 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %0, i64 0, i32 35, i32 0, i32 0
  %15 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  %16 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %0, i64 0, i32 35, i32 0, i32 1, i32 0, i32 0
  %17 = icmp eq %"class.std::__1::__tree_end_node"* %15, %16
  br i1 %17, label %52, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.net::der::Input"* %3 to i8*
  %20 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %3, i64 0, i32 1
  %22 = bitcast %"class.net::der::Input"* %4 to i8*
  %23 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %4, i64 0, i32 0
  %24 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %4, i64 0, i32 1
  %25 = bitcast %"class.net::der::Input"* %5 to i8*
  %26 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %5, i64 0, i32 0
  %27 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %5, i64 0, i32 1
  %28 = bitcast %"class.net::der::Input"* %6 to i8*
  %29 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %6, i64 0, i32 0
  %30 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %6, i64 0, i32 1
  %31 = bitcast %"class.net::der::Input"* %7 to i8*
  %32 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %7, i64 0, i32 0
  %33 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %7, i64 0, i32 1
  %34 = bitcast %"class.net::der::Input"* %8 to i8*
  %35 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %8, i64 0, i32 0
  %36 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %8, i64 0, i32 1
  %37 = bitcast %"class.net::der::Input"* %11 to i8*
  %38 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %11, i64 0, i32 0
  %39 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %11, i64 0, i32 1
  %40 = bitcast %"class.net::der::Input"* %12 to i8*
  %41 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %12, i64 0, i32 0
  %42 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %12, i64 0, i32 1
  %43 = bitcast %"class.net::der::Input"* %13 to i8*
  %44 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %13, i64 0, i32 0
  %45 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %13, i64 0, i32 1
  %46 = bitcast %"class.std::__1::vector.15"* %9 to i8*
  %47 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %9, i64 0, i32 0, i32 0
  %48 = bitcast %"class.net::CertErrors"* %10 to i8*
  %49 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %9, i64 0, i32 0, i32 1
  %50 = bitcast %"class.net::der::Input"** %49 to i64*
  %51 = load i8*, i8** @_ZN3net11cert_errors28kUnconsumedCriticalExtensionE, align 8
  br label %53

52:                                               ; preds = %148, %2
  ret void

53:                                               ; preds = %18, %148
  %54 = phi %"class.std::__1::__tree_end_node"* [ %15, %18 ], [ %149, %148 ]
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 10
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to i8*
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %120, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 6
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.net::der::Input"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  %62 = call { i8*, i64 } @_ZN3net19BasicConstraintsOidEv() #13
  %63 = extractvalue { i8*, i64 } %62, 0
  store i8* %63, i8** %20, align 8
  %64 = extractvalue { i8*, i64 } %62, 1
  store i64 %64, i64* %21, align 8
  %65 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %61, %"class.net::der::Input"* nonnull dereferenceable(16) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  br i1 %65, label %120, label %66

66:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #13
  %67 = call { i8*, i64 } @_ZN3net11KeyUsageOidEv() #13
  %68 = extractvalue { i8*, i64 } %67, 0
  store i8* %68, i8** %23, align 8
  %69 = extractvalue { i8*, i64 } %67, 1
  store i64 %69, i64* %24, align 8
  %70 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %61, %"class.net::der::Input"* nonnull dereferenceable(16) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #13
  br i1 %70, label %120, label %71

71:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #13
  %72 = call { i8*, i64 } @_ZN3net14ExtKeyUsageOidEv() #13
  %73 = extractvalue { i8*, i64 } %72, 0
  store i8* %73, i8** %26, align 8
  %74 = extractvalue { i8*, i64 } %72, 1
  store i64 %74, i64* %27, align 8
  %75 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %61, %"class.net::der::Input"* nonnull dereferenceable(16) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #13
  br i1 %75, label %120, label %76

76:                                               ; preds = %71
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %77 = call { i8*, i64 } @_ZN3net18NameConstraintsOidEv() #13
  %78 = extractvalue { i8*, i64 } %77, 0
  store i8* %78, i8** %29, align 8
  %79 = extractvalue { i8*, i64 } %77, 1
  store i64 %79, i64* %30, align 8
  %80 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %61, %"class.net::der::Input"* nonnull dereferenceable(16) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  br i1 %80, label %120, label %81

81:                                               ; preds = %76
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #13
  %82 = call { i8*, i64 } @_ZN3net17SubjectAltNameOidEv() #13
  %83 = extractvalue { i8*, i64 } %82, 0
  store i8* %83, i8** %32, align 8
  %84 = extractvalue { i8*, i64 } %82, 1
  store i64 %84, i64* %33, align 8
  %85 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %61, %"class.net::der::Input"* nonnull dereferenceable(16) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #13
  br i1 %85, label %120, label %86

86:                                               ; preds = %81
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %87 = call { i8*, i64 } @_ZN3net22CertificatePoliciesOidEv() #13
  %88 = extractvalue { i8*, i64 } %87, 0
  store i8* %88, i8** %35, align 8
  %89 = extractvalue { i8*, i64 } %87, 1
  store i64 %89, i64* %36, align 8
  %90 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %61, %"class.net::der::Input"* nonnull dereferenceable(16) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br i1 %90, label %91, label %101

91:                                               ; preds = %86
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 24, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false) #13
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %10) #13
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 8
  %93 = bitcast %"class.std::__1::__tree_end_node"* %92 to %"class.net::der::Input"*
  %94 = call zeroext i1 @_ZN3net33ParseCertificatePoliciesExtensionERKNS_3der5InputEbPNSt3__16vectorIS1_NS4_9allocatorIS1_EEEEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16) %93, i1 zeroext true, %"class.std::__1::vector.15"* nonnull %9, %"class.net::CertErrors"* nonnull %10) #13
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #13
  %95 = load %"class.net::der::Input"*, %"class.net::der::Input"** %47, align 8
  %96 = icmp eq %"class.net::der::Input"* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %91
  %98 = ptrtoint %"class.net::der::Input"* %95 to i64
  store i64 %98, i64* %50, align 8
  %99 = bitcast %"class.net::der::Input"* %95 to i8*
  call void @_ZdlPv(i8* %99) #14
  br label %100

100:                                              ; preds = %97, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #13
  br i1 %94, label %120, label %116

101:                                              ; preds = %86
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  %102 = call { i8*, i64 } @_ZN3net17PolicyMappingsOidEv() #13
  %103 = extractvalue { i8*, i64 } %102, 0
  store i8* %103, i8** %38, align 8
  %104 = extractvalue { i8*, i64 } %102, 1
  store i64 %104, i64* %39, align 8
  %105 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %61, %"class.net::der::Input"* nonnull dereferenceable(16) %11) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  br i1 %105, label %120, label %106

106:                                              ; preds = %101
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #13
  %107 = call { i8*, i64 } @_ZN3net20PolicyConstraintsOidEv() #13
  %108 = extractvalue { i8*, i64 } %107, 0
  store i8* %108, i8** %41, align 8
  %109 = extractvalue { i8*, i64 } %107, 1
  store i64 %109, i64* %42, align 8
  %110 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %61, %"class.net::der::Input"* nonnull dereferenceable(16) %12) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #13
  br i1 %110, label %120, label %111

111:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #13
  %112 = call { i8*, i64 } @_ZN3net19InhibitAnyPolicyOidEv() #13
  %113 = extractvalue { i8*, i64 } %112, 0
  store i8* %113, i8** %44, align 8
  %114 = extractvalue { i8*, i64 } %112, 1
  store i64 %114, i64* %45, align 8
  %115 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %61, %"class.net::der::Input"* nonnull dereferenceable(16) %13) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #13
  br i1 %115, label %120, label %116

116:                                              ; preds = %111, %100
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 8
  %118 = bitcast %"class.std::__1::__tree_end_node"* %117 to %"class.net::der::Input"*
  %119 = call %"class.net::CertErrorParams"* @_ZN3net25CreateCertErrorParams2DerEPKcRKNS_3der5InputES1_S5_(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), %"class.net::der::Input"* dereferenceable(16) %61, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), %"class.net::der::Input"* dereferenceable(16) %118) #13
  call void @_ZN3net10CertErrors8AddErrorEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS3_14default_deleteIS5_EEEE(%"class.net::CertErrors"* %1, i8* %51, %"class.net::CertErrorParams"* %119) #13
  br label %120

120:                                              ; preds = %106, %101, %81, %76, %71, %66, %59, %100, %53, %116, %111
  %121 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 1, i32 0
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node_base"* %122, null
  br i1 %123, label %124, label %132

124:                                              ; preds = %120
  %125 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.std::__1::__tree_node_base"*
  %126 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 2
  %127 = bitcast %"class.std::__1::__tree_end_node"* %126 to %"class.std::__1::__tree_end_node"**
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %127, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %125
  br i1 %131, label %148, label %139

132:                                              ; preds = %120, %132
  %133 = phi %"class.std::__1::__tree_node_base"* [ %135, %132 ], [ %122, %120 ]
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %133, i64 0, i32 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, null
  br i1 %136, label %137, label %132

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %133, i64 0, i32 0
  br label %148

139:                                              ; preds = %124, %139
  %140 = phi %"class.std::__1::__tree_end_node"** [ %143, %139 ], [ %127, %124 ]
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to %"class.std::__1::__tree_node_base"**
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %144 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, %142
  br i1 %147, label %148, label %139

148:                                              ; preds = %139, %124, %137
  %149 = phi %"class.std::__1::__tree_end_node"* [ %138, %137 ], [ %128, %124 ], [ %144, %139 ]
  %150 = icmp eq %"class.std::__1::__tree_end_node"* %149, %16
  br i1 %150, label %52, label %53
}

declare zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #5

declare { i8*, i64 } @_ZN3net6AnyEKUEv() local_unnamed_addr #5

declare { i8*, i64 } @_ZN3net10ServerAuthEv() local_unnamed_addr #5

declare { i8*, i64 } @_ZN3net25NetscapeServerGatedCryptoEv() local_unnamed_addr #5

declare void @_ZN3net10CertErrors10AddWarningEPKv(%"class.net::CertErrors"*, i8*) local_unnamed_addr #5

declare { i8*, i64 } @_ZN3net10ClientAuthEv() local_unnamed_addr #5

declare void @_ZN3net10CertErrors8AddErrorEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS3_14default_deleteIS5_EEEE(%"class.net::CertErrors"*, i8*, %"class.net::CertErrorParams"*) local_unnamed_addr #5

declare %"class.net::CertErrorParams"* @_ZN3net25CreateCertErrorParams2DerEPKcRKNS_3der5InputES1_S5_(i8*, %"class.net::der::Input"* dereferenceable(16), i8*, %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #5

declare { i8*, i64 } @_ZN3net19BasicConstraintsOidEv() local_unnamed_addr #5

declare { i8*, i64 } @_ZN3net11KeyUsageOidEv() local_unnamed_addr #5

declare { i8*, i64 } @_ZN3net14ExtKeyUsageOidEv() local_unnamed_addr #5

declare { i8*, i64 } @_ZN3net18NameConstraintsOidEv() local_unnamed_addr #5

declare { i8*, i64 } @_ZN3net17SubjectAltNameOidEv() local_unnamed_addr #5

declare { i8*, i64 } @_ZN3net22CertificatePoliciesOidEv() local_unnamed_addr #5

declare void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"*) unnamed_addr #5

declare zeroext i1 @_ZN3net33ParseCertificatePoliciesExtensionERKNS_3der5InputEbPNSt3__16vectorIS1_NS4_9allocatorIS1_EEEEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), i1 zeroext, %"class.std::__1::vector.15"*, %"class.net::CertErrors"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"*) unnamed_addr #11

declare { i8*, i64 } @_ZN3net17PolicyMappingsOidEv() local_unnamed_addr #5

declare { i8*, i64 } @_ZN3net20PolicyConstraintsOidEv() local_unnamed_addr #5

declare { i8*, i64 } @_ZN3net19InhibitAnyPolicyOidEv() local_unnamed_addr #5

declare zeroext i1 @_ZN3net14ParsePublicKeyERKNS_3der5InputEPNSt3__110unique_ptrI11evp_pkey_stN4bssl8internal7DeleterIS6_EEEE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::unique_ptr.126"*) local_unnamed_addr #5

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #5

declare void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"*, %"class.std::__1::basic_string"*) unnamed_addr #5

declare zeroext i1 @_ZN3net16VerifySignedDataERKNS_18SignatureAlgorithmERKNS_3der5InputERKNS3_9BitStringEP11evp_pkey_st(%"class.net::SignatureAlgorithm"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16), %"class.net::der::BitString"* dereferenceable(24), %struct.evp_pkey_st*) local_unnamed_addr #5

declare zeroext i1 @_ZN3net3derneERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNK3net15NameConstraints15IsPermittedCertERKNS_3der5InputEPKNS_12GeneralNamesEPNS_10CertErrorsE(%"class.net::NameConstraints"*, %"class.net::der::Input"* dereferenceable(16), %"struct.net::GeneralNames"*, %"class.net::CertErrors"*) local_unnamed_addr #5

declare zeroext i1 @_ZN3net18SignatureAlgorithm12IsEquivalentERKNS_3der5InputES4_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZN3net10CertErrors10AddWarningEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS3_14default_deleteIS5_EEEE(%"class.net::CertErrors"*, i8*, %"class.net::CertErrorParams"*) local_unnamed_addr #5

declare zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8), %"struct.net::der::GeneralizedTime"* dereferenceable(8)) local_unnamed_addr #5

declare { i8*, i64 } @_ZN3net9AnyPolicyEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_115ValidPolicyTree28AddNodeWithExpectedPolicySetERKNS1_4NodeERKNS_3der5InputERKNSt3__13setIS6_NS9_4lessIS6_EENS9_9allocatorIS6_EEEE(%"class.net::(anonymous namespace)::ValidPolicyTree"*, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* dereferenceable(56), %"class.net::der::Input"* nocapture readonly dereferenceable(16), %"class.std::__1::set"* dereferenceable(24)) unnamed_addr #3 align 2 {
  %5 = alloca %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", align 8
  %6 = alloca %"class.net::der::Input", align 8
  %7 = bitcast %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 56, i1 false)
  %8 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %5, i64 0, i32 0
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %8) #13
  %9 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %5, i64 0, i32 1
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %9) #13
  %10 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %5, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %5, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %5, i64 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_node_base"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %12, align 8
  %14 = bitcast %"class.net::der::Input"* %9 to i8*
  %15 = bitcast %"class.net::der::Input"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false)
  %16 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %5, i64 0, i32 2
  %17 = icmp eq %"class.std::__1::set"* %16, %3
  br i1 %17, label %23, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %16, i64 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE14__assign_multiINS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEEEvT_SG_(%"class.std::__1::__tree.85"* %19, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %22) #13
  br label %23

23:                                               ; preds = %4, %18
  %24 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %1, i64 0, i32 0
  %25 = bitcast %"class.net::der::Input"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #13
  %26 = call { i8*, i64 } @_ZN3net9AnyPolicyEv() #13
  %27 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %6, i64 0, i32 0
  %28 = extractvalue { i8*, i64 } %26, 0
  store i8* %28, i8** %27, align 8
  %29 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %6, i64 0, i32 1
  %30 = extractvalue { i8*, i64 } %26, 1
  store i64 %30, i64* %29, align 8
  %31 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %24, %"class.net::der::Input"* nonnull dereferenceable(16) %6) #13
  %32 = select i1 %31, %"class.net::der::Input"* %2, %"class.net::der::Input"* %24
  %33 = bitcast %"class.net::der::Input"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %33, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #13
  %34 = getelementptr inbounds %"class.net::(anonymous namespace)::ValidPolicyTree", %"class.net::(anonymous namespace)::ValidPolicyTree"* %0, i64 0, i32 0
  call fastcc void @_ZNSt3__16vectorIN3net12_GLOBAL__N_115ValidPolicyTree4NodeENS_9allocatorIS4_EEE9push_backEOS4_(%"class.std::__1::vector.112"* %34, %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* nonnull dereferenceable(56) %5)
  %35 = getelementptr inbounds %"struct.net::(anonymous namespace)::ValidPolicyTree::Node", %"struct.net::(anonymous namespace)::ValidPolicyTree::Node"* %5, i64 0, i32 2, i32 0
  %36 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %37 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %36, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %35, %"class.std::__1::__tree_node"* %37) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE14__assign_multiINS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEEEvT_SG_(%"class.std::__1::__tree.85"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %242, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::__tree.85"* %0 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %13, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_end_node"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #13
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  %19 = bitcast %"class.std::__1::__tree_node_base"* %17 to %"class.std::__1::__tree_node"*
  %20 = select i1 %18, %"class.std::__1::__tree_node"* %10, %"class.std::__1::__tree_node"* %19
  %21 = icmp eq %"class.std::__1::__tree_node"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %7
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %0, %"class.std::__1::__tree_node"* %20) #13
  br label %242

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 2
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::__tree_node"* %20 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, %28
  br i1 %31, label %32, label %51

32:                                               ; preds = %27
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %29, align 8
  %33 = bitcast %"class.std::__1::__tree_end_node"** %24 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %72, label %38

38:                                               ; preds = %32, %47
  %39 = phi %"class.std::__1::__tree_node_base"* [ %48, %47 ], [ %36, %32 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 1
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43, %38
  %48 = phi %"class.std::__1::__tree_node_base"* [ %41, %38 ], [ %45, %43 ]
  br label %38

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::__tree_node_base"* %39 to %"class.std::__1::__tree_node"*
  br label %72

51:                                               ; preds = %27
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %52, align 8
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node"*
  br label %72

59:                                               ; preds = %51, %68
  %60 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %51 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64, %59
  %69 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %66, %64 ]
  br label %59

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::__tree_node_base"* %60 to %"class.std::__1::__tree_node"*
  br label %72

72:                                               ; preds = %23, %32, %49, %57, %70
  %73 = phi %"class.std::__1::__tree_node"* [ %50, %49 ], [ %58, %57 ], [ %71, %70 ], [ null, %23 ], [ %34, %32 ]
  %74 = ptrtoint %"class.std::__1::__tree_node"* %73 to i64
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %75, label %222, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %78 = bitcast %"class.std::__1::__tree.85"* %0 to i64*
  %79 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %80

80:                                               ; preds = %76, %214
  %81 = phi %"class.std::__1::__tree_node"* [ %73, %76 ], [ %216, %214 ]
  %82 = phi i64 [ %74, %76 ], [ %186, %214 ]
  %83 = phi %"class.std::__1::__tree_node"* [ %20, %76 ], [ %81, %214 ]
  %84 = phi %"class.std::__1::__tree_end_node"* [ %1, %76 ], [ %215, %214 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 4
  %86 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 1
  %87 = bitcast %"class.net::der::Input"* %86 to i8*
  %88 = bitcast %"class.std::__1::__tree_end_node"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 16, i1 false)
  %89 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %77, align 8
  %90 = icmp eq %"class.std::__1::__tree_node"* %89, null
  br i1 %90, label %112, label %91

91:                                               ; preds = %80, %109
  %92 = phi %"class.std::__1::__tree_node"* [ %111, %109 ], [ %89, %80 ]
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 1
  %94 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %86, %"class.net::der::Input"* dereferenceable(16) %93) #13
  br i1 %94, label %95, label %102

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %109

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 0
  br label %112

102:                                              ; preds = %91
  %103 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 1
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, null
  br i1 %105, label %106, label %109

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 1
  %108 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 0
  br label %112

109:                                              ; preds = %102, %95
  %110 = phi %"class.std::__1::__tree_node_base"* [ %97, %95 ], [ %104, %102 ]
  %111 = bitcast %"class.std::__1::__tree_node_base"* %110 to %"class.std::__1::__tree_node"*
  br label %91

112:                                              ; preds = %80, %106, %99
  %113 = phi %"class.std::__1::__tree_end_node"* [ %101, %99 ], [ %108, %106 ], [ %11, %80 ]
  %114 = phi %"class.std::__1::__tree_node_base"** [ %100, %99 ], [ %107, %106 ], [ %12, %80 ]
  %115 = bitcast %"class.std::__1::__tree_node"* %83 to %"class.std::__1::__tree_node_base"*
  %116 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 0, i32 2
  %117 = bitcast %"class.std::__1::__tree_node"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %113, %"class.std::__1::__tree_end_node"** %116, align 8
  %118 = bitcast %"class.std::__1::__tree_node_base"** %114 to %"class.std::__1::__tree_node"**
  store %"class.std::__1::__tree_node"* %83, %"class.std::__1::__tree_node"** %118, align 8
  %119 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 0, i32 0
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node_base"* %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %112
  %124 = ptrtoint %"class.std::__1::__tree_node_base"* %121 to i64
  store i64 %124, i64* %78, align 8
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  br label %126

126:                                              ; preds = %112, %123
  %127 = phi %"class.std::__1::__tree_node_base"* [ %115, %112 ], [ %125, %123 ]
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %128, %"class.std::__1::__tree_node_base"* %127) #13
  %129 = load i64, i64* %4, align 8
  %130 = add i64 %129, 1
  store i64 %130, i64* %4, align 8
  %131 = icmp eq i64 %82, 0
  br i1 %131, label %185, label %132

132:                                              ; preds = %126
  %133 = inttoptr i64 %82 to %"class.std::__1::__tree_node"*
  %134 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 0, i32 2
  %135 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_end_node"* %135, null
  br i1 %136, label %182, label %137

137:                                              ; preds = %132
  %138 = inttoptr i64 %82 to %"class.std::__1::__tree_node_base"*
  %139 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 0, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, %138
  br i1 %141, label %142, label %161

142:                                              ; preds = %137
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %139, align 8
  %143 = bitcast %"class.std::__1::__tree_end_node"** %134 to %"class.std::__1::__tree_node"**
  %144 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %144, i64 0, i32 0, i32 1
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, null
  br i1 %147, label %182, label %148

148:                                              ; preds = %142, %157
  %149 = phi %"class.std::__1::__tree_node_base"* [ %158, %157 ], [ %146, %142 ]
  %150 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %149, i64 0, i32 0, i32 0
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, null
  br i1 %152, label %153, label %157

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %149, i64 0, i32 1
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %153, %148
  %158 = phi %"class.std::__1::__tree_node_base"* [ %151, %148 ], [ %155, %153 ]
  br label %148

159:                                              ; preds = %153
  %160 = bitcast %"class.std::__1::__tree_node_base"* %149 to %"class.std::__1::__tree_node"*
  br label %182

161:                                              ; preds = %137
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %162, align 8
  %163 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %134, align 8
  %164 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %163, i64 0, i32 0
  %165 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %164, align 8
  %166 = icmp eq %"class.std::__1::__tree_node_base"* %165, null
  br i1 %166, label %167, label %169

167:                                              ; preds = %161
  %168 = bitcast %"class.std::__1::__tree_end_node"* %163 to %"class.std::__1::__tree_node"*
  br label %182

169:                                              ; preds = %161, %178
  %170 = phi %"class.std::__1::__tree_node_base"* [ %179, %178 ], [ %165, %161 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 0, i32 0
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %171, align 8
  %173 = icmp eq %"class.std::__1::__tree_node_base"* %172, null
  br i1 %173, label %174, label %178

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 1
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %174, %169
  %179 = phi %"class.std::__1::__tree_node_base"* [ %172, %169 ], [ %176, %174 ]
  br label %169

180:                                              ; preds = %174
  %181 = bitcast %"class.std::__1::__tree_node_base"* %170 to %"class.std::__1::__tree_node"*
  br label %182

182:                                              ; preds = %180, %167, %159, %142, %132
  %183 = phi %"class.std::__1::__tree_node"* [ %160, %159 ], [ %168, %167 ], [ %181, %180 ], [ null, %132 ], [ %144, %142 ]
  %184 = ptrtoint %"class.std::__1::__tree_node"* %183 to i64
  br label %185

185:                                              ; preds = %126, %182
  %186 = phi i64 [ 0, %126 ], [ %184, %182 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 1, i32 0
  %188 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %187, align 8
  %189 = icmp eq %"class.std::__1::__tree_node_base"* %188, null
  br i1 %189, label %190, label %198

190:                                              ; preds = %185
  %191 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"class.std::__1::__tree_node_base"*
  %192 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 2
  %193 = bitcast %"class.std::__1::__tree_end_node"* %192 to %"class.std::__1::__tree_end_node"**
  %194 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %194, i64 0, i32 0
  %196 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %195, align 8
  %197 = icmp eq %"class.std::__1::__tree_node_base"* %196, %191
  br i1 %197, label %214, label %205

198:                                              ; preds = %185, %198
  %199 = phi %"class.std::__1::__tree_node_base"* [ %201, %198 ], [ %188, %185 ]
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %199, i64 0, i32 0, i32 0
  %201 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %200, align 8
  %202 = icmp eq %"class.std::__1::__tree_node_base"* %201, null
  br i1 %202, label %203, label %198

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %199, i64 0, i32 0
  br label %214

205:                                              ; preds = %190, %205
  %206 = phi %"class.std::__1::__tree_end_node"** [ %209, %205 ], [ %193, %190 ]
  %207 = bitcast %"class.std::__1::__tree_end_node"** %206 to %"class.std::__1::__tree_node_base"**
  %208 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %207, align 8
  %209 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %208, i64 0, i32 2
  %210 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %209, align 8
  %211 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %210, i64 0, i32 0
  %212 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  %213 = icmp eq %"class.std::__1::__tree_node_base"* %212, %208
  br i1 %213, label %214, label %205

214:                                              ; preds = %205, %190, %203
  %215 = phi %"class.std::__1::__tree_end_node"* [ %204, %203 ], [ %194, %190 ], [ %210, %205 ]
  %216 = inttoptr i64 %186 to %"class.std::__1::__tree_node"*
  %217 = icmp ne %"class.std::__1::__tree_node"* %81, null
  %218 = icmp ne %"class.std::__1::__tree_end_node"* %215, %2
  %219 = and i1 %218, %217
  br i1 %219, label %80, label %220

220:                                              ; preds = %214
  %221 = inttoptr i64 %186 to %"class.std::__1::__tree_node"*
  br label %222

222:                                              ; preds = %72, %220
  %223 = phi %"class.std::__1::__tree_node"* [ %73, %72 ], [ %221, %220 ]
  %224 = phi %"class.std::__1::__tree_end_node"* [ %1, %72 ], [ %215, %220 ]
  %225 = phi %"class.std::__1::__tree_node"* [ %20, %72 ], [ %81, %220 ]
  %226 = phi i64 [ %74, %72 ], [ %186, %220 ]
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %0, %"class.std::__1::__tree_node"* %225) #13
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %242, label %228

228:                                              ; preds = %222
  %229 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %223, i64 0, i32 0, i32 2
  %230 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %229, align 8
  %231 = icmp eq %"class.std::__1::__tree_end_node"* %230, null
  br i1 %231, label %240, label %232

232:                                              ; preds = %228, %232
  %233 = phi %"class.std::__1::__tree_end_node"* [ %236, %232 ], [ %230, %228 ]
  %234 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %233, i64 2
  %235 = bitcast %"class.std::__1::__tree_end_node"* %234 to %"class.std::__1::__tree_end_node"**
  %236 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %235, align 8
  %237 = icmp eq %"class.std::__1::__tree_end_node"* %236, null
  br i1 %237, label %238, label %232

238:                                              ; preds = %232
  %239 = bitcast %"class.std::__1::__tree_end_node"* %233 to %"class.std::__1::__tree_node"*
  br label %240

240:                                              ; preds = %238, %228
  %241 = phi %"class.std::__1::__tree_node"* [ %223, %228 ], [ %239, %238 ]
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %0, %"class.std::__1::__tree_node"* %241) #13
  br label %242

242:                                              ; preds = %22, %240, %222, %3
  %243 = phi %"class.std::__1::__tree_end_node"* [ %1, %3 ], [ %224, %222 ], [ %224, %240 ], [ %1, %22 ]
  %244 = icmp eq %"class.std::__1::__tree_end_node"* %243, %2
  br i1 %244, label %331, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 1, i32 0, i32 0
  %247 = bitcast %"class.std::__1::__tree_end_node"* %246 to %"class.std::__1::__tree_node"**
  %248 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %246, i64 0, i32 0
  %249 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 0
  %250 = bitcast %"class.std::__1::__tree.85"* %0 to i64*
  %251 = getelementptr inbounds %"class.std::__1::__tree.85", %"class.std::__1::__tree.85"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %252

252:                                              ; preds = %245, %328
  %253 = phi %"class.std::__1::__tree_end_node"* [ %243, %245 ], [ %329, %328 ]
  %254 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %253, i64 4
  %255 = tail call i8* @_Znwm(i64 48) #14, !noalias !6
  %256 = getelementptr inbounds i8, i8* %255, i64 32
  %257 = bitcast %"class.std::__1::__tree_end_node"* %254 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %257, i64 16, i1 false) #13, !noalias !6
  %258 = bitcast i8* %256 to %"class.net::der::Input"*
  %259 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %247, align 8
  %260 = icmp eq %"class.std::__1::__tree_node"* %259, null
  br i1 %260, label %282, label %261

261:                                              ; preds = %252, %279
  %262 = phi %"class.std::__1::__tree_node"* [ %281, %279 ], [ %259, %252 ]
  %263 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %262, i64 0, i32 1
  %264 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %258, %"class.net::der::Input"* dereferenceable(16) %263) #13
  br i1 %264, label %265, label %272

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %262, i64 0, i32 0, i32 0, i32 0
  %267 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %266, align 8
  %268 = icmp eq %"class.std::__1::__tree_node_base"* %267, null
  br i1 %268, label %269, label %279

269:                                              ; preds = %265
  %270 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %262, i64 0, i32 0, i32 0, i32 0
  %271 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %262, i64 0, i32 0, i32 0
  br label %282

272:                                              ; preds = %261
  %273 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %262, i64 0, i32 0, i32 1
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  %275 = icmp eq %"class.std::__1::__tree_node_base"* %274, null
  br i1 %275, label %276, label %279

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %262, i64 0, i32 0, i32 1
  %278 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %262, i64 0, i32 0, i32 0
  br label %282

279:                                              ; preds = %272, %265
  %280 = phi %"class.std::__1::__tree_node_base"* [ %267, %265 ], [ %274, %272 ]
  %281 = bitcast %"class.std::__1::__tree_node_base"* %280 to %"class.std::__1::__tree_node"*
  br label %261

282:                                              ; preds = %252, %276, %269
  %283 = phi %"class.std::__1::__tree_end_node"* [ %271, %269 ], [ %278, %276 ], [ %246, %252 ]
  %284 = phi %"class.std::__1::__tree_node_base"** [ %270, %269 ], [ %277, %276 ], [ %248, %252 ]
  %285 = bitcast i8* %255 to %"class.std::__1::__tree_node_base"*
  %286 = getelementptr inbounds i8, i8* %255, i64 16
  %287 = bitcast i8* %286 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %255, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %283, %"class.std::__1::__tree_end_node"** %287, align 8
  %288 = bitcast %"class.std::__1::__tree_node_base"** %284 to i8**
  store i8* %255, i8** %288, align 8
  %289 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %249, align 8
  %290 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %289, i64 0, i32 0
  %291 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %290, align 8
  %292 = icmp eq %"class.std::__1::__tree_node_base"* %291, null
  br i1 %292, label %296, label %293

293:                                              ; preds = %282
  %294 = ptrtoint %"class.std::__1::__tree_node_base"* %291 to i64
  store i64 %294, i64* %250, align 8
  %295 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %284, align 8
  br label %296

296:                                              ; preds = %282, %293
  %297 = phi %"class.std::__1::__tree_node_base"* [ %285, %282 ], [ %295, %293 ]
  %298 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %251, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %298, %"class.std::__1::__tree_node_base"* %297) #13
  %299 = load i64, i64* %4, align 8
  %300 = add i64 %299, 1
  store i64 %300, i64* %4, align 8
  %301 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %253, i64 1, i32 0
  %302 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %301, align 8
  %303 = icmp eq %"class.std::__1::__tree_node_base"* %302, null
  br i1 %303, label %304, label %312

304:                                              ; preds = %296
  %305 = bitcast %"class.std::__1::__tree_end_node"* %253 to %"class.std::__1::__tree_node_base"*
  %306 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %253, i64 2
  %307 = bitcast %"class.std::__1::__tree_end_node"* %306 to %"class.std::__1::__tree_end_node"**
  %308 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %307, align 8
  %309 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %308, i64 0, i32 0
  %310 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %309, align 8
  %311 = icmp eq %"class.std::__1::__tree_node_base"* %310, %305
  br i1 %311, label %328, label %319

312:                                              ; preds = %296, %312
  %313 = phi %"class.std::__1::__tree_node_base"* [ %315, %312 ], [ %302, %296 ]
  %314 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %313, i64 0, i32 0, i32 0
  %315 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %314, align 8
  %316 = icmp eq %"class.std::__1::__tree_node_base"* %315, null
  br i1 %316, label %317, label %312

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %313, i64 0, i32 0
  br label %328

319:                                              ; preds = %304, %319
  %320 = phi %"class.std::__1::__tree_end_node"** [ %323, %319 ], [ %307, %304 ]
  %321 = bitcast %"class.std::__1::__tree_end_node"** %320 to %"class.std::__1::__tree_node_base"**
  %322 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %321, align 8
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %322, i64 0, i32 2
  %324 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %323, align 8
  %325 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %324, i64 0, i32 0
  %326 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %325, align 8
  %327 = icmp eq %"class.std::__1::__tree_node_base"* %326, %322
  br i1 %327, label %328, label %319

328:                                              ; preds = %319, %304, %317
  %329 = phi %"class.std::__1::__tree_end_node"* [ %318, %317 ], [ %308, %304 ], [ %324, %319 ]
  %330 = icmp eq %"class.std::__1::__tree_end_node"* %329, %2
  br i1 %330, label %331, label %252

331:                                              ; preds = %328, %242
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13setIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE6insertIPKS3_EEvT_SC_(%"class.std::__1::set"*, %"class.net::der::Input"*, %"class.net::der::Input"*) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.net::der::Input"* %1, %2
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = ptrtoint %"class.std::__1::__tree_end_node"* %4 to i64
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %11 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::set"* %0 to i64*
  %13 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %15

14:                                               ; preds = %105, %3
  ret void

15:                                               ; preds = %6, %105
  %16 = phi %"class.net::der::Input"* [ %1, %6 ], [ %106, %105 ]
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %17, %4
  br i1 %18, label %44, label %19

19:                                               ; preds = %15
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19, %22
  %23 = phi %"class.std::__1::__tree_node_base"* [ %25, %22 ], [ %20, %19 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %38, label %22

27:                                               ; preds = %19, %27
  %28 = phi %"class.std::__1::__tree_end_node"* [ %32, %27 ], [ %4, %19 ]
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_end_node"**
  %32 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, %29
  br i1 %35, label %27, label %36

36:                                               ; preds = %27
  %37 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node_base"*
  br label %38

38:                                               ; preds = %22, %36
  %39 = phi %"class.std::__1::__tree_node_base"* [ %37, %36 ], [ %23, %22 ]
  %40 = ptrtoint %"class.std::__1::__tree_node_base"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 1
  %42 = bitcast %"class.std::__1::__tree_node_base"* %41 to %"class.net::der::Input"*
  %43 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %42, %"class.net::der::Input"* dereferenceable(16) %16) #13
  br i1 %43, label %44, label %51

44:                                               ; preds = %38, %15
  %45 = phi i64 [ %40, %38 ], [ %7, %15 ]
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %79, label %48

48:                                               ; preds = %44
  %49 = inttoptr i64 %45 to %"class.std::__1::__tree_node_base"*
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 1
  br label %79

51:                                               ; preds = %38
  %52 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %53 = icmp eq %"class.std::__1::__tree_node"* %52, null
  br i1 %53, label %79, label %54

54:                                               ; preds = %51, %75
  %55 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %52, %51 ]
  %56 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %11, %51 ]
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %55, i64 0, i32 1
  %58 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %16, %"class.net::der::Input"* dereferenceable(16) %57) #13
  br i1 %58, label %59, label %65

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %55, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %63, label %75

63:                                               ; preds = %59
  %64 = ptrtoint %"class.std::__1::__tree_node"* %55 to i64
  br label %79

65:                                               ; preds = %54
  %66 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %57, %"class.net::der::Input"* dereferenceable(16) %16) #13
  br i1 %66, label %67, label %73

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %55, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = ptrtoint %"class.std::__1::__tree_node"* %55 to i64
  br label %79

73:                                               ; preds = %65
  %74 = ptrtoint %"class.std::__1::__tree_node"* %55 to i64
  br label %79

75:                                               ; preds = %67, %59
  %76 = phi %"class.std::__1::__tree_node_base"* [ %61, %59 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %60, %59 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %54

79:                                               ; preds = %51, %44, %48, %63, %71, %73
  %80 = phi i64 [ %45, %48 ], [ %64, %63 ], [ %72, %71 ], [ %74, %73 ], [ %7, %44 ], [ %7, %51 ]
  %81 = phi %"class.std::__1::__tree_node_base"** [ %50, %48 ], [ %60, %63 ], [ %68, %71 ], [ %56, %73 ], [ %9, %44 ], [ %9, %51 ]
  %82 = bitcast %"class.std::__1::__tree_node_base"** %81 to %"class.std::__1::__tree_node"**
  %83 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node"* %83, null
  br i1 %84, label %85, label %105

85:                                               ; preds = %79
  %86 = tail call i8* @_Znwm(i64 48) #14, !noalias !9
  %87 = getelementptr inbounds i8, i8* %86, i64 32
  %88 = bitcast %"class.net::der::Input"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 16, i1 false) #13, !noalias !9
  %89 = bitcast i8* %86 to %"class.std::__1::__tree_node_base"*
  %90 = getelementptr inbounds i8, i8* %86, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 16, i1 false) #13
  %91 = bitcast i8* %90 to i64*
  store i64 %80, i64* %91, align 8
  %92 = bitcast %"class.std::__1::__tree_node_base"** %81 to i8**
  store i8* %86, i8** %92, align 8
  %93 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 0, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %85
  %98 = ptrtoint %"class.std::__1::__tree_node_base"* %95 to i64
  store i64 %98, i64* %12, align 8
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  br label %100

100:                                              ; preds = %97, %85
  %101 = phi %"class.std::__1::__tree_node_base"* [ %89, %85 ], [ %99, %97 ]
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %102, %"class.std::__1::__tree_node_base"* %101) #13
  %103 = load i64, i64* %13, align 8
  %104 = add i64 %103, 1
  store i64 %104, i64* %13, align 8
  br label %105

105:                                              ; preds = %79, %100
  %106 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %16, i64 1
  %107 = icmp eq %"class.net::der::Input"* %106, %2
  br i1 %107, label %14, label %15
}

declare zeroext i1 @_ZNK3net3der9BitString10AssertsBitEm(%"class.net::der::BitString"*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS_3setIS4_NS_4lessIS4_EENS_9allocatorIS4_EEEEEENS_19__map_value_compareIS4_SB_S7_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_4pairINS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.152"*, %"class.net::der::Input"* dereferenceable(16), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.164"* dereferenceable(1)) local_unnamed_addr #3 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree.152", %"class.std::__1::__tree.152"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.166"**
  %8 = load %"class.std::__1::__tree_node.166"*, %"class.std::__1::__tree_node.166"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node.166"* %8, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree.152", %"class.std::__1::__tree.152"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi %"class.std::__1::__tree_node.166"* [ %36, %33 ], [ %8, %10 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.166", %"class.std::__1::__tree_node.166"* %13, i64 0, i32 1, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %1, %"class.net::der::Input"* dereferenceable(16) %15) #13
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.166", %"class.std::__1::__tree_node.166"* %13, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.166", %"class.std::__1::__tree_node.166"* %13, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %12
  %24 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %15, %"class.net::der::Input"* dereferenceable(16) %1) #13
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.166", %"class.std::__1::__tree_node.166"* %13, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.166", %"class.std::__1::__tree_node.166"* %13, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.166", %"class.std::__1::__tree_node.166"* %13, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node.166"*
  br label %12

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %6, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %14, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node.166"**
  %43 = load %"class.std::__1::__tree_node.166"*, %"class.std::__1::__tree_node.166"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node.166"* %43, null
  br i1 %44, label %45, label %74

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 72) #14, !noalias !12
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = bitcast %"class.std::__1::tuple"* %3 to i8**
  %49 = load i8*, i8** %48, align 8, !noalias !12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %49, i64 16, i1 false) #13, !noalias !12
  %50 = getelementptr inbounds i8, i8* %46, i64 56
  %51 = getelementptr inbounds i8, i8* %46, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #13, !noalias !12
  %52 = bitcast i8* %51 to i8**
  store i8* %50, i8** %52, align 8, !noalias !12
  %53 = bitcast i8* %46 to %"class.std::__1::__tree_node.166"*
  %54 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds i8, i8* %46, i64 16
  %56 = bitcast i8* %55 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %56, align 8
  %57 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree.152", %"class.std::__1::__tree.152"* %0, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %45
  %64 = ptrtoint %"class.std::__1::__tree_node_base"* %61 to i64
  %65 = bitcast %"class.std::__1::__tree.152"* %0 to i64*
  store i64 %64, i64* %65, align 8
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %67

67:                                               ; preds = %63, %45
  %68 = phi %"class.std::__1::__tree_node_base"* [ %54, %45 ], [ %66, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree.152", %"class.std::__1::__tree.152"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %70, %"class.std::__1::__tree_node_base"* %68) #13
  %71 = getelementptr inbounds %"class.std::__1::__tree.152", %"class.std::__1::__tree.152"* %0, i64 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %71, align 8
  br label %74

74:                                               ; preds = %67, %39
  %75 = phi i8 [ 1, %67 ], [ 0, %39 ]
  %76 = phi %"class.std::__1::__tree_node.166"* [ %53, %67 ], [ %43, %39 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.166", %"class.std::__1::__tree_node.166"* %76, i64 0, i32 0, i32 0
  %78 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %77, 0
  %79 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %78, i8 %75, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS_3setIS4_NS_4lessIS4_EENS_9allocatorIS4_EEEEEENS_19__map_value_compareIS4_SB_S7_Lb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(%"class.std::__1::__tree.152"*, %"class.std::__1::__tree_node.166"*) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.166"* %1, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.166"* %1 to %"class.std::__1::__tree_node.166"**
  %6 = load %"class.std::__1::__tree_node.166"*, %"class.std::__1::__tree_node.166"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS_3setIS4_NS_4lessIS4_EENS_9allocatorIS4_EEEEEENS_19__map_value_compareIS4_SB_S7_Lb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(%"class.std::__1::__tree.152"* %0, %"class.std::__1::__tree_node.166"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.166", %"class.std::__1::__tree_node.166"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.166"**
  %9 = load %"class.std::__1::__tree_node.166"*, %"class.std::__1::__tree_node.166"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS_3setIS4_NS_4lessIS4_EENS_9allocatorIS4_EEEEEENS_19__map_value_compareIS4_SB_S7_Lb1EEENS8_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(%"class.std::__1::__tree.152"* %0, %"class.std::__1::__tree_node.166"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.166", %"class.std::__1::__tree_node.166"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node.166", %"class.std::__1::__tree_node.166"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.85"* %10, %"class.std::__1::__tree_node"* %13) #13
  %14 = bitcast %"class.std::__1::__tree_node.166"* %1 to i8*
  tail call void @_ZdlPv(i8* %14) #14
  ret void

15:                                               ; preds = %2
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS_3setIS4_NS_4lessIS4_EENS_9allocatorIS4_EEEEEENS_19__map_value_compareIS4_SB_S7_Lb1EEENS8_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS8_ISS_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS_3setIS4_NS_4lessIS4_EENS_9allocatorIS4_EEEEEENS_19__map_value_compareIS4_SB_S7_Lb1EEENS8_ISB_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINS8_ISS_EEEEEEDpOT_"}
