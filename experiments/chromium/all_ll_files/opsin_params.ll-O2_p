; ModuleID = '../../third_party/libjxl/src/lib/jxl/opsin_params.cc'
source_filename = "../../third_party/libjxl/src/lib/jxl/opsin_params.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

@_ZZN3jxlL35DefaultInverseOpsinAbsorbanceMatrixEvE36kDefaultInverseOpsinAbsorbanceMatrix = internal global [9 x float] [float 0x4026102980000000, float 0xC023BBE020000000, float 0xBFC5125DC0000000, float 0xC00A087E60000000, float 0x4011ACD220000000, float 0xBFC5125DC0000000, float 0xC00D4553E0000000, float 0x4005B41100000000, float 0x3FFF2285A0000000], align 16

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float* @_ZN3jxl31GetOpsinAbsorbanceInverseMatrixEv() local_unnamed_addr #0 {
  ret float* getelementptr inbounds ([9 x float], [9 x float]* @_ZZN3jxlL35DefaultInverseOpsinAbsorbanceMatrixEvE36kDefaultInverseOpsinAbsorbanceMatrix, i64 0, i64 0)
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3jxl21InitSIMDInverseMatrixEPKfPff(float* noalias nocapture readonly, float* noalias nocapture, float) local_unnamed_addr #1 {
  %4 = fdiv float 2.550000e+02, %2
  %5 = load float, float* %0, align 4
  %6 = fmul float %4, %5
  %7 = insertelement <4 x float> undef, float %6, i32 0
  %8 = shufflevector <4 x float> %7, <4 x float> undef, <4 x i32> zeroinitializer
  %9 = bitcast float* %1 to <4 x float>*
  store <4 x float> %8, <4 x float>* %9, align 4
  %10 = getelementptr inbounds float, float* %0, i64 1
  %11 = load float, float* %10, align 4
  %12 = fmul float %4, %11
  %13 = getelementptr inbounds float, float* %1, i64 4
  %14 = insertelement <4 x float> undef, float %12, i32 0
  %15 = shufflevector <4 x float> %14, <4 x float> undef, <4 x i32> zeroinitializer
  %16 = bitcast float* %13 to <4 x float>*
  store <4 x float> %15, <4 x float>* %16, align 4
  %17 = getelementptr inbounds float, float* %0, i64 2
  %18 = load float, float* %17, align 4
  %19 = fmul float %4, %18
  %20 = getelementptr inbounds float, float* %1, i64 8
  %21 = insertelement <4 x float> undef, float %19, i32 0
  %22 = shufflevector <4 x float> %21, <4 x float> undef, <4 x i32> zeroinitializer
  %23 = bitcast float* %20 to <4 x float>*
  store <4 x float> %22, <4 x float>* %23, align 4
  %24 = getelementptr inbounds float, float* %0, i64 3
  %25 = load float, float* %24, align 4
  %26 = fmul float %4, %25
  %27 = getelementptr inbounds float, float* %1, i64 12
  %28 = insertelement <4 x float> undef, float %26, i32 0
  %29 = shufflevector <4 x float> %28, <4 x float> undef, <4 x i32> zeroinitializer
  %30 = bitcast float* %27 to <4 x float>*
  store <4 x float> %29, <4 x float>* %30, align 4
  %31 = getelementptr inbounds float, float* %0, i64 4
  %32 = load float, float* %31, align 4
  %33 = fmul float %4, %32
  %34 = getelementptr inbounds float, float* %1, i64 16
  %35 = insertelement <4 x float> undef, float %33, i32 0
  %36 = shufflevector <4 x float> %35, <4 x float> undef, <4 x i32> zeroinitializer
  %37 = bitcast float* %34 to <4 x float>*
  store <4 x float> %36, <4 x float>* %37, align 4
  %38 = getelementptr inbounds float, float* %0, i64 5
  %39 = load float, float* %38, align 4
  %40 = fmul float %4, %39
  %41 = getelementptr inbounds float, float* %1, i64 20
  %42 = insertelement <4 x float> undef, float %40, i32 0
  %43 = shufflevector <4 x float> %42, <4 x float> undef, <4 x i32> zeroinitializer
  %44 = bitcast float* %41 to <4 x float>*
  store <4 x float> %43, <4 x float>* %44, align 4
  %45 = getelementptr inbounds float, float* %0, i64 6
  %46 = load float, float* %45, align 4
  %47 = fmul float %4, %46
  %48 = getelementptr inbounds float, float* %1, i64 24
  %49 = insertelement <4 x float> undef, float %47, i32 0
  %50 = shufflevector <4 x float> %49, <4 x float> undef, <4 x i32> zeroinitializer
  %51 = bitcast float* %48 to <4 x float>*
  store <4 x float> %50, <4 x float>* %51, align 4
  %52 = getelementptr inbounds float, float* %0, i64 7
  %53 = load float, float* %52, align 4
  %54 = fmul float %4, %53
  %55 = getelementptr inbounds float, float* %1, i64 28
  %56 = insertelement <4 x float> undef, float %54, i32 0
  %57 = shufflevector <4 x float> %56, <4 x float> undef, <4 x i32> zeroinitializer
  %58 = bitcast float* %55 to <4 x float>*
  store <4 x float> %57, <4 x float>* %58, align 4
  %59 = getelementptr inbounds float, float* %0, i64 8
  %60 = load float, float* %59, align 4
  %61 = fmul float %4, %60
  %62 = getelementptr inbounds float, float* %1, i64 32
  %63 = insertelement <4 x float> undef, float %61, i32 0
  %64 = shufflevector <4 x float> %63, <4 x float> undef, <4 x i32> zeroinitializer
  %65 = bitcast float* %62 to <4 x float>*
  store <4 x float> %64, <4 x float>* %65, align 4
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
