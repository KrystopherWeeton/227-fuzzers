; ModuleID = '../../extensions/browser/api/declarative_net_request/rules_count_pair.cc'
source_filename = "../../extensions/browser/api/declarative_net_request/rules_count_pair.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.extensions::declarative_net_request::RulesCountPair" = type { i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type opaque

@.str = private unnamed_addr constant [30 x i8] c"rule_count >= that.rule_count\00", align 1
@.str.1 = private unnamed_addr constant [73 x i8] c"../../extensions/browser/api/declarative_net_request/rules_count_pair.cc\00", align 1
@.str.2 = private unnamed_addr constant [42 x i8] c"regex_rule_count >= that.regex_rule_count\00", align 1

@_ZN10extensions23declarative_net_request14RulesCountPairC1Ev = hidden unnamed_addr alias void (%"struct.extensions::declarative_net_request::RulesCountPair"*), void (%"struct.extensions::declarative_net_request::RulesCountPair"*)* @_ZN10extensions23declarative_net_request14RulesCountPairC2Ev
@_ZN10extensions23declarative_net_request14RulesCountPairC1Emm = hidden unnamed_addr alias void (%"struct.extensions::declarative_net_request::RulesCountPair"*, i64, i64), void (%"struct.extensions::declarative_net_request::RulesCountPair"*, i64, i64)* @_ZN10extensions23declarative_net_request14RulesCountPairC2Emm

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions23declarative_net_request14RulesCountPairC2Ev(%"struct.extensions::declarative_net_request::RulesCountPair"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.extensions::declarative_net_request::RulesCountPair"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions23declarative_net_request14RulesCountPairC2Emm(%"struct.extensions::declarative_net_request::RulesCountPair"* nocapture, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %0, i64 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %0, i64 0, i32 1
  store i64 %2, i64* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(16) %"struct.extensions::declarative_net_request::RulesCountPair"* @_ZN10extensions23declarative_net_request14RulesCountPairpLERKS1_(%"struct.extensions::declarative_net_request::RulesCountPair"* returned, %"struct.extensions::declarative_net_request::RulesCountPair"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %4
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %1, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, %9
  store i64 %12, i64* %10, align 8
  ret %"struct.extensions::declarative_net_request::RulesCountPair"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"struct.extensions::declarative_net_request::RulesCountPair"* @_ZN10extensions23declarative_net_request14RulesCountPairmIERKS1_(%"struct.extensions::declarative_net_request::RulesCountPair"* returned, %"struct.extensions::declarative_net_request::RulesCountPair"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %1, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp ult i64 %12, %14
  br i1 %16, label %18, label %17

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %10, align 8
  br label %27

18:                                               ; preds = %2
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %12) #7
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %14) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* %19, i8* %20) #7
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %10, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 23, %"class.logging::CheckOpResult"* nonnull %5) #7
  %26 = call %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #7
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  %28 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %0, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %1, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = icmp ult i64 %31, %33
  br i1 %35, label %37, label %36

36:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %29, align 8
  br label %46

37:                                               ; preds = %27
  %38 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %31) #7
  %39 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i8* %38, i8* %39) #7
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %41, i8** %29, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 24, %"class.logging::CheckOpResult"* nonnull %7) #7
  %45 = call %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #7
  br label %46

46:                                               ; preds = %36, %37, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  %47 = load i64, i64* %13, align 8
  %48 = load i64, i64* %11, align 8
  %49 = sub i64 %48, %47
  store i64 %49, i64* %11, align 8
  %50 = load i64, i64* %32, align 8
  %51 = load i64, i64* %30, align 8
  %52 = sub i64 %51, %50
  store i64 %52, i64* %30, align 8
  ret %"struct.extensions::declarative_net_request::RulesCountPair"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN10extensions23declarative_net_requestplERKNS0_14RulesCountPairES3_(%"struct.extensions::declarative_net_request::RulesCountPair"* nocapture readonly dereferenceable(16), %"struct.extensions::declarative_net_request::RulesCountPair"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 {
  %3 = bitcast %"struct.extensions::declarative_net_request::RulesCountPair"* %0 to <2 x i64>*
  %4 = load <2 x i64>, <2 x i64>* %3, align 8
  %5 = bitcast %"struct.extensions::declarative_net_request::RulesCountPair"* %1 to <2 x i64>*
  %6 = load <2 x i64>, <2 x i64>* %5, align 8
  %7 = add <2 x i64> %6, %4
  %8 = extractelement <2 x i64> %7, i32 0
  %9 = insertvalue { i64, i64 } undef, i64 %8, 0
  %10 = extractelement <2 x i64> %7, i32 1
  %11 = insertvalue { i64, i64 } %9, i64 %10, 1
  ret { i64, i64 } %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN10extensions23declarative_net_requestmiERKNS0_14RulesCountPairES3_(%"struct.extensions::declarative_net_request::RulesCountPair"* nocapture readonly dereferenceable(16), %"struct.extensions::declarative_net_request::RulesCountPair"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 {
  %3 = alloca %"struct.extensions::declarative_net_request::RulesCountPair", align 8
  %4 = bitcast %"struct.extensions::declarative_net_request::RulesCountPair"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #7
  %5 = bitcast %"struct.extensions::declarative_net_request::RulesCountPair"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = call dereferenceable(16) %"struct.extensions::declarative_net_request::RulesCountPair"* @_ZN10extensions23declarative_net_request14RulesCountPairmIERKS1_(%"struct.extensions::declarative_net_request::RulesCountPair"* nonnull %3, %"struct.extensions::declarative_net_request::RulesCountPair"* dereferenceable(16) %1)
  %7 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %6, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %6, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #7
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10extensions23declarative_net_requesteqERKNS0_14RulesCountPairES3_(%"struct.extensions::declarative_net_request::RulesCountPair"* nocapture readonly dereferenceable(16), %"struct.extensions::declarative_net_request::RulesCountPair"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
