; ModuleID = '../../third_party/libvpx/source/libvpx/vpx_dsp/prob.c'
source_filename = "../../third_party/libvpx/source/libvpx/vpx_dsp/prob.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@vpx_norm = hidden local_unnamed_addr constant <{ [128 x i8], [128 x i8] }> <{ [128 x i8] c"\00\07\06\06\05\05\05\05\04\04\04\04\04\04\04\04\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01", [128 x i8] zeroinitializer }>, align 16
@count_to_update_factor = internal unnamed_addr constant [21 x i32] [i32 0, i32 6, i32 12, i32 19, i32 25, i32 32, i32 38, i32 44, i32 51, i32 57, i32 64, i32 70, i32 76, i32 83, i32 89, i32 96, i32 102, i32 108, i32 115, i32 121, i32 128], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @vpx_tree_merge_probs(i8*, i8*, i32*, i8*) local_unnamed_addr #0 {
  %5 = tail call fastcc i32 @tree_merge_probs_impl(i32 0, i8* %0, i8* %1, i32* %2, i8* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @tree_merge_probs_impl(i32, i8*, i8*, i32*, i8*) unnamed_addr #0 {
  %6 = zext i32 %0 to i64
  %7 = getelementptr inbounds i8, i8* %1, i64 %6
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i32
  %10 = icmp slt i8 %8, 1
  br i1 %10, label %11, label %16

11:                                               ; preds = %5
  %12 = sub nsw i32 0, %9
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i32, i32* %3, i64 %13
  %15 = load i32, i32* %14, align 4
  br label %18

16:                                               ; preds = %5
  %17 = tail call fastcc i32 @tree_merge_probs_impl(i32 %9, i8* %1, i8* %2, i32* %3, i8* %4)
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i32 [ %15, %11 ], [ %17, %16 ]
  %20 = add i32 %0, 1
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %1, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp slt i8 %23, 1
  br i1 %25, label %26, label %31

26:                                               ; preds = %18
  %27 = sub nsw i32 0, %24
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %3, i64 %28
  %30 = load i32, i32* %29, align 4
  br label %33

31:                                               ; preds = %18
  %32 = tail call fastcc i32 @tree_merge_probs_impl(i32 %24, i8* %1, i8* %2, i32* %3, i8* %4)
  br label %33

33:                                               ; preds = %31, %26
  %34 = phi i32 [ %30, %26 ], [ %32, %31 ]
  %35 = lshr i32 %0, 1
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %2, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = add i32 %34, %19
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %70, label %41

41:                                               ; preds = %33
  %42 = icmp ult i32 %39, 20
  %43 = select i1 %42, i32 %39, i32 20
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds [21 x i32], [21 x i32]* @count_to_update_factor, i64 0, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %19 to i64
  %48 = shl nuw nsw i64 %47, 8
  %49 = lshr i32 %39, 1
  %50 = zext i32 %49 to i64
  %51 = add nuw nsw i64 %48, %50
  %52 = zext i32 %39 to i64
  %53 = udiv i64 %51, %52
  %54 = trunc i64 %53 to i32
  %55 = sub nsw i32 255, %54
  %56 = lshr i32 %55, 23
  %57 = or i32 %56, %54
  %58 = icmp eq i32 %54, 0
  %59 = zext i1 %58 to i32
  %60 = zext i8 %38 to i32
  %61 = and i32 %57, 255
  %62 = or i32 %61, %59
  %63 = sub nsw i32 256, %46
  %64 = mul nsw i32 %63, %60
  %65 = mul nsw i32 %62, %46
  %66 = add i32 %64, 128
  %67 = add i32 %66, %65
  %68 = lshr i32 %67, 8
  %69 = trunc i32 %68 to i8
  br label %70

70:                                               ; preds = %33, %41
  %71 = phi i8 [ %69, %41 ], [ %38, %33 ]
  %72 = getelementptr inbounds i8, i8* %4, i64 %36
  store i8 %71, i8* %72, align 1
  ret i32 %39
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
